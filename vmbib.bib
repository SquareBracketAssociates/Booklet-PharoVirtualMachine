@inproceedings{Bera14a,
  author = {B{\'e}ra, Cl{\'e}ment and Miranda, Eliot},
  title = {A bytecode set for adaptive optimizations},
  booktitle = {International Workshop on Smalltalk Technologies (IWST)},
  year = {2014},
  pdf = {http://rmod-files.lille.inria.fr/Team/Texts/Papers/Bera14a-IWST-BytecodeSet.pdf},
  annote = {internationalworkshop},
  keywords = {lse-pub},
  month = aug,
  hal-url = {http://hal.inria.fr/hal-01088801},
  hal-id = {hal-01088801}}
  
@inproceedings{Bera16b,
  author = {B\'era, Cl\'ement},
  title = {A low Overhead Per Object Write Barrier for the Cog VM},
  booktitle = {International Workshop on Smalltalk Technologies {IWST'16}},
  year = {2016},
  doi = {10.1145/2991041.2991063},
  pdf = {http://rmod-files.lille.inria.fr/Team/Texts/Papers/Bera16b-IWST16-WriteBarrier.pdf},
  address = {Prague, Czech Republic},
  hal-url = {http://hal.inria.fr/hal-01356338},
  hal-id = {hal-01356338},
  keywords = {lse-pub},
  month = aug,
  annote = {internationalworkshop}}

@article{ACM94a,
  author = {{ACM}},
  title = {High Performance Computing},
  journal = {Communications of the ACM},
  volume = {37},
  year = {1994},
  institution = {ACM},
  month = apr,
  number = {4}}

@manual{ANSI83a,
  title = {IEEE Standard Glossary of Software Engineering Terminology},
  year = {1983},
  address = {New York},
  organization = {ANSI/IEEE Standard 729-1983}}

@manual{ANSI98a,
  title = {{A}merican {N}ational {S}tandard for {I}nformation {S}ystems -- {P}rogramming {L}anguages -- {S}malltalk, ANSI/INCITS 319-1998},
  year = {1998},
  address = {New York},
  note = {\url{http://wiki.squeak.org/squeak/uploads/172/standard\_v1\_9-indexed.pdf}},
  organization = {ANSI}}


@article{Abbo84a,
  author = {C. Abbott},
  title = {Intervention Schedules for Real-Time Programming},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-10},
  pages = {268--274},
  year = {1984},
  month = may,
  number = {3}}

@inproceedings{Abda86a,
  author = {S. Kamal Abdali and Guy W. Cherry and Neil Soiffer},
  title = {A {Smalltalk} System for Algebraic Manipulation},
  booktitle = {Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA '86)},
  pages = {277--283},
  year = {1986},
  month = nov}

@article{Abde17a,
  author = {Vahdat Abdelzad and Timothy C. Lethbridge},
  title = {Promoting traits into model-driven development},
  journal = {Software System Modeling},
  publisher = {Springer},
  year = {2017}}




@inproceedings{Abeb09a,
  author = {Abebe, Surafel Lemma and Haiduc, Sonia and Marcus, Andrian and Tonella, Paolo and Antoniol, Giuliano},
  title = {Analyzing the Evolution of the Source Code Vocabulary},
  booktitle = {Proceedings of the 2009 European Conference on Software Maintenance and Reengineering},
  pages = {189--198},
  publisher = {IEEE Computer Society},
  year = {2009},
  isbn = {978-0-7695-3589-0},
  series = {CSMR'09}}

@inproceedings{Abeb09b,
  author = {Abebe, S.L. and Haiduc, S. and Tonella, P. and Marcus, A.},
  title = {Lexicon Bad Smells in Software},
  booktitle = {Working Conference on Reverse Engineering ({{WCRE}} '09)},
  pages = {95--99},
  year = {2009},
  doi = {10.1109/{WCRE}.2009.26},
  abstract = {We introduce the notion of "lexicon bad smell",
which parallels that of "code smell" and indicates some potential
lexicon construction problems that can be addressed through refactoring
(e.g., renaming). We created a catalog of lexicon bad smells and we
developed a publicly available suite of detectors to locate them. The
paper presents a case study in which we used the detectors on two
open-source systems. The study revealed the main challenges faced in
detecting the lexicon bad smells.},
  address = {Little, France},
  month = oct}

@inproceedings{Abeb11a,
  author = {Abebe, S.L. and Haiduc, S. and Tonella, P. and Marcus, A.},
  title = {The Effect of Lexicon Bad Smells on Concept Location in Source Code},
  booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM}'11)},
  pages = {125--134},
  year = {2011},
  doi = {10.1109/SCAM.2011.18},
  abstract = {Experienced programmers choose identifier names
carefully, in the attempt to convey information about the role and
behavior of the labeled code entity in a concise and expressive way. In
fact, during program understanding the names given to code entities
represent one of the major sources of information used by developers. We
conjecture that lexicon bad smells, such as, extreme contractions,
inconsistent term use, odd grammatical structure, etc., can hinder the
execution of maintenance tasks which rely on program understanding. We
propose an approach to determine the extent of this impact and
instantiate it on the task of concept location. In particular, we
conducted a study on two open source software systems where we
investigated how lexicon bad smells affect Information Retrieval-based
concept location. In this study, the classes changed in response to past
modification requests are located before and after lexicon bad smells
are identified and removed from the source code. The results indicate
that lexicon bad smells impact concept location when using IR-based
techniques.},
  address = {Williamsburg, VA, USA},
  month = sep}

@inproceedings{Abel04a,
  author = {James Abello and Frank van Ham},
  title = {Matrix Zoom: A Visual Interface to Semi-External Graphs},
  booktitle = {10th IEEE Symposium on Information Visualization (InfoVis 2004), 10-12 October 2004, Austin, TX, USA},
  pages = {183-190},
  publisher = {IEEE Computer Society},
  year = {2004},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {10.1109/INFOVIS.2004.46},
  isbn = {0-7803-8779-1}}

@book{Abel86,
  author = {Harold Abelson and Andrea diSessa},
  title = {Turtle Geometry},
  publisher = {MIT Press},
  year = {1986},
  isbn = {0-262-51037-5}}

@book{Abel91a,
  author = {Harold Abelson and Gerald Jay Sussman and Julie Sussman},
  title = {Structure and interpretation of computer programs},
  publisher = {McGraw-Hill},
  year = {1991},
  url = {http://mitpress.mit.edu/sicp/full-text/book/book.html},
  isbn = {0-262-01077-1},
  series = {MIT electrical engineering and computer science series}}

@techreport{Abit89a,
  author = {Serge Abiteboul and Paris C. Kanellakis},
  title = {Object Identity as Query Language Primitive},
  year = {1989},
  institution = {INRIA},
  month = apr,
  note = {To appear, JACM},
  number = {1022},
  type = {Report no.}}

@book{Abma03,
  author = {Abmann Uwe},
  title = {Invasive Software Composition},
  publisher = {Springer-Verlag},
  year = {2003},
  isbn = {3-540-44385-1}}

@inproceedings{Abou02a,
  author = {Mohamed Ibrahim Abouelhoda and Enno Ohlebusch and Stefan Kurtz},
  title = {Optimal exact string matching based on suffix arrays},
  booktitle = {Proc. of the Ninth Int. Symposium on String Processing and Information Retrieval},
  publisher = {Springer Verlag},
  year = {2002},
  series = {LNCS}}

@inproceedings{Abow00a,
  author = {Gregory D. Abowd and Anind K. Dey},
  title = {Towards a Better Understanding of Context and Context-Awareness},
  booktitle = {Proceedings of the CHI 2000 Workshop on the What, Who, Where, When and How of Context-Awareness},
  publisher = {ACM Press, New York.},
  year = {2000},
  url = {ftp://ftp.cc.gatech.edu/pub/gvu/tr/1999/99-22.pdf}}

@inproceedings{Abow93a,
  author = {Gregory Abowd and Robert Allen and David Garlan},
  title = {Using Style to Understand Descriptions of Software Architecture},
  booktitle = {Proceedings SIGSOFT 93, ACM Software Engineering Notes},
  volume = 18,
  pages = {9--20},
  year = {1993},
  month = dec}

@techreport{Abow95a,
  author = {Gregory Abowd and Robert Allen and David Garlan},
  title = {Formalizing Style to Understand Descriptions of Software Architecture},
  year = {1995},
  url = {ftp://reports.adm.cs.cmu.edu/usr/anon/1995/CMU-CS-95-111.ps},
  institution = {Carnegie Mellon University},
  month = jan,
  type = {{CMU-CS-95-111}}}

@article{Abow95b,
  author = {Gregory Abowd and Robert Allen and David Garlan},
  title = {Formalizing Style to Understand Descriptions of Software Architecture},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {4},
  pages = {319--364},
  year = {1995},
  month = oct,
  number = {4}}


@techreport{Abra04a,
  author = {A. Abran and P. Bourque and R. Dupuis and L.L. Tripp},
  title = {Guide to the software engineering body of knowledge (ironman version)},
  year = {2004},
  institution = {IEEE Computer Society}}

@article{Abra87a,
  author = {Samson Abramsky},
  title = {Observation Equivalence as a Testing Equivalence},
  journal = {Theoretical Computer Science},
  volume = {53},
  pages = {225--241},
  publisher = {North-Holland},
  year = {1987}}

@techreport{Abra90a,
  author = {Samson Abramsky},
  title = {Computational Interpretations of Linear Logic},
  year = {1990},
  address = {London},
  institution = {Imperial College},
  month = oct,
  number = {90/20},
  type = {Research Report DOC}}

@incollection{Abra90b,
  author = {Samson Abramsky},
  title = {The Lazy Lambda Calculus},
  booktitle = {Research Topics in Functional Programming},
  pages = {65--116},
  publisher = {Addison Wesley},
  year = {1990},
  address = {Reading, Mass.},
  editor = {D.A. Turner}}

@book{Abra91a,
  title = {Proceedings {TAPSOFT}'91: Volume 1},
  volume = {493},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Brighton, UK},
  editor = {S. Abramsky and T.S.E. Mailbaum},
  isbn = {3-540-53982-4},
  month = apr,
  series = {LNCS}}

@book{Abra91b,
  title = {Proceedings {TAPSOFT}'91: Volume 2},
  volume = {494},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Brighton, UK},
  editor = {S. Abramsky and T.S.E. Mailbaum},
  isbn = {3-540-53981-6},
  month = apr,
  series = {LNCS}}

@misc{Abra92a,
  author = {Samson Abramsky},
  title = {An Introduction to ``On the $\pi$-Calculus and Linear Logic'' by Gianluigi Bellin and Philip Scott},
  year = {1992},
  note = {Following Lecture Material on ``Proofs and Processes''}}

@article{Abra93a,
  author = {Samson Abramsky and C.-H. Luke On},
  title = {Full Abstraction in the Lazy Lambda Calculus},
  journal = {Information and Computation},
  volume = {105},
  pages = {159--267},
  publisher = {Academic Press},
  year = {1993},
  month = aug,
  number = {2}}

@inproceedings{Abra95a,
  author = {Abramson, David and Foster, Ian and Michalakes, John and Sosic, R.},
  title = {Relative Debugging and its Application to the Development of Large Numerical Models},
  booktitle = {In proceedings of IEEE supercomputing},
  year = {1995}}

@inproceedings{Abre01a,
  author = {Abreu, Fernando Brito and Goul\~ao, Miguel},
  title = {Coupling and Cohesion as Modularization Drivers: Are We Being Over-Persuaded?},
  booktitle = {CSMR '01: Proceedings of the Fifth European Conference on Software Maintenance and Reengineering},
  pages = {47--57},
  publisher = {IEEE Computer Society},
  year = {2001},
  address = {Washington, DC, USA},
  isbn = {0-7695-1028-0}}

@article{AbuG04a,
  author = {Nayef Abu-Ghazaleh and Michael J. Lewis and Madhusudhan Govindaraju},
  title = {Performance of Dynamic Resizing of Message Fields for Differential Serialization of SOAP Messages},
  journal = {Proccedings of the International Symposium on Web Services and Applications},
  year = {2004},
  month = jun,
  page = {783--789}}

@article{AbuG04b,
  author = {Nayef Abu-Ghazaleh and Madhusudhan Govindaraju and Michael J. Lewis},
  title = {Optimizing Performance of Web Services with Chunk-Overlaying and Pipelined-Send},
  journal = {Proceedings of the International Conference on Internet Computing (ICIC)},
  year = {June 2004},
  page = {482--485}}

@inproceedings{AbuG04c,
  author = {Nayef Abu-Ghazaleh and Michael J. Lewis and Madhusudhan Govindaraju},
  title = {Differential Serialization for Optimized SOAP Performance},
  booktitle = {HPDC '04: Proceedings of the 13th IEEE International Symposium on High Performance Distributed Computing (HPDC'04)},
  pages = {55--64},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/HPDC.2004.8},
  address = {Washington, DC, USA},
  isbn = {0-7803-2175-4}}

@article{Aceb02a,
  author = {C\'esar F. Acebal and Ra\'ul Izquierdo Castanedo and Juan M. Cueva Lovelle},
  title = {Good design principles in a compiler university course},
  journal = {SIGPLAN Not.},
  volume = {37},
  pages = {62--73},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/510857.510870},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {4}}

@book{Acet07a,
  author = {Aceto, Luca},
  title = {Reactive systems},
  publisher = {lua.org},
  year = {2006}}

@inproceedings{Acha93a,
  author = {Bruno Achauer},
  title = {Implementation of Distributed Trellis},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {103--117},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {DOWL is an extension of the Trellis language
supporting distribution. It allows programmers to
transparently invoke operations on remote objects
and to move objects between the nodes of a
distributed system. A few primitives permit the
programmer to take full advantage of distribution
and to tune performance; most notably by restricting
the mobility of objects and specifying which objects
should move together. This paper describes the
implementation of these extensions: the object
format, communication system and the mechanism to
invoke operations on remote objects. Performance
figures are also presented.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Ache00a,
  author = {Franz Achermann and Stefan Kneub\"uhl and Oscar Nierstrasz},
  title = {Scripting Coordination Styles},
  booktitle = {Coordination '2000},
  volume = 1906,
  pages = {19--35},
  publisher = {Springer-Verlag},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/Ache00aScriptingCoordStyles.pdf},
  doi = {10.1007/3-540-45263-X_2},
  abstract = {The fact that so many different kinds of
coordination models and languages have been proposed
suggests that no one single approach will be the
best for all coordination problems. Different
coordination styles exhibiting different properties
may be more suitable for some problems than others.
Like other architectural styles, coordination styles
can be expressed in terms of components, connectors
and composition rules. We propose an approach in
which coordination styles are expressed as component
algebras: components of various sorts can be
combined using operators that realize their
coordination, yielding other sorts of components. We
show how several coordination styles can be defined
and applied using Piccola, a small language for
composing software components. We furthermore show
how glue abstractions can be used to bridge
coordination styles when more than one style is
needed for a single application.},
  address = {Limassol, Cyprus},
  editor = {Ant{\'o}nio Porto and Gruia-Catalin Roman},
  isbn = {978-3-540-41020-1},
  month = sep,
  series = {LNCS}}

@inproceedings{Ache00b,
  author = {Franz Achermann and Oscar Nierstrasz},
  title = {Explicit Namespaces},
  booktitle = {Modular Programning Languages, Proceedings of JMLC 2000 (Joint Modular Languages Conference)},
  volume = 1897,
  pages = {77--89},
  publisher = {Springer-Verlag},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/Ache00bExplicitNamespaces.pdf},
  doi = {10.1007/10722581_8},
  abstract = {A namespace is a mapping from labels to values. Most
programming languages support different forms of
namespaces, such as records, dictionaries, objects,
environments, packages and even keyword based
parameters. Typically only a few of these notions
are first-class, leading to arbitrary restrictions
and limited abstraction power in the host language.
Piccola is a small language that unifies various
notions of namespaces as first-class forms, or
extensible, immutable records. By making namespaces
explicit, Piccola is easily able to express various
abstractions that would normally require more
heavyweight techniques, such as language extensions
or metaprogramming.},
  address = {Z{\"u}rich, Switzerland},
  editor = {J{\"u}rg Gutknecht and Wolfgang Weck},
  isbn = {978-3-540-67958-5},
  month = sep,
  series = {LNCS}}

@inproceedings{Ache00d,
  author = {Franz Achermann},
  title = {Language support for feature mixing},
  booktitle = {Workshop on Multi-Dimensional Separation of Concerns in Software Engineering (ICSE 2000)},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/Ache00dFeatureMixing.pdf},
  abstract = {Object oriented languages cannot express certain
composition abstractions due to restricted
abstraction power. A number of approaches, like SOP
or AOP overcome this restriction, thus giving the
programmer more possibilities to get a higher degree
of separation of concern. We propose \emph{forms},
extensible mappings from labels to values, as
vehicle to implement and reason about composition
abstractions. Forms unify a variety of concepts such
as interfaces, environments, and contexts. We are
prototyping a composition language where forms are
the only and ubiquitous first class value. Using
forms, it is possible compose software artifacts
focusing on a single concern and thus achieve a high
degree of separation of concern. We believe that
using forms it also possible to compare and reason
about the different composition mechanisms
proposed.},
  address = {Limerick, Ireland},
  month = jun}

@incollection{Ache01a,
  author = {Franz Achermann and Oscar Nierstrasz},
  title = {Applications = Components + Scripts --- A Tour of {Piccola}},
  booktitle = {Software Architectures and Component Technology},
  pages = {261--292},
  publisher = {Kluwer},
  year = {2001},
  url = {http://scg.unibe.ch/archive/papers/Ache01aTour.pdf},
  abstract = {Piccola is a language for composing applications
from software components. It has a small syntax and
a minimal set of features needed for specifying
different styles of software composition. The core
features of Piccola are communicating agents, which
perform computations, and forms, which are the
communicated values. Forms are a special notion of
extensible, immutable records. Forms and agents
allow us to unify components, static and dynamic
contexts and arguments for invoking services.
Through a series of examples, we present a tour of
Piccola, illustrating how forms and agents suffice
to express a variety of compositional abstractions
and styles.},
  editor = {Mehmet Aksit},
  isbn = {0-7923-7576-9}}

@incollection{Ache01b,
  author = {Franz Achermann and Markus Lumpe and Jean-Guy Schneider and Oscar Nierstrasz},
  title = {Piccola --- a Small Composition Language},
  booktitle = {Formal Methods for Distributed Processing --- A Survey of Object-Oriented Approaches},
  pages = {403--426},
  publisher = {Cambridge University Press},
  year = {2001},
  url = {http://scg.unibe.ch/archive/papers/Ache01bPASCL.pdf},
  abstract = {Although object-oriented languages are well-suited
to implementing software components, they fail to
shine in the construction of component-based
applications, largely because object-oriented design
tends to obscure a component-based architecture. We
propose to tackle this problem by clearly separating
component implementation and composition. Piccola is
a small "composition language" that embodies the
paradigm of "applications = components + scripts."
Piccola models components and composition
abstractions by means of a unifying foundation of
communicating concurrent agents. Flexibility and
extensibility are obtained by modelling both
interfaces to components and the contexts in which
they live by extensible records, or "forms". We
illustrate the realization of an architectural style
in Piccola and show how external components may be
adapted and composed according to the style. We show
how separating components from their composition can
improve maintainability.},
  editor = {Howard Bowman and John Derrick},
  isbn = {0-521-77184-6}}

@phdthesis{Ache02a,
  author = {Franz Achermann},
  title = {Forms, Agents and Channels --- Defining Composition Abstraction with Style},
  year = {2002},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/acherman-phd.pdf},
  abstract = {Object-oriented technology and design is not the
final answer to the recurrent problem of making
systems, on one hand, more open and flexible and, on
the other hand, more robust, safe, and fast. While
object-oriented languages have a lot of success in
implementing components, they have rather limited
support for expressing composition abstractions. As
such, the component-based software principle is only
partially supported by the object-oriented approach.
Component-based software development breaks down an
application into stable parts, i.e., the components,
and high-level abstractions for composing the
components. Flexibility is provided by the
possibility to recompose. How can we design a
composition language to support this metaphor? What
mechanisms are needed to encapsulate components, to
make their contextual assumptions explicit, and to
define composition abstractions in a compact way? We
argue that we should seek the minimal kernel of
mechanisms that allows us to define composition
abstractions, instead of adding additional language
constructs to the object-oriented paradigm. This is
necessary in order to reason about these
abstractions and derive properties of the composed
application. In this thesis we propose Forms, Agents
and Channels as this minimal set of abstractions.
Forms are extensible records unified with services.
They are primitive objects, act as explicit
namespaces, and encapsulate arguments to invoke
services. Agents are autonomous entities that
exchange forms along channels. We show that this
simple model is expressive enough to define
high-level composition abstractions while being
small enough to be mathematically tractable. We
present the formal model of forms, agents and
channels in terms of a composition calculus. We
encode the composition calculus into the
asynchronous pi-calculus and show the soundness of
this encoding. We define the composition language
Piccola on top of the composition calculus by adding
some syntactic sugar and by defining a bridge to
access external components. The usefulness of
Piccola is demonstrated by defining composition
abstractions and reasoning about them at the level
of the language. We present several kinds of
composition abstractions: wrappers to adapt
components, connectors to implement composition
styles, and coordination abstractions that cross-cut
the functional decomposition of a system. We also
demonstrate how to reason about composition and how
to use glue code to detect and fix compositional
mismatches.},
  month = jan}

@article{Ache05a,
  author = {Franz Achermann and Oscar Nierstrasz},
  title = {A Calculus for Reasoning about Software Components},
  journal = {Theoretical Computer Science},
  volume = {331},
  pages = {367--396},
  year = {2005},
  url = {http://scg.unibe.ch/archive/papers/Ache05{API}ccolaReasoning.pdf},
  doi = {10.1016/j.tcs.2004.09.022},
  abstract = {Although the term ``software component'' has become
commonplace, there is no universally accepted
definition of the term, nor does there exist a
common foundation for specifying various kinds of
components and their compositions. We propose such a
foundation. The Piccola Calculus is a process
calculus, based on the asynchronous pi-calculus,
extended with explicit namespaces. The calculus is
high-level, rather than minimal, and is consequently
convenient for expressing and reasoning about
software components, and different styles of
composition. We motivate and present the calculus,
and outline how it is used to specify the semantics
of Piccola, a small composition language. We
demonstrate how the calculus can be used to simplify
compositions by partial evaluation, and we briefly
outline some other applications of the calculus to
reasoning about compositional styles.},
  cvs = {PiccolaReasoning},
  number = {2-3}}

@inproceedings{Acke93a,
  author = {Philipp Ackermann},
  title = {Object-Oriented Modelling of Time Synchonisation in a Multimedia Application Framework},
  booktitle = {Proceedings of AES '93 95th Convention},
  pages = {1--11},
  publisher = {The Audio Engineering Society},
  year = {1993},
  month = oct}

@techreport{Acke94a,
  author = {Philipp Ackermann},
  title = {Direct Manipulation of Temporal Structures in a Multimedia Application Framework},
  year = {1994},
  institution = {University of Zurich Multimedia Laboratory},
  month = mar,
  number = {94-07/e},
  type = {Technical Report}}

@book{Acke96a,
  author = {Philipp Ackermann},
  title = {Developing Object-Oriented Multimedia Software},
  publisher = {dpunkt},
  year = {1996},
  address = {Heidelberg},
  isbn = {3-920993-52-7}}

@inproceedings{Adam07a,
  author = {Bram Adams and Kris {De Schutter} and Herman Tromp and Wolfgang De Meuter},
  title = {Design recovery and maintenance of build systems},
  booktitle = {Proceedings of the 23rd International Conference on Software Maintenance ({ICSM})},
  pages = {114--123},
  publisher = {IEEE Computer Society},
  year = {2007},
  address = {Paris, France},
  editor = {Ladan Tahvildari and Gerardo Canfora},
  month = oct}

@inproceedings{Adam09a,
  author = {Bram Adams},
  title = {Co-evolution of Source Code and the Build System - Impact on the Introduction of AOSD in Legacy Systems},
  booktitle = {PhD Symposium at the 25th IEEE International Conference on Software Maintenance ({ICSM})},
  year = {2009},
  address = {Edmonton, Canada},
  month = sep,
  note = {To appear}}

@misc{Adam14a,
      title={Towards Interactive, Incremental Programming of ROS Nodes},
      author={Sorin Adam and Ulrik Pagh Schultz},
      year={2014},
      eprint={1412.4714},
      archivePrefix={arXiv},
      primaryClass={cs.RO}
}

@inproceedings{Adam86a,
  author = {Adams, Evan and Gramlich, Wayne and Muchnick, Steven S. and Tirfing, Soren},
  title = {SunPro: engineering a practical program development environment},
  booktitle = {International workshop on Advanced programming environments},
  pages = {86--96},
  publisher = {Springer-Verlag},
  year = {1986},
  address = {London, UK},
  isbn = {0-387-17189-4},
  location = {Trondheim, Norway}}

@inproceedings{Adam88a,
  author = {Norman Adams and Jonathan Rees},
  title = {Object-Oriented Programming in Scheme},
  booktitle = {Conference Record of the 1988 ACM Conference on Lisp and Functional Programming},
  pages = {277--288},
  year = {1988},
  abstract = {A small set of additions to Scheme to support
object-oriented programming, including a form of
multiple inheritance is described. The extensions
proposed are in keeping with the spirit of the
Scheme language and consequently differ from
Lisp-based object systems such as Flavors and the
Common Lisp Object System. The extensions mesh
neatly with the underlying Scheme system. The
authors motivate the design with examples, and
describe implementation techniques that yields
efficiency comparable to dynamic object-oriented
language implementations considered to be high
performance. The complete design has an
almost-portable implementation, and the core of this
design comprises the object system used in T, a
dialect of Scheme. The applicative bias of the
approach is unusual in object- oriented programming
systems.},
  month = aug}

@inproceedings{Adam89a,
  author = {Sam S. Adams and Abdul K. Nabi},
  title = {Neural Agents --- {A} Frame of Mind},
  booktitle = {Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA'89)},
  volume = {24},
  pages = {139--150},
  year = {1989},
  month = oct}

@inproceedings{Addo98a,
  author = {Rogelio Addobbati and W. Lewis Johnson and Stacy Marsella},
  title = {Automatic Generation of Visual Presentations for Software Understanding},
  booktitle = {Proceedings of the California Software Symposium},
  year = {1998}}

@inproceedings{Ader90a,
  author = {Martin Ader and Oscar Nierstrasz and Stephen McMahon and Gerhard M{\"u}ller and Anna-Kristin Pr{\"o}frock},
  title = {The {ITHACA} Technology: {A} Landscape for Object-Oriented Application Development},
  booktitle = {Proceedings, Esprit 1990 Conference},
  pages = {31--51},
  publisher = {Kluwer Academic Publishers},
  year = {1990},
  url = {http://scg.unibe.ch/archive/osg/Ader90aITHACA.pdf},
  abstract = {The ITHACA environment offers an application support
system which incorporates advanced technologies in
the fields of object-oriented programming in general
and programming languages, database technologies,
user interface systems and software development
tools in particular. ITHACA provides an integrated
and open-ended toolkit which exploits the benefits
of object-oriented technologies for promoting
reusability, tailorability and integratability,
factors which are crucial for ensuring software
quality and productivity. Industrial applications
from the fields of office automation, public
administration, finance/insurance and chemical
engineering are developed in parallel and used to
evaluate the suitability of the system.},
  address = {Dordrecht, NL}}

@techreport{Ader94a,
  author = {Martin Ader and Gang Lu and Patrick Pons and Josep Monguio and Lose Lopez and Giorgio De Michelis and M. Antonietta Grasso and George Vlondakis},
  title = {WooRKS, an Object Oriented WorkflowSystem for Offices},
  year = {1994},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/ITHACA/WooRKS},
  abstract = {A lot of routine office tasks (e.g., processing an
order in a retail company) can be described as
structured recurring tascedures\fR)
whose basic items (called \fIactivities\fR) must be
performed by various persons and computers (called
\fIactors\fR) in a certain order (sequential or
parallel). Inside a procedure, the coordination
between actors in different places is asynchronous
and is characterized by the circulation of folders,
forms or papers. Many procedures can spread over
several weeks. \fIWoorks\fR is an object-oriented
workflow system designed to assist organizations in
defining, executing, coordinating, and monitoring
workflow procedures based on a shared environment.
WooRKS architecture relies on an object oriented
database management system upon which all the
objects are represented and supported by a UNIX (TM)
server, and clients distributed through TCP/IP
protocol runing Microsoft Windows (TM) or OSF/Motif
(TM). WooRKS incorporates several interrelated
models that can be used together or separately: an
\fIorganization model\fR for specifying the actors,
an \fIinformation module\fR for defining information
to be handled, a \fItime model\fR for controlling
when actions must be executed, an \fIoperator
model\fR for implementing atomic operations on
information, and a \fIprocedure model\fR for
combining together these various components. Through
the use of object oriented technologies, WooRKs
provides: a comprehensive system to design,
implement and administrate workflow applications; a
consistent set of high-level formalisms to describe
a workflow application; a powerful organizational
model; extensive time and external management
utilities; a graphical editor for the workflow
procedure definition; easy integration with existing
office applications; an informative and consistent
end user interface; discretionary security control;
and high reusability of software components enabling
quick delivery of customer-specified workflow
applications.},
  institution = {Bul S.A., T.A.O. S.A., Universit\'a di Milano, and Communication and Management Systems Unit},
  type = {ITHACA technical report}}

@inproceedings{Adjo14,
  author = {Adjoyan, Seza and Seriai, Abdelhak-Djamel and Shatnawi, Anas},
  title = {Service identification based on quality metrics object-oriented legacy system migration towards SOA},
  booktitle = {SEKE: Software Engineering and Knowledge Engineering},
  pages = {1--6},
  year = {2014},
  organization = {Knowledge Systems Institute Graduate School}}

@misc{Adlt03a,
  author = {Ali-Reza Adl-Tabatabai and A Dynamic and Compiler Managed},
  title = {The StarJIT Compiler: A Dynamic Compiler for Managed Runtime Environments},
  year = {2003}}

@inproceedings{Adlt06a,
  author = {Ali-Reza Adl-Tabatabai and Brian T. Lewis and Vijay Menon and Brian R. Murphy and Bratin Saha and Tatiana Shpeisman},
  title = {Compiler and runtime support for efficient software transactional memory},
  booktitle = {Conference on Programming Language Design and Implementation (PLDI'06)},
  pages = {26--37},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1133981.1133985},
  address = {New York, NY, USA},
  isbn = {1-59593-320-4},
  location = {Ottawa, Ontario, Canada}}

@manual{Adob90a,
  title = {PostScript Language Reference Manual},
  publisher = {Addison Wesley},
  year = {1990},
  isbn = {0-201-18127-4},
  organization = {Adobe Systems Incorporated}}

@book{Adob90b,
  author = {Adobe Systems Incorporated},
  title = {PostScript Language Tutorial and Cookbook},
  publisher = {Addison Wesley},
  year = {1990}}

@book{Adob90c,
  author = {Adobe Systems Incorporated},
  title = {PostScript Language Program Design},
  publisher = {Addison Wesley},
  year = {1990}}

@inproceedings{Adya02a,
  author = {Adya, Atul and Howell, Jon and Theimer, Marvin and Bolosky, William J. and Douceur, John R.},
  title = {Cooperative Task Management Without Manual Stack Management},
  booktitle = {ATEC '02: Proceedings of the General Track of the annual conference on USENIX Annual Technical Conference},
  pages = {289--302},
  publisher = {USENIX Association},
  year = {2002},
  address = {Berkeley, CA, USA},
  isbn = {1-880446-00-6}}

@mastersthesis{Aebi03a,
  author = {Tobias Aebi},
  title = {Extracting Architectural Information using Different Levels of Collaboration},
  year = {2003},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Aebi03a.pdf},
  abstract = {In software reengineering one of the main problems
is missing or out-of-date documentation of a system.
Considering not only the collaboration between the
components of the high-level model but also the
collaboration within the components improves
considerably the value of information the extracted
model provides. Our approach extracts dynamic and
static collaboration information of a system and
shows different levels of collaboration in one
single view without loosing the architectural
overview of the system. We validate the benefits of
our approach by comparing the high-level models
represented by collaboration-views to strict
high-level models based on structural information.
Our case studies show that we do not only reach
better understanding of the system but additionally
detect meaningful collaboration patterns and
possible unfavorable dependencies in the system.},
  month = sep,
  type = {Diploma Thesis}}

@inproceedings{Agad19a,
  author = {Agadakos, Ioannis and Jin, Di and Williams-King, David and Kemerlis, Vasileios P. and Portokalidis, Georgios},
  title = {Nibbler: Debloating Binary Shared Libraries},
  booktitle = {Proceedings of the 35th Annual Computer Security Applications Conference},
  pages = {70-83},
  publisher = {Association for Computing Machinery},
  year = {2019},
  url = {https://doi.org/10.1145/3359789.3359823},
  doi = {10.1145/3359789.3359823},
  abstract = {Developers today have access to an arsenal of toolkits and libraries for rapid application prototyping. However, when an application loads a library, the entirety of that library's code is mapped into the address space, even if only a single function is actually needed. The unused portion is bloat that can negatively impact software defenses by unnecessarily inflating their overhead or increasing their attack surface. Recent work has explored debloating as a way of alleviating the above problems, when source code is available. In this paper, we investigate whether debloating is possible and practical at the binary level. To this end, we present Nibbler: a system that identifies and erases unused functions within shared libraries. Nibbler works in tandem with defenses like continuous code re-randomization and control-flow integrity, enhancing them without incurring additional run-time overhead. We developed and tested a prototype of Nibbler on x86-64 Linux; Nibbler reduces the size of shared libraries and the number of available functions, for real-world binaries and the SPEC CINT2006 suite, by up to 56% and 82%, respectively. We also demonstrate that Nibbler benefits defenses by showing that: (i) it improves the deployability of a continuous re-randomization system for binaries, namely Shuffler, by increasing its efficiency by 20%, and (ii) it improves certain fast, but coarse and context-insensitive control-flow integrity schemes by reducing the number of gadgets reachable through returns and indirect calls by 75% and 49% on average.},
  address = {New York, NY, USA},
  isbn = {9781450376280},
  keywords = {software security, code debloating, static binary analysis},
  location = {San Juan, Puerto Rico, USA},
  numpages = {14},
  series = {ACSAC '19}}

@inproceedings{Agad19a,
  author = {Agadakos, Ioannis and Jin, Di and Williams-King, David and Kemerlis, Vasileios P. and Portokalidis, Georgios},
  title = {Nibbler: Debloating Binary Shared Libraries},
  booktitle = {Proceedings of the 35th Annual Computer Security Applications Conference},
  pages = {70-83},
  publisher = {Association for Computing Machinery},
  year = {2019},
  url = {https://doi.org/10.1145/3359789.3359823},
  doi = {10.1145/3359789.3359823},
  isbn = {9781450376280},
  address = {New York, NY, USA},
  abstract = {Developers today have access to an arsenal of toolkits and libraries for rapid application prototyping. However, when an application loads a library, the entirety of that library's code is mapped into the address space, even if only a single function is actually needed. The unused portion is bloat that can negatively impact software defenses by unnecessarily inflating their overhead or increasing their attack surface. Recent work has explored debloating as a way of alleviating the above problems, when source code is available. In this paper, we investigate whether debloating is possible and practical at the binary level. To this end, we present Nibbler: a system that identifies and erases unused functions within shared libraries. Nibbler works in tandem with defenses like continuous code re-randomization and control-flow integrity, enhancing them without incurring additional run-time overhead. We developed and tested a prototype of Nibbler on x86-64 Linux; Nibbler reduces the size of shared libraries and the number of available functions, for real-world binaries and the SPEC CINT2006 suite, by up to 56% and 82%, respectively. We also demonstrate that Nibbler benefits defenses by showing that: (i) it improves the deployability of a continuous re-randomization system for binaries, namely Shuffler, by increasing its efficiency by 20%, and (ii) it improves certain fast, but coarse and context-insensitive control-flow integrity schemes by reducing the number of gadgets reachable through returns and indirect calls by 75% and 49% on average.},
  numpages = {14},
  keywords = {software security, code debloating, static binary analysis},
  location = {San Juan, Puerto Rico, USA},
  series = {ACSAC '19}}

@inproceedings{Agar04a,
  author = {Rahul Agarwal and Scott D. Stoller},
  title = {Type Inference for Parameterized Race-Free Java},
  booktitle = {Proceedings of the 5th International Conference on Verification, Model Checking, and Abstract Interpretation (VMCAI'04)},
  pages = {149--160},
  year = {2004}}

@inproceedings{Ager97a,
  author = {E. Agerbo and A. Cornils},
  title = {Implementing {GoF} Design Patterns in {BETA}},
  booktitle = {Object-Oriented Technology (ECOOP '97 Workshop Reader)},
  volume = {1357},
  pages = {92--95},
  publisher = {Springer-Verlag},
  year = {1997},
  editor = {Jan Bosch and Stuart Mitchell}}

@article{Ages00a,
  title={Efficient object sampling via weak references},
  author={Agesen, Ole and Garthwaite, Alex},
  journal={ACM SIGPLAN Notices},
  volume={36},
  number={1},
  pages={121--126},
  year={2000},
  publisher={ACM New York, NY, USA}
}

@inproceedings{Ages93a,
  author = {Ole Agesen and Jens Palsberg and Michael I. Schwartzbach},
  title = {Type Inference of {SELF}: Analysis of Objects with Dynamic and Multiple Inheritance},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {247--267},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://www.cs.purdue.edu/homes/palsberg/publications.html},
  abstract = {We have designed and implemented a type inference
algorithm for the full Self language. The algorithm
can guarantee the safety and disambiguity of message
sends, and provide useful information for browsers
and optimizing compilers. Self features objects with
dynamic inheritance. This construct has until now
been considered incompatible with type inference
because it allows the inheritance graph to change
dynamically. Our algorithm handles this by deriving
and solving type constraints that simultaneously
define supersets of both the possible values of
expressions and of the possible inheritance graphs.
The apparent circularity is resolved by computing a
global fixed-point, in polynomial time. The
algorithm has been implemented and can successfully
handle the Self benchmark programs, which exist in
the "standard Self world" of more than 40,000 lines
of code.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Ages94a,
  author = {Ole Agesen and David Ungar},
  title = {Sifting Out the Gold --- Delivering Compact Applications from an Exploratory Object-Oriented Programming Environment},
  booktitle = {Proceedings OOPSLA '94},
  publisher = {Springer-Verlag},
  year = {1994},
  series = {LNCS}}

@inproceedings{Ages95a,
  author = {Ole Agesen},
  title = {The Cartesian Product Algorithm},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {2--26},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@manual{Ages95b,
  author = {Ole Agesen and Lars Bak and Craig Chambers and Bay-Wei Chan and Urs H{\"o}lzle and John Maloney and Randall B. Smith and David Ungar and Mario Wolczko},
  title = {The {SELF} 4.0 Programmer's Reference Manual},
  year = {1995},
  organization = {Sun Microsystems}}

@techreport{Ages95c,
  author = {Agesen, Ole and Holzle, Urs},
  title = {Type Feedback vs. Concrete Type Inference: A Comparison of Optimization Techniques for Object-Oriented Languages},
  publisher = {University of California at Santa Barbara},
  year = {1995},
  address = {Santa Barbara, CA, USA},
  institution = {Department of Computer Science, University of California, Santa Barbara},
  source = {http://www.cs.ucsb.edu/research/tech_reports/}}

@phdthesis{Ages96a,
  author = {Ole Agesen},
  title = {Concrete Type Inference: Delivering Object-Oriented Applications},
  year = {1996},
  school = {Stanford University},
  month = dec,
  type = {{Ph.D}. Thesis}}

@inproceedings{Agga06a,
  author = {Aggarwal, Ashish and Jalote, Pankaj},
  title = {Integrating Static and Dynamic Analysis for Detecting Vulnerabilities},
  booktitle = {International Computer Software and Applications Conference},
  pages = {343--350},
  year = {2006}}

@techreport{Agga15a,
  author = {Aggarwal, Karan and Salameh, Mohammad and Hindle, Abram},
  title = {Using machine translation for converting Python 2 to Python 3 code},
  year = {2015},
  institution = {PeerJ PrePrints}}

@article{Agha85a,
  author = {Gul Agha},
  title = {A Message-Passing Paradigm for Object Management},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {75--82},
  year = {1985},
  month = dec,
  number = {4}}

@article{Agha86a,
  author = {Gul Agha},
  title = {An Overview of Actor Languages},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {58--67},
  year = {1986},
  month = oct,
  number = {10}}

@book{Agha86b,
  author = {Gul Agha},
  title = {{ACTORS}: {A} Model of Concurrent Computation in Distributed Systems},
  publisher = {MIT Press},
  year = {1986},
  url = {http://dspace.mit.edu/handle/1721.1/6952},
  address = {Cambridge, Mass.},
  isbn = {0-262-01092-5}}

@inproceedings{Agha92a,
  author = {Gul Agha and S. Fr\/olund and R. Panwar and D. Sturman},
  title = {A Linguistic Framework for Dynamic Composition of Dependability Protocols},
  booktitle = {Proceedings of the IFIP Conference on Dependable Computing for Critical Applications},
  year = {1992},
  url = {ftp://biobio.cs.uiuc.edu/pub/papers/dcca3.ps.Z},
  abstract = {We present a language framework for describing
dependable systems which emphasizes {\it modularity}
and {\it composition}. Dependability and
functionality aspects of an application may be
described separately providing a separation of
design concerns. Furthermore, the dependability
protocols of an application may be constructed
bottom-up as simple protocols that are composed into
more complex protocols. Composition makes it easier
to reason about dependability and supports the
construction of general reusable dependability
schemes. A significant aspect of our language
framework is that dependability protocols may be
loaded into a running application and installed
dynamically. Dynamic installation makes it possible
to impose additional dependability protocols on a
server as clients with new dependability demands are
integrated into a system. Similarly, if a given
dependability protocol is only necessary during some
critical phase of execution, it may be installed
during that period only.},
  address = {Sicily}}

@techreport{Agha93a,
  author = {Gul Agha and Ian Mason and Scott Smith and Carolyn Talcott},
  title = {A Foundation for Actor Computation},
  year = {1993},
  url = {ftp://sail.stanford.edu/pub/MT/95actors.ps.Z},
  abstract = {We present an actor language which is an extension
of a simple functional language, and provide a
precise operational semantics for this extension.
Actor configurations are open distributed systems,
meaning we explicitly take into account the
interface with external components in the
specification of an actor system. We define and
study various notions of equivalence on actor
expressions and configurations.},
  institution = {UIUC},
  type = {technical report}}

@article{Agha93b,
  author = {Gul Agha and Svend Fr\/olund and Woo Young Kim and Rajendra Panwar and Anna Patterson and Daniel Sturman},
  title = {Abstraction and Modularity Mechanisms for Concurrent Computing},
  journal = {IEEE Parallel and Distributed Technology},
  pages = {3--14},
  year = {1993},
  month = may}

@inproceedings{Agha93c,
  author = {Gul Agha and C. J. Callsen},
  title = {ActorSpace: An Open Distributed Programming Paradigm},
  booktitle = {Conference on Principles and Practice of Parallel Programming},
  volume = {24},
  pages = {23--323},
  year = {1993}}

@book{Agha93d,
  title = {Research Directions in Concurrent Object-Oriented Programming},
  publisher = {MIT Press},
  year = {1993},
  editor = {Gul Agha and Peter Wegner and Akinori Yonezawa},
  isbn = {0-262-01139-5}}

@inproceedings{Agra03a,
  author = {Agrawal, Aditya and Karsai, Gabor and Ledeczi, Akos},
  title = {An End-to-end Domain-driven Software Development Framework},
  booktitle = {Companion of the Conference on Object-oriented Programming, Systems, Languages, and Applications (OOPSLA'03)},
  pages = {8--15},
  publisher = {ACM},
  year = {2003},
  url = {http://doi.acm.org/10.1145/949344.949347},
  doi = {10.1145/949344.949347},
  acmid = {949347},
  address = {New York, NY, USA},
  isbn = {1-58113-751-6},
  keywords = {graph transformations, model-driven architecture, model-integrated computing, software development},
  location = {Anaheim, CA, USA},
  numpages = {8}}

@article{Agra03b,
  author = {Agrawal, Aditya and Karsai, Gabor and Shi, Feng},
  title = {A UML-based graph transformation approach for implementing domain-specific model transformations},
  journal = {International Journal on Software and Systems Modeling},
  pages = {1--19},
  year = {2003}}

@inproceedings{Agra91a,
  author = {Rakesh Agrawal and Linda G. DeMichiel and Bruce G. Lindsay},
  title = {Static Type Checking of Multi-Methods},
  booktitle = {Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA '91)},
  volume = {26},
  pages = {113--128},
  year = {1991},
  month = nov}

@inproceedings{Agra93a,
  author = {Agrawal, R. and Imielinski, T. and Swami, A.},
  title = {Mining association rules between sets of items in large databases},
  booktitle = {ACM SIGMOD International Conference on Management of data},
  pages = {207-216},
  year = {1993}}

@inproceedings{Agra94a,
  author = {Agrawal, Rakesh and Srikant, Ramakrishnan and others},
  title = {Fast algorithms for mining association rules},
  booktitle = {Proceedings of International Conference on Very Large Databases (VLDB)},
  volume = {1215},
  pages = {487--499},
  year = {1994}}

@article{Agra98a,
  author = {Hiralal Agrawal and James L. Alberi and Joseph Robert Horgan and J. Jenny Li and Saul London and W. Eric Wong and Sudipto Ghosh and Norman Wilde},
  title = {Mining System Tests to Aid Software Maintenance},
  journal = {{IEEE} Computer},
  volume = {31},
  pages = {64--73},
  year = {1998},
  url = {http://dx.doi.org/10.1109/2.689678},
  doi = {10.1109/2.689678},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl = {http://dblp.uni-trier.de/rec/bib/journals/computer/AgrawalAHLLWGW98},
  date-added = {2016-03-07 13:14:23 +0000},
  date-modified = {2016-03-07 13:14:58 +0000},
  number = {7},
  timestamp = {Wed, 16 Dec 2015 10:09:24 +0100}}

@article{Aher98a,
  author = {F.J. Aherne and N.A. Thacker and Peter Rockett},
  title = {The Bhattacharyya Metric as an Absolute Similarity Measure for Frequency Coded Data},
  journal = {Kybernetika},
  volume = {34},
  pages = {363--368},
  publisher = {TIA, Prague},
  year = {1998},
  abstract = {This paper highlights advantageous properties of the
Bhattacharyya metric over the chi-squared statistic
for comparing frequency distributed data. The
original interpretation of the Bhattacharyya metric
as a geometric similarity measure is reviewed and it
is pointed out that this derivation is independent
of the use of the Bhattacharyya measure as an upper
bound on the probability of misclassification in a
two-class problem. The affinity between the
Bhattacharyya and Matusita measures is described and
we suggest use of the Bhattacharyya measure for
comparing histogram data. We explain how the
chi-squared statistic compensates for the implicit
assumption of a Euclidean distance measure being the
shortest path between two points in high dimensional
space. By using the square-root transformation the
Bhattacharyya metric requires no such
standardization and by its multiplicative nature has
no singularity problems unlike those caused by the
denominator of the chi-squared statistic with zero
count-data.},
  number = {4}}

@incollection{Ahle94a,
  author = {K. Ahlers and D. Breen and C. Crampton and E. Rose and M. Tuceryan and R. Whitaker and D. Greer},
  title = {An Augmented Vision System for Industrial Applications},
  booktitle = {Telemanipulator and Telepresence Techonolgies},
  volume = {2351},
  pages = {345--359},
  publisher = {SPIE Proceedings},
  year = {1994},
  abstract = {This paper describes the major components of the
Grasp augmented vision system. Grasp is an
object-oriented system written in C++, which
provides an environment both for exploring the basic
technologies of augmented vision, and for developing
applications that demonstrate the capabilities of
these technologies. The hardware components of Grasp
include video cameras, 6-D tracking devices, a frame
grabber, a 3-D graphics workstation, a scan
converter, and a video mixer. The major software
components consist of classes that implement
geometric models, rendering algorithms, calibration
methods, file I/O, a user interface, and event
handling.},
  address = {Boston},
  month = oct}

@techreport{Ahls83a,
  author = {Matts Ahls\'en and Anders Bj{\"o}rnerstedt and Stefan Britts and Christer Hult\'en and Lars S{\"o}derlund},
  title = {A Survey of Office Information Systems},
  year = {1983},
  institution = {University of Stockholm},
  month = mar,
  number = {44},
  type = {Syslab, WP}}

@article{Ahls84a,
  author = {Matts Ahls\'en and Anders Bj{\"o}rnerstedt and Stefan Britts and Christer Hult\'en and Lars S{\"o}derlund},
  title = {An Architecture for Object Management in {OIS}},
  journal = {ACM TOOIS},
  volume = {2},
  pages = {173--196},
  year = {1984},
  month = jul,
  number = {3}}

@techreport{Ahls84b,
  author = {Matts Ahls\'en and Anders Bj{\"o}rnerstedt and Stefan Britts and Christer Hult\'en and Lars S{\"o}derlund},
  title = {Making Type Changes Transparent},
  year = {1984},
  institution = {University of Stockholm},
  month = feb,
  number = {22},
  type = {Syslab report}}

@article{Ahls85a,
  author = {M. Ahls\"en and Anders Bj{\"o}rnerstedt and C. Hult\"en},
  title = {{OPAL}: An Object-Based System for Application Development},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {31--40},
  year = {1985},
  month = dec,
  number = {4}}

@inproceedings{Ahma12a,
  author = {Ahmad, Aakash and Jamshidi, Pooyan and Pahl, Claus},
  title = {Pattern-driven Reuse in Architecture-centric Evolution for Service Software.},
  booktitle = {7th International Conference on Software Paradigm Trends},
  pages = {279--284},
  year = {2012}}

@inproceedings{Ahma14,
  author = {Ahmad, Aakash and Babar, Muhammad Ali},
  title = {A Framework for Architecture-Driven Migration of Legacy Systems to Cloud-Enabled Software},
  booktitle = {Proceedings of the WICSA 2014 Companion Volume},
  publisher = {Association for Computing Machinery},
  year = {2014},
  url = {https://doi.org/10.1145/2578128.2578232},
  doi = {10.1145/2578128.2578232},
  abstract = {With the widespread adoption of cloud computing, an increasing number of organizations view it as an important business strategy to evolve their legacy applications to cloud-enabled infrastructures. We present a framework, named Legacy-to-Cloud Migration Horseshoe, for supporting the migration of legacy systems to cloud computing. The framework leverages the software reengineering concepts that aim to recover the architecture from legacy source code. Then the framework exploits the software evolution concepts to support architecture-driven migration of legacy systems to cloud-based architectures. The Legacy-to-Cloud Migration Horseshoe comprises of four processes: (i) architecture migration planning, (ii) architecture recovery and consistency, (iii) architecture transformation and (iv) architecture-based development of cloud-enabled software. We aim to discover, document and apply the migration process patterns that enhance the reusability of migration processes. We also discuss the required tool support that we intend to provide through our ongoing work in this area.},
  address = {New York, NY, USA},
  articleno = {7},
  isbn = {9781450325233},
  keywords = {architecture-centric software migration, cloud computing, software architecture, maintenance and evolution, reverse engineering and evolution, reengineering, service-driven architecture},
  location = {Sydney, Australia},
  numpages = {8},
  series = {WICSA '14 Companion}}

@book{Aho06a,
  author = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
  title = {Compilers: Principles, Techniques, and Tools (2nd Edition)},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {2006},
  address = {Boston, MA, USA},
  isbn = {0321486811}}

@inproceedings{Aho11,
  author = {Aho, Pekka and Menz, Nadja and R\"aty, Tomi and Schieferdecker, Ina},
  title = {Automated Java {GUI} Modeling for Model-Based Testing Purposes},
  booktitle = {2011 Eighth International Conference on Information Technology: New Generations},
  pages = {268--273},
  publisher = {{IEEE}},
  year = {2011},
  url = {http://ieeexplore.ieee.org/document/5945245/},
  doi = {10.1109/ITNG.2011.54},
  abstract = {Advanced methods and tools for {GUI} software development allow a r{API}d and iterative process of prototyping and usability testing. Unfortunately, even with the support of test automation tools, testing of {GUI} software requires a lot of manual work, especially when the application under test is changing r{API}dly. In this paper we present an improved method and tool support for automated test modeling of Java {GUI} applications for model-based testing ({MBT}) purposes. The implemented {GUI} Driver tool generates structural models combined with a {GUI} state model presenting the behavior of the {GUI} application that is executed and observed automatically. The {GUI} Driver tool is combined with an open source {MBT} tool to form a tool chain to support automated testing of Java {GUI} applications. The models generated by the {GUI} Driver are used to generate test sequences with {MBT} tool, and the test sequences are then executed with the {GUI} Driver to generate a test report.},
  date = {2011-04},
  isbn = {978-1-61284-427-5},
  keywords = {{GUI} testing},
  langid = {english},
  urldate = {2018-06-22}}

@inproceedings{Aho13a,
  author = {Aho, Pekka and Raty, Tomi and Menz, Nadja},
  title = {Dynamic reverse engineering of {GUI} models for testing},
  booktitle = {2013 International Conference on Control, Decision and Information Technologies (CoDIT)},
  pages = {441--447},
  publisher = {{IEEE}},
  year = {2013},
  url = {http://ieeexplore.ieee.org/document/6689585/},
  doi = {10.1109/CoDIT.2013.6689585},
  abstract = {A significant challenge in application of modelbased testing ({MBT}) is that manually designing the test models requires considerable amount of effort and deep expertise in formal modeling. Reverse engineering can be used to automate parts of the modeling process but in applications with a graphical user interface ({GUI}), the dynamic behavior of the {GUI} is difficult to extract with static reverse engineering. Therefore we propose to use dynamic reverse engineering for automatically generating {GUI} models suitable for {MBT}. In this paper we compare various approaches for automated {GUI} modeling including an empirical tool study, propose a {GUI} component classification suitable for {GUI} automation, and present some examples of {GUI} automation strategies for efficient modeling of {GUI} applications.},
  date = {2013-05},
  isbn = {978-1-4673-5549-0 978-1-4673-5547-6},
  langid = {english},
  urldate = {2018-07-19}}

@article{Aho13b,
  author = {Aho, Pekka and Suarez, Matias and Kanstren, Teemu and Memon, Atif M.},
  title = {Industrial Adoption of Automatically Extracted {GUI} Models for Testing},
  journal = {2014 IEEE Seventh International Conference on Software Testing, Verification and Validation Workshops},
  pages = {6},
  year = {2013},
  abstract = {Crafting the models for effective model-based testing ({MBT}) requires deep understanding of the problem domain and expertise on formal modeling, and creating the models manually from the scratch requires a significant amount of effort. When an existing system is being modeled and tested, there are various techniques to automate the process of producing the models based on the implementation. Especially graphical user interface ({GUI}) applications have been a good domain for reverse engineering and specification mining approaches, but the existing academic approaches have limitations and restrictions on the {GUI} applications that can be modeled, and none of them have been adopted by the industry for testing commercial software. Although using implementation based models in testing has restrictions and requires special consideration, the generated models can be used in automated testing and supporting various manual testing actions. In this paper we introduce an industrial approach and platform-independent Murphy tool set for automatically extracting state models for testing {GUI} applications.},
  keywords = {{GUI} testing, dynamic analysis},
  langid = {english}}

@book{Aho72a,
  author = {Alfred V. Aho and Jeffrey D. Ullman},
  title = {The Theory of Parsing, Translation and Compiling Volume {I}: Parsing},
  publisher = {Prentice-Hall},
  year = {1972},
  isbn = {0-13-914556-7}}

@article{Aho72b,
  author = {Alfred V. Aho and Thomas G. Peterson},
  title = {A minimum distance error-correcting parser for context-free languages},
  journal = {SIAM Journal of Computing},
  volume = {1},
  pages = {305--312},
  year = {1972},
  url = {http://locus.siam.org/SICOMP/volume-01/art_0201022.html}}

@book{Aho74a,
  author = {Alfred V. Aho and John E. Hopcroft and Jeffrey D. Ullman},
  title = {The Design and Analysis of Computer Algorithms},
  publisher = {Addison Wesley},
  year = {1974},
  address = {Reading, Mass.},
  isbn = {0-201-00029-6}}

@article{Aho75a,
  author = {Alfred V. Aho and M.J. Corasick},
  title = {Fast Pattern Matching: An Aid to Bibliographic Search},
  journal = {CACM},
  volume = {18},
  pages = {333--340},
  year = {1975},
  month = jun,
  number = {6}}

@techreport{Aho78a,
  author = {Alfred V. Aho and B. Kernighan and P. Weinberger},
  title = {Awk --- {A} Pattern Scanning and Processing Language},
  year = {1978},
  institution = {Bell Telephone Laboratories},
  month = sep,
  type = {Report}}

@book{Aho86a,
  author = {Alfred V. Aho and Ravi Sethi and Jeffrey D. Ullman},
  title = {Compilers: Principles, Techniques and Tools},
  publisher = {Addison Wesley},
  year = {1986},
  address = {Reading, Mass.},
  isbn = {0-201-10194-7}}

@article{Ahuj86a,
  author = {S. Ahuja and N. Carriero and D. Gelernter},
  title = {Linda and Friends},
  journal = {IEEE Computer},
  volume = {19},
  pages = {26--34},
  year = {1986},
  month = aug,
  number = {8}}

@inproceedings{Aich11a,
  author = {Aichernig, Bernhard K. and Brandl, Harald and J\"{o}bstl, Elisabeth and Krenn, Willibald},
  title = {Efficient Mutation Killers in Action},
  booktitle = {2011 Fourth IEEE International Conference on Software Testing, Verification and Validation},
  pages = {120-129},
  year = {2011},
  doi = {10.1109/ICST.2011.57}}

@inproceedings{Aich14a,
  author = {Aichernig, Bernhard K. and Auer, Jakob and J{\"o}bstl, Elisabeth and Koro{\v{s}}ec, Robert and Krenn, Willibald and Schlick, Rupert and Schmidt, Birgit Vera},
  title = {Model-Based Mutation Testing of an Industrial Measurement Device},
  booktitle = {Tests and Proofs},
  pages = {1--19},
  publisher = {Springer International Publishing},
  year = {2014},
  abstract = {MoMuT::UML is a model-based mutation testing tool for UML models. It maps UML state machines to a formal semantics and performs a conformance check between an original and a set of mutated models to automatically generate test cases. The resulting test suite is able to detect whether a system under test implements one of the faulty models instead of the correct, original model. In this work, we illustrate the whole model-based mutation testing process by means of an industrial case study. We test the control logic of a device that counts the particles in exhaust gases. First, we model the system under test in UML. Then, MoMuT::UML is used to automatically generate three test suites from the UML test model: one mutation-based test suite, one set of random test cases, and a third test suite combining random and mutation-based test case generation. The test cases are executed on the system under test and effectively reveal several errors. Finally, we compare the fault detection capabilities of the three test suites on a set of faulty systems, which were created by intentionally injecting faults into the implementation.},
  address = {Cham},
  editor = {Seidl, Martina and Tillmann, Nikolai},
  isbn = {978-3-319-09099-3}}

@article{Aich15a,
  author = {Aichernig, Bernhard K. and Brandl, Harald and J\"{o}bstl, Elisabeth and Krenn, Willibald and Schlick, Rupert and Tiran, Stefan},
  title = {Killing Strategies for Model-Based Mutation Testing},
  journal = {Softw. Test. Verif. Reliab.},
  volume = {25},
  pages = {716-748},
  publisher = {John Wiley and Sons Ltd.},
  year = {2015},
  url = {https://doi.org/10.1002/stvr.1522},
  doi = {10.1002/stvr.1522},
  abstract = {This article presents the techniques and results of a novel model-based test case
generation approach that automatically derives test cases from UML state machines.
The main contribution of this article is the fully automated fault-based test case
generation technique together with two empirical case studies derived from industrial
use cases. Also, an in-depth evaluation of different fault-based test case generation
strategies on each of the case studies is given and a comparison with plain random
testing is conducted. The test case generation methodology supports a wide range of
UML constructs and is grounded on the formal semantics of Back's action systems and
the well-known input-output conformance relation. Mutation operators are employed
on the level of the specification to insert faults and generate test cases that will
reveal the faults inserted. The effectiveness of this approach is shown and it is
discussed how to gain a more expressive test suite by combining cheap but undirected
random test case generation with the more expensive but directed mutation-based technique.
Finally, an extensive and critical discussion of the lessons learnt is given as well
as a future outlook on the general usefulness and practicability of mutation-based
test case generation. Copyright 2014 John Wiley &amp; Sons, Ltd.},
  address = {GBR},
  issn = {0960-0833},
  issue_date = {December 2015},
  keywords = {ioco, action systems, random testing, UML, model-based testing, test case generation, Unified Modeling Language, mutation testing},
  month = dec,
  number = {8},
  numpages = {33}}

@inproceedings{Aign96a,
  author = {Gerald Aigner and Urs H{\"o}lzle},
  title = {Eliminating Virtual Function Calls in {C}++ Programs},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {142--166},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{AitK91a,
  author = {Hassan A\"it-Kaci and Andreas Podelski},
  title = {Towards a Meaning of {LIFE}},
  booktitle = {Proceedings PLILP '91},
  volume = {528},
  pages = {255--274},
  publisher = {Springer-Verlag},
  year = {1991},
  url = {ftp://gatekeeper.dec.com/pub/DEC/PRL/research-reports/PRL-RR-11.ps.gz},
  address = {Passau, Germany},
  editor = {J. Maluszynski and M. Wirsing},
  month = aug,
  series = {LNCS}}

@article{Ajil95a,
  author = {Samuel Ajila},
  title = {Software maintenance: an approach to impact analysis of objects change},
  journal = {Software - Practice and Experience},
  volume = {25},
  pages = {1155--1181},
  year = {1995}}

@misc{Ajma02a,
  author = {Sameer Ajmani},
  title = {A Review of Software Upgrade Techniques for Distributed Systems},
  year = {2002},
  url = {http://pmg.csail.mit.edu/~ajmani/papers/review.pdf},
  month = aug}

@inproceedings{Akai12a,
  author = {Akai, Shumpei and Chiba, Shigeru},
  title = {Method shelters: avoiding conflicts among class extensions caused by local rebinding},
  booktitle = {Proceedings of the 11th annual international conference on Aspect-oriented Software Development},
  pages = {131--142},
  year = {2012},
  organization = {ACM}}

@inproceedings{Aker05a,
  author = {Akers, Robert L and Baxter, Ira D and Mehlich, Michael and Ellis, Brian J and Luecke, Kenn R},
  title = {Re-engineering C++ component models via automatic program transformation},
  booktitle = {Reverse Engineering, 12th Working Conference on},
  pages = {10--pp},
  year = {2005},
  organization = {IEEE}}

@misc{Akht22a,
  author = {Akhtar, Salwa and Nazir, Makia and Ali, Arshad and Khan, Ahmed and Atif, Muhammad},
  title = {A Systematic Literature Review on Software - Refactoring Techniques, Challenges, and Practices},
  year = {2022},
  doi = {10.21203/rs.3.rs-1472519/v1},
  month = mar}

@inproceedings{Aksi88a,
  author = {Mehmet Aksit and Anand Tripathi},
  title = {Data Abstraction Mechanisms in {SINA}/{ST}},
  booktitle = {Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA '88)},
  volume = {23},
  pages = {267--275},
  year = {1988},
  month = nov}

@phdthesis{Aksi89a,
  author = {Mehmet Aksit},
  title = {On the Design of the Object-Oriented Language Sina},
  year = {1989},
  school = {University of Twente},
  type = {{Ph.D}. Thesis}}

@inproceedings{Aksi92a,
  author = {Mehmet Aksit and Lodewijk Bergmans},
  title = {Obstacles in Object-Oriented Software Development},
  booktitle = {Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA '92)},
  volume = {27},
  pages = {341--358},
  year = {1992},
  month = oct}

@inproceedings{Aksi92b,
  author = {Mehmet Aksit and Lodewijk Bergmans and Sinan Vural},
  title = {An Object-Oriented Language-Database Integration Model: The Composition-Filters Approach},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {372--395},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@unpublished{Aksi93a,
  author = {Mehmet Aksit and Ken Wakita and Jan Bosch and Lodewijk Bergmans and Akinori Yonezawa},
  title = {Abstracting Inter-Object Communications Using Composition Filters},
  year = {1993},
  note = {University of Twente},
  type = {draft manuscript}}

@inproceedings{Aksi94a,
  author = {Mehmet Aksit and Ken Wakita and Jan Bosch and Lodewijk Bergmans and Akinori Yonezawa},
  title = {Abstracting Object Interactions Using Composition Filters},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = 791,
  pages = {152--184},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {It is generally claimed that object-based models are
very suitable for building distributed system
architectures since object interactions follow the
client-server model. To cope with the complexity of
today's distributed systems, however, we think that
high-level linguistic mechanisms are needed to
effectively structure, abstract and reuse object
interactions. For example, the conventional
object-oriented model does not provide high-level
language mechanisms to model layered system
architectures. Moreover, we consider the message
passing model of the conventional object-oriented
model as being too low-level because it can only
specify object interactions that involve two partner
objects at a time and its semantics cannot be
extended easily. This paper introduces Abstract
Communication Types (ACTs), which are objects that
abstract interactions among objects. ACT s make it
easier to model layered communication architectures,
to enforce the invariant behavior among objects, to
reduce the complexity of programs by hiding the
interaction details in separate modules and to
improve reusability through the application of
object-oriented principles to ACT classes. We
illustrate the concept of ACT s using the
composition filters model.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@inproceedings{Aksi94b,
  author = {Mehmet Aksit and Jan Bosch and William van der Sterren and Lodewijk Bergmans},
  title = {Real-Time Specification Inheritance Anomalies and Real-Time Filters},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {386--407},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@article{AlOm24a,
  author={AlOmar, Eman Abdullah and Mkaouer, Mohamed Wiem and Ouni, Ali},
  journal={IEEE Transactions on Software Engineering},
  title={Behind the Intent of Extract Method Refactoring: A Systematic Literature Review},
  year={2024},
  volume={50},
  number={4},
  pages={668-694},
  keywords={Codes;Data mining;Systematics;Bibliographies;Software engineering;Behavioral sciences;Software;Extract method;refactoring;quality;systematic literature review},
  doi={10.1109/TSE.2023.3345800}
}

@inproceedings{Alab88a,
  author = {Bruno Alabiso},
  title = {Transformation of Data Flow Analysis Models to Object-Oriented Design},
  booktitle = {Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA '88)},
  volume = {23},
  pages = {335--354},
  year = {1988},
  month = nov}

@misc{Alag23a,
  author = {Saranya Alagarsamy and Chakkrit Tantithamthavorn and Aldeida Aleti},
  title = {A3Test: Assertion-Augmented Automated Test Case Generation},
  year = {2023},
  archiveprefix = {arXiv},
  eprint = {2302.10352},
  month = feb,
  primaryclass = {cs.SE}}

@misc{Alag88a,
  author = {Suad Alagic},
  title = {Object-Oriented Database Programming},
  year = {1988},
  address = {New York},
  series = {Texts and Monographs in Computer Science}}

@inproceedings{Alag94a,
  author = {S. Alagi{\'c} and R. Sunderraman and R. Bagai},
  title = {Declarative Object-Oriented Programming: Inheritance, Subtyping and Prototyping},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {236--259},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Alam07a,
  author = {Alam, Sazzadul and Dugerdil, Philippe},
  title = {EvoSpaces: 3D Visualization of Software Architecture.},
  booktitle = {SEKE},
  volume = {7},
  pages = {500},
  year = {2007}}

@inproceedings{Alam09a,
  author = {Omar Alam and Bram Adams and Ahmed E. Hassan},
  title = {Measuring the progress of projects using the time dependence of code changes},
  booktitle = {Proceedings of the 25th IEEE International Conference on Software Maintenance, ({ICSM}'09)},
  pages = {329--338},
  publisher = {IEEE},
  year = {2009}}

@phdthesis{Alan04a,
  author = {Lauri E. Alanko},
  title = {Types and Reflection},
  year = {2004},
  school = {University of Helsinki},
  month = nov,
  type = {{Ph.D}. Thesis}}

@article{Alas04a,
  author = {Alastair Farrugia},
  title = {Vertex-partitioning into fixed additive induced-hereditary properties is NP-hard},
  journal = {The electronic journal of combinatorics},
  volume = {11},
  year = {2004}}

@incollection{Alba83a,
  author = {Antonio Albano and R. Orsini},
  title = {Dialogo: An Interactive Environment for Conceptual Design in Galileo},
  booktitle = {Methodology and Tools for Database Design},
  publisher = {North-Holland},
  year = {1983},
  editor = {S. Ceri}}

@article{Alba85a,
  author = {Antonio Albano and Luca Cardelli and R. Orsini},
  title = {Galileo: {A} Strongly-Typed, Interactive Conceptual Language},
  journal = {ACM TODS},
  volume = {10},
  pages = {230--260},
  year = {1985},
  month = jun,
  number = {2}}

@inproceedings{Albi01a,
  author = {Herv\'e Albin-Amiot and Pierre Cointe and Yann-Ga\"el Gu\'eh\'eneuc and Narendra Jussien},
  title = {Instantiating and Detecting Design Patterns: Putting Bits and Pieces Together},
  booktitle = {Proceedings of ASE '01 (16th Conference on Automated Software Engineering)},
  pages = {166--173},
  publisher = {IEEE Computer Society Press},
  year = {2001},
  editor = {Debra Richardson and Martin Feather and Michael Goedicke},
  month = nov}

@inproceedings{Alco12a,
  author = {Alcocer, Juan Pablo Sandoval},
  title = {Tracking down software changes responsible for performance loss},
  booktitle = {Proceedings of the International Workshop on Smalltalk Technologies},
  pages = {3:1--3:7},
  publisher = {ACM},
  year = {2012},
  url = {http://doi.acm.org/10.1145/2448963.2448966},
  doi = {10.1145/2448963.2448966},
  address = {New York, NY, USA},
  articleno = {3},
  isbn = {978-1-4503-1897-6},
  location = {Ghent, Belgium},
  numpages = {7},
  series = {IWST '12}}

@inproceedings{Alco15a,
  author = {Alcocer, Juan Pablo Sandoval and Bergel, Alexandre},
  title = {Tracking Down Performance Variation Against Source Code Evolution},
  booktitle = {Proceedings of the 11th Symposium on Dynamic Languages},
  pages = {129--139},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2816707.2816718},
  doi = {10.1145/2816707.2816718},
  acmid = {2816718},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3690-1},
  keywords = {performance analysis, performance evolution, performance variation},
  location = {Pittsburgh, PA, USA},
  numpages = {11},
  series = {DLS 2015}}

@book{Alde84a,
  author = {Mark S. Aldenderfer and Roger K. Blashfield},
  title = {Cluster Analysis},
  publisher = {Sage Publications Inc.},
  year = {1984},
  address = {Beverly Hills},
  series = {Sage University Paper Series on Quantitative Applications in the Social Sciences}}

@incollection{Alde91a,
  author = {A. Alderson},
  title = {Meta-{CASE} Technology},
  booktitle = {Software Development Environments and {CASE} Technology},
  publisher = {Springer-Verlag},
  year = {1991},
  editor = {A.Endres and H.Weber}}

@inproceedings{Aldr02a,
  author = {Aldrich, Jonathan and Chambers, Craig and Notkin, David},
  title = {Architectural Reasoning in {ArchJava}},
  booktitle = {ECOOP'02: Proceedings of the 16th European Conference on Object-Oriented Programming},
  volume = 2374,
  pages = {334--367},
  publisher = {Springer-Verlag},
  year = {2002},
  doi = {10.1007/3-540-47993-7},
  address = {Malaga, Spain},
  series = {LNCS}}

@inproceedings{Aldr02b,
  author = {Aldrich, Jonathan and Kostadinov, Valentin and Chambers, Craig},
  title = {Alias Annotations for Program Understanding},
  booktitle = {OOPSLA'02: Proceedings of the 17th International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  volume = {37(11)},
  pages = {311--330},
  publisher = {ACM},
  year = {2002},
  address = {New York, NY, USA},
  location = {Seattle, Washington, USA}}

@inproceedings{Aldr02c,
  author = {Aldrich, Jonathan and Chambers, Craig and Notkin, David},
  title = {{ArchJava: Connecting software architecture to implementation}},
  booktitle = {ICSE'02: Proceedings of the 24th International Conference on Software Engineering},
  pages = {187--197},
  publisher = {ACM},
  year = {2002},
  address = {New York, NY, USA},
  isbn = {1-58113-472-X},
  location = {Orlando, FL, USA}}

@inproceedings{Aldr03a,
  author = {Aldrich, Jonathan and Sazawal, Vibha and Chambers, Craig and Notkin, David},
  title = {Language Support for Connector Abstractions},
  booktitle = {ECOOP'03: Proceedings of the 17th European Conference on Object-Oriented Programming},
  volume = {2743},
  pages = {74--102},
  publisher = {Springer-Verlag},
  year = {2003},
  address = {Darmstadt, Germany},
  editor = {Cardelli, Luca},
  series = {LNCS}}

@inproceedings{Aldr04a,
  author = {Jonathan Aldrich},
  title = {Open Modules: Reconciling Extensibility and Information Hiding},
  booktitle = {{SPLAT}: Software engineering Properties of Languages for Aspect},
  year = {2004},
  editor = {Lodewijk Bergmans and Kris Gybels and Peri Tarr and Erik Ernst},
  month = mar}

@inproceedings{Aldr05a,
  author = {Jonathan Aldrich},
  title = {Open Modules: Modular Reasoning About Advice},
  booktitle = {Proceedings ECOOP 2005},
  volume = 3586,
  pages = {144--168},
  publisher = {Springer Verlag},
  year = {2005},
  url = {http://www.cs.cmu.edu/~aldrich/papers/ecoop05open-modules.pdf},
  doi = {10.1007/11531142_7},
  address = {Glasgow, UK},
  month = jul,
  series = {LNCS}}

@inproceedings{Ale18,
  author = {{Alessandro De Marco} and {Valentin Iancu} and {Ira Asinofsky}},
  title = {{COBOL} to {Java} and {Newspapers} {Still} {Get} {Delivered}},
  booktitle = {Proceedings of the 2018 {IEEE}{International} {Conference} on {Software} {Maintenance} and {Evolution} ({{ICSM}E})},
  pages = {4},
  publisher = {IEEE Comput. Soc. Press},
  year = {2018},
  url = {http://arxiv.org/mod/2357966},
  abstract = {This paper is an experience report on migrating an American newspaper company's business-critical IBM mainframe application to Linux servers by automatically translating the application's source code from COBOL to Java and converting the mainframe data store from VSAM KSDS files to an Oracle relational database. The mainframe application had supported daily home delivery of the newspaper since 1979. It was in need of modernization in order
to increase interoperability and enable future convergence with newer enterprise systems as well as to reduce operating costs. Testing the modernized application proved to be the most vexing area of work. This paper explains the process that was employed to test functional equivalence between the legacy and modernized applications, the main testing challenges, and lessons learned after
having operated and maintained the modernized application in production over the last eight months. The goal of delivering a functionally equivalent system was achieved, but problems remained to be solved related to new feature development, business domain knowledge transfer, and recruiting new software
engineers to work on the modernized application.},
  address = {Madrid, Spain},
  month = sep,
  urldate = {2018-08-14}}

@inproceedings{Aleg13a,
  author = {Alegroth, Emil and Nass, Michel and Olsson, Helena H},
  title = {JAutomate: A tool for system-and acceptance-test automation},
  booktitle = {Software testing, verification and validation (icst), 2013 ieee sixth international conference on},
  pages = {439--446},
  year = {2013},
  organization = {IEEE}}

@inproceedings{Alen91a,
  author = {Antonio J. Alencar and Joseph A. Goguen},
  title = {{OOZE}: An Object-Oriented {Z} Environment},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {180--199},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Ales18a,
  author = {{Alessandro De Marco} and {Valentin Iancu} and {Ira Asinofsky}},
  title = {{COBOL} to {Java} and {Newspapers} {Still} {Get} {Delivered}},
  booktitle = {Proceedings of the 2018 {IEEE}{International} {Conference} on {Software} {Maintenance} and {Evolution} ({{ICSM}E})},
  pages = {4},
  publisher = {IEEE Comput. Soc. Press},
  year = {2018},
  url = {http://arxiv.org/mod/2357966},
  abstract = {This paper is an experience report on migrating an American newspaper company's business-critical IBM mainframe application to Linux servers by automatically translating the application's source code from COBOL to Java and converting the mainframe data store from VSAM KSDS files to an Oracle relational database. The mainframe application had supported daily home delivery of the newspaper since 1979. It was in need of modernization in order
to increase interoperability and enable future convergence with newer enterprise systems as well as to reduce operating costs. Testing the modernized application proved to be the most vexing area of work. This paper explains the process that was employed to test functional equivalence between the legacy and modernized applications, the main testing challenges, and lessons learned after
having operated and maintained the modernized application in production over the last eight months. The goal of delivering a functionally equivalent system was achieved, but problems remained to be solved related to new feature development, business domain knowledge transfer, and recruiting new software
engineers to work on the modernized application.},
  address = {Madrid, Spain},
  keywords = {fortran},
  month = sep,
  urldate = {2018-08-14}}

@mastersthesis{Alex07a,
  author = {Pierre Alexis},
  title = {Impl{\'e}mentation des traits {\`a} {\'e}tats en Java},
  year = {2007},
  school = {Universit{\'e} Libre de Bruxelles},
  url = {http://scg.unibe.ch/archive/external/Alex07a.pdf}}

@book{Alex75a,
  author = {Christopher Alexander and Murray Silverstein and Shlomo Angel and Sara Ishakawa and Denny Abrams},
  title = {The Oregon Experiment},
  publisher = {Oxford University Press},
  year = {1975},
  address = {New York}}

@book{Alex77a,
  author = {Christopher Alexander and Sara Ishakawa and Murray Silverstein},
  title = {A Pattern Language},
  publisher = {Oxford University Press},
  year = {1977},
  address = {New York}}

@book{Alex79a,
  author = {Christopher Alexander},
  title = {The Timeless Way of Building},
  publisher = {Oxford University Press},
  year = {1979},
  address = {New York}}

@inproceedings{Alex87a,
  author = {James H. Alexander},
  title = {Painless Panes for {Smalltalk} Windows},
  booktitle = {Proceedings OOPSLA '87},
  volume = {22},
  pages = {287--294},
  year = {1987},
  month = dec}

@book{Alex93a,
  author = {Christopher Alexander},
  title = {A Foreshadowing of 21st Century Art},
  publisher = {Oxford University Press},
  year = {1993}}

@inproceedings{Alia04a,
  author = {Mourad Alia and S{\'e}bastien Chassande-Barrioz and Pascal D{\'e}chamboux and Catherine Hamon and Alexandre Lefebvre},
  title = {A Middleware Framework for the Persistence and Querying of Java Objects},
  booktitle = {Proceedings of the 18th European Conference on Object-Oriented Programming (ECOOP'04)},
  pages = {291--315},
  publisher = {Springer-Verlag},
  year = {2004},
  doi = {10.1007/b98195},
  series = {LNCS}}

@misc{Alice,
  author = {Alice},
  title = {The Alice Project},
  year = {2004},
  howpublished = {http://www.alice.org}}

@inproceedings{Alid17a,
  author = {Alidra, Abdelghani and Saker, Moussa and Anquetil, Nicolas and Ducasse, St{\'e}phane},
  title = {Identifying class name inconsistency in hierarchy: a first simple heuristic},
  booktitle = {Proceedings of the 12th edition of the International Workshop on Smalltalk Technologies},
  pages = {14},
  year = {2017},
  organization = {ACM}}

@article{Alim18a,
author = {Alimadadi, Saba and Zhong, Di and Madsen, Magnus and Tip, Frank},
title = {Finding Broken Promises in Asynchronous JavaScript Programs},
year = {2018},
issue_date = {November 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {OOPSLA},
url = {https://doi.org/10.1145/3276532},
doi = {10.1145/3276532},
journal = {Proc. ACM Program. Lang.},
month = {oct},
articleno = {162},
numpages = {26},
keywords = {PromiseKeeper, Promises, Promise Graph, JavaScript, Dynamic Analysis}
}

@inproceedings{Alla05a,
  author = {Allan, Chris and Avgustinov, Pavel and Christensen, Aske Simon and Hendren, Laurie and Kuzins, Sascha and Lhot\'{a}k, Ond\v{r}ej and de Moor, Oege and Sereni, Damien and Sittampalam, Ganesh and Tibble, Julian},
  title = {Adding trace matching with free variables to {AspectJ}},
  booktitle = {Conference on Object-Oriented Programming Systems and Applications (OOPSLA'05)},
  pages = {345--364},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1103845.1094839},
  address = {New York, NY, USA},
  issn = {0362-1340}}

@inproceedings{Alla14,
  author = {Allamanis, Miltiadis and Barr, Earl T and Bird, Christian and Sutton, Charles},
  title = {Learning natural coding conventions},
  booktitle = {Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {281--293},
  year = {2014},
  organization = {ACM}}

@inproceedings{Alla14a,
  author = {Allamanis, Miltiadis and Barr, Earl T and Bird, Christian and Sutton, Charles},
  title = {Learning Natural Coding Conventions},
  booktitle = {Proceedings of the International Symposium on Foundations of Software Engineering (FSE)},
  pages = {281--293},
  year = {2014},
  organization = {ACM}}

@inproceedings{Alla15a,
  author = {Allamanis, Miltiadis and Barr, Earl T and Bird, Christian and Sutton, Charles},
  title = {Suggesting accurate method and class names},
  booktitle = {Proceedings of the Joint Meeting on Foundations of Software Engineering},
  pages = {38--49},
  year = {2015},
  organization = {ACM}}

@inproceedings{Alla16a,
  author = {Allamanis, Miltiadis and Peng, Hao and Sutton, Charles},
  title = {A convolutional attention network for extreme summarization of source code},
  booktitle = {International Conference on Machine Learning},
  pages = {2091--2100},
  year = {2016}}

@article{Alla18a,
  author = {Allamanis, Miltiadis and Barr, Earl T and Devanbu, Premkumar and Sutton, Charles},
  title = {A survey of machine learning for big code and naturalness},
  journal = {ACM Computing Surveys (CSUR)},
  volume = {51},
  pages = {81},
  publisher = {ACM},
  year = {2018},
  number = {4}}

@inproceedings{Alle01a,
  author = {E. Allen and T. Khoshgoftaar},
  title = {Measuring Coupling and Cohesion of Software Modules: An Information Theory Approach},
  booktitle = {Seventh International Software Metrics Symposium},
  year = {2001}}

@book{Alle03,
  author = {Michael Alley},
  title = {The Craft of Scientific Presentations --- Critical Steps to Succeed and Critical Errors to Avoid},
  publisher = {Springer-Verlag},
  year = {2003},
  isbn = {0-387-95555-0}}

@book{Alle03a,
  author = {B.{J}. Allen-Conn and Kimberly Rose},
  title = {Powerful Ideas in the Classroom},
  publisher = {Viewpoints Research Institute, Inc.},
  year = {2003},
  url = {http://www.squeakland.org/sqmedia/books/order.html},
  isbn = {0974313106}}

@book{Alle03b,
  author = {B.{J}. Allen-Conn and Kimberly Rose},
  title = {Fundamentale Ideen im Unterricht (orig: Powerful Ideas in the Classroom)},
  publisher = {Viewpoints Research Institute, Inc.},
  year = {2008},
  url = {http://rmod.lille.inria.fr/archives/translations/Conn03b-ger-FundamentaleIdeen.pdf},
  note = {Translated by Marcus Denker, Rita Freudenberg, Andreas Gerdes, Uwe H\"ubner, Esther Mietzsch}}

@article{Alle05a,
  title={The Fortress language specification},
  author={Allen, Eric and Chase, David and Hallett, Joe and Luchangco, Victor and Maessen, Jan-Willem and Ryu, Sukyoung and Steele Jr, Guy L and Tobin-Hochstadt, Sam and Dias, Joao and Eastlund, Carl and others},
  journal={Sun Microsystems},
  volume={139},
  number={140},
  pages={116},
  year={2005}
}

@article{Alle06a,
  author = {Eric E. Allen and Robert Cartwright},
  title = {Safe instantiation in generic Java},
  journal = {Sci. Comput. Program.},
  volume = {59},
  pages = {26--37},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2006},
  doi = {10.1016/j.scico.2005.07.003},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {0167-6423},
  number = {1-2}}

@techreport{Alle92a,
  author = {Robert Allen and David Garlan},
  title = {Towards Formalized Software Architecture},
  year = {1992},
  url = {ftp://reports.adm.cs.cmu.edu/usr/anon/1992/CMU-CS-92-163.ps},
  institution = {Carnegie Mellon University},
  month = jul,
  type = {{CMU-CS-92-163}}}

@techreport{Alle94a,
  author = {Robert Allen and David Garlan},
  title = {Formal Connectors},
  year = {1994},
  url = {ftp://reports.adm.cs.cmu.edu/usr/anon/1994/CMU-CS-94-115.ps},
  institution = {Carnegie Mellon University},
  month = mar,
  type = {{CMU-CS-94-115}}}

@inproceedings{Alle94b,
  author = {Robert Allen and David Garlan},
  title = {Beyond Definition/Use: Architectural Interconnection},
  booktitle = {Workshop on Interface Definition Languages},
  year = {1994},
  misc = {January 20},
  address = {Portland, Oregon, USA},
  month = jan}

@inproceedings{Alle94c,
  author = {Robert Allen and David Garlan},
  title = {Formalizing Architectural Connection},
  booktitle = {Proceedings ICSE '94},
  year = {1994},
  month = may}

@techreport{Alle96a,
  author = {Robert Allen and David Garlan},
  title = {The {Wright} Architectural Specification Language},
  year = {1996},
  url = {http://www.cs.cmu.edu/afs/cs/project/able/ftp/wright-tr.ps},
  address = {Pittsburgh},
  institution = {School of Computer Science, Carnegie Mellon University},
  month = sep,
  type = {{CMU-CS-96-TB}}}

@book{Alle96b,
  author = {Michael Alley},
  title = {The Craft of Scientific Writing --- Third Edition},
  publisher = {Springer-Verlag},
  year = {1996},
  edition = {Third},
  isbn = {0387947663}}

@inproceedings{Alle97a,
  author = {Robert Allen and R\'emi Douence and David Garlan},
  title = {Specifying Dynamism in Software Architectures},
  booktitle = {Proceedings of ESEC '97 Workshop on Foundations of Component-Based Systems},
  pages = {11--22},
  year = {1997},
  url = {http://www.cs.iastate.edu/~leavens/FoCBS/allen.ps},
  address = {Zurich},
  editor = {Gary T. Leavens and Murali Sitaraman},
  month = sep}

@phdthesis{Alle97b,
  author = {Robert J. Allen},
  title = {A Formal Approach to Software Architecture},
  year = {1997},
  school = {School of Computer Science, Carnegie Mellon University},
  address = {Pittsburgh, PA, USA},
  type = {{Ph.D}. Thesis}}

@inproceedings{Alle98a,
  author = {Robert Allen and David Garlan and James Ivers},
  title = {Formal Modeling and Analysis of the HLA Component Integration Standard},
  booktitle = {Proceedings of the Sixth International Symposium on the Foundations of Software Engineering (FSE-6)},
  publisher = {ACM},
  year = {1998},
  url = {http://www.cs.cmu.edu/afs/cs.cmu.edu/project/able/www/paper_abstracts/hla-fse98.html},
  address = {Lake Buena Vista, Florida},
  month = nov}

@misc{Allen10a,
  author = {Allen Wirfs-Brock},
  title = {A prototype mirrors-based refection system for JavaScript},
  year = {2010},
  howpublished = {https://github.com/allenwb/jsmirrors}}

@inproceedings{Alli11a,
  author = {Allier, Simon and Sadou, Salah and Sahraoui, Houari and Fleurquin, R{\'e}gis},
  title = {From object-oriented applications to component-oriented applications via component-oriented architecture},
  booktitle = {2011 Ninth Working IEEE/IFIP Conference on Software Architecture},
  pages = {214--223},
  year = {2011},
  organization = {IEEE}}

@inproceedings{Allo08a,
  author = {Ilham Alloui and Sorana C{\^\i}mpan and Herv{\'e} Verjus},
  title = {Towards Software Architecture Physiology: Identifying Vital Components},
  booktitle = {Working IEEE/IFIP Conference on Software Architecture (WICSA)},
  year = {2008}}

@mastersthesis{Allw06a,
  author = {Tristan Allwood},
  title = {{Fleece}, Pluggable Type Checking for Dynamic Programming Languages},
  year = {2006},
  school = {Imperial College of Science, Technology and Medicine, University of London},
  url = {http://wwwhomes.doc.ic.ac.uk/~tora/previous/project/Report.pdf},
  month = jun}

@techreport{Alma03,
  author = {Almagor, L. and Cooper, Keith and Grosul, Alexander and Harvey, Timothy and Reeves, Steve and Subramanian, Devika and Torczon, Linda and Waterman, Todd},
  title = {Compilation Order Matters: Exploring the Structure of the Space of Compilation Sequences Using Randomized Search Algorithms},
  pages = {},
  year = {2003},
  month = {jan},
  institution = {Computer Science Department of Rice University},
  type = {Technical Report}}

@inproceedings{Alma89a,
  author = {Jay Almarode},
  title = {Rule-Based Delegation for Prototypes},
  booktitle = {Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA'89)},
  volume = {24},
  pages = {363--370},
  year = {1989},
  month = oct}

@inproceedings{Alma91a,
  author = {Jay Almarode},
  title = {Issues in the Design and Implementation of a Schema Designer for an {OODBMS}},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {200--218},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@phdthesis{Alme80a,
  author = {Guy T. Almes},
  title = {Garbage Collection in an Object-Oriented System},
  year = {1980},
  school = {Carnegie Mellon University},
  address = {Pittsburgh, PA},
  type = {{Ph.D}. Thesis}}

@inproceedings{Alme97a,
  author = {Paulo S\'ergio Almeida},
  title = {Balloon types: Controlling sharing of state in data types},
  booktitle = {Proceedings of ECOOP '97},
  pages = {32--59},
  publisher = {Springer Verlag},
  year = {1997},
  month = jun,
  series = {LNCS}}

@article{Alms21a,
  author = {AL-msie'deen, Ra'Fat and H Blasi, Anas},
  title = {Software Evolution Understanding: Automatic Extraction of Software Identifiers Map for Object-Oriented Software Systems},
  journal = {Journal of Communications Software and Systems},
  volume = {17},
  pages = {20--28},
  year = {2021},
  number = {1}}

@inproceedings{Aloi92a,
  author = {Nicola Aloia and Svetlana Barneva and Fausto Rabitti},
  title = {Supporting Physical Independence in an Object Database Server},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {396--412},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Alon08a,
  author = {Alonso, Omar and Devanbu, Premkumar T. and Gertz, Michael},
  title = {Expertise identification and visualization from {CVS}},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {125--128},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370780},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@article{Alon18a,
  author = {Alon, Uri and Zilberstein, Meital and Levy, Omer and Yahav, Eran},
  title = {code2vec: Learning Distributed Representations of Code},
  journal = {arXiv preprint arXiv:1803.09473},
  year = {2018}}

@article{Alpe00a,
  author = {Alpern, B. and Attanasio, C. R. and Barton, J. J. and Burke, M. G. and Cheng, P. and Choi, J. D. and Cocchi, A. and Fink, S. J. and Grove, D. and Hind, M. and Hummel, S. F. and Lieber, D. and Litvinov, V. and Mergen, M. F. and Ngo, T. and Russell, J. R. and Sarkar, V. and Serrano, M. J. and Shepherd, J. C. and Smith, S. E. and Sreedhar, V. C. and Srinivasan, H. and Whaley, J.},
  title = {The {Jalape\~{n}o} virtual machine},
  journal = {IBM Systems Journal},
  volume = {39},
  pages = {211--238},
  publisher = {IBM},
  year = {2000},
  url = {http://dx.doi.org/10.1147/sj.391.0211},
  doi = {10.1147/sj.391.0211},
  abstract = {Jalape\~{n}o is a virtual machine for Java{\texttrademark} servers written in the Java language. To be able to address the requirements of servers (performance and scalability in particular), Jalape\~{n}o was designed'' from scratch ''to be as self-sufficient as possible. Jalape\~{n}o's unique object model and memory layout allows a hardware null-pointer check as well as fast access to array elements, fields, and methods. Run-time services conventionally provided in native code are implemented primarily in Java. Java threads are multiplexed by virtual processors (implemented as operating system threads). A family of concurrent object allocators and parallel type-accurate garbage collectors is supported. Jalape\~{n}o's interoperable compilers enable quasi-preemptive thread switching and precise location of object references. Jalape\~{n}o's dynamic optimizing compiler is designed to obtain high quality code for methods that are observed to be frequently executed or computationally intensive.},
  date-added = {2014-02-12 14:20:58 +0000},
  date-modified = {2014-02-12 14:20:58 +0000},
  institution = {IBM Research Division, Thomas J. Watson Research Center, P.O. Box 218, Yorktown Heights, New York 10598, USA},
  issn = {0018-8670},
  number = {1}}

@inproceedings{Alpe02a,
  author = {Alpern, Bowen and Butrico, Maria A and Cocchi, Anthony and Dolby, Julian and Fink, Stephen J and Grove, David and Ngo, Ton},
  title = {Experiences Porting the Jikes RVM to Linux/IA32},
  booktitle = {Java Virtual Machine Research and Technology Symposium},
  pages = {51--64},
  year = {2002}}

@inproceedings{Alpe88a,
  author = {Bowen Alpern and Mark. N. Wegman and F. Kenneth Zadeck},
  title = {Detecting equality of variables in programs},
  booktitle = {Conference Record of the Fifteenth ACM Symposium on Principles of Programming Languages},
  pages = {1--11},
  year = {1988},
  month = jan}

@book{Alpe98a,
  author = {Sherman R. Alpert and Kyle Brown and Bobby Woolf},
  title = {The Design Patterns {Smalltalk} Companion},
  publisher = {Addison Wesley},
  year = {1998},
  address = {Boston, MA, USA},
  isbn = {0-201-18462-1}}

@inproceedings{Alpe99a,
  author = {Bowen Alpern and C. R. Attanasio and Anthony Cocchi and Derek Lieber and Stephen Smith and Ton Ngo and John J. Barton and Susan Flynn Hummel and Janice C. Sheperd and Mark Mergen},
  title = {Implementing Jalape\~no in Java},
  booktitle = {Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications (OOPSLA'99)},
  pages = {314--324},
  publisher = {ACM},
  year = {1999},
  doi = {10.1145/320384.320418},
  address = {New York, NY, USA},
  isbn = {1-58113-238-7}}

@inproceedings{Alph05a,
  author = {Carl Alphonce and Blake Martin},
  title = {Green: a customizable UML class diagram plug-in for eclipse},
  booktitle = {OOPSLA '05: Companion to the 20th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages = {168--169},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1094855.1094917},
  address = {New York, NY, USA},
  isbn = {1-59593-193-7},
  location = {San Diego, CA, USA}}

@article{Alpu09a,
  author = {Alpuente, Mar{\'\i}a and Romero, Daniel},
  title = {A visual technique for web pages comparison},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {235},
  pages = {3--18},
  publisher = {Elsevier},
  year = {2009}}

@inproceedings{Alru18b,
  author = {Hussein Alrubaye and Mohamed Wiem Mkaouer},
  title = {Automating the detection of third-party java library migration at the function level},
  booktitle = {Annual International Conference on Computer Science and Software Engineering ({CASCON})},
  pages = {60-71},
  publisher = {IBM Corp.},
  year = {2018}}

@inproceedings{Alru19a,
  author = {Alrubaye, Hussein and Mkaouer, Mohamed Wiemand Ouni, Ali},
  title = {On the Use of Information Retrieval to Automate the Detection of Third-Party Java Library Migration at the Method Level},
  booktitle = {{ICPC}'19},
  year = {2019}}

@inbook{Alru19b,
  author = {Alrubaye, Hussein and Mkaouer, Mohamed Wiem and Peruma, Anthony},
  title = {Variability in Library Evolution: Foundations and Applications},
  pages = {295-320},
  publisher = {CRC Press},
  year = {2019},
  doi = {10.1201/9780429022067-13},
  isbn = {9780429022067},
  month = {jan}}

@article{Alru20a,
  author = {Alrubaye, Hussein and Mkaouer, Mohamed Wiem and Khokhlov, Igor and Reznik, Leon and Ouni, Ali and Mcgoff, Jason},
  title = {Learning to recommend third-party library migration opportunities at the {API} level},
  journal = {Journal of {A}pplied {S}oftware {C}omputing},
  pages = {106-140},
  publisher = {Elsevier},
  year = {2020}}

@inproceedings{Alsh09a,
  author = {Alshayeb, Mohammad},
  title = {Refactoring Effect on Cohesion Metrics},
  booktitle = {Proceedings of the 2009 International Conference on Computing, Engineering and Information},
  pages = {3--7},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/ICC.2009.12},
  doi = {10.1109/ICC.2009.12},
  address = {Washington, DC, USA},
  isbn = {978-0-7695-3538-8},
  keywords = {Refactoring, software metrics, software quality},
  numpages = {5},
  series = {ICC'09}}

@inproceedings{Alsu21a,
  author = {Reem S. Alsuhaibani and Christian D. Newman and Michael J. Decker and Michael L. Collard and Jonathan I. Maletic},
  title = {On the Naming of Methods: A Survey of Professional Developers},
  booktitle = {International Conference on Software Engineering},
  year = {2021}}

@article{Alth99a,
  author = {Marcel Altherr and Martin Erzberger and Silvano Maffeis},
  title = {{SoftWired} {iBus} --- Middleware for the {Java} Platform},
  journal = {{Java} Report},
  volume = 4,
  year = {1999},
  month = dec,
  number = 12}

@inproceedings{Altm08a,
  author = {Kerstin Altmanninger},
  title = {Models in Conflict - Towards a Semantically Enhanced Version Control System for Models},
  booktitle = {Models in Software Engineering},
  year = {2008},
  series = {LNCS 5002}}

@inproceedings{Altm23a,
  author = {Altmayer Pizzorno, Juan and Berger, Emery D},
  title = {SlipCover: Near Zero-Overhead Code Coverage for Python},
  booktitle = {Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis},
  pages = {1195--1206},
  year = {2023}}

@article{Alts90a,
  author = {Stephen F. Altschul and Warren Gish and Webb Miller and Eugene W. Myers and David J. Lipman},
  title = {Basic Local Alignment Search Tool},
  journal = {J. Mol. Biol.},
  volume = {215},
  pages = {403--410},
  year = {1990}}

@book{Alur01a,
  author = {Deepak Alur and John Crupi and Dan Malks},
  title = {Core J2EE Patterns: Best Practices and Design Strategies},
  publisher = {Pearson Education},
  year = {2001},
  isbn = {0130648841}}

@book{Alur03a,
  author = {Deepak Alur and John Crupi and Dan Malks},
  title = {Core J2EE Patterns: Best Practices and Design Strategies 2nd edition},
  publisher = {Prentice Hall, Sun Microsystems Press},
  year = {2003},
  isbn = {0131422464},
  month = jun}

@inproceedings{Alve10a,
  author = {Alves, Tiago L and Ypma, Christiaan and Visser, Joost},
  title = {{Deriving Metric Thresholds from Benchmark Data}},
  booktitle = {International Conference on Software Maintenance ({ICSM})},
  pages = {1--10},
  year = {2010},
  organization = {IEEE}}

@inproceedings{Amad91a,
  author = {Roberto M. Amadio and Luca Cardelli},
  title = {Subtyping Recursive Types},
  booktitle = {Proceedings POPL '91},
  pages = {104--118},
  year = {1991}}

@inproceedings{Amad93a,
  author = {Roberto M. Amadio},
  title = {On the Reduction of Chocs Bisimulation to $\pi$-calculus Bisimulation},
  booktitle = {Proceedings of CONCUR '93},
  volume = {715},
  pages = {112--126},
  publisher = {Springer-Verlag},
  year = {1993},
  editor = {E. Best},
  series = {LNCS}}

@inproceedings{Amad96a,
  author = {Roberto M. Amadio and Ilaria Castellani and Davide Sangiorgi},
  title = {On Bisimulations for the Asynchronous $\pi$-calculus},
  booktitle = {Proceedings of CONCUR '96},
  volume = 1119,
  pages = {147--162},
  publisher = {Springer-Verlag},
  year = {1996},
  editor = {U. Montanari and V. Sassone},
  series = {LNCS}}

@inproceedings{Amal11a,
  author = {Amalfitano, Domenico and Fasolino, Anna Rita and Tramontana, Porfirio},
  title = {A {GUI} Crawling-Based Technique for Android Mobile Application Testing},
  booktitle = {2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops},
  pages = {252--261},
  publisher = {{IEEE}},
  year = {2011},
  url = {http://ieeexplore.ieee.org/document/5954416/},
  doi = {10.1109/ICSTW.2011.77},
  abstract = {As mobile applications become more complex, specific development tools and frameworks as well as costeffective testing techniques and tools will be essential to assure the development of secure, high-quality mobile applications.},
  date = {2011-03},
  isbn = {978-1-4577-0019-4},
  keywords = {{GUI} testing},
  langid = {english},
  urldate = {2018-06-22}}

@inproceedings{Amal12a,
  author = {Amalfitano, Domenico and Fasolino, Anna Rita and Tramontana, Porfirio and De Carmine, Salvatore and Memon, Atif M.},
  title = {Using {GUI} ripping for automated testing of Android applications},
  booktitle = {2012 Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering},
  pages = {258},
  publisher = {{ACM} Press},
  year = {2012},
  url = {http://dl.acm.org/citation.cfm?doid=2351676.2351717},
  doi = {10.1145/2351676.2351717},
  abstract = {We present {AndroidRipper}, an automated technique that tests Android apps via their Graphical User Interface ({GUI}). {AndroidRipper} is based on a user-interface driven ripper that automatically explores the app's {GUI} with the aim of exercising the application in a structured manner. We evaluate {AndroidRipper} on an open-source Android app. Our results show that our {GUI}-based test cases are able to detect severe, previously unknown, faults in the underlying code, and the structured exploration outperforms a random approach.},
  date = {2012},
  isbn = {978-1-4503-1204-2},
  keywords = {{GUI} testing},
  langid = {english},
  urldate = {2018-06-22}}

@inproceedings{Aman16a,
  author = {Amann, Sven and Proksch, Sebastian and Nadi, Sarah and Mezini, Mira},
  title = {{A Study of Visual Studio Usage in Practice}},
  booktitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  volume = {1},
  pages = {124--134},
  publisher = {{IEEE}},
  year = {2016},
  timestamp = {2016-07-25T11:50:55Z},
  urldate = {2016-07-25}}

@inproceedings{Aman20a,
  author = {Aman, Bogdan and Ciobanu, Gabriel and Gl{\"u}ck, Robert and Kaarsgaard, Robin and Kari, Jarkko and Kutrib, Martin and Lanese, Ivan and Mezzina, Claudio Antares and Mikulski, {\L}ukasz and Nagarajan, Rajagopal and others},
  title = {Foundations of reversible computation},
  booktitle = {International Conference on Reversible Computation},
  pages = {1--40},
  year = {2020},
  organization = {Springer, Cham}}

@phdthesis{Aman97a,
  author = {Stephan Amann},
  title = {Komponentenorientierte Entwicklung von Grafikapplikationen mit {BOOGA}},
  year = {1997},
  school = {University Bern},
  type = {{Ph.D}. Thesis}}

@techreport{Ambl91a,
  author = {Simon Ambler},
  title = {A de Bruijn notation for the $\pi$-calculus},
  year = {1991},
  institution = {University of London}}

@incollection{Ambr08a,
  author = {D'Ambros, M. and Gall, H. and Lanza, M. and Pinzger, M.},
  title = {Analysing Software Repositories to Understand Software Evolution},
  booktitle = {Software Evolution},
  pages = {37--67},
  publisher = {Springer-Verlag},
  year = {2008},
  annote = {bookchapter},
  isbn = {978-3-540-76439-7}}

@inproceedings{Ambr09a,
  author = {Marco D'Ambros and Michele Lanza and Romain Robbes},
  title = {On the Relationship Between Change Coupling and Software Defects},
  booktitle = {Proceedings of the 16th Working Conference on Reverse Engineering ({WCRE} 2009)},
  pages = {135--144},
  year = {2009},
  url = {http://www.inf.usi.ch/phd/dambros/publications/{WCRE}09a.pdf}}

@article{Ambr09b,
  author = {D'Ambros, Marco and Lanza, Michele},
  title = {Visual software evolution reconstruction},
  journal = {J. Softw. Maint. Evol.},
  volume = {21},
  pages = {217--232},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2009},
  doi = {10.1002/smr.v21:3},
  address = {New York, NY, USA},
  issn = {1532-060X},
  number = {3}}

@techreport{Amer86a,
  author = {Pierre America},
  title = {Definition of the programming language {POOL}-{T}},
  year = {1986},
  misc = {Oct. 6},
  address = {Eindhoven, the Netherlands},
  institution = {Philips Research Laboratories},
  month = oct,
  number = {0091},
  type = {Doc. No.}}

@techreport{Amer86b,
  author = {Pierre America},
  title = {Rationale for the design of {POOL}},
  year = {1986},
  misc = {January 8},
  address = {Eindhoven, the Netherlands},
  institution = {Philips Research Laboratories},
  month = jan,
  number = {0053},
  type = {Doc. No.}}

@inproceedings{Amer86c,
  author = {Pierre America and Jaco de Bakker and Joost N. Kok and Jan Rutten},
  title = {Operational Semantics of a Parallel Object-Oriented Language},
  booktitle = {Proceedings POPL '86},
  pages = {194--208},
  year = {1986},
  misc = {Jan 13-15},
  address = {St. Petersburg Beach, Florida},
  month = jan}

@techreport{Amer87a,
  author = {Pierre America and Jaco W. de Bakker},
  title = {Designing Equivalent Semantic Models for Process Creation},
  year = {1987},
  address = {Amsterdam},
  institution = {CWI},
  month = jul,
  type = {CS-R8732}}

@inproceedings{Amer87b,
  author = {Pierre America},
  title = {Inheritance and Subtyping in a Parallel Object-Oriented Language},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {234--242},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@incollection{Amer87c,
  author = {Pierre America},
  title = {{POOL}-{T}: {A} Parallel Object-Oriented Language},
  booktitle = {Object-Oriented Concurrent Programming},
  pages = {199--220},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  editor = {A. Yonezawa and M. Tokoro}}

@article{Amer89a,
  author = {Pierre America and Jaco de Bakker and J. Kok and Jan Rutten},
  title = {Denotational Semantics of a Parallel Object-Oriented Language},
  journal = {Information and Computation},
  volume = {83},
  pages = {152--205},
  year = {1989},
  month = nov,
  number = {2}}

@phdthesis{Amer89b,
  author = {Pierre America and Jaco de Bakker and Jan Rutten},
  title = {A Parallel Object-Oriented Language: Design and Semantic Foundations},
  year = {1989},
  school = {CWI, Free University of Amsterdam},
  type = {{Ph.D}. Thesis}}

@inproceedings{Amer90a,
  author = {Pierre America and Jan Rutten},
  title = {A Layered Semantics for a Parallel Object-Oriented Language},
  booktitle = {Proceedings REX/FOOLS Workshop},
  year = {1990},
  address = {Noordwijkerhout},
  month = jun}

@inproceedings{Amer90b,
  author = {Pierre America and Frank van der Linden},
  title = {A Parallel Object-Oriented Language with Inheritance and Subtyping},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {161--168},
  year = {1990},
  month = oct}

@inproceedings{Amer90c,
  author = {Pierre America},
  title = {Designing an Object-Oriented Programming Language with Behavioural Subtyping},
  booktitle = {Proceedings REX/FOOLS Workshop},
  year = {1990},
  address = {Noordwijkerhout},
  month = jun}

@book{Amer91a,
  title = {Proceeding of {ECOOP}'91 European Conference on Object-Oriented Programming},
  volume = 512,
  publisher = {Springer-Verlag},
  year = {1991},
  editor = {Pierre America},
  isbn = {3-540-54262-0},
  series = {LNCS}}

@inproceedings{Amer92a,
  author = {Pierre America},
  title = {Formal Techniques for Parallel Object-Oriented Languages},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {119--140},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@inproceedings{Amie96a,
  author = {Eric Amiel and Eric Dujardin},
  title = {Supporting Explicit Disambiguation of Multi-methods},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {167--188},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {Pierre Cointe},
  month = jul,
  series = {LNCS}}

@incollection{Amok20a,
  author = {Amokrane, Nawel and Laval, Jannik and Lanco, Philippe and Derras, Mustapha and Moala, Nejib},
  title = {Analysis of Data Exchanges, Towards a Tooled Approach for Data Interoperability Assessment},
  booktitle = {Intelligent Systems: Theory, Research and Innovation in Applications},
  pages = {345--363},
  publisher = {Springer},
  year = {2020}}

@inproceedings{Amse95a,
  author = {Maurice Amsellem},
  title = {ChyPro: {A} Hypermedia Programming Environment for {Smalltalk}-80},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {449--470},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@article{Anan14a,
  author = {V. {Ananda Kumar} and Krishan K. Pandey and Devendra Kumar Punia},
  title = {Cyber security threats in the power sector: Need for a domain specific regulatory framework in India},
  journal = {Energy Policy},
  volume = {65},
  pages = {126 - 133},
  year = {2014},
  url = {http://www.sciencedirect.com/science/article/pii/S0301421513010471},
  doi = {10.1016/j.enpol.2013.10.025},
  keywords = {Cyber security regulations, Smart grid, India power sector}}

@techreport{Anas00a,
  author = {M. Anastasopoulos and J. Bayer and O. Flege and C. Gacek},
  title = {A Process for Product Line Architecture Creation and Evaluation - PuLSE-DSSA Version 2.0.},
  year = {2000},
  url = {http://publica.fraunhofer.de/documents/N-1463.html},
  institution = {Fraunhofer IESE},
  number = {038.00/E}}

@inproceedings{Anas04a,
  author = {Michalis Anastasopoulos and Dirk Muthig},
  title = {An Evaluation of Aspect-Oriented Programming as a Product Line Implementation Technology},
  booktitle = {In Proceedings of the 8th International Conference on Software Reuse},
  volume = {3107},
  pages = {141--156},
  publisher = {Springer-Verlag},
  year = {2004},
  series = {LNCS}}

@inproceedings{Anco00a,
  author = {Davide Ancona and Giovanni Lagorio and Elena Zucca},
  title = {Jam --- A Smooth Extension of {Java} with Mixins},
  booktitle = {ECOOP 2000},
  pages = {145--178},
  year = {2000},
  number = {1850},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Anco00b,
  author = {Davide Ancona},
  title = {{MIX(FL)}: a kernel language of mixin modules},
  booktitle = {AMAST 2000 --- Algebraic Methodology And Software Technology},
  pages = {454--468},
  publisher = {Springer Verlag},
  year = {2000},
  url = {ftp://ftp.disi.unige.it/pub/person/AnconaD/DISI-TR-96-23.ps.gz},
  editor = {T. Rus},
  number = 1816,
  series = {LNCS}}

@inproceedings{Anco01a,
  author = {Davide Ancona and Elena Zucca},
  title = {True Modules for {Java}-like Languages},
  booktitle = {ECOOP 2001},
  pages = {354--380},
  publisher = {Springer Verlag},
  year = {2001},
  url = {ftp://ftp.disi.unige.it/pub/person/AnconaD/ECOOP01.ps.gz},
  editor = {J. L. Knudsen},
  number = {2072},
  series = {LNCS}}

@article{Anco01b,
  author = {Davide Ancona and Elena Zucca},
  title = {A Theory of Mixin Modules: Algebraic Laws and Reduction Semantics},
  journal = {Mathematical Structures in Computer Science},
  volume = {12},
  pages = {701--737},
  year = {2001},
  url = {http://www.disi.unige.it/person/AnconaD/Journals.html},
  number = {6}}

@article{Anco02a,
  author = {Davide Ancona and Elena Zucca},
  title = {A calculus of module systems},
  journal = {J. Funct. Program.},
  volume = {12},
  pages = {91--132},
  publisher = {Cambridge University Press},
  year = {2002},
  doi = {10.1017/S0956796801004257},
  address = {New York, NY, USA},
  issn = {0956-7968},
  number = {2}}

@article{Anco04a,
  author = {Davide Ancona and Elena Zucca},
  title = {Principal typings for Java-like languages},
  journal = {SIGPLAN Not.},
  volume = {39},
  pages = {306--317},
  publisher = {ACM},
  year = {2004},
  doi = {10.1145/982962.964027},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {1}}

@inproceedings{Anco07a,
  author = {Ancona, D. and Ancona, M. and Cuni, A and Matsakis, N.},
  title = {R{P}ython: a Step Towards Reconciling Dynamically and Statically Typed OO Languages},
  booktitle = {Proceedings of the 2007 Symposium on Dynamic Languages (DSL 07)},
  pages = {53--64},
  publisher = {ACM},
  year = {2007},
  abstract = {Although the C-based interpreter of Python is
 reasonably fast, implementations on the CLI or the JVM
 platforms offers some advantages in terms of robustness
 and interoperability. Unfortunately, because the CLI
 and JVM are primarily designed to execute statically
 typed, object-oriented languages, most dynamic language
 implementations cannot use the native bytecodes for
 common operations like method calls and exception
 handling; as a result, they are not able to take full
 advantage of the power offered by the CLI and JVM. We
 describe a different approach that attempts to preserve
 the flexibility of Python, while still allowing for
 efficient execution. This is achieved by limiting the
 use of the more dynamic features of Python to an
 initial, bootstrapping phase. This phase is used to
 construct a final RPython (Restricted Python) program
 that is actually executed. RPython is a proper subset
 of Python, is statically typed, and does not allow
 dynamic modification of class or method definitions;
 however, it can still take advantage of Python features
 such as mixins and first-class methods and classes.
 This paper presents an overview of RPython, including
 its design and its translation to both CLI and JVM
 bytecode. We show how the bootstrapping phase can be
 used to implement advanced features, like extensible
 classes and generative programming. We also discuss
 what work remains before RPython is truly ready for
 general use, and compare the performance of RPython
 with that of other approaches.},
  ftp = {ftp://ftp.disi.unige.it/pub/person/AnconaD/DLS08.pdf}}

@inproceedings{Anco97a,
  author = {D. Ancona and E. Zucca},
  title = {Overriding Operators in a Mixin-Based Framework},
  booktitle = {PLILP '97-9th Intl. Symp. on Programming Languages, Implementations, Logics and Programs},
  pages = {47--61},
  publisher = {Springer Verlag},
  year = {1997},
  editor = {H.~Glaser and P.~Hartel and H.~Kuchen},
  number = {1292},
  series = {lnc}}

@article{Anco98a,
  author = {D. Ancona and E. Zucca},
  title = {A Theory of Mixin Modules: Basic and Derived Operators},
  journal = {Mathematical Structures in Computer Science},
  volume = 8,
  pages = {401--446},
  year = {1998},
  url = {http://www.disi.unige.it/person/AnconaD/Journals.html},
  month = aug,
  number = 4}

@inproceedings{Anco98b,
  author = {D. Ancona and E. Zucca},
  title = {An Algebra of Mixin Modules},
  booktitle = {wadt97},
  pages = {92--106},
  publisher = {sv},
  year = {1998},
  editor = {F. Parisi Presicce},
  number = {1376},
  series = {lncs}}

@inproceedings{Anco99a,
  author = {D. Ancona and E. Zucca},
  title = {A Primitive Calculus for Module Systems},
  booktitle = {Principles and Practice of Declarative Programming},
  pages = {62--79},
  publisher = {Springer Verlag},
  year = {1999},
  editor = {G. Nadathur},
  number = {1702},
  series = {LNCS}}

@incollection{Anco99b,
  author = {Ancona, Massimo and Cazzola, Walter and Fernandez, Eduardo B},
  title = {Reflective authorization systems: Possibilities, benefits, and drawbacks},
  booktitle = {Secure Internet Programming},
  pages = {35--49},
  publisher = {Springer},
  year = {1999},
  date-added = {2015-06-12 13:39:09 +0000},
  date-modified = {2015-06-12 13:39:21 +0000}}

@inproceedings{Ande01a,
  author = {Paul Anderson and Tim Teitelbaum},
  title = {Software {Inspection} {Using} {Code}{Surfer}},
  booktitle = {Proceedings of the International Workshop on Inspection in Software Engineering},
  year = {2001},
  series = {WISE'01}}

@inproceedings{Ande02a,
  author = {Christopher Anderson and Sophia Drossopoulou},
  title = {Delta -- an imperative object based calculus},
  booktitle = {Proceedings of First International Workshop on Unanticipated Software Evolution (USE2002)},
  year = {2002},
  url = {http://pubs.doc.ic.ac.uk/deltacalc/deltacalc.pdf http://pubs.doc.ic.ac.uk/deltacalc/ http://www.informatik.uni-bonn.de/~gk/use/2002/index.html},
  note = {co-located with ECOOP 2002}}

@inproceedings{Ande04a,
  author = {Jakob R. Andersen and Lars Bak and Steffen Grarup and Kasper V. Lund and Toke Eskildsen and Klaus Marius Hansen and Mads Torgersen},
  title = {Design, Implementation, and Evaluation of the Resilient Smalltalk Embedded Platform},
  booktitle = {Proceedings of ESUG International Smalltalk Conference 2004},
  year = {2004},
  month = sep}

@inproceedings{Ande05a,
  author = {Anderson, Christopher and Giannini, Paola and Drossopoulou, Sophia},
  title = {Towards Type Inference for JavaScript},
  booktitle = {ECOOP'05},
  year = {2005},
  keywords = {inference type}}

@inproceedings{Ande08b,
  author = {Andersen, Jesper and Lawall, Julia L.},
  title = {Generic Patch Inference},
  booktitle = {Automated Software Engineering International Conference},
  pages = {337 - 346},
  year = {2008},
  month = {sep}}

@article{Ande10a,
  author = {Andersen, J. and Lawall, J.},
  title = {Generic patch inference},
  journal = {Automated Software Engineering},
  volume = {17},
  pages = {119--148},
  publisher = {Springer},
  year = {2010},
  number = {2}}

@book{Ande73a,
  author = {M. R. Andenberg},
  title = {Cluster Analysis for Applications},
  publisher = {Academic Press},
  year = {1973},
  address = {London}}

@book{Ande83a,
  author = {J.R. Anderson},
  title = {The Architecture of Cognition},
  publisher = {Harvard University Press},
  year = {1983}}

@article{Ande84a,
  author = {John R. Anderson and Robert Farrell and Ron Sauers},
  title = {Learning to program in {L}ISP},
  journal = {Cognitive Science},
  volume = {8},
  pages = {87--129},
  year = {1984},
  url = {http://www.cogsci.rpi.edu/CSJarchive/1984v08/i02/p0087p0129/MAIN.PDF},
  number = {2}}

@inproceedings{Ande86a,
  author = {David B. Anderson},
  title = {Experience with Flamingo: {A} Distributed, Object-Oriented User Interface System},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {177--185},
  year = {1986},
  month = nov}

@inproceedings{Ande92a,
  author = {Egil P. Andersen and Trygve Reenskaug},
  title = {System Design by Composing Structures of Interacting Objects},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {133--152},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@article{Ande92b,
  author = {Birger Andersen},
  title = {Ellie: a General, Fine-Grained First-Class, Object-Based Language},
  journal = {Journal of Object-Oriented Programming},
  volume = {5},
  pages = {35--42},
  year = {1992},
  month = may,
  number = {2}}

@techreport{Ande93a,
  author = {Egil P. Andersen},
  title = {Substitutability of Abstract Behaviour Descriptions},
  year = {1993},
  url = {ftp://ftp.ifi.uio.no/pub/rolem/BDConformance.ps.gz},
  institution = {University of Oslo},
  type = {preliminary draft}}

@book{Ande95a,
  title = {Proceedings of {ECOOP}'95 Workshop on Mobility and Replication},
  publisher = {??},
  year = {1995},
  editor = {Birger Anderson and Carlos Baquero and Rui Oliveira},
  month = aug}

@phdthesis{Ande97a,
  author = {Egil P. Andersen},
  title = {Conceptual Modeling of Objects: a Role Modelling Approach},
  year = {1997},
  school = {University of Oslo},
  month = nov}

@book{Ande97b,
  author = {U. Andelfinger},
  title = {Diskursive Anforderungsanalyse. Ein Beitrag zum Reduktionsproblem bei Systementwicklungen in der Informatik},
  publisher = {Peter Lang},
  year = {1997},
  address = {Frankfurt}}

@phdthesis{Andr02a,
  author = {Keith Andrews},
  title = {Visualizing Information Structures. Aspects of Information Visualization},
  year = {2002},
  school = {Technische Universit\"at Graz},
  url = {http://www.iicm.edu/keith},
  month = nov,
  type = {Professorial Thesis}}

@article{Andr05a,
  author = {Olena Andriyevska and Natalia Dragan and Bonita Simoes and Jonathan I. Maletic},
  title = {Evaluating {UML} Class Diagram Layout based on Architectural Importance},
  journal = {VISSOFT 2005. 3rd IEEE International Workshop on Visualizing Software for Understanding and Analysis},
  volume = {0},
  pages = {9},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/VISSOF.2005.1684296},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7803-9540-9}}

@inproceedings{Andr06a,
  author = {Chris Andreae and Yvonne Coady and Celina Gibbs and James Noble and Jan Vitek and Tian Zhao},
  title = {Scoped Types and Aspects for Real-Time {J}ava},
  booktitle = {Proceedings ECOOP '06},
  volume = {4067},
  pages = {124--147},
  publisher = {Springer-Verlag},
  year = {2006},
  month = jul,
  series = {LNCS}}

@inproceedings{Andr06b,
  author = {Chris Andreae and James Noble and Shane Markstrum and Todd Millstein},
  title = {A framework for implementing pluggable type systems},
  booktitle = {OOPSLA '06: Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications},
  pages = {57--74},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1167473.1167479},
  address = {New York, NY, USA},
  isbn = {1-59593-348-4},
  location = {Portland, Oregon, USA}}

@article{Andr81a,
  author = {Gregory R. Andrews},
  title = {Synchronizing Resources},
  journal = {ACM TOPLAS},
  volume = {3},
  pages = {405--430},
  year = {1981},
  month = oct,
  number = {4}}

@article{Andr83a,
  author = {Gregory R. Andrews and Fred B. Schneider},
  title = {Concepts and Notations for Concurrent Programming},
  journal = {ACM Computing Surveys},
  volume = {15},
  pages = {3--43},
  year = {1983},
  month = mar,
  number = {1}}

@inproceedings{Andr87a,
  author = {Timothy Andrews and Craig Harris},
  title = {Combining Language and Database Advances in an Object-Oriented Development Environment},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {430--440},
  year = {1987},
  month = dec}

@inproceedings{Andr89a,
  author = {Jean-Marc Andreoli and Remo Pareschi},
  title = {Logic Programming with Sequent Systems --- {A} Linear Logic Approach},
  booktitle = {Proceedings of the Workshop on Extensions of Logic Programming},
  publisher = {Springer-Verlag},
  year = {1989},
  series = {LNCS}}

@inproceedings{Andr90a,
  author = {Jean-Marc Andreoli and Remo Pareschi},
  title = {Linear Objects: Logical Processes with Built-In Inheritance},
  booktitle = {Proceedings 7th ICLP},
  year = {1990},
  address = {Jerusalem}}

@inproceedings{Andr90b,
  author = {Jean-Marc Andreoli and Remo Pareschi},
  title = {{LO} and Behold! Concurrent Structured Processes},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {44--56},
  year = {1990},
  month = oct}

@inproceedings{Andr91a,
  author = {Jean-Marc Andreoli and Remo Pareschi},
  title = {Communication as Fair Distribution of Knowledge},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {212--229},
  year = {1991},
  month = nov}

@article{Andr91b,
  author = {Jean-Marc Andreoli and Remo Pareschi},
  title = {Linear Objects: Logical Processes with Built-In Inheritance},
  journal = {New Generation Computing},
  volume = {9},
  pages = {445--473},
  publisher = {OHMSHA and Springer-Verlag},
  year = {1991}}

@book{Andr91c,
  author = {Gregory R. Andrews},
  title = {Concurrent Programming --- Principles and Practice},
  publisher = {The Benjamin Cummings Publishing Co. Inc},
  year = {1991},
  isbn = {0-80553-0086-4}}

@article{Andr91d,
  author = {Gregory R. Andrews},
  title = {Paradigms for Process Interaction in Distributed Systems},
  journal = {ACM Computing Surveys},
  volume = {23},
  pages = {49--90},
  year = {1991},
  month = mar,
  number = {1}}

@unpublished{Andr92a,
  author = {Jean-Marc Andreoli and Lone Leth and Remo Pareschi and Bent Thomsen},
  title = {On the Chemistry of Broadcasting},
  year = {1992},
  note = {ECRC, Munich},
  type = {draft}}

@inproceedings{Andr92b,
  author = {Pascal Andr\'e and Jean-Claude Royer},
  title = {Optimizing Method Search with Lookup Caches and Incremental Coloring},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {110--126},
  year = {1992},
  month = oct}

@inproceedings{Andr92c,
  author = {Jean-Marc Andreoli and Remo Pareschi and Marc Bourgois},
  title = {Dynamic Programming as Multiagent Programming},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {163--176},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@book{Andr92d,
  author = {Michael Andres and Anke Richter},
  title = {Beschreibung `mobiler Prozesse' mit Graphgrammatiken},
  publisher = {Studienarbeit, Universit{\"a}t Erlangen},
  year = {1992}}

@inproceedings{Andr93a,
  author = {Jean-Marc Andreoli and Paolo Ciancarini and Remo Pareschi},
  title = {Interaction Abstract Machines},
  booktitle = {Research Directions in Object-Based Concurrency},
  year = {1993},
  editor = {G. Agha and P. Wegner and A. Yonezawa},
  note = {To appear}}

@inproceedings{Andr93b,
  author = {Jean-Marc Andreoli and Lone Leth and Remo Pareschi and Bent Thomsen},
  title = {True Concurrency Semantics for a Linear Logic Programming Language with Broadcast Communication},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {182--198},
  publisher = {Springer-Verlag},
  year = {1993},
  series = {LNCS}}

@incollection{Andr95a,
  author = {Jean-Marc Andreoli and Herve Gallaire and Remo Pareschi},
  title = {Rule-based Object Coordination},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = {924},
  pages = {1--13},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {We discuss a framework in which the traditional
features of objects (encapsulation, communication
etc.) are enhanced with synchronization and
coordination facilities using the declarative power
of rules. We propose two interpretation of rules one
re-active and the other pro-active, corresponding to
different kinds of interaction between the rules and
the objects. Finally, we consider the problem of
capturing domain-specific knowledge within a general
coordination framework, for which constraints offer
a promising direction of research.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@book{Andr96a,
  title = {Coordination Programming: Mechanisms, Models and Semantics},
  publisher = {Imperial College Press},
  year = {1996},
  editor = {J.-M.Andreoli and C. Hankin and D. Le M\'etayer},
  isbn = {1-86094-023-4}}

@article{Andr96b,
  author = {Jean-Marc Andreoli and Steve Freeman and Remo Pareschi},
  title = {The Coordination Language Facility: Coordination of Distributed Objects},
  journal = {Theory and Practice of Object Systems (TAPOS)},
  volume = {2},
  pages = {635--667},
  publisher = {Wiley},
  year = {1996},
  number = {2}}

@article{Andr97a,
  author = {Jean-Marc Andreoli and Francois Pacull and Daniele Pagani and Remo Pareschi},
  title = {Multiparty Negotiation of Distributed Object Services},
  journal = {Computer Supported Cooperative Work: The Journal of Collaborative Computing},
  volume = {6},
  pages = {1--26},
  year = {1997},
  number = {1}}

@inproceedings{Andr97b,
  author = {Keith Andrews and Josef Wolte and Michael Pichler},
  title = {Information Pyramids: A New Approach to Visualising Large Hierarchies},
  booktitle = {Proceedings of VIS 1997 (IEEE Visualization Conference)},
  pages = {49--52},
  publisher = {IEEE CS},
  year = {1997},
  month = oct}

@article{Andr98a,
  author = {Jean-Marc Andreoli and Francois Pacull and Daniele Pagani and Remo Pareschi},
  title = {Multiparty Negotiation of Dynamic Distributed Object Services},
  journal = {The Journal of Science of Computer Programming},
  volume = {??},
  pages = {??},
  year = {1998},
  number = {??}}

@inproceedings{Andr98b,
  author = {K. Andrews and H. Heidegger},
  title = {Information Slices: Visualizing and Exploring Large Hierarchies using Cascading, Semi-circular Discs},
  booktitle = {IEEE Information Visualization Symposium 1998 Late Breaking Hot Topics},
  pages = {9-12},
  year = {1998}}

@inproceedings{Andr99a,
  author = {Lu{\'\i}s Filipe Andrade and Jos{\'e} Luiz Fiadeiro},
  title = {{Interconnecting Objects via Contracts}},
  booktitle = {Proceedings UML '99 (The Second International Conference on The U nified Modeling Language)},
  volume = {1723},
  publisher = {Springer-Verlag},
  year = {1999},
  address = {Kaiserslautern, Germany},
  editor = {Bernhard Rumpe},
  month = oct,
  series = {LNCS}}

@inproceedings{Andre14a,
  author = {Esben Andreasen and Anders Moller},
  title = {Determinacy in Static Analysis of jQuery},
  booktitle = {Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  year = {2014}}

@inproceedings{Angu18,
  author = {Angulo, Guisella and Mart\'{\i}n, Daniel San and Santos, Bruno and Ferrari, Fabiano Cutigi and de Camargo, Valter Vieira},
  title = {An Approach for Creating KDM2PSM Transformation Engines in ADM Context: The RUTE-K2J Case},
  booktitle = {Proceedings of the VII Brazilian Symposium on Software Components, Architectures, and Reuse},
  pages = {92-101},
  publisher = {Association for Computing Machinery},
  year = {2018},
  url = {https://doi.org/10.1145/3267183.3267193},
  doi = {10.1145/3267183.3267193},
  abstract = {Architecture-Driven Modernization (ADM) is a type of software reenginering that employs standard metamodels along the process and deals with the whole system architecture. The main metamodel is the Knowledge-Discovery Metamodel (KDM), which is language, platform independent and it is able to represent several aspects of a software system. Although there is much research effort in the reverse engineering phase of ADM, little have been published around the forward engineering one; mainly on the generation of Platform-Specific Models (PSM) from KDM. This phase is essential as it belongs to the final part of the horseshoe cycle, completing the reengineering process. However, the lack of research and the absence of tooling support hinders the industrial adoption of ADM. Therefore, in this paper we propose an approach to support engineers in creating Transformation Engines (TE) from KDM to any other PSM. This approach was emerged from the experience in creating a TE called RUTE-K2J, which aims at generating Java Model from KDM. The transformation rules of RUTE-K2J were tested considering sets of common code structures that normally appears when modernizing systems. The test cases have shown the transformation rules were able to generate correctly 92% of the source code that was submitted to the transformation.},
  address = {New York, NY, USA},
  isbn = {9781450365543},
  keywords = {Model transformation, PSM, KDM, Java Model},
  location = {Sao Carlos, Brazil},
  numpages = {10},
  series = {SBCARS '18}}

@article{Anku13a,
  title={Arthur: Rich Post-Facto Debugging for Production Analytics Applications},
  author={Dave, Ankur and Zaharia, Matei and Shenker, Scott and Stoica, Ion},
  journal={Technical report, University of California},
  year={2013}
}

@inproceedings{Ansl08a,
  author = {Anslow, Craig and Noble, James and Marshall, Stuart and Tempero, Ewan},
  title = {Visualizing the word structure of java class names},
  booktitle = {Companion to the 23rd ACM SIGPLAN conference on Object-oriented programming systems, languages and applications},
  pages = {777--778},
  year = {2008},
  organization = {ACM}}

@article{Ansl09a,
  author = {Anslow, Craig and Noble, James and Marshall, Stuart and Tempero, Ewan},
  title = {Towards visual software analytics},
  journal = {Proceedings of the Australasian Computing Doctoral Consortium (ACDC), Wellington, New Zealand},
  volume = {76},
  pages = {203--317},
  year = {2009}}

@inproceedings{Ansl13a,
  author = {Anslow, Craig and Marshall, Stuart and Noble, James and Biddle, Robert},
  title = {Sourcevis: Collaborative software visualization for co-located environments},
  booktitle = {2013 First IEEE Working Conference on Software Visualization (VISSOFT)},
  pages = {1--10},
  year = {2013},
  organization = {IEEE}}

@inproceedings{Antk06a,
  author = {Michal Antkiewicz and Krzysztof Czarnecki},
  title = {Framework-Specific Modeling Languages with Round-Trip Engineering},
  booktitle = {International Conference on Model Driven Engineering Languages and Systems (Models/UML 2006)},
  volume = {4199},
  pages = {692--706},
  publisher = {Springer-Verlag},
  year = {2006},
  url = {http://www.swen.uwaterloo.ca/~kczarnec/FSML-with-Round-Trip-MoDELS06.pdf},
  doi = {10.1007/11880240_48},
  address = {Berlin, Germany},
  series = {LNCS}}

@inproceedings{Anto00a,
  author = {G. Antoniol and G. Casazza and E. Merlo},
  title = {{GAWK} Software System Evolution},
  booktitle = {Proc. Int. Workshop on Feedback and Evolution in Software and Business Processes (FEAST)},
  year = {2000},
  month = jul}

@inproceedings{Anto00b,
  author = {Giuliano Antoniol and Gerardo Canfora and Gerardo Casazza and Andrea {De Lucia}},
  title = {Identifying the Starting Impact Set of a Maintenance Request: {A} Case Study},
  booktitle = {European Conference on Software Maintenance and Reengineering (CSMR 2000)},
  pages = {227--230},
  year = {2000}}

@inproceedings{Anto00c,
  author = {Giuliano Antoniol and Gerardo Canfora and Gerardo Casazza and Andrea {De Lucia}},
  title = {Information Retrieval Models for Recovering Traceability Links between Code and Documentation},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM} 2000)},
  pages = {40--49},
  year = {2000},
  doi = {10.1109/ICSM.2000.883003}}

@inproceedings{Anto01a,
  author = {G. Antoniol and G. Casazza and M. {Di Penta} and E. Merlo},
  title = {Modeling Clones Evolution Through Time Series},
  booktitle = {Proc. of Int. Conference on Software Maintenance ({ICSM}'01)},
  pages = {273--280},
  publisher = {IEEE},
  year = {2001},
  address = {Florence,Italy},
  month = nov}

@article{Anto01b,
  author = {G. Antoniol and M. DiPenta and G. Casazza and E . Merlo},
  title = {A Method to Re-Organize Legacy Systems via Concept Analysis},
  journal = {International Conference on Program Comprehension},
  volume = {0},
  pages = {0281},
  publisher = {IEEE Computer Society},
  year = {2001},
  doi = {10.1109/WPC.2001.921738},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7695-1131-7}}

@article{Anto02a,
  author = {Giuliano Antoniol and Umberto Villano and Ettore Merlo and Massimiliano {Di Penta}},
  title = {Analyzing cloning evolution in the {Linux} kernel},
  journal = {Information and Software Technology},
  volume = {44},
  pages = {755--765},
  publisher = {Elsevier},
  year = {2002},
  number = {13}}

@article{Anto02b,
  author = {Giuliano Antoniol and Gerardo Canfora and Gerardo Casazza and Andrea {De Lucia} and Ettore Merlo},
  title = {Recovering Traceability Links between Code and Documentation},
  journal = {IEEE Transactions on Software Engineering},
  volume = {28},
  pages = {970--983},
  year = {2002},
  number = {10}}

@inproceedings{Anto04a,
  author = {Giuliano Antoniol and Massimilano {Di Penta}},
  title = {An Automatic Approach to Identify Class Evolution Discontinuities},
  booktitle = {Proceedings IEEE International Workshop on Principles of Software Evolution (IWPSE 2004)},
  pages = {31--40},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA},
  location = {Kyoto, Japan},
  month = sep}

@inproceedings{Anto04b,
  author = {Giuliano Antoniol and Massimiliano {Di Penta} and Harald Gall and Martin Pinzger},
  title = {Towards the Integration of Versioning Systems, Bug Reports and Source Code Meta-Models},
  booktitle = {Proceedings Workshop on Software Evolution Through Transformation (SETra 2004)},
  pages = {83--94},
  publisher = {Elsevier},
  year = {2004},
  address = {Amsterdam}}

@inproceedings{Anto05a,
  author = {Giuliano Antoniol and Yann-Ga\"el Gu\'eh\'eneuc},
  title = {Feature Identification: a Novel Approach and a Case Study},
  booktitle = {Proceedings of the IEEE International Conference on Software Maintenance ({ICSM}'05)},
  pages = {357--366},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  address = {Los Alamitos CA},
  month = sep}

@article{Anto05b,
  author = {Giuliano Antoniol and Massimiliano Di Penta and Harald Gall and Martin Pinzger},
  title = {Towards the Integration of Versioning Systems, Bug Reports and Source Code Meta-Models},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {127},
  pages = {87--99},
  year = {2005},
  url = {http://www.ifi.uzh.ch/pax/uploads/pdf/publication/29/giulio-setra04.pdf},
  month = apr,
  number = {3}}

@inproceedings{Anto05c,
  author = {Giuliano Antoniol and Vincenzo Fabio Rollo and Gabriele Venturi},
  title = {Detecting groups of co-changing files in CVS repositories},
  booktitle = {IWPSE '05: Proceedings of the Eighth International Workshop on Principles of Software Evolution},
  pages = {23--32},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/IWPSE.2005.11},
  address = {Washington, DC, USA},
  isbn = {0-7695-2349-8}}

@inproceedings{Anto07a,
  author = {Giuliano Antoniol and Yann-Gael Gueheneuc and Ettore Merlo and Paolo Tonella},
  title = {Mining the Lexicon Used by Programmers during Sofware Evolution},
  booktitle = {{ICSM} 2007: IEEE International Conference on Software Maintenance},
  pages = {14--23},
  year = {2007},
  doi = {10.1109/ICSM.2007.4362614},
  isbn = {978-1-4244-1256-3},
  month = oct}

@inproceedings{Anto98a,
  author = {G. Antoniol and R. Fiutem and L. Cristoforetti},
  title = {Design Pattern Recovery in Object-Oriented Software},
  booktitle = {6th International Workshop on Program Comprehension (Ischia, Italy)},
  pages = {153--160},
  year = {1998},
  url = {http://citeseer.nj.nec.com/antoniol98design.html}}

@inproceedings{Anto99a,
  author = {Antoniol, G. and Canfora, G. and de Lucia, A.},
  title = {Estimating the Size of Changes for Evolving Object Oriented Systems: A Case Study},
  booktitle = {METRICS '99: Proceedings of the 6th International Symposium on Software Metrics},
  pages = {250},
  publisher = {IEEE Computer Society},
  year = {1999},
  address = {Washington, DC, USA},
  isbn = {0-7695-0403-5}}

@inproceedings{Anvi05a,
  author = {Anvik, John and Hiew, Lyndon and Murphy, Gail C.},
  title = {Coping with an open bug repository},
  booktitle = {eclipse '05: Proceedings of the 2005 OOPSLA workshop on Eclipse technology eXchange},
  pages = {35--39},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1117696.1117704},
  address = {New York, NY, USA},
  isbn = {1-59593-342-5},
  location = {San Diego, California}}

@inproceedings{Anvi06a,
  author = {John Anvik and Lyndon Hiew and Gail C. Murphy},
  title = {Who Should Fix This Bug?},
  booktitle = {Proceedings of the 2006 ACM Conference on Software Engineering},
  year = {2006}}

@inproceedings{Anvi06b,
  author = {Anvik, John},
  title = {Automating bug report assignment},
  booktitle = {ICSE '06: Proceedings of the 28th international conference on Software engineering},
  pages = {937--940},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1134285.1134457},
  address = {New York, NY, USA},
  isbn = {1-59593-375-1},
  location = {Shanghai, China}}

@inproceedings{Anvi07a,
  author = {Anvik, John and Murphy, Gail C.},
  title = {Determining Implementation Expertise from Bug Reports},
  booktitle = {MSR '07: Proceedings of the Fourth International Workshop on Mining Software Repositories},
  pages = {2},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MSR.2007.7},
  address = {Washington, DC, USA},
  isbn = {0-7695-2950-X}}

@inproceedings{Aoki01a,
  author = {Atsushi Aoki and Kaoru Hayashi and Kouichi Kishida and Kumiyo Nakakoji and Yoshiyuki Nishinaka and Brent Reeves and Akio Takashima and Yasuhiro Yamamoto},
  title = {A Case Study of the Evolution of Jun: an Object-Oriented Open-Source 3D Multimedia Library},
  booktitle = {Proceedings of International Conference on Software Engineering ({ICSE})},
  year = {2001}}

@misc{Apache2003SVNBestPractice,
  title = {Subversion Best Practices},
  year = {2009},
  date-added = {2014-11-12 15:29:42 +0000},
  date-modified = {2014-11-12 15:29:42 +0000},
  key = {Apache2003SVNBestPractice},
  keywords = {atomic logical commit},
  organization = {Apache, Software Foundation}}

@inproceedings{Apel06a,
  author = {Sven Apel and Thomas Leich and Gunter Saake},
  title = {Aspectual mixin layers: aspects and features in concert},
  booktitle = {ICSE '06: Proceeding of the 28th international conference on Software engineering},
  pages = {122--131},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1134285.1134304},
  address = {New York, NY, USA},
  isbn = {1-59593-375-1},
  location = {Shanghai, China}}

@article{Apel09a,
  author = {Sven Apel and Christian K\"astner},
  title = {An Overview of Feature-Oriented Software Development},
  journal = {Journal of Object Technology},
  volume = {8},
  pages = {NN-NN},
  year = {2009},
  misc = {To appear},
  url = {http://www.infosun.fim.uni-passau.de/cl/publications/docs/JOT2009fosd.pdf},
  month = jul,
  number = {4}}

@inproceedings{Apel11a,
  author = {Apel, Sven and Liebig, J\"{o}rg and Brandl, Benjamin and Lengauer, Christian and K\"{a}stner, Christian},
  title = {Semistructured merge: rethinking merge in revision control systems},
  booktitle = {Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering},
  pages = {190--200},
  publisher = {ACM},
  year = {2011},
  isbn = {978-1-4503-0443-6},
  series = {ESEC/FSE'11}}

@inproceedings{Apiw05a,
  author = {Api, Taweesup and Orso, Alessandro and Harrold, Mary Jean},
  title = {Efficient and Precise Dynamic Impact Analysis Using Execute-after Sequences},
  booktitle = {Proceedings of the 27th International Conference on Software Engineering},
  pages = {432--441},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1062455.1062534},
  acmid = {1062534},
  address = {New York, NY, USA},
  drl = {http://doi.acm.org/10.1145/1062455.1062534},
  isbn = {1-58113-963-2},
  keywords = {dynamic analysis, impact analysis, software maintenance},
  location = {St. Louis, MO, USA},
  numpages = {10},
  series = {ICSE '05}}

@book{Appe02a,
  author = {Andrew W. Appel},
  title = {Modern compiler implementation in {Java}},
  publisher = {Cambridge University Press},
  year = {2002},
  address = {New York, NY, USA},
  edition = {Second},
  isbn = {978-0521820608},
  note = {with Jens Palsberg}}

@book{Appe92a,
  author = {Andrew W. Appel},
  title = {Compiling with Continuations},
  publisher = {Cambridge University Press},
  year = {1992}}

@book{Appe98a,
  author = {Andrew W. Appel},
  title = {Modern compiler implementation in {Java}},
  publisher = {Cambridge University Press},
  year = {1998},
  address = {New York, NY, USA},
  isbn = {0-521-58388-8}}

@book{Appl93a,
  author = {Apple Computer},
  title = {AppleScript Language Guide},
  publisher = {Addison Wesley},
  year = {1993},
  isbn = {0-201-40735-3},
  note = {book},
  series = {Apple Technical Library}}

@article{Arac06a,
  author = {Ivica Aracic and Vaidas Gasiunas and Mira Mezini and Klaus Ostermann},
  title = {An Overview of {CaesarJ}},
  journal = {Transactions on Aspect-Oriented Software Development},
  volume = {3880},
  pages = {135 - 173},
  publisher = {Springer},
  year = {2006}}

@inproceedings{Arak18a,
  author = {Lucilia Y. Araki and Leticia M. Peres},
  title = {A Systematic Review of Concolic Testing with Aplication of Test Criteria},
  booktitle = {International Conference on Enterprise Information Systems (ICEIS 2018)},
  year = {2018}}

@article{Aran86a,
  author = {Arango, G. and Baxter, Ira and Freeman, Peter and Pidgeon, Christopher},
  title = {{TMM}: Software Maintenance by Transformation},
  journal = {{IEEE} Software},
  volume = {3},
  pages = {27--39},
  year = {1986},
  number = {3}}

@techreport{Arap88a,
  author = {Costas Ar{API}s and Gerti Kappel},
  title = {An Object Software Base},
  pages = {32--50},
  year = {1988},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Active Object Environments}}

@techreport{Arap89a,
  author = {Costas Ar{API}s},
  title = {Type Conversion and Enhancement in Object-Oriented Systems},
  pages = {191--205},
  year = {1989},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@techreport{Arap90a,
  author = {Costas Ar{API}s},
  title = {Specifying Object Life-Cycles},
  pages = {197--225},
  year = {1990},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/objectLifeCycle.pdf},
  abstract = {In this paper we propose a number of extensions for
object-oriented models in order to describe dynamic
aspects of applications. These extensions enable the
specification of objects that modify their behavior
dynamically and the control of the dynamic evolution
of objects by means of constraints expressed in the
language of propositional temporal logic. We shall
point out what differentiates our proposal from
existing models and give examples to illustrate our
arguments. We also present an algorithm for
verifying consistency of specifications and which is
suitable for an eventual implementation of our
extensions.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@inproceedings{Arap91a,
  author = {Costas Ar{API}s},
  title = {Temporal Specifications of Object Behaviour},
  booktitle = {Proceedings Third International Symposium on Mathematical Fundamentals of Database and Knowledge Base Systems},
  volume = {495},
  pages = {308--324},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Rostock, Germany},
  editor = {B. Thalheim and J. Demetrovics and H-D. Gerhardt},
  month = may,
  series = {LNCS}}

@techreport{Arap91b,
  author = {Costas Ar{API}s},
  title = {Specifying Object Interactions},
  pages = {303--322},
  year = {1991},
  abstract = {Techniques for specifying temporal properties of an
application are presented, based on the assumption
that static and behavioral properties have been
described within some object-oriented model. These
techniques enable the specification of the dynamic
evolution of object behavior and the interactions of
collections of cooperating objects. The underlying
formalism used for our specifications is the
language of first-order temporal logic. A method for
checking consistency of specifications is also
presented.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  note = {Working paper},
  type = {Object Composition}}

@techreport{Arap92a,
  author = {Costas Ar{API}s},
  title = {Object Behavior Composition: A Temporal Logic Based Approach},
  pages = {79--107},
  year = {1992},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/tr92ar{API}s.pdf},
  abstract = {A critical aspect of object-oriented design
methodologies is what has been called the behavioral
composition of objects. That is, how to reuse,
combine and coordinate the functionality of existing
objects when developing new objects. This paper
presents an approach emphasizing the specification
of temporal aspects of behavioral composition. Using
propositional temporal logic as the underlying
formalism of our approach, we show how to verify the
consistency of specifications and how to monitor
adherence to the specifications during run time.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@phdthesis{Arap92b,
  author = {Costas Ar{API}s},
  title = {Dynamic Evolution of Object Behaviour and Object Cooperation},
  year = {1992},
  school = {Dept. of Computer Science, University of Geneva},
  number = {no. 2529)},
  type = {{Ph.D}. Thesis}}

@book{Arap93a,
  author = {Constantin Ar{API}s},
  title = {A Temporal Logic-Based Approach for the Description of Object-Oriented Behavior Evolution},
  volume = {7},
  publisher = {J.C. Baltzer AG, Science Publischer},
  year = {1993},
  series = {Annals of Mathematics and Artificial Intelligence}}

@incollection{Arap95a,
  author = {Constantin Ar{API}s},
  title = {A Temporal Perspective of Composite Objects},
  booktitle = {Object-Oriented Software Composition},
  pages = {123--152},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {For the development of object-oriented applications,
the description of temporal aspects of object
behaviour often turns out to be an important issue.
We present a collection of notions and concepts
intended for the description of the temporal order
in which messages are sent to and received from an
object. We also propose notions for the description
of the temporal order of messages exchanged between
cooperating objects related with part-of
relationships. Using propositional temporal logic as
the underlying formalism of our approach, we show
how to verify the consistency of object
specifications.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@inproceedings{Arba02a,
  author = {Farhad Arbab and Farhad Mavaddat},
  title = {Coordination Through Channel Composition},
  booktitle = {Coordination Languages and Models: Proc. Coordination 2002},
  volume = {2315},
  pages = {21--38},
  publisher = {Springer-Verlag},
  year = {2002},
  city = {York, UK},
  editor = {F. Arbab and C. Talcott},
  month = apr,
  series = {Lecture Notes in Computer Science}}

@techreport{Arba96a,
  author = {F. Arbab},
  title = {Coordination of massively concurrent activities},
  year = {1995},
  url = {ftp://www.cwi.nl/pub/manifold/CS-R9565.ps.Z},
  institution = {Centrum voor Wiskunde en Informatica (CWI)},
  type = {CS-R9565}}

@inproceedings{Arba96b,
  author = {Farhad Arbab},
  title = {The {IWIM} Model for Coordination of Concurrent Activities},
  booktitle = {Proceedings of COORDINATION '96},
  volume = {1061},
  pages = {34--55},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Cesena, Italy},
  editor = {Paolo Ciancarini and Chris Hankin},
  series = {LNCS}}

@inproceedings{Arba97a,
  author = {Arbaugh, W. A. and Farber, D. J. and Smith, J. M.},
  title = {A secure and reliable bootstrap architecture},
  booktitle = {Proceedings of the 1997 IEEE Symposium on Security and Privacy},
  pages = {65--},
  publisher = {IEEE Computer Society},
  year = {1997},
  url = {http://dl.acm.org/citation.cfm?id=882493.884371},
  acmid = {884371},
  address = {Washington, DC, USA},
  keywords = {AEGIS architecture, Internet commerce, active networks, bootstrap architecture, computer bootstrapping, hardware validity, initialization, integrity chain, integrity check failures, lower-layer integrity, recovery process, reliability, robust systems, security, system integrity guarantees, transitions},
  series = {SP '97}}

@inproceedings{Arbu08a,
  author = {Tom Arbuckle},
  title = {Visually Summarising Software Change},
  booktitle = {Proceedings of the 12th International Conference Information Visualisation},
  pages = {559--568},
  publisher = {IEEE Computer Society},
  year = {2008}}

@inproceedings{Arce08a,
  author = {Arcelli Fontana Francesca and Perin Fabrizio and Raibulet Claudia and Ravani Stefano},
  title = {Behavioural Design Pattern detection through dynamic analysis},
  booktitle = {Proceedings of 4th PCODA at the 15th Working Conference on Reverse Engineering ({WCRE} 2008)},
  pages = {11-16},
  year = {2008},
  location = {Antwerp, Belgium}}

@inproceedings{Arce08b,
  author = {Arcelli, Francesca and Tosi, Christian and Zanoni, Marco},
  title = {Can Design Pattern Detection Be Useful for Legacy Systemmigration towards SOA?},
  booktitle = {Proceedings of the 2nd International Workshop on Systems Development in SOA Environments},
  pages = {63 to 68},
  publisher = {Association for Computing Machinery},
  year = {2008},
  url = {https://doi.org/10.1145/1370916.1370932},
  doi = {10.1145/1370916.1370932},
  abstract = {Legacy systems maintenance involves different decisions, often very complex and sometimes requiring high costs and time. Hence studying and applying the right system modernization technique becomes very important for systems evolution. One of the solutions often adopted to modernize a system is the possibility to migrate it towards a SOA architecture. A lot of works in the literature have been done in this direction, which propose methodologies that provide some kind of migration strategy.In the migration process one of the main tasks is related to system comprehension. We often have to analyze not well documented systems, where it is difficult to identify the components which could become services or to recognize the possible problems we could face during the migration process. Software architecture reconstruction is certainly a relevant key activity, which is used for these purposes.In this paper we explore if design pattern detection could be also useful in the migration process: knowing that some design patterns have been applied in the system could give relevant hints to take decisions during migration.},
  address = {New York, NY, USA},
  isbn = {9781605580296},
  keywords = {soa, design pattern detection},
  location = {Leipzig, Germany},
  numpages = {6},
  series = {SDSOA '08}}

@inproceedings{Arce09a,
  author = {Arcelli Fontana Francesca and Perin Fabrizio and Raibulet Claudia and Ravani Stefano},
  title = {JADEPT: Dynamic Analysis for Behavioural Design Pattern},
  booktitle = {4th Intenational Conference on Evaluation of Novel Approaches to Software Engineering (ENASE'09)},
  year = {2009},
  month = may}

@inproceedings{Arce09b,
  author = {Arcelli Fontana Francesca and Perin Fabrizio and Raibulet Claudia and Ravani Stefano},
  title = {JADEPT: Behavioral Design Pattern Detection through Dynamic Analysis},
  booktitle = {4th Intenational Conference on Evaluation of Novel Approaches to Software Engineering (ENASE'09)},
  pages = {95-106},
  publisher = {INSTICC},
  year = {2009},
  month = may,
  note = {Stefan Jablonski and Leszek Maciaszek (eds.)}}

@misc{ArchGenXML,
  title = {{ArchGenXML}},
  key = {ArchGenXML},
  note = {http://plone.org/products/archgenxml}}

@inproceedings{Ardi95a,
  author = {Laurent Arditi and H\'el\`ere Collavizza},
  title = {An Object-Oriented Framework for the Formal Verification of Processors},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {215--234},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@mastersthesis{Arev00a,
  author = {Gabriela Ar{\'e}valo},
  title = {Object-Oriented Architectural Description of Frameworks},
  year = {2000},
  school = {Ecole des Mines de Nantes},
  month = sep}

@inproceedings{Arev01a,
  author = {Gabriela Ar{\'e}valo and Isabelle Borne},
  title = {Architectural Description of Object Oriented Frameworks},
  booktitle = {Proceedings of Langages et Modeles \`a Objets (LMO'01)},
  publisher = {Hermes, Paris},
  year = {2001},
  url = {http://scg.unibe.ch/archive/papers/Arev01aLMO01.pdf},
  abstract = {Integration of architectural descriptions in
development tools and environments, in order to take
architectural descriptions into account, is a
topical issue. Nowadays, the existing formalisms to
represent software architecture fail in providing a
clear semantics and only give an intuitive graphical
representation of the system as a whole. More
specifically, the framework architectures should
show the overall design and the specification of the
points of the variability of the framework, making
easier the reuse of the architectures, integration
with others frameworks and a reference to measure
the changes in subsequent versions of the
frameworks. In this paper we propose an approach to
describe the architecture of frameworks, combining
formal and non-formal formalisms: Wright, an
architectural description language developed at
Carnegie Mellon University, and architectural
patterns. Based on the study of several frameworks,
our objective was to produce a complete description
of a framework, to show the expressive power of both
approaches and to consider complementarity and
flexibility regarding to other approaches.},
  month = jan}

@inproceedings{Arev02a,
  author = {Gabriela Ar{\'e}valo and Tom Mens},
  title = {Analysing Object Oriented Application Frameworks using Concept Analysis},
  booktitle = {ECOOP 2002: Proceedings of the Inheritance Workshop},
  pages = {3--9},
  publisher = {University of Jyv\"askyl\"a},
  year = {2002},
  url = {http://scg.unibe.ch/archive/papers/Arev02aECOOP02ApplicationFrameworks.pdf},
  abstract = {This paper proposes the use of the formal technique
of Concept Analysis to analyse how classes in an
object-oriented inheritance hierarchy are coupled by
means of the inheritance and interfaces
relationships. To perform our analysis, we use the
information provided by the self-send and super-send
behaviour of each class in the hierarchy. Especially
for large and complex inheritance hierarchies, we
believe that this analysis can help in understanding
the software, in particular with how reuse is
achieved. Additionally, the proposed technique
allows us to identify weak spots in the inheritance
hierarchy that may be improved, and to serve as
guidelines for extending or customising an
object-oriented application framework. As a first
step, this position paper reports on an initial
experiment with the Magnitude hierarchy in the
Smalltalk programming language.},
  editor = {Andrew Black and Erik Ernst and Peter Grogono and Markky Sakkinen},
  month = jun}

@inproceedings{Arev02b,
  author = {Gabriela Ar{\'e}valo and Tom Mens},
  title = {Analysing Object Oriented Framework Reuse using Concept Analysis},
  booktitle = {Advances in Object-oriented Information Systems: OOIS 2002 Workshops},
  pages = {53--63},
  publisher = {Springer Verlag},
  year = {2002},
  url = {http://scg.unibe.ch/archive/papers/Arev02bOOIS02FrameworkReuse.pdf},
  abstract = {This paper proposes to use the formal technique of
Concept Analysis to analyse how methods and classes
in an object-oriented inheritance hierarchy are
coupled by means of the inheritance and interfaces
relationships. Especially for large and complex
inheritance hierarchies, we believe that a formal
analysis of how behaviour is reused can provide
insight in how the hierarchy was built and the
different relationships among the classes. To
perform this analysis, we use behavioural
information provided by the self sends and super
sends made in each class of the hierarchy. The
proposed technique allows us to identify weak spots
in the inheritance hierarchy that may be improved,
and to serve as guidelines for extending or
customising an object-oriented application
framework. As a first step, this paper reports on an
initial experiment with the Magnitude hierarchy in
the Smalltalk programming language.},
  editor = {Jean-Michel Bruel and Zohra Bellahsene},
  month = sep}

@inproceedings{Arev02c,
  author = {Gabriela Ar{\'e}valo and Andrew P. Black and Yania Crespo and Michel Dao and Erik Ernst and Peter Grogono and Marianne Huchard and Markku Sakkinen},
  title = {The Inheritance Workshop.},
  booktitle = {ECOOP Workshops},
  pages = {117--134},
  year = {2002},
  url = {http://scg.unibe.ch/archive/papers/Arev02cECOOP02InheritanceWorkshop.pdf}}

@inproceedings{Arev03a,
  author = {Gabriela Ar{\'e}valo},
  title = {Understanding Behavioral Dependencies in Class Hierarchies using Concept Analysis},
  booktitle = {Proceedings of Langages et Modeles \`a Objets (LMO'03)},
  pages = {47--59},
  publisher = {Hermes, Paris},
  year = {2003},
  url = {http://scg.unibe.ch/archive/papers/Arev03aLMO03UnderstandingDependencies.pdf},
  abstract = {The functionalities of software artifacts are
defined by structural and behavioral dependencies.
During evolution and maintenance phases of a system,
the developer has to be able to understand how these
dependencies were defined and how they influence the
interaction of the artifacts. The developer must be
sure that modifications done in the system will not
break its behavior. In the most of the cases, this
happens because the dependencies are not documented.
We propose to tackle this problem in the context of
object oriented classes hierarchies using Concept
Analysis. We use different properties about
invocations in methods to analyze the dependencies
among the hierarchy classes in terms of class
behaviour. Based on these results, we show a set of
patterns that describe repeated kinds of behavior in
class hierarchies. We show the application of these
patterns in the specific case of Magnitude hierarchy
in Smalltalk.},
  month = jan}

@inproceedings{Arev03b,
  author = {Gabriela Ar{\'e}valo},
  title = {{X-Ray} Views on a Class using Concept Analysis},
  booktitle = {Proceedings of WOOR 2003 (4th International Workshop on Object-Oriented Reengineering)},
  pages = {76--80},
  publisher = {University of Antwerp},
  year = {2003},
  url = {http://scg.unibe.ch/archive/papers/Arev03bWOOR03XRayViews.pdf},
  abstract = {Within object oriented software, the minimal unit of
development and testing is a class. So understanding
how a class is defined and behaves is important.
Considering that a class is composed of instance
variables and methods, the process is not so easy to
achieve because we must decide which different
viewpoints can help us to detect features of a
class. These viewpoints can include identifying
groups of methods accessing a (set of) instance
variable(s), groups of methods that interact among
themselves to provide a functionality or groups of
methods that behave as interface. Thus, with these
different groups, we are able to know the different
hidden characteristics of a class. In this position
paper, we propose to apply Concept Analysis to
generate the different groups of (collaborating)
entities and use these groups to define different
views. These views will help us to get the main
features of a class.},
  cvs = {ConAnWOOR03XRayViews},
  month = jul}

@inproceedings{Arev04a,
  author = {Gabriela Ar{\'e}valo and Frank Buchli and Oscar Nierstrasz},
  title = {Detecting Implicit Collaboration Patterns},
  booktitle = {Proceedings of {WCRE} '04 (11th Working Conference on Reverse Engineering)},
  pages = {122--131},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  url = {http://scg.unibe.ch/archive/papers/Arev04a{WCRE}04CollaborationPatterns.pdf},
  doi = {10.1109/{WCRE}.2004.18},
  abstract = {A key problem during software development and
maintenance is to detect and recognize recurring
collaborations among software artifacts that are
implicit in the code. These collaboration patterns
are typically signs of applied idioms, conventions
and design patterns during the development of the
system, and may entail implicit contracts that
should be respected during maintenance, but are not
documented explicitly. In this paper we apply Formal
Concept Analysis to detect implicit collaboration
patterns. Our approach generalizes Antoniol and
Tonella one for detecting classical design patterns.
We introduce a variation to their algorithm to
reduce the computation time of the concepts, a
language-independent approach for object-oriented
languages, and a post-processing phase in which
pattern candidates are filtered out. We identify
collaboration patterns in the analyzed applications,
match them against libraries of known design
patterns, and establish relationships between
detected patterns and their nearest neighbours.},
  cvs = {ConAnPatterns{WCRE}04},
  location = {Delft, The Netherlands},
  month = nov}

@phdthesis{Arev05a,
  author = {Gabriela Ar{\'e}valo},
  title = {High Level Views in Object-Oriented Systems using Formal Concept Analysis},
  pages = {113},
  year = {2005},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/arevalo-phd.pdf},
  abstract = {Within object-oriented systems there are different
meaningful dependencies between different objects.
These dependencies reveal ``contracts",
``collaborations" and ``relationships" between
classes, methods, packages and any development unit
in the systems. In most of the cases, these
dependencies are not explicit in the code. This
problem is due to inadequate or out-of-date
documentation and mechanisms such as dynamic
binding, inheritance and polymorphism that obscure
the presence of existing dependencies. These
dependencies play an important part in implicit
contracts between the various software artifacts of
the system. It is therefore essential that a
developer, who has to make changes or extensions to
an object-oriented system, understands the
dependencies among the classes. Lack of
understanding increases the risk that seemingly
innocuous changes break the implicit existing
contracts in the system. In short, implicit,
undocumented dependencies lead to ``fragile systems"
that are difficult to extend or modify correctly. In
this thesis we develop an approach --- based on a
methodology and a tool support --- to recover this
implicit information and generate ``high-level
views" of a system at different abstraction levels,
using a formal clustering technique called Formal
Concept Analysis (FCA). With these views, we help to
build the first mental model of a system. Thus the
implicit or lost information is made explicit and we
are able to find uses of coding styles, possible
bottlenecks and weakpoints of a system, identify
eventual contracts between the entities, ``patterns"
based on the dependencies and --- if possible ---
propose possible solutions to correct problems in
the code. With this approach we also evaluate which
are the advantages and disadvantages of using a
clustering technique in software reverse
engineering},
  address = {Bern},
  cvs = {ArevaloPhDThesis},
  month = jan}

@inproceedings{Arev06a,
  author = {Gabriela Ar\'evalo and Jean-R\'emy Falleri and Marianne Huchard and Cl\'ementine Nebut},
  title = {Building Abstractions in Class Models: Formal Concept Analysis in a Model-Driven Approach},
  booktitle = {MODELS'06},
  volume = {4199},
  pages = {513-527},
  publisher = {Springer Verlag},
  year = {2006},
  abstract = {Designing class models is usually an iterative process to detect how to express, for a specific domain, the adequate concepts and their relationships. During those iterations, the abstraction of concepts and relationships is an important step. In this paper, we propose to automate this abstraction process using techniques based on Formal Concept Analysis in a model-driven context. Using UML 2.0 class diagrams as modeling language for class models, in this proposal we show how our model-driven approach enables parameterization, tracing and generalization to any metamodel to express class models.},
  editor = {Oscar Nierstrasz; Jhon Whittle; David Harel; Gianna Reggio},
  isbn = {978-3-540-45772-5},
  keywords = {UML, model transformation, refactoring, formal concept analysis, relational concept analysis},
  month = oct,
  series = {{LNCS} ({L}ecture {N}otes in {C}omputer {S}cience)}}

@article{Arev08a,
  author = {Gabriela Ar\'evalo and Nicolas Desnos and Marianne Huchard and Christelle Urtado and Sylvain Vauttier},
  title = {Construction dynamique d'annuaires de composants par classification de services},
  journal = {Revue des Nouvelles Technologies de l'Information},
  volume = {?},
  pages = {123--138},
  publisher = {C\'epadu\`es Editions},
  year = {2008},
  isbn = {978-2-85428-824-7},
  number = {2}}

@article{Arev09a,
  author = {Gabriela Ar\'evalo and Nicolas Desnos and Marianne Huchard and Christelle Urtado and Sylvain Vauttier},
  title = {FCA-based service classification to dynamically build efficient software component directories},
  journal = {International Journal of General Systems},
  year = {2009},
  month = apr,
  note = {To appear}}

@mastersthesis{Arev99a,
  author = {Gabriela Ar{\'e}valo},
  title = {{G.I.S.} + {Oceans} = {A S}trange {Combination}},
  year = {1999},
  school = {University of La Plata},
  month = mar,
  note = {in Spanish},
  type = {Diploma {Thesis}}}

@inproceedings{Arfi94a,
  author = {A. Arfi and Robert Godin and Hafedh Mili and Guy W. Mineau and Rokia Missaoui},
  title = {Generating the Interface Hierarchy of a Class Library},
  booktitle = {Colloquium on Object Orientation in Databases and Software Engineering},
  pages = {42--57},
  year = {1994}}

@article{Aris07a,
  author = {Erik Arisholm and Hans Gallis and Tore Dyba and Dag I.K. Sj\/oberg},
  title = {Evaluating Pair Programming with Respect to System Complexity and Programmer Expertise},
  journal = {IEEE Transactions on Software Engineering},
  volume = {33},
  pages = {65--86},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/TSE.2007.17},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  number = {2}}

@phdthesis{Arms03a,
  author = {Joe Armstrong},
  title = {Making reliable distributed systems in the presence of software errors},
  year = {2003},
  school = {The Royal Institute of Technology Stockholm},
  url = {http://www.sics.se/~joe/thesis/armstrong_thesis_2003.pdf}}

@misc{Arms05a,
  author = {Eric Armstrong and Jennifer Ball and Stephanie Bodoff and Debbie Bode Carson and Ian Evans and Dale Green and Kim Haase and Eric Jendrock},
  title = {The {J2EE} 1.4 Tutorial},
  year = {2005},
  institution = {Sun Microsystems},
  month = dec}

@inproceedings{Arms07a,
  author = {Armstrong, Joe},
  title = {A history of Erlang},
  booktitle = {Proceedings of the third ACM SIGPLAN conference on History of programming languages},
  pages = {6-1--6-26},
  publisher = {ACM},
  year = {2007},
  url = {http://www.cs.chalmers.se/Cs/Grundutb/Kurser/ppxt/HT2007/general/languages/armstrong-erlang_history.pdf},
  doi = {10.1145/1238844.1238850},
  acmid = {1238850},
  address = {New York, NY, USA},
  isbn = {978-1-59593-766-X},
  location = {San Diego, California},
  series = {HOPL III}}

@book{Arms07b,
  author = {Armstrong, Joe},
  title = {Programming Erlang: Software for a Concurrent World},
  publisher = {Pragmatic Bookshelf},
  year = {2007},
  isbn = {193435600X, 9781934356005}}

@book{Arms96a,
  author = {Joe Armstrong and Robert Virding and Claes Wikstr\"om and Mike Williams},
  title = {Concurrent Programming in Erlang},
  publisher = {Prentice Hall},
  year = {1996}}

@techreport{Arms97a,
  author = {Joe Armstrong},
  title = {Design Patterns for Programming Switching Software},
  year = {1997},
  misc = {15 January},
  institution = {Ericsson Telecom AB},
  month = jan,
  type = {Computer Science Laboratory}}

@inproceedings{Arms98a,
  author = {M.N. Armstrong and C. Trudeau},
  title = {Evaluating Architectural Extractors},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {30--39},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Arn00a,
  author = {Arnold, Matthew and Fink, Stephen and Grove, David and Hind, Michael and Sweeney, Peter F.},
  title = {Adaptive {O}ptimization in the {J}alape\~no {JVM}: The {C}ontroller's {A}nalytical {M}odel},
  booktitle = {Workshop on Feedback-Directed and Dynamic Optimization},
  year = {2000},
  keywords = {adaptive optimization, dynamic optimization, virtual machines}}

@inproceedings{Arn02b,
  author = {Arnold, Matthew and Hind, Michael and Ryder, Barbara G.},
  title = {Online Feedback-directed Optimization of Java},
  booktitle = {Object-oriented Programming, Systems, Languages, and Applications},
  pages = {111--129},
  publisher = {ACM},
  year = {2002},
  address = {New York, NY, USA},
  keywords = {adaptive optimization, dynamic optimization, online algorithms, virtual machines},
  numpages = {19},
  series = {OOPSLA '02}}

@phdthesis{Arno02a,
  author = {Matthew Arnold},
  title = {Online Profiling and Feedback-Directed Optimization of Java},
  year = {2002},
  school = {Rutgers University},
  month = oct,
  type = {{Ph.D}. Thesis}}

@inproceedings{Arno05a,
  author = {Arnold, Matthew and Welc, Adam and Rajan, V. T.},
  title = {Improving virtual machine performance using a cross-run profile repository},
  booktitle = {Object-oriented Programming, Systems, Languages, and Applications},
  pages = {297--311},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1094811.1094835},
  address = {New York, NY, USA},
  series = {OOPSLA '05}}

@article{Arno05b,
  author = {Arnold, Matthew and Fink, Stephen J and Grove, David and Hind, Michael and Sweeney, Peter F},
  title = {A survey of adaptive optimization in virtual machines},
  journal = {Proceedings of the IEEE},
  volume = {93},
  pages = {449--466},
  publisher = {IEEE},
  year = {2005},
  number = {2}}

@inproceedings{Arno05c,
  author = {Arnold, Matthew and Welc, Adam and Rajan, V. T.},
  title = {Improving Virtual Machine Performance Using a Cross-run Profile Repository},
  booktitle = {Object-oriented Programming, Systems, Languages, and Applications},
  pages = {297--311},
  publisher = {ACM},
  year = {2005},
  address = {New York, NY, USA},
  keywords = {Java, profiling, selective optimization, virtual machine},
  numpages = {15},
  series = {OOPSLA '05}}

@book{Arno92a,
  author = {Robert S. Arnold},
  title = {Software Reengineering},
  publisher = {IEEE Computer Society Press},
  year = {1992},
  address = {Los Alamitos CA},
  isbn = {0-8186-3272-0}}

@inproceedings{Arno93a,
  author = {A. Arno},
  title = {Verification and Comparison of Transition Systems},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {121--135},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@article{Arno93b,
  author = {Arnold, R.S. and Bohner, S.A.},
  title = {Impact analysis-Towards a framework for comparison},
  journal = {Software Maintenance ,1993. CSM-93, Proceedings., Conference on},
  pages = {292-301},
  year = {1993},
  doi = {10.1109/ICSM.1993.366933},
  month = {sep}}

@book{Arno96a,
  author = {Ken Arnold and James Gosling},
  title = {The {Java} Programming Language},
  publisher = {Addison Wesley},
  year = {1996}}

@book{Arno96b,
  author = {Arnold, Robert S and Bohnert, S.A},
  title = {Software change impact analysis},
  publisher = {IEEE Computer Society Press},
  year = {1996}}

@misc{Arno98a,
  author = {David Arnow and Gerald Weiss},
  title = {Introduction to Programming using {Java}},
  year = {1998},
  isbn = {0-201-31184-4}}

@book{Arno99a,
  author = {Ken Arnold and Bryan O'Sullivan and Robert W. Scheifler and Jim Waldo and Ann Wollrath},
  title = {The Jini Specification},
  publisher = {Addison Wesley},
  year = {1999}}

@inproceedings{Arpt18a,
  author = {Arpteg, Anders and Brinne, Bjorn and Crnkovic-Friis, Luka and Bosch, Jan},
  title = {Software Engineering Challenges of Deep Learning},
  booktitle = {Euromicro Conference on Software Engineering and Advanced Applications},
  year = {2018}}

@inproceedings{Arth01a,
  author = {Artho, Cyrille and Biere, Armin},
  title = {Applying Static Analysis to Large-Scale, Multi-Threaded Java Programs},
  booktitle = {Proceedings of the 13th Australian Conference on Software Engineering},
  pages = {68--},
  publisher = {IEEE Computer Society},
  year = {2001},
  address = {Washington, DC, USA}}

@inproceedings{Arth05a,
  author = {John Arthur and Shiva Azadegan},
  title = {Spring Framework for R{API}d Open Source J2EE Web Application Development: A Case Study.},
  booktitle = {SNPD},
  pages = {90--95},
  publisher = {IEEE Computer Society},
  year = {2005}}

@inproceedings{Artz07a,
  author = {Shay Artzi and Adam Kiezun and David Glasser and Michael D. Ernst},
  title = {Combined static and dynamic mutability analysis},
  booktitle = {Proceedings of the 22nd IEEE/ACM international conference on automated software engineering (ASE'07)},
  pages = {104--113},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1321631.1321649},
  address = {New York, NY, USA},
  isbn = {978-1-59593-882-4},
  location = {Atlanta, Georgia, USA}}

@inproceedings{Arun08a,
  author = {M. Aruna and M.P. Suguna Devi and M. Deepa},
  title = {Measuring the Quality of Software Modularization Using Coupling-Based Structural Metrics for an OOS System},
  booktitle = {ICETET '08: Proceedings of the 2008 First International Conference on Emerging Trends in Engineering and Technology},
  pages = {1130--1135},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {/10.1109/ICETET.2008.76},
  address = {Washington, DC, USA},
  isbn = {978-0-7695-3267-7}}

@article{Arun92a,
  author = {S. Arun-Kumar and M. Hennessy},
  title = {An Efficiency Preorder for Processes},
  journal = {Acta Informatica},
  volume = {29},
  pages = {737--760},
  year = {1992},
  month = dec,
  number = {8}}

@article{Arya17a,
  author = {K{API}l Arya and Tyler Denniston and Ariel Rabkin and Gene Cooperman},
  title = {Transition Watchpoints: Teaching Old Debuggers New Tricks},
  journal = {The Art, Science, and Engineering of Programming},
  volume = {1},
  year = {2017},
  doi = {10.22152/programming-journal.org/2017/1/16},
  keywords = {debugging},
  month = jul,
  number = {2},
  numpages = {28}}

@inproceedings{Asad14a,
  author = {Asaduzzaman, Muhammad and Roy, Chanchal K and Schneider, Kevin A and Hou, Daqing},
  title = {Context-sensitive code completion tool for better {API} usability},
  booktitle = {2014 IEEE International Conference on Software Maintenance and Evolution},
  pages = {621--624},
  year = {2014},
  organization = {IEEE}}

@inproceedings{Asai97a,
  author = {Kenichi Asai and Hidehiko Masuhara and Akinori Yonezawa},
  title = {Partial Evaluation of Call-by-Value {$\lambda$}-Calculus with Side-Effects},
  booktitle = {Proceedings of the {ACM} {SIGPLAN} Symposium on Partial Evaluation and Semantics-Based Program Manipulation},
  pages = {12--21},
  year = {1997},
  address = {Amsterdam, the Netherlands},
  month = jun}

@inproceedings{Ashf93a,
  author = {Colin Ashford},
  title = {The {OSI} Managed-Object Model},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {185--196},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {The challenge facing the International Organization
for Standardization (ISO) in the early eighties, in
developing Open Systems Interconnection (OSI)
protocol standards for network management, was to
ensure that such protocols should, on the one hand,
be standardised but, on the other, be capable of
managing a myriad of resource types. ISO met the
challenge by developing a single
internationally-standardised carriage protocol
(CMIP), and tools to produce information models that
would reflect the resources being managed. Such an
approach makes it possible for the same carriage
protocol to carry management messages for many
different types of resources. In developing its
information modelling tools and services, ISO has
adopted an object-oriented approach: the resources
to be managed are modelled as managed objects or
aggregates of managed objects. The managed-object
model is similar to popular object-oriented
programming-language models but it includes a number
of features that reflect the special requirements of
network management. These requirements include:
asynchronous operation, active resources, a
distributed environment, compatibility, and feature
optionality. Fulfilling these requirements lead to
the inclusion of concepts such as
event-notification, multiple object-selection,
packages, and allomorphism. The next generation of
network-management standards will need to address
the demands of large, multi-protocol, mutable
networks. How these requirements might affect the
evolution of the managed-object model and services
is considered.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Asho16,
  author = {Ashouri, Amir Hossein and Bignoli, Andrea and Palermo, Gianluca and Silvano, Cristina},
  title = {Predictive Modeling Methodology for Compiler Phase-Ordering},
  booktitle = {Proceedings of the 7th Workshop on Parallel Programming and Run-Time Management Techniques for Many-Core Architectures and the 5th Workshop on Design Tools and Architectures For Multicore Embedded Computing Platforms},
  pages = {7–12},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {https://doi.org/10.1145/2872421.2872424},
  doi = {10.1145/2872421.2872424},
  isbn = {9781450340526},
  address = {New York, NY, USA},
  abstract = {Today's compilers offer a huge number of transformation options to choose among and this choice can significantly impact on the performance of the code being optimized. Not only the selection of compiler options represents a hard problem to be solved, but also the ordering of the phases is adding further complexity, making it a long standing problem in compilation research. This paper presents an innovative approach for tackling the compiler phase-ordering problem by using predictive modeling. The proposed methodology enables i) to efficiently explore compiler exploration space including optimization permutations and repetitions and ii) to extract the application dynamic features to predict the next-best optimization to be applied to maximize the performance given the current status. Experimental results are done by assessing the proposed methodology with utilizing two different search heuristics on the compiler optimization space and it demonstrates the effectiveness of the methodology on the selected set of applications. Using the proposed methodology on average we observed up to 4% execution speedup with respect to LLVM standard baseline.},
  numpages = {6},
  keywords = {phase-ordering, machine learning, autotuning, compilers},
  location = {Prague, Czech Republic},
  series = {PARMA-DITAM '16}}

@article{Asho18,
  author = {Ashouri, Amir H. and Killian, William and Cavazos, John and Palermo, Gianluca and Silvano, Cristina},
  title = {A Survey on Compiler Autotuning Using Machine Learning},
  journal = {ACM Comput. Surv.},
  volume = {51},
  publisher = {Association for Computing Machinery},
  year = {2018},
  url = {https://doi.org/10.1145/3197978},
  doi = {10.1145/3197978},
  issue_date = {September 2019},
  address = {New York, NY, USA},
  number = {5},
  issn = {0360-0300},
  abstract = {Since the mid-1990s, researchers have been trying to use machine-learning-based approaches to solve a number of different compiler optimization problems. These techniques primarily enhance the quality of the obtained results and, more importantly, make it feasible to tackle two main compiler optimization problems: optimization selection (choosing which optimizations to apply) and phase-ordering (choosing the order of applying optimizations). The compiler optimization space continues to grow due to the advancement of applications, increasing number of compiler optimizations, and new target architectures. Generic optimization passes in compilers cannot fully leverage newly introduced optimizations and, therefore, cannot keep up with the pace of increasing options. This survey summarizes and classifies the recent advances in using machine learning for the compiler optimization field, particularly on the two major problems of (1) selecting the best optimizations, and (2) the phase-ordering of optimizations. The survey highlights the approaches taken so far, the obtained results, the fine-grain classification among different approaches, and finally, the influential papers of the field.},
  month = {sep},
  articleno = {96},
  numpages = {42},
  keywords = {optimizations, machine learning, phase ordering, Autotuning, compilers}}

@inproceedings{Ashw23,
  author = {Ashwin Prasad Shivarpatna Venkatesh and
                  Jiawei Wang and
                  Li Li and
                  Eric Bodden},
  title = {Enhancing Comprehension and Navigation in Jupyter Notebooks with Static
                  Analysis},
  booktitle = {{IEEE} International Conference on Software Analysis, Evolution and
                  Reengineering, {SANER} 2023, Taipa, Macao, March 21-24, 2023},
  pages = {391--401},
  publisher = {{IEEE}},
  year = {2023},
  editor = {Tao Zhang and
                  Xin Xia and
                  Nicole Novielli}}

@inproceedings{Askl94a,
  author = {Ulf Asklund},
  title = {Identifying Conflicts During Structural Merge},
  booktitle = {Nordic Workshop Programming Environment Research},
  pages = {231--242},
  year = {1994}}

@misc{AspectC,
  title = {AspectC++ Home Page},
  url = {http://www.aspectc.org},
  key = {AspectC},
  note = {http://www.aspectc.org}}

@misc{AspectJ,
  title = {{AspectJ} Home Page},
  url = {http://eclipse.org/aspectj/},
  key = {{AspectJ}},
  note = {http://eclipse.org/aspectj/}}

@misc{AspectR,
  title = {AspectR Home Page},
  url = {http://aspectr.sourceforge.net/},
  key = {AspectR},
  note = {http://aspectr.sourceforge.net/}}

@misc{AspectWeekz,
  title = {AspectWeekz},
  key = {AspectWeekz},
  note = {http://aspectwerkz.codehaus.org/}}

@inproceedings{Asse93a,
  author = {Holger Assenmacher and Thomas Breitbach and Peter Buhler and Volker H{\"u}bsch and Reinhard Schwarz},
  title = {{PANDA} --- Supporting Distributed Programming in {C}++},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {361--383},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {PANDA is a run-time package based on a very small
operating system kernel which supports distributed
applications written in C++. It provides powerful
abstractions such as very efficient user-level
threads, a uniform global address space, object and
thread mobility, garbage collection, and persistent
objects. The paper discusses the design rationales
underlying the PANDA system. The fundamental
features of PANDA are surveyed, and their
implementation in the current prototype environment
is outlined.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@book{Assm03a,
  author = {Uwe A{\ss}mann},
  title = {Invasive Software Composition},
  publisher = {Springer-Verlag},
  year = {2003},
  url = {http://www.ida.liu.se/~uweas/InvasiveSoftwareComposition/},
  isbn = {3-540-44385-1}}

@book{Aste03a,
  author = {David Astels},
  title = {Test-Driven Development --- A Practical Guide},
  publisher = {Prentice Hall},
  year = {2003},
  isbn = {0-13-101649-0}}

@article{Aste84a,
  author = {Egidio Astesiano and Elena Zucca},
  title = {Parametric Channels via Label Expressions in {CCS}},
  journal = {Theoretical Computer Science},
  volume = {33},
  pages = {45--64},
  year = {1984}}

@article{Astr76a,
  author = {M.M. Astrahan and et al.},
  title = {System {R}: Relational Approach to Database Management},
  journal = {ACM TODS},
  volume = {1},
  pages = {97--137},
  year = {1976},
  month = jun,
  number = {2}}

@article{Atki00a,
  author = {Atkinson, C. and Kuehne, T. and Henderson-Sellers, B.},
  title = {To meta or not to meta: that is the question},
  journal = {Journal of Object-Oriented Programming},
  volume = {8},
  pages = {32--35},
  year = {2000},
  number = {13}}

@inproceedings{Atki01a,
  author = {Colin Atkinson and Thomas Kuehne},
  title = {The essence of Multilevel Metamodeling},
  booktitle = {Proceedings of the UML Conference},
  pages = {19--33},
  year = {2001},
  number = {2185},
  series = {LNCS}}

@inproceedings{Atki05a,
  author = {Colin Atkinson and Thomas Kuehne},
  title = {Concepts for Comparing Modeling Tool Architecture},
  booktitle = {Proceedings of the UML Conference},
  pages = {19--33},
  year = {2005},
  number = {3713},
  series = {LNCS}}

@book{Atki05b,
  author = {Cliff Atkinson},
  title = {Beyond Bullet Points},
  publisher = {Microsoft},
  year = {2005},
  isbn = {0735620520}}

@article{Atki06a,
  title={Effective pattern matching of source code using abstract syntax patterns},
  author={Atkinson, Darren C and Griswold, William G},
  journal={Software: Practice and Experience},
  volume={36},
  number={4},
  pages={413--447},
  year={2006},
  publisher={Wiley Online Library}
}

@article{Atki70a,
  author = {Atkinson, A. B.},
  title = {{On the measurement of inequality}},
  journal = {Journal of Economic Theory},
  volume = {2},
  pages = {244--263},
  year = {1970},
  number = {3}}

@inproceedings{Atki86a,
  author = {Robert G. Atkinson},
  title = {Hurricane: An Optimizing Compiler for {Smalltalk}},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {151--158},
  year = {1986},
  month = nov}

@article{Atki87a,
  author = {Malcolm P. Atkinson and O. Peter Buneman},
  title = {Types and persistence in database programming languages},
  journal = {ACM Computing Surveys},
  volume = {19},
  pages = {105--170},
  publisher = {ACM Press},
  year = {1987},
  url = {http://portal.acm.org/citation.cfm?id=62070.45066},
  doi = {10.1145/62070.45066},
  address = {New York, NY, USA},
  issn = {0360-0300},
  number = {2}}

@inproceedings{Atki89a,
  author = {Malcolm Atkinson and Fran\c{c}ois Bancilhon and D. DeWitt and Klaus Dittrich and David Maier and Stanley Zdonik},
  title = {The Object-Oriented Database System Manifesto},
  booktitle = {Proceedings of the First International Conference on Deductive and Object-Oriented Databases},
  pages = {223--240},
  year = {1989},
  url = {ftp://ftp.cs.cmu.edu//afs/cs/user/clamen/ftp/OODBMS/Manifesto.PS.z},
  abstract = {The paper defines an object-oriented database
system. It describes the main features and
characteristics that a system must have to qualify
as an object-oriented database system. The authors
separate these characteristics into three groups:
\fIMandatory\fP, the ones the system must satisfy in
order to be termed an object-oriented database
system. These are complex objects, object identity,
encapsulation, types or classes, inheritance,
overriding combined with late binding,
extensibility, computational completeness,
persistence, secondary storage management,
concurrency, recovery, and an ad hoc query facility.
\fIOptional\fP, the ones that can be added to make
the system better, but which are not mandatory.
These are multiple inheritance, type checking and
inferencing, distribution, design transactions, and
versions. \fIOpen\fP, the points where the designer
can make a number of choices. These are the
programming paradigm, the representation system, the
type system, and uniformity. We have taken the
position, not so much expecting it to be the final
word as to erect a provisional landmark to orient
further debate.},
  address = {Kyoto, Japan},
  month = dec,
  note = {Also in [O2-Book]}}

@phdthesis{Atki90a,
  author = {Colin Atkinson},
  title = {An Object-Oriented Language for Software Reuse and Distribution},
  year = {1990},
  school = {University of London},
  month = feb,
  type = {{Ph.D}. Thesis}}

@book{Atki91a,
  author = {Colin Atkinson},
  title = {Object-Oriented Reuse, Concurrency and Distribution},
  publisher = {Addison Wesley/ACM Press},
  year = {1991},
  address = {Reading, Mass.},
  isbn = {0-201-56527-7}}

@incollection{Atki93a,
  author = {Atkinson, M.P. and Sj\/oberg, D.I.K. and Morrison, R.},
  title = {Managing Change in Persistent Object Systems(Invited Paper)},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {315--338},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {\fIPersistent\fR object systems are highly-valued
technology because they offer an effective
foundation for building very long-lived
\fIpersistent application systems\fR (PAS). The
technology becomes more effective as it offers a
more consistently integrated computational context.
For it to be feasible to design and construct a PAS
it must be possible to incrementally add program and
data to the existing collection. For a PAS to endure
it must offer flexibility: a capacity to evolve and
change. This paper examines the capacity of
persistent object systems to accommodate incremental
construction and change. Established store based
technologies can support incremental construction
but methodologies are needed to deploy them
effectively. Evolving data description is one
motivation for inheritance but inheritance alone is
not enough to support change management. The case
for supporting incremental change is very
persuasive. The challenge is to provide technologies
that will facilitate it and methodologies that will
organize it. This paper identifies change absorbers
as a means of describing how changes should
propagate. It is argued that if we systematically
develop an adequate repertoire of change absorbers
then they will facilitate much better quality change
management.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@article{Atki95a,
  author = {Malcolm Atkinson and Ronald Morrison},
  title = {Orthogonally Persistent Object Systems},
  journal = {VLDB JOURNAL},
  volume = {4},
  pages = {319--401},
  year = {1995}}

@inproceedings{Atki96a,
  author = {Darren C. Atkinson and William G. Griswold},
  title = {The design of whole program analysis tools},
  booktitle = {Proceedings of the~18th~International Conference on Software Engineering},
  pages = {16--27},
  publisher = {IEEE Computer Society Press},
  year = {1996},
  url = {citeseer.ist.psu.edu/atkinson96design.html}}

@article{Atki96b,
  author = {M. P. Atkinson and L. Dayn{\`e}s and M. J. Jordan and T. Printezis and S. Spence},
  title = {An orthogonally persistent {Java}},
  journal = {SIGMOD Rec.},
  volume = {25},
  pages = {68--75},
  publisher = {ACM},
  year = {1996},
  doi = {10.1145/245882.245905},
  address = {New York, NY, USA},
  issn = {0163-5808},
  number = {4}}

@inproceedings{Atki98a,
  author = {David L. Atkins},
  title = {Version Sensitive Editing: Change History as a Programming Tool},
  booktitle = {System Configuration Management: ECOOP'98 SCM-8 Symposium},
  volume = {1439},
  pages = {146--157},
  publisher = {Springer Verlag},
  year = {1998},
  address = {Brussels, Belgium},
  institution = {Bell Laboratories},
  month = jul,
  series = {LNCS}}

@techreport{Atta85a,
  author = {Giuseppe Attardi and Andrea Corradini and M. De Cecco and M. Simi},
  title = {Building Expert Systems with Omega},
  year = {1985},
  address = {Milano, Italy},
  institution = {Delphi},
  month = mar,
  number = {ESP/85/2-3},
  type = {Technical Report}}

@techreport{Atta85b,
  author = {Giuseppe Attardi and Andrea Corradini and M. De Cecco and M. Simi},
  title = {The Omega Primer},
  year = {1985},
  address = {Milano, Italy},
  institution = {Delphi},
  month = may,
  number = {ESP/85/8},
  type = {Technical Report}}

@inproceedings{Atta89a,
  author = {Giuseppe Attardi and Cinzia Bonini and Maria Rosario Boscotrecase and Tito Flagella and Mauro Gaspari},
  title = {Metalevel Programming in {CLOS}},
  booktitle = {Proceedings ECOOP '89},
  pages = {243--256},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Atta94a,
  author = {Giuseppe Attardi and Tito Flagella},
  title = {Customising Object Allocation},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {320--343},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Atzb21a,
  author = {Atzberger, Daniel and Cech, Tim and de La Haye, Merlin and S{\"o}chting, Maximilian and Scheibel, Willy and Limberger, Daniel and D{\"o}llner, J{\"u}rgen},
  title = {Software Forest: A Visualization of Semantic Similarities in Source Code using a Tree Metaphor.},
  booktitle = {VISIGRAPP (3: IVAPP)},
  pages = {112--122},
  year = {2021}}

@inproceedings{Atze17a,
  author = {Atzei, Nicola and Bartoletti, Massimo and Cimoli, Tiziana},
  title = {A survey of attacks on Ethereum smart contracts},
  booktitle = {Proceedings of International Conference on Principles of Security and Trust},
  volume = {10204},
  pages = {164-186},
  publisher = {Springer},
  year = {2017}}

@manual{Audi96a,
  title = {Concerto2/Audit-{CC}++ User Manual},
  year = {1996},
  organization = {Sema Group}}

@inproceedings{Audr00a,
  author = {Mockus, Audris and Votta, Lawrence G.},
  title = {{Identifying Reasons for Software Changes using Historic Databases}},
  booktitle = {International Conference on Software Maintenance},
  pages = {120--130},
  year = {2000}}

@incollection{Auer95a,
  author = {Ken Auer},
  title = {Reusability through self-encapsulation},
  booktitle = {Pattern languages of program design},
  pages = {505--516},
  publisher = {ACM Press/Addison-Wesley Publishing Co.},
  year = {1995},
  isbn = {0-201-60734-4}}

@inproceedings{Augu95a,
  author = {M. Auguston},
  title = {Program Behavior Model Based on Event Grammar and its Application for Debugging Automation},
  booktitle = {2nd International Workshop on Automated and Algorithmic Debugging, Saint-Malo, France},
  year = {1995},
  month = may}

@inproceedings{Augu98a,
  author = {M. Auguston},
  title = {Building program Behavior Models},
  booktitle = {European Conference on Artificial Intelligence ECAI-98, Workshop on Spatial and Temporal Reasoning, Brighton, England},
  year = {1998},
  month = aug}

@inproceedings{Aust11a,
  author = {Austin, Thomas H. and Disney, Tim and Flanagan, Cormac},
  title = {Virtual values for language extension},
  booktitle = {Proceedings of the 2011 ACM international conference on object oriented programming systems languages and applications},
  pages = {921--938},
  publisher = {ACM},
  year = {2011},
  url = {http://doi.acm.org/10.1145/2048066.2048136},
  doi = {10.1145/2048066.2048136},
  acmid = {2048136},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0940-0},
  keywords = {behavioral intercession, metaobject protocols, proxies},
  location = {Portland, Oregon, USA},
  numpages = {18},
  series = {OOPSLA '11}}

@article{Aver04a,
  author = {Aversano, Lerina and Tortorella, Maria},
  title = {An assessment strategy for identifying legacy system evolution requirements in eBusiness context},
  journal = {Journal of Software Maintenance and Evolution: Research and Practice},
  volume = {16},
  pages = {255--276},
  publisher = {Wiley Online Library},
  year = {2004},
  number = {4-5}}

@inproceedings{Avge09a,
  author = {Thanassis Avgerinos and
               Konstantinos Sagonas},
  title = {Cleaning up Erlang code is a dirty job but somebody's gotta do it},
  booktitle = {8th Workshop on Erlang},
  pages = {1--10},
  publisher = {{ACM}},
  year = {2009},
  url = {https://doi.org/10.1145/1596600.1596602},
  doi = {10.1145/1596600.1596602},
  editor = {Clara Benac Earle and Simon J. Thompson}}

@article{Avge13a,
  author = {Paris Avgeriou and Michael Stal and Rich Hilliard},
  title = {Architecture Sustainability},
  journal = {{IEEE} Software},
  volume = {30},
  pages = {40--44},
  year = {2013},
  number = {6}}

@article{Avge14a,
  author = {Avgerinos, Thanassis and Cha, Sang Kil and Rebert, Alexandre and Schwartz, Edward J. and Woo, Maverick and Brumley, David},
  title = {Automatic Exploit Generation},
  journal = {Commun. ACM},
  volume = {57},
  pages = {74-84},
  publisher = {Association for Computing Machinery},
  year = {2014},
  url = {https://doi.org/10.1145/2560217.2560219},
  doi = {10.1145/2560217.2560219},
  abstract = {The idea is to identify security-critical software bugs so they can be fixed first.},
  address = {New York, NY, USA},
  issn = {0001-0782},
  issue_date = {February 2014},
  month = {feb},
  number = {2},
  numpages = {11}}

@article{Avgu05a,
  author = {Pavel Avgustinov and Aske Simon Christensen and Laurie Hendren and Sascha Kuzins and Jennifer Lhot\'{a}k and Ondrej Lhot\'{a}k and Oege de Moor and Damien Sereni and Ganesh Sittampalam and Julian Tibble},
  title = {{abc}: An extensible AspectJ compiler},
  journal = {Transactions on Aspect-Oriented Software Development},
  year = {2005},
  month = oct}

@article{Ayco02a,
  author = {John Aycock and Nigel Horspool},
  title = {Practical {Earley} Parsing},
  journal = {The Computer Journal},
  volume = {45},
  pages = {620--630},
  year = {2002},
  url = {http://www.csr.uvic.ca/~nigelh/Publications/PracticalEarleyParsing.pdf},
  doi = {10.1093/comjnl/45.6.620},
  number = {6}}

@inproceedings{Ayco98a,
  author = {John Aycock},
  title = {Compiling little languages in {Python}},
  booktitle = {Proc. 7th Int. Python Conf.},
  pages = {69--77},
  year = {1998},
  url = {http://pages.cpsc.ucalgary.ca/~aycock/spark/paper.pdf},
  city = {Houston, TX},
  month = nov}

@misc{BDB,
  author = {Python Software Foundation.},
  title = {bdb - Debugger framework},
  year = {2019},
  howpublished = {\url{https://docs.python.org/3/library/bdb.html }}}

@misc{BPMN,
  title = {Business Process Model and Notation - Object Management Group, version 2.0.2},
  key = {BPMN}}

@proceedings{BYTE81a,
  title = {Special issue on {Smalltalk}},
  journal = {Byte},
  volume = {6},
  year = {1981},
  editor = {?},
  month = aug}

@proceedings{BYTE86a,
  title = {Special issue on Object-Oriented Systems},
  journal = {Byte},
  volume = {11},
  year = {1986},
  editor = {?},
  month = aug}

@inproceedings{Baar03a,
  author = {Thomas Baar},
  title = {The Definition of Transitive Closure with OCL -- Limitations and Applications --},
  booktitle = {Proceedings, Fifth Andrei Ershov International Conference, Perspectives of System Informatics, Novosibirsk, Russia},
  volume = {2890},
  pages = {358--365},
  publisher = {Springer},
  year = {2003},
  doi = {10.1007/b94823},
  month = jul,
  series = {LNCS}}

@inproceedings{Baba05a,
  author = {Ozalp Babaoglu and Mark Jelasity and Alberto Montresor and Christof Fetzer and Stefano Leonardi and Aad P. A. van Moorsel},
  title = {The Self-Star Vision},
  booktitle = {Self-star Properties in Complex Information Systems},
  volume = {3460},
  pages = {1--20},
  publisher = {Springer},
  year = {2005},
  isbn = {3-540-26009-9},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Bacch13a,
  author = {Bacchelli, Alberto and Bird, Christian},
  title = {Expectations, Outcomes, and Challenges of Modern Code Review},
  booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
  pages = {712--721},
  publisher = {IEEE Press},
  year = {2013},
  url = {http://dl.acm.org/citation.cfm?id=2486788.2486882},
  acmid = {2486882},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4673-3076-3},
  location = {San Francisco, CA, USA},
  numpages = {10},
  series = {ICSE '13}}

@article{Bach01,
  author = {Jonthan Bachrach and Keith Playford},
  title = {The {Java Syntactic Extender} ({JSE})},
  journal = {Proceedings of OOPSLA '01, ACM SIG{\-}PLAN Notices},
  volume = {36},
  pages = {31--42},
  year = {2001},
  issn = {0362-1340},
  month = {nov},
  number = {11}}

@inproceedings{Bach01a,
  author = {Felix Bachmann and Len Bass},
  title = {Managing Variability in Software Architectures},
  booktitle = {{ACM} {SIGSOFT} Symposium on Software Reusability},
  pages = {126--132},
  year = {2001},
  url = {http://www.sei.cmu.edu/plp/variability.pdf}}

@inproceedings{Bach04a,
  author = {Felix Bachmann and Michael Goedicke and Julio Leite and Robert Nord and Klaus Pohl and Balasubramaniam Ramesh and Alexander Vilbig},
  title = {A Meta-model for Representing Variability in Product Family Development},
  booktitle = {Proceedings of Europ\"aischen Workshop zur Produktfamilien-Entwicklung (PFE'03)},
  volume = {3014},
  pages = {66--80},
  publisher = {Springer-Verlag},
  year = {2004},
  series = {Lecture Notes in Computer Science}}

@techreport{Bach05a,
  author = {Felix Bachmann and Paul C. Clements},
  title = {Variability in Software Product Lines},
  year = {2005},
  institution = {Carnegie Mellon University, Software Engineering Institute},
  type = {{CMU/SEI-2005-TR-012}}}

@article{Bach07a,
  author = {Michael B{\"a}chle and Paul Kirchberg},
  title = {Ruby on {Rails}},
  journal = {IEEE Software},
  volume = {24},
  pages = {105--108},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MS.2007.176},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  number = {6}}

@inproceedings{Bach10a,
  author = {Bachmann, Adrian and Bird, Christian and Rahman, Foyzur and Devanbu, Premkumar and Bernstein, Abraham},
  title = {The Missing Links: Bugs and Bug-fix Commits},
  booktitle = {Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {97--106},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1882291.1882308},
  doi = {10.1145/1882291.1882308},
  acmid = {1882308},
  address = {New York, NY, USA},
  isbn = {978-1-60558-791-2},
  keywords = {apache, bias, case study, manual annotation, tool},
  location = {Santa Fe, New Mexico, USA},
  numpages = {10},
  series = {FSE '10}}

@inproceedings{Bach93a,
  author = {L. Bachmair and T. Che and I.V. Ramakrishnan},
  title = {Associative-Commutative Discrimination Nets},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {61--74},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@inproceedings{Back00a,
  author = {G. Back and W. Hsieh and J. Lepreau},
  title = {Processes in KaffeOS: Isolation, Resource Management and Sharing in Java},
  booktitle = {4th USENIX International Symposium on Operating System Design and Implementation (OSDI)},
  year = {2000}}

@inproceedings{Back20a,
  author = {Back, G. and Hsieh, W.C. and Lepreau, J.},
  title = {Processes in KaffeOS: Isolation, resource management, and sharing in Java},
  booktitle = {Proceedings of the 4th conference on Symposium on Operating System Design \& Implementation-Volume 4},
  pages = {23--23},
  year = {2000},
  organization = {USENIX Association}}

@inproceedings{Baco96a,
  author = {Bacon, David F. and Sweeney, Peter F.},
  title = {Fast Static Analysis of C++ Virtual Function Calls},
  booktitle = {Proceedings of the 11th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
  pages = {324--341},
  publisher = {ACM},
  year = {1996},
  url = {http://doi.acm.org/10.1145/236337.236371},
  doi = {10.1145/236337.236371},
  acmid = {236371},
  address = {New York, NY, USA},
  isbn = {0-89791-788-X},
  location = {San Jose, California, USA},
  numpages = {18},
  series = {OOPSLA '96}}

@book{Baco98a,
  author = {Jean Bacon},
  title = {Concurrent Systems},
  publisher = {Addison Wesley},
  year = {1998},
  isbn = {0-201-17767-6}}

@article{Bada86a,
  author = {D.Z. Badal},
  title = {The Distributed Deadlock Detection Algorithm},
  journal = {ACM Transactions on Computer Systems},
  volume = {4},
  pages = {320--337},
  year = {1986},
  month = nov,
  number = {4}}

@inproceedings{Badr05a,
  author = {Badri, Linda and Badri, Mourad and St-Yves, Daniel},
  title = {Supporting predictive change impact analysis: a control call graph based technique},
  booktitle = {Proceedings of the 12th Asia-Pacific Software Engineering Conference},
  pages = {9--15},
  year = {2005},
  doi = {10.1109/APSEC.2005.100},
  issn = {1530-1362},
  month = {dec},
  organization = {IEEE},
  series = {APSEC'05}}

@techreport{Badr98a,
  author = {Greg J. Badros and Alan Borning},
  title = {The Cassowary Linear Arithmetic Constraint Solving Algorithm: Interface and Implementation},
  year = {1998},
  institution = {University of Washington},
  number = {UW Tech Report 98-06-04}}

@incollection{Bael93a,
  author = {Stefan Van Baelen and Johan Lewi and Eric Steegmans and Bart Swennen},
  title = {Constraints in Object-Oriented Analysis},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {393--407},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Object-oriented analysis methods can incorporate the
concept of constraints to express rules of the
problem domain in the specification model,
restricting the possible instances of the model. As
such, constraints describe properties that must be
true at each moment in time for the entire system ,
without determining how they are to be preserved.
The ways in which these constraints are introduced
in the model differ from method to method, and even
between distinct constraint types in a single
method. Different ways in which constraints can be
described, are illustrated and compared. Specifying
constraints as informal annotations or by
operational restrictions is too informal and low
level for analysis. According to the properties,
importance and influence of the constraint types on
the object model, they ought to be described
differently. Some constraints, such as connectivity
constraints, definition and as a reminder for these
kind of constraints Others, such as attribute value
constraints, are best introduced as independent
items part of a separate concept grafted on a
general model to get a consistent, unambiguous,
symmetrical and general applicable constraint
description. Yet others, such as relational and
existential dependency constraints, should be
expressed implicitly by a hierarchical model
structure. This approach enriches the object model
in such a way that it highlights the logical
structure of the problem domain to its right
extent.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Baer98a,
  author = {Holger B\"ar and Oliver Cuipke},
  title = {Exploiting design heuristics for automatic problem detection},
  booktitle = {Object-Oriented Technology (ECOOP '98 Workshop Reader)},
  volume = {1543},
  publisher = {Springer-Verlag},
  year = {1998},
  editor = {Serge Demeyer and Jan Bosch},
  month = jul,
  series = {LNCS}}

@techreport{Baer99a,
  author = {Holger B\"ar},
  title = {{FAMIX} {C}++ language plug-in 1.0},
  year = {1999},
  institution = {University of Bern},
  month = sep}

@book{Baet90a,
  author = {Jos C.M. Baeten},
  title = {Applications of Process Algebra},
  publisher = {Cambridge University Press},
  year = {1990},
  isbn = {0-521-40028-7}}

@book{Baet90b,
  author = {Jos C.M. Baeten and Peter Weijland},
  title = {Process Algebra},
  publisher = {Cambridge University Press},
  year = {1990},
  isbn = {0-521-400043-0}}

@book{Baet90c,
  title = {Proceedings {CONCUR}'90},
  volume = 458,
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Amsterdam, the Netherlands},
  editor = {J.C.M. Baeten},
  isbn = {3-540-53048-7},
  month = aug,
  series = {LNCS}}

@book{Baet91a,
  title = {Proceedings {CONCUR}'91},
  volume = {527},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Amsterdam},
  editor = {J.C.M.Baeten and J.F.Groote},
  isbn = {3-540-54430-5},
  month = sep,
  series = {LNCS}}

@inproceedings{Baeu96a,
  author = {Dirk B{\"a}umer and Rolf Knoll and Guido Gryczan and Heinz Z{\"u}llighoven},
  title = {Large Scale Object-Oriented Software-Development in a Banking Environment --- An Experience Report},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {73--90},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@article{Baez00a,
  author = {Ricardo A. Baeza-Yates and Gonzalo Navarro},
  title = {Block Addressing Indices for Approximate Text Retrieval},
  journal = {Journal of the American society of Information Sciences},
  volume = {51},
  pages = {69--82},
  year = {2000},
  url = {citeseer.ist.psu.edu/article/baeza-yates97block.html},
  number = {1}}

@article{Baez92a,
  author = {Ricardo Baeza-Yates and Gaston H. Gonnet},
  title = {A New Approach to Text Searching},
  journal = {CACM},
  volume = {35},
  pages = {74--82},
  year = {1992},
  month = oct,
  number = {10}}

@inproceedings{Baez99a,
  author = {Ricardo A. Baeza-Yates and Gaston H. Gonnet},
  title = {A Fast Algorithm on Average for All-Against-All Sequence Matching},
  booktitle = {Proceedings of the String Processing and Information Retrieval Symposion (SPIRE)},
  pages = {16--23},
  publisher = {IEEE},
  year = {1999}}

@book{Baez99b,
  author = {Ricardo Baeza-Yates and Berthier Ribeiro-Neto},
  title = {Modern Information Retrieval},
  publisher = {Addison-Wesley},
  year = {1999},
  url = {http://sunsite.dcc.uchile.cl/irbook}}

@article{Bahi01a,
  author = {William L. Chapman and Jerzy Rozenblit and A. Terry Bahill},
  title = {System design is an NP-complete problem: Correspondence},
  journal = {Systems Engineering},
  volume = {4},
  pages = {222--229},
  publisher = {John Wiley and Sons Ltd.},
  year = {2001},
  doi = {10.1002/sys.v4:3},
  address = {Chichester, UK, UK},
  issn = {1098-1241},
  number = {3}}

@misc{Bail89a,
  author = {S.C. Bailin},
  title = {An Object-Oriented Requirements Specification Method},
  volume = {32},
  pages = {608--623},
  year = {1989},
  address = {CACM},
  month = may,
  number = {5}}

@techreport{Bail99a,
  author = {G\'{e}rard Baille and Philippe Garnier and Herv\'{e} Mathieu and Roget Pissard-Gibollet},
  title = {Le CyCab de l'INRIA Rh\^{o}ne-Alpes},
  year = {1999},
  url = {http://www.inria.fr/rrrt/rt-0229.html},
  institution = {INRIA},
  month = apr,
  number = {RT-0229},
  type = {Technical Report}}

@inproceedings{Bajr06a,
  author = {Bajracharya, Sushil and Ngo, Trung and Linstead, Erik and Dou, Yimeng and Rigor, Paul and Baldi, Pierre and Lopes, Cristina},
  title = {Sourcerer: a search engine for open source code supporting structure-based search},
  booktitle = {OOPSLA '06: Companion to the 21st ACM SIGPLAN symposium on Object-oriented programming systems, languages, and applications},
  pages = {681--682},
  publisher = {ACM},
  year = {2006},
  url = {http://dx.doi.org/10.1145/1176617.1176671},
  doi = {10.1145/1176617.1176671},
  abstract = {We present Sourcerer, a search engine for
open-source code. Sourcerer extracts fine-grained
structural information from the code and stores it
in a relational model. This information is used to
implement a basic notion of CodeRank and to enable
search forms that go beyond conventional
keyword-based searches.},
  address = {New York, NY, USA},
  citeulike-article-id = {5404930},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1176671},
  citeulike-linkout-1 = {http://dx.doi.org/10.1145/1176617.1176671},
  isbn = {1-59593-491-X},
  location = {Portland, Oregon, USA},
  posted-at = {2009-08-10 14:24:10},
  priority = {0}}

@article{Bajr09a,
  author = {Bajracharya, Sushil and Ossher, Joel and Lopes, Cristina},
  title = {Sourcerer: An internet-scale software repository},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, ICSE Workshop on},
  volume = {0},
  pages = {1--4},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070010},
  doi = {10.1109/SUITE.2009.5070010},
  abstract = {Vast quantities of open source code are now
available online, presenting a great potential
resource for software developers. Yet the current
generation of open source code search engines fail
to take advantage of the rich structural information
contained in the code they index. We have developed
Sourcerer, an infrastructure for large-scale
indexing and analysis of open source code. By taking
full advantage of this structural information,
Sourcerer provides a foundation upon which state of
the art search engines and related tools easily be
built. We describe the Sourcerer infrastructure,
present the applications that we have built on top
of it, and discuss how existing tools could benefit
from using Sourcerer.},
  address = {Los Alamitos, CA, USA},
  citeulike-article-id = {5403369},
  citeulike-linkout-0 = {http://doi.ieeecomputersociety.org/10.1109/SUITE.2009.5070010},
  citeulike-linkout-1 = {http://dx.doi.org/10.1109/SUITE.2009.5070010},
  isbn = {978-1-4244-3740-5},
  posted-at = {2009-08-10 11:07:44},
  priority = {0}}

@inproceedings{Bak02a,
  author = {Lars Bak and Gilad Bracha and Steffen Grarup and Robert Griesemer and David Griswold and Urs H{\"o}lzle},
  title = {Mixins in {Strongtalk}},
  booktitle = {ECOOP '02 Workshop on Inheritance},
  year = {2002},
  month = jun}

@inproceedings{Bake06,
  author = {Jason Baker and Antonio Cunei and Chapman Flack and Filip Pizlo and Marek Prochazka and Jan Vitek and Austin Armbuster and Edward Pla and David Holmes},
  title = {A Real-time {J}ava Virtual Machine for Avionics},
  booktitle = {Proceedings of the 12th IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS 2006)},
  publisher = {IEEE Computer Society},
  year = {2006}}

@techreport{Bake78a,
  author = {Henry G. Baker},
  title = {Actor Systems for Real Time Computation},
  year = {1978},
  institution = {MIT lab for Computer science},
  type = {MIT/LCS/TR197}}

@techreport{Bake90a,
  author = {Henry G. Baker},
  title = {The Nimble Type Inferencer for Common Lisp-84},
  year = {1990},
  url = {ftp://ftp.netcom.com/pub/hbaker/TInference.ps.gz},
  institution = {Nimble Computer Corp.},
  month = apr,
  note = {submitted to ACM TOPLAS},
  type = {Pre-publication draft}}

@inproceedings{Bake90b,
  author = {Henry G. Baker},
  title = {Unify and Conquer (Garbage, Updating, Aliasing ...) in Functional Languages},
  booktitle = {Proc. ACM Conf. on Lisp and Functional Programming},
  pages = {218--226},
  year = {1990},
  url = {ftp://ftp.netcom.com/pub/hbaker/Share-Unify.ps.gz},
  address = {Nice, France},
  month = jun}

@article{Bake92a,
  author = {Brenda S. Baker},
  title = {A Program for Identifying Duplicated Code},
  journal = {Computing Science and Statistics},
  volume = {24},
  pages = {49--57},
  publisher = {Interface Foundation of North America},
  year = {1992},
  url = {http://cm.bell-labs.com/cm/cs/doc/92/2-bsb-1.ps.gz}}

@inproceedings{Bake93a,
  author = {Brenda S. Baker},
  title = {A Theory of Parameterized Pattern Matching: Algorithms and Applications (Extended Abstract)},
  booktitle = {Proceedings of the 25th ACM Symposium on Theory of Computing},
  pages = {71--80},
  year = {1993},
  url = {http://cm.bell-labs.com/cm/cs/doc/93/2-bsb-2.ps.gz},
  month = may}

@article{Bake93b,
  author = {Brenda S. Baker},
  title = {On Finding Duplication in Strings and Software},
  journal = {Journal of Algorithms},
  year = {1993},
  url = {http://cm.bell-labs.com/cm/cs/doc/93/2-bsb-1.ps.gz},
  note = {To appear}}

@inproceedings{Bake95a,
  author = {Brenda S. Baker},
  title = {Parameterized Pattern Matching by Boyer-Moore Type Algorithms},
  booktitle = {Proceedings of the Sixth Annual ACM-SIAM Symposium on Discrete Algorithms},
  pages = {541--550},
  year = {1995},
  url = {http://cm.bell-labs.com/cm/cs/doc/95/2-bsb-1.ps.gz},
  month = jan}

@inproceedings{Bake95b,
  author = {Brenda S. Baker},
  title = {On Finding Duplication and Near-Duplication in Large Software Systems},
  booktitle = {Proceedings of the Second IEEE Working Conference on Reverse Engineering ({WCRE})},
  pages = {86--95},
  year = {1995},
  month = jul}

@article{Bake96a,
  author = {Brenda S. Baker},
  title = {Parameterized Pattern Matching: Algorithms and Applications},
  journal = {Journal Computer System Science},
  volume = {52},
  pages = {28--42},
  year = {1996},
  url = {http://cm.bell-labs.com/cm/cs/doc/94/2-bsb-1.ps.gz},
  month = feb,
  number = {1}}

@article{Bake97a,
  author = {Brenda S. Baker},
  title = {Parameterized Duplication in Strings: Algorithms and an Application to Software Maintenance},
  journal = {SIAM Journal of Computing},
  year = {1997},
  url = {http://cm.bell-labs.com/cm/cs/doc/95/2-bsb-4.ps.gz},
  month = oct}

@inproceedings{Bake98a,
  author = {Brenda S. Baker and Udi Manber},
  title = {Deducing Similarities in {Java} Sources from Bytecodes},
  booktitle = {Proc. of Usenix Annual Technical Conf.},
  pages = {179--190},
  year = {1998},
  url = {citeseer.ist.psu.edu/baker98deducing.html}}

@inproceedings{Bake98b,
  author = {Brenda S. Baker and Raffaelle Giancarlo},
  title = {Longest Common Subsequence from Fragments via Sparse Dynamic Programming},
  booktitle = {Proceedings of the 6th Annual European Symposium on Algorithms},
  pages = {79--90},
  publisher = {Springer-Verlag, Berlin},
  year = {1998},
  url = {http://cm.bell-labs.com/who/bsb/research.html},
  address = {Venice, Italy},
  editor = {G. Bilardi and G. F. Italiano and A. Pietracaprina and G. Pucci},
  month = aug,
  number = {1461},
  series = {LNCS}}

@misc{Bake99a,
  author = {Brenda S. Baker and Kenneth W. Church and Jonathan I. Helfman and Brian W. Kernighan},
  title = {Methods and apparatus for detecting and displaying similarities in large data sets},
  year = {1999},
  url = {http://patft.uspto.gov/netahtml/search-bool.html},
  howpublished = {United States Patent 5,953,006},
  month = sep}

@inproceedings{Bake99b,
  author = {Brenda S. Baker},
  title = {Parameterized Diff},
  booktitle = {ACM-SIAM Symp. on Discrete Algorithms},
  pages = {S854-S855},
  year = {1999},
  month = jan}

@article{Baker92b,
  author = {Baker, Henry G.},
  title = {The {T}readmill: {R}eal-time {G}arbage {C}ollection {W}ithout {M}otion {S}ickness},
  journal = {SIGPLAN Notices},
  year = {1992}}

@inproceedings{Baki15,
  author = {Baki, Islem and Sahraoui, Houari},
  title = {Multi-step learning and adaptive search for learning complex model transformations from examples},
  year = {2015},
  url = {http://www-labs.iro.umontreal.ca/~sahraouh/papers/TOSEM16_Baki.pdf},
  abstract = {Model-driven engineering promotes models as main development artifacts. As several models may be manipulated
during the software-development life cycle, model transformations ensure their consistency by
automating model generation and update tasks. However, writing model transformations requires much
knowledge and effort that detract from their benefits. To address this issue, Model Transformation by Example
(MTBE) aims to learn transformation programs from source and target model pairs supplied as examples.
In this paper, we tackle the fundamental issues that prevent the existing MTBE approaches from
efficiently solving the problem of learning model transformations. We show that, when considering complex
transformations, the search space is too large to be explored by naive search techniques. We propose an
MTBE process to learn complex model transformations by considering three common requirements: element
context and state dependencies, and complex value derivation. Our process relies on two strategies to reduce
the size of the search space and to better explore it, namely, multi-step learning and adaptive search. We experimentally
evaluate our approach on seven model transformation problems. The learned transformation
programs are able to produce perfect target models in three transformation cases, whereas precision and
recall values larger than 90\% are recorded for the four remaining cases.}}

@book{Bakk90a,
  title = {Foundations of Object-Oriented Languages},
  volume = {489},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Noordwijkerhout, the Netherlands},
  editor = {J.W. de Bakker and W.P. de Roever},
  isbn = {3-540-53931-X},
  month = may,
  series = {LNCS}}

@article{Bal92a,
  author = {H.E. Bal and M.F. Kaashoek and A.S. Tanenbaum},
  title = {Orca: {A} Language for Parallel Programming of Distributed Systems},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-18},
  pages = {190--205},
  year = {1992},
  month = mar,
  number = {3}}

@inproceedings{Bal93a,
  author = {Henri E. Bal and M. Frans Kaashoek},
  title = {Object Distribution in Orca using Compile-Time and Run-Time Techniques},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {162--177},
  year = {1993},
  month = oct}

@book{Bal94a,
  author = {Henri E. Bal and Dick Grune},
  title = {Programming Language Essentials},
  publisher = {Addison Wesley},
  year = {1994},
  isbn = {0-201-63179-2}}

@inproceedings{Bala00a,
  author = {Magdalena Balazinska and Ettore Merlo and Michel Dagenais and Bruno Lagu{\"e} and Kostas Kontogiannis},
  title = {Advanced Clone-Analysis to Support Object-Oriented System Refactoring},
  booktitle = {Proceedings Seventh Working Conference on Reverse Engineering ({WCRE}'00)},
  pages = {98--107},
  year = {2000},
  url = {http://nms.lcs.mit.edu/~mbalazin/publications/{WCRE}2000Balazinska.ps},
  editor = {Fran\c{c}oise Balmas and Kostas Kontogiannis},
  month = oct,
  organization = {IEEE Computer Society}}

@inproceedings{Bala00b,
  author = {Bala, Vasanth and Duesterwald, Evelyn and Banerjia, Sanjeev},
  title = {Dynamo: A Transparent Dynamic Optimization System},
  booktitle = {Proceedings of the ACM SIGPLAN 2000 Conference on Programming Language Design and Implementation},
  pages = {1-12},
  publisher = {Association for Computing Machinery},
  year = {2000},
  url = {https://doi.org/10.1145/349299.349303},
  doi = {10.1145/349299.349303},
  abstract = {We describe the design and implementation of Dynamo, a software dynamic optimization system that is capable of transparently improving the performance of a native instruction stream as it executes on the processor. The input native instruction stream to Dynamo can be dynamically generated (by a JIT for example), or it can come from the execution of a statically compiled native binary. This paper evaluates the Dynamo system in the latter, more challenging situation, in order to emphasize the limits, rather than the potential, of the system. Our experiments demonstrate that even statically optimized native binaries can be accelerated Dynamo, and often by a significant degree. For example, the average performance of -O optimized SpecInt95 benchmark binaries created by the HP product C compiler is improved to a level comparable to their -O4 optimized version running without Dynamo. Dynamo achieves this by focusing its efforts on optimization opportunities that tend to manifest only at runtime, and hence opportunities that might be difficult for a static compiler to exploit. Dynamo's operation is transparent in the sense that it does not depend on any user annotations or binary instrumentation, and does not require multiple runs, or any special compiler, operating system or hardware support. The Dynamo prototype presented here is a realistic implementation running on an HP PA-8000 workstation under the HPUX 10.20 operating system.},
  address = {New York, NY, USA},
  isbn = {1581131992},
  location = {Vancouver, British Columbia, Canada},
  numpages = {12},
  series = {PLDI '00}}

@article{Bala05a,
  author = {Balaban, Ittai and Tip, Frank and Fuhrer, Robert},
  title = {Refactoring support for class library migration},
  journal = {ACM SIGPLAN Notices},
  volume = {40},
  pages = {265--279},
  publisher = {ACM New York, NY, USA},
  year = {2005},
  number = {10}}

@inproceedings{Bala96a,
  author = {N.V. Balasubramanian},
  title = {Object-Oriented Metrics},
  booktitle = {Proc. 3rd Int'l Asia-Pacific Software Engineering Conf. (ASPEC '96)},
  pages = {30--34},
  publisher = {IEEE Computer Society Press},
  year = {1996}}

@inproceedings{Bala99a,
  author = {Magdalena Balazinska and Ettore Merlo and Michel Dagenais and Bruno Lagu{\"e} and Kostas Kontogiannis},
  title = {Measuring Clone Based Reengineering Opportunities},
  booktitle = {Metrics '99},
  pages = {292--303},
  year = {1999},
  url = {http://nms.lcs.mit.edu/~mbalazin/publications/metrics99Balazinska.ps}}

@inproceedings{Bala99b,
  author = {Magdalena Balazinska and Ettore Merlo and Michel Dagenais and Bruno Lagu{\"e} and Kostas Kontogiannis},
  title = {Partial Redesign of {Java} Software Systems Based on Clone Analysis},
  booktitle = {Proceedings Sixth Working Conference on Reverse Engineering},
  pages = {326--336},
  year = {1999},
  editor = {Fran{\c{c}}oise Balmas and Michael Blaha and Spencer Rugaber},
  month = oct,
  organization = {IEEE Computer Society}}

@mastersthesis{Bala99c,
  author = {Magdalena Balazinska},
  title = {Reconception de Syst\`emes Orient\'es-Objet Bas\'ee sur L'Analyse des Clones},
  year = {1999},
  school = {\`Ecole Polytechnique de Montr\'eal},
  month = nov}

@inproceedings{Bald05a,
  author = {Baldassarre, Maria Teresa and Bianchi, Alessandro and Caivano, Danilo and Visaggio, Giuseppe},
  title = {An industrial case study on reuse oriented development},
  booktitle = {21st IEEE International Conference on Software Maintenance ({ICSM}'05)},
  pages = {283--292},
  year = {2005},
  organization = {IEEE}}

@article{Bald07a,
  author = {Matthias Baldauf and Schahram Dustdar and Florian Rosenberg},
  title = {A Survey on Context-Aware systems},
  journal = {International Journal of Ad Hoc and Ubiquitous Computing},
  volume = {2},
  pages = {263--277},
  year = {2007},
  url = {http://www.infosys.tuwien.ac.at/Staff/sd/papers/ASurveyOnContextAwareSystems.pdf},
  doi = {10.1504/IJAHUC.2007.014070},
  number = {4}}

@inproceedings{Bald08a,
  author = {Baldi, Pierre F. and Lopes, Cristina V. and Linstead, Erik J. and Bajracharya, Sushil K.},
  title = {A theory of aspects as latent topics},
  booktitle = {OOPSLA '08: Proceedings of the 23rd ACM SIGPLAN conference on Object-oriented programming systems, languages and applications},
  pages = {543--562},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1449764.1449807},
  address = {New York, NY, USA},
  isbn = {978-1-60558-215-3},
  location = {Nashville, TN, USA}}

@inproceedings{Balf98a,
  author = {Balfanz, Dirk and Gong, Li},
  title = {Experience with Secure Multi-Processing in Java},
  booktitle = {ICDCS '98: Proceedings of the The 18th International Conference on Distributed Computing Systems},
  pages = {398},
  publisher = {IEEE Computer Society},
  year = {1998},
  address = {Washington, DC, USA},
  isbn = {0-8186-8292-2}}

@inproceedings{Bali06a,
  author = {Mihai Balint and Tudor G\^irba and Radu Marinescu},
  title = {How Developers Copy},
  booktitle = {Proceedings of International Conference on Program Comprehension ({ICPC} 2006)},
  pages = {56--65},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Bali06aHowDevelopersCopy.pdf},
  doi = {10.1109/{ICPC}.2006.25},
  abstract = {Copy-paste programming is dangerous as it may lead
to hidden dependencies between different parts of
the system. Modifying clones is not always straight
forward, because we might not know all the places
that need modification. This is even more of a
problem when several developers need to know about
how to change the clones. In this paper, we
correlate the code clones with the time of the
modification and with the developer that performed
the modification to detect patterns of how
developers copy from one another. We develop a
visualization, named Clone Evolution View, to
represent the evolution of the duplicated code. We
show the relevance of our approach on several large
case studies and we distill our experience in forms
of interesting copy patterns.},
  medium = {2}}

@mastersthesis{Bali06b,
  author = {Mihai Balint},
  title = {How Developers Copy},
  year = {2006},
  school = {Politehnica University of Timisoara},
  month = sep,
  type = {Master's thesis}}

@inproceedings{Bali07a,
  author = {Mihai Balint and Petru Florin Mihancea and Radu Marinescu and Michele Lanza},
  title = {NOREX: Distributed Collaborative Reengineering},
  booktitle = {Proceedings of FAMOOSR 2007 (1st Workshop on FAMIX and Moose in Reengineering)},
  pages = {6},
  year = {2007}}

@inproceedings{Bali07b,
  author = {Mihai Balint and Petru Florin Mihancea and Tudor G\^irba and Radu Marinescu},
  title = {NOREX: A Distributed Reengineering Environment},
  booktitle = {Proceedings of International Conference on Software Maintenance ({ICSM} 2007)},
  pages = {523--524},
  publisher = {IEEE Computer Society},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Bali07bNorex.pdf},
  doi = {10.1109/ICSM.2007.4362681},
  abstract = {Several reengineering environments have been created
to provide for a unified infrastructure in which
various approaches can be employed together. While
the collaboration between tools is very strong
within such environments, currently the
inter-environmental collaboration is very weak and
happens mainly at the level of data-files exchange.
Consequently, the different groups of researchers
are only collaborating shallowly via data, rather
than at the level of analysis. In this demo, we
present NOREX, a distributed reengineering
environment that allows different groups of
researchers to transparently use and combine
existing techniques, and share their own,
transcending any parochial barriers (e.g.,
implementation language or environment).},
  isbn = {978-1-4244-1256-3},
  issn = {1063-6773},
  medium = {2},
  month = sep,
  note = {Tool demo}}

@article{Ball06a,
  author = {Ball, Thomas and Bounimova, Ella and Cook, Byron and Levin, Vladimir and Lichtenberg, Jakob and McGarvey, Con and Ondrusek, Bohus and Rajamani, Sriram K. and Ustuner, Abdullah},
  title = {Thorough static analysis of device drivers},
  journal = {SIGOPS Oper. Syst. Rev.},
  volume = {40},
  pages = {73--85},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1218063.1217943},
  address = {New York, NY, USA},
  issn = {0163-5980},
  number = {4}}

@inproceedings{Ball07a,
  author = {Balland, Emilie and Brauner, Paul and Kopetz, Radu and Moreau, Pierre-Etienne and Reilles, Antoine},
  title = {Tom: piggybacking rewriting on java},
  booktitle = {Proceedings of the 18th international conference on Term rewriting and applications},
  pages = {36--47},
  publisher = {Springer-Verlag},
  year = {2007},
  url = {http://dl.acm.org/citation.cfm?id=1779782.1779787},
  address = {Berlin, Heidelberg},
  location = {Paris, France},
  series = {RTA'07}}

@phdthesis{Ball09a,
  author = {Balland, Emilie},
  title = {{Conception d'un langage d{\'e}di{\'e} {\`a} l'analyse et la transformation de programmes}},
  year = {2009},
  school = {{Universit{\'e} Henri Poincar{\'e} - Nancy 1}},
  url = {https://tel.archives-ouvertes.fr/tel-01748507},
  pdf = {https://tel.archives-ouvertes.fr/tel-01748507v2/file/manuscrit.pdf},
  hal-id = {tel-01748507},
  keywords = {Programming languages ; embedded languages ; static analysis ; program transformation ; rewriting ; term-graphs ; langages de programmation ; langages embarqu{\'e}s ; analyse statique ; transformation de programmes ; r{\'e}{\'e}criture ; strat{\'e}gies ; termes-graphes},
  month = mar,
  number = {2009NAN10026},
  type = {Theses}}

@techreport{Ball65a,
  author = {G. H. Ball and D. J. Hall},
  title = {ISODATA, {A} {Novel} {Method} of {Data} {Analysis} and {Pattern} {Classification}},
  year = {1965},
  address = {Menlo Park, California},
  institution = {Stanford Research Institute}}

@inproceedings{Ball86a,
  author = {Mark B. Ballard and David Maier and Allen Wirfs-Brock},
  title = {Quicktalk: {A} {Smalltalk}-80 Dialect for Defining Primitive Methods},
  booktitle = {Proceedings OOPSLA '86},
  volume = {21},
  pages = {140--150},
  year = {1986},
  month = nov}

@article{Ball94a,
  author = {Thomas Ball and James R. Larus},
  title = {Optimally Profiling and Tracing Programs},
  journal = {ACM Transactions on Programming Languages and Systems},
  volume = {16},
  pages = {59--70},
  year = {1994},
  doi = {10.1145/183432.183527},
  number = {3}}

@article{Ball96a,
  author = {Timothy Ball and Stephen Eick},
  title = {Software Visualization in the Large},
  journal = {IEEE Computer},
  volume = {29},
  pages = {33--43},
  publisher = {IEEE Computer Society Press},
  year = {1996},
  address = {Los Alamitos CA},
  issn = {0018-9162},
  number = {4}}

@inproceedings{Ball97a,
  author = {Thomas Ball and Jung-Min Kim Adam and A. Porter Harvey and P. Siy},
  title = {If Your Version Control System Could Talk},
  booktitle = {ICSE Workshop on Process Modeling and Empirical Studies of Software Engineering},
  year = {1997}}

@inproceedings{Ball99a,
  author = {Thomas Ball},
  title = {The Concept of Dynamic Analysis},
  booktitle = {Proceedings of the European Software Engineering Conference and ACM SIGSOFT International Symposium on the Foundations of Software Engineering (ESEC/FSC'99)},
  pages = {216--234},
  publisher = {Springer Verlag},
  year = {1999},
  address = {Heidelberg},
  location = {Toulose, France},
  month = {sep},
  number = {1687},
  series = {LNCS}}

@inproceedings{Balm01a,
  author = {Francoise Balmas},
  title = {Displaying dependence graphs: a hierarchical approach},
  booktitle = {Proceedings of the 8th Working Conference on Reverse Engineering ({WCRE}'01)},
  pages = {261},
  publisher = {IEEE Computer Society},
  year = {2001},
  doi = {10.1109/{WCRE}.2001.957830},
  address = {Los Alamitos, CA, USA},
  issn = {1095--1350}}

@inproceedings{Balm98a,
  author = {F. Balmas},
  title = {Outlining C Loops: Preliminary Results and Trends},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {115--125},
  publisher = {IEEE Computer Society},
  year = {1998}}

@inproceedings{Balm99a,
  author = {Fran{\c{c}}oise Balmas},
  title = {QBO: a Query Tool Specially Developed to Explore Programs},
  booktitle = {Proceedings Sixth Working Conference on Reverse Engineering},
  pages = {270--279},
  year = {1999},
  editor = {Fran{\c{c}}oise Balmas and Michael Blaha and Spencer Rugaber},
  month = oct,
  organization = {IEEE Computer Society}}

@inproceedings{Bals93a,
  author = {Herman Balsters and Rolf A. de By and Roberto Zicari},
  title = {Typed Sets as a Basis for Object-Oriented Database Schemas},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {161--184},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {The object-oriented data model TM is a language that
is based on the formal theory of FM, a typed
language with object-oriented features such as
attributes and methods in the presence of subtyping.
The general (typed) set constructs of FM allow one
to deal with (database) constraints in TM. The paper
describes the theory of FM, and discusses the role
that set expressions may play in conceptual database
schemas. Special attention is paid to the treatment
of constraints, and a three-step specification
approach is proposed. This approach results in the
formal notion of database universe stated as an FM
expression.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Balz04a,
  author = {Balzer, Michael and Noack, Andreas and Deussen, Oliver and Lewerentz, Claus},
  title = {Software landscapes: Visualizing the structure of large software systems},
  booktitle = {IEEE TCVG},
  year = {2004}}

@inproceedings{Balz05a,
  author = {Michael Balzer and Oliver Deussen and Claus Lewerentz},
  title = {Voronoi treemaps for the visualization of software metrics},
  booktitle = {SoftVis '05: Proceedings of the 2005 ACM symposium on Software visualization},
  pages = {165--172},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1056018.1056041},
  address = {New York, NY, USA},
  isbn = {1-59593-073-6},
  location = {St. Louis, Missouri}}

@article{Bana90a,
  author = {Jean-Pierre Ban\^atre and Daniel Le M\'etayer},
  title = {The Gamma Model and Its Discipline of Programming},
  journal = {Science of Computer programming},
  volume = {15},
  pages = {55--77},
  publisher = {North-Holland},
  year = {1990}}

@inproceedings{Bana93a,
  author = {Mike Banahan and L. Peter Deutsch and Boris Magnusson},
  title = {Panel: Aims, Means, and Futures of Object-Oriented Languages: Programming Styles and Tool Support},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {529--531},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {Panelists will compare and assess the strengths and
weaknesses of major object-oriented languages. They
will also comment on the possible development and
use of those languages and their related tools.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Bana95a,
  author = {Jean-Pierre Ban\^atre and Daniel Le M\'etayer},
  title = {Gamma and the Chemical Reaction Model},
  booktitle = {Proceedings of the Coordination '95 Workshop},
  publisher = {IC Press},
  year = {1995},
  address = {Londres}}

@misc{Bana95b,
  author = {Guruduth Banavar and Gary Lindstrom},
  title = {Compositionally Modular Scheme},
  year = {1995},
  number = {UUCS-95-020}}

@inproceedings{Bana96a,
  author = {Jean-Pierre Ban\^atre},
  title = {Parallel Multiset Processing: From Explicit Coordination to Chemical Reaction},
  booktitle = {Proceedings COORDINATION '96},
  volume = {1061},
  pages = {1--11},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Cesena, Italy},
  editor = {P. Ciancarini and Chris Hankin},
  series = {LNCS}}

@inproceedings{Bana96b,
  author = {Guruduth Banavar and Gary Lindstrom},
  title = {An Application Framework for Module Composition Tools},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {91--113},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@phdthesis{Banb02a,
  author = {M. Banbara},
  title = {Design and Implementation of Linear Logic Programming Languages},
  year = {2002},
  school = {The Graduate School of Science and Technology of Kobe University},
  month = sep}

@inproceedings{Banc88a,
  author = {Fran\c{c}ois Bancilhon},
  title = {Object-Oriented Database Systems},
  booktitle = {Proceedings 7th ACM SIGART/SIGMOD/SIGACT Symposium on Principles of Database Systems},
  year = {1988},
  address = {Austin, Texas},
  month = mar}

@book{Banc92a,
  title = {Building an Object-Oriented Database System: The Story of O2},
  publisher = {Morgan-Kaufmann},
  year = {1992},
  editor = {Fran\c{c}ois Bancilhon and C. Delobel and Paris Kanellakis},
  isbn = {1-55860-169-4}}

@incollection{Banc93a,
  author = {Fran\c{c}ois Bancilhon},
  title = {Object Database Systems: Functional Architecture},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {163--175},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Object database systems have now been on the market
for about 4 years. They have evolved considerably
and are now slowly converging to common and accepted
overall architecture. The goal of this paper is to
describe this architecture. An object database
system supports an object database model. This model
can be decomposed into four different aspects: data,
behavior, persistence and naming. An object database
system consists of a database engine supporting all
or part of the database model. On top of this engine
are implemented a number of language interfaces: an
object definition language, an object query language
and one or several programming languages. These
programming languages can be internal or external.
Internal languages are fully managed within the
system, and are in general proprietary extensions of
existing programming languages (C, Smalltalk, Lisp
or C++). External languages are managed outside of
the database system and are in most case standard
languages (C++ or Smalltalk).},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Banc96a,
  author = {Fran\c{c}ois Bancilhon},
  title = {Will Europe ever Produce and sell Objects?},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {2},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@incollection{Band93a,
  author = {Sergio Bandinelli and Luciano Baresi and Alfonso Fuggetta and Luigi Lavazza},
  title = {Requirements and Early Experiences in the Implementation of the {SPADE} Repository using Object-Oriented Technology},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {511--528},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Software development environments (SDEs) pose
pressing requirements to the supporting
repositories. This paper describes these
requirements, as derived within the SPADE project.
SPADE is a process centered environment being
developed at CEFRIEL and Politecnico di Milano. The
aim of the paper is to report the experiences that
the authors have gained in building a repository for
SPADE using O2, a ``state of the art''
object-oriented DBMS.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@article{Bane87a,
  author = {Jay Banerjee and Hong-Tai Chou and Jorge F. Garza and Won Kim and Darrell Woelk and Nat Ballou and H. Kim},
  title = {Data Model Issues for Object-Oriented Applications},
  journal = {ACM TOOIS},
  volume = {5},
  pages = {3--26},
  year = {1987},
  month = jan,
  number = {1}}

@inproceedings{Bane87b,
  author = {Jay Banerjee and Won Kim and H-J. Kim and H.F. Korth},
  title = {Semantics and Implementation of Schema Evolution in Object-Oriented Databases},
  booktitle = {Proceedings ACM SIGMOD '87},
  volume = {16},
  pages = {311--322},
  year = {1987},
  month = dec}

@inproceedings{Bani98a,
  author = {Elisa L. A. Baniassad and Gail C. Murphy},
  title = {Conceptual module querying for software reengineering},
  booktitle = {Proceedings of the 20th international conference on Software engineering},
  pages = {64--73},
  publisher = {IEEE Computer Society},
  year = {1998},
  isbn = {0-8186-8368-6},
  location = {Kyoto, Japan}}

@inproceedings{Bann79a,
  author = {John P. Banning},
  title = {An efficient way to find the side effects of procedure calls and the aliases of variables},
  booktitle = {Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on principles of programming languages (POPL'79)},
  pages = {29--41},
  publisher = {ACM},
  year = {1979},
  doi = {10.1145/567752.567756},
  address = {New York, NY, USA},
  location = {San Antonio, Texas}}

@article{Bans02a,
  author = {Jagdish Bansiya and Carl Davis},
  title = {A Hierarchical Model for Object-Oriented Design Quality Assessment},
  journal = {IEEE Transactions on Software Engineering},
  volume = {28},
  pages = {4--17},
  year = {2002},
  month = jan,
  number = {1}}

@article{Bans99a,
  author = {Jagdish Bansiya and Letha Etzkorn and Carl Davis and Wei Li},
  title = {A Class Cohesion Metric for Object-Oriented Designs},
  journal = {Journal of Object-Oriented Programming},
  volume = {11},
  pages = {47--52},
  publisher = {SIGG Publications},
  year = {1999},
  month = jan,
  number = {8}}

@inproceedings{Banv96a,
  author = {Mario Banville},
  title = {Sonia: an Adaptation of Linda for Coordination of Activities in Organizations},
  booktitle = {Proceedings of COOORDINATION '96},
  volume = {1061},
  pages = {57--74},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Cesena, Italy},
  editor = {Paolo Ciancarini and Chris Hankin},
  month = apr,
  series = {LNCS}}

@article{Baqa20a,
  title={Automatic software refactoring: a systematic literature review},
  volume={28},
  ISSN={0963-9314, 1573-1367},
  DOI={10.1007/s11219-019-09477-y},
  abstractNote={Refactoring a software artifact is an embedded task in the maintenance phase of the software life cycle. To reduce the time and effort required for this task, researchers proposed methods to automate the software refactoring process at the design and code levels. In this paper, we conducted a systematic literature review of papers that suggest, propose, or implement an automated refactoring process. Using different phases, setting several quality measures, and snowballing, only 41 papers passed to the last stage to be analyzed and reviewed. We observe an increase in the number of papers that propose automatic refactoring. The results show that while most of the papers discuss code refactoring, only a few recent papers are focused on model refactoring. Search-based refactoring is gaining more popularity, and several researchers have used it to perform refactoring in a quick and efficient manner.},
  number={2},
  journal={Software Quality Journal},
  author={Baqais, Abdulrahman Ahmed Bobakr and Alshayeb, Mohammad},
  year={2020},
  month=jun,
  pages={459-502},
  language={en} }

@inproceedings{Barb00a,
  author = {Fernanda Barbosa and Cunha, Jos{\'e} C.},
  title = {A Coordination Language for Collective Agent Based Systems: {GroupLog}},
  booktitle = {Proceedings of {SAC} '00},
  publisher = {ACM},
  year = {2000},
  address = {Como, Italy},
  month = mar}

@book{Barb70a,
  author = {M. Barbut and B. Monjardet},
  title = {Ordre et Classification},
  publisher = {Hachette},
  year = {1970}}

@inproceedings{Barb91a,
  author = {Gilles Barbedette},
  title = {Schema Modifications in the LISPO\_2 Persistent Object-Oriented Language},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {77--96},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@techreport{Barb91b,
  author = {Michel Barbeau and Gregor V. Bochmann},
  title = {Formal Semantics and Formal Verification of Object-Oriented Specifications Based on the Colored Petri Net Model},
  year = {1991},
  institution = {Universit\'e de Montr\'eal},
  number = {784},
  type = {Report}}

@inproceedings{Barb91c,
  author = {Franco Barbanera and Mariangiola Dezani-Ciancaglini},
  title = {Intersection and Union Types},
  booktitle = {Proceedings Theoretical Aspects of Computer Software (TACS '91)},
  volume = {526},
  pages = {651--674},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Sendai, Japan},
  editor = {T. Ito and A.R. Meyer},
  month = sep,
  series = {LNCS}}

@unpublished{Barb93a,
  author = {Franck Barbier and Jean Bezivin},
  title = {Object-Oriented Design: The {OSM} scheme},
  year = {1993},
  note = {Universit\'e de Nantes},
  type = {Draft}}

@proceedings{Barb96a,
  title = {Distributed Computing Systems},
  booktitle = {Proceedings of the 16th International Conference on Distributed Computing Systems},
  publisher = {IEEE},
  year = {1997},
  address = {Hong Kong},
  editor = {Mario Barbacci and Vicent Y.Shen},
  isbn = {0-8186-7399-0},
  month = may}

@article{Bare83a,
  author = {H. Barendregt and M. Coppo and M. Dezani-Ciancaglini},
  title = {A filter lambda model and the completeness of type assignment},
  journal = {Journal of Symbolic Logic},
  volume = {48},
  pages = {931--940},
  year = {1983},
  number = {4}}

@book{Bare84a,
  author = {H.P. Barendregt},
  title = {The Lambda Calculus --- Its Syntax and Semantics},
  volume = {103},
  publisher = {North-Holland},
  year = {1984},
  edition = {Revised},
  isbn = {0-444-86748-1},
  series = {Studies in Logic and the Foundations of Mathematics}}

@incollection{Bari96c,
  author = {Franck Barillaud and Luca Deri and Metin Feridun},
  title = {Network Management using Internet Technologies},
  booktitle = {Integrated Network Management: Management in a Virtual World},
  publisher = {IEEE},
  year = {1996},
  brokenurl = {http://engine.ieee.org/comsoc/ISINM/)},
  month = may}

@inproceedings{Barl01a,
  author = {Todd Barlow and Padraic Neville},
  title = {A comparison of 2-D Visulization of Hierarchies},
  booktitle = {Proceedings of the IEEE Symposium on Information Visualization 2001 (INFOVIS'01)},
  year = {2001}}

@book{Barn02a,
  author = {David J. Barnes and Michael Koelling},
  title = {Objects First With {Java} --- A Practical Introduction Using {BlueJ}},
  publisher = {Prentice Hall},
  year = {2003},
  address = {Edinburgh Gate, England},
  isbn = {0-13-044929-6}}

@inproceedings{Barn04a,
  author = {Mike Barnett and David A. Naumann},
  title = {Friends Need a Bit More: Maintaining Invariants Over Shared State},
  booktitle = {Proceedings MPC 2004},
  year = {2004},
  month = jul}

@inproceedings{Barn13a,
  author = {Barnes, Jeffrey M and Pandey, Ashutosh and Garlan, David},
  title = {Automated planning for software architecture evolution},
  booktitle = {Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
  pages = {213--223},
  year = {2013},
  organization = {IEEE}}

@inproceedings{Barn15a,
  author = {Michael Barnett and Christian Bird and Joao Brunet and Shuvendu Lahiri},
  title = {Helping developers help themselves: Automatic decomposition of code review changesets.},
  booktitle = {Proceedings of the 37th International Conference on Software Engineering},
  publisher = {IEEE},
  year = {2015},
  url = {http://research.microsoft.com/apps/pubs/default.aspx?id=238937},
  month = {may}}

@article{Barn80a,
  author = {J.G.P. Barnes},
  title = {An Overview of Ada},
  journal = {Software --- Practice and Experience},
  volume = {10},
  pages = {851--887},
  year = {1980}}

@article{Barn94a,
  author = {Jack Barnard and Art Price},
  title = {Managing Code Inspection Information},
  journal = {IEEE Software},
  volume = {11},
  pages = {59--69},
  publisher = {IEEE},
  year = {1994},
  month = mar,
  number = {2}}

@book{Barn95a,
  author = {John Barnes},
  title = {Programming in Ada '95},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-87700-7}}

@article{Barne03,
  author = {Tom Barrett},
  title = {Dynamic Proxies in {Java} and {.NET}},
  journal = {Dr. Dobb's Journal of Software Tools},
  volume = {28},
  pages = {18, 20, 22, 24, 26},
  year = {2003},
  abstract = {Tom examines how proxies separate cross-cutting
		 concerns, then explores and --- in both Java and C\#
		 and --- a new twist on the traditional Proxy pattern
		 that promotes reuse and decreases complexity.
		 Additional resources include dyproxy.zip (source
		 code).},
  month = jul,
  number = {7}}

@article{Baro81a,
  author = {A.J. Baroody and D.J. De Witt},
  title = {An Object-Oriented Approach to Database System Implementation},
  journal = {ACM TODS},
  volume = {6},
  year = {1981},
  month = dec,
  number = {4}}

@incollection{Baro95a,
  author = {Ed Baroth and Chris Hartsough},
  title = {Visual Programming in the Real World},
  booktitle = {Visual Object-Oriented Programming},
  pages = {21--42},
  publisher = {Manning Publishing Co.},
  year = {1995},
  editor = {Margaret M. Burnett and Adele Goldberg and Ted G. Lewis}}

@book{Baro99a,
  author = {Carl Baroudi},
  title = {Mastering Cobol},
  publisher = {Sybex},
  year = {1999}}

@article{Barr03a,
  author = {Evelyn J. Barry and Chris F. Kemerer and Sandra A. Slaughter},
  title = {On the Uniformity of Software Evolution Patterns},
  journal = {icse},
  volume = {00},
  pages = {106--113},
  publisher = {IEEE Computer Society},
  year = {2003},
  doi = {10.1109/ICSE.2003.1201192},
  address = {Los Alamitos, CA, USA},
  issn = {0270-5257}}

@article{Barr04a,
  author = {Peter Barron and Vinny Cahill},
  title = {Using Stigmergy to Co-Ordinate Pervasive Computing Environments},
  journal = {wmcsa},
  pages = {62-71},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/MCSA.2004.30},
  address = {Los Alamitos, CA, USA},
  issn = {1550-6193}}

@inproceedings{Barr06a,
  author = {Peter Barron and Vinny Cahill},
  title = {YABS:: a domain-specific language for pervasive computing based on stigmergy},
  booktitle = {GPCE '06: Proceedings of the 5th international conference on Generative programming and component engineering},
  pages = {285--294},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1173706.1173730},
  address = {New York, NY, USA},
  isbn = {1-59593-237-2},
  location = {Portland, Oregon, USA}}

@article{Barr15a,
  author = {Barr, Earl T. and Harman, Mark and McMinn, Phil and Shahbaz, Muzammil and Yoo, Shin},
  title = {The Oracle Problem in Software Testing: A Survey},
  journal = {IEEE Transactions on Software Engineering},
  volume = {41},
  pages = {507-525},
  year = {2015},
  doi = {10.1109/TSE.2014.2372785},
  number = {5}}

@inproceedings{Barr16a,
  author = {Barr, Earl and Marron, Mark and Maurer, Ed and Moseley, Dan and Seth, Gaurav},
  title = {Time-travel debugging for JavaScript/Node.js},
  booktitle = {Proceedings of the International Symposium on Foundations of Software Engineering},
  pages = {1003-1007},
  year = {2016},
  doi = {10.1145/2950290.2983933},
  month = {nov}}

@inproceedings{Barr17a,
  author = {Barr, Earl T. and Marron, Mark},
  title = {TARDIS: Affordable Time-Travel Debugging in Managed Runtimes},
  booktitle = {Proceedings of International Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'14)},
  volume = {49},
  pages = {67-82},
  publisher = {ACM},
  year = {2014},
  url = {https://www.microsoft.com/en-us/research/publication/tardis-affordable-time-travel-debugging-in-managed-runtimes-2/},
  abstract = {Developers who set a breakpoint a few statements too late or who are trying to diagnose a subtle bug from a single core dump often wish for a time-traveling debugger. The ability to rewind time to see the exact sequence of statements and program values leading to an error has great intuitive appeal but, due to large time and space overheads, time-traveling debuggers have seen limited adoption.

A managed runtime, such as the Java JVM or a JavaScript engine, has already paid much of the cost of providing core features - type safety, memory management, and virtual IO - that can be reused to implement a low overhead timetraveling debugger. We leverage this insight to design and build affordable time-traveling debuggers for managed languages. TARDIS realizes our design: it provides affordable time-travel with an average overhead of only 7\% during normal execution, a rate of 0:6 MB/s of history logging, and a worst-case 0:68s time-travel latency on our benchmark applications. TARDIS can also debug optimized code using time-travel to reconstruct state. This capability, coupled with its low overhead, makes TARDIS suitable for use as the default debugger for managed languages, promising to bring time-traveling debugging into the mainstream and transform the practice of debugging.},
  month = {oct}}

@inproceedings{Barr17b,
  author = {Barrett, Edd and Bolz-Tereick, Carl Friedrich and Killick, Rebecca and Knight, Vincent and Mount, Sarah and Tratt, Laurence},
  title = {Virtual Machine Warmup Blows Hot and Cold},
  booktitle = {Proceedings of International Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'17)},
  publisher = {ACM},
  year = {2017},
  doi = {https://doi.org/10.1145/3133876},
  month = oct}

@inproceedings{Barr21a,
  author = {Barri{\`e}re, Aur{\`e}le and Blazy, Sandrine and Fl{\"u}ckiger, Olivier and Pichardie, David and Vitek, Jan},
  title = {Formally verified speculation and deoptimization in a JIT compiler},
  booktitle = {Conference on Principles of Programming Languages (POPL)},
  year = {2021},
  url = {https://hal.archives-ouvertes.fr/hal-03185848},
  doi = {10.1145/3434327},
  pdf = {https://hal.archives-ouvertes.fr/hal-03185848/file/popl21main-p383-p-e6099d7-48645-final.pdf},
  keywords = {verified compilation ; just-in-time compilation ; CompCert compiler},
  month = jan}

@inproceedings{Barr82a,
  author = {John L. Barron},
  title = {Dialogue and Process Design for Interactive Information Systems using Taxis},
  booktitle = {Proceedings ACM SIGOA},
  pages = {12--20},
  year = {1982},
  address = {Philadelphia},
  month = jun}

@inproceedings{Barr87a,
  author = {Brian M. Barry and John R. Altoft and Dave A. Thomas and Mike Wilson},
  title = {Using Objects To Design and Build Radar {ESM} Systems},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {192--201},
  year = {1987},
  month = dec}

@inproceedings{Barr89a,
  author = {Brian M. Barry},
  title = {Prototyping a Real-Time Embedded System in {Smalltalk}},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {255--266},
  year = {1989},
  month = oct}

@phdthesis{Barr95a,
  author = {Manuel Barrio Sol\'orzano},
  title = {Estudio de Aspectos Din\'amicos en Sistemas Orientados al Objeto},
  year = {1995},
  school = {Universidad de Valladolid, Spain},
  month = sep,
  type = {{Ph.D}. Thesis}}

@unpublished{Barr96a,
  author = {Manuel Barrio Sol\'orzano},
  title = {Explicit Component Representation: Object vs. Process Approach},
  year = {1996},
  month = oct,
  note = {IAM, University of Bern},
  type = {draft manuscript}}

@article{Barr96b,
  author = {Daniel J. Barrett and Lori A. Clarke and Peri L. Tarr and Alexander Wise},
  title = {A Framework for Event-Based Software Integration},
  journal = {IEEE Transactions on Software Engineering},
  volume = {5(4)},
  pages = {378--421},
  year = {1996},
  month = oct}

@inproceedings{Barr96c,
  author = {Kim Barrett and Bob Cassels and Paul Haahr and David A. Moon and Keith Playford and P. Tucker Withington},
  title = {A Monotonic Superclass Linearization for Dylan},
  booktitle = {Proceedings OOPSLA '96, ACM SIGPLAN Notices},
  pages = {69--82},
  year = {1996},
  month = oct}

@book{Barr99a,
  author = {Barron, David},
  title = {{The World of Scripting Languages}},
  publisher = {Wiley},
  year = {1999},
  isbn = {ISBN 0-471-99886-9},
  month = dec}

@inproceedings{Bart06a,
  author = {{Bart Du Bois} and {Jan Verelst} and {Jan Verelst} and {Marijn Temmerman}},
  title = {Does {God} {Class} {Decomposition} {Affect} {Comprehensibility}?},
  booktitle = {Proceedings of the {IASTED} {International} {Conference} on {Software} {Engineering}},
  publisher = {IASTED/ACTA Press},
  year = {2006},
  url = {https://www.researchgate.net/publication/220901508_Does_God_Class_Decomposition_Affect_Comprehensibility},
  abstract = {Continuous alterations and extensions of a software system introduce so called god classes, accumulating ever more responsibilities. As god classes make essential steps in program comprehension harder, it is expected that effective and efficient techniques to resolve them will facilitate future maintenance tasks. This work reports on a laboratory experiment with 63 computer science students, in which we verified whether the decomposition of a god class using well-known refactorings can affect comprehensibility of the relevant code part. Five alternative god class decompositions were derived through application of refactorings, by which the responsibilities of a natural god class were increasingly split into a number of collaborating classes. Our results indicate that the derived class decompositions differed significantly with regard to the ability of students to map attributes in the class hierarchy to descriptions of the problem domain. Moreover, this effect has been found to interact with the institution in which the participants were enrolled, confirming that comprehensibility is a subjective notion for which we have to take into account people's skills and expectations. This work indicates that improving comprehensibility is within the grasp of a single maintainer preparing for future change requests by redistributing the responsibilities of a god class using well-known refactorings.},
  address = {Innsbruck, Austria},
  urldate = {2019-03-22}}

@article{Bart09a,
  author = {Barth, Adam and Jackson, Collin and Mitchell, John C.},
  title = {Securing frame communication in browsers},
  journal = {Commun. ACM},
  volume = {52},
  pages = {83--91},
  publisher = {ACM},
  year = {2009},
  url = {http://doi.acm.org/10.1145/1516046.1516066},
  doi = {10.1145/1516046.1516066},
  acmid = {1516066},
  address = {New York, NY, USA},
  issn = {0001-0782},
  issue_date = {June 2009},
  month = jun,
  number = {6},
  numpages = {9}}

@inproceedings{Bart17a,
  author = {Bartoletti, Massimo and Lande, Stefano and Pompianu, Livio and Bracciali, Andrea},
  title = {A General Framework for Blockchain Analytics},
  booktitle = {1st Workshop on Scalable and Resilient Infrastructures for Distributed Ledgers},
  pages = {7:1--7:6},
  publisher = {ACM},
  year = {2017},
  url = {http://doi.acm.org/10.1145/3152824.3152831},
  doi = {10.1145/3152824.3152831},
  acmid = {3152831},
  address = {New York, NY, USA},
  isbn = {978-1-4503-5173-7},
  keywords = {analytics, bitcoin, blockchain, ethereum},
  location = {Las Vegas, Nevada},
  numpages = {6},
  series = {SERIAL '17}}

@article{Bart20a,
  author = {Bartell, Sean and Dietz, Will and Adve, Vikram S.},
  title = {Guided Linking: Dynamic Linking without the Costs},
  journal = {Proc. ACM Program. Lang.},
  volume = {4},
  publisher = {Association for Computing Machinery},
  year = {2020},
  url = {https://doi.org/10.1145/3428213},
  doi = {10.1145/3428213},
  abstract = {Dynamic linking is extremely common in modern software systems, thanks to the flexibility and space savings it offers. However, this flexibility comes at a cost: it's impossible to perform interprocedural optimizations that involve calls to a dynamic library. The basic problem is that the run-time behavior of the dynamic linker can't be predicted at compile time, so the compiler can make no assumptions about how such calls will behave. This paper introduces guided linking, a technique for optimizing dynamically linked software when some information about the dynamic linker's behavior is known in advance. The developer provides an arbitrary set of programs, libraries, and plugins to our tool, along with constraints that limit the possible dynamic linking behavior of the software. By taking advantage of the constraints, our tool enables any existing optimization to be applied across dynamic linking boundaries. For example, the NoOverride constraint can be applied to a function when the developer knows it will never be overridden with a different definition at run time; guided linking then enables the function to be inlined into its callers in other libraries. We also introduce a novel code size optimization that deduplicates identical functions even across different parts of the software set. By applying guided linking to the Python interpreter and its dynamically loaded modules, supplying the constraint that no other programs or modules will be used, we increase speed by an average of 9%. By applying guided linking to a dynamically linked distribution of Clang and LLVM, and using the constraint that no other software will use the LLVM libraries, we can increase speed by 5% and reduce file size by 13%. If we relax the constraint to allow other software to use the LLVM libraries, we can still increase speed by 5% and reduce file size by 5%. If we use guided linking to combine 11 different versions of the Boost library, using minimal constraints, we can reduce the total library size by 57%.},
  address = {New York, NY, USA},
  articleno = {145},
  issue_date = {November 2020},
  keywords = {LLVM, Link-Time Optimization, Shared Libraries, IR, Code deduplication, Plugins, LTO, Dynamic Linking},
  month = nov,
  number = {OOPSLA},
  numpages = {29}}

@article{Bart86a,
  author = {P.S. Barth},
  title = {An object-oriented approach to graphical interfaces},
  journal = {ACM Transactions on Graphics},
  volume = {5},
  pages = {142--172},
  year = {1986},
  month = apr,
  number = {2}}

@unpublished{Baru89a,
  author = {Sanjoy K. Baruah},
  title = {A Blackboard Architecture to Support Generation of Schematics for Design Automation},
  year = {1989},
  month = jun,
  note = {Proceedings of IFIP WG 10.2 Conf. on CAD Systems Sup. AI Technique},
  type = {Draft}}

@inproceedings{Barz09a,
  author = {Barzilay, O. and Hazzan, O. and Yehudai, A.},
  title = {Characterizing Example Embedding as a software activity},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {5--8},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070011},
  doi = {10.1109/SUITE.2009.5070011},
  abstract = {We use an empirical qualitative software engineering
research to characterize example embedding (EE) as a
software activity - a collection of fine grained
techniques which together assemble an abstract key
notion in software development. This perspective
lays the foundations for building an activity
catalogue, forming new software practices, affecting
the development process and motivating the
development of new software tools.},
  citeulike-article-id = {5403375},
  citeulike-linkout-0 = {http://dx.doi.org/10.1109/SUITE.2009.5070011},
  citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=5070011},
  posted-at = {2009-08-10 11:09:23},
  priority = {0}}

@techreport{Basa06a,
  author = {Wojciech Basalaj and Frank van den Beuken},
  title = {{Correlation Between Coding Standards Compliance and Software Quality}},
  year = {2006},
  institution = {Programming Research}}

@inproceedings{Basa22a,
  author = {Namdeo, Basant and Suman, Ugrasen},
  title = {Cost Model for Database Reengineering from RDBMS to NoSQL},
  booktitle = {2021 4th International Conference on Recent Trends in Computer Science and Technology (ICRTCST)},
  pages = {164-168},
  year = {2022},
  doi = {10.1109/ICRTCST54752.2022.9781890}}

@book{Bash99a,
  author = {Imran Bashir and Amrit L. Goel},
  title = {Testing Object-Oriented Software, Life Cycle Solutions},
  publisher = {Springer-Verlag},
  year = {1999}}

@article{Basi84a,
  author = {Victor R. Basili and Barry T. Perricone},
  title = {Software errors and complexity: an empirical investigation},
  journal = {Communications of the ACM},
  volume = {27},
  pages = {42--52},
  publisher = {ACM Press},
  year = {1984},
  doi = {10.1145/69605.2085},
  abstract = {An analysis of the distributions and relationships
derived from the change data collected during
development of a medium-scale software project
produces some surprising insights into the factors
influencing software development. Among these are
the tradeoffs between modifying an existing module
as opposed to creating a new one, and the
relationship between module size and error
proneness.},
  address = {New York, NY, USA},
  issn_isbn = {ISSN 0001-0782},
  month = jan,
  number = {1}}

@article{Basi87a,
  author = {Victor Basili and Richard Selby},
  title = {Comparing the Effectiveness of Software Testing Strategies},
  journal = {IEEE Transactions on Software Engineering},
  volume = {12},
  pages = {1278--1296},
  year = {1987},
  month = dec,
  number = {12}}

@article{Basi88,
  author = {V. Basili and D. Rombach},
  title = {The TAME project: Towards Improvement-Oriented Software Environments},
  journal = {IEEE Transactions on Software Engineering},
  volume = {14},
  year = {1988},
  month = jun,
  number = {6}}

@article{Basi95a,
  author = {Victor R. Basili and Lionel Briand and Walc\'elio L. Melo},
  title = {A Validation Of Object-Oriented Design Metrics As Quality Indicators},
  journal = {IEEE Transactions on Software Engineering},
  pages = {751--761},
  year = {1995}}

@article{Basi97a,
  author = {Victor Basili},
  title = {Evolving and Packaging Reading Technologies},
  journal = {Journal Systems and Software},
  volume = {38},
  pages = {3--12},
  publisher = {Elsevier Science Inc.},
  year = {1997},
  number = {1}}

@inproceedings{Bass01a,
  author = {Sarita Bassil and Rudolf K. Keller},
  title = {Software Visualization Tools: Survey and Analysis},
  booktitle = {Proceedings IWPC 2001},
  pages = {7--17},
  year = {2001}}

@book{Bass98a,
  author = {Bass, Len and Clements, Paul and Kazman, Rick},
  title = {Software Architecture in Practice},
  publisher = {Addison Wesley},
  year = {1998}}

@inproceedings{Bast99a,
  author = {Remi Bastide and Sy Ousmane and Palanque Philippe},
  title = {Formal Specification and Prototyping of {CORBA} servers},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {474--494},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {We propose to extend the CORBA interface definition
of distributed objects by a behavioral specification
based on high level Petri nets. This technique
allows specifying in an abstract, concise and
precise way the behavior of CORBA servers, including
internal concurrency and synchronization. As the
behavioral specification is fully executable, this
approach also enables early prototyping and testing
of a distributed object system as soon as the
behaviors of individual objects have been defined.
The paper discusses several implementation issues of
the multithreaded, distributed interpreter built for
that purpose. The high level of formality of the
chosen formalism allows for mathematical analysis of
behavioral specifications.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@article{Bate94a,
  author = {Bates, Madeleine},
  title = {Models of natural language understanding},
  journal = {Voice communication between humans and machines - National Academy of Sciences},
  pages = {238--253},
  publisher = {National Academy Press},
  year = {1994},
  address = {Washington, DC, USA},
  isbn = {0-309-04988-1}}

@inproceedings{Bato03a,
  author = {Don Batory and Jacob Neal Sarvela and Axel Rauschmayer},
  title = {Scaling step-wise refinement},
  booktitle = {Proceedings of the 25th international conference on Software engineering},
  pages = {187--197},
  publisher = {IEEE Computer Society},
  year = {2003},
  isbn = {0-7695-1877-X},
  location = {Portland, Oregon}}

@inproceedings{Bato03b,
  author = {Don Batory and Jia Liu and Jacob Neal Sarvela},
  title = {Refinements and multi-dimensional separation of concerns},
  booktitle = {ESEC/FSE-11: Proceedings of the 9th European software engineering conference held jointly with 11th ACM SIGSOFT international symposium on Foundations of software engineering},
  pages = {48--57},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/940071.940079},
  address = {New York, NY, USA},
  isbn = {1-58113-743-5},
  location = {Helsinki, Finland}}

@article{Bato92a,
  author = {Don Batory and Sean O'Malley},
  title = {The Design and Implementation of Hierarchical Software Systems With Reusable Components},
  journal = {ACM Transactions on Software Engineering and Methodology},
  year = {1992},
  month = oct}

@unpublished{Bato94a,
  author = {Don Batory and Sankar Dasari and Bert Geraci and Vivek Singhal and Marty Sirkin and Jeff Thomas},
  title = {Achieving Reuse With Software System Generators},
  year = {1994},
  note = {draft}}

@article{Bato94b,
  author = {Don Batory and Vivek Singhal and Jeff Thomas and Sankar Dasari and Bart Geraci and Marty Sirkin},
  title = {The {Gen}{Voca} Model of Software-System Generators},
  journal = {IEEE Software},
  pages = {89--94},
  year = {1994},
  month = sep}

@inproceedings{Bato95a,
  author = {Don Batory and Lou Coglianese and Mark Goodwin and Steve Shafer},
  title = {Creating Reference Architectures: An Example from Avionics},
  booktitle = {Proceedings of the Symposium on Software Reusability},
  year = {1995},
  url = {http://www.cs.utexas.edu/users/schwartz/},
  address = {Seattle Washington},
  month = apr}

@article{Bato97a,
  author = {Don Batory and Bart J. Geraci},
  title = {{Composition Validation and Subjectivity in {Gen}{Voca} Generators}},
  journal = {{IEEE Transactions on Software Engineering (special issue on Software Reuse)}},
  pages = {62--87},
  year = {1997},
  url = {http://www.cs.utexas.edu/users/schwartz/},
  month = feb}

@book{Batt99a,
  author = {Giuseppe Di Battista and Peter Eades and Roberto Tamassia and Ioannis G. Tollis},
  title = {Algorithms for the Visualization of Graphs},
  publisher = {Prentice Hall},
  year = {1999}}

@inproceedings{Baud01a,
  author = {Fran\c{c}oise Baude and Alexandre Bergel and Denis Caromel and Fabrice Huet and Olivier Nano and Julien Vayssi\`{e}re},
  title = {IC2D: Interactive Control and Debugging of Distribution},
  booktitle = {Proceedings of the Third International Conference, LSSC 2001},
  volume = {2179},
  pages = {193--200},
  publisher = {Springer-Verlag},
  year = {2001},
  url = {http://www-sop.inria.fr/oasis/Julien.Vayssiere/publications/21790193.pdf},
  address = {Sozopol, Bulgaria},
  editor = {S. Margenov and J. Wasiewski and P. Yalamov},
  month = jun,
  series = {LNCS}}

@article{Baud02a,
  author = {Benoit Baudry and Franck Fleurey and Jean-Marc Jezequel and Yves Le Traon},
  title = {Automatic Test Cases Optimization Using a Bacteriological Adaptation Model: Application to .NET Components},
  journal = {ase},
  volume = {00},
  pages = {253},
  publisher = {IEEE Computer Society},
  year = {2002},
  doi = {10.1109/ASE.2002.1115023},
  address = {Los Alamitos, CA, USA},
  issn = {1527-1366}}

@article{Baud05a,
  author = {Benoit Baudry and Franck Fleurey and Jean-Marc J{\'e}z{\'e}quel and Yves Le Traon},
  title = {Automatic Test Case Optimization: A Bacteriologic Algorithm.},
  journal = {IEEE Software},
  volume = {22},
  pages = {76--82},
  year = {2005},
  number = {2}}

@inproceedings{Baud06a,
  author = {Benoit Baudry and Franck Fleurey and Yves Le Traon},
  title = {Improving test suites for efficient fault localization},
  booktitle = {ICSE '06: Proceeding of the 28th international conference on Software engineering},
  pages = {82--91},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1134285.1134299},
  address = {New York, NY, USA},
  isbn = {1-59593-375-1},
  location = {Shanghai, China}}

@article{Baud06b,
  author = {Yves Le Traon and Benoit Baudry and Jean-Marc Jezequel},
  title = {Design by Contract to Improve Software Vigilance},
  journal = {IEEE Transactions on Software Engineering},
  volume = {32},
  pages = {571--586},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/TSE.2006.79},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  month = aug,
  number = {8}}

@article{Baud15a,
  author = {B. Baudry and Simon Allier and M. Rodriguez-Cancio and Monperrus Martin},
  title = {DSpot: Test Amplification for Automatic Assessment of Computational Diversity},
  journal = {ArXiv},
  volume = {abs/1503.05807},
  year = {2015}}

@inproceedings{Baue04a,
  author = {Markus Bauer and Mircea Trifu},
  title = {Architecture-Aware Adaptive Clustering of OO Systems},
  booktitle = {CSMR '04: Proceedings of the Eighth Euromicro Working Conference on Software Maintenance and Reengineering (CSMR'04)},
  pages = {3-14},
  publisher = {IEEE Computer Society},
  year = {2004},
  address = {Washington, DC, USA},
  isbn = {0-7695-2107-X}}

@misc{Baue99a,
  author = {Lujo Bauer and Andrew W. Appel and Edward W. Felten},
  title = {Mechanisms for Secure Modular Programming in {Java}},
  pages = {13},
  year = {1999},
  url = {http://citeseer.nj.nec.com/bauer99mechanisms.html},
  number = {TR-603-99}}

@incollection{Baum00a,
  author = {Dirk B{\"a}umer and Dirk Riehle and Wolf Siberski and Martina Wulf},
  title = {Role Object},
  booktitle = {Pattern Language of Program Design 4},
  pages = {15--32},
  publisher = {Addison Wesley},
  year = {2000},
  editor = {Niel Harrison and Brian Foote and Hans Rohnert}}

@inproceedings{Baum05a,
  author = {Baumann, Andrew and Heiser, Gernot and Appavoo, Jonathan and Da Silva, Dilma and Krieger, Orran and Wisniewski, Robert W and Kerr, Jeremy},
  title = {Providing Dynamic Update in an Operating System.},
  booktitle = {USENIX Annual Technical Conference, General Track},
  pages = {279--291},
  year = {2005}}

@article{Bavi18a,
  author = {Bavishi, Rohan and Pradel, Michael and Sen, Koushik},
  title = {Context2Name: A deep learning-based approach to infer natural variable names from usage contexts},
  journal = {arXiv preprint arXiv:1809.05193},
  year = {2018}}

@inproceedings{Bavo10a,
  author = {Gabriele Bavota and Andrea De Lucia and Andrian Marcus and Rocco Oliveto},
  title = {Software Re-Modularization Based on Structural and Semantic Metrics},
  booktitle = {{W}orking {C}onference on {R}everse {E}ngineering ({{WCRE}}'10)},
  pages = {195-204},
  year = {2010}}

@article{Bavo11a,
  author = {Bavota, Gabriele and De Lucia, Andrea and Oliveto, Rocco},
  title = {Identifying extract class refactoring opportunities using structural and semantic cohesion measures},
  journal = {Journal of Systems and Software},
  volume = {84},
  pages = {397--414},
  publisher = {Elsevier},
  year = {2011},
  number = {3}}

@inproceedings{Bavo12a,
  author = {G. Bavota and A. Qusef and R. Oliveto and A. De Lucia and D. Binkley},
  title = {An empirical analysis of the distribution of unit test smells and their impact on software maintenance},
  booktitle = {International Conference on Software Maintenance ({ICSM})},
  pages = {56-65},
  publisher = {IEEE},
  year = {2012},
  doi = {10.1109/ICSM.2012.6405253},
  issn = {1063-6773},
  month = sep}

@inproceedings{Bavo13a,
  author = {Gabriele Bavota and Gerardo Canfora and Massimiliano D. Penta and Rocco Oliveto and Sebastiano Panichella},
  title = {The Evolution of Project Inter-dependencies in a Software Ecosystem: The Case of {Apache}},
  booktitle = {2013 IEEE International Conference on Software Maintenance},
  pages = {280-289},
  year = {2013},
  doi = {10.1109/ICSM.2013.39},
  issn = {1063-6773},
  month = sep}

@article{Bavo14a,
  author = {Bavota, G. and Oliveto, R. and Gethers, M. and Poshyvanyk, D. and Lucia, A. De},
  title = {Methodbook: {Recommending} {Move} {Method} {Refactorings} via {Relational} {Topic} {Models}},
  journal = {IEEE Transactions on Software Engineering},
  volume = {40},
  pages = {671--694},
  year = {2014},
  doi = {10.1109/TSE.2013.60},
  abstract = {During software maintenance and evolution the internal structure of the software system undergoes continuous changes. These modifications drift the source code away from its original design, thus deteriorating its quality, including cohesion and coupling of classes. Several refactoring methods have been proposed to overcome this problem. In this paper we propose a novel technique to identify Move Method refactoring opportunities and remove the Feature Envy bad smell from source code. Our approach, coined as Methodbook, is based on relational topic models (RTM), a probabilistic technique for representing and modeling topics, documents (in our case methods) and known relationships among these. Methodbook uses RTM to analyze both structural and textual information gleaned from software to better support move method refactoring. We evaluated Methodbook in two case studies. The first study has been executed on six software systems to analyze if the move method operations suggested by Methodbook help to improve the design quality of the systems as captured by quality metrics. The second study has been conducted with eighty developers that evaluated the refactoring recommendations produced by Methodbook. The achieved results indicate that Methodbook provides accurate and meaningful recommendations for move method refactoring operations.},
  issn = {0098-5589},
  keywords = {Couplings, Educational institutions, Electronic mail, empirical studies, Measurement, Methodbook, modifications drift, Object oriented modeling, quality metrics, recommending move method refactorings, Refactoring, relational topic model, relational topic models, software development, software maintenance, software metrics, Software systems, source code, source code (software)},
  month = jul,
  number = {7},
  shorttitle = {Methodbook}}

@article{Bavo15a,
title = {An experimental investigation on the innate relationship between quality and refactoring},
journal = {Journal of Systems and Software},
volume = {107},
pages = {1-14},
year = {2015},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2015.05.024},
url = {https://www.sciencedirect.com/science/article/pii/S0164121215001053},
author = {Gabriele Bavota and Andrea {De Lucia} and Massimiliano {Di Penta} and Rocco Oliveto and Fabio Palomba},
keywords = {Refactoring, Code smells, Empirical study},
abstract = {Previous studies have investigated the reasons behind refactoring operations performed by developers, and proposed methods and tools to recommend refactorings based on quality metric profiles, or on the presence of poor design and implementation choices, i.e., code smells. Nevertheless, the existing literature lacks observations about the relations between metrics/code smells and refactoring activities performed by developers. In other words, the characteristics of code components increasing/decreasing their chances of being object of refactoring operations are still unknown. This paper aims at bridging this gap. Specifically, we mined the evolution history of three Java open source projects to investigate whether refactoring activities occur on code components for which certain indicators—such as quality metrics or the presence of smells as detected by tools—suggest there might be need for refactoring operations. Results indicate that, more often than not, quality metrics do not show a clear relationship with refactoring. In other words, refactoring operations are generally focused on code components for which quality metrics do not suggest there might be need for refactoring operations. Finally, 42% of refactoring operations are performed on code entities affected by code smells. However, only 7% of the performed operations actually remove the code smells from the affected class.}
}

@inproceedings{Bawd99a,
  author = {Alan Bawden},
  title = {Quasiquotation in {Lisp}},
  booktitle = {Partial Evaluation and Semantic-Based Program Manipulation},
  pages = {4--12},
  year = {1999},
  url = {http://repository.readscheme.org/ftp/papers/pepm99/bawden.pdf},
  abstract = {Quasiquotation is the technology commonly used in
Lisp to write program-generating programs. This
paper explains how quasiquotation works, why it
works well, and what its limitations are. A brief
history of quasiquotation is included.}}

@article{Baxt04a,
  author = {Ira D. Baxter and Christopher Pidgeon and Michael Mehlich},
  title = {{DMS}: Program Transformations for Practical Scalable Software Evolution},
  journal = {26th International Conference on Software Engineering},
  pages = {625--634},
  year = {2004}}

@inproceedings{Baxt06a,
  author = {Baxter, Gareth and Frean, Marcus and Noble, James and Rickerby, Mark and Smith, Hayden and Visser, Matt and Melton, Hayden and Tempero, Ewan},
  title = {Understanding the Shape of Java Software},
  booktitle = {21st Conference on Object-oriented Programming Systems, Languages, and Applications},
  pages = {397--412},
  year = {2006}}

@proceedings{Baxt97a,
  title = {Fourth Working Conference on Reverse Engineering},
  publisher = {IEEE},
  year = {1997},
  editor = {Ira Baxter, Alex Quilici, Chris Verhoef}}

@inproceedings{Baxt98a,
  author = {Ira Baxter and Andrew Yahin and Leonardo Moura and Marcelo Sant' Anna and Lorraine Bier},
  title = {Clone Detection Using Abstract Syntax Trees},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM} 1998)},
  pages = {368--377},
  publisher = {IEEE Computer Society, Washington, DC, USA},
  year = {1998},
  doi = {10.1109/ICSM.1998.738528}}

@inproceedings{Bays07a,
  author = {Baysal, Olga and Malton, Andrew J.},
  title = {Correlating Social Interactions to Release History during Software Evolution},
  booktitle = {MSR '07: Proceedings of the Fourth International Workshop on Mining Software Repositories},
  pages = {7},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MSR.2007.4},
  address = {Washington, DC, USA},
  isbn = {0-7695-2950-X}}

@article{Bays13a,
  author = {Baysal, Olga and Holmes, Reid and Godfrey, Michael W.},
  title = {Developer Dashboard: the Need for Qualitative Metrics},
  journal = {IEEE Software},
  year = {2013}}

@article{Beac82a,
  author = {RichardJ. Beach and J.C. Beatty and K.S. Booth and D.A. Plebon and Eugene Fiume},
  title = {The Message is the Medium: Multiprocess Structuring of an Interactive Paint Program},
  journal = {Computer Graphics},
  volume = {16},
  pages = {277--287},
  year = {1982},
  month = jul,
  number = {3}}

@inproceedings{Bear90a,
  author = {Stephen Bear and Phillip Allen and Derek Coleman and Fiona Hayes},
  title = {Graphical Specification of Object-Oriented Systems},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {28--37},
  year = {1990},
  month = oct}

@book{Beau94a,
  author = {Michel Beaudouin-Lafon},
  title = {Object-oriented Languages: Basic principles and programming techniques},
  publisher = {Chapman \& Hall},
  year = {1994},
  isbn = {0-412-55800-9}}

@inproceedings{Beaz96a,
  author = {David M. Beazley},
  title = {{SWIG}: An Easy to Use Tool for Integrating Scripting Languages with {C} and {C}++},
  booktitle = {Proceedings of the 4th USENIX Tcl/Tk Workshop},
  pages = {129--139},
  year = {1996},
  url = {http://www.cs.utah.edu/~beazley/Papers/tcl/newtcl.html}}

@inproceedings{Beaz98a,
  author = {David M. Beazley},
  title = {Interfacing {C/C++} and {Python} with {SWIG}},
  booktitle = {7th International Python Conference, SWIG Tutorial},
  year = {1998}}

@book{Bec04,
  author = {Beck, Kent and Andres, Cynthia},
  title = {Extreme Programming Explained: Embrace Change (2Nd Edition)},
  publisher = {Addison-Wesley Professional},
  year = {2004},
  date-added = {2016-02-28 18:20:52 +0000},
  date-modified = {2016-02-28 18:21:02 +0000},
  isbn = {0321278658}}

@techreport{Bech99a,
  author = {Silvia Bechter},
  title = {Verwaltung von Sun-Workstations},
  year = {1999},
  url = {http://scg.unibe.ch/archive/projects/Bech99a.pdf},
  abstract = {Zur Verwaltung der Server und Workstations, welche
der Systemadministration des IAM unterstehen, wurde
ein Programm entwickelt, welches die System-Daten
soweit als m\"oglich direkt von den Maschinen
abfragt und darstellt. Darstellung und Mutationen
k\"onnen sowohl von der graphischen Oberfl\"ache als
auch von einer Shell aus ausgef\"uhrt werden.
Zus\"atzlich besteht die M\"oglichkeit, diverse
Darstellungen im PostScript-Format auszudrucken. Als
Programmiersprache wurde haupts\"achlich Perl, f\"ur
die Oberfl\"ache Tcl/Tk verwendet.},
  institution = {University of Bern},
  month = oct,
  type = {Informatikprojekt}}

@book{Beck00a,
  author = {Kent Beck},
  title = {Extreme Programming Explained: Embrace Change},
  publisher = {Addison Wesley},
  year = {2000},
  isbn = {201616416}}

@book{Beck01a,
  author = {Kent Beck and Martin Fowler},
  title = {Planning Extreme Programming},
  publisher = {Addison Wesley},
  year = {2001},
  isbn = {0-201-71091-9}}

@misc{Beck01b,
  author = {Kent Beck},
  title = {Manifesto for Agile Software Development},
  key = {AgileManifesto},
  note = {http://agilemanifesto.org}}

@book{Beck02a,
  author = {Kent Beck},
  title = {Test Driven Development: By Example},
  publisher = {Addison-Wesley Longman},
  year = {2002},
  isbn = {978-0321146533}}

@inproceedings{Beck04a,
  author = {Becker, Christian and Handte, Marcus and Schiele, Gregor and Rothermel, Kurt},
  title = {{PCOM - a component system for pervasive computing}},
  booktitle = {PerCom'04: Proceedings of the 2nd Internation Conference on Pervasive Computing and Communications},
  pages = {67--76},
  year = {2004},
  doi = {10.1109/PERCOM.2004.1276846},
  address = {Washington, DC, USA}}

@inproceedings{Beck08a,
  author = {Ralph Becket and Zoltan Somogyi},
  title = {{DCGs} + {Memoing} = {Packrat} Parsing, but is it worth it?},
  booktitle = {Practical Aspects of Declarative Languages},
  volume = {LNCS 4902},
  pages = {182--196},
  publisher = {Springer},
  year = {2008},
  month = jan}

@inproceedings{Beck10a,
  author = {Beck, Fabian and Diehl, Stephan},
  title = {Visual comparison of software architectures},
  booktitle = {Proceedings of the 5th international symposium on Software visualization},
  pages = {183--192},
  year = {2010}}

@inproceedings{Beck13a,
  author = {Beck, Fabian and Moseler, Oliver and Diehl, Stephan and Rey, G{\"u}nter Daniel},
  title = {In situ understanding of performance bottlenecks through visually augmented code},
  booktitle = {2013 21st International Conference on Program Comprehension (ICPC)},
  pages = {63--72},
  year = {2013},
  organization = {IEEE}}

@inproceedings{Beck14a,
  author = {Beck, Fabian},
  title = {Software feathers figurative visualization of software metrics},
  booktitle = {2014 International Conference on Information Visualization Theory and Applications (IVAPP)},
  pages = {5--16},
  year = {2014},
  organization = {IEEE}}

@inproceedings{Beck17a,
  author = {Fabian Beck and Hafiz Ammar Siddiqui and Alexandre Bergel and Daniel Weiskopf},
  title = {Method Execution Reports: Generating Text and Visualization to Describe Program Behavior},
  booktitle = {IEEE Working Conference on Software Visualization (VISSOFT)},
  pages = {1--10},
  year = {2017},
  organization = {IEEE}}

@inproceedings{Beck87a,
  author = {C. Beckstein and G. G{\"o}rz and M. Tielemann},
  title = {{FORK}: {A} System for Object- and Rule-Oriented Programming},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {253--264},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Beck89a,
  author = {Kent Beck and Ward Cunningham},
  title = {A Laboratory for Teaching Object-Oriented Thinking},
  booktitle = {Proceedings OOPSLA '89},
  volume = {24},
  pages = {1--6},
  year = {1989},
  series = {ACM SIGPLAN Notices}}

@article{Beck93b,
  author = {Kent Beck},
  title = {Instance specific behavior: {Digitalk} implementation and the deep meaning of it all},
  journal = {Smalltalk Report},
  volume = {2(7)},
  year = {1993},
  month = may}

@article{Beck93c,
  author = {Kent Beck},
  title = {Instance specific behavior: {How} and {Why}},
  journal = {Smalltalk Report},
  volume = {2(7)},
  year = {1993},
  month = may}

@inproceedings{Beck94a,
  author = {Kent Beck and Ralph Johnson},
  title = {Patterns Generate Architectures},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {139--149},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Beck94b,
  author = {R. Beckers and O. E. Holland and J. L. Deneubourg},
  title = {From Local Actions to Global Tasks: Stigmergy and Collective Robotics},
  booktitle = {Proceedings of the 4th International Workshop on the Synthesis and Simulation of Living Systems (Artificial Life {IV})},
  pages = {181--189},
  publisher = {MIT Press},
  year = {1994},
  address = {Cambridge, MA, USA},
  editor = {Rodney A. Brooks and Pattie Maes},
  isbn = {0-262-52190-3},
  month = jul}

@article{Beck95a,
  author = {Richard A. Becker and Stephen G. Eick and Allan R. Wilks},
  title = {Visualizing Network Data},
  journal = {IEEE Transaction on Visualization and Computer Graphics},
  volume = {1},
  pages = {16--21},
  year = {1995},
  month = mar,
  number = {1}}

@book{Beck97a,
  author = {Kent Beck},
  title = {{Smalltalk} Best Practice Patterns},
  publisher = {Prentice-Hall},
  year = {1997},
  url = {http://stephane.ducasse.free.fr/FreeBooks/BestSmalltalkPractices/Draft-Smalltalk%20Best%20Practice%20Patterns%20Kent%20Beck.pdf},
  isbn = {978-0134769042}}

@article{Beck98a,
  author = {Kent Beck and Erich Gamma},
  title = {Test Infected: Programmers Love Writing Tests},
  journal = {Java Report},
  volume = {3},
  pages = {51--56},
  year = {1998},
  url = {http://members.pingnet.ch/gamma/junit.htm},
  number = {7}}

@book{Beck99a,
  author = {Kent Beck},
  title = {Kent Beck's Guide to Better {Smalltalk}},
  publisher = {Sigs Books},
  year = {1999},
  isbn = {0-251-64437-2}}

@misc{Beck99b,
  author = {Kent Beck and Erich Gamma},
  title = {{JU}nit A Cook's Tour},
  year = {1999},
  url = {http://junit.sourceforge.net/doc/cookstour/cookstour.htm},
  note = {http://junit.sourceforge.net/doc/cookstour/cookstour.htm}}

@inproceedings{Beec88a,
  author = {David Beech},
  title = {Intensional Concepts in an Object Database Model},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {164--175},
  year = {1988},
  month = nov}

@inproceedings{Beec88b,
  author = {D. Beech and B. Mahbod},
  title = {Generalised Version Control in an Object-oriented Database},
  booktitle = {4th IEEE International Conference on Data Engineering},
  pages = {14--22},
  publisher = {IEEE Computer Society Press},
  year = {1988},
  address = {Los Angeles, CA}}

@incollection{Beed00a,
  author = {Mike Beedle and Martine Devos and Yonat Sharon and Ken Schwaber and Jeff Sutherland},
  title = {SCRUM: A Pattern Language for Hyperproductive Software Development},
  booktitle = {Pattern Languages of Program Design 4},
  pages = {637--652},
  publisher = {Addison Wesley},
  year = {2000},
  editor = {Neil Harrison and Brian Foote and Hans Rohnert}}

@article{Beer90a,
  author = {Catriel Beeri},
  title = {A Formal Approach to Object-Oriented Databases},
  journal = {Data and Knowledge Engineering},
  volume = {5},
  pages = {353--382},
  publisher = {North-Holland},
  year = {1990}}

@article{Beer90b,
  author = {Catriel Beeri},
  title = {A Formal Approach to Object-Oriented Databases},
  journal = {Data and Knowledge Engineering},
  volume = {5},
  pages = {353--382},
  publisher = {North-Holland},
  year = {1990},
  abstract = {The paper reports on efforts to develop a formal
framework that contains most features found in
current object oriented database systems. The
framework contains two parts. The first is a
structural object model, including concepts such as
structured objects, identity, and some form of
inheritance. For this model, the paper explains the
distinction between values and abstract objects,
describes a system as a directed graph, and
discusses declarative languages. The second part
deals with higher-order concepts, such as classes
and functions as data, methods, and inheritance.
This part is a sketch, and leaves many issues
unresolved. Throughout the paper, the emphasis is on
logic-oriented modeling.}}

@inproceedings{Bege10a,
  author = {Begel, Andrew and Khoo, Yit Phang and Zimmermann, Thomas},
  title = {Codebook: discovering and exploiting relationships in software repositories},
  booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - Volume 1},
  pages = {125--134},
  publisher = {ACM},
  year = {2010},
  doi = {10.1145/1806799.1806821},
  acmid = {1806821},
  address = {New York, NY, USA},
  annote = {internationalconference},
  isbn = {978-1-60558-719-6},
  keywords = {sde-ecosystems, inter-team coordination, knowledge management, mining software repositories, regular expression, regular language reachability, social networking},
  location = {Cape Town, South Africa},
  numpages = {10},
  peerreview = {yes},
  series = {ICSE '10}}

@inproceedings{Begel09a,
  author = {Andrew Begel and Robert DeLine},
  title = {Codebook: Social networking over code},
  booktitle = {ICSE Companion},
  pages = {263-266},
  year = {2009},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {http://dx.doi.org/10.1109/ICSE-COMPANION.2009.5070997}}

@article{Behn11a,
  author = {Behnel, S. and Bradshaw, R. and Citro, C. and Dalcin, L. and Seljebotn, D. S. and Smith, K.},
  title = {Cython: {The} {Best} of {Both} {Worlds}},
  journal = {Computing in Science Engineering},
  year = {2011},
  url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.835.2689&rep=rep1&type=pdf}}

@misc{Behr08a,
  author = {Shannon Behrens},
  title = {Concurrency and Python},
  year = {2008},
  url = {http://www.drdobbs.com/open-source/concurrency-and-python/206103078},
  howpublished = {\url{http://www.drdobbs.com/open-source/concurrency-and-python/206103078}}}

@book{Beiz90a,
  author = {Boris Beizer},
  title = {Software testing techniques (2nd ed.)},
  publisher = {Van Nostrand Reinhold Co.},
  year = {1990},
  address = {New York, NY, USA},
  isbn = {0-442-20672-0}}

@book{Beiz99a,
  author = {Boris Beizer},
  title = {Black-Box Testing: Techniques for Functional Testing of Software and Systems},
  publisher = {John Wiley \& Sons},
  year = {1999},
  isbn = {0-471-12094-4}}

@article{Bela81a,
  author = {Laszlo. A. Belady and Carlo J. Evangelisti},
  title = {System {Partitioning} and its {Measure}},
  journal = {Journal of Systems and Software},
  volume = {2},
  pages = {23--29},
  year = {1981}}

@article{Belan17,
  author = {Belangour, Abdessamad},
  title = {Towards a Platform Independent Graphical User Interface},
  journal = {American Journal of Software Engineering and Applications},
  volume = {6},
  pages = {5},
  year = {2017},
  url = {http://www.sciencepublishinggroup.com/journal/paperinfo?journalid=137&doi=10.11648/j.ajsea.20170601.12},
  doi = {10.11648/j.ajsea.20170601.12},
  abstract = {In classical software development processes, graphical user interfaces cannot be reused across development platforms. In addition, in {MDA}-based processes, they are integrated only after making the transformation of the {PIM} to the {PSM} since they belong to the target platform and hence have the same problem. They are considered part of the {PSM}, which deprives us from reusing them as we do for the business logic. In this paper, we aim at proposing a common platform independent graphical user interface library that represents the presentation logic in terms of inputs and outputs. This is achievable through proposing a generic metamodel for basic {GUI} controls that focus on getting and presenting data rather than those of ergonomic purposes. This metamodel will enable us to build generic graphical interfaces that can be transformed to any of the market libraries such as {AWT}, {SWING}, {WinForms}, Tkinter. That is why we built metamodels for those libraries and defined mappings between the generic metamodel and those libraries metamodels. Finally, the generic {GUI} library is used to make {PIM}-{GUIs} that are kept with business-{PIMs} and that can together be reused in a way that is independent from any development platform. Final mappings transforms these {PIM}-{GUIs} into platform bound {GUIs} or {PSM}-{GUIs} such those we mentioned earlier or any future graphical library.},
  date = {2017},
  issn = {2327-2473},
  langid = {english},
  number = {1},
  urldate = {2018-07-05}}

@article{Belb07a,
  author = {Nadia Belblidia and Mourad Debbabi},
  title = {A Dynamic Operational Semantics for {JVML}},
  journal = {Journal of Object Technology},
  volume = {6},
  year = {2007},
  ee = {http://www.jot.fm//issues/issue_2007_03/article2},
  number = {3}}

@article{Belh18a,
  author = {Ayoub Belhadji and R\'emi Bardenet and Pierre Chainais},
  title = {A determinantal point process for column subset selection},
  journal = {Journal of Machine Learning Research},
  volume = {21},
  pages = {1--62},
  year = {2020},
  url = {http://jmlr.org/papers/v21/19-080.html},
  number = {197}}

@mastersthesis{Bell02a,
  author = {Stefan Bellon},
  title = {{Vergleich} von {Techniken} zur {Erkennung} duplizierten {Quellcodes}},
  year = {2002},
  school = {Universit\"at Stuttgart},
  url = {http://www.bauhaus-stuttgart.de/bauhaus/papers/DIP-1998.pdf http://www.bauhaus-stuttgart.de/clones/index.html},
  month = sep}

@misc{Bell02b,
  title = {Detection of Software Clones: Tool Comparison Experiment},
  year = {2002},
  key = {Bell02b},
  note = {http://www.bauhaus-stuttgart.de/clones/}}

@article{Bell07a,
  author = {Stefan Bellon and Rainer Koschke and Giulio Antoniol and Jens Krinke and Ettore Merlo},
  title = {Comparison and Evaluation of Clone Detection Tools},
  journal = {IEEE Transactions on Software Engineering},
  volume = {33},
  pages = {577--591},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/TSE.2007.70725},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  number = {9}}

@inproceedings{Bell15a,
  author = {Beller, Moritz and Gousios, Georgios and Panichella, Annibale and Zaidman, Andy},
  title = {{When, How, and Why Developers (Do Not) Test in Their IDEs}},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages = {179--190},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2786805.2786843},
  doi = {10.1145/2786805.2786843},
  acmid = {2786843},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3675-8},
  keywords = {Developer Testing, Field Study, Test-Driven Development (TDD), Testing Effort, Unit Tests},
  location = {Bergamo, Italy},
  numpages = {12},
  series = {ESEC/FSE 2015}}

@inproceedings{Bell15b,
  author = {Beller, Moritz and Gousios, Georgios and Zaidman, Andy},
  title = {How (Much) Do Developers Test?},
  booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 2},
  pages = {559--562},
  publisher = {IEEE Press},
  year = {2015},
  url = {http://dl.acm.org/citation.cfm?id=2819009.2819101},
  acmid = {2819101},
  address = {Piscataway, NJ, USA},
  location = {Florence, Italy},
  numpages = {4},
  series = {ICSE '15}}

@inproceedings{Bell18a,
  author = {Beller, Moritz and Spruit, Niels and Spinellis, Diomidis and Zaidman, Andy},
  title = {On the Dichotomy of Debugging Behavior Among Programmers},
  booktitle = {Proceedings of ICSE 18: 40th International Conference on Software Engineering},
  year = {2018}}

@article{Bell73a,
  author = {Bell, James R.},
  title = {Threaded Code},
  journal = {Commun. ACM},
  volume = {16},
  pages = {370-372},
  publisher = {Association for Computing Machinery},
  year = {1973},
  url = {https://doi.org/10.1145/362248.362270},
  doi = {10.1145/362248.362270},
  abstract = {The concept of "threaded code" is presented as an alternative to machine language code. Hardware and software realizations of it are given. In software it is realized as interpretive code not needing an interpreter. Extensions and optimizations are mentioned.},
  address = {New York, NY, USA},
  issn = {0001-0782},
  keywords = {threaded code, machine code, interpreter, subroutine calls, compiled code, space tradeoff, time tradeoff},
  month = {jun},
  number = {6},
  numpages = {3}}

@techreport{Bell92a,
  author = {Jean L. Bell},
  title = {Reuse and Browsing: Survey of Program Developers},
  pages = {197--220},
  year = {1992},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@misc{Bell92b,
  author = {Gianluigi Bellin and Philip Scott},
  title = {On the $\pi$-Calculus and Linear Logic},
  year = {1992}}

@inproceedings{Bell93a,
  author = {Roberto Bellinzona and Mariagrazia Fugini and Vicki de Mey},
  title = {Reuse of Specifications and Designs in a Development Information System},
  booktitle = {Proceedings IFIP WG 8.1 Working Conference on Information System Development Process},
  pages = {79--96},
  year = {1993},
  misc = {Sept. 1-3},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/ITHACA/ReuseOfSpecsAndDesInADevInfoSys.pdf},
  abstract = {This paper describes the approach to application
specification and design via reuse at the basis of
the Development Information System of the ITHACA
environment. Requirements and detailed design of a
specific application are incrementally composed by
aggregating available reusable components stored in
the Software Information Base repository. The paper
reviews the Development Information System, then
focuses on two tools of the system: RECAST
(Requirements Composition And Specification Tool)
and Visual ADL, which help the developer in
selecting reusable artifacts from the Software Base
and in composing and tailoring them according to the
specific needs of the application. The paper
illustrates the composition approach and describes
how reuse is supported via meta classes
incorporating suggestions for component reuse and
tailoring, and for detailed design.},
  address = {Como, Italy},
  editor = {N. Prakash and C. Rolland and B. Pernici},
  month = sep}

@techreport{Bell94a,
  author = {Roberto Bellinzona and Mariagrazia Fugini and Barbara Pernici},
  title = {An Environment for Specification Reuse},
  year = {1994},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/ITHACA/AnEnvironmentForSpecReuse.pdf},
  abstract = {Reuse in the early development phases of an
application can reduce the effort of producing
specifications and improve their quality. The paper
presents the requirement specification phase for
object-oriented applications under a reuse approach.
Object-oriented specifications are reused by
accessing a repository of reusable components and by
adapting them to the application requirements. A
model for specifications reuse based on the
composition approach is presented; the model is also
used to encode development knowledge guiding in the
specification activity. Specification reuse is
supported by a tool to select reusable components
and to guide the developer in tailoring the
components to the needs of a specific application.
The RECAST tool (REquirement Composition And
Specification Tool) presented in the paper has
functionalities for retrieving reusable components
from a repository and functionalities driving the
composition and tailoring activities, on the basis
of knowledge about the development process.},
  institution = {Politecnico di Milano},
  month = mar,
  note = {submitted for publication},
  number = {92\_082},
  type = {Internal Report}}

@book{Bell97a,
  author = {David Bellin and Susan Suchman Simone},
  title = {The {CRC} Card Book},
  publisher = {Addison Wesley},
  year = {1997},
  isbn = {0-201-89535-8}}

@phdthesis{Bell97b,
  author = {Luc Bellissard},
  title = {Construction et Configuration {D}'Application Reparties},
  year = {1997},
  school = {Institut National Polytechnique de Grenoble},
  type = {{Ph.D}. Thesis}}

@inproceedings{Bell97c,
  author = {Berndt Bellay and Harald Gall},
  title = {A Comparison of Four Reverse Engineering Tools},
  booktitle = {Proceedings of {WCRE} (Working Conference on Reverse Engineering)},
  pages = {2--11},
  publisher = {IEEE Computer Society Press: Los Alamitos CA},
  year = {1997}}

@article{Bell98a,
  author = {Berndt Bellay and Harald Gall},
  title = {An Evaluation of Reverse Engineering Tools},
  journal = {Journal of Software Maintenance: Research and Practice},
  publisher = {Wiley and Sons},
  year = {1998}}

@inproceedings{Belle14a,
  author = {Beller, Moritz and Bacchelli, Alberto and Zaidman, Andy and Juergens, Elmar},
  title = {Modern Code Reviews in Open-source Projects: Which Problems Do They Fix?},
  booktitle = {Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages = {202--211},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2597073.2597082},
  doi = {10.1145/2597073.2597082},
  acmid = {2597082},
  address = {New York, NY, USA},
  isbn = {978-1-4503-2863-0},
  keywords = {Code Review, Defects, Open Source Software},
  location = {Hyderabad, India},
  numpages = {10},
  series = {MSR 2014}}

@inproceedings{Belli97a,
  author = {F. Belli and R. Crisan},
  title = {Empirical performance analysis of computer-supported code-reviews},
  booktitle = {Proceedings of the 8th International Symposium on Software Reliability Engineering},
  pages = {245--255},
  publisher = {IEEE Computer Society},
  year = {1997}}

@article{Belt17a,
  author = {Beltramelli, Tony},
  title = {pix2code: Generating Code from a Graphical User Interface Screenshot},
  journal = {arXiv preprint arXiv:1705.07962},
  year = {2017}}

@book{Ben82a,
  author = {Ben-Ari},
  title = {Principles of Concurrent Programming},
  publisher = {Prentice-Hall},
  year = {1982}}

@book{Ben95a,
  author = {Ron Ben-Natan},
  title = {Corba},
  publisher = {McGraw-Hill},
  year = {1995},
  isbn = {0-07-005427-4}}

@book{BenF08a,
  author = {Ben Fry},
  title = {Visualizing Data},
  publisher = {O'REILLY},
  year = {2008}}

@inproceedings{Bena05a,
  author = {Luis Daniel Benavides Navarro and Mario S\"udholt and Wim Vanderperren and Bruno De Fraine and Davy Suv\'{e}e},
  title = {Explicitly distributed {AOP} using {AWED}},
  booktitle = {Proceedings of the 5th Int. ACM Conf. on Aspect-Oriented Software Development (AOSD'06)},
  publisher = {ACM Press},
  year = {2006},
  month = mar}

@inproceedings{Bena19a,
  author = {Benabidallah, Raounak and Sadou, Salah and Borne, Isabelle},
  title = {SecureQualitas: A Security Corpus of Real Java Applications},
  booktitle = {2019 International Conference on Cyber Security for Emerging Technologies (CSET)},
  pages = {1-6},
  publisher = {IEEE},
  year = {2019},
  month = oct}

@misc{Beng00a,
  author = {PerOlof Bengtsson and Nico Lassing and Jan Bosch and Hans van Vliet},
  title = {Analyzing Software Architectures for Modifiability},
  year = {2000}}

@misc{Benjie,
  title = {100 {Dollar} {Laptop}},
  url = {http://en.wikipedia.org/wiki/\$100\_laptop},
  key = {Benjie},
  note = {http://en.wikipedia.org/wiki/\$100\_laptop}}

@inproceedings{Benk92a,
  author = {Benkner, S. and Chapman, B.M. and Zima, H.P.},
  title = {Vienna Fortran 90},
  booktitle = {Proceedings Scalable High Performance Computing Conference SHPCC-92},
  pages = {51-59},
  year = {1992},
  doi = {10.1109/SHPCC.1992.232688}}

@inproceedings{Benn00a,
  author = {Keith H. Bennett and Vaclav T. Rajlich},
  title = {Software maintenance and evolution: a roadmap},
  booktitle = {ICSE '00: Proceedings of the Conference on The Future of Software Engineering},
  pages = {73--87},
  publisher = {ACM Press},
  year = {2000},
  doi = {10.1145/336512.336534},
  address = {New York, NY, USA},
  isbn = {1-58113-253-0},
  location = {Limerick, Ireland}}

@article{Benn08a,
  author = {C. Bennett and D. Myers and M.-A. Storey and D. M. German and D. Ouellet and M/ Salois and P. Charland},
  title = {A survey and evaluation of tool features for understanding reverse-engineered sequence diagrams},
  journal = {Journal of Software Maintenance and Evolution},
  volume = {20},
  pages = {291--315},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2008},
  doi = {10.1002/smr.v20:4},
  address = {New York, NY, USA},
  number = {4}}

@techreport{Benn82a,
  author = {John K. Bennett},
  title = {A Comparison of Four Object-Based Systems},
  year = {1982},
  institution = {University of Washington},
  type = {TR82-11-03}}

@inproceedings{Benn87a,
  author = {Bennett, John K.},
  title = {The Design and Implementation of Distributed {Smalltalk}},
  booktitle = {Conference proceedings on Object-oriented programming systems, languages and applications},
  pages = {318--330},
  publisher = {ACM},
  year = {1987},
  url = {http://doi.acm.org/10.1145/38765.38836},
  doi = {10.1145/38765.38836},
  acmid = {38836},
  address = {New York, NY, USA},
  isbn = {0-89791-247-0},
  location = {Orlando, Florida, United States},
  numpages = {13},
  series = {OOPSLA '87}}

@article{Benn90a,
  author = {John K. Bennett},
  title = {Experience with Distributed {Smalltalk}},
  journal = {Software --- Practice and Experience},
  volume = {20},
  pages = {157--180},
  year = {1990},
  number = {2}}

@article{Benn95a,
  author = {Bennett, Keith},
  title = {Legacy systems: coping with stress},
  journal = {Software, IEEE},
  volume = {12},
  pages = {19--23},
  publisher = {IEEE},
  year = {1995},
  number = {1}}

@book{Benn97a,
  author = {Warren Bennis and Patricia Ward Biederman},
  title = {Organizing Genius --- The Secrets of Creative Collaboration},
  publisher = {Perseus Books},
  year = {1997},
  isbn = {0-201-33989-7}}

@book{Benn99a,
  author = {Simon Bennett and Steve McRobb and Ray Farmer},
  title = {Object-Oriented System Analysis and Design using UML},
  publisher = {McGraw Hill},
  year = {1999}}

@inproceedings{Bens88a,
  author = {Edward H. Bensley and Thomas J. Brando and Myra Jean Prelle},
  title = {An Execution Model for Distributed Object-Oriented Computation},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {316--322},
  year = {1988},
  month = nov}

@inproceedings{Bens91a,
  author = {Dan Benson and Greg Zick},
  title = {Symbolic and Spatial Database for Structural Biology},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {329--339},
  year = {1991},
  month = nov}

@article{Bent86a,
  author = {Jon Louis Bentley},
  title = {Programming Pearls: Little Languages},
  journal = {Communications of the ACM},
  volume = {29},
  pages = {711--721},
  year = {1986},
  abstract = {Discusses the design of {\em ad hoc} languages for
specialist tasks, such as {\GRAP}.},
  month = aug,
  number = {8}}

@inproceedings{Bera19a,
  title={Lazy pointer update for low heap compaction pause times},
  author={B{\'e}ra, Cl{\'e}ment and Miranda, Eliot and Boix, Elisa Gonzalez},
  booktitle={Proceedings of the 15th ACM SIGPLAN International Symposium on Dynamic Languages},
  pages={15--27},
  year={2019}
}

@book{Bera93a,
  author = {Edward V. Berard},
  title = {Essays On Object-Oriented Software Engineering},
  volume = {1},
  publisher = {Prentice-Hall},
  year = {1993}}

@inproceedings{Berg00a,
  author = {Federico Bergenti and Agostino Poggi},
  title = {Improving {UML} Designs Using Automatic Design Pattern Detection},
  booktitle = {12th International Conference on Software Engineering and Knowledge Engineering (SEKE)},
  pages = {336--343},
  year = {2000}}

@phdthesis{Berg05f,
  author = {Alexandre Bergel},
  title = {Classboxes --- Controlling Visibility of Class Extensions},
  year = {2005},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/bergel-phd.pdf},
  abstract = {Unanticipated changes to complex software systems
can introduce anomalies such as duplicated code,
suboptimal inheritance relationships and a
proliferation of run-time downcasts. Refactoring to
eliminate these anomalies may not be an option, at
least in certain stages of software evolution. A
class extension is a method that is defined in a
module, but whose class is defined elsewhere. Class
extensions offer a convenient way to incrementally
modify existing classes when subclassing is
inappropriate. Unfortunately existing approaches
suffer from various limitations. Either class
extensions have a global impact, with possibly
negative effects for unexpected clients, or they
have a purely local impact, with negative results
for collaborating clients. Furthermore, conflicting
class extensions are either disallowed, or resolved
by linearization, with subsequent negative effects.
To solve these problems we present classboxes, a
module system for object-oriented languages that
provides for behavior refinement (i.e. method
addition and replacement). Moreover, the changes
made by a classbox are only visible to that classbox
(or classboxes that import it), a feature we call
local rebinding. We present an experimental
validation in which we apply the classbox model to
both dynamically and statically typed programming
languages. We used classboxes to refactor part of
the {Java} Swing library, and we show two extensions
built on top of classboxes which are (i) runtime
adaptation with dynamically classboxes and (ii)
expressing crosscutting changes.},
  cvs = {ABergelPhD},
  month = nov}

@inproceedings{Berg06a,
  author = {Alexandre Bergel},
  title = {{FacetS}: First Class Entities for an Open Dynamic {AOP} Language},
  booktitle = {Proceedings of the Open and Dynamic Aspect Languages Workshop},
  year = {2006},
  url = {http://bergel.eu/download/papers/Berg06a-FacetS.pdf},
  abstract = {This paper describes a new aspect language construct
for Squeak, named FACETS. Aspects are completely
integrated within the Squeak programming language
and its environment. The innovations of FACETS are:
(i) traits can be part of the pointcut definition,
(ii) two scoping policies are available to share
state among aspects and (iii) aspects are
prototype-based.},
  month = mar}

@inproceedings{Berg06c,
  author = {Alexandre Bergel and Robert Hirschfeld and Siobh\`{a}n Clarke and Pascal Costanza},
  title = {Aspectboxes --- Controlling the Visibility of Aspects},
  booktitle = {In Proceedings of the International Conference on Software and Data Technologies (ICSOFT 2006)},
  pages = {29--38},
  year = {2006},
  misc = {Acceptance rate: 12\%},
  url = {http://www.cs.tcd.ie/Alexandre.Bergel/download/papers/Berg06c-Aspectboxes.pdf},
  abstract = {Aspect composition is still a hot research topic
where there is no consensus on how to express where
and when aspects have to be composed into a base
system. In this paper we present a modular construct
for aspects, called aspectboxes, that enables
aspects application to be limited to a well defined
scope. An aspectbox encapsulates class and aspect
definitions. Classes can be imported into an
aspectbox defining a base system to which aspects
may then be applied. Refinements and instrumentation
defined by an aspect are visible only within this
particular aspectbox leaving other parts of the
system unaffected.},
  editor = {Joaquim Filipe and Boris Shiskov and Markus Helfert},
  isbn = {972-8865-69-4},
  month = sep}

@inproceedings{Berg06f,
  author = {Alexandre Bergel},
  title = {Controlling the Visibility of Changes in Java with Classboxes},
  booktitle = {Proceedings of the Objekty Conference 2006},
  year = {2006},
  address = {Prague, Czech Republic},
  editor = {Ji\u{r}\'{i} Bro\u{z}ek and Vojt\u{e}ch Merunka},
  isbn = {80-213-1568-7},
  month = nov,
  note = {Short paper, invited keynote speaker}}

@inproceedings{Berg07d,
  author = {Jan Vran\`{y} and Alexandre Bergel},
  title = {The Debuggable Interpreter Design Pattern},
  booktitle = {In Proceedings of the International Conference on Software and Data Technologies (ICSOFT 2007)},
  year = {2007},
  misc = {Acceptance rate: 12\%},
  url = {http://www.bergel.eu/download/papers/Berg07d-debugger.pdf},
  abstract = {The use of Interpreter and Visitor design patterns
has been widely adopted to implement programming
language interpreters due to their expressive and
simple design. However, no general approach to
conceive a debugger is commonly adopted. This paper
presents the debuggable interpreter design pattern
as a general approach to extend a language
interpreter with debugging facilities such as
step-over and step-into. Moreover, it enables
multiple debuggers coexisting and extends the
Interpreter and Visitor design patterns with a few
hooks and a debugging service. SmallJS, an
interpreter for Javascript-like language, serves as
an illustration.},
  editor = {Joaquim Filipe, Boris Shiskov, Markus Helfert},
  month = jul}

@article{Berg07f,
  author = {Alexandre Bergel},
  title = {Classboxes --- Controlling Visibility of Class Extensions},
  journal = {it- Information Technology},
  volume = {49},
  publisher = {Oldenbourg Wissenschaftsverlag},
  year = {2007},
  url = {http://bergel.eu/download/papers/Berg07fITclassboxes.pdf},
  doi = {10.1524/itit.2007.49.4.260},
  month = jul,
  number = {4}}

@inproceedings{Berg07g,
  author = {Alexandre Bergel and Claus Lewerentz and Liam O'Brien},
  title = {Classboxes: Supporting Unanticipated Variation Points in the Source Code},
  booktitle = {Proceedings of the 2nd Workshop on Aspect-Oriented Product Line Engineering (AOPLE)},
  year = {2007},
  url = {http://bergel.eu/download/papers/Berg07g-classboxes.pdf},
  month = oct}

@inproceedings{Berg09b,
  author = {Alexandre Bergel},
  title = {Contr\^oler la visibilit\'e des aspects avec Aspectboxes},
  booktitle = {Proceedings of LMO'09},
  publisher = {C\'epadu\`es},
  year = {2009},
  abstract = {No abstract},
  address = {Toulouse, France},
  inriareport = {2009},
  x-country = {FR}}

@misc{Berg09d,
  author = {Sebastian Bergmann},
  title = {Fixture Reuse in {PHPU}nit 3.4},
  url = {http://sebastian-bergmann.de/archives/848-Fixture-Reuse-in-PHPUnit-3.4.html},
  howpublished = {http://sebastian-bergmann.de/archives/848-Fixture-Reuse-in-PHPUnit-3.4.html, archived at http://www.webcitation.org/5jbbodK6y}}

@inproceedings{Berg09e,
  author = {Alexandre Bergel and Lorenzo Bettini},
  title = {Reverse Generics -- Parametrization After the Fact},
  booktitle = {Proceedings of the 4th International Conference on Software and Data Technologies (ICSOFT'09)},
  pages = {39--46},
  year = {2009},
  month = jul}

@article{Berg09f,
  author = {Alexandre Bergel},
  title = {FlowTalk: Language Support for Long-Latency Operations in Embedded Devices},
  journal = {IEEE Transaction on Software Engineering},
  year = {2009},
  url = {http://bergel.eu/download/papers/Berg09cFlowtalk.pdf},
  note = {To appear}}

@inproceedings{Berg10a,
  author = {S\'ebastien Mosser and Alexandre Bergel and Mireille Blay-Fornarino},
  title = {Visualizing and Assessing a Compositional Approach of Business Process Design},
  booktitle = {Proceedings of 9th International Conference on Software Composition (SC'10)},
  publisher = {LNCS Springer Verlag},
  year = {2010},
  month = jul,
  note = {to appear}}

@inproceedings{Berg10b,
  author = {Julio Ariel Hurtado Alegr\'{\i}a and Alejandro Lagos and Alexandre Bergel and Mar\'ia Cecilia Bastarrica},
  title = {Software Process Model Blueprints},
  booktitle = {Proceedings of the International Conferences on Software Processes (ICSP'10)},
  publisher = {LNCS Springer Verlag},
  year = {2010},
  month = jul,
  note = {to appear}}

@inproceedings{Berg10c,
  author = {Bergel, Alexandre and Robbes, Romain and Binder, Walter},
  title = {Visualizing Dynamic Metrics with Profiling Blueprints},
  booktitle = {Objects, Models, Components, Patterns (TOOLS EUROPE'10)},
  volume = {6141},
  pages = {291-309},
  publisher = {Springer Berlin / Heidelberg},
  year = {2010},
  doi = {10.1007/978-3-642-13953-6_16},
  editor = {Vitek, Jan},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Berg10d,
  author = {Alexandre Bergel and Felipe Ba{\~n}ados and Romain Robbes and David R{\"o}thlisberger},
  title = {Spy: A Flexible Code Profiling Framework},
  booktitle = {Smalltalks 2010},
  year = {2010},
  abstract = {Code profiling is an essential activity to increase
				software quality. It is commonly employed in a wide
				variety of tasks, such as supporting program
				comprehension, determining execution bottlenecks,
				and assessing code coverage by unit tests. Spy is an
				innovative framework to easily build profilers and
				visualize profiling information. The profiling
				information is obtained by inserting dedicated code
				before or after method execution. The gathered
				profiling information is structured in line with the
				application structure in terms of packages, classes,
				and methods. Spy has been instantiated on four
				occasions so far. We created profilers dedicated to
				test coverage, time execution, type feedback, and
				profiling evolution across version. We also
				integrated Spy in the Pharo IDE. Spy has been
				implemented in the Pharo Smalltalk programming
				language and is available under the MIT license.},
  annote = {internationalworkshop},
  location = {Concepcion del Uruguay, Entre Rios, Argentina}}

@inproceedings{Berg10e,
  author = {Alexandre Bergel and Mariano Abel Coca and Gabriela Arevalo and Dale Henrichs and Jannik Laval},
  title = {Memory Profiling Blueprint},
  booktitle = {In Proceedings of the 4th Argentinian Smalltalk Conference 2010 (Smalltalks'10)},
  year = {2010},
  annote = {internationalworkshop},
  keyword = {moose-pub}}

@inproceedings{Berg11d,
  author = {Alexandre Bergel},
  title = {Counting Messages as a Proxy for Average Execution Time in Pharo},
  booktitle = {Proceedings of the 25th European Conference on Object-Oriented Programming (ECOOP'11)},
  pages = {533--557},
  publisher = {Springer-Verlag},
  year = {2011},
  url = {http://bergel.eu/download/papers/Berg11c-compteur.pdf},
  month = jul,
  series = {LNCS}}

@article{Berg11h,
  author = {Alexandre Bergel and Felipe Banados and Romain Robbes and David R\"othlisberger},
  title = {Spy: A flexible Code Profiling Framework},
  journal = {Journal of Computer Languages, Systems and Structures},
  volume = {38},
  year = {2011},
  url = {http://bergel.eu/download/papers/Berg10f-Spy.pdf},
  doi = {10.1016/j.cl.2011.10.002},
  month = dec,
  number = {1}}

@article{Berg12a,
  author = {Bergmann, G{\'a}bor and R{\'a}th, Istv{\'a}n and Varr{\'o}, Gergely and Varr{\'o}, D{\'a}niel},
  title = {Change-driven model transformations: Change (in) the rule to rule the change},
  journal = {Software \& Systems Modeling},
  volume = {11},
  pages = {431--461},
  publisher = {Springer},
  year = {2012}}

@article{Berg12c,
  author = {Alexandre Bergel and Vanessa Pe~na},
  title = {Increasing test coverage with Hapao},
  journal = {Science of Computer Programming},
  volume = {79},
  pages = {86--100},
  year = {2012},
  doi = {10.1016/j.scico.2012.04.006},
  keywords = {hapao visualization},
  number = {1}}

@article{Berg12f,
  author = {Alexandre Bergel and Felipe Ba~nados and Romain Robbes and Walter Binder},
  title = {Execution profiling blueprints},
  journal = {Software: Practice and Experience},
  volume = {42},
  pages = {1165--1192},
  publisher = {John Wiley & Sons, Ltd},
  year = {2012},
  doi = {10.1002/spe.1120},
  issn = {1097-024X},
  number = {9}}

@article{Berg13c,
  author = {Julio A. Hurtado Alegr\'ia and Mar\'a Cecilia Bastarrica and Alexandre Bergel},
  title = {Avispa: a tool for analyzing software process models},
  journal = {Journal of Software: Evolution and Process},
  publisher = {Wiley},
  year = {2013},
  doi = {10.1002/smr.1578}}

@inproceedings{Berg13d,
  author = {Juan Pablo Sandoval Alcocer and Alexandre Bergel},
  title = {Tracking Performance Failures with Rizel},
  booktitle = {Proceedings of the 13th International Workshop on Principles on Software Evolution},
  year = {2013}}

@inproceedings{Berg16b,
  author = {Alexandre Bergel},
  title = {Power and Energy Code Profiling in Pharo},
  booktitle = {Proceedings of the International Workshop on Smalltalk Technologies (IWST'16)},
  year = {2016}}

@book{Berg16c,
  author = {Alexandre Bergel},
  title = {Agile Visualization},
  publisher = {LULU Press},
  year = {2016},
  url = {http://agilevisualization.com/},
  isbn = {9781365314094}}

@article{Berg18a,
  author = {Alexandre Bergel and Alejandro Infante and Sergio Maass and Juan Pablo Sandoval Alcocer},
  title = {Reducing resource consumption of expandable collections: The Pharo case},
  journal = {Science of Computer Programming},
  volume = {161},
  pages = {34--56},
  year = {2018},
  url = {http://www.sciencedirect.com/science/article/pii/S0167642317302940},
  doi = {10.1016/j.scico.2017.12.009},
  issn = {0167-6423},
  keywords = {Collection, Pharo, Lua, Profiling, Experiment},
  note = {Advances in Dynamic Languages}}

@inproceedings{Berg18b,
  author = {Bergel, Alexandre and Melatagia, Paulin and Stinckwich, Serge},
  title = {An API and visual environment to use neural network to reason about source code},
  booktitle = {Conference Companion of the 2nd International Conference on Art, Science, and Engineering of Programming},
  pages = {117--120},
  year = {2018}}

@inproceedings{Berg19a,
  author = {Bergel, Alexandre and Bhatele, Abhinav and Boehme, David and Gralka, Patrick and Griffin, Kevin and Hermanns, Marc-Andr{\'e} and Okanovi{\'{c}}, Du{\v{s}}an and Pearce, Olga and Vierjahn, Tom},
  title = {Visual Analytics Challenges in Analyzing Calling Context Trees},
  booktitle = {Programming and Performance Visualization Tools},
  pages = {233--249},
  publisher = {Springer International Publishing},
  year = {2019},
  abstract = {Performance analysis is an integral part of developing and optimizing parallel applications for high performance computing (HPC) platforms. Hierarchical data from different sources is typically available to identify performance issues or anomalies. Some hierarchical data such as the calling context can be very large in terms of breadth and depth of the hierarchy. Classic tree visualizations quickly reach their limits in analyzing such hierarchies with the abundance of information to display. In this position paper, we identify the challenges commonly faced by the HPC community in visualizing hierarchical performance data, with a focus on calling context trees. Furthermore, we motivate and lay out the bases of a visualization that addresses some of these challenges.},
  address = {Cham},
  editor = {Bhatele, Abhinav and Boehme, David and Levine, Joshua A. and Malony, Allen D. and Schulz, Martin},
  isbn = {978-3-030-17872-7}}

@book{Berg20a,
  author = {Bergel, Alexandre},
  title = {Agile Artificial Intelligence in Pharo},
  publisher = {Apress},
  year = {2020}}

@inproceedings{Berg21a,
  title={Featurevista: Interactive feature visualization},
  author={Bergel, Alexandre and Ghzouli, Razan and Berger, Thorsten and Chaudron, Michel RV},
  booktitle={Proceedings of the 25th ACM International Systems and Software Product Line Conference-Volume A},
  pages={196--201},
  year={2021}}

@article{Berg84a,
  author = {Jan A. Bergstra and J.W. Klop},
  title = {Process Algebra for Synchronous Communication},
  journal = {Information and Control},
  volume = {60},
  pages = {109--137},
  year = {1984}}

@inproceedings{Berg84b,
  author = {Jan A. Bergstra and J.W. Klop},
  title = {The Algebra of Recursively Defined Processes and the Algebra of Regular Processes},
  booktitle = {Proceedings ICALP '84},
  volume = {172},
  pages = {82--95},
  publisher = {Springer-Verlag},
  year = {1984},
  address = {Antwerp},
  editor = {J. Paredaens},
  series = {LNCS}}

@inproceedings{Berg84c,
  author = {H.L. Berghel and D.L. Sallach},
  title = {Measurements of Program Similarity in Identical Task Environments},
  booktitle = {SIPLAN-Notices},
  volume = {9/8},
  pages = {65--76},
  year = {1984}}

@article{Berg85a,
  author = {Jan A. Bergstra and J.W. Klop},
  title = {Algebra of Communicating Processes with Abstraction},
  journal = {Theoretical Computer Science},
  volume = {37},
  pages = {77--121},
  year = {1985},
  month = may,
  number = {1}}

@inproceedings{Berg91a,
  author = {Paul L. Bergstein and Karl J. Lieberherr},
  title = {Incremental Class Dictionary Learning and Optimization},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {377--396},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Berg91b,
  author = {Paul L. Bergstein},
  title = {Object-Preserving Class Transformations},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {299--313},
  year = {1991},
  month = nov}

@incollection{Berg93a,
  author = {Paul L. Bergstein and Walter L. H{\"u}rsch},
  title = {Maintaining Behavioral Consistency during Schema Evolution},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {176--193},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {We examine the problem of how to ensure behavioral
consistency of an object-oriented system after its
schema has been updated. The problem is viewed from
the perspective of both the strongly typed and the
untyped language model. Solutions are compared in
both models using C++ and CLOS as examples.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@article{Berg93b,
  author = {Lodewijk Bergmans and Mehmet Aksit and Ken Wakita},
  title = {An Object-Oriented Model for Extensible Concurrent Systems: The Composition-Filters Approach},
  journal = {IEEE Transactions on Parallel and Distributed Systems},
  year = {1993}}

@phdthesis{Berg94a,
  author = {Lodewijk Bergmans},
  title = {Composing Concurrent Objects},
  year = {1994},
  school = {University of Twente},
  url = {ftp://ftp.cs.utwente.nl/pub/doc/TRESE/bergmans.phd.tar}}

@phdthesis{Berg94b,
  author = {Paul Bergstein},
  title = {Managing the Evolution of Object-Oriented Systems},
  year = {1994},
  school = {Northeastern University, MA},
  url = {http://www.cs.neu/home/lieber/theses/bergstein/thesis.ps},
  type = {{Ph.D}. Thesis}}

@inproceedings{Berg96a,
  author = {J.A. Bergstra and P. Klint},
  title = {The ToolBus Coordination Architecture},
  booktitle = {Proceedings of COORDINATION '96},
  volume = {1061},
  pages = {75--88},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Cesena, Italy},
  editor = {P. Ciancarini and Chris Hankin},
  series = {LNCS}}

@book{Berg96b,
  author = {Thomas J. Bergin and Richard G. Gibson},
  title = {History of Programming Languages},
  publisher = {ACM Press},
  year = {1996},
  isbn = {0-201-89502-1}}

@techreport{Berg97a,
  author = {Klaus Bergner and Andreas Rausch and Marc Sihling},
  title = {Using {UML} for Modeling a Distributed {Java} Application ({AFA} info)},
  year = {1997},
  url = {http://www.leo.org/pub/comp/doc/techreports/tum/informatik/report/1997/TUM-I9735.ps.gz},
  institution = {TUM},
  number = {I9735}}

@techreport{Berg99a,
  author = {John Bergey and Dennis Smith and Scott Tilley and Nelson Weiderman and Steven Woods},
  title = {Why Reengineering Projects Fail},
  year = {1999},
  url = {http://www.sei.cmu.edu/publications/documents/99.reports/99tr010/99tr010abstract.html http://www.sei.cmu.edu/pub/documents/99.reports/pdf/99tr010.pdf},
  institution = {Carnegie Mellon University, Software Engineering Institute},
  month = apr,
  type = {{CMU/SEI-99-TR-010}}}

@inproceedings{Bergm13a,
  author = {Bergmayr, Alexander and Bruneliere, Hugo and Izquierdo, Javier Luis Canovas and Gorronogoitia, Jesus and Kousiouris, George and Kyriazis, Dimosthenis and Langer, Philip and Menychtas, Andreas and Orue-Echevarria, Leire and Pezuela, Clara and others},
  title = {Migrating legacy software to the cloud with ARTIST},
  booktitle = {2013 17th European Conference on Software Maintenance and Reengineering},
  pages = {465--468},
  year = {2013},
  organization = {IEEE}}

@phdthesis{Beri97a,
  author = {Dorothea Beringer},
  title = {Modelling Global Behaviour with Scenarios in Object-Oriented Analysis},
  year = {1997},
  school = {EPFL, Lausanne},
  number = {No. 1655},
  type = {{Ph.D}. Thesis}}

@book{Berl06a,
  author = {Berlin, Daniel and Rooney, Garrett},
  title = {Practical {S}ubversion, second edition},
  publisher = {Apress},
  year = {2006}}

@inproceedings{Berl90a,
  author = {Lucy M. Berlin},
  title = {When Objects Collide: Experiences with Reusing Multiple Class Hierarchies},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {181--193},
  year = {1990},
  month = oct}

@inproceedings{Berl90b,
  author = {Brian Berliner},
  title = {{CVS II}: Parallelizing Software Development},
  booktitle = {Proceedings of the USENIX Conference (The Advanced Computing Systems Professional and Technical Association)},
  pages = {22--26},
  year = {1990}}

@inproceedings{Berl93a,
  author = {Berlage, Thomas and Genau, Andreas},
  title = {A framework for shared applications with a replicated architecture},
  booktitle = {Proceedings of User Interface Software and Technology Symposium},
  pages = {249--257},
  publisher = {ACM},
  year = {1993},
  doi = {/10.1145/168642.168668},
  address = {New York, NY, USA},
  isbn = {0-89791-628-X},
  location = {Atlanta, Georgia, United States},
  series = {UIST'93}}

@article{Bern01a,
  author = {Berners-Lee and T. Hendler and J. Lassila},
  title = {The Semantic Web},
  journal = {Scientific American},
  year = {2001},
  month = may}

@inproceedings{Bern05a,
  author = {Berndl, M. and Vitale, B. and Zaleski, M. and Brown, A.D.},
  title = {Context threading: a flexible and efficient dispatch technique for virtual machine interpreters},
  booktitle = {International Symposium on Code Generation and Optimization},
  pages = {15-26},
  year = {2005},
  doi = {10.1109/CGO.2005.14}}

@article{Bern81a,
  author = {Philip A. Bernstein and N. Goodman},
  title = {Concurrency Control in Distributed Database Systems},
  journal = {ACM Computing Surveys},
  volume = {13},
  pages = {185--221},
  year = {1981},
  month = jun,
  number = {2}}

@inproceedings{Bern82a,
  author = {Philip A. Bernstein and N. Goodman},
  title = {A Sophisticate's Introduction to Distributed Concurrency Control},
  booktitle = {Proceedings of the Eighth International Conference on Very Large Data Bases},
  pages = {62--76},
  year = {1982}}

@article{Bern96a,
  author = {Philip A. Bernstein},
  title = {Repositories, Objects, and PC Tools --- How Repositories Will Develop in the Personal Computer Market},
  journal = {Database Programming and Design},
  year = {1996},
  month = dec}

@inproceedings{Bern97a,
  author = {Philip A. Bernstein},
  title = {{Repositories and Object Oriented Databases}},
  booktitle = {Proceedings BTW '97},
  pages = {34--46},
  publisher = {Springer-Verlag},
  year = {1997},
  url = {http://www.research.microsoft.com/users/philbe/SIGMOD%20Record.doc},
  address = {Ulm, Germany},
  editor = {Dittrich, Klaus R. and Geppert, Andreas},
  month = mar}

@inproceedings{Bern97b,
  author = {Philip A. Bernstein and Brian Harry and Paul Sanders and David Shutt and Jason Zander},
  title = {{The Microsoft Repository}},
  booktitle = {Proceedings of International Conference on Very Large Data Bases (VLDB '97)},
  pages = {3--12},
  year = {1997},
  url = {http://www.research.microsoft.com/users/philbe/VLDB97.DOC},
  address = {Athens, Greece}}

@techreport{Bern98a,
  author = {T. Berners-Lee and R. Fielding and U.C. Irvine and L. Masinter},
  title = {{Uniform} {Resource} {Identifiers} ({URI}): Generic Syntax},
  year = {1998},
  institution = {RFC 2396},
  month = aug,
  note = {http://www.ietf.org/rfc/rfc2396.txt}}

@inproceedings{Bern98b,
  author = {Stefan Berner and Stefan Joos and Martin Glinz and Martin Arnold},
  title = {A Visualization Concept for Hierarchical Object Models},
  booktitle = {Proceedings of ASE 1998},
  pages = {225--228},
  year = {1998}}

@article{Bern99a,
  author = {Philip A. Bernstein and Thomas Bergstr{\"a}sser and Jason Carlson and Shankar Pal and Paul Sanders and David Shutt},
  title = {{Microsoft Repository Version 2 and the Open Information Model}},
  journal = {Information Systems},
  volume = {24},
  pages = {71--98},
  year = {1999},
  url = {http://msdn.microsoft.com/repository/technical/infosys/default.asp},
  number = {2}}

@inproceedings{Berr04a,
  author = {Daniel Berry},
  title = {The Inevitable Pain of Software Development: Why There Is No Silver Bullet},
  booktitle = {Radical Innovations of Software and Systems Engineering in the Future},
  volume = {2941},
  pages = {50--74},
  publisher = {Springer-Verlag},
  year = {2004},
  url = {http://se.uwaterloo.ca/~dberry/inevitable.pain.html},
  editor = {M. Wirsing, A. Knapp and S. Balsamo},
  series = {LNCS}}

@inproceedings{Berr90a,
  author = {G{\'e}rard Berry and G{\'e}rard Boudol},
  title = {The Chemical Abstract Machine},
  booktitle = {Proceedings POPL '90},
  pages = {81--94},
  year = {1990},
  misc = {Jan 17-19},
  address = {San Francisco},
  month = jan}

@article{Berr92a,
  author = {G\'erard Berry and G\'erard Boudol},
  title = {The Chemical Abstract Machine},
  journal = {Theoretical Computer Science},
  volume = {96},
  pages = {217--248},
  year = {1992},
  url = {http://www-sop.inria.fr/meije/personnel/Gerard.Berry/cham.ps}}

@article{Berr94a,
  author = {Michael W. Berry and Susan T. Dumais and Gavin W. O'Brien},
  title = {Using linear algebra for intelligent information retrieval},
  journal = {SIAM Review},
  volume = {37},
  pages = {573--597},
  publisher = {Society for Industrial and Applied Mathematics},
  year = {1995},
  address = {Philadelphia, PA},
  number = {4}}

@incollection{Berr98,
  author = {G\'{e}rard Berry},
  title = {The Foundations of {E}sterel},
  booktitle = {Proof, Language and Interaction: Essays in Honour of Robin Milner},
  publisher = {MIT Press},
  year = {1998},
  editor = {G. Plotkin and C. Stirling and M. Tofte}}

@inproceedings{Berry00,
  author = {Berry, G{\'e}rard},
  title = {The foundations of {Esterel}},
  booktitle = {Proof, Language, and Interaction, Essays in Honour of Robin Milner},
  year = {2000},
  isbn = {978-0-262-16188-6}}

@article{Bers90a,
  author = {Bershad, Brian N. and Anderson, Thomas E. and Lazowska, Edward D. and Levy, Henry M.},
  title = {Lightweight Remote Procedure Call},
  journal = {ACM Trans. Comput. Syst.},
  volume = {8},
  pages = {37--55},
  publisher = {ACM},
  year = {1990},
  url = {http://doi.acm.org/10.1145/77648.77650},
  doi = {10.1145/77648.77650},
  acmid = {77650},
  address = {New York, NY, USA},
  issn = {0734-2071},
  issue_date = {Feb. 1990},
  month = feb,
  number = {1},
  numpages = {19}}

@inproceedings{Bert07a,
  author = {Antonia Bertolino},
  title = {Software Testing Research: Achievements, Challenges, Dreams},
  booktitle = {Proceedings of Future of Software Engineering (FOSE'07) at 29th International Conference on Software Engineering},
  pages = {85--103},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/FOSE.2007.25},
  address = {Washington, DC, USA},
  isbn = {0-7695-2829-5}}

@inproceedings{Bert09a,
  author = {Bertran, Benjamin and Consel, Charles and Kadionik, Patrice and Lamer, Bastien},
  title = {A {SIP}-Based Home Automation Platform: An experimental study},
  booktitle = {ICIN'09: Proceedings of the 13th International Conference on Intelligence in Next Generation Networks},
  pages = {1--6},
  publisher = {{IEEE}},
  year = {2009},
  address = {Bordeaux, France}}

@inproceedings{Bert10a,
  author = {Bertran, Benjamin and Consel, Charles and Jouve, Wilfried and Guan, Hongyu and Kadionik, Patrice},
  title = {{SIP} as a Universal Communication Bus: A Methodology and an Experimental Study},
  booktitle = {ICC'10: Proceedings of the 9th International Conference on Communications},
  year = {2010},
  address = {Cape Town, South Africa}}

@book{Bert74a,
  author = {Jacques Bertin},
  title = {Graphische Semiologie},
  publisher = {Walter de Gruyter},
  year = {1974}}

@book{Bert83a,
  author = {Jacques Bertin},
  title = {Semiology of Graphics},
  publisher = {University of Wisconsin Press},
  year = {1983},
  isbn = {0299090604}}

@article{Bert91a,
  author = {Elisa Bertino and Lorenzo Martino},
  title = {Object-Oriented Database Management Systems: Concepts and Issues},
  journal = {IEEE Computer},
  volume = {24},
  pages = {33--48},
  year = {1991},
  month = apr,
  number = {4}}

@inproceedings{Bert93a,
  author = {Y. Bertrand and J-F. Dufourd and P. Lienhardt},
  title = {Algebraic Specification and Development in Geometric Modeling},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {75--89},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@book{Bert94a,
  author = {Elisa Bertino and Susan Urban},
  title = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Palermo, Italy},
  isbn = {3-540-58451-X},
  series = {LNCS}}

@inproceedings{Bert94b,
  author = {Elisa Bertino and Giovanna Guerrini and Danilo Montesi},
  title = {Deductive Object Databases},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {213--235},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Bert95a,
  author = {Elisa Bertino and Giovanna Guerrini},
  title = {Objects with Multiple Most Specific Classes},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {102--126},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@inproceedings{Bert99a,
  author = {Elisa Bertino and Giovanna Guerrini and Isabella Merlo and Marco Mesiti},
  title = {An Approach to Classify Semi-Structured Objects},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {416--440},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Several advanced applications, such as those dealing
with the Web, need to handle data whose structure is
not known a-priori. Such requirement severely limits
the applicability of traditional database
techniques, that are based on the fact that the
structure of data (e.g. the database schema) is
known before data are entered into the database.
Moreover, in traditional database systems, whenever
a data item (e.g. a tuple, an object, and so on) is
entered, the application specifies the collection
(e.g. relation, class, and so on) the data item
belongs to. Collections are the basis for handling
queries and indexing and therefore a proper
classification of data items in collections is
crucial. In this paper, we address this issue in the
context of an extended object-oriented data model.
We propose an approach to classify objects, created
without specifying the class they belong to, in the
most appropriate class of the schema, that is, the
class closest to the object state. In particular, we
introduce the notion of weak membership of an object
in a class, and define two measures, the conformity
and the heterogeneity degrees, exploited by our
classification algorithm to identify the most
appropriate class in which an object can be
classified, among the ones of which it is a weak
member.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@article{Berz94a,
  author = {Berzins, Valdis},
  title = {Software merge: semantics of combining changes to programs},
  journal = {Journal of ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume = {16},
  pages = {1875--1903},
  publisher = {ACM},
  year = {1994},
  doi = {/10.1145/197320.197403},
  address = {New York, NY, USA},
  issn = {0164-0925},
  number = {6}}

@inproceedings{Besn17a,
  author = {Besnard, Valentin and Brun, Matthias and Dhaussy, Philippe and Jouault, Fr\'ed\'eric and Olivier, David and Teodorov, Ciprian},
  title = {Towards one {Model} {Interpreter} for {Both} {Design} and {Deployment}},
  booktitle = {Third International Workshop on Executable Modeling (EXE 2017)},
  year = {2017},
  url = {https://hal.archives-ouvertes.fr/hal-01585318},
  month = sep}

@article{Bess01a,
  author = {F. Besson and T. Jensen and D. Le M\'etayer and T. Thorn},
  title = {Model ckecking security properties of control flow graphs},
  journal = {Journal of Computer Security},
  volume = {9},
  pages = {217--250},
  year = {2001}}

@article{Bess10a,
  author = {Bessey, Al and Block, Ken and Chelf, Ben and Chou, Andy and Fulton, Bryan and Hallem, Seth and Henri-Gros, Charles and Kamsky, Asya and McPeak, Scott and Engler, Dawson},
  title = {A Few Billion Lines of Code Later: Using Static Analysis to Find Bugs in the Real World},
  year = {2010},
  issue_date = {February 2010},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {53},
  number = {2},
  issn = {0001-0782},
  journal = {Commun. ACM},
  month = {feb},
  pages = {66--75},
  numpages = {10}
}

@book{Bess16a,
  author = {Besset, Didier H},
  title = {Object-Oriented Implementation of Numerical Methods An Introduction with Pharo},
  publisher = {Square Bracket Associates},
  year = {2016}}

@phdthesis{Best02a,
  author = {Best, Casey Alexander},
  title = {Designing a component-based framework for a domain independent visualization tool},
  year = {2002},
  school = {University of Victoria}}

@book{Best93a,
  title = {Proceedings {CONCUR}'93},
  volume = {715},
  publisher = {Springer-Verlag},
  year = {1993},
  address = {Heidesheim, Germany},
  editor = {Eike Best},
  isbn = {3-540-57208-2},
  month = aug,
  series = {LNCS}}

@inproceedings{Besz12a,
  author = {Beszedes, A. and Gergely, T. and Schrettner, L. and Jasz, J. and Lango, L. and Gyimothy, T.},
  title = {{Code Coverage-based Regression Test Selection and Prioritization in WebKit}},
  booktitle = {Software Maintenance ({ICSM}), 2012 28th IEEE International Conference on},
  pages = {46-55},
  year = {2012},
  doi = {10.1109/ICSM.2012.6405252},
  issn = {1063-6773},
  keywords = {Internet;program testing;public domain software;regression analysis;WebKit;code coverage information;code coverage-based regression testing;continuously evolving software system;defect detection capability;open source web browser engine project;regression test prioritization;regression test selection;selective retesting;software change;test suite reduction;testing cost reduction;Communities;Conferences;Databases;Instruments;Reliability;Software maintenance;Testing;Regression testing;WebKit;code coverage;test case selection;test prioritization;test quality},
  month = {sep}}

@inproceedings{Beti05a,
  author = {Aysu Betin-Can and Tevfik Bultan and Xiang Fu},
  title = {Design for verification for asynchronously communicating Web services},
  booktitle = {WWW '05: Proceedings of the 14th international conference on World Wide Web},
  pages = {750--759},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1060745.1060853},
  address = {New York, NY, USA},
  isbn = {1-59593-046-9},
  location = {Chiba, Japan}}

@inproceedings{Bett08a,
  author = {Bettini, Lorenzo and Bono, Viviana},
  title = {{Type Safe Dynamic Object Delegation in Class-based Languages}},
  booktitle = {Proc. of PPPJ, Principles and Practice of Programming in Java},
  publisher = {ACM Press},
  year = {2008},
  note = {To appear}}

@article{Bett08b,
  author = {Bettini, Lorenzo and Capecchi, Sara and Venneri, Betti},
  title = {{Featherweight Java with Dynamic and Static Overloading}},
  journal = {Science of Computer Programming},
  publisher = {Elsevier},
  year = {2008},
  note = {To appear}}

@inproceedings{Bett08c,
  author = {Bettenburg, Nicolas and Premraj, Rahul and Zimmermann, Thomas and Kim, Sunghun},
  title = {Extracting structural information from bug reports},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {27--30},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370757},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@inproceedings{Bett08d,
  author = {Lorenze Bettini and Viviana Bono and Marco Naddeo},
  title = {A Trait Based Re-engineering Technique for Java Hierarchies},
  booktitle = {PPPJ 2008},
  publisher = {ACM Press},
  year = {2008},
  url = {http://www.di.unito.it/~bono/papers/pppj2008b.pdf},
  series = {ACM International Conference Proceedings}}

@book{Bett13a,
  author = {Bettini, Lorenzo},
  title = {Implementing Domain-Specific Languages with Xtext and Xtend},
  publisher = {Packt Publishing},
  year = {2013},
  isbn = {1782160302, 9781782160304}}

@book{Bett16a,
  title={Implementing domain-specific languages with Xtext and Xtend},
  author={Bettini, Lorenzo},
  year={2016},
  publisher={Packt Publishing Ltd}
}

@book{Beus07a,
  author = {C\'{e}dric Beust and Hani Suleiman},
  title = {Next generation {Java} testing: {TestNG} and advanced concepts},
  publisher = {Addison-Wesley Professional},
  year = {2007},
  url = {http://portal.acm.org/citation.cfm?id=1324803},
  citeulike-article-id = {5724043},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1324803},
  isbn = {0321503104},
  posted-at = {2009-09-04 16:41:55},
  priority = {2}}

@article{Beva01a,
  author = {Bevan, Nigel},
  title = {International standards for HCI and usability},
  journal = {International Journal of Human-Computer Studies},
  volume = {55},
  pages = {533--552},
  publisher = {Academic Press, Inc.},
  year = {2001},
  address = {Duluth, MN, USA},
  issn = {1071-5819},
  month = oct,
  number = {4},
  numpages = {20}}

@techreport{Beye03a,
  author = {Dirk Beyer and Claus Lewerentz},
  title = {{CrocoPat}: A Tool for Efficient Pattern Recognition in Large Object-Oriented Programs},
  year = {2003},
  institution = {Institute of Computer Science, Brandenburgische Technische Universit{\"a}t Cottbus},
  month = jan,
  number = {I-04/2003}}

@inproceedings{Beye05a,
  author = {Dirk Beyer},
  title = {Co-change visualization},
  booktitle = {Proceedings of the 21st IEEE International Conference on Software Maintenance, Industrial and Tool volume},
  pages = {89--92},
  year = {2005},
  url = {http://citeseer.ist.psu.edu/beyer05cochange.html},
  location = {Budapest},
  series = {{ICSM}'05}}

@inproceedings{Beye05b,
  author = {Beyer, Dirk and Noack, Andreas},
  title = {Clustering Software Artifacts Based on Frequent Common Changes},
  booktitle = {IWPC '05: Proceedings of the 13th International Workshop on Program Comprehension},
  pages = {259--268},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/WPC.2005.12},
  address = {Washington, DC, USA},
  isbn = {0-7695-2254-8}}

@inproceedings{Beye06a,
  author = {Dirk Beyer and Ahmed E. Hassan},
  title = {Animated Visualization of Software History using Evolution Storyboards},
  booktitle = {{WCRE} '06: Proceedings of the 13th Working Conference on Reverse Engineering},
  pages = {199--210},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/{WCRE}.2006.14},
  address = {Washington, DC, USA},
  isbn = {0-7695-2719-1}}

@article{Beyn99,
  author = {P Beynon-Davies and C Carne and H Mackay and D Tudhope},
  title = {Rapid application development (RAD): an empirical review},
  journal = {European Journal of Information Systems},
  volume = {8},
  pages = {211-223},
  publisher = {Taylor & Francis},
  year = {1999},
  url = {https://doi.org/10.1057/palgrave.ejis.3000325},
  doi = {10.1057/palgrave.ejis.3000325},
  eprint = {https://doi.org/10.1057/palgrave.ejis.3000325},
  number = {3}}

@inproceedings{Beze19a,
  author = {Bezemer, Cor-Paul and Eismann, Simon and Ferme, Vincenzo and Grohmann, Johannes and Heinrich, Robert and Jamshidi, Pooyan and Shang, Weiyi and van Hoorn, Andr\'{e} and Villavicencio, Monica and Walter, J\"{u}rgen and Willnecker, Felix},
  title = {How is Performance Addressed in DevOps?},
  booktitle = {Proceedings of the 2019 ACM/SPEC International Conference on Performance Engineering},
  pages = {45-50},
  publisher = {Association for Computing Machinery},
  year = {2019},
  url = {https://doi.org/10.1145/3297663.3309672},
  doi = {10.1145/3297663.3309672},
  isbn = {9781450362399},
  address = {New York, NY, USA},
  abstract = {DevOps is a modern software engineering paradigm that is gaining widespread adoption in industry. The goal of DevOps is to bring software changes into production with a high frequency and fast feedback cycles. This conflicts with software quality assurance activities, particularly with respect to performance. For instance, performance evaluation activities --- such as load testing --- require a considerable amount of time to get statistically significant results.We conducted an industrial survey to get insights into how performance is addressed in industrial DevOps settings. In particular, we were interested in the frequency of executing performance evaluations, the tools being used, the granularity of the obtained performance data, and the use of model-based techniques. The survey responses, which come from a wide variety of participants from different industry sectors, indicate that the complexity of performance engineering approaches and tools is a barrier for wide-spread adoption of performance analysis in DevOps. The implication of our results is that performance analysis tools need to have a short learning curve, and should be easy to integrate into the DevOps pipeline in order to be adopted by practitioners.},
  numpages = {6},
  keywords = {devops, continuous integration, industrial practices, software performance},
  location = {Mumbai, India},
  series = {ICPE '19}}

@inproceedings{Bezi01a,
  author = {Jean B\'ezivin and Olivier Gerb\'e},
  title = {Towards a Precise Definition of the {OMG/MDA} Framework},
  booktitle = {Proceedings of Automated Software Engineering (ASE'01)},
  pages = {273--282},
  publisher = {IEEE Computer Society},
  year = {2001},
  url = {http://www.sciences.univ-nantes.fr/lina/atl/www/papers/ASE01.OG.JB.pdf},
  address = {Los Alamitos CA}}

@inproceedings{Bezi87a,
  author = {Jean B\'ezivin},
  title = {Some Experiments In Object-Oriented Simulation},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {394--405},
  year = {1987},
  month = dec}

@article{Bhan94a,
  author = {Sanjay Bhansali},
  title = {Software Synthesis using Generic Architectures},
  journal = {Automated Software Engineering},
  volume = {1},
  pages = {239--280},
  publisher = {Kluwer Academic Publishers},
  year = {1994},
  editor = {W. Lewis Jhonson and Anthony Finkelstein},
  number = {3}}

@inproceedings{Bhar16a,
  author = {Bhargavan, Karthikeyan and Delignat-Lavaud, Antoine and Fournet, C{\'e}dric and Gollamudi, Anitha and Gonthier, Georges and Kobeissi, Nadim and Kulatova, Natalia and Rastogi, Aseem and Sibut-Pinote, Thomas and Swamy, Nikhil and Zanella-B{\'e}guelin, Santiago},
  title = {Formal Verification of Smart Contracts: Short Paper},
  booktitle = {2016 ACM Workshop on Programming Languages and Analysis for Security},
  pages = {91--96},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2993600.2993611},
  doi = {10.1145/2993600.2993611},
  acmid = {2993611},
  address = {New York, NY, USA},
  isbn = {978-1-4503-4574-3},
  keywords = {EVM, ethereum, formal verification, smart contracts, solidity},
  location = {Vienna, Austria},
  numpages = {6},
  series = {PLAS '16}}

@techreport{Bhar96a,
  author = {Krishna A. Bharat and Luca Cardelli},
  title = {Migratory Applications},
  year = {1996},
  misc = {February 15},
  url = {http://gatekeeper.dec.com/pub/DEC/SRC/research-report/SRC-138.ps},
  institution = {Digital},
  month = feb,
  number = {138},
  type = {SCR Research Report}}

@inproceedings{Bhas86a,
  author = {K.S. Bhaskar and J.K. Pecol and J.L. Beug},
  title = {Virtual Instruments: Object-Oriented Program Synthesis},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {303--314},
  year = {1986},
  month = nov}

@inproceedings{Bhat06a,
  author = {Pradeep Bhatia and Yogesh Singh},
  title = {Quantification Criteria for Optimization of Modules in OO Design},
  booktitle = {Proceedings of the International Conference on Software Engineering Research and Practice {\&} Conference on Programming Languages and Compilers, SERP 2006},
  volume = {2},
  pages = {972-979},
  publisher = {CSREA Press},
  year = {2006},
  isbn = {1-932415-91-2}}

@inbook{Bhat11a,
  author = {Bhattacharya, Suparna and Nanda, Mangala Gowri and Gopinath, K. and Gupta, Manish},
  title = {Reuse, Recycle to De-bloat Software},
  booktitle = {ECOOP 2011 -- Object-Oriented Programming: 25th European Conference, Lancaster, Uk, July 25-29, 2011 Proceedings},
  pages = {408--432},
  publisher = {Springer Berlin Heidelberg},
  year = {2011},
  url = {http://dx.doi.org/10.1007/978-3-642-22655-7_19},
  doi = {10.1007/978-3-642-22655-7_19},
  address = {Berlin, Heidelberg},
  isbn = {978-3-642-22655-7}}

@inproceedings{Bi18a,
  title={Typed First-Class Traits},
  author={Bi, Xuan and Oliveira, Bruno C d S},
  booktitle={32nd European Conference on Object-Oriented Programming (ECOOP 2018)},
  year={2018},
  organization={Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}
}

@article{Bian03,
  author = {Bianchi, Alessandro and Caivano, Danilo and Marengo, Vittorio and Visaggio, Giuseppe},
  title = {Iterative reengineering of legacy systems},
  journal = {IEEE Transactions on Software Engineering},
  volume = {29},
  pages = {225--241},
  publisher = {IEEE},
  year = {2003},
  number = {3}}

@inproceedings{Bibi21a,
  author = {Bibiano, Ana Carla and Assuncao, Wesley K. G. and Coutinho, Daniel and Santos, Kleber and Soares, Vinicius and Gheyi, Rohit and Garcia, Alessandro and Fonseca, Baldoino and Ribeiro, Marcio and Oliveira, Daniel and Barbosa, Caio and Marques, Joao Lucas and Oliveira, Anderson},
  title = {Look Ahead! Revealing Complete Composite Refactorings and their Smelliness Effects},
  booktitle = {International Conference on Software Maintenance and Evolution (ICSME)},
  pages = {298-308},
  year = {2021},
  doi = {10.1109/ICSME52107.2021.00033}}

@article{Bibl01a,
  author = {Bible, John and Rothermel, Gregg and Rosenblum, David},
  title = {A Comparative Study of Coarse- and Fine-Grained Safe Regression Test Selection},
  journal = {ACM TOSEM},
  volume = {10},
  pages = {149--183},
  year = {2001},
  month = apr,
  number = {2}}

@inproceedings{Bida01a,
  author = {Bidarra, Rafael and Van Den Berg, Eelco and Bronsvoort, Willem F},
  title = {Collaborative modeling with features},
  booktitle = {International Design Engineering Technical Conferences and Computers and Information in Engineering Conference},
  volume = {80210},
  pages = {535--545},
  year = {2001},
  organization = {American Society of Mechanical Engineers}}

@inproceedings{Bido93a,
  author = {M. Bidoit and R. Hennicker},
  title = {A General Framework for Modular Implementations of Modular System Specifications},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {199--214},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@proceedings{Bido97a,
  title = {Theory and Practice of Software Development},
  booktitle = {Proceedings of the 7th International Conference CAAP/FASE, TAPSOFT '97},
  volume = {1214},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Lille, France},
  editor = {Michel Bidoit and Max Dauchet},
  isbn = {3-540-62781-2},
  month = apr,
  series = {LNCS}}

@inproceedings{Bieh07a,
  author = {Jacob T. Biehl and Mary Czerwinski and Greg Smith and George G. Robertson},
  title = {FASTDash: A Visual Dashboard for Fostering Awareness in Software Teams},
  booktitle = {Conference on Human factors in computing systems - CHI '07},
  year = {2007}}

@article{Biem94a,
  author = {J.M. Bieman and L.M.Ott},
  title = {Measuring Functional Cohesion},
  journal = {IEEE Transactions on Software Engineering},
  volume = {20},
  pages = {644--658},
  year = {1994},
  month = aug,
  number = {8}}

@inproceedings{Biem95a,
  author = {J.M. Bieman and B.K. Kang},
  title = {Cohesion and Reuse in an Object-Oriented System},
  booktitle = {Proceedings ACM Symposium on Software Reusability},
  year = {1995},
  month = apr}

@article{Biem98a,
  author = {J.M. Bieman and Byung-Kyoo Kang},
  title = {Measuring Design-Level Cohesion},
  journal = {IEEE Transactions on Software Engineering},
  volume = {24},
  pages = {111--124},
  year = {1998},
  month = feb,
  number = {2}}

@book{Bien93a,
  author = {Tim Bienz and Richard Cohn},
  title = {Portable Document Format Reference Manual},
  publisher = {Addison Wesley},
  year = {1993},
  isbn = {0-201-62628-4}}

@inproceedings{Bier03a,
  author = {G. Bierman and M. Hicks and P. Sewell and G. Stoyle},
  title = {Formalizing dynamic software updating},
  booktitle = {Proc. 2nd International Workshop on Unanticipated Software Evolution (USE 2003)},
  year = {2003}}

@techreport{Bier03b,
  author = {G.M. Bierman and M.J. Parkinson and A.M. Pitts},
  title = {MJ: An imperative core calculus for Java and Java with effects},
  year = {2003},
  url = {http://www.cl.cam.ac.uk/TechReports/},
  institution = {University of Cambridge Computer Laboratory, J.J. Thomson Avenue, Cambridge. CB3 0FD. UK}}

@inproceedings{Bier08a,
  author = {Bierman, G. and Parkinson, M. and Noble, J.},
  title = {UpgradeJ: Incremental Typechecking for Class Upgrades},
  booktitle = {ECOOP'08},
  publisher = {Springer},
  year = {2008},
  doi = {10.1007/978-3-540-70592-5_11}}

@inproceedings{Bier10a,
  author = {Bierman, Gavin and Meijer, Erik and Torgesen, Mads},
  title = {Adding dynamic types to C\#},
  booktitle = {Proceedings of ECOOP 2010},
  year = {2010}}

@article{Bigg87a,
  author = {T.J. Biggerstaff and C. Richter},
  title = {Reusability Framework, Assessment, and Directions},
  journal = {IEEE Software},
  volume = {4},
  pages = {41--49},
  year = {1987},
  month = mar,
  number = {2}}

@book{Bigg89a,
  author = {T.J. Biggerstaff and A.J. Perlis},
  title = {Software Reusability Volume {I}: Concepts and Models},
  volume = {I},
  publisher = {ACM Press \& Addison Wesley},
  year = {1989},
  address = {Reading, Mass.},
  isbn = {0-201-08017-6}}

@book{Bigg89b,
  author = {T.J. Biggerstaff and A.J. Perlis},
  title = {Software Reusability Volume {II}: Applications and Experience},
  volume = {II},
  publisher = {ACM Press \& Addison Wesley},
  year = {1989},
  address = {Reading, Mass.},
  isbn = {0-201-50018-3}}

@article{Bigg89c,
  author = {Ted J. Biggerstaff},
  title = {Design Recovery for Maintenance and Reuse},
  journal = {IEEE Computer},
  volume = {22},
  pages = {36--49},
  publisher = {IEEE Computer Society Press},
  year = {1989},
  month = oct}

@incollection{Bigg92a,
  author = {T.J. Biggerstaff},
  title = {Design Recovery for Maintenance and Reuse},
  booktitle = {Software Reengineering},
  pages = {520--533},
  publisher = {IEEE Computer Society Press},
  year = {1992},
  editor = {Robert S. Arnold}}

@inproceedings{Bigg93a,
  author = {Ted J. Biggerstaff and Bharat G. Mittbander and Dallas Webster},
  title = {The concept assignment problem in program understanding},
  booktitle = {Proceedings of the 15th international conference on Software Engineering (ICSE 1993)},
  publisher = {IEEE Computer},
  year = {1993}}

@article{Bigg94a,
  author = {Ted J. Biggerstaff and Bharat G. Mitbander and Dallas E. Webster},
  title = {Program Understanding and the Concept Assignment Problem},
  journal = {Communications of the ACM},
  volume = {37},
  pages = {72--82},
  publisher = {ACM},
  year = {1994},
  month = may,
  number = {5}}

@inproceedings{Bigg94b,
  author = {Ted J. Biggerstaff},
  title = {The Library Scaling Problem and the Limits of Concrete Component Reuse},
  booktitle = {Proceedings ICSR 1994},
  year = {1994}}

@article{Biha92a,
  author = {Thomas A. Bihari and Prabha Gopinath},
  title = {Object-Oriented Real-Time Systems: Concepts and Examples},
  journal = {IEEE Computer},
  volume = {25},
  pages = {25--32},
  year = {1992},
  month = dec,
  number = {12}}

@inproceedings{Bijn94a,
  author = {Stijn Bijnens and Wouter Joosen and Pierre Verbaeten},
  title = {A Reflective Invocation Scheme to Realise Advanced Object Management},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {139--151},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {The integration of the notion of distribution in an
object-oriented language not only introduces a need
for location independent object invocation but also
has to cope with various object management
operations. These meta-operations include object
migration, object replication and granularity
control. Additionally, in a multithreaded environ-
ment, the concurrency control specifications defined
on an object by the application programmer must be
realised correctly. Our object invocation scheme
offers mechanisms for realising these management
operations and concurrency control transparently.
This scheme {based on reference objects} is generic
in the sense that it can be extented to realise some
additional object management operations currently
not supported by our prototype. This prototype is
realised in a C++ environment on various distributed
memory platforms.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@incollection{Bijn95a,
  author = {Stijn Bijnens and Wouter Joosen and Pierre Verbaeten},
  title = {Sender Initiated and Receiver Initiated Coordination in a Global Object Space},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = {924},
  pages = {14--28},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {This paper features a case study of a complex
parallel application (in the area of Molecular
Dynamics Simulation) modelled in a concurrent
object-oriented language. In this computational
model, application objects can exhibit some
autonomous behaviour and reside in a global object
space. At runtime, this object space can physically
be mapped on a distributed memory machine. The case
study indicates the pitfalls of pure name-based
object interaction. We show that due to the dynamic
nature of the interaction schemes between the
application objects, coordination primitives are
necessary to achieve expressive lucidity within a
programming language. As a result, two kinds of
semantics exist for coordination in the object
space: 1. Sender-initiated coordination by means of
pattern-based group communication. 2.
Receiver-initiated coordination by means of
multi-object synchronisation constraints. A language
framework is proposed that enables a programmer to
express both kinds of coordination, and a concise
implementation based on a meta-level architecture is
presented.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@inproceedings{Bind05a,
  author = {Walter Binder},
  title = {A Portable and Customizable Profiling Framework for {Java} Based on Bytecode Instruction Counting},
  booktitle = {Proceedings of The Third Asian Symposium on Programming Languages and Systems (APLAS-2005)},
  volume = {3780},
  pages = {178--194},
  year = {2005},
  url = {http://ropas.snu.ac.kr/2005/aplas/},
  address = {Tsukuba, Japan},
  month = {nov},
  series = {LNCS}}

@article{Bind06a,
  author = {Binder, Walter},
  title = {Portable and accurate sampling profiling for Java},
  journal = {Software: Practice and Experience},
  volume = {36},
  pages = {615-650},
  year = {2006},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.712},
  doi = {https://doi.org/10.1002/spe.712},
  abstract = {Abstract This article presents a novel framework for the sampling-based profiling of Java programs, which relies on program transformation techniques. We exploit bytecode instruction counting to regularly activate a user-defined profiling agent, which processes the current call stack. This approach has several advantages, such as making the instrumentation entirely portable, generating reproducible profiles, and enabling a fine-grained adjustment of the sampling rate. Our framework offers a flexible {API} to write portable profiling agents in pure Java. While the overhead due to our profiling scheme is comparable to the overhead caused by prevailing, timing-based profilers, the resulting profiles are much more accurate.},
  eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.712},
  keywords = {Java, JVM, sampling profiling, program transformations, bytecode instrumentation},
  number = {6}}

@article{Bind09a,
  author = {Binder, Walter and Hulaas, Jarle and Moret, Philippe and Villaz\'{o}n, Alex},
  title = {Platform-Independent Profiling in a Virtual Execution Environment},
  journal = {Softw. Pract. Exper.},
  volume = {39},
  pages = {47-79},
  publisher = {John Wiley & Sons, Inc.},
  year = {2009},
  doi = {10.1002/spe.890},
  abstract = {Virtual execution environments, such as the Java virtual machine, promote platform-independent software development. However, when it comes to analyzing algorithm complexity and performance bottlenecks, available tools focus on platform-specific metrics, such as the CPU time consumption on a particular system. Other drawbacks of many prevailing profiling tools are high overhead, significant measurement perturbation, as well as reduced portability of profiling tools, which are often implemented in platform-dependent native code. This article presents a novel profiling approach, which is entirely based on program transformation techniques, in order to build a profiling data structure that provides calling-context-sensitive program execution statistics. We explore the use of platform-independent profiling metrics in order to make the instrumentation entirely portable and to generate reproducible profiles. We implemented these ideas within a Java-based profiling tool called JP. A significant novelty is that this tool achieves complete bytecode coverage by statically instrumenting the core runtime libraries and dynamically instrumenting the rest of the code. JP provides a small and flexible {API} to write customized profiling agents in pure Java, which are periodically activated to process the collected profiling information. Performance measurements point out that, despite the presence of dynamic instrumentation, JP causes significantly less overhead than a prevailing tool for the profiling of Java code.},
  address = {USA},
  issn = {0038-0644},
  issue_date = {January 2009},
  keywords = {JVM, Java, program transformations, bytecode instrumentation, dynamic metrics, profiling},
  month = jan,
  number = {1},
  numpages = {33}}

@book{Bind99a,
  author = {Binder, Robert V.},
  title = {{Testing Object-Oriented Systems: Models, Patterns, and Tools}},
  publisher = {Addison Wesley},
  year = {1999},
  location = {Archiv SCG},
  series = {Object Technology Series}}

@inproceedings{Bing93a,
  author = {Tim Bingham and Nancy Hobbs and Dave Husson},
  title = {Experiences Developing and Using an {OO} Library for Program Manipulation},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {83--90},
  year = {1993},
  month = oct}

@article{Bink04a,
  author = {Binkley, David and Harman, Mark},
  title = {Analysis and Visualization of Predicate Dependence on Formal Parameters and Global Variables},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {30},
  pages = {715--735},
  publisher = {IEEE Press},
  year = {2004},
  doi = {10.1109/TSE.2004.78},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {11}}

@inproceedings{Bink05a,
  author = {Binkley, David and Harman, Mark},
  title = {Locating Dependence Clusters and Dependence Pollution},
  booktitle = {{ICSM} '05},
  pages = {177--186},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/ICSM.2005.58},
  address = {Washington, DC, USA},
  isbn = {0-7695-2368-4}}

@article{Bink09a,
  author = {Binkley, Dave and Lawrie, Dawn and Maex, Steve and Morrell, Christopher},
  title = {Identifier length and limited programmer memory},
  journal = {Science of Computer Programming},
  volume = {74},
  pages = {430--445},
  publisher = {Elsevier},
  year = {2009},
  number = {7}}

@inproceedings{Bink11a,
  author = {Binkley, Dave and Hearn, Matthew and Lawrie, Dawn},
  title = {Improving identifier informativeness using part of speech information},
  booktitle = {Proceedings of the 8th Working Conference on Mining Software Repositories},
  pages = {203--206},
  year = {2011},
  organization = {ACM}}

@article{Bink11b,
  author = {Binkert, Nathan and Beckmann, Bradford and Black, Gabriel and Reinhardt, Steven K. and Saidi, Ali and Basu, Arkaprava and Hestness, Joel and Hower, Derek R. and Krishna, Tushar and Sardashti, Somayeh and Sen, Rathijit and Sewell, Korey and Shoaib, Muhammad and Vaish, Nilay and Hill, Mark D. and Wood, David A.},
  title = {The Gem5 Simulator},
  journal = {SIGARCH Comput. Archit. News},
  volume = {39},
  pages = {1-7},
  publisher = {Association for Computing Machinery},
  year = {2011},
  url = {https://doi.org/10.1145/2024716.2024718},
  doi = {10.1145/2024716.2024718},
  abstract = {The gem5 simulation infrastructure is the merger of the best aspects of the M5 [4] and GEMS [9] simulators. M5 provides a highly configurable simulation framework, multiple ISAs, and diverse CPU models. GEMS complements these features with a detailed and exible memory system, including support for multiple cache coherence protocols and interconnect models. Currently, gem5 supports most commercial ISAs (ARM, ALPHA, MIPS, Power, SPARC, and x86), including booting Linux on three of them (ARM, ALPHA, and x86).The project is the result of the combined efforts of many academic and industrial institutions, including AMD, ARM, HP, MIPS, Princeton, MIT, and the Universities of Michigan, Texas, and Wisconsin. Over the past ten years, M5 and GEMS have been used in hundreds of publications and have been downloaded tens of thousands of times. The high level of collaboration on the gem5 project, combined with the previous success of the component parts and a liberal BSD-like license, make gem5 a valuable full-system simulation tool.},
  address = {New York, NY, USA},
  issn = {0163-5964},
  issue_date = {May 2011},
  month = {aug},
  number = {2},
  numpages = {7}}

@article{Bink95a,
  author = {Binkley, David and Horwitz, Susan and Reps, Thomas},
  title = {Program integration for languages with procedure calls},
  journal = {Journal of ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume = {4},
  pages = {3--35},
  publisher = {ACM},
  year = {1995},
  doi = {/10.1145/201055.201056},
  address = {New York, NY, USA},
  issn = {1049-331X},
  number = {1}}

@inproceedings{Bink98a,
  author = {Binkley, Aaron B. and Schach, Stephen R.},
  title = {Validation of the coupling dependency metric as a predictor of run-time failures and maintenance measures},
  booktitle = {ICSE '98: Proceedings of the 20th international conference on Software engineering},
  pages = {452--455},
  publisher = {IEEE Computer Society},
  year = {1998},
  address = {Washington, DC, USA},
  isbn = {0-8186-8368-6},
  location = {Kyoto, Japan}}

@article{Binn96a,
  author = {Binns, Pam and Engelhart, Matt and Jackson, Mike and Vestal, Steve},
  title = {Domain-Specific Software Architectures for Guidance, Navigation, and Control},
  journal = {International Journal of Software Engineering and Knowledge Engineering},
  volume = {6},
  pages = {201--227},
  publisher = {World Scientific Publishing Company},
  year = {1996},
  doi = {10.1142/S0218194096000107},
  number = {2}}

@inproceedings{Bird05a,
  author = {Steven Bird},
  title = {NLTK-Lite: Efficient scripting for natural language processing},
  booktitle = {In Proc. of the 4th International Conference on Natural Language Processing (ICON},
  pages = {11--18},
  publisher = {Publishers},
  year = {2005}}

@book{Bird09,
  author = {Bird, Steven and Klein, Ewan and Loper, Edward},
  title = {Natural language processing with Python: analyzing text with the natural language toolkit},
  publisher = {" O'Reilly Media, Inc."},
  year = {2009}}

@book{Bird09a,
  author = {Steven Bird and Ewan Klein and Edward Loper},
  title = {Natural Language Processing with Python: Analyzing Text with the Natural Language Toolkit},
  publisher = {O'Reilly},
  year = {2009},
  url = {http://www.nltk.org/book},
  address = {Beijing},
  biburl = {http://www.bibsonomy.org/bibtex/2c90dc59441d01c8bef58a947274164d4/flint63},
  file = {O'Reilly Product page:http\://www.oreilly.com/catalog/9780596516499/:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/0596516495/:URL;Google Books:http\://books.google.de/books?isbn=978-0-596-51649-9:URL;Related Web Site:http\://www.nltk.org/:URL},
  interhash = {5408d7da097b9cd81239c238da8bfaf4},
  intrahash = {c90dc59441d01c8bef58a947274164d4},
  isbn = {978-0-596-51649-9}}

@inproceedings{Bird09b,
  author = {Bird, Christian and Rigby, Peter C. and Barr, Earl T. and Hamilton, David J. and German, Daniel M. and Devanbu, Prem},
  title = {The Promises and Perils of Mining Git},
  booktitle = {Proceedings of the 2009 6th IEEE International Working Conference on Mining Software Repositories},
  pages = {1--10},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/MSR.2009.5069475},
  doi = {10.1109/MSR.2009.5069475},
  acmid = {1591132},
  address = {Washington, DC, USA},
  isbn = {978-1-4244-3493-0},
  numpages = {10},
  series = {MSR '09}}

@inproceedings{Bird09c,
  author = {Bird, Christian and Bachmann, Adrian and Aune, Eirik and Duffy, John and Bernstein, Abraham and Filkov, Vladimir and Devanbu, Premkumar},
  title = {Fair and Balanced?: Bias in Bug-fix Datasets},
  booktitle = {Proceedings of the the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
  pages = {121--130},
  publisher = {ACM},
  year = {2009},
  url = {http://doi.acm.org/10.1145/1595696.1595716},
  doi = {10.1145/1595696.1595716},
  acmid = {1595716},
  address = {New York, NY, USA},
  isbn = {978-1-60558-001-2},
  keywords = {bias},
  location = {Amsterdam, The Netherlands},
  numpages = {10},
  series = {ESEC/FSE '09}}

@inproceedings{Bird11a,
  author = {Bird, Christian and Nagappan, Nachiappan and Murphy, Brendan and Gall, Harald and Devanbu, Premkumar},
  title = {Don't touch my code!: examining the effects of ownership on software quality},
  booktitle = {Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering},
  pages = {4--14},
  publisher = {ACM},
  year = {2011},
  isbn = {978-1-4503-0443-6},
  series = {ESEC/FSE'11}}

@inproceedings{Bird15a,
  author = {Christian Bird and Trevor Carnahan and Michaela Greiler},
  title = {{Lessons Learned from Building and Deploying a Code Review Analytics Platform}},
  booktitle = {Proceedings of the International Conference on Mining Software Repositories},
  publisher = {{IEEE}},
  year = {2015}}

@inproceedings{Birk04a,
  author = {Adrian Birka and Michael D. Ernst},
  title = {A practical type system and language for reference immutability},
  booktitle = {OOPSLA'2004},
  pages = {35--49},
  year = {2004}}

@incollection{Birk09a,
  author = {Birkmeier, Dominik and Overhage, Sven},
  title = {On component identification approaches--classification, state of the art, and comparison},
  booktitle = {Component-Based Software Engineering},
  pages = {1--18},
  publisher = {Springer},
  year = {2009}}

@article{Birk40a,
  author = {Garret Birkhoff},
  title = {Lattice {Theory}},
  journal = {American Mathematical Society},
  year = {1940}}

@article{Birm73a,
  author = {Birman, Alexander and Ullman, Jeffrey D.},
  title = {Parsing algorithms with backtrack},
  journal = {IEEE Conference Record of 11th Annual Symposium on Switching and Automata Theory, 1970},
  pages = {153-174},
  year = {1970},
  doi = {10.1109/SWAT.1970.18},
  issn = {0272-4847},
  month = oct}

@inproceedings{Birn01a,
  author = {Dietrich Birngruber},
  title = {CoML: Yet Another, But Simple Component Composition Language},
  booktitle = {Workshop on Composition Languages, WCL '01},
  pages = {1--13},
  year = {2001},
  url = {http://www.cs.iastate.edu/~lumpe/WCL2001/},
  address = {Vienna, Austria},
  month = sep}

@article{Birr82a,
  author = {A.D. Birrell and R. Levin and R.M. Needham and M.D. Schroeder},
  title = {Grapevine: An Exercise in Distributed Computing},
  journal = {CACM},
  volume = {25},
  pages = {260--274},
  year = {1982},
  month = apr,
  number = {4}}

@inproceedings{Birr93a,
  author = {Andreas Birrer and Thomas Eggenschwiler},
  title = {Frameworks in the Financial Engineering Domain: An Experience Report},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {21--35},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {To supply the financial engineering community with
adequate and timely software support we advocate a
reusability oriented approach to software
development. The approach focuses on frameworks and
reusable building blocks. This paper presents a
domain specific framework for a calculation engine
to be used in financial trading software. It is as
such an example of using frameworks outside their
typical domain of graphical user interfaces.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@book{Birt73a,
  author = {G. Birtwistle and Ole Johan Dahl and B. Myhrtag and Kristen Nygaard},
  title = {Simula Begin},
  publisher = {Auerbach Press},
  year = {1973},
  address = {Philadelphia}}

@incollection{Bisc04a,
  author = {Walter Bischofberger and Jan K\"{u}hl and Silvio L\"{o}ffler},
  title = {Sotograph -- A Pragmatic Approach to Source Code Architecture Conformance Checking},
  booktitle = {Software Architecture},
  volume = {3047},
  pages = {1--9},
  publisher = {Springer-Verlag},
  year = {2004},
  doi = {10.1007/b97879},
  abstract = {In our experience the implementation of software
systems frequently does not conform very closely to
the planned architecture. For this reason we decided
to implement source code architecture conformance
checking support for Sotograph, our software
analysis environment. Besides providing a
conformance check for a single version of a system,
Sotograph supports also trend analysis. I.e., the
investigation of the evolution of a software system
and the changes in architecture violations between a
number of versions.},
  series = {LNCS}}

@book{Bisc92a,
  author = {Walter R. Bischofberger and Gustav Pomberger},
  title = {Prototyping-Oriented Software Development},
  publisher = {Springer-Verlag},
  year = {1992},
  isbn = {3-540-55448-3}}

@inproceedings{Bisc92b,
  author = {Walter R. Bischofberger},
  title = {Sniff: A Pragmatic Approach to a C++ Programming Environment},
  booktitle = {C++ Conference},
  pages = {67--82},
  year = {1992},
  url = {http://citeseer.nj.nec.com/bischofberger92sniff.html}}

@book{Bish03a,
  author = {Matt Bishop},
  title = {Computer Security: Art and Science},
  publisher = {Pearson Education (Singapore) Pte. Ltd.},
  year = {2003},
  isbn = {0-201-44099-7}}

@book{Bish03b,
  author = {Bishop, Matt},
  title = {Clustering for data mining},
  publisher = {Addison-Wesley},
  year = {2003}}

@inproceedings{Bish03c,
  author = {Bishop, Toni A and Karne, Ramesh K},
  title = {A Survey of Middleware.},
  booktitle = {CATA},
  pages = {254--258},
  year = {2003}}

@article{Bisw11a,
  author = {Biswas, Swarnendu and Mall, Rajib and Satpathy, Manoranjan and Sukumaran, Srihari},
  title = {Regression Test Selection Techniques: A Survey},
  journal = {Informatica (03505596)},
  volume = {35},
  year = {2011},
  number = {3}}

@misc{Bitc09,
  author = {Satoshi Nakamoto},
  title = {BitCoin: A peer-to-peer electronic cash system.},
  year = {2009},
  url = {bitcoin.org}}

@inproceedings{Bjoe88a,
  author = {Anders Bj{\"o}rnerstedt and Stefan Britts},
  title = {{AVANCE}: An Object Management System},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {206--221},
  year = {1988},
  month = nov}

@techreport{Bjoe89a,
  author = {Anders Bj{\"o}rnerstedt},
  title = {Secondary Storage Garbage Collection for Decentralized Object-Based Systems},
  pages = {277--319},
  year = {1989},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/garbageCollection.pdf},
  abstract = {This paper describes a mechanism for secondary
storage garbage collection that may be used to
reclaim inaccessible resources in decentralized
persistent object based systems. Schemes for object
addressing and object identification are discussed
and a proposal is made which handles volatile
objects separately from persistent objects. The
garbage collection of the space of volatile objects
is decoupled from the garbage collection of the
space of persistent objects. The first kind of
garbage collection can avoid the complexity and
overhead of a distributed algorithm by classifying
"exported" objects as persistent. The problem of
detecting and collecting "distributed garbage" is
then deferred to garbage collection of persistent
objects.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@incollection{Bjor89a,
  author = {Anders Bjornerstedt and Christer Hulten},
  title = {Version Control in an Object-oriented Architecture},
  booktitle = {Object-Oriented Concepts, Databases and Applications},
  pages = {451--485},
  publisher = {Addison Wesley/ACM Press},
  year = {1989},
  address = {Reading, Mass.},
  editor = {W. Kim and F. Lochovsky}}

@inproceedings{Blac00a,
  author = {Andrew P. Black and Mark P. Jones},
  title = {Perspectives On Software},
  booktitle = {OOPSLA 2000 Workshop on Advanced Separation of Concerns in Object-oriented Systems},
  year = {2000}}

@inproceedings{Blac02b,
  author = {Andrew P. Black},
  title = {A Use for Inheritance},
  booktitle = {ECOOP 2002: Proceedings of the Inheritance Workshop},
  publisher = {University of Jyv\"askyl\"a},
  year = {2002},
  url = {http://www.cs.jyu.fi/~sakkinen/inhws/papers/Black.pdf},
  editor = {Andrew P. Black and Erik Ernst and Peter Grogono and Markky Sakkinen},
  month = jun}

@inproceedings{Blac04a,
  author = {Andrew P. Black and Nathanael Sch\"arli},
  title = {Traits: Tools and Methodology},
  booktitle = {Proceedings ICSE 2004},
  pages = {676--686},
  year = {2004},
  url = {http://scg.unibe.ch/archive/papers/Blac04aTraitsTools.pdf},
  doi = {10.1109/ICSE.2004.1317489},
  abstract = {Traits are an object-oriented programming language
construct that allow groups of methods to be named
and reused in arbitrary places in an inheritance
hierarchy. Classes can use methods from traits as
well as defining their own methods and instance
variables. Traits thus enable a new style of
programming, in which traits rather than classes are
the primary unit of reuse. However, the additional
sub-structure provided by traits is always optional:
a class written using traits can also be viewed as a
flat collection of methods, with no change in its
semantics. This paper describes the tool that
supports these two alternate views of a class,
called the traits browser, and the programming
methodology that we are starting to develop around
the use of traits.},
  cvs = {TraitsProgrammingICSE2003},
  month = may}

@inproceedings{Blac04b,
  author = {S. M. {Blackburn} and P. {Cheng} and K. S. {McKinley}},
  title = {Oil and water? High performance garbage collection in Java with MMTk},
  booktitle = {Proceedings. 26th International Conference on Software Engineering},
  pages = {137-146},
  year = {2004},
  doi = {10.1109/ICSE.2004.1317436}}

@inproceedings{Blac06a,
  author = {Blackburn, Stephen M. and Garner, Robin and Hoffmann, Chris and Khang, Asjad M. and McKinley, Kathryn S. and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z. and Hirzel, Martin and Hosking, Antony and Jump, Maria and Lee, Han and Moss, J. Eliot B. and Phansalkar, Aashish and Stefanovi\'{c}, Darko and VanDrunen, Thomas and von Dincklage, Daniel and Wiedermann, Ben},
  title = {The DaCapo Benchmarks: Java Benchmarking Development and Analysis},
  booktitle = {Proceedings of the 21st Annual ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications},
  pages = {169-190},
  publisher = {Association for Computing Machinery},
  year = {2006},
  url = {https://doi.org/10.1145/1167473.1167488},
  doi = {10.1145/1167473.1167488},
  abstract = {Since benchmarks drive computer science research and industry product development, which ones we use and how we evaluate them are key questions for the community. Despite complex runtime tradeoffs due to dynamic compilation and garbage collection required for Java programs, many evaluations still use methodologies developed for C, C++, and Fortran. SPEC, the dominant purveyor of benchmarks, compounded this problem by institutionalizing these methodologies for their Java benchmark suite. This paper recommends benchmarking selection and evaluation methodologies, and introduces the DaCapo benchmarks, a set of open source, client-side Java benchmarks. We demonstrate that the complex interactions of (1) architecture, (2) compiler, (3) virtual machine, (4) memory management, and (5) application require more extensive evaluation than C, C++, and Fortran which stress (4) much less, and do not require (3). We use and introduce new value, time-series, and statistical metrics for static and dynamic properties such as code complexity, code size, heap composition, and pointer mutations. No benchmark suite is definitive, but these metrics show that DaCapo improves over SPEC Java in a variety of ways, including more complex code, richer object behaviors, and more demanding memory system requirements. This paper takes a step towards improving methodologies for choosing and evaluating benchmarks to foster innovation in system design and implementation for Java and other managed languages.},
  address = {New York, NY, USA},
  isbn = {1595933484},
  keywords = {methodology, benchmark, SPEC, Java, DaCapo},
  location = {Portland, Oregon, USA},
  numpages = {22},
  series = {OOPSLA '06}}

@article{Blac07b,
  author = {Blackburn, Stephen M and Hertz, Matthew and Mckinley, Kathryn S and Moss, J Eliot B and Yang, Ting},
  title = {Profile-based pretenuring},
  journal = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume = {29},
  pages = {2--es},
  publisher = {ACM New York, NY, USA},
  year = {2007},
  number = {1}}

@article{Blac08a,
  author = {Blackburn, Stephen M. and McKinley, Kathryn S. and Garner, Robin and Hoffmann, Chris and Khan, Asjad M. and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z. and Hirzel, Martin and Hosking, Antony and Jump, Maria and Lee, Han and Moss, J. Eliot B. and Phansalkar, Aashish and Stefanovik, Darko and VanDrunen, Thomas and von Dincklage, Daniel and Wiedermann, Ben},
  title = {Wake up and Smell the Coffee: Evaluation Methodology for the 21st Century},
  journal = {Commun. ACM},
  volume = {51},
  pages = {83-89},
  publisher = {Association for Computing Machinery},
  year = {2008},
  url = {https://doi.org/10.1145/1378704.1378723},
  doi = {10.1145/1378704.1378723},
  address = {New York, NY, USA},
  issn = {0001-0782},
  issue_date = {August 2008},
  month = {aug},
  number = {8},
  numpages = {7}}

@inproceedings{Blac86a,
  author = {Andrew Black and Norman Hutchinson and Eric Jul and Henry Levy},
  title = {Object Structure in the {Emerald} System},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {78--86},
  year = {1986},
  month = nov}

@article{Blac87a,
  author = {Andrew Black and Norman Hutchinson and Eric Jul and Henry Levy and Larry Carter},
  title = {Distribution and Abstract Data Types in Emerald},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-13},
  pages = {65--76},
  year = {1987},
  month = jan,
  number = {1}}

@article{Blac91a,
  author = {Andrew P. Black},
  title = {Understanding transactions in the operating system context},
  journal = {SIGOPS Oper. Syst. Rev.},
  volume = {25},
  pages = {73--76},
  publisher = {ACM Press},
  year = {1991},
  doi = {10.1145/122140.122149},
  address = {New York, NY, USA},
  issn = {0163-5980},
  number = {1}}

@inproceedings{Blac93a,
  author = {Andrew P. Black and Mark P. Immel},
  title = {Encapsulating Plurality},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {57--79},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {This paper describes the Gaggle, a mechanism for
grouping and naming objects in an object-oriented
distributed system. Using Gaggles, client objects
can access distributed replicated services without
regard for the number of objects that provide the
service. Gaggles are not themselves a replication
mechanism; instead they enable programmers to
construct their own replicated distributed services
in whatever way is appropriate for the application
at hand, and then to encapsulate the result. From
the point of view of a client, a Gaggle can be named
and invoked exactly like an object. However, Gaggles
can be used to represent individual objects, several
ordinary objects, or even several other Gaggles. In
this way they encapsulate plurality. If a Gaggle is
used as an invokee, one of the objects that it
represents is chosen (non-deterministically) to
receive the invocation.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Blac99a,
  author = {Andrew P. Black},
  title = {Object-Oriented Programming: Regaining the Excitement},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {519--528},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {This paper is based on a speech delivered at the
ECOOP '98 Conference Banquet. It is not a literal
transcription of my talk, since no recording was
made, but has been reconstructed ex post facto based
upon my speaker's notes and my memory. I have also
taken the opportunity to add some headings and
references.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@article{Black08a,
  author = {Sue Black},
  title = {Deriving an approximation algorithm for automatic computation of ripple effect measures},
  journal = {Information {\&} Software Technology},
  volume = {50},
  pages = {723-736},
  year = {2008},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {http://dx.doi.org/10.1016/j.infsof.2007.07.008},
  number = {7-8}}

@inproceedings{Blad04a,
  author = {Bladh, Thomas and Carr, David A and Scholl, Jeremiah},
  title = {Extending tree-maps to three dimensions: A comparative study},
  booktitle = {Asia-Pacific Conference on Computer Human Interaction},
  pages = {50--59},
  year = {2004},
  organization = {Springer}}

@article{Blah88a,
  author = {M.R. Blaha and W.J. Premerlani and James E. Rumbaugh},
  title = {Relational Database Design Using an Object-Oriented Methodology},
  journal = {CACM},
  volume = {31},
  pages = {414--427},
  year = {1988},
  month = apr,
  number = {4}}

@book{Blah92a,
  author = {Michael Blaha and William Permerlani Frederick Eddy and William Lorensen and James Rumbaugh},
  title = {Object-Oriented Modeling and Design},
  publisher = {Prentice-Hall},
  year = {1992}}

@book{Blah95a,
  author = {Michael Blaha and William Permerlani Frederick Eddy and William Lorensen and James Rumbaugh},
  title = {Mod\'elisation et conception orient\'ees objet},
  publisher = {Masson--Prentice-Hall},
  year = {1995},
  note = {seconde \'edition}}

@inproceedings{Blah98a,
  author = {M. Blaha and D. LaPlant and E. Marvak},
  title = {Requirements for Repository Software},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {164--173},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Blah98b,
  author = {M. Blaha},
  title = {On Reverse Engineering of Vendor Databases},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {184--190},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Blak87a,
  author = {Edwin Blake and Steve Cook},
  title = {On Including Part Hierarchies in Object-Oriented Languages, with an Implementation in {Smalltalk}},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {41--50},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@unpublished{Blan08a,
  author = {Jasmin Blanchette},
  title = {The Little Manual of {{API}} Design},
  year = {2008},
  month = jun,
  note = {\url{http://www4.in.tum.de/~blanchet/{API}-design.pdf}}}

@inproceedings{Blan08b,
  author = {Blanc, Xavier and Mounier, Isabelle and Mougenot, Alix and Mens, Tom},
  title = {Detecting Model Inconsistency through Operation-Based Model Construction},
  booktitle = {Proceedings of the 30th International Conference on Software Engineering},
  pages = {511-520},
  publisher = {Association for Computing Machinery},
  year = {2008},
  url = {https://doi.org/10.1145/1368088.1368158},
  doi = {10.1145/1368088.1368158},
  isbn = {9781605580791},
  address = {New York, NY, USA},
  abstract = {Nowadays, large-scale industrial software systems may involve hundreds of developers working on hundreds of different but related models representing parts of the same system specification. Detecting and resolving structural inconsistencies between these models is then critical. In this article we propose to represent models by sequences of elementary construction operations, rather than by the set of model elements they contain. Structural and methodological consistency rules can then be expressed uniformly as logical constraints on such sequences. Our approach is meta-model independent, allowing us to deal with consistency between different models whatever their kind. We have validated our approach by building a Prolog engine that detects violations of structural and methodological constraints specified on UML 2.1 models and requirement models. This engine has been integrated into two contemporary UML-based modelling environments, Eclipse EMF and Rational Software Architect (RSA).},
  numpages = {10},
  keywords = {meta-model, consistency, model, logic},
  location = {Leipzig, Germany},
  series = {ICSE '08}}

@inproceedings{Blas01a,
  author = {Darius Blasband},
  title = {Parsing in a hostile world},
  booktitle = {Proceedings of the Eight Working Conference on Reverse Engineering ({WCRE} 2001)},
  pages = {291--300},
  publisher = {IEEE Computer Society},
  year = {2001},
  doi = {10.1109/{WCRE}.2001.957834},
  month = oct}

@article{Blas91a,
  author = {G{\"u}nther Blaschek},
  title = {Type-Safe Object-Oriented Programming with Prototypes --- The Concepts of Omega},
  journal = {Structured Programming},
  volume = {12},
  pages = {217--225},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {New York}}

@inproceedings{Blaz13a,
  author = {Blazy, Sandrine and Laporte, Vincent and Maroneze, Andr{\'e} and Pichardie, David},
  title = {Formal Verification of a C Value Analysis Based on Abstract Interpretation},
  booktitle = {Static Analysis Symposium},
  volume = {Lecture Notes in Computer Science},
  pages = {324-344},
  publisher = {Springer},
  year = {2013},
  address = {Seattle, {\'E}tats-Unis},
  editor = {Manuel Fahndrich and Francesco Logozzo},
  keywords = {value analysis; C language; mechanized proofs of semantic properties; abstract interpretation}}

@inproceedings{Bloc89a,
  author = {F.P. Block and N.C. Chan},
  title = {An Extended Frame Language},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {151--158},
  year = {1989},
  month = oct}

@inproceedings{Bloch06a,
  author = {Bloch, Joshua},
  title = {How to Design a Good {API} and Why It Matters},
  booktitle = {Companion to the 21st ACM SIGPLAN Symposium on Object-oriented Programming Systems, Languages, and Applications},
  pages = {506--507},
  publisher = {ACM},
  year = {2006},
  url = {http://doi.acm.org/10.1145/1176617.1176622},
  doi = {10.1145/1176617.1176622},
  acmid = {1176622},
  isbn = {1-59593-491-X},
  location = {Portland, Oregon, USA},
  numpages = {2},
  series = {OOPSLA '06}}

@inproceedings{Bloo79a,
  author = {Toby Bloom},
  title = {Evaluating Synchronization Mechanisms},
  booktitle = {Proceedings of the Seventh Symposium on Operating Systems Principles},
  pages = {24--32},
  year = {1979},
  misc = {Dec. 10-12},
  address = {Pacific Grove, CA},
  month = dec}

@inproceedings{Bloo87a,
  author = {Toby Bloom and Stanley B. Zdonik},
  title = {Issues in the Design of Object-Oriented Database Programming Languages},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  pages = {441--451},
  year = {1987},
  month = dec}

@inproceedings{Bloo88a,
  author = {Bard Bloom and Sorin Istrail and Albert R. Meyer},
  title = {Bisimulation Can't Be Traced: Preliminary Report},
  booktitle = {Proceedings POPL '88},
  pages = {229--239},
  year = {1988},
  misc = {Jan 13-15},
  address = {San Diego},
  month = jan}

@incollection{Bloo90a,
  author = {Bard Bloom and Albert R. Meyer},
  title = {Experimenting with Process Equivalence},
  booktitle = {Semantics for Concurrency},
  pages = {81--95},
  publisher = {Springer-Verlag},
  year = {1990},
  editor = {M.Z. Kwiatkowska and M.W. Shields and R.M. Thomas},
  series = {Workshops in Computing}}

@mastersthesis{Blum00a,
  author = {Roger Blum},
  title = {Entwicklung eines Prototypen f{\"u}r die aktive Schicht {ALFRED}},
  year = {2000},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Blum00a.pdf},
  abstract = {Die zunehmende Automatisierung von
Gesch\"aftsprozessen und -regeln hat dazu gef\"uhrt,
dass herk\"ommliche Datenbankmanagementsysteme, mit
denen in praktisch allen modernen Unternehmungen die
Daten verwaltet werden, den Anforderungen nicht mehr
gen\"ugen. Als ein m\"oglicher Ausweg haben sich die
aktiven DBMS erwiesen. Aktive Datenbanksysteme
erweitern herk\"ommliche Datenbanksysteme um die
F\"ahigkeit, selbst\"andig auf gewisse Situationen
zu reagieren. Am Institut f\"ur
Wirtschaftsinformatik, Abteilung Information
Engineering, der Universit\"at Bern wird die aktive
Schicht ALFRED (Active Layer For Rule Execution in
Database Systems) entwickelt. Mit dieser kann
prinzipiell jedes beliebige (passive)
Datenbanksystem in ein aktives verwandelt werden. In
dieser Arbeit wird die Entwicklung eines Prototypen
beschrieben, in dem einige der entwickelten Konzepte
realisiert sind. Ein erster Teil beschreibt den
Entwurf und die Implementierung. Im zweiten Teil
wird die Leistungsf\"ahigkeit des realisierten
Prototypen und damit die prinzipielle
Realisierbarkeit der erarbeiteten Konzepte gezeigt.},
  month = may,
  type = {Diploma thesis}}

@article{Blum87,
  author = {A. Blumer and J. Blumer and D. Haussler and R. McConnell and A. Ehrenfeucht},
  title = {Complete Inverted Files for Efficient Text Retrieval and Analysis},
  journal = {JACM},
  volume = {34},
  pages = {578--595},
  year = {1987},
  month = jul,
  number = {3}}

@techreport{Blum97a,
  author = {Roger Blum},
  title = {Entwurf und Implementierung einer Benutzerschnittstelle f{\"u}r {ALFRED}},
  year = {1997},
  url = {http://scg.unibe.ch/archive/projects/Blum97a.pdf},
  abstract = {Aktive Datenbanksysteme erweitern herk\"ommliche
Datenbanksysteme um die F\"ahigkeit, selbst\"andig
auf gewisse Situationen zu reagieren. Am Institut
f\"ur Wirtschaftsinformatik, Abteilung Information
Engineering, der Universit\"at Bern wird die aktive
Schicht ALFRED (Active Layer For Rule Execution in
Database Systems) entwickelt. Damit kann prinzipiell
jedes beliebige (passive) Datenbanksystem in ein
aktives verwandelt werden. In diesem Projekt wird
die Benutzeroberfl\"ache, basierend auf festgelegten
funktionellen und systemtechnischen Anforderungen,
entworfen und implementiert. Ein besonderes Gewicht
wurde dabei auf die Benutzungsfreundlichkeit und die
Plattformunabh\"angigkeit gelegt. Ferner wird ein
Konzept f\"ur die automatische Ableitung von Regeln
f\"ur die Gew\"ahrleistung von
Integrit\"atsbedingungen erarbeitet. Das aktive
Verhalten wird in ALFRED somit vollst\"andig durch
Regeln realisiert.},
  institution = {University of Bern},
  month = may,
  type = {Informatikprojekt}}

@incollection{Bobb07a,
  author = {Jayaram Bobba and Kevin E. Moore and Luke Yen and Haris Volos and Mark D. Hill and Michael M. Swift and David A. Wood},
  title = {Performance Pathologies in Hardware Transactional Memory},
  booktitle = {Proceedings of the 34th Annual International Symposium on Computer Architecture},
  pages = {81--91},
  publisher = {International Symposium on Computer Architecture},
  year = {2007},
  pdf = {http://www.cs.wisc.edu/multifacet/papers/isca07_pathologies.pdf},
  isbn = {978-1-59593-706-3},
  month = jun}

@article{Bobr77a,
  author = {Daniel G. Bobrow and T. Winograd},
  title = {An Overview of {KRL}, a Knowledge Representation Language},
  journal = {Cognitive Science},
  volume = {1},
  pages = {3--46},
  year = {1977},
  number = {1}}

@inproceedings{Bobr80a,
  author = {Daniel G. Bobrow and Ira P. Goldstein},
  title = {Representing Design Alternatives},
  booktitle = {Proceedings of the Conference on Artificial Intelligence and the Simulation of Behavior},
  year = {1980},
  month = jul}

@inproceedings{Bobr84a,
  author = {Daniel G. Bobrow},
  title = {If Prolog is the Answer, What is the Question?},
  booktitle = {Proceedings of the International Conference on Fifth Generation Computer Systems},
  pages = {138--145},
  year = {1984},
  month = nov}

@inproceedings{Bobr86a,
  author = {Daniel G. Bobrow and Ken Kahn and Gregor Kiczales and Larry Masinter and Mark Stefik and Frank Zdybel},
  title = {CommonLoops: Merging Lisp and Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {17--29},
  year = {1986},
  month = nov}

@techreport{Bobr88a,
  author = {Daniel G. Bobrow and Linda G. DeMichiel and Richard P. Gabriel and Sonia E. Keene and Gregor Kiczales and D.A. Moon},
  title = {{Common} {Lisp} {Object} {System} Specification, {X3J13}},
  year = {1988},
  institution = {(ANSI COMMON LISP)},
  number = {88-003}}

@incollection{Bobr93a,
  author = {Daniel G. Bobrow and Richard P. Gabriel and J.L. White},
  title = {{CLOS} in Context --- The Shape of the Design},
  booktitle = {Object-Oriented Programming: the CLOS perspective},
  pages = {29--61},
  publisher = {MIT Press},
  year = {1993},
  editor = {A. Paepcke},
  isbn = {0262161362}}

@article{Bocc07a,
  author = {Sandro Boccuzzo and Harald Gall},
  title = {{CocoViz}: Towards Cognitive Software Visualizations},
  journal = {VISSOFT 2007. 4th IEEE International Workshop on Visualizing Software for Understanding and Analysis},
  volume = {0},
  pages = {72--79},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/VISSOF.2007.4290703},
  address = {Los Alamitos, CA, USA},
  isbn = {1-4244-0599-8}}

@inproceedings{Bocc94a,
  author = {G. Boccignone and A. Chianese and M. De Santo and A. Picariello},
  title = {Object-Oriented Representation of Shape Information},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {266--277},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@techreport{Boch90a,
  author = {Gregor V. Bochmann and M. Barbeau and M. Erradi and L. Lecomte and Pierre Mondain-Monval and N. Williams},
  title = {Mondel: An Object-Oriented Specification Language},
  year = {1990},
  institution = {Universit\'e de Montr\'eal},
  number = {7481},
  type = {Report}}

@techreport{Boch91a,
  author = {Gregor V. Bochmann and St\'ephane Poirier and Pierre Mondain-Monval},
  title = {Object-Oriented Design for Distributed Systems: The {OSI} Dierctory Example},
  year = {1991},
  institution = {Universit\'e de Montr\'eal},
  number = {768},
  type = {Report}}

@inproceedings{Bock04a,
  author = {Christoph Bockisch and Michael Haupt and Mira Mezini and Klaus Ostermann},
  title = {Virtual Machine Support for Dynamic Join Points},
  booktitle = {AOSD '04: Proceedings of the 3rd international conference on Aspect-oriented software development},
  pages = {83--92},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/976270.976282},
  address = {New York, NY, USA},
  isbn = {1-58113-842-3},
  location = {Lancaster, UK}}

@inproceedings{Bock06a,
  author = {Christoph Bockisch and Sebastian Kanthak and Michael Haupt and Matthew Arnold and Mira Mezini},
  title = {Efficient control flow quantification},
  booktitle = {Proceedings of {OOPSLA} 2006},
  pages = {125--138},
  publisher = {ACM},
  year = {2006},
  editor = {Peri L. Tarr and William R. Cook},
  isbn = {1-59593-348-4}}

@inproceedings{Bock07a,
  author = {Christoph Bockisch and Mira Mezini},
  title = {A flexible architecture for pointcut-advice language implementations},
  booktitle = {VMIL '07: Proceedings of the 1st workshop on Virtual machines and intermediate languages for emerging modularization mechanisms},
  pages = {1},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1230136.1230137},
  address = {New York, NY, USA},
  isbn = {978-1-59593-661-5},
  location = {Vancouver, British Columbia, Canada}}

@inproceedings{Bock90a,
  author = {Heinz-Dieter Bocker, Jurgen Herczeg},
  title = {What Tracers Are Made of},
  booktitle = {Proceedings of OOPSLA/ECOOP '90},
  pages = {89--99},
  year = {1990},
  month = oct}

@article{Bock94a,
  author = {Conrad Bock and James Odell},
  title = {A Foundation for Composition},
  journal = {Journal of Object-Oriented Programming},
  volume = {7},
  year = {1994},
  number = {6}}

@inproceedings{Bodd11a,
  author = {Bodden, Eric and Sewe, Andreas and Sinschek, Jan and Oueslati, Hela and Mezini, Mira},
  title = {Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders},
  booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
  pages = {241--250},
  publisher = {ACM},
  year = {2011},
  doi = {10.1145/1985793.1985827},
  acmid = {1985827},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0445-0},
  keywords = {dynamic class loaders, dynamic class loading, native code, reflection, static analysis, tracing},
  location = {Waikiki, Honolulu, HI, USA},
  numpages = {10},
  series = {ICSE '11}}

@inproceedings{Bodd17a,
  author = {Eric Bodden},
  title = {Stateful Breakpoints: A Practical Approach to Defining Parameterized Runtime Monitors},
  booktitle = {ESEC/FSE'11},
  year = {2011},
  keywords = {debugging}}

@inproceedings{Bodd18a,
  author       = {Eric Bodden},
  editor       = {Julian Dolby and
                  William G. J. Halfond and
                  Ashish Mishra},
  title        = {The secret sauce in efficient and precise static analysis: the beauty
                  of distributive, summary-based static analyses (and how to master
                  them)},
  booktitle    = {Companion Proceedings for the {ISSTA/ECOOP} 2018 Workshops, {ISSTA} 2018, Amsterdam, Netherlands},
  pages        = {85--93},
  publisher    = {{ACM}},
  year         = {2018},
  url          = {https://doi.org/10.1145/3236454.3236500},
  doi          = {10.1145/3236454.3236500},
  timestamp    = {Thu, 10 Jan 2019 08:05:33 +0100},
  biburl       = {https://dblp.org/rec/conf/issta/Bodden18.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}}

@inproceedings{Bode06a,
  author = {Eric Bodden and Florian Forster and Friedrich Steimann},
  title = {Avoiding Infinite Recursion with Stratified Aspects},
  booktitle = {GI-Edition Lecture Notes in Informatics "NODe 2006 GSEM 2006"},
  volume = {P-88},
  pages = {49--64},
  publisher = {Bonner K\"ollen Verlag},
  year = {2006},
  editor = {Robert Hirschfeld and Andreas Polze and Ryszard Kowalczyk},
  organization = {Gesellschaft f\"ur Informatik}}

@inproceedings{Bodi00a,
  author = {Bod\'{\i}k, Rastislav and Gupta, Rajiv and Sarkar, Vivek},
  title = {A{BCD}: Eliminating {A}rray {B}ounds {C}hecks on {D}emand},
  booktitle = {Programming Language Design and Implementation},
  pages = {321--333},
  publisher = {ACM},
  year = {2000},
  doi = {10.1145/349299.349342},
  address = {New York, NY, USA},
  numpages = {13},
  series = {PLDI '00}}

@inproceedings{Bodi93a,
  author = {Bodin, F. and Kervella, L. and Priol, T.},
  title = {Fortran-S: A Fortran Interface for Shared Virtual Memory Architectures},
  booktitle = {Proceedings of the 1993 ACM/IEEE Conference on Supercomputing},
  pages = {274--283},
  publisher = {Association for Computing Machinery},
  year = {1993},
  url = {https://doi.org/10.1145/169627.169732},
  doi = {10.1145/169627.169732},
  address = {New York, NY, USA},
  isbn = {0818643404},
  location = {Portland, Oregon, USA},
  numpages = {10},
  series = {Supercomputing '93}}

@inproceedings{Boec90a,
  author = {Hans-Dieter B{\"o}cker and J{\"u}rgen Herczeg},
  title = {What Tracers Are Made Of},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {89--99},
  year = {1990},
  month = oct}

@book{Boeh05a,
  title = {Foundations of Empirical Software Engineering},
  publisher = {Springer-Verlag},
  year = {2005},
  address = {Berlin, Germany},
  editor = {Barry Boehm and Hans Dieter Rombach and Marvin V. Zelkowitz},
  isbn = {3-540-24547-2}}

@book{Boeh78a,
  author = {B. Boehm and J. Brown and H. Kaspar and M. Lipow and G. McLeod and M. Merritt},
  title = {Characteristics of Software Quality},
  publisher = {North Holland},
  year = {1978}}

@book{Boeh81a,
  author = {Barry W. Boehm},
  title = {Software Engineering Economics},
  publisher = {Prentice-Hall},
  year = {1981}}

@techreport{Boeh85a,
  author = {Hans Boehm and Alan Demers and Jim Donahue},
  title = {A Programmer's Guide to Russell},
  year = {1985},
  institution = {Cornell University},
  type = {on-line documentation}}

@incollection{Boeh87a,
  author = {Boehm, B.W.},
  title = {A Spiral Model of Software Development and Enhancement},
  booktitle = {Tutorial: Software Engineering Project Management},
  pages = {128--142},
  publisher = {IEEE Computer Society},
  year = {1987},
  address = {Washington},
  editor = {Thayer, R.H.}}

@article{Boeh88a,
  author = {Barry W. Boehm},
  title = {A Spiral Model of Software Development and Enhancement},
  journal = {IEEE Computer},
  volume = {21},
  pages = {61--72},
  year = {1988},
  number = {5}}

@article{Boeh95a,
  author = {Boehm, Hans-J and Atkinson, Russ and Plass, Michael},
  title = {Ropes: an alternative to strings},
  journal = {Software: Practice and Experience},
  volume = {25},
  pages = {1315--1330},
  publisher = {Wiley Online Library},
  year = {1995},
  number = {12}}

@inproceedings{Boel99a,
  author = {Kai B\"{o}llert},
  title = {On Weaving Aspects},
  booktitle = {Proceedings of the Workshop on Object-Oriented Technology},
  pages = {301--302},
  publisher = {Springer-Verlag},
  year = {1999},
  address = {London, UK},
  editor = {Ana M. D. Moreira and Serge Demeyer},
  isbn = {3-540-66954-X},
  series = {Lecture Notes in Computer Science}}

@article{Boer05a,
  author = {de Boer, F.S. and Bonsangue, M.M. and Groenewegen, L.P.J. and Stam, A.W. and Stevens, S. and van der Torre, L.},
  title = {Change impact analysis of enterprise architectures},
  journal = {Information Reuse and Integration, Conf, 2005. IRI -2005 IEEE International Conference on.},
  pages = {177-181},
  year = {2005},
  doi = {10.1109/IRI-05.2005.1506470},
  month = {aug}}

@mastersthesis{Boet01a,
  author = {Kathrin B\"{o}ttger},
  title = {Modelling and {Reconciling} {Functional} {Requirements} from {Differenet} {Viewpoints} using {Use} {Case}/{Scenarios} and {Formal} {Concept} {Analysis}},
  year = {2001},
  school = {University of Mannheim},
  address = {Germany}}

@inproceedings{Boet01b,
  author = {Kathrin B\"{o}ttger and Rolf Schwitter and Debbie Richards and Oscar Aguilera and Diego Moll\'{a}},
  title = {Reconciling {Use} {Cases} via {Controlled} {Language} and {Graphical} {Models}},
  booktitle = {Proceedings of INAP '01 (14th International Conference on Applications of Prolog)},
  pages = {20--22},
  year = {2001},
  address = {Japan},
  month = oct,
  organization = {University of Tokyo}}

@techreport{Boet07a,
  author = {G. Boetticher and T. Menzies and T. Ostrand},
  title = {PROMISE Repository of Empirical Software Engineering Data},
  booktitle = {Workshop on the Evaluation of Software Defect Detection Tools},
  year = {2007},
  institution = {West Virginia University, Department of Computer Science}}

@inproceedings{Boga16a,
  author = {Bogart, Christopher and K{\"a}stner, Christian and Herbsleb, James and Thung, Ferdian},
  title = {How to break an API: cost negotiation and community values in three software ecosystems},
  booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {109--120},
  year = {2016}}

@inproceedings{Boga18a,
  author = {Bogar, Anne Marie and Lyons, Damian M. and Baird, David},
  title = {Lightweight Call-Graph Construction for Multilingual Software Analysis},
  booktitle = {International Conference on Software Technologies},
  year = {2018},
  abstract = {Analysis of multilingual codebases is a topic of increasing importance. In prior work, we have proposed the MLSA (MultiLingual Software Analysis) architecture, an approach to the lightweight analysis of multilingual codebases, and have shown how it can be used to address the challenge of constructing a single call graph from multilingual software with mutual calls. This paper addresses the challenge of constructing monolingual call graphs in a lightweight manner (consistent with the objective of MLSA) which nonetheless yields sufficient information for resolving language interoperability calls. A novel approach is proposed which leverages information from a compiler-generated AST to provide the quality of call graph necessary, while the program itself is written using an Island Grammar that parses the AST providing the lightweight aspect necessary. Performance results are presented for a C/C implementation of the approach, PAIGE (Parsing AST using Island Grammar Call Graph Emitter) showing that despite its lightweight nature, it outperforms Doxgen, is robust to changes in the (Clang) AST, and is not restricted to C/C}}

@inproceedings{Bohme17a,
  author = {Marcel B{\"{o}}hme and Ezekiel O. Soremekun and Sudipta Chattopadhyay and Emamurho Ugherughe and Andreas Zeller},
  title = {Where is the bug and how is it fixed? an experiment with practitioners},
  booktitle = {Proceedings of Foundations of Software Engineering {ESEC/FSE}},
  pages = {117--128},
  publisher = {{ACM}},
  year = {2017},
  url = {https://doi.org/10.1145/3106237.3106255},
  doi = {10.1145/3106237.3106255},
  editor = {Eric Bodden and Wilhelm Sch{\"{a}}fer and Arie van Deursen and Andrea Zisman}}

@article{Bohn07a,
  author = {Johannes Bohnet and Jurgen Dollner},
  title = {{CGA} Call Graph Analyzer --- Locating and Understanding Functionality within the {Gnu} Compiler Collection's Million Lines of Code},
  journal = {VISSOFT 2007. 4th IEEE International Workshop on Visualizing Software for Understanding and Analysis},
  volume = {0},
  pages = {161--162},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/VISSOF.2007.4290719},
  address = {Los Alamitos, CA, USA},
  isbn = {1-4244-0599-8}}

@techreport{Bohn94a,
  author = {Henrik Bohnenkamp},
  title = {{CLOWN}: Concurrent Language with Objects and Wait-by-Necessity},
  year = {1994},
  institution = {Friedrich-Alexander-Universit{\"a}t Erlangen-N{\"u}rnberg},
  month = feb,
  type = {thesis}}

@book{Bohn96a,
  author = {Bohner, Shawn A. and Arnold, Robert S.},
  title = {Software Change Impact Analysis},
  publisher = {IEEE Computer Society Press},
  year = {1996}}

@inproceedings{Bohn96b,
  author = {Bohner, S.A},
  title = {Impact analysis in the software change process: a year 2000 perspective},
  booktitle = {Software Maintenance 1996, Proceedings., International Conference on},
  pages = {42-51},
  year = {1996},
  doi = {10.1109/ICSM.1996.564987},
  issn = {1063-6773},
  keywords = {management of change;software development management;software maintenance;Year 2000 Date situation;software change efforts;software change estimates;software change impact analysis;software change process;software change visibility;software community;software life cycle objects;software maintenance;year 2000 perspective;Software maintenance},
  month = {nov}}

@inproceedings{Boji00a,
  author = {Dragan Bojic and Dusan Velasevic},
  title = {Reverse {Engineering} of {Use} {Case} {Realizations} in {UML}},
  booktitle = {{S}ymposium on {A}pplied {C}omputing ({SAC})},
  publisher = {ACM Press},
  year = {2000},
  url = {http://www.acm.org/conferences/sac/sac00/Proceed/FinalPapers}}

@inproceedings{Boji00b,
  author = {Dragan Bojic and Dusan Velasevic},
  title = {A Use-Case Driven Method of Architecture Recovery for Program Understanding and Reuse Reengineering},
  booktitle = {Conference on Software Maintenance and Reengineering ({CSMR})},
  pages = {23--33},
  publisher = {IEEE Computer Society},
  year = {2000},
  doi = {10.1109/CSMR.2000.827302},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7695-0546-5}}

@incollection{Bolo89a,
  author = {Tommaso Bolognesi and Maurizio Caneve},
  title = {Squiggles: {A} Tool for the Analysis of {LOTOS} Specifications},
  booktitle = {Formal Description Techniques},
  pages = {201--216},
  publisher = {Elsevier Science Publishers B.V. (North-Holland)},
  year = {1989},
  editor = {K.J. Turner}}

@inproceedings{Bolt80a,
  author = {R.A. Bolt},
  title = {'Put-that-there': Voice and Gestures at the Graphics Interface},
  booktitle = {Proceedings SIGGRAPH '80},
  volume = {14},
  pages = {262--270},
  year = {1980},
  month = jul}

@techreport{Bolz05a,
  author = {Carl Friedrich Bolz and Armin Rigo},
  title = {Memory management and threading models as translation aspects -- solutions and challenges},
  year = {2005},
  institution = {PyPy Consortium},
  note = {http://codespeak.net/pypy/dist/pypy/doc/index-report.html}}

@inproceedings{Bolz07a,
  author = {Carl Friedrich Bolz and Armin Rigo},
  title = {How to not write Virtual Machines for Dynamic Languages},
  booktitle = {3rd Workshop on Dynamic Languages and Applications},
  year = {2007},
  url = {http://dyla2007.unibe.ch/?download=dyla07-HowToNotWriteVMs.pdf}}

@inproceedings{Bolz08a,
  author = {Carl Friedrich Bolz and Adrian Lienhard and Nicholas D. Matsakis and Oscar Nierstrasz and Lukas Renggli and Armin Rigo and Toon Verwaest},
  title = {Back to the future in one week --- implementing a {Smalltalk} {VM} in {PyPy}},
  booktitle = {Self-Sustaining Systems},
  volume = {5142},
  pages = {123--139},
  publisher = {Springer},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Bolz08aSpy.pdf},
  doi = {10.1007/978-3-540-89275-5_7},
  abstract = {We report on our experiences with the Spy project,
including implementation details and benchmark
results. Spy is a re-implementation of the Squeak
(i.e., Smalltalk-80) VM using the PyPy toolchain.
The PyPy project allows code written in RPython, a
subset of Python, to be translated to a multitude of
different backends and architectures. During the
translation, many aspects of the implementation can
be independently tuned, such as the garbage
collection algorithm or threading implementation. In
this way, a whole host of interpreters can be
derived from one abstract interpreter definition.
Spy aims to bring these benefits to Squeak, allowing
for greater portability and, eventually, improved
performance. The current Spy codebase is able to run
a small set of benchmarks that demonstrate
performance superior to many similar Smalltalk VMs,
but which still run slower than in Squeak itself.
Spy was built from scratch over the course of a week
during a joint Squeak-PyPy Sprint in Bern last
autumn.},
  isbn = {978-3-540-89274-8},
  medium = {2},
  series = {LNCS}}

@inproceedings{Bolz09a,
  author = {Bolz, Carl Friedrich and Cuni, Antonio and Fijalkowski, Maciej and Rigo, Armin},
  title = {Tracing the meta-level: PyPy's tracing JIT compiler},
  booktitle = {ICOOOLPS '09: Proceedings of the 4th workshop on the Implementation, Compilation, Optimization of Object-Oriented Languages and Programming Systems},
  pages = {18--25},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1565824.1565827},
  address = {New York, NY, USA},
  date-added = {2010-04-07 21:07:06 +0200},
  date-modified = {2010-04-07 21:08:32 +0200},
  isbn = {978-1-60558-541-3},
  location = {Genova, Italy}}

@incollection{Bomm16a,
  author = {Bommel, Pierre and Becu, Nicolas and Le Page, Christophe and Bousquet, Fran{\c{c}}ois},
  title = {Cormas: an agent-based simulation platform for coupling human decisions with computerized dynamics},
  booktitle = {Simulation and gaming in the network society},
  pages = {387--410},
  publisher = {Springer},
  year = {2016}}

@inproceedings{Bona86a,
  author = {Jeff Bonar and Robert Cunningham and Jamie Schultz},
  title = {An Object-Oriented Architecture for Intelligent Tutoring Systems},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {269--276},
  year = {1986},
  month = nov}

@book{Bona99a,
  author = {Eric Bonabeau and Marco Dorigo and Guy Theraulaz},
  title = {Swarm Intelligence: From Natural to Artificial Systems},
  publisher = {Oxford University Press},
  year = {1999},
  address = {New York}}

@inproceedings{Bond07a,
  author = {Michael D. Bond and Nicholas Nethercote and Stephen W. Kent and Samuel Z. Guyer and Kathryn S. McKinley},
  title = {Tracking bad apples: reporting the origin of null and undefined value errors},
  booktitle = {Proceedings of the 22nd annual ACM SIGPLAN conference on Object oriented programming systems and applications (OOPSLA'07)},
  pages = {405--422},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297027.1297057},
  address = {New York, NY, USA},
  isbn = {978-1-59593-786-5},
  location = {Montreal, Quebec, Canada}}

@inproceedings{Bond07b,
  author = {Michael D. Bond and Kathryn S. McKinley},
  title = {Tolerating memory leaks},
  booktitle = {OOPSLA: Proceedings of the 23rd Annual {ACM} {SIGPLAN} Conference on Object-Oriented Programming, Systems, Languages, and Applications, October 19-23, 2008, Nashville, {TN}, {USA}},
  pages = {109--126},
  publisher = {ACM},
  year = {2008}}

@book{Bond76a,
  author = {J.A. Bondy and U.S.R. Murty},
  title = {Graph Theory with Applications},
  publisher = {North Holland},
  year = {1976},
  address = {New York}}

@inproceedings{Bonf94a,
  author = {F. Bonfatti and P. D. Monari},
  title = {Towards a General Purpose Approach to Object-Oriented Analysis},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {108--122},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Bono08a,
  author = {Viviana Bono and Ferruccio Damiani and Elena Giachino},
  title = {On Traits and Types in a Java-like Setting},
  booktitle = {Fifth IFIP International Conference On Theoretical Computer Science - TCS 2008},
  pages = {367-382},
  publisher = {Springer},
  year = {2008},
  url = {http://www.di.unito.it/~damiani/papers/ifip-tcs-B-2008.html},
  doi = {10.1007/978-0-387-09680-3\_25},
  series = {IFIP International Federation for Information Processing}}

@incollection{Bono12a,
  author = {Bono, Viviana and Ku{\'s}mierek, Jarek and Mulatero, Mauro},
  title = {Magda: a new language for modularity},
  booktitle = {ECOOP 2012--Object-Oriented Programming},
  pages = {560--588},
  publisher = {Springer},
  year = {2012}}

@inproceedings{Bono98a,
  author = {Viviana Bono and Kathleen Fisher},
  title = {An Imperative, First-Order Calculus with Object Extension},
  booktitle = {ECOOP '98: Proceedings of the 12th European Conference on Object-Oriented Programming},
  pages = {462--497},
  publisher = {Springer-Verlag},
  year = {1998},
  address = {London, UK},
  isbn = {3-540-64737-6}}

@inproceedings{Bono99a,
  author = {Viviana Bono and Amit Patel and Vitaly Shmatikov},
  title = {A Core Calculus of Classes and Mixins},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {43--66},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {We develop an imperative calculus that provides a
formal model for both single and mixin inheritance.
By introducing classes and mixins as the basic
object-oriented constructs in a lambda-calculus with
records and references, we obtain a system with an
intuitive operational semantics. New classes are
produced by applying mixins to superclasses. Objects
are represented by records and produced by
instantiating classes. The type system for objects
uses only functional, record, and reference types,
and there is a clean separation between subtyping
and inheritance.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@misc{Bonz02a,
  author = {Paolo Bonzini},
  title = {Implementing a high-performance Smalltalk interpreter with genbc and genvm}}

@article{Booc02a,
  author = {Grady Booch and Alan W. Brown},
  title = {Collaborative Development Environments},
  journal = {Rational Software Corporation},
  year = {2002},
  month = oct}

@book{Booc05a,
  author = {Booch, Grady and Rumbaugh, James and Jacobson, Ivar},
  title = {The Unified Modeling Language User Guide (2nd Edition)},
  publisher = {Addison Wesley},
  year = {2005}}

@book{Booc83a,
  author = {Grady Booch},
  title = {Software Engineering with Ada},
  publisher = {The Benjamin Cummings Publishing Co. Inc.},
  year = {1983},
  address = {Menlo Park, CA 94025}}

@article{Booc86a,
  author = {Grady Booch},
  title = {Object-Oriented Development},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-12},
  pages = {211--221},
  year = {1986},
  month = feb,
  number = {2}}

@inproceedings{Booc90a,
  author = {Grady Booch and Michael Vilot},
  title = {The Design of the {C}++ Booch Components},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {1--11},
  year = {1990},
  month = oct}

@book{Booc91a,
  author = {Grady Booch},
  title = {Object Oriented Analysis and Design with Applications},
  publisher = {The Benjamin Cummings Publishing Co. Inc.},
  year = {1991},
  isbn = {0-8053-5340-2}}

@book{Booc94a,
  author = {Grady Booch},
  title = {Object Oriented Analysis and Design with Applications},
  publisher = {The Benjamin Cummings Publishing Co. Inc.},
  year = {1994},
  edition = {2nd},
  isbn = {0-8053-5340-2}}

@book{Booc95a,
  author = {Grady Booch and James Rumbaugh},
  title = {Unified Method for Object-Oriented Development Version 0.8},
  publisher = {Rational Software Corporation},
  year = {1995}}

@book{Booc96a,
  author = {Grady Booch},
  title = {Object Solutions},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-8053-0594-7}}

@book{Booc97a,
  author = {Grady Booch and James Rumbaugh},
  title = {Unified Method for Object-Oriented Development Version 1.0},
  publisher = {Rational Software Corporation},
  year = {1997}}

@book{Booc98a,
  author = {Grady Booch and James Rumbaugh and Ivar Jacobson},
  title = {The Unified Modeling Language User Guide},
  publisher = {Addison Wesley},
  year = {1998},
  note = {ISBN: 0-210-57168-4}}

@book{Booc99a,
  author = {Grady Booch and James Rumbaugh and Ivar Jacobson},
  title = {The Unified Modeling Language User Guide},
  publisher = {Addison Wesley},
  year = {1999},
  isbn = {0-201-57168-4}}

@inproceedings{Boog08a,
  author = {Boogerd, C. and Moonen, L.},
  title = {{Assessing the Value of Coding Standards: An Empirical Study}},
  booktitle = {International Conference on Software Maintenance},
  pages = {277 -286},
  year = {2008}}

@inproceedings{Boog09a,
  author = {Boogerd, Cathal and Moonen, Leon},
  title = {{Evaluating the Relation Between Coding Standard Violations and Faults Within and Across Software Versions}},
  booktitle = {{Working Conference on Mining Software Repositories}},
  pages = {41--50},
  year = {2009}}

@inproceedings{Boot00a,
  author = {Bob Boothe},
  title = {Efficient algorithms for bidirectional debugging},
  booktitle = {Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation (PLDI'00)},
  pages = {299--310},
  publisher = {ACM},
  year = {2000},
  doi = {10.1145/349299.349339},
  address = {New York, NY, USA},
  isbn = {1-58113-199-2},
  location = {Vancouver, British Columbia, Canada}}

@book{Boot93a,
  author = {Vernon Booth},
  title = {Communicating in Science},
  publisher = {Cambridge University Press},
  year = {1993},
  isbn = {0521429153}}

@inproceedings{Borb02a,
  author = {Borba, Paulo and Soares, S{\'e}rgio},
  title = {Refactoring and code generation tools for AspectJ},
  booktitle = {Proc. of the Workshop on Tools for Aspect-Oriented Software Development (with OOPSLA)},
  year = {2002}}

@mastersthesis{Borc01a,
  author = {Michael Borchardt},
  title = {A Feasibility Study for a {C}++ Refactoring Engine},
  year = {2001},
  school = {University of Antwerp},
  month = aug}

@inproceedings{Bore92a,
  author = {Michele Boreale and Rocco De Nicola},
  title = {Testing Equivalences for Mobile Processes},
  booktitle = {Proceedings of CONCUR '92},
  volume = {630},
  pages = {2--16},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {W.R. Cleaveland},
  series = {LNCS}}

@inproceedings{Bore94a,
  author = {Borenstein, Nathaniel S.},
  title = {EMail With A Mind of Its Own: The Safe-Tcl Language for Enabled Mail},
  booktitle = {Proceedings of the IFIP TC6/WG6.5 International Conference on Upper Layer Protocols, Architectures and Applications},
  pages = {389--402},
  publisher = {Elsevier Science Inc.},
  year = {1994},
  url = {http://dl.acm.org/citation.cfm?id=646533.695545},
  acmid = {695545},
  address = {New York, NY, USA},
  isbn = {0-444-82047-7},
  numpages = {14}}

@book{Borg05a,
  author = {Ingwer Borg and Patriuck J. F. Groenen},
  title = {Modern Multidimensional Scaling: Theory and Applications},
  publisher = {Springer},
  year = {2005},
  isbn = {0387251502}}

@article{Borg12a,
  author = {Borgelt, Christian},
  title = {Frequent item set mining},
  journal = {Wiley interdisciplinary reviews: data mining and knowledge discovery},
  volume = {2},
  pages = {437--456},
  publisher = {Wiley Online Library},
  year = {2012},
  number = {6}}

@book{Borl91a,
  author = {?},
  title = {Open Architecture Handbook},
  publisher = {Borland International Inc.},
  year = {1991},
  address = {Scotts Valley, CA}}

@misc{Born08a,
  author = {Bornstein, Dan},
  title = {Dalvik Virtual Machine Internals},
  year = {2008},
  howpublished = {Google I/O 2008},
  month = {jun}}

@phdthesis{Born79a,
  author = {Alan Borning},
  title = {Thinglab--a constraint-oriented simulation laboratory.},
  year = {1979},
  school = {Stanford University},
  url = {http://www.2share.com/thinglab/ThingLab%20-%20index.html},
  address = {Stanford, CA, USA},
  order_no = {AAI7917213}}

@article{Born81a,
  author = {Alan Borning},
  title = {The Programming Language Aspects of {ThingLab}, a Constraint-Oriented Simulation Laboratory},
  journal = {ACM TOPLAS},
  volume = {3},
  pages = {353--387},
  year = {1981},
  doi = {10.1145/357146.357147},
  month = oct,
  number = {4}}

@inproceedings{Born82a,
  author = {Alan H. Borning and Daniel H.H. Ingalls},
  title = {Multiple Inheritance in {Smalltalk}-80},
  booktitle = {Proceedings at the National Conference on AI},
  pages = {234--237},
  year = {1982},
  address = {Pittsburgh, PA}}

@inproceedings{Born82b,
  author = {Alan H. Borning and Daniel H.H. Ingalls},
  title = {A Type Declaration and Inference System for {Smalltalk}},
  booktitle = {Proceedings POPL '82},
  pages = {133--141},
  year = {1982},
  address = {Albuquerque, NM}}

@article{Born86a,
  author = {Alan Borning and Robert Duisberg},
  title = {Constraint-Based Tools for Building User Interfaces},
  journal = {ACM Transactions on Computer Graphics},
  volume = {5},
  pages = {345--374},
  year = {1986},
  month = oct,
  number = {4}}

@inproceedings{Born86b,
  author = {A. H. Borning},
  title = {Classes versus prototypes in object-oriented languages},
  booktitle = {Proceedings of the ACM/IEEE Fall Joint Computer Conference},
  pages = {36--40},
  publisher = {IEEE Computer Society Press},
  year = {1986},
  isbn = {0-8186-4743-4},
  location = {Dallas, Texas, United States}}

@inproceedings{Born87a,
  author = {Alan Borning and Robert Duisberg and Bjorn Freeman-Benson and Axel Kramer and Michael Woolf},
  title = {Constraint Hierarchies},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {48--60},
  year = {1987},
  month = dec}

@inproceedings{Born87b,
  author = {Alan Borning and Tim O'Shea},
  title = {Deltatalk: An Empirically and Aesthetically Motivated Simplification of the {Smalltalk}-80 Language},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {1--10},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@article{Bos81a,
  author = {Jan van den Bos and R. Plasmeijer and Jan W.M. St},
  title = {Process Communication Based on Input Specifications},
  journal = {ACM TOPLAS},
  volume = {3},
  pages = {224--250},
  year = {1981},
  month = jul,
  number = {3}}

@article{Bos83a,
  author = {Jan van den Bos and M.J. Plasmeijer and P.H. Hartel},
  title = {Input-output Tools: {A} Language Facility for Interactive and Real-Time Systems},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-9},
  pages = {247--259},
  year = {1983},
  month = may,
  number = {3}}

@article{Bos87a,
  author = {Jan van den Bos},
  title = {{PCOL} --- {A} Protocol-Constrained Object Language},
  journal = {ACM SIGPLAN Notices},
  volume = {22},
  pages = {14--19},
  year = {1987},
  month = sep,
  number = {9}}

@inproceedings{Bos89a,
  author = {Jan van den Bos and Chris Laffra},
  title = {{PROCOL} --- {A} Parallel Object Language with Protocols},
  booktitle = {ACM SIGPLAN Notices, Proceedings OOPSLA '89},
  volume = {24},
  pages = {95--102},
  year = {1989},
  month = oct}

@book{Bosc00a,
  author = {Jan Bosch},
  title = {Design and Use of Software Architectures: Adopting and Evolving a Product Line Approach},
  publisher = {Pearson Education (Addison-Wesley \& ACM Press)},
  year = {2000},
  isbn = {0-201-67494-7},
  month = may}

@phdthesis{Bosc01a,
  author = {Robert Bosch},
  title = {Using Visualization to Understand the Behaviour of Computer Systems},
  year = {2001},
  school = {Stanford University},
  month = aug}

@article{Bosc94a,
  author = {Jan Bosch},
  title = {{Relations as Object Model Components}},
  journal = {Journal of Programming Languages},
  volume = {4},
  pages = {39--61},
  year = {1994}}

@inproceedings{Bosc96a,
  author = {Jan Bosch},
  title = {Language Support for Design Patterns},
  booktitle = {Proceedings of TOOLS '96},
  pages = {197--210},
  year = {1996}}

@book{Bosc97a,
  title = {Object-Oriented Technology: {ECOOP}'97 Workshop Reader},
  volume = 1357,
  publisher = {Springer-Verlag},
  year = {1997},
  editor = {Jan Bosch \& Stuart Mitchell},
  isbn = {3-540-64039-8},
  series = {LNCS}}

@inproceedings{Bosc97b,
  author = {Jan Bosch},
  title = {Design Patterns {\&} Frameworks: On the Issue of Language Support},
  booktitle = {Object-Oriented Technology: {ECOOP}'97 Workshop Reader},
  volume = {1357},
  pages = {133--136},
  publisher = {Springer},
  year = {1997},
  editor = {Jan Bosch and Stewart Mitchell},
  series = {Lecture Notes in Computer Science}}

@article{Bosc97c,
  author = {Jan Bosch},
  title = {Design Patterns as Language Constructs},
  journal = {Journal of Object-Oriented Programming},
  year = {1997},
  month = nov}

@article{Bosc99a,
  author = {Jan Bosch},
  title = {Superimposition: {A} Component Adaptation Technique},
  journal = {Information and Software Technology},
  volume = {41},
  pages = {257--273},
  year = {1999},
  month = mar,
  number = {5}}

@techreport{Bosh97a,
  author = {Marat Boshernitsan and Michael Downes},
  title = {Visual Programming Languages: A Survey},
  year = {1997},
  url = {http://nitsan.org/~maratb/pubs/csd-04-1368.pdf},
  institution = {University of California, Berkeley},
  month = dec,
  number = {Report No. UCB/CSD-04-1368}}

@inproceedings{Boshe04a,
  author = {M. Boshernitsan and S. L. Graham},
  title = {iXj: Interactive Source-to-Source Transformations for Java},
  booktitle = {OOPSLA Companion},
  year = {2004}}

@inproceedings{Boshe07a,
  author = {Boshernitsan, Marat and Graham, L. Susan and Hearst, A. Marti},
  title = {Aligning development tools with the way programmers think about code changes},
  booktitle = {Conference on Human Factors in Computing Systems (CHI '07)},
  year = {2007},
  doi = {10.1145/1240624.1240715},
  month = apr}

@inproceedings{Bosu15a,
  author = {Amiangshu Bosu and Michaela Greiler and Christian Bird},
  title = {{Characteristics of Useful Code Reviews: An Empirical Study at Microsoft}},
  booktitle = {Proceedings of the International Conference on Mining Software Repositories},
  publisher = {{IEEE}},
  year = {2015}}

@inproceedings{Bota91a,
  author = {Rodrigo A. Botafogo and Ben Shneiderman},
  title = {Identifying {Aggregates} in {Hypertext} {Structures}},
  booktitle = {Proceedings CHI '91 (Conference on Human Factors in Computing Systems)},
  pages = {63--74},
  publisher = {ACM Press},
  year = {1991},
  location = {New Orleans, Louisiana, USA}}

@techreport{Boud86a,
  author = {G\'erard Boudol and Ilaria Castellani},
  title = {On the Semantics of Concurrency: Partial Orders and Transition Systems},
  year = {1986},
  institution = {INRIA},
  month = jul,
  number = {550},
  type = {Report no.}}

@techreport{Boud87a,
  author = {G\'erard Boudol and Ilaria Castellani},
  title = {Concurrency and Atomicity},
  year = {1987},
  institution = {INRIA},
  month = nov,
  number = {748},
  type = {Report no.}}

@article{Boud88a,
  author = {G\'erard Boudol and Ilaria Castellani},
  title = {A Non-Interleaving Semantics for {CCS} Based on Proved Transitions},
  journal = {Fundamenta Informaticae},
  volume = {XI},
  pages = {433--452},
  publisher = {North-Holland},
  year = {1988}}

@inproceedings{Boud89a,
  author = {G\'erard Boudol},
  title = {Towards a Lambda-Calculus for Concurrent and Communicating Systems},
  booktitle = {Proceedings TAPSOFT '89},
  volume = {351},
  pages = {149--161},
  publisher = {Springer-Verlag},
  year = {1989},
  editor = {D\'iaz and Orejas},
  series = {LNCS}}

@techreport{Boud92a,
  author = {G\'erard Boudol},
  title = {Asynchrony and the $\pi$-calculus (Note)},
  year = {1992},
  institution = {INRIA Sofia-Antipolis},
  number = {1702},
  type = {Rapporte de Recherche}}

@inproceedings{Boud97a,
  author = {G\'erard Boudol},
  title = {The pi-calculus in direct style},
  booktitle = {Conference Record of {POPL}~'97},
  pages = {228--241},
  year = {1997},
  url = {http://www-sop.inria.fr/meije/personnel/Gerard.Boudol/blue.html}}

@article{Bouj00a,
  author = {Abdulazeez S. Boujarwah and Kassem Saleh and Jehad Al-Dallal},
  title = {Dynamic data flow analysis for {Java} programs.},
  journal = {Information {\&} Software Technology},
  volume = {42},
  pages = {765--775},
  year = {2000},
  number = {11}}

@inproceedings{Bouk06a,
  author = {Salah Bouktif and Yann-Gael Gueheneuc and Giuliano Antoniol},
  title = {Extracting Change-patterns from {CVS} Repositories},
  booktitle = {Proceedings of the 13th Working Conference on Reverse Engineering ({WCRE} 2006)},
  pages = {221--230},
  year = {2006}}

@inproceedings{Boul94a,
  author = {F. Boulanger and H. Delebecque and G. Vdal-Naquet},
  title = {Int\'egration de Modules Synchrones dans un Cycle de D\'eveloppement par Objets},
  booktitle = {Real Time Systems Conference},
  pages = {245--260},
  year = {1994}}

@inproceedings{Bour00a,
  author = {Noury Bouraqadi},
  title = {Concern Oriented Programming using Reflection},
  booktitle = {Workshop on Advanced Separation of Concerns --- OOPSLA 2000},
  year = {2000}}

@article{Bour03a,
  author = {Noury Bouraqadi},
  title = {Safe Metaclass Composition Using Mixin-Based Inheritance},
  journal = {Journal of Computer Languages, Systems and Structures},
  volume = {30},
  pages = {49--61},
  publisher = {Elsevier},
  year = {2004},
  month = apr,
  number = {1-2}}

@inproceedings{Bour05a,
  author = {Noury Bouraqadi and Abdelhak Seriai and Gabriel Leblanc},
  title = {Towards Unified Aspect-Oriented Programming},
  booktitle = {Proceedings of 13th International Smalltalk Conference (ISC'05)},
  year = {2005},
  abstract = {Aspect-Oriented Programming (AOP) is a paradigm that
aims at improving software modularization. Indeed,
aspects are yet another dimension for structuring
applications. The notion of aspect refers to any
cross-cuting property. This definition encompasses
both functional (business) and non-functional
(infrastructure) properties. However, most
approaches for AOP focus on only one category of
aspects: either functional aspects or non-functional
ones. This paper aims at bridging the gap between
those two families. We present a solution for
describing both functional and non-functional
aspects in a uniform fashion. This solution relies
on reflection and mixin-based inheritance.}}

@inproceedings{Bour09a,
  author = {Noury Bouraqadi and Luc Fabresse},
  title = {CLIC: A Component Model Symbiotic with Smalltalk},
  booktitle = {Proceedings of the International Workshop on Smalltalk Technologies},
  publisher = {ACM},
  year = {2009},
  address = {Brest, France},
  keywords = {Component, Smalltalk, Composition},
  month = {aug}}

@misc{Bour10a,
  author = {N. Bouraqadi},
  title = {MetaclassTalk - A Testbed for Exploring Programming Pradigms},
  year = {2002},
  howpublished = {Talk given at the Europeen Smalltalk Users Group (ESUG) 10th Smalltalk Conference, Douai - France},
  keywords = {Metaclass, AOP, Composition},
  month = aug}

@inproceedings{Bour14a,
  author = {Bournoutian, Garo and Orailoglu, Alex},
  title = {On-device objective-C Application Optimization Framework for High-performance Mobile Processors},
  booktitle = {Proceedings of the Conference on Design, Automation \& Test in Europe},
  pages = {85:1--85:6},
  publisher = {European Design and Automation Association},
  year = {2014},
  url = {http://dl.acm.org/citation.cfm?id=2616606.2616711},
  acmid = {2616711},
  address = {3001 Leuven, Belgium, Belgium},
  articleno = {85},
  isbn = {978-3-9815370-2-4},
  location = {Dresden, Germany},
  numpages = {6},
  series = {DATE '14}}

@inproceedings{Bour16a,
  author = {Bouraqadi, Noury and Mason, Dave},
  title = {Mocks, {Proxies}, and {Transpilation} as {Development} {Strategies} for {Web} {Development}},
  booktitle = {Proceedings of the 11th edition of the {International} {Workshop} on {Smalltalk} {Technologies}},
  pages = {1--6},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {http://www.esug.org/data/ESUG2016/IWST/Papers/IWST_2016_paper_23.pdf},
  abstract = {With the advent of HTML 5, we can now develop rich web apps that rival classical standalone apps. This richness together with the portability of web technologies, turned HTML 5 into a viable (and in the case of mobile - essential) solution to develop cross-platform apps. This possibility is heavily dependent on Javascript having acceptable performance, good testability, and a modern development environment. Despite its extensive use in creating highly interactive environments, most Javascript development environments currently use a compile/run paradigm. Similarly, testing is frequently tacked on, rather than being an integrated part of the development cycle. We propose PharoJS which leverages the Smalltalk IDE with a seamless transition from native Smalltalk tests, through proxied browser tests, to full browser-resident tests. We support the standard event-driven browser model and transpile Smalltalk code into efficient Javascript for execution in the browser. We further support testing - both manually and automatically - in a range of browsers to provide assured consistency upon deployment. In addition to transpiling the Smalltalk code to Javascript to perform tests in the browser, we can also run non-interactive tests within the Smalltalk environment. The unique feature we provide is the ability to run interactive tests largely within the Smalltalk IDE, so as to fully exploit the debugging and development environment, while the actual interaction occurs on the browser. We exhibit this new mode of development via a simple application.},
  month = aug,
  series = {{IWST}'16},
  urldate = {2021-06-29}}

@article{Bour78a,
  author = {S.R. Bourne},
  title = {The {UNIX} Shell},
  journal = {Bell System Technical Journal},
  volume = {57},
  pages = {1971--1990},
  year = {1978},
  misc = {July-August},
  month = jul,
  number = {6 (part 2)}}

@inproceedings{Bour94a,
  author = {Marc Bourgois and Jean-Marc Andreoli and Remo Pareschi},
  title = {Concurrency and Communication: Choices in Implementing the Coordination Language {LO}},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {73--92},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {By means of an illustrative application, we discuss
the implementation choices of the rule-based
coordination language LO. Distributed applications
written in LO manifest two levels of granularity,
each with their specific communication paradigm. At
the finer level, individual objects are composed
into agents and communicate through blackboards. At
the coarser level, these agents interact through
broadcasts. This dichotomy determines implementation
choices: Concurrency among agents naturally maps
onto distributed processes (with e.g. RPC), whereas
concurrency among objects maps onto threads (in
shared memory). These four abstractions (objects,
blackboards, agents, and broadcasts) together with
LO 's basic computation paradigm (rules) are
implemented as a class-based run-time library,
thereby enriching classical object-oriented
platforms. Finally we stress the fact that the
resulting run-time library is poly- morphic: The
run-time can manipulate any independently defined
appli- cation object, provided its class respects a
minimal protocol. Run-time polymorphism has turned
out to be the key to composition-based reuse.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@inproceedings{Bour98a,
  author = {Noury Bouraqadi and Thomas Ledoux and Fred Rivard},
  title = {Safe Metaclass Programming},
  booktitle = {Proceedings OOPSLA '98},
  pages = {84--96},
  year = {1998}}

@phdthesis{Bour99a,
  author = {Noury Bouraqadi},
  title = {Un MOP Smalltalk pour l'\'etude de la composition et de la compatibilit\'e des m\'etaclasses. Application \`a la programmation par aspects (A Smalltalk MOP for the Study of Metaclass Composition and Compatibility. Application to Aspect-Oriented Programming - In French)},
  year = {1999},
  school = {Universit\'e de Nantes},
  address = {Nantes, France},
  month = {jul},
  type = {Th\`ese de Doctorat}}

@article{Bour99b,
  author = {Pierre Bourque and Robert Dupuis and Alain Abran},
  title = {The Guide to the Software Engineering Body of Knowledge},
  journal = {IEEE Software},
  volume = {16},
  pages = {35--44},
  publisher = {Elsevier},
  year = {1999},
  month = nov,
  number = {6}}

@inproceedings{Bous12a,
  author = {Boussaidi, Ghizlane El and Belle, Alvine Voaye and Vaucher, Stephane and Mili, Hafedh},
  title = {Reconstructing Architectural Views from Legacy Systems},
  booktitle = {Reverse Engineering ({WCRE}), 2012 19th Working Conference on},
  pages = {345--354},
  year = {2012},
  organization = {IEEE}}

@inproceedings{Bous15a,
  title = {A Generative Approach to Define Rich Domain-Specific Trace Metamodels},
  author = {Bousse, Erwan and Mayerhofer, Tanja and Combemale, Benoit and Baudry, Benoit},
  url = {https://inria.hal.science/hal-01154225},
  booktitle = {11th European Conference on Modelling Foundations and Applications ({ECMFA})},
  address = {L'Aquila, Italy},
  year = {2015},
  month = jul,
  pdf = {https://inria.hal.science/hal-01154225/file/ecmfa-final.pdf}}

@inproceedings{Bous16a,
  author = {Bousse, Erwan and Degueule, Thomas and Vojtisek, Didier and Mayerhofer, Tanja and Deantoni, Julien and Combemale, Benoit},
  title = {Execution Framework of the GEMOC Studio},
  booktitle = {International Conference on Software Language Engineering},
  pages = {84--89},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2997364.2997384},
  doi = {10.1145/2997364.2997384},
  isbn = {978-1-4503-4447-0},
  series = {SLE 2016}}

@inproceedings{Bouv96a,
  author = {Pascal Bouvry and Farhad Arbab},
  title = {Visifold*: {A} Visual Environment for a Coordination Language},
  booktitle = {Proceedings of COORDINATION '96},
  volume = {1061},
  pages = {403--406},
  publisher = {Springer-Verlag},
  year = {1996},
  editor = {Paolo Ciancarini and Chris Hankin},
  month = apr,
  series = {LNCS}}

@book{Bove05a,
  author = {Bovet, Daniel P and Cesati, Marco},
  title = {Understanding the Linux Kernel: from I/O ports to process management},
  publisher = {" O'Reilly Media, Inc."},
  year = {2005}}

@inproceedings{Bowe17a,
  author = {Bowes, David and Hall Tracy and Petri\'e, Jean and Shippey, Thomas and Turhan, Burak},
  title = {How good are my tests?},
  booktitle = {Workshop on Emerging Trends in Software Metrics (WETSoM)},
  publisher = {IEEE/ACM},
  year = {2017}}

@article{Bowe82a,
  author = {K. A. Bowen and R. A. Kowalski},
  title = {Amalgamating language and metalanguage in logic programming},
  journal = {Logic programming, volume 16 of {API}C studies in data processing},
  pages = {153--172},
  publisher = {Academic Press},
  year = {1982},
  editor = {K. L. Clark and S.-A. Tarnlund}}

@inproceedings{Bowm98a,
  author = {I. T. Bowman and R. C.Holt},
  title = {Software Architecture Recovery Using Conway's Law},
  booktitle = {Conference of the Centre for Advanced Studies on Collaborative Research (CASCON)},
  pages = {23--133},
  year = {1998}}

@inproceedings{Bowm99a,
  author = {Ivan T. Bowman and Richard C. Holt and Neil V. Brewster},
  title = {Linux as a case study: its extracted software architecture},
  booktitle = {International Conference on Software Engineering (ICSE'99)},
  pages = {555--563},
  publisher = {IEEE CS},
  year = {1999},
  isbn = {1-58113-074-0}}

@inproceedings{Bown98a,
  author = {I. Bowman and R. Holt},
  title = {Software Architecture Recovery Using Conway's Law},
  booktitle = {Proceedings of the Centre for Advanced Studies Conference, CASCON'98},
  pages = {123--133},
  year = {1998},
  month = {nov}}

@book{Box02a,
  author = {Box, Don and Pattison, Ted},
  title = {Essential. NET: The common language runtime},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {2002}}

@inproceedings{Boya02a,
  author = {C. Boyapati and S. Khurshid and D. Marinov},
  title = {Korat: Automated testing based on {Java} predicates},
  booktitle = {Proceedings of the International Symposium on Software Testing and Analysis (ISSTA'02)},
  pages = {123--133},
  publisher = {ACM},
  year = {2002},
  address = {Roma, Italy}}

@article{Boya03,
  author = {Boyapati, Chandrasekhar and Liskov, Barbara and Shrira, Liuba and Moh, Chuang-Hue and Richman, Steven},
  title = {Lazy modular upgrades in persistent object stores},
  journal = {SIGPLAN Not.},
  volume = {38},
  pages = {403--417},
  publisher = {ACM},
  year = {2003},
  url = {10.1145/949343.949341},
  doi = {10.1145/949343.949341},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {11}}

@inproceedings{Boya03a,
  author = {Boyapati, Chandrasekhar and Salcianu, Alexandru and Beebee,Jr., William and Rinard, Martin},
  title = {Ownership types for safe region-based memory management in real-time Java},
  booktitle = {PLDI '03: Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation},
  pages = {324--337},
  publisher = {ACM},
  year = {2003},
  doi = {10.1145/781131.781168},
  address = {New York, NY, USA},
  isbn = {1-58113-662-5},
  location = {San Diego, California, USA}}

@inproceedings{Boya03b,
  author = {Chandrasekhar Boyapati and Barbara Liskov and Liuba Shrira},
  title = {Ownership types for object encapsulation},
  booktitle = {Principles of Programming Languages (POPL'03)},
  pages = {213--223},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/604131.604156},
  isbn = {1-58113-628-5},
  location = {New Orleans, Louisiana, USA}}

@misc{Boyd93a,
  author = {Nik Boyd},
  title = {Modules: Encapsulating Behavior in {Smalltalk}},
  year = {1993},
  howpublished = {The {Smalltalk} Report 2(5)},
  month = feb}

@techreport{Boye94a,
  author = {Niels Boyen and Carine Lucas and Patrick Steyaert},
  title = {Generalised Mixin-based Inheritance to Support Multiple Inheritance},
  year = {1994},
  institution = {Vrije Universiteit Brussel},
  note = {vub-prog-tr-94-12},
  number = {12}}

@inproceedings{Boyl01a,
  author = {John Boyland and James Noble and William Retert},
  title = {Capabilities for Sharing, A Generalisation of Uniqueness and Read-Only},
  booktitle = {Proceedings ECOOP 2001},
  pages = {2--27},
  publisher = {Springer},
  year = {2001},
  month = jun,
  number = {2072},
  series = {LNCS}}

@inproceedings{Boyl01b,
  author = {John Boyland},
  title = {Alias burying: unique variables without destructive reads},
  booktitle = {Software Practive and Experience},
  year = {2001}}

@inproceedings{Boyl03a,
  author = {Boyland, John},
  title = {Checking interference with fractional permissions},
  booktitle = {Proceedings of the 10th international conference on Static analysis},
  pages = {55--72},
  publisher = {Springer-Verlag},
  year = {2003},
  url = {http://dl.acm.org/citation.cfm?id=1760267.1760273},
  acmid = {1760273},
  address = {Berlin, Heidelberg},
  isbn = {3-540-40325-6},
  location = {San Diego, CA, USA},
  numpages = {18},
  series = {SAS'03}}

@misc{Boyl07a,
  author = {Boyland, John},
  title = {Semantics of Fractional Permissions with Nesting},
  year = {2007}}

@inproceedings{Boyl96a,
  author = {John Boyland and Giuseppe Castagna},
  title = {Type-Safe Compilation of Covariant Specialization: {A} Practical Case},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {3--25},
  publisher = {Springer-Verlag},
  year = {1996},
  url = {ftp://ftp.ens.fr/pub/dmi/users/castagna/o2.ps.Z},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Bozo11a,
  title = {RefactorErl - Source Code Analysis and Refactoring in Erlang},
  author = {Boz{\'o}, Istv{\'a}n and Horp{\'a}csi, D{\'a}niel and Horv{\'a}th, Zolt{\'a}n and Kitlei, R{\'o}bert and Koszegi, Judit and Tejfel, M. and T{\'o}th, Melinda},
  booktitle = {Proceedings of the 12th Symposium on Programming Languages and Software Tools, ISBN 978-9949-23-178-2},
  journal = {SPLST'11 - Proceedings 12th Symposium on Programming Languages and Software Tools},
  address = {Tallin, Estonia},
  pages = {138-148},
  year = {2011},
  month = oct
}

@inproceedings{Bra10a,
  author = {Bracha, Gilad and von der Ah{\'e}, Peter and Bykov, Vassili and Kashai, Yaron and Maddox, William and Miranda, Eliot},
  title = {Modules {A}s {O}bjects in {N}ewspeak},
  booktitle = {European Conference on Object-oriented Programming},
  year = {2010},
  series = {ECOOP'10}}

@article{Brab00a,
  author = {Claus Brabrand and Anders Moller and Mikkel Ricky and Michael I. Schwartzbach},
  title = {PowerForms: Declarative Client-side Form Field Validation},
  journal = {World Wide Web Journal},
  volume = {3},
  pages = {205--314},
  year = {2000},
  number = {4}}

@article{Brab07a,
  author = {Claus Brabranda and Michael I. Schwartzbach},
  title = {The metafront system: Safe and extensible parsing and transformation},
  journal = {Science of Computer Programming},
  volume = {68},
  pages = {2--20},
  publisher = {Elsevier},
  year = {2007},
  number = {1}}

@book{Brac02a,
  author = {Ted Bracht},
  title = {The Dolphin {Smalltalk} Companion},
  publisher = {Addison Wesley},
  year = {2002},
  isbn = {0-201-73793-0}}

@misc{Brac04a,
  author = {Gilad Bracha},
  title = {Pluggable Type Systems},
  year = {2004},
  url = {http://prog.vub.ac.be/~wdmeuter/RDL04/papers/Bracha.pdf},
  cvs = {EgRDL2004},
  month = oct,
  note = {{OOPSLA} Workshop on Revival of Dynamic Languages}}

@inproceedings{Brac04b,
  author = {Gilad Bracha and David Ungar},
  title = {Mirrors: design principles for meta-level facilities of object-oriented programming languages},
  booktitle = {Proceedings of the International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'04), ACM SIGPLAN Notices},
  pages = {331--344},
  publisher = {ACM Press},
  year = {2004},
  url = {http://bracha.org/mirrors.pdf},
  address = {New York, NY, USA}}

@article{Brac07a,
  author = {Gilad Bracha},
  title = {Executable Grammars in {Newspeak}},
  journal = {Electron. Notes Theor. Comput. Sci.},
  volume = {193},
  pages = {3--18},
  publisher = {Elsevier Science Publishers B. V.},
  year = {2007},
  url = {http://bracha.org/executableGrammars.pdf},
  doi = {10.1016/j.entcs.2007.10.004},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {1571-0661}}

@inproceedings{Brac09a,
  author = {Bracha, Gilad and von der Ah{\'e}, Peter and Bykov, Vassili and Kashai, Yaron and Maddox, William and Miranda, Eliot},
  title = {Modules as Objects in Newspeak},
  booktitle = {Proceedings of the 24th European conference on Object-oriented programming},
  pages = {405--428},
  publisher = {Springer-Verlag},
  year = {2010},
  url = {http://dl.acm.org/citation.cfm?id=1883978.1884007},
  acmid = {1884007},
  address = {Berlin, Heidelberg},
  editor = {Theo D'Hondt},
  isbn = {3-642-14106-4, 978-3-642-14106-5},
  location = {Maribor, Slovenia},
  numpages = {24},
  series = {ECOOP'10}}

@misc{Brac10a,
  author = {Gilad Bracha},
  title = {Newspeak Programming Language Draft Specification Version 0.06},
  year = {2010}}

@misc{Brac10b,
  author = {Gilad Bracha},
  title = {Linguistic Reflection via Mirrors. Talk at HPI Potsdam},
  year = {2010},
  howpublished = {\url{http://bracha.org/Site/Talks.html}}}

@incollection{Brac85a,
  author = {Ronald J. Brachman},
  title = {On the Epistemological Status of Semantic Networks},
  booktitle = {Readings in Knowledge Representation},
  pages = {191--215},
  publisher = {Morgan Kaufmann Publishers, Inc},
  year = {1985},
  address = {California},
  editor = {Ronald J. Brachman and Hector J. Levesque}}

@article{Brac88a,
  author = {R.J. Brachman},
  title = {The Basics of Knowledge Representation and Reasoning},
  journal = {AT\&T Technical Journal},
  volume = {67},
  pages = {7--24},
  year = {1988},
  month = jan,
  number = {1}}

@inproceedings{Brac90a,
  author = {Gilad Bracha and William Cook},
  title = {Mixin-based Inheritance},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {303--311},
  year = {1990},
  month = oct}

@techreport{Brac91a,
  author = {Gilad Bracha and Gary Lindstrom},
  title = {Modularity Meets Inheritance},
  year = {1991},
  misc = {Oct. 13},
  institution = {University of Utah, Dept. Comp. Sci.},
  month = oct,
  type = {UUCS-91-017}}

@phdthesis{Brac92a,
  author = {Gilad Bracha},
  title = {The Programming Language {Jigsaw}: Mixins, Modularity and Multiple Inheritance},
  year = {1992},
  school = {Dept. of Computer Science, University of Utah},
  month = mar}

@inproceedings{Brac92b,
  author = {Gilad Bracha and Gary Lindstrom},
  title = {Modularity Meets Inheritance},
  booktitle = {Proceedings of the IEEE International Conference on Computer Languages},
  pages = {282--290},
  year = {1992},
  month = apr}

@inproceedings{Brac93a,
  author = {Gilad Bracha and David Griswold},
  title = {{Strongtalk}: Typechecking {Smalltalk} in a Production Environment},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {215--230},
  year = {1993},
  url = {http://bracha.org/oopsla93.ps},
  month = oct}

@inproceedings{Brac98a,
  author = {Gilad Bracha and Martin Odersky and David Stoutamire and Philip Wadler},
  title = {Making the future safe for the past: adding genericity to the {Java} programming language},
  booktitle = {Proceedings OOPSLA '98, ACM SIGPLAN Notices},
  pages = {183--200},
  publisher = {ACM Press},
  year = {1998},
  doi = {10.1145/286936.286957},
  isbn = {1-58113-005-8},
  location = {Vancouver, British Columbia, Canada}}

@inproceedings{Brad92a,
  author = {Kathleen Brade and Mark Guzdial and Mark Steckel and Elliot Soloway},
  title = {Whorf: A Visualization Tool for Software Maintenance},
  booktitle = {Proceedings of IEEE Workshop on Visual Languages},
  pages = {148--154},
  publisher = {IEEE Society Press},
  year = {1992}}

@inproceedings{Brad97a,
  author = {J. Bradley Chen and Bradley D. D. Leupen},
  title = {Improving Instruction Locality with Just-in-Time Code Layout},
  booktitle = {Large-Scale System Administration of Windows {NT} Workshop (Large-Scale System Administration of Windows {NT} Workshop)},
  publisher = {{USENIX} Association},
  year = {1997},
  url = {https://www.usenix.org/conference/nt-97/improving-instruction-locality-just-time-code-layout},
  address = {Seattle, WA},
  month = aug}

@inproceedings{Brag10a,
  author = {Bragdon, Andrew and Zeleznik, Robert and Reiss, Steven P. and Karumuri, Suman and Cheung, William and Kaplan, Joshua and Coleman, Christopher and Adeputra, Ferdi and LaViola,Jr., Joseph J.},
  title = {Code bubbles: a working set-based interface for code understanding and maintenance},
  booktitle = {CHI '10: Proceedings of the 28th international conference on Human factors in computing systems},
  pages = {2503--2512},
  publisher = {ACM},
  year = {2010},
  doi = {10.1145/1753326.1753706},
  address = {New York, NY, USA},
  isbn = {978-1-60558-929-9},
  location = {Atlanta, Georgia, USA}}

@incollection{Bram10a,
  author = {Brambilla, Marco and Fraternali, Piero and Molteni, Emanuele},
  title = {A Tool for Model-Driven Design of Rich Internet Applications Based on {AJAX}},
  booktitle = {Handbook of Research on Web 2.0, 3.0, and X.0: Technologies, Business, and Social Applications},
  pages = {96--118},
  publisher = {IGI Global},
  year = {2010},
  url = {https://www.igi-global.com/chapter/tool-model-driven-design-rich/39166},
  abstract = {This chapter describes how the design tool {WebRatio} (and its companion conceptual model {WebML}) have been extended to support the new requirements imposed by rich Internet applications ({RIAs}), that are recognized to be one of the main innovations that lead to the Web 2.0 revolution. Complex interactions such as drag and drop, dynamic resizing of visual components, graphical editing of objects, and partial page refresh are addressed by the {RIA} extensions of {WebRatio}. The chapter discusses what kinds of modelling primitives are required for specifying such patterns and how these primitives can be integrated in a {CASE} tool. Finally, a real industrial case is presented in which the novel {RIA} features are successfully applied.},
  date = {2010},
  isbn = {978-1-60566-384-5},
  langid = {english},
  note = {10.4018/978-1-60566-384-5.ch006},
  rights = {Access limited to members},
  urldate = {2018-01-29}}

@book{Bram14a,
  author = {Brambilla, Marco and Fraternali, Piero},
  title = {Interaction flow modeling language: Model-driven UI engineering of web and mobile apps with IFML},
  publisher = {Morgan Kaufmann},
  year = {2014}}

@article{Bran00a,
  author = {Van den Brand, M. G. T. and de Jong, H. A. and Klint, P. and Olivier, P. A.},
  title = {Efficient annotated terms},
  journal = {Softw. Pract. Exper.},
  volume = {30},
  pages = {259--291},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2000},
  address = {New York, NY, USA},
  issn = {0038-0644},
  number = {3}}

@inproceedings{Bran01a,
  author = {van den Brand, M.G.J. and van Deursen, A. and J. Heering and de Jong, H.A. and de Jonge, M. and T. Kuipers and P. Klint and L. Moonen and P.A. Olivier and J. Scheerder and J.J. Vinju and E. Visser and J. Visser},
  title = {The {ASF}+{SDF} {M}eta-{E}nvironment: a {C}omponent-{B}ased {L}anguage {D}evelopment {E}nvironment},
  booktitle = {CC'01: Proceedings of the 10th International Conference on Compiler Construction},
  volume = {2027},
  pages = {365--370},
  publisher = {Springer-Verlag},
  year = {2001},
  editor = {Reinhard Wilhelm},
  series = {LNCS}}

@inproceedings{Bran02a,
  author = {Mark van den Brand and Jeroen Scheerder and Jurgen J. Vinju and Eelco Visser},
  title = {Disambiguation Filters for Scannerless Generalized {LR} Parsers},
  booktitle = {Compiler Construction (CC'02)},
  volume = {2304},
  pages = {143--158},
  publisher = {Springer-Verlag},
  year = {2002},
  url = {http://www.cs.uu.nl/people/visser/ftp/BSVV02.pdf},
  address = {Grenoble, France},
  editor = {N. Horspool},
  month = apr,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Bran07a,
  author = {M.G.J. van den Brand and M. Bruntink and G.R. Economopoulos and H.A. de Jong and P. Klint and T. Kooiker and T. van der Storm and J.J. Vinju},
  title = {Using {T}he {M}eta-Environment for {M}aintenance and {R}enovation},
  booktitle = {Proceedings of the 11th European Conference on Software Maintenance and Reengineering ({CSMR'07})},
  pages = {331--332},
  publisher = {IEEE Computer Society Press},
  year = {2007}}

@article{Bran07b,
  author = {van den Brand, Mark G. J. and Klint, Paul},
  title = {ATerms for manipulation and exchange of structured data: It's all about sharing},
  journal = {Inf. Softw. Technol.},
  volume = {49},
  pages = {55--64},
  publisher = {Butterworth-Heinemann},
  year = {2007},
  doi = {10.1016/j.infsof.2006.08.009},
  address = {Newton, MA, USA},
  issn = {0950-5849},
  number = {1}}

@inproceedings{Bran10a,
  author = {John Brant and Don Roberts and Bill Plendl and Jeff Prince},
  title = {Extreme Maintenance: Transforming {Delphi} into {C\#}},
  booktitle = {{ICSM}'10},
  year = {2010}}

@inproceedings{Bran94a,
  author = {S\/oren Brandt and Ole Lehrmann Madsen},
  title = {Object-Oriented Distributed Programming in {BETA}},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {185--212},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {This paper describes abstractions that have been
designed to support distributed programming in the
object oriented programming language BETA. The
approach is minimalistic in the sense that a goal is
to provide the essential building blocks on top of
which other distribution related abstractions may be
built. This goal is made easier by demanding for
type orthogonal persistence and distribution as the
full power of the underlying language may then be
used when building higher level abstractions on top
of the basic ones.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@book{Bran94b,
  author = {Linda Branagan and Michael Sierra},
  title = {The Frame Handbook},
  publisher = {O'Reilly \& Associates, Inc.},
  year = {1994},
  isbn = {1-56592-009-0}}

@inproceedings{Bran95a,
  author = {S\/oren Brandt and Ren\'e W. Schmidt},
  title = {The Design of a Meta-Level Architecture for the {BETA} Language},
  booktitle = {Proceedings of META '95: Workshop on Advances in Metaobject Protocols and Reflection at ECOOP '95},
  year = {1995},
  month = aug}

@mastersthesis{Bran95b,
  author = {John Brant},
  title = {HotDraw},
  year = {1995},
  school = {University of Illinois at Urbana-Chanpaign}}

@inproceedings{Bran96a,
  author = {S\/oren Brandt and J\/orgen Lindskov Knudsen},
  title = {Generalising the {BETA} Type System},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {421--448},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Bran97a,
  author = {Mark van den Brand and Alex Sellink and Chris Verhoef},
  title = {Generation of Components for Software Renovation Factories from Context-free Grammars},
  booktitle = {Proceedings of the 4th Working Conference on Reverse Engineering},
  publisher = {IEEE Computer Society Press},
  year = {1997},
  abstract = {We present an approach for the generation of
components for a software renovation factory. These
components are generated from a context-free grammar
definition that recognizes the code that has to be
renovated. We generate analysis and transformation
components that can be instantiated with a specific
transformation or analysis task. We apply our
approach to COBOL and we discuss the construction of
realistic software renovation components using our
approach.},
  editor = {Ira Baxter and Alex Quilici and Chris Verhoef}}

@inproceedings{Bran98a,
  author = {John Brant and Brian Foote and Ralph Johnson and Don Roberts},
  title = {Wrappers to the Rescue},
  booktitle = {Proceedings European Conference on Object Oriented Programming (ECOOP'98)},
  volume = {1445},
  pages = {396--417},
  year = {1998},
  misc = {method wrappers},
  organization = {Springer-Verlag},
  series = {LNCS}}

@inproceedings{Bran98b,
  author = {John Brant and Don Roberts},
  title = {``{Good} {Enough}'' {Analysis} for {Refactoring}},
  booktitle = {Object-Oriented Technology Ecoop '98 Workshop Reader},
  pages = {81--82},
  year = {1998},
  organization = {Springer-Verlag},
  series = {LNCS}}

@book{Bran99,
  author = {Stewart Brand},
  title = {The Clock of the Long Now},
  publisher = {Basic Books},
  year = {1999},
  isbn = {0-465-04512-X}}

@inproceedings{Brant10,
  author = {Brant, John and Roberts, Don and Plendl, Bill and Prince, Jeff},
  title = {Extreme maintenance: {Transforming} {Delphi} into {C}\#},
  booktitle = {Proceedings of the 2010 IEEE International Conference on Software Maintenance},
  volume = {Software Maintenance ({ICSM}), 2010 IEEE International Conference on},
  pages = {1--8},
  publisher = {IEEE Computer Society},
  year = {2010},
  url = {http://dx.doi.org/10.1109/ICSM.2010.5609731},
  doi = {10.1109/ICSM.2010.5609731},
  isbn = {978-1-4244-8630-4},
  abstract = {Sometimes projects need to switch implementation
languages. Rather than stopping software development and
rewriting the project from scratch, transformation rules can map
from the original language to the new language. These rules can
be developed in parallel to standard software development, allowing
the project to be cut over without any loss of development
time, once the rules are complete. This paper presents a migration
project that used transformation rules to successfully convert 1.5
MLOC of Delphi to C\# in 18 months while allowing existing
Delphi development to continue.},
  address = {Washington, DC, USA}}

@phdthesis{Brat93a,
  author = {Svein Erik Bratsberg},
  title = {Evolution and Integration of Classes in Object-Oriented Databases},
  year = {1993},
  school = {The Norwegian Institute of Technology, University of Trondheim},
  month = jun,
  type = {{Ph.D}. Thesis}}

@article{Brau99a,
  title={Towards partially evaluating reflection in Java},
  author={Braux, Mathias and Noy{\'e}, Jacques},
  journal={ACM SIGPLAN Notices},
  volume={34},
  number={11},
  pages={2--11},
  year={1999},
  publisher={ACM New York, NY, USA}}

@inproceedings{Brav04a,
  author = {Martin Bravenboer and Eelco Visser},
  title = {Concrete Syntax for Objects. {Domain}-Specific Language Embedding and Assimilation without Restrictions},
  booktitle = {Proceedings of the 19th ACM SIGPLAN Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA 2004)},
  pages = {365--383},
  publisher = {ACM Press},
  year = {2004},
  address = {Vancouver, Canada},
  editor = {Douglas C. Schmidt},
  month = {oct}}

@inproceedings{Brav06a,
  author = {Martin Bravenboer and {\'E}ric Tanter and Eelco Visser},
  title = {Declarative, Formal, and Extensible Syntax Definition for {AspectJ} -- A Case for Scannerless Generalized-{LR} Parsing},
  booktitle = {Proceedings of the 21st {ACM SIGPLAN} Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA 2006)},
  pages = {209--228},
  publisher = {ACM Press},
  year = {2006},
  address = {Portland, Oregon, USA},
  key = {OOPSLA 2006},
  month = {oct}}

@article{Brav08a,
title = {Stratego/XT 0.17. A language and toolset for program transformation},
journal = {Science of Computer Programming},
volume = {72},
number = {1},
pages = {52-70},
year = {2008},
note = {Special Issue on Second issue of experimental software and toolkits (EST)},
issn = {0167-6423},
doi = {https://doi.org/10.1016/j.scico.2007.11.003},
url = {https://www.sciencedirect.com/science/article/pii/S0167642308000452},
author = {Bravenboer, Martin and Kalleberg, Karl Trygve and Vermaas, Rob and Visser, Eelco},
keywords = {Stratego, Stratego/XT, Program transformation, Rewriting strategies, Rewrite rules, Concrete syntax, Dynamic rewrite rules},
abstract = {Stratego/XT is a language and toolset for program transformation. The Stratego language provides rewrite rules for expressing basic transformations, programmable rewriting strategies for controlling the application of rules, concrete syntax for expressing the patterns of rules in the syntax of the object language, and dynamic rewrite rules for expressing context-sensitive transformations, thus supporting the development of transformation components at a high level of abstraction. The XT toolset offers a collection of flexible, reusable transformation components, and tools for generating such components from declarative specifications. Complete program transformation systems are composed from these components. This paper gives an overview of Stratego/XT 0.17, including a description of the Stratego language and XT transformation tools; a discussion of the implementation techniques and software engineering process; and a description of applications built with Stratego/XT.}
}

@inproceedings{Brav09a,
  author = {Martin Bravenboer and Eelco Visser},
  title = {Parse Table Composition},
  booktitle = {Software Language Engineering},
  volume = {LNCS 5452},
  pages = {74--94},
  publisher = {Springer},
  year = {2009},
  doi = {10.1007/978-3-642-00434-6_6},
  isbn = {978-3-642-00433-9}}

@article{Bray95a,
  author = {Olin Bray and Michael M. Hess},
  title = {Reengineering a Configuration Management System},
  journal = {IEEE Software},
  volume = {12},
  pages = {55--63},
  publisher = {IEEE},
  year = {1995},
  month = jan,
  number = {1}}

@article{Brec01a,
  author = {Brecht, Tim and Arjomandi, Eshrat and Li, Chang and Pham, Hang},
  title = {Controlling garbage collection and heap growth to reduce the execution time of Java applications},
  journal = {ACM Sigplan Notices},
  volume = {36},
  pages = {353--366},
  publisher = {ACM New York, NY, USA},
  year = {2001},
  number = {11}}

@inproceedings{Bree20a,
  author = {Connolly Bree, D\'{e}agl\'{a}n and \`O Cinn\'{e}ide, Mel},
  title = {Inheritance versus Delegation: Which is More Energy Efficient?},
  booktitle = {Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops},
  pages = {323–329},
  publisher = {Association for Computing Machinery},
  year = {2020},
  url = {https://doi.org/10.1145/3387940.3392192},
  doi = {10.1145/3387940.3392192},
  isbn = {9781450379632},
  address = {New York, NY, USA},
  abstract = {Energy consumption of software is receiving more attention as concerns regarding climate change increase. One factor that significantly impacts how much energy is expended by a software application is the design of the software itself. Existing studies find few consistent results regarding the impact of common refactorings on energy consumption, nor do they define a concrete set of metrics that measure the energy efficiency of software. In this paper, we present the results of preliminary experiments that explore the Replace Inheritance with Delegation refactoring, and its inverse, to assess the impact these design-level refactorings have on energy consumption in the Java programming language. In the tested programs, inheritance proved to be more energy efficient than delegation, with a reduction in run time of 77\% and a reduction in average power consumption of 4\%. We subsequently propose a research plan to further explore this problem and observe a number of specific challenges in this area. The primary goals of this research are threefold: (i) to investigate how redundancy in an object-oriented design can contribute to unnecessary energy consumption, (ii) to determine how refactoring of the software can remove this redundancy, and (iii) to develop a general-purpose automated tool to perform this refactoring.},
  numpages = {7},
  keywords = {Software Refactoring, Energy-Aware Software, Electricity Consumption, Code Smells, Design Patterns},
  location = {Seoul, Republic of Korea},
  series = {ICSEW'20}}

@inproceedings{Bree21a,
  author = {Connolly Bree, D\'{e}agl\'{a}n and \'{\O} Cinn\'{e}ide, Mel},
  title = {Automated Refactoring for Energy-Aware Software},
  booktitle = {2021 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  pages = {689-694},
  year = {2021},
  doi = {10.1109/ICSME52107.2021.00082}}

@inproceedings{Bree87a,
  author = {D.E. Breen and P.H. Getto and A.A. Apodaca and D.G. Schmidt and B.D. Sarachan},
  title = {The Clockworks: An Object-Oriented Computer Animation System},
  booktitle = {Proceedings of Eurographics '87},
  pages = {275--282},
  publisher = {Elsevier Science Publishers B.V.},
  year = {1987},
  abstract = {The Clockworks is an object-oriented computer
animation system developed at RPI's Center for
Interactive Computer Graphics. The Clockworks has
the ability to model and graphically simulate
complex 3-D engineering processes. Its interactive
capabilities also allow it to be used as a design
tool. Object-oriented concepts have been utilized in
developing its high-level architecture and its
low-level implementation. The Clockworks is defined
as a collection of objects which communicate with
the user and each other via messages. The actual
implementation involved the creation of an
object-oriented programming methodology in C and
Unix. The complete system provides a rich research
environment for exploring modeling, scripting and
rendering. It also provides an interactive
environment for visual analysis of complex
interacting structures.},
  address = {Amsterdam},
  month = aug}

@inproceedings{Bree89a,
  author = {D.E. Breen and P.H. Getto},
  title = {Object-Oriented Visualization Tools},
  booktitle = {Proceedings of Electronic Imaging '89 East Conference},
  pages = {541--545},
  year = {1989},
  address = {Boston},
  month = oct}

@inproceedings{Bree89b,
  author = {D.E. Breen and P.H. Getto and A.A. Apodaca},
  title = {Object-Oriented Programming in a Conventional Programming Environment},
  booktitle = {Proceedings of 13th Annual International Computer Software and Applications Conference},
  pages = {334--343},
  publisher = {IEEE Computer Society Press},
  year = {1989},
  abstract = {This paper describes a programming methodology that
implements many object-oriented features within a
conventional programming environment. The
methodology was created during the development of a
computer animation system, The Clockworks. The
methodology supports such object-oriented features
as objects with variables and methods, class
hierarchies, variable and method inheritance, object
instantiation and message passing. The methodology
does not employ any special keywords or language
extensions; thus removing the need for a
preprocessor or compiler. The methodology has been
implemented in a C/Unix environment. This allows the
environment and any system developed within it to be
ported to a wide variety of computers which support
Unix. The methodology provides many object-oriented
features and associated benefits. It also provides
all of the benefits of a C/Unix environment
including portability, a rich variety of development
tools, and efficiency.},
  address = {Orlando, FL},
  month = sep}

@inproceedings{Bree89c,
  author = {D.E. Breen and V. Kuehn},
  title = {Message-Based Object-Oriented Interaction Modeling},
  booktitle = {Proceedings of Eurographics '89 Proceedings},
  pages = {489--503},
  publisher = {Elsevier Science Publishers B.V.},
  year = {1989},
  abstract = {This paper describes a message-based object-oriented
tool for exploring mathematically-based interactions
which produce complex motions for computer
animation. The tool has been implemented as a class
in the object-oriented computer animation system The
Clockworks. It supports the definition of complex
interactions between geometric objects through the
specification of messages to the interacting
objects. Our approach is general, flexible and
powerful. The tool itself is not hardcoded to a
particular application. It simply sends the messages
specified by the user. Messages are specified as
strings which may be stored, modified and
interpreted. Since the tool is part of The
Clockworks it may utilize many of the powerful
features of the system, including data structuring,
mathematical, geometric modeling, and rendering
objects. The tool has been used to explore a general
spring and mass model, and the response of objects
in a vector field.},
  address = {Hamburg},
  month = sep}

@inproceedings{Bree89d,
  author = {D.E. Breen},
  title = {Choreographing Goal-Oriented Motion Using Cost Functions},
  booktitle = {State-of-the-art in Computer Animation (Computer Animation '89 Conference Proceedings)},
  pages = {141--151},
  publisher = {Springer-Verlag},
  year = {1989},
  abstract = {This paper describes a technique that employs cost
functions to produce complex motions. Cost functions
can be used to define goal-oriented motions and
actions. A cost function can be defined whose
variables are the animated parameters of a scene.
The parameters are modified in such a way to
minimize the cost function. The minimum cost
configuration can be viewed as a "key goal"
configuration. The values of the parameters are
stored at certain intervals during the minimization
process. This produces a path through the parameter
space of the model being animated. By incrementally
moving along the parameter space curve and updating
the model defined by the parameters, an animation of
the model performing a goal-oriented action may be
produced. A class has been created and integrated
into the object-oriented system, The Clockworks,
which encapsulates the algorithm and data structures
necessary to implement the cost function approach.},
  address = {Tokyo},
  editor = {N. Magnenat-Thalmann and D. Thalmann},
  month = jun}

@inproceedings{Bree89e,
  author = {D.E. Breen and M.J. Wozny},
  title = {Message-Based Choreography for Computer Animation},
  booktitle = {State-of-the-art in Computer Animation (Computer Animation '89 Conference Proceedings)},
  pages = {69--82},
  publisher = {Springer-Verlag},
  year = {1989},
  abstract = {This paper describes three message-based approaches
to choreography in computer animation. These
approaches may be placed in the following
categories, scripted choreography, choreography
driven by cost functions, and choreography produced
by interactions of autonomous entities. The main
concept that all of these forms of choreography
share is that they all rely upon the message passing
facilities of an object-oriented computer animation
system, The Clockworks. There are numerous benefits
derived from the message-based approach to computer
animation choreography. These include modularity,
unrestricted modification of parameters, interactive
alteration of messages, access to modeling and
graphics tools, and a versatile interpretive
language.},
  address = {Tokyo},
  editor = {N. Magnenat-Thalmann and D. Thalmann},
  month = jun}

@inproceedings{Breg01a,
  author = {Breg, Fabian and Polychronopoulos, Constantine D.},
  title = {Java virtual machine support for object serialization},
  booktitle = {Proceedings of the 2001 joint ACM-ISCOPE conference on Java Grande},
  pages = {173--180},
  publisher = {ACM},
  year = {2001},
  url = {http://doi.acm.org/10.1145/376656.376846},
  doi = {10.1145/376656.376846},
  acmid = {376846},
  address = {New York, NY, USA},
  isbn = {1-58113-359-6},
  location = {Palo Alto, California, United States},
  numpages = {8},
  series = {JGI '01}}

@article{Brei01a,
  author = {Leo Breiman},
  title = {Random forests},
  journal = {Machine learning},
  volume = {45},
  pages = {5--32},
  publisher = {Springer},
  year = {2001},
  date-added = {2014-11-16 22:20:54 +0000},
  date-modified = {2014-11-16 22:21:03 +0000},
  number = {1}}

@techreport{Brei92a,
  author = {Christian Breiteneder and Laurent Dami and Simon Gibbs and Vicki de Mey and Dennis Tsichritzis},
  title = {Telepresence in Shared Virtual Worlds},
  pages = {265--274},
  year = {1992},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@inproceedings{Brei92b,
  author = {Christian Breiteneder and Simon Gibbs and Dennis Tsichritzis},
  title = {Modelling of Audio/Video Data},
  booktitle = {Proceedings of the 11th International Conference on the Entity Relationship Approach},
  year = {1992},
  address = {Karlsruhe},
  month = oct,
  note = {To appear}}

@techreport{Brei93a,
  author = {Christian Breiteneder},
  title = {They Shoot Video Actors, Don't They?},
  pages = {65--67},
  year = {1993},
  abstract = {The purpose of this summary is to serve as a pointer
to a digital video that is available via anonymous
ftp and to give some information concerning the
video production in the video actors project.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Visual Objects}}

@inproceedings{Breu04a,
  author = {Silvia Breu and Jens Krinke},
  title = {Aspect Mining Using Event Traces},
  booktitle = {Proceedings of International Conference on Automated Software Engineering (ASE 2004)},
  pages = {310--315},
  year = {2004}}

@inproceedings{Breu06a,
  author = {Silvia Breu and Thomas Zimmermann},
  title = {Mining Aspects from Version History},
  booktitle = {Proceedings of the 21st IEEE International Conference on Automated Software Engineering (ASE'06)},
  pages = {221--230},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/ASE.2006.50},
  address = {Washington, DC, USA},
  priority = {4}}

@inproceedings{Breu06b,
  author = {Silvia Breu and Thomas Zimmermann and Christian Lindig},
  title = {Mining eclipse for cross-cutting concerns},
  booktitle = {MSR '06: Proceedings of the 2006 international workshop on Mining software repositories},
  pages = {94--97},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1137983.1138006},
  address = {New York, NY, USA},
  isbn = {1-59593-397-2},
  location = {Shanghai, China}}

@inproceedings{Breu08a,
  author = {M. Breugelmans and Van Rompaey, B.},
  title = {{TestQ}: Exploring structural and maintenance characteristics of unit test suites},
  booktitle = {International Workshop on Advanced Software Development Tools and Techniques (WASDeTT)},
  year = {2008}}

@incollection{Breu91a,
  author = {P.T. Breuer and K.C. Lano},
  title = {Hunting for Objects in the {COBOL} Jungle},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@book{Breu91b,
  author = {R. Breu},
  title = {Algebraic Specification Techniques in Object Oriented Programming Environments},
  volume = {562},
  publisher = {Springer-Verlag},
  year = {1991},
  isbn = {3-540-54972-2},
  series = {LNCS}}

@inproceedings{Bria02a,
  author = {Lionel C. Briand and J\"urgen W\"ust},
  title = {Empirical studies of quality models in object-oriented systems},
  booktitle = {Advances in Computers},
  pages = {97--166},
  publisher = {Academic Press},
  year = {2002}}

@inproceedings{Bria02e,
  author = {Brian S. Mitchell and Spiros Mancoridis},
  title = {Using Heuristic Search Techniques To Extract Design Abstractions From Source Code},
  booktitle = {Proceedings of GECCO'02},
  pages = {1375--1382},
  publisher = {Morgan Kaufmann Publishers Inc.},
  year = {2002},
  address = {San Francisco, CA, USA},
  isbn = {1-55860-878-8}}

@inproceedings{Bria03a,
  author = {Brian S. Mitchell},
  title = {A Heuristic Approach to Solving the Software Clustering Problem},
  booktitle = {{ICSM} '03: Proceedings of the International Conference on Software Maintenance},
  pages = {285},
  publisher = {IEEE Computer Society},
  year = {2003},
  address = {Washington, DC, USA},
  isbn = {0-7695-1905-9}}

@article{Bria04a,
  author = {Erik Arisholm and Lionel C. Briand and Audun Foyen},
  title = {Dynamic Coupling Measurement for Object-Oriented Software},
  journal = {IEEE Transactions on Software Engineering},
  volume = {30},
  pages = {491--506},
  year = {2004},
  url = {http://csdl.computer.org/comp/trans/ts/2004/08/e0491abs.htm},
  number = {8}}

@article{Bria06a,
  author = {Lionel C. Briand and Yvan Labiche and Johanne Leduc},
  title = {Toward the Reverse Engineering of UML Sequence Diagrams for Distributed Java Software},
  journal = {IEEE Transactions on Software Engineering},
  volume = {32},
  pages = {642--663},
  publisher = {IEEE Press},
  year = {2006},
  doi = {10.1109/TSE.2006.96},
  number = {9}}

@article{Bria08a,
  author = {Brian S. Mitchell and Spiros Mancoridis},
  title = {On the evaluation of the Bunch search-based software modularization algorithm},
  journal = {Soft Computing - A Fusion of Foundations, Methodologies and Applications},
  volume = {12},
  pages = {77--93},
  publisher = {Springer Berlin / Heidelberg},
  year = {2008},
  doi = {10.1007/s00500-007-0218-3},
  address = {Berlin},
  issn = {1433-7479},
  number = {1}}

@article{Bria17a,
  author = {Lionel Briand and Domenico Bianculli and Shiva Nejati and Fabrizio Pastore and Mehrdad Sabetzadeh},
  title = {The Case for Context-Driven Software Engineering Research},
  journal = {IEEE Software},
  year = {2017},
  month = sep}

@article{Bria96a,
  author = {Lionel C. Briand and Sandro Morasca and Victor Basili},
  title = {Property-Based Software Engineering Measurement},
  journal = {Transactions on Software Engineering},
  volume = {22},
  pages = {68--86},
  year = {1996},
  number = {1}}

@inproceedings{Bria97a,
  author = {Briand, Lionel and Devanbu, Prem and Melo, Walcelio},
  title = {An investigation into coupling measures for C++},
  booktitle = {ICSE '97: Proceedings of the 19th international conference on Software engineering},
  pages = {412--421},
  publisher = {ACM},
  year = {1997},
  doi = {10.1145/253228.253367},
  address = {New York, NY, USA},
  isbn = {0-89791-914-9},
  location = {Boston, Massachusetts, United States}}

@article{Bria98a,
  author = {Lionel C. Briand and John W. Daly and J{\"u}rgen K. W{\"u}st},
  title = {A {Unified} {Framework} for {Cohesion} {Measurement} in {Object}-{Oriented} {Systems}},
  journal = {Empirical Software Engineering: An International Journal},
  volume = {3},
  pages = {65--117},
  publisher = {Kluwer Academic Publishers},
  year = {1998},
  number = {1}}

@article{Bria99a,
  author = {Lionel C. Briand and John W. Daly and J\"urgen K. W\"ust},
  title = {A {Unified} {Framework} for {Coupling} {Measurement} in {Object}-{Oriented} {Systems}},
  journal = {IEEE Transactions on Software Engineering},
  volume = {25},
  pages = {91--121},
  year = {1999},
  url = {http://dx.doi.org/10.1109/32.748920},
  doi = {10.1109/32.748920},
  deadurl = {http://www.ccse.kfupm.edu.sa/~sohel/oometer/references/unified%20coupling%20framework-%20briand.pdf},
  number = {1}}

@inproceedings{Bria99b,
  author = {Lionel C. Briand and John W. Daly and J\"urgen K. W\"ust},
  title = {Using Coupling Measurement for Impact Analysis in Object-Oriented Systems},
  booktitle = {Proceedings of the 21st International Conference on Software Engineering (ICSE 1999)},
  pages = {475--482},
  year = {1999},
  url = {http://www.iese.fraunhofer.de/network/ISERN/pub/technical_reports/isern-99-03.pdf},
  doi = {10.1109/ICSM.1999.792645 http://www.iese.fraunhofer.de/network/ISERN/pub/technical_reports/isern-99-03.pdf}}

@inproceedings{Bric00a,
  author = {Johan Brichau},
  title = {Declarative Meta Programming for a Language ExtensibilityMechanism},
  booktitle = {ECOOP 2000 Workshop on Reflection and Meta Level Architectures},
  year = {2000}}

@inproceedings{Bric00b,
  author = {Johan Brichau},
  title = {Declarative Composable Aspects},
  booktitle = {OOPSLA Workshop on Advanced Separation of Concerns in Object-Oriented Systems},
  year = {2000}}

@inproceedings{Bric02a,
  author = {Johan Brichau and Kris Gijbels and Roel Wuyts},
  title = {Towards a Linguistic Symbiosis of an Object-oriented and a Logic Programming Language},
  booktitle = {Proceedings of the Workshop on Multiparadigm Programming with Object-Oriented Languages (MPOOL 2002)},
  year = {2002}}

@inproceedings{Bric02b,
  author = {J. Brichau and K. Mens and K. De Volder},
  title = {Building Composable Aspect-Specific Languages with Logic Metaprogramming},
  booktitle = {Proceedings of the 1st ACM SIGPLAN/SIGSOFT Conference on Generative Programming and Component Engineering (GPCE 2002)},
  volume = {2487},
  publisher = {Springer-Verlag},
  year = {2002},
  month = oct,
  series = {LNCS}}

@techreport{Bric05a,
  author = {J. Brichau and M. Haupt},
  title = {Survey of Aspect-oriented Languages and Execution Models},
  year = {2005},
  institution = {AOSD-Europe-VUB-01},
  month = may}

@book{Brif96a,
  author = {Xavier Briffault and G\'erard Sabah},
  title = {Smalltalk: Programmation orient\'ee object et d\'eveloppement d'applications},
  publisher = {Eyrolles},
  year = {1996},
  isbn = {2-212-08914-7}}

@book{Brig06a,
  author = {Walter Bright},
  title = {D Programming Language, Contract Programming},
  publisher = {Digital Mars},
  year = {2006}}

@inproceedings{Brig94a,
  author = {Ted L. Briggs and John Werth},
  title = {A Specification Language for Object-Oriented Analysis and Design},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {365--385},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Bril01a,
  author = {Reinder J. Bril and Andr\'e Postma},
  title = {An Architectural Connectivity Metric and Its Support for Incremental Re-architecting of Large Legacy Systems},
  booktitle = {Proceedings of International Workshop on Program Comprehension (IWPC'01)},
  pages = {269--280},
  publisher = {IEEE CS},
  year = {2001}}

@techreport{Brin86a,
  author = {Ed Brinksma and Giuseppe Scollo},
  title = {Formal Notions of Implementation and Conformance in {LOTOS}},
  year = {1986},
  institution = {Twente University of technology},
  month = dec,
  number = {INF-86-13},
  type = {Memorandum}}

@incollection{Brin87a,
  author = {Ed Brinksma and Giuseppe Scollo and Chris Steenbergen},
  title = {{LOTOS} Specifications, Their Implementations and Their Tests},
  booktitle = {Protocol Specification, Testing and Verification VI},
  pages = {349--360},
  publisher = {North Holland},
  year = {1987},
  editor = {G. Bochmann and B. Sarikaya}}

@techreport{Brin87b,
  author = {Ed Brinksma},
  title = {On the Existence of Canonical Testers},
  year = {1987},
  institution = {Twente University of technology},
  month = jan,
  number = {INF-87-5},
  type = {Memorandum}}

@incollection{Brin89a,
  author = {Ed Brinksma},
  title = {A Theory for the Derivation of Tests},
  booktitle = {Protocol Specification, Testing and Verification VIII},
  publisher = {North Holland},
  year = {1989},
  editor = {S. Aggarwal and K. Sabnani}}

@inproceedings{Brin95a,
  author = {Sergey Brin and James Davis and H\'ector Garc{\'\i}a-Molina},
  title = {Copy Detection Mechanisms for Digital Documents},
  booktitle = {Proceedings {ACM} {SIGMOD} Annual Conference},
  year = {1995},
  country = {CA},
  location = {San Jose},
  month = may}

@inproceedings{Brio87a,
  author = {Jean-Pierre Briot and Akinori Yonezawa},
  title = {Inheritance and Synchronization in Concurrent {OOP}},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {32--40},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Brio89a,
  author = {Jean-Pierre Briot and Pierre Cointe},
  title = {Programming with Explicit Metaclasses in {Smalltalk}-80},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {419--432},
  year = {1989},
  month = oct}

@inproceedings{Brio89b,
  author = {Jean-Pierre Briot},
  title = {Actalk: {A} Testbed for Classifying and Designing Actor Languages in the {Smalltalk}-80 Environment},
  booktitle = {Proceedings ECOOP '89},
  pages = {109--129},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  url = {http://web.yl.is.u-tokyo.ac.jp/members/briot/actalk/papers/actalk-ecoop89.ps.Z},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@book{Brio95a,
  title = {Proceedings {OBPDC}'95},
  volume = {1107},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Tokyo, Japan},
  editor = {Jean-Pierre Briot and Jean Marc Geib and Akiro Yonezawa},
  isbn = {3-540-61487-7},
  month = jun,
  series = {LNCS}}

@incollection{Brio96a,
  author = {Jean-Pierre Briot},
  title = {An Experiment in Classification and Specialization of Synchronization Schemes},
  booktitle = {2nd Int. Symposium on Object Tecchnologies for Advanced Software},
  pages = {227--249},
  publisher = {Springer Verlag},
  year = {1996},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/actalk/papers/synchro-todai-report-95-07.ps.gz},
  note = {Published as LNCS, volume 1049}}

@techreport{Brio96b,
  author = {Jean-Pierre Briot and Rachid Guerraoui},
  title = {A Classification of Various Approaches for Object-Based Parallel and Distributed Programming},
  year = {1996},
  url = {http://lpdwww.epfl.ch/rachid/papers/surv96.ps.gz},
  institution = {Ecole Polytechnique Federale de Lausanne \& University of Tokyo},
  type = {Technical Report}}

@article{Brio98a,
  author = {Jean-Pierre Briot and Rachid Guerraoui and Klaus-Peter Lohr},
  title = {{Concurrency and Distribution in Object-Oriented Programming}},
  journal = {ACM Computing Surveys},
  volume = 30,
  pages = {291--329},
  year = {1998},
  number = 3}

@article{Brit13a,
  title={Reversible debugging software},
  author={Britton, Tom and Jeng, Lisa and Carver, Graham and Cheak, Paul and Katzenellenbogen, Tomer},
  journal={University of Cambridge-Judge Business School, Tech. Rep},
  year={2013},
  url={http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.444.9094&rep=rep1&type=pdf}
}

@inproceedings{Brit16a,
  author = {Brito, Gleison and Hora, Andre and Valente, Marco Tulio and Robbes, Romain},
  title = {Do developers deprecate {API}s with replacement messages? A large-scale analysis on Java systems},
  booktitle = {{I}nternational {C}onference on {S}oftware {A}nalysis, {E}volution, and {R}eengineering ({SANER})},
  pages = {360--369},
  year = {2016},
  organization = {IEEE}}

@article{Brit18a,
  author = {Aline Brito and Laerte Xavier and Andr{\'e} C. Hora and Marco Tulio Valente},
  title = {{API}Diff: Detecting {API} breaking changes},
  journal = {{I}nternational {C}onference on {S}oftware {A}nalysis, {E}volution and {R}eengineering ({SANER})},
  pages = {507-511},
  year = {2018}}

@article{Brit18b,
  author = {Brito, Gleison and Hora, Andre and Valente, Marco Tulio and Robbes, Romain},
  title = {On the use of replacement messages in {API} deprecation: An empirical study},
  journal = {Journal of Systems and Software},
  volume = {137},
  pages = {306--321},
  publisher = {Elsevier},
  year = {2018}}

@article{Brit19a,
  author = {Brito, Aline and Valente, Marco Tulio and Xavier, Laerte and Hora, Andre},
  title = {You broke my code: understanding the motivations for breaking changes in {API}s},
  journal = {Empirical Software Engineering},
  pages = {1--35},
  publisher = {Springer},
  year = {2019}}

@article{Brit20a,
  author = {Brito, Aline and Valente, Marco Tulio and Xavier, Laerte and Hora, Andre},
  title = {You broke my code: understanding the motivations for breaking changes in {API}s},
  journal = {Empirical Software Engineering},
  volume = {25},
  pages = {1458--1492},
  publisher = {Springer},
  year = {2020},
  number = {2}}

@inproceedings{Brit95a,
  author = {F. {Brito e Abreu} and M. Goulao and R. Esteves},
  title = {Toward the design quality evaluation of object-oriented software systems},
  booktitle = {{I}nternational {C}onference on {S}oftware {Q}uality},
  pages = {44--57},
  year = {1995},
  month = oct}

@article{Brito23a,
  author = {Brito, Aline and Hora, Andre and Tulio Valente, Marco},
  title = {Towards a catalog of composite refactorings},
  journal = {Journal of Software: Evolution and Process},
  year = {2023},
  doi = {https://doi.org/10.1002/smr.2530},
  keywords = {composite refactoring, mining software repositories, refactoring, software evolution},
  abstract = {Abstract Catalogs of refactoring have key importance in software maintenance and evolution, since developers rely on such documents to understand and perform refactoring operations. Furthermore, these catalogs constitute a reference guide for communication between practitioners since they standardize a common refactoring vocabulary. Fowler's book describes the most popular catalog of refactorings, which documents single and well-known refactoring operations. However, sometimes, refactorings are composite transformations, that is, a sequence of refactorings is performed over a given program element. For example, a sequence of Extract Method operations (a single refactoring) can be performed over the same method, in one or in multiple commits, to simplify its implementation, therefore, leading to a Method Decomposition operation (a composite refactoring). In this paper, we propose and document a catalog with eight composite refactorings. We also implement a set of scripts to mine composite refactorings by preprocessing the results of refactoring detection tools. Using such scripts, we search for composites in a representative refactoring oracle with hundreds of confirmed single refactoring operations. Next, to complement this first study, we also search for composites in the full history of 10 well-known open-source projects. We characterize the detected composite refactorings, under dimensions such as size and location. We conclude by addressing the applications and implications of the proposed catalog.}}

@book{Broc95a,
  author = {Kraig Brockschmidt},
  title = {Inside OLE},
  publisher = {Microsoft Press},
  year = {1995},
  edition = {2nd}}

@book{Brod95a,
  author = {Michael L. Brodie and Michael Stonebraker},
  title = {Migrating Legacy Systems},
  publisher = {Morgan Kaufmann},
  year = {1995}}

@inproceedings{Brod97a,
  author = {Andrei Z. Broder},
  title = {On the Resemblance and Containment of Documents},
  booktitle = {In Compression and Complexity of Sequences (SEQUENCES'97)},
  pages = {21--29},
  publisher = {IEEE Computer Society},
  year = {1997}}

@manual{Brok94a,
  title = {ILOG BROKER: Maintening Consistency in C++ Distributed Object-Oriented Systems},
  year = {1994},
  month = may,
  organization = {Ilog}}

@book{Bron04a,
  author = {I.N. Bronshtein and K. A. Semendyayev and G. Musiol and H. Muehlig},
  title = {Handbook of Mathematics},
  publisher = {Springer-Verlag},
  year = {2004},
  edition = {Fourth},
  isbn = {3-540-43491-7}}

@book{Broo75a,
  author = {Frederick P. Brooks},
  title = {The Mythical Man-Month},
  publisher = {Addison Wesley},
  year = {1975},
  address = {Reading, Mass.},
  isbn = {0-201-00650-2}}

@incollection{Broo83a,
  author = {Stephen D. Brookes and William C. Rounds},
  title = {Behavioral Equivalence Relations Induced by Programming Logics},
  booktitle = {Automata, Languages and Programming, 10th Colloquium},
  volume = {154},
  publisher = {Springer-Verlag},
  year = {1983},
  address = {Barcelona, July 1983},
  series = {LNCS}}

@article{Broo83b,
  author = {Brooks, Ruven},
  title = {Towards a Theory of the Comprehension of Computer Programs},
  journal = {International Journal of Man-Machine Studies},
  volume = {18},
  pages = {543--554},
  year = {1983}}

@article{Broo84a,
  author = {Stephen D. Brookes and C.A.R. Hoare and Andrew W. Roscoe},
  title = {A Theory of Communicating Sequential Processes},
  journal = {Journal of the {ACM}},
  volume = {31},
  pages = {560--599},
  year = {1984},
  month = jul,
  number = {3}}

@article{Broo87a,
  author = {Frederick P. Brooks},
  title = {No Silver Bullet: Essence and Accidents of Software Engineering},
  journal = {IEEE Computer},
  volume = {20},
  pages = {10--19},
  year = {1987},
  month = apr,
  number = {4}}

@book{Broo95a,
  author = {Brooks, Jr., Frederik P.},
  title = {The Mythical Man-Month},
  publisher = {Addison Wesley Longman},
  year = {1995},
  address = {Reading, Mass.},
  edition = {2nd}}

@article{Brot83a,
  author = {D.K. Brotz},
  title = {Message System Mores: Etiquette in Laurel},
  journal = {ACM TOOIS},
  volume = {1},
  pages = {179--192},
  year = {1983},
  number = {2}}

@book{Brow01a,
  author = {K. Brown and G. Craig et al.},
  title = {Enterprise Java Programming with IBM Websphere},
  publisher = {Addison Wesley},
  year = {2001},
  isbn = {0-201-61617-3}}

@article{Brow01b,
  author = {Browning, T.R.},
  title = {Applying the design structure matrix to system decomposition and integration problems: a review and new directions},
  journal = {IEEE Transactions on Engineering Management},
  volume = {48},
  pages = {292-306},
  year = {2001},
  number = {3}}

@inproceedings{Brow02a,
  author = {Adam Brown and Richard Cardone and Sean McDirmid and Calvin Lin},
  title = {Using mixins to build flexible widgets},
  booktitle = {Proceedings of the 1st international conference on Aspect-oriented software development},
  pages = {76--85},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/508386.508395},
  isbn = {1-58113-469-X},
  location = {Enschede, The Netherlands}}

@inproceedings{Brow16a,
  author = {Brown, Fraser and N\"{o}tzli, Andres and Engler, Dawson},
  title = {How to Build Static Checking Systems Using Orders of Magnitude Less Code},
  booktitle = {Proceedings of International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS'16)},
  publisher = {ACM},
  year = {2016},
  doi = {10.1145/2872362.2872364},
  isbn = {9781450340915}}

@inproceedings{Brow91a,
  author = {Marc H. Brown},
  title = {ZEUS: A System for Algorithm Animation and Multi-view Editing},
  booktitle = {Proceedings of the 1991 IEEE Workshop on Visual Languages},
  pages = {4--9},
  year = {1991},
  month = oct}

@incollection{Brow95a,
  author = {Na\"ima Brown},
  title = {Correctness Preserving Transformations for the Design of Parallel Programs},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = {924},
  pages = {29--48},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {This paper is about how to design correct computer
programs. In particular it concerns formal methods
for the construction and verification of parallel
algorithms. We develop the theoretical foundations
of a language and a programming methodology for
designing parallel algorithms and illustrate the
methodology by presenting a concrete program
derivation. The goal of the methodology is to define
a mapping of a program specification into a
concurrent programming language. The methodology is
developed in the context of the {\it Unity}
formalism. We put special emphasis on derivation of
parallel algorithms thar are correct with respect to
some high-level program specification. The issue of
efficiency in the sense of execution time and space
is outside the scope of the present paper.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@incollection{Brow96a,
  author = {Alan W. Brown and Kurt C. Wallnau},
  title = {Enginnering of Component-Based Systems},
  booktitle = {Component-Based Software Engineering},
  pages = {7--15},
  publisher = {IEEE Press},
  year = {1997},
  editor = {Alan W. Brown}}

@book{Brow96b,
  title = {Component-Based Software Engineering},
  publisher = {IEEE Press},
  year = {1997},
  editor = {Alan W. Brown}}

@mastersthesis{Brow96c,
  author = {Kyle Brown},
  title = {Design Reverse-Engineering and Automated Design Pattern Detection in {Smalltalk}},
  year = {1996},
  school = {North Carolina State University},
  url = {http://www.ksccary.com/kbrown.htm}}

@incollection{Brow96d,
  author = {Kyle Brown and Bruce G. Whitenack},
  title = {Crossing Chasms: A Pattern Language for Object-RDBMS Integration},
  booktitle = {Pattern Languages of Program Design 2},
  pages = {227--238},
  publisher = {Addison Wesley},
  year = {1996},
  editor = {John M. Vlissides and James O. Coplien and Norman L. Kerth}}

@book{Brow98a,
  author = {William J. Brown and Raphael C. Malveau and McCormick, III, Hays W. and Thomas J. Mowbray},
  title = {Anti{Patterns}: Refactoring Software, Architectures, and Projects in Crisis},
  publisher = {John Wiley Press},
  year = {1998},
  isbn = {0-471-19713-0}}

@inproceedings{Brown10a,
  author = {Brown, Nanette and Cai, Yuanfang and Guo, Yuepu and Kazman, Rick and Kim, Miryung and Kruchten, Philippe and Lim, Erin and MacCormack, Alan and Nord, Robert and Ozkaya, Ipek and others},
  title = {Managing technical debt in software-reliant systems},
  booktitle = {Proceedings of the FSE/SDP workshop on Future of software engineering research},
  pages = {47--52},
  year = {2010}}

@misc{BrowseUnit,
  author = {Romain Robbes},
  title = {{Browse} {Unit}: {Integrating} {S}{Unit} into the {Smalltalk} {Browser}},
  year = {2004},
  url = {http://minnow.cc.gatech.edu/squeak/3113},
  key = {BrowseUnit},
  note = {http://minnow.cc.gatech.edu/squeak/3113}}

@techreport{Broy88a,
  author = {Manfred Broy},
  title = {An Example for the Design of Distributed Systems in a Formal Setting: The Lift Problem},
  year = {1988},
  institution = {University of Passau, Faculty of Math. and Comp. Sci.},
  month = feb,
  type = {MIP-8802}}

@book{Bruc02a,
  author = {Kim B. Bruce},
  title = {Foundations of Object-Oriented Languages --- Types and Semantics},
  publisher = {MIT Press},
  year = {2002},
  isbn = {0-262-02523-X}}

@article{Bruc02b,
  author = {Robert Bruce Findler and Matthias Felleisen},
  title = {Contracts for higher-order functions},
  journal = {SIGPLAN Not.},
  volume = {37},
  pages = {48--59},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/583852.581484},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {9}}

@inproceedings{Bruc08a,
  author = {Bruch, Marcel and Sch\"{a}fer, Thorsten and Mezini, Mira},
  title = {On evaluating recommender systems for {API} usages},
  booktitle = {RSSE '08: Proceedings of the 2008 international workshop on Recommendation systems for software engineering},
  pages = {16--20},
  publisher = {ACM},
  year = {2008},
  url = {http://dx.doi.org/10.1145/1454247.1454254},
  doi = {10.1145/1454247.1454254},
  address = {New York, NY, USA},
  citeulike-article-id = {5724793},
  isbn = {978-1-60558-228-3},
  location = {Atlanta, Georgia},
  posted-at = {2010-02-01 09:13:34},
  priority = {0}}

@inproceedings{Bruc09a,
  author = {Bruch, Marcel and Monperrus, Martin and Mezini, Mira},
  title = {Learning from examples to improve code completion systems},
  booktitle = {Proceedings of the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on the foundations of software engineering},
  pages = {213--222},
  year = {2009}}

@article{Bruc86a,
  author = {Kim B. Bruce and Peter Wegner},
  title = {An Algebraic Model of Subtypes in Object-Oriented Languages},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {163--172},
  year = {1986},
  month = oct,
  number = {10}}

@article{Bruc90a,
  author = {Kim B. Bruce and Giuseppe Longo},
  title = {A Modest Model of Records, Inheritance, and Bounded Quantification},
  journal = {Information and Computation},
  volume = {87},
  pages = {196--240},
  year = {1990}}

@inproceedings{Bruc93a,
  author = {Kim B. Bruce and Jon Crabtree and Thomas P. Murtagh and Robert van Gent and Allyn Dimock and Robert Muller},
  title = {Safe and decidable type checking in an object-oriented language},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {29--46},
  year = {1993},
  url = {ftp://cs.williams.edu/pub/kim/OOPSLA.dvi},
  month = oct}

@inproceedings{Bruc95a,
  author = {Kim B. Bruce and Angela Schuett and Robert van Gent},
  title = {PolyTOIL: {A} Type-Safe Polymorphic Object-Oriented Language},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {27--51},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@misc{Bruc95b,
  author = {Kim B. Bruce},
  title = {Typing in Object-oriented languages: Achieving expressibility and Safety},
  year = {1996},
  url = {ftp://cs.williams.edu/pub/kim/Static.ps},
  abstract = {This papers consist of a survey of problems
(illustrated by a series of sample programs) with
existing type systems, and suggest ways of improving
the expressibility of this systems while retaining
static type safety. In particular we will discuss
the motivation behind introducing "MyType",
"matching", and "bounded matching" into these type
systems.}}

@article{Bruc95c,
  author = {Kim B. Bruce and Luca Cardelli and Giuseppe Castagna and The Hopkins Objects Group and Gary T. Leavens and Benjamin Pierce},
  title = {On Binary Methods},
  journal = {Theory and Practice of Object Systems},
  volume = {1},
  pages = {221--242},
  publisher = {John, Wiley and Sons, Inc.},
  year = {1995},
  address = {New York, NY},
  number = {3}}

@misc{Bruc98,
  author = {K. Bruce and L. Petersen and J. Vanderwaart},
  title = {Modules in LOOM: Classes are not enough},
  year = {1998},
  url = {http://citeseer.nj.nec.com/bruce98module.html},
  month = apr}

@misc{Bruc98a,
  author = {Kim B. Bruce and Luca Cardelli and Benjamin C. Pierce},
  title = {Comparing Object Encodings},
  year = {1998},
  url = {ftp://ftp.cs.williams.edu/pub/kim/comp.ps},
  month = aug,
  note = {Submitted for Publication}}

@inproceedings{Bruc98b,
  author = {Kim B. Bruce and Martin Odersky and Philip Wadler},
  title = {A Statically Safe Alternative to Virtual Types},
  booktitle = {Proceedings ECOOP '98},
  pages = {523--549},
  publisher = {Springer-Verlag},
  year = {1998},
  isbn = {3-540-64737-6}}

@inproceedings{Brud08a,
  author = {Brudaru, Irina Ioana and Zeller, Andreas},
  title = {What is the long-term impact of changes?},
  booktitle = {Proceedings of the 2008 international workshop on Recommendation Systems for Software Engineering},
  pages = {30--32},
  publisher = {ACM},
  year = {2008},
  isbn = {978-1-60558-228-3},
  series = {RSSE'08}}

@book{Brue00a,
  author = {Bruegge, Bernd and Dutoit, Allen H.},
  title = {{Object-Oriented Software Engineering: Conquering Complex and Changing Systems}},
  publisher = {Prentice-Hall},
  year = {2000},
  isbn = {ISBN 0-13-017452-1}}

@book{Brue04a,
  author = {Bruegge, Bernd and Dutoit, Allen H.},
  title = {Object-Oriented Software Engineering Using UML, Patters, and Java Second Edition},
  publisher = {Prentice-Hall},
  year = {2004}}

@techreport{Brue06a,
  author = {Andrea Br\"uhlmann},
  title = {{Albatross}: Seaside Web Applications Scenario Testing Framework},
  year = {2006},
  url = {http://scg.unibe.ch/archive/projects/Brue06a.pdf},
  abstract = {Seaside is a framework for developing sophisticated
web applications in Smalltalk. One thing missing
until now has been a way to automatically test the
running applications in a web browser. We could open
a browser and test some scenarios by hand. This is
not very effective for larger applications and for
regression testing though, so we need a way to write
automatic tests for our web applications. Albatross
is the key to this problem, because it allows us to
write tests directly in Smalltalk using the unit
testing framework. It opens the web application in
an external web browser and simulates user
interactions. It provides access to the running and
rendered web application and at the same time to the
model of your application. There is even no need of
bothering with HTML tags and ids, because Albatross
has cleverer ways to find out what to do. It finds
form fields just by identifying the corresponding
label text or clicks on links just by locating the
displayed link text.},
  institution = {University of Bern},
  month = sep,
  type = {Bachelor's thesis}}

@inproceedings{Brue06b,
  author = {Bruening, Derek and Kiriansky, Vladimir and Garnett, Timothy and Banerji, Sanjeev},
  title = {Thread-shared software code caches},
  booktitle = {International Symposium on Code Generation and Optimization (CGO'06)},
  pages = {11--pp},
  year = {2006},
  doi = {10.1109/CGO.2006.36},
  organization = {IEEE}}

@mastersthesis{Brue08a,
  author = {Andrea Br\"{u}hlmann},
  title = {Enriching Reverse Engineering with Annotations},
  year = {2008},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Brue08a.pdf},
  abstract = {Successful reverse engineering needs to take into
account human knowledge about architecture, about
features or even about validation of the results of
automatic analyses. This knowledge should be linked
to the automatically reverse engineered model and
should be taken into account by analyses. Typically,
when we want to reason about data, we first encode
an explicit meta- model and then express analyses at
that level. However, human knowledge is often
implicit and as a consequence it is not possible to
describe it comprehensively upfront. In this
dissertation we propose a generic approach to
iteratively enrich the system model with external
knowledge using annotations. Our mechanism allows
the reverse engineer to iteratively describe and
refine the annotations during the analysis process,
instead of requiring the meta-model to be built
upfront. As a validation of the expressiveness of
our framework, we show how we use it to support
reverse engineering scenarios.},
  month = apr,
  type = {Master's thesis}}

@inproceedings{Brue08b,
  author = {Andrea Br\"{u}hlmann and Tudor G\^irba and Orla Greevy and Oscar Nierstrasz},
  title = {Enriching Reverse Engineering with Annotations},
  booktitle = {International Conference on Model Driven Engineering Languages and Systems (Models 2008)},
  volume = {5301},
  pages = {660-674},
  publisher = {Springer-Verlag},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Brue08b-Metanool.pdf},
  doi = {10.1007/978-3-540-87875-9_46},
  abstract = {Much of the knowledge about software systems is
implicit, and therefore difficult to recover by
purely automated techniques. Architectural layers
and the externally visible features of software
systems are two examples of information that can be
difficult to detect from source code alone, and that
would benefit from additional human knowledge.
Typical approaches to reasoning about data involve
encoding an explicit meta-model and expressing
analyses at that level. Due to its informal nature,
however, human knowledge can be difficult to
characterize up-front and integrate into such a
meta-model. We propose a generic, annotation-based
approach to capture such knowledge during the
reverse engineering process. Annotation types can be
iteratively defined, refined and transformed,
without requiring a fixed meta-model to be defined
in advance. We show how our approach supports
reverse engineering by implementing it in a tool
called Metanool and by applying it to (i) analyzing
architectural layering, (ii) tracking reengineering
tasks, (iii) detecting design flaws, and (iv)
analyzing features.},
  editor = {Krzysztof Czarnecki et al.},
  isbn = {978-3-540-87874-2},
  medium = {2},
  series = {LNCS}}

@inproceedings{Brue92a,
  author = {Bernd Bruegge and Jim Blythe and Jeffrey Jackson and Jeff Shufelt},
  title = {Object-Oriented System Modeling with {OMT}},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {359--376},
  year = {1992},
  month = oct}

@inproceedings{Brue93a,
  author = {Bernd Bruegge and Tim Gottschalk and Bin Luo},
  title = {A Framework for Dynamic Program Analyzers},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {65--82},
  year = {1993},
  month = oct}

@inproceedings{Brue94a,
  author = {Bernd Bruegge and Erik Riedel},
  title = {A Geographic Environmental Modeling System: Towards an Object-Oriented Framework},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {474--492},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@misc{Bruh08a,
  author = {Br{\"u}hlmann, Andrea},
  title = {Enriching Reverse Engineering with Annotations},
  year = {2008},
  url = {https://www.researchgate.net/profile/Oscar_Nierstrasz/publication/225203223_Enriching_Reverse_Engineering_with_Annotations/links/00b7d528cf262db733000000/Enriching-Reverse-Engineering-with-Annotations.pdf},
  abstract = {Much of the knowledge about software systems is implicit, and therefore difficult to recover by purely automated techniques. Architectural layers and the externally visible features of software systems are two examples of information that can be difficult to detect from source code alone, and that would benefit from additional human knowledge. Typical approaches to reasoning about data involve encoding an explicit meta-model and expressing analyses at that level. Due to its informal nature, however, human knowledge can be difficult to characterize up-front and integrate into such a meta-model. We propose a generic, annotation-based approach to capture such knowledge during the reverse engineering process. Annotation types can be iteratively defined, refined and transformed, without requiring a fixed meta-model to be defined in advance. We show how our approach supports reverse engineering by implementing it in a tool called Metanool and by applying it to (i) analyzing architectural layering, (ii) tracking reengineering tasks, (iii) detecting design flaws, and (iv) analyzing features.},
  keywords = {Annotation Type, External Knowledge, Reverse Engineering, Software Maintenance, Source Code},
  language = {en}}

@inproceedings{Brum07a,
  author = {Brumley, David and Caballero, Juan and Liang, Zhenkai and Newsome, James and Song, Dawn},
  title = {Towards automatic discovery of deviations in binary implementations with applications to error detection and fingerprint generation},
  booktitle = {In Proceedings of the USENIX Security Conference. USENIX Association},
  year = {2007},
  pdf = {https://www.usenix.org/legacy/events/sec07/tech/brumley/brumley.pdf}}

@inproceedings{Brum08a,
  author = {Brumley, David and Poosankam, Pongsin and Song, Dawn and Zheng, Jiang},
  title = {Automatic Patch-Based Exploit Generation is Possible: Techniques and Implications},
  booktitle = {2008 IEEE Symposium on Security and Privacy (sp 2008)},
  pages = {143-157},
  year = {2008},
  doi = {10.1109/SP.2008.17}}

@inproceedings{Brun02,
  author = {Eric Bruneton and Romain Lenglet and Thierry Coupaye},
  title = {{ASM}: A Code Manipulation Tool to Implement Adaptable Systems},
  booktitle = {Proceedings of Adaptable and Extensible Component Systems},
  year = {2002},
  address = {Grenoble, France},
  month = nov}

@inproceedings{Brun04a,
  author = {Magiel Bruntink and van Deursen, Arie},
  title = {Predicting Class Testability using Object-Oriented Metrics},
  booktitle = {Proceedings of the Fourth IEEE International Workshop on Source Code Analysis and Manipulation (SCAM)},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  month = sep}

@inproceedings{Brun04b,
  author = {Eric Bruneton and Thierry Coupaye and Matthieu Leclercq and Jean-Bernard Stefani},
  title = {An Open Component Model and Its Support in Java},
  booktitle = {Component-Based Software Engineering, 7th International Symposium, CBSE 2004},
  year = {2004},
  editor = {Ivica Crankovic and Judith A. Stafford and Heinz W. Schmidt and Kurt C. Wallnau},
  month = {may},
  number = {3054},
  series = {LNCS}}

@article{Brun05a,
  author = {Magiel Bruntink and van Deursen, Arieand van Engelen, Remco and Tom Tourw\'{e}},
  title = {On the Use of Clone Detection for Identifying Cross Cutting Concern Code},
  journal = {IEEE Transactions on Software Engineering},
  volume = {31},
  pages = {804--818},
  year = {2005},
  number = {10}}

@inproceedings{Brun06a,
  author = {Magiel Bruntink},
  title = {Linking Analysis and Transformation Tools with Source-Based Mappings},
  booktitle = {Proceedings of the 6th IEEE International Workshop on Source Code Analysis and Manipulation (SCAM)},
  pages = {107--116},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  month = dec}

@article{Brun06b,
  author = {Magiel Bruntink andvan Deursen, Arie},
  title = {An empirical study into class testability},
  journal = {J. Syst. Softw.},
  volume = {79},
  pages = {1219--1232},
  publisher = {Elsevier Science Inc.},
  year = {2006},
  doi = {10.1016/j.jss.2006.02.036},
  address = {New York, NY, USA},
  issn = {0164-1212},
  number = {9}}

@article{Brun06c,
  author = {E. Bruneton and T. Coupaye and M. Leclercq and V. Quema and J.B. Stefani},
  title = {The Fractal Component Model and its Support in Java},
  journal = {Software - Practice and Experience},
  volume = 36,
  year = {2006},
  number = {11-12}}

@phdthesis{Brun08a,
  author = {Yuriy Brun},
  title = {Self-Assembly for Discreet, Fault-Tolerant, and Scalable Computation on Internet-Sized Distributed Networks},
  year = {2008},
  school = {University of Southern California},
  url = {http://csse.usc.edu/~ybrun/pubs/pubs/Brun08PhD.pdf},
  address = {Los Angeles, {CA}, {USA}},
  month = may}

@inproceedings{Brun08b,
  author = {Oliveira, Bruno C.d.S. and Gibbons, Jeremy},
  title = {Scala for generic programmers},
  booktitle = {WGP '08: Proceedings of the ACM SIGPLAN workshop on Generic programming},
  pages = {25--36},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1411318.1411323},
  address = {New York, NY, USA},
  isbn = {978-1-60558-060-9},
  location = {Victoria, BC, Canada}}

@article{Brun09a,
  author = {Brunel, Julien and Doligez, Damien and Hansen, Ren{\'e} Rydhof and Lawall, Julia L. and Muller, Gilles},
  title = {A foundation for flow-based program matching: using temporal logic and model checking},
  journal = {SIGPLAN Not.},
  volume = {44},
  pages = {114--126},
  publisher = {ACM},
  year = {2009},
  address = {New York, NY, USA},
  issn = {0362-1340},
  issue = {1},
  issue_date = {January 2009},
  month = {jan},
  numpages = {13}}

@techreport{Brun09b,
  author = {Camillo Bruni},
  title = {Development and Debugging of a Whole-System {VM} in {RPython}},
  year = {2009},
  url = {http://scg.unibe.ch/archive/projects/Brun09b.pdf},
  abstract = {Hardware Virtual Machines are generally written in a
low-level style with close resemblance to the actual
working principle of the original system. We show a
different approach by creating a whole-system VM for
a hardware gaming device using a high-level language
and a high-level representation, which increases
readability and maintainability. By creating a fully
functional VM model which then can be compiled for
different architectures, we postpone low-level
optimizations to the compilation step. Our
high-level VM model written in Python is translated
using the PyPy toolchain, a sophisticated high-level
compiler.},
  institution = {University of Bern},
  month = jan,
  type = {Bachelor's thesis}}

@inproceedings{Brun09c,
  author = {Camillo Bruni and Toon Verwaest},
  title = {{PyGirl}: Generating Whole-System {VMs} from High-Level Prototypes using {PyPy}},
  booktitle = {Objects, Components, Models and Patterns, Proceedings of TOOLS Europe 2009},
  volume = {33},
  pages = {328--347},
  publisher = {Springer-Verlag},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Brun09cPyGirl.pdf},
  doi = {10.1007/978-3-642-02571-6_19},
  abstract = {Virtual machines (VMs) emulating hardware devices
are generally implemented in low-level languages for
performance reasons. This results in unmaintainable
systems that are difficult to understand. In this
paper we report on our experience using the PyPy
toolchain to improve the portability and reduce the
complexity of whole-system VM implementations. As a
case study we implement a VM prototype for a
Nintendo Game Boy, called PyGirl, in which the
high-level model is separated from low-level VM
implementation issues. We shed light on the process
of refactoring from a low-level VM implementation in
Java to a high-level model in RPython. We show that
our whole-system VM written with PyPy is
significantly less complex than standard
implementations, without substantial loss in
performance.},
  medium = {2},
  series = {LNBIP}}

@inproceedings{Brun09d,
  author = {Bruneau, Julien and Jouve, Wilfried and Consel, Charles},
  title = {{DiaSim}, A Parameterized Simulator for Pervasive Computing Applications},
  booktitle = {Mobiquitous'09: Proceedings of the 6th International Conference on Mobile and Ubiquitous Systems: Computing, Networking and Services},
  publisher = {ICST/IEEE},
  year = {2009}}

@techreport{Brun10a,
  author = {Bruneau, Julien and Consel, Charles and O'Malley, Marcia and Taha, Walid and Hannourah, Wail Masry},
  title = {Virtual Testing for Smart Buildings},
  year = {2010},
  institution = {Phoenix Research Group, INRIA Bordeaux}}

@inproceedings{Brun10b,
  author = {Brunthaler, Stefan},
  title = {Inline Caching Meets Quickening},
  booktitle = {Proceedings of the 24th European Conference on Object-Oriented Programming},
  pages = {429-451},
  publisher = {Springer-Verlag},
  year = {2010},
  abstract = {Inline caches effectively eliminate the overhead implied by dynamic typing. Yet, inline caching is mostly used in code generated by just-in-time compilers. We present efficient implementation techniques for using inline caches without dynamic translation, thus enabling future interpreter implementers to use this important optimization technique-- we report speedups of up to a factor of 1.71--without the additional implementation and maintenance costs incurred by using a just-in-time compiler.},
  address = {Berlin, Heidelberg},
  isbn = {3642141064},
  location = {Maribor, Slovenia},
  numpages = {23},
  series = {ECOOP'10}}

@article{Brun14a,
  author = {Bruneliere, Hugo and Cabot, Jordi and Dup{\'e}, Gr{\'e}goire and Madiot, Fr{\'e}d{\'e}ric},
  title = {Modisco: A model driven reverse engineering framework},
  journal = {Information and Software Technology},
  volume = {56},
  pages = {1012--1032},
  publisher = {Elsevier},
  year = {2014},
  number = {8}}

@inproceedings{Brun17a,
  title={NG2C: pretenuring garbage collection with dynamic generations for HotSpot big data applications},
  author={Bruno, Rodrigo and Oliveira, Lu{\'\i}s Picciochi and Ferreira, Paulo},
  booktitle={Proceedings of the 2017 ACM SIGPLAN International Symposium on Memory Management},
  pages={2--13},
  year={2017}
}

@inproceedings{Brun19a,
  title={Runtime object lifetime profiler for latency sensitive big data applications},
  author={Bruno, Rodrigo and Patricio, Duarte and Sim{\~a}o, Jos{\'e} and Veiga, Luis and Ferreira, Paulo},
  booktitle={Proceedings of the Fourteenth EuroSys Conference 2019},
  pages={1--16},
  year={2019}
}

@book{Brun56a,
  author = {Jerome S. Bruner and Jacqueline J. Goodnow and George A. Austin},
  title = {A Study of Thinking},
  publisher = {John Wiley {\&} Sons},
  year = {1956},
  address = {New York, NY}}

@inproceedings{Brun86a,
  author = {Giorgio Bruno and Alessandra Balsamo},
  title = {Petri Net-Based Object-Oriented Modelling of Distributed Systems},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {284--293},
  year = {1986},
  month = nov}

@proceedings{Bry97a,
  title = {Deductive and Object-Oriented Databases},
  booktitle = {Proceedings of the 5th International Conference, DOOD '97},
  volume = {1341},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Montreaux, Switzerland},
  editor = {Francois Bry and Raghu Ramakrishnan and Kotagiri Ramamohanarao},
  isbn = {3-540-63792-3},
  month = dec,
  series = {LNCS}}

@inproceedings{Bryc99a,
  author = {Ciaran Bryce and Manuel Oriol and Jan Vitek},
  title = {A Coordination Model for Agents Based on Secure Spaces},
  booktitle = {Proceedings of Coordination '99 (Coordination Languages and Models},
  pages = {4--20},
  publisher = {Springer-Verlag},
  year = {1999},
  number = 1594,
  series = {LNCS}}

@article{Bucc94a,
  author = {Paolo Bucci and Joseph E. Hollingsworth and Joan Krone and Bruce W. Weide},
  title = {Part III: implementing components in {RESOLVE}},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {19},
  pages = {40--51},
  publisher = {ACM Press},
  year = {1994},
  doi = {10.1145/190679.190683},
  issn = {0163-5948},
  number = {4}}

@techreport{Buch02a,
  author = {Frank Buchli},
  title = {An explicit model for {ADVance}},
  year = {2002},
  url = {http://scg.unibe.ch/archive/projects/Buch02a.pdf},
  abstract = {ADvance is a powerful round-trip UML viewer
integrated with the VisualWorks Smalltalk
environment. Because ADvance implicitly uses
Smalltalk as its model, it cannot be used for
anything but Smalltalk code that is loaded in the
image. This project removes this restriction by
transparently introducing an explicit model for
ADvance using Smalltalk's meta-programming
facilities. This solution is validated by showing
how it can be used to display ADvance diagrams on
Moose models.},
  institution = {University of Bern},
  month = dec,
  type = {Informatikprojekt}}

@inproceedings{Buch02b,
  author = {Buchheim, Christoph and J\"{u}nger, Michael and Leipert, Sebastian},
  title = {Improving Walker's Algorithm to Run in Linear Time},
  booktitle = {Revised Papers from the 10th International Symposium on Graph Drawing},
  pages = {344--353},
  publisher = {Springer-Verlag},
  year = {2002},
  url = {http://dl.acm.org/citation.cfm?id=647554.729576},
  acmid = {729576},
  address = {London, UK, UK},
  isbn = {3-540-00158-1},
  numpages = {10},
  series = {GD '02}}

@mastersthesis{Buch03a,
  author = {Frank Buchli},
  title = {Detecting {Software} {Patterns} using {Formal} {Concept} {Analysis}},
  year = {2003},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Buch03a.pdf},
  abstract = {Redocumentation and design recovery are two
important areas of reverse engineering. Detection of
recurring organizations of classes and communicating
objects, called Software Patterns, supports this
process. Many approaches to detect Software Patterns
have been published in the past years. Most of these
approaches need a pattern library as reference.
Personal coding style and domain specific
requirements lead to creating new patterns or
adapting existing ones and make those approaches
fail. The second problem is that the found patterns
of those methods are presented without connection to
the other patterns. To gain an overview of the whole
system and its mechanisms, we propose to set the
patterns in relation each other. Our work shows a
method to detect Software Patterns using Formal
Concept Analysis (FCA). The advantage of this
approach is that no reference library is needed and
the results are set in relation each other. FCA is a
mathematical theory which detects the presence of
groups of classes which instantiate a common,
repeated pattern. Those found patterns are presented
in a lattice, a partial order relation among the
patterns, which allows us to explore the pattern
which are in relation to them. We implemented a
prototype tool ConAn PaDi which navigates with the
Fish Eye View technique over the patterns. For
validation we applied this tool to three mid-sized
Smalltalk applications},
  classification = {D.2.2. Tools and Techniques},
  month = sep,
  type = {Diploma Thesis}}

@phdthesis{Buch16a,
  author = {Ethan Buchman},
  title = {Tendermint: Byzantine fault tolerance in the age of blockchains},
  year = {2016},
  school = {University of Guelph, Canada},
  note = {http://atrium.lib.uoguelph.ca/xmlui/handle/10214/9769}}

@article{Buch88a,
  author = {A.H. Reisner and C.A. Bucholtz},
  title = {The use of various properties of amino acids in color and monochrome dot-matrix analyses for protein homologies},
  journal = {CABIOS},
  volume = {4},
  pages = {395--402},
  year = {1988},
  number = {3}}

@article{Buck05a,
  author = {Jim Buckley and Tom Mens and Matthias Zenger and Awais Rashid and G\"unter Kniesel},
  title = {Towards a Taxonomy of Software Change},
  journal = {Journal on Software Maintenance and Evolution: Research and Practice},
  pages = {309--332},
  year = {2005}}

@book{Bud03,
  author = {Budgen, David},
  title = {Software Design},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {2003},
  address = {Boston, MA, USA},
  date-added = {2016-02-28 17:51:43 +0000},
  date-modified = {2016-02-28 17:52:01 +0000},
  edition = {2},
  isbn = {0201722194}}

@book{Budd00a,
  author = {Timothy Budd},
  title = {Understanding Object-Oriented Programming with {Java} Updated Edition},
  publisher = {Addison Wesley},
  year = {2000}}

@book{Budd87a,
  author = {Tim Budd},
  title = {A Little {Smalltalk}},
  publisher = {Addison Wesley},
  year = {1987},
  address = {Reading, Mass.}}

@techreport{Budd91a,
  author = {Timothy A. Budd},
  title = {Multiparadigm Data Structures in Leda},
  year = {1991},
  misc = {April 29},
  institution = {Oregon State University},
  month = apr,
  type = {Research paper}}

@techreport{Budd91b,
  author = {Timothy A. Budd},
  title = {Sharing and First-Class Functions in Object-Oriented Languages},
  year = {1991},
  misc = {March 5},
  institution = {Oregon State University},
  month = mar,
  type = {Research paper}}

@book{Budd91c,
  author = {Timothy A. Budd},
  title = {An Introduction to Object-Oriented Programming},
  publisher = {Addison Wesley},
  year = {1991},
  isbn = {0-201-54709-0}}

@book{Budd91d,
  author = {Timothy A. Budd},
  title = {Introduction a la programation par objets},
  publisher = {Addison Wesley},
  year = {1991},
  isbn = {2-87908-003-7}}

@inproceedings{Budd92a,
  author = {Reinhard Budde and Marie-Luise Christ-Neumann and Karl-Heinz Sylla},
  title = {Tools and Materials: An Analysis and Design Metaphor},
  booktitle = {Proceedings of TOOLS Europe 92},
  year = {1992},
  address = {Dortmund}}

@book{Budd94a,
  author = {Timothy A. Budd},
  title = {Classical Data Structures in {C}++},
  publisher = {Addison Wesley},
  year = {1994},
  isbn = {2-87908-003-7}}

@book{Budd94b,
  author = {Timothy A. Budd},
  title = {Multiparadigm Programming in Leda},
  publisher = {Oregon State University},
  year = {1994}}

@book{Budd98a,
  author = {Timothy Budd},
  title = {Understanding Object-Oriented Programming with {Java}},
  publisher = {Addison Wesley},
  year = {1998},
  isbn = {0-201-30881-9}}

@inproceedings{Budd98b,
  author = {Buddrus, Frank and Sch{\"o}del, J{\"o}rg},
  title = {Cappuccino A C++ to Java translator},
  booktitle = {Proceedings of the 1998 ACM symposium on Applied Computing},
  pages = {660--665},
  year = {1998}}

@book{Budi03a,
  author = {Frank Budinsky and David Steinberg and Ed Merks and Raymond Ellersick and Timothy Grose},
  title = {Eclipse Modeling Framework},
  publisher = {Addison Wesley Professional},
  year = {2003}}

@article{Budi96a,
  author = {F.J. Budinsky and M.A. Finnie and J.M Vlissides and P.S. Yu},
  title = {Automatic code generation from design patterns},
  journal = {IBM Systems Journal},
  volume = {35},
  year = {1996},
  number = {2}}

@inproceedings{Buec00a,
  author = {Martin B\"uchi and Wolfgang Weck},
  title = {Generic Wrappers},
  booktitle = {{ECOOP 2000, 14th European Conference on Object-Oriented Programming}},
  volume = 1850,
  pages = {201--225},
  publisher = {Springer-Verlag},
  year = {2000},
  editor = {Elisa Bertino},
  series = {LNCS}}

@book{Buec95a,
  author = {Matthias C. B\"ucker and Joachim Geidel and Matthias F. Lachmann},
  title = {Programmieren in {Smalltalk} mit VisualWorks},
  publisher = {Springer},
  year = {1995}}

@techreport{Bueh03a,
  author = {Thomas B\"uhler},
  title = {{MooseGager}, a Software Metrics Tool based on {Moose}},
  year = {2003},
  url = {http://scg.unibe.ch/archive/projects/Bueh03a.pdf},
  abstract = {Moose is a tool environment to reverse engineer and
reengineer object-oriented systems. One feature of
this environment is to compute software measurements
based on the underlying FAMIX model. A problem of
this service was that many measurements were
computed but could not be used in an efficient
manner because they were not presented to the user.
The solution to this problem is a tool that displays
the computed measurements using a graphical user
interface. In this project, we developed the tool
MooseGager. This tool displays the computed
measurements of the entities of the underlying model
in a simple way and also offers the possibility to
generate charts based on these measurements. These
and other features of this tool provide an interface
to the Moose reengineering environment that helps
the user to use the available measurements
efficiently.},
  institution = {University of Bern},
  month = oct,
  type = {Informatikprojekt}}

@mastersthesis{Bueh04a,
  author = {Thomas B\"uhler},
  title = {Detecting and Visualizing Phases in Software Evolution},
  year = {2004},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Bueh04a.pdf},
  abstract = {Understanding the evolution of an object-oriented
systembased on various versions of source code
requires analyzing a vast amount of data since an
object-oriented system is a complex structure rather
than a collection of classes. Our work provides an
approach to understand such an evolution by
detecting and visualizing phases in the evolution,
i.e., abstractions of time spans where the
encapsulated versions all comply with an expression.
Our approach is applicable on any level, i.e., not
only on system level, but for example also on class
level. Our approach furthermore contains a set of
measurements on phases that characterize them.
Phases help understand an evolution because on the
one hand because they enable studying an evolution
on a higher level. On the other hand, phases can be
detected with multiple expressions at the same time.
This results in concurrent phases which enables
studying an evolution from different perspectives at
the same time.},
  month = sep,
  type = {Diploma thesis}}

@book{Bues07a,
  author = {C. Beust and H. Suleiman},
  title = {Next Generation Java Testing: TestNG and Advanced Concepts},
  publisher = {Addison-Wesley},
  year = {2007}}

@inproceedings{Buff14a,
  author = {Buffardi, Kevin and Edwards, Stephen H.},
  title = {A Formative Study of Influences on Student Testing Behaviors},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  pages = {597--602},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2538862.2538982},
  doi = {10.1145/2538862.2538982},
  acmid = {2538982},
  address = {New York, NY, USA},
  isbn = {978-1-4503-2605-6},
  keywords = {adaptive feedback, automated testing, instructional technology, software development process, test-driven development, test-first, unit testing, web-cat},
  location = {Atlanta, Georgia, USA},
  numpages = {6},
  series = {SIGCSE '14}}

@inproceedings{Buff95a,
  author = {Buffenbarger, Jim},
  title = {Syntactic Software Merging},
  booktitle = {Selected papers from the ICSE SCM-4 and SCM-5 Workshops, on Software Configuration Management},
  pages = {153--172},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {London, UK},
  isbn = {3-540-60578-9}}

@inproceedings{Buhr88a,
  author = {Peter A. Buhr and C.R. Zarnke},
  title = {Nesting in an Object-Oriented Language is {NOT} for the Birds},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {128--145},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@article{Buhr89a,
  author = {Raymond J.A. Buhr and Gerald M. Karam and Carol J. Hayes and C. Murray Woodside},
  title = {Software {CAD}: {A} Revolutionary Approach},
  journal = {IEEE Transactions on Software Engineering},
  volume = {15},
  pages = {235--249},
  year = {1989},
  month = mar,
  number = {3}}

@inproceedings{Buhr92a,
  author = {Raymond J.A. Buhr and Ronald S. Casselman},
  title = {Architectures with Pictures},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {466--483},
  year = {1992},
  month = oct}

@article{Bui86a,
  author = {T.X. Bui and Matthias Jarke},
  title = {Communications Design for Co-oP: {A} Group Decision Support System},
  journal = {ACM TOOIS},
  volume = {4},
  pages = {81--103},
  year = {1986},
  month = apr,
  number = {2}}

@article{Buja08a,
  author = {Buja, Andreas and Swayne, Deborah F. and Littman, Michael L. and Dean, Nathaniel and Hofmann, Heike and Chen, Lisha},
  title = {Data Visualization With Multidimensional Scaling},
  journal = {Journal of Computational and Graphical Statistics},
  volume = {17},
  pages = {444--472},
  year = {2008},
  url = {http://dx.doi.org/10.1198/106186008X318440},
  doi = {10.1198/106186008X318440},
  citeulike-article-id = {2852207},
  citeulike-linkout-0 = {http://dx.doi.org/10.1198/106186008X318440},
  citeulike-linkout-1 = {http://www.ingentaconnect.com/content/asa/jcgs/2008/00000017/00000002/art00011},
  issn = {1061-8600},
  month = jun,
  number = {2},
  posted-at = {2009-07-19 17:05:27},
  priority = {0}}

@article{Bule17a,
  author = {Bulej, Lubom\'{\i}r and Bure\v{s}, Tom\'{a}\v{s} and Hork\'{y}, Vojtundefinedch and Kotr\u{a}\'{z}, Jaroslav and Marek, Luk\'{a}\v{s} and Troj\'{a}nek, Tom\'{a}\v{s} and T\'{z}Ma, Petr},
  title = {Unit Testing Performance with Stochastic Performance Logic},
  journal = {Automated Software Engineering},
  volume = {24},
  pages = {139-187},
  publisher = {Kluwer Academic Publishers},
  year = {2017},
  url = {https://doi.org/10.1007/s10515-015-0188-0},
  doi = {10.1007/s10515-015-0188-0},
  issue_date = {March     2017},
  address = {USA},
  number = {1},
  issn = {0928-8910},
  abstract = {Unit testing is an attractive quality management tool in the software development process, however, practical obstacles make it difficult to use unit tests for performance testing. We present Stochastic Performance Logic, a formalism for expressing performance requirements, together with interpretations that facilitate performance evaluation in the unit test context. The formalism and the interpretations are implemented in a performance testing framework and evaluated in multiple experiments, demonstrating the ability to identify performance differences in realistic unit test scenarios.},
  month = {mar},
  numpages = {49},
  keywords = {Java, Unit testing, Performance evaluation}}

@inproceedings{Bull02a,
  author = {R. Ian Bull and Andrew Trevors and Andrew J. Maltopn and Michael W. Godfrey},
  title = {Semantic Grep: Regular Expressions + Relational Abstraction},
  booktitle = {Proceedings Ninth Working Conference on Reverse Engineering ({WCRE}'02)},
  pages = {267--276},
  publisher = {IEEE Computer Society},
  year = {2002},
  location = {Richmond, VA},
  month = oct}

@inproceedings{Bull04a,
  author = {R. Ian Bull and Casey Best and Margaret-Anne Storey},
  title = {Advanced widgets for Eclipse},
  booktitle = {Eclipse '04: Proceedings of the 2004 OOPSLA workshop on eclipse technology eXchange},
  pages = {6--11},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/1066129.1066131},
  address = {New York, NY, USA},
  location = {Vancouver, British Columbia, Canada}}

@inproceedings{Bull05a,
  author = {R. Ian Bull and Jean-Marie Favre},
  title = {Visualization in the Context of Model Driven Engineering.},
  booktitle = {MDDAUI},
  volume = {159},
  publisher = {CEUR-WS.org},
  year = {2005},
  editor = {Andreas Pleuss and Jan Van den Bergh and Heinrich Hussmann and Stefan Sauer},
  series = {CEUR Workshop Proceedings}}

@inproceedings{Bull06a,
  author = {R. Ian Bull and Margaret-Anne Storey and Jean-Marie Favre and Marin Litoiu},
  title = {An Architecture to Support Model Driven Software Visualization},
  booktitle = {International Conference on Program Comprehension},
  pages = {100--106},
  publisher = {IEEE Computer Society},
  year = {2006},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?isnumber=34208&arnumber=1631112&count=51&index=21},
  doi = {10.1109/{ICPC}.2006.11},
  address = {Athens, Greece},
  day = {14--16}}

@inproceedings{Bull06b,
  author = {R. Ian Bull},
  title = {Integrating dynamic views using model driven development},
  booktitle = {CASCON '06: Proceedings of the 2006 conference of the Center for Advanced Studies on Collaborative research},
  pages = {17},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1188966.1188989},
  address = {New York, NY, USA},
  location = {Toronto, Ontario, Canada}}

@inproceedings{Bull96a,
  author = {Fr\'ed\'erique Bullat and Michel Schneider},
  title = {Dynamic Clustering in Object Databases Exploiting Effective Use of Relationships Between Objects},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {344--365},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@techreport{Bung07a,
  author = {Philipp Bunge},
  title = {Shrew --- A Prototype for Subversion Analysis},
  year = {2007},
  url = {http://scg.unibe.ch/archive/projects/Bung07a.pdf},
  abstract = {With the growth of the World Wide Web, version
control systems have become an essential component
in collaborative software development. One such
version control system that has found generous
adoption in recent years is Subversion, a
centralized system that was designed explicitly to
match the requirements of the open-source community.
Equally, specialized web based tools have emerged to
browse and inspect version control systems such as
Subversion and have proven themselves to be valuable
instruments for the developers of software projects.
As projects become larger and more complex however,
these tools have often reached their limitations on
the level of introspecting they can provide. To
solve this problem we present Shrew, an approach to
analyze Subversion repositories that builds upon a
specialized meta-model and makes use of the Moose
object-oriented reengineering environment to
facilitate information extraction and that presents
its results with a convenient web interface.},
  institution = {University of Bern},
  month = feb,
  type = {Bachelor's thesis}}

@mastersthesis{Bung09a,
  author = {Philipp Bunge},
  title = {Scripting Browsers with {Glamour}},
  year = {2009},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Bung09a.pdf},
  abstract = {Browsers are a crucial instrument to understand
complex systems or models. Each problem domain is
accompanied by an abundance of browsers that are
created to help analyze and interpret the underlying
elements. The issue with these browsers is that they
are frequently rewritten from scratch, making them
expensive to create and burdensome to maintain.
While many frameworks exist to ease the development
of user interfaces in general, they provide only
limited support to simplifying the creation of
browsers. In this thesis we present a dedicated
model to describe browsers that equally emphasizes
the control of navigation flow within the browser.
Our approach is designed to support arbitrary domain
models allowing researchers to quickly define new
browsers for their data. To validate our model we
have implemented the framework Glamour which
additionally offers a declarative language to
simplify the definition of browsers. We have used
Glamour to re-implement several existing browsers
and to explore the creation of new browsers.},
  institution = {University of Bern},
  month = apr,
  type = {Master's Thesis}}

@misc{Bung09b,
  author = {Philipp Bunge and Tudor G\^irba and Lukas Renggli and Jorge Ressia and David R\"othlisberger},
  title = {Scripting Browsers with {Glamour}},
  year = {2009},
  url = {http://scg.unibe.ch/archive/reports/Bung09bGlamour.pdf},
  abstract = {Browsers are crucial to make software models
accessible. Problem domains often require multiple
views to access, interpret and edit the underlying
elements. However, browsers are expensive to create
and burdensome to maintain. Glamour is a framework
dedicated to building browsers. It uses a components
and connectors architecture and it comes with an
embedded domain specific language that allows the
user to build dedicated browsers quickly. It
accommodates any kind of domain models via
on-the-fly transformations and it enforces a strict
and explicit separation between the presentation of
the data and the navigation flow between different
entities.},
  howpublished = {European Smalltalk User Group 2009 Technology Innovation Awards},
  month = aug,
  note = {Glamour was awarded the 3rd prize}}

@book{Bung77a,
  author = {M. Bunge},
  title = {Treatise on Basic Philosophy: Ontology I: The Furniture of the World},
  publisher = {Riedel},
  year = {1977}}

@inproceedings{Bunk06a,
  author = {H. Bunke and P. Dickinson and A. Humm and Ch. Irniger and M. Kraetzl},
  title = {Computer network monitoring and abnormal event detection using graph matching and multidimensional scaling},
  booktitle = {Advances in Data Mining, Proc.\ 6th Industrial Conference on Data Mining, ICDM},
  pages = {576--590},
  publisher = {Springer},
  year = {2006},
  doi = {10.1007/11790853_45},
  address = {Leipzig, Germany},
  editor = {Perner, P.},
  month = jul,
  series = {LNAI 4065}}

@inproceedings{Burc05a,
  author = {Michael Burch and Stephan Diehl and Peter Wei\ss gerber},
  title = {Visual Data Mining in software Archives},
  booktitle = {Proceedings of 2005 ACM Symposium on Software Visualization (Softviz 2005)},
  pages = {37--46},
  year = {2005},
  address = {St. Louis, Missouri, USA},
  month = may}

@inproceedings{Burc13a,
author = {Burckhardt, Sebastian and Fahndrich, Manuel and de Halleux, Peli and McDirmid, Sean and Moskal, Michal and Tillmann, Nikolai and Kato, Jun},
title = {It's Alive! Continuous Feedback in UI Programming},
year = {2013},
isbn = {9781450320146},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2491956.2462170},
doi = {10.1145/2491956.2462170},
abstract = {Live programming allows programmers to edit the code of a running program and immediately see the effect of the code changes. This tightening of the traditional edit-compile-run cycle reduces the cognitive gap between program code and execution, improving the learning experience of beginning programmers while boosting the productivity of seasoned ones. Unfortunately, live programming is difficult to realize in practice as imperative languages lack well-defined abstraction boundaries that make live programming responsive or its feedback comprehensible.This paper enables live programming for user interface programming by cleanly separating the rendering and non-rendering aspects of a UI program, allowing the display to be refreshed on a code change without restarting the program. A type and effect system formalizes this separation and provides an evaluation model that incorporates the code update step. By putting live programming on a more formal footing, we hope to enable critical and technical discussion of live programming systems.},
booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {95-104},
numpages = {10},
keywords = {live programming, graphical user interface},
location = {Seattle, Washington, USA},
series = {PLDI '13}
}

@inproceedings{Burc23a,
  title={Don't Trust Your Profiler: An Empirical Study on the Precision and Accuracy of Java Profilers},
  author={Burchell, Humphrey and Larose, Octave and Kaleba, Sophie and Marr, Stefan},
  booktitle={Proceedings of the 20th ACM SIGPLAN International Conference on Managed Programming Languages and Runtimes},
  pages={100--113},
  year={2023}
}

@book{Burc98a,
  author = {H.W. Fowler and R. W. Burchfield},
  title = {Fowler's Modern English Usage},
  publisher = {Oxford University Press},
  year = {1998},
  edition = {Third},
  isbn = {0-19-860263-4}}

@inproceedings{Burd00a,
  author = {Elizabeth Burd and Steven Bradley and John Davey},
  title = {Studying the Process of Software Change: an analysis of software evolution},
  booktitle = {Seventh Working Conference on Reverse Engineering ({WCRE})},
  publisher = {IEEE Press},
  year = {2000}}

@inproceedings{Burd02a,
  author = {Elizabeth Burd and John Bailey},
  title = {Evaluating Clone Detection Tools for Use during Preventative Maintenance},
  booktitle = {Proceedings 2nd Int. Workshop on Source Code Analysis and Manipulation (SCAM'02)},
  pages = {36--43},
  publisher = {IEEE},
  year = {2002},
  address = {Montreal, Canada},
  month = oct}

@inproceedings{Burd97a,
  author = {Elizabeth Burd and Malcolm Munro},
  title = {Investigating the Maintenance Implications of the Replication of Code},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM})},
  publisher = {IEEE},
  year = {1997},
  location = {Bari, Italy},
  month = sep}

@inproceedings{Burd98a,
  author = {Elizabeth Burd and Malcom Munro},
  title = {Assisting Human Understanding to Aid the Targeting of Necessary Reengineering Work},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {2--10},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Burd99a,
  author = {Elizabeth Burd and Malcolm Munro},
  title = {An Initial Approach towards Measuring and Characterizing Software Evolution},
  booktitle = {Proceedings of the Working Conference on Reverse Engineering, ({WCRE} 1999)},
  pages = {168--174},
  publisher = {IEEE Computer Society Press},
  year = {1999},
  address = {Los Alamitos CA}}

@mastersthesis{Burk97a,
  author = {Benno Burkhardt},
  title = {Erweiterung objektorientierter Methoden f{\"u}r den konzeptuellen Datenbankentwurf},
  year = {1997},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Burk97a.pdf},
  month = oct,
  type = {Diploma thesis}}

@book{Burk97b,
  author = {Rainer Burkhardt},
  title = {{UML}-Unified Modeling Language},
  publisher = {Addison Wesley},
  year = {1997},
  isbn = {3-8273-1226-4}}

@book{Burl94a,
  author = {Donald K. Burleson},
  title = {Managing Distributed Databases},
  publisher = {Wiley-QED},
  year = {1994},
  isbn = {0-471-08623-1}}

@techreport{Burm96a,
  author = {P. Burmeister},
  title = {Formal Concept Analysis with {ConImp}: Introduction to the basic features},
  year = {1996},
  url = {http://www.mathematik.tu-darmstadt.de/~burmeister/},
  address = {Darmstadt, Germany},
  institution = {TU-Darmstadt}}

@book{Burn87a,
  author = {A. Burns and A.M. Lister and A.J. Wellings},
  title = {A Review of Ada Tasking},
  volume = {262},
  publisher = {Springer-Verlag},
  year = {1987},
  series = {LNCS}}

@book{Burn93a,
  author = {Alan Burns and Geoff Davies},
  title = {Concurrent Programming},
  publisher = {Addison Wesley},
  year = {1993},
  isbn = {0-201-54417-2}}

@article{Burn94a,
  author = {Margaret M. Burnett and Marla J. Baker},
  title = {A Classification System for Visual Programming Languages},
  journal = {Journal of Visual Languages and Computing},
  volume = {5},
  pages = {287--300},
  year = {1994},
  url = {ftp://ftp.cs.orst.edu/pub/burnett/VPLclassification.JVLC.Sept94.pdf},
  number = {3}}

@book{Burn95a,
  author = {Margaret M. Burnett and Adele Goldberg},
  title = {Visual Object-Oriented Programming},
  publisher = {Prentice-Hall},
  year = {1995},
  isbn = {0-13-172397-9}}

@book{Burn97a,
  author = {Alan Burns and Andy Wellings},
  title = {Real-Time Systems and Programming Languages},
  publisher = {Addison Wesley},
  year = {1997},
  isbn = {0-201-40365-X}}

@inproceedings{Burn97b,
  author = {Ilene Burnstein and Katherine Roberson and Floyd Saner and Abdul Mirza and Abdallah Tubaishat},
  title = {A Role for Chunking and Fuzzy Reasoning in a Program Comprehension and Debugging Tool},
  booktitle = {Proceedings of the 9th International Conference on Tools with Artificial Intelligence (TAI-97)},
  publisher = {IEEE Press},
  year = {1997},
  month = nov}

@incollection{Burn99a,
  author = {Margaret Burnett},
  title = {Visual Programming},
  booktitle = {Encyclopedia of Electrical and Electronics Engineering},
  pages = {275--283},
  publisher = {John Wiley \& Sons Inc.},
  year = {1999},
  url = {ftp://ftp.cs.orst.edu/pub/burnett/whatIsVP.pdf},
  editor = {John G. Webster}}

@inproceedings{Burs80a,
  author = {Ron M. Burstall and D.B. MacQueen and D.T. Sannella},
  title = {{HOPE}: An Experimental Applicative Language},
  booktitle = {Proceedings, 1980 LISP Conference},
  pages = {136--143},
  year = {1980},
  month = aug}

@article{Burs84a,
  author = {Rod Burstall and Butler Lampson},
  title = {A Kernel Language for Abstract Data Types and Modules},
  journal = {Information and Computation},
  volume = 76,
  year = {1984},
  url = {http://gatekeeper.dec.com/pub/DEC/SRC/research-reports/abstracts/src-rr-001.html},
  note = {Also appeared in Proceedings of the International Symposium on Semantics of Data Types, Springer, LNCS (1984), and as SRC Research Report 1},
  number = {2/3}}

@book{Busc96a,
  author = {Frank Buschmann and Regine Meunier and Hans Rohnert and Peter Sommerlad and Michael Stad},
  title = {Pattern-Oriented Software Architecture --- {A} System of Patterns},
  publisher = {John Wiley Press},
  year = {1996},
  isbn = {0-471-95869-7}}

@book{Busc96b,
  author = {Frank Buschmann and Regine Meunier and Hans Rohnert and Peter Sommerlad and Michael Stal},
  title = {Pattern-oriented software architecture: a system of patterns},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1996},
  address = {New York, NY, USA},
  isbn = {0-471-95869-7}}

@article{Bush00a,
  author = {Bush, William R. and Pincus, Jonathan D. and Sielaff, David J.},
  title = {A static analyzer for finding dynamic programming errors},
  journal = {Softw. Pract. Exper.},
  volume = {30},
  pages = {775--802},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2000},
  address = {New York, NY, USA},
  issn = {0038-0644},
  issue = {7},
  month = {jun},
  numpages = {28}}

@incollection{Busi95a,
  author = {Nadia Busi and Roberto Gorrieri},
  title = {Distributed Conflicts in Communicating Systems},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = {924},
  pages = {49--65},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {We argue that the alternative composition operator
of CCS not only lacks expressiveness, but also
provides a too abstract description of conflicting
activities. Hence, we propose to replace it with a
unary conflict operator and a conflict restriction
operator, yielding the process algebra DiX. We show
that DiX is a semantic extension of CCS. Moreover,
DiX is equipped with a simple distributed semantics
defined in terms of nets with inhibitor arcs, where
the set of transitions is generated by three axiom
schemata only. This net semantics is the main
motivation for the present proposal.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@inproceedings{Buss00a,
  author = {L. Bussard},
  title = {Towards a pragmatic composition model of corba services based on {AspectJ}},
  booktitle = {Workshop on the Aspects and Dimensions of Concerns of ECOOP 2000},
  year = {2000}}

@article{Buss02a,
  author = {Christoph Bussler and Dieter Fensel and Alexander Maedche},
  title = {A conceptual architecture for semantic web enabled web services},
  journal = {SIGMOD Rec.},
  volume = {31},
  pages = {24--29},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/637411.637415},
  address = {New York, NY, USA},
  issn = {0163-5808},
  number = {4}}

@article{Buss94a,
  author = {E. Buss and W.M. Gentleman and H.A. M{\"u}ller and M. Stanley and S.R. Tilley and K. Wong},
  title = {Investigating Reverse Engineering Technologies for the {CAS} Program understanding Project},
  journal = {IBM Systems Journal},
  volume = {33},
  pages = {477--500},
  year = {1994},
  number = {3}}

@book{Bust88a,
  author = {David Bustard and John Elder and Jim Welsh},
  title = {Concurrent Program Structures},
  publisher = {Prentice-Hall},
  year = {1988},
  address = {New York},
  series = {Prentice Hall International series in computer science}}

@techreport{Bute02a,
  author = {Calogero Butera},
  title = {A Metrics Front-End for the Moose Reengineering Environment},
  year = {2002},
  url = {http://scg.unibe.ch/archive/projects/Bute02a.pdf},
  abstract = {Moose is a language independent tool environment to
reverse engineer and reengineer object-oriented
systems. It consists of a repository to store models
of software systems, provides query and navigation
facilities, metrics and other analysis support.
Models consist of entities representing software
artifacts such as classes and methods. This document
describes a metrics front-end for Moose, whose goal
is to visualize the relationship among different
metrics of the same model and export this
information to an external file. With this tool the
user can analyse software metrics and observe the
relationships among them. Collecting these
informations leads to a better understanding of the
software which has to be analysed or reengineered.
The ability to export metric values into an external
statistic tool such as MS Excel enables the user to
create diagrams and apply statistical analysis
methods.},
  institution = {University of Bern},
  month = dec,
  type = {Informatikprojekt}}

@inproceedings{Bute13a,
  author = {V. Buterin},
  title = {Ethereum: a Next generation smart contract and decentralized application platform},
  booktitle = {White paper},
  year = {2013},
  url = {https://github.com/ethereum/wiki.wiki/White-Paper}}

@inproceedings{Butl01a,
  author = {Butler, Greg and Xu, Lugang},
  title = {Cascaded refactoring for framework},
  booktitle = {ACM SIGSOFT Symposium on Software Reusability},
  year = {2001},
  url = {https://api.semanticscholar.org/CorpusID:14330253}}

@inproceedings{Butl09a,
  author = {Butler, Simon and Wermelinger, Michel and Yu, Yijun and Sharp, Helen},
  title = {Relating identifier naming flaws and code quality: An empirical study},
  booktitle = {European Conference on Software Maintenance and Reengineering (CSMR)},
  publisher = {IEEE Press},
  year = {2009}}

@inproceedings{Butl10a,
  author = {Butler, Simon and Wermelinger, Michel and Yu, Yijun and Sharp, Helen},
  title = {Exploring the influence of identifier names on code quality: An empirical study},
  booktitle = {European Conference on Software Maintenance and Reengineering (CSMR)},
  publisher = {IEEE Press},
  year = {2010}}

@inproceedings{Butl11a,
  author = {Butler, Simon and Wermelinger, Michel and Yu, Yijun and Sharp, Helen},
  title = {Improving the tokenisation of identifier names},
  booktitle = {European Conference on Object-Oriented Programming ({ECOOP})},
  publisher = {Springer},
  year = {2011}}

@inproceedings{Butl11b,
  author = {Butler, Simon and Wermelinger, Michel and Yu, Yijun and Sharp, Helen},
  title = {Mining Java Class Identifier Naming Conventions},
  booktitle = {International Conference on Software Maintenance ({ICSM})},
  pages = {1641--1643},
  publisher = {IEEE Press},
  year = {2011},
  url = {https://ieeexplore.ieee.org/document/6080776}}

@inproceedings{Butl12b,
  author = {Butler, Simon},
  title = {Mining Java Class Identifier Naming Conventions},
  booktitle = {Proceedings of the 34th International Conference on Software Engineering},
  pages = {1641--1643},
  publisher = {IEEE Press},
  year = {2012},
  url = {http://dl.acm.org/citation.cfm?id=2337223.2337509},
  isbn = {978-1-4673-1067-3},
  location = {Zurich, Switzerland},
  numpages = {3},
  series = {ICSE '12}}

@article{Butt91a,
  author = {Paul Butterworth and Allen Otis and Jacob Stein},
  title = {The {GemStone} object database management system},
  journal = {Commun. ACM},
  volume = {34},
  pages = {64--77},
  publisher = {ACM Press},
  year = {1991},
  doi = {10.1145/125223.125254},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {10}}

@inproceedings{Buxt80a,
  author = {J.N. Buxton and L.E. Druffel},
  title = {Rationale for {STONEMAN}},
  booktitle = {Proceedings IEEE COMPSAC '80},
  pages = {66--72},
  year = {1980},
  address = {Chicago},
  month = oct}

@article{Buxt83a,
  author = {W. Buxton and M.R. Lamb and Dave Sherman and K.C. Smith},
  title = {Towards a Comprehensive User Interface Management System},
  journal = {Computer Graphics},
  volume = {17},
  pages = {35--42},
  year = {1983},
  month = jul,
  number = {3}}

@inproceedings{Buxt93a,
  author = {J.N Buxton},
  title = {On the Decline of Classical Programming},
  booktitle = {Proceedings ESEC '93},
  volume = {717},
  pages = {1--9},
  publisher = {Springer-Verlag},
  year = {1993},
  address = {Garmisch-Partenkirchen, Germany},
  editor = {Ian Sommerville},
  month = sep,
  series = {LNCS}}

@inproceedings{Buyt05,
  author = {Buytaert, Dries and Venstermans, Kris and Eeckhout, Lieven and De Bosschere, Koen},
  title = {Garbage collection hints},
  booktitle = {High Performance Embedded Architectures and Compilers: First International Conference, HiPEAC 2005, Barcelona, Spain, November 17-18, 2005. Proceedings 1},
  pages = {233--248},
  year = {2005},
  organization = {Springer}}

@inproceedings{Byel06a,
  author = {Heorhiy Byelas and Alexandru C. Telea},
  title = {Visualization of areas of interest in software architecture diagrams},
  booktitle = {SoftVis '06: Proceedings of the 2006 ACM symposium on Software visualization},
  pages = {105--114},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1148493.1148509},
  address = {New York, NY, USA},
  isbn = {1-59593-464-2},
  location = {Brighton, United Kingdom}}

@incollection{Byeo93a,
  author = {Kwang June Byeon and Dennis McLeod},
  title = {Towards the Unification of Views and Versions for Object Databases},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {220--236},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {There have been a number of approaches to views and
meta-data versioning for object databases. However,
the essential similarities between the notions of
views and versions have not been adequately
explored. This paper introduces the concept of a
virtual database to unify these two notions in the
object database context. The semantics of virtual
databases is presented, and a mechanism for
interactively creating and deleting virtual
databases and manipulating their schemas and
instances is described. The application of the
virtual database concept to supporting both views
and versions in a unified manner is studied, and its
practical utility is examined.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Byko08a,
  author = {Vassili Bykov},
  title = {Hopscotch: Towards User Interface Composition},
  booktitle = {International Workshop on Advanced Software Development Tools and Techniques (WasDeTT)},
  year = {2008},
  month = jul}

@inproceedings{Byrd82a,
  author = {R.J. Byrd and S.E. Smith and Peter de Jong},
  title = {An Actor-Based Programming System},
  booktitle = {Proceedings ACM SIGOA, Newsletter},
  volume = {3},
  pages = {67--78},
  year = {1982},
  address = {Philadelphia},
  month = jun}

@article{Byro08a,
  author = {Lee Byron and Martin Wattenberg},
  title = {Stacked Graphs -- Geometry \& Aesthetics},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {14},
  pages = {1245-1252},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {10.1109/TVCG.2008.166},
  address = {Los Alamitos, CA, USA},
  issn = {1077-2626}}

@misc{CCM,
  title = {{Corba Components Package, Corba Components and Scripting}},
  url = {http://www.omg.org/technology/corba/corba3releaseinfo.htm},
  key = {CCM},
  note = {http://www.omg.org/technology/corba/corba3releaseinfo.htm}}

@techreport{CDIF94a,
  author = {CDIF Technical Committee},
  title = {{CDIF} Framework for Modeling and Extensibility},
  year = {1994},
  institution = {Electronic Industries Association},
  month = jan,
  note = {See http://www.cdif.org/},
  number = {EIA/IS-107}}

@misc{CGI,
  title = {{CGI}, The Common Gateway Interface},
  key = {CGI},
  note = {http://hoohoo.ncsa.uiuc.edu/cgi/}}

@misc{CME,
  title = {Concern Manipulation Environment (CME)},
  key = {CME},
  note = {http://www.research.ibm.com/cme/}}

@book{CORB91a,
  author = {Digital Equipment and Hewlett-Packard Company and HyperDesk Corporation and NCR Corporation and Object Design Inc. and {SunSoft, Inc}},
  title = {The Common Object Request Broker: Architecture and Specification},
  publisher = {OMG},
  year = {1991}}

@misc{CSS2,
  author = {{W3C} Recommendation},
  title = {Cascading Style Sheets, Level 2, {CSS2} Specification},
  year = {2002},
  key = {CSS2},
  note = {http://www.w3.org/TR/REC-CSS2}}

@misc{CSharp,
  title = {C\#},
  key = {C\#},
  note = {http://www.ecma-international.org/publications/standards/Ecma-334.htm}}

@misc{CSharpLang,
  author = {Microsoft},
  title = {CSharp Programming Language},
  year = {2023},
  howpublished = {\url{https://docs.microsoft.com/en-us/dotnet/csharp/}}}

@misc{CWEExpiredPointerDereference,
  author = {Common Weakness Enumeration},
  title = {CWE-825: Expired Pointer Dereference -- consulted on 27 September 2022},
  note = {https://cwe.mitre.org/data/definitions/825.html}}

@misc{CWETop25Weaknesses,
  author = {Common Weakness Enumeration},
  title = {2022 CWE Top 25 Most Dangerous Software Weaknesses -- consulted on 27 September 2022},
  note = {https://cwe.mitre.org/top25/archive/2022/2022\_cwe\_top25.html}}

@misc{CWEUseAfterFree,
  author = {Common Weakness Enumeration},
  title = {CWE-416: Use After Free -- consulted on 27 September 2022},
  note = {https://cwe.mitre.org/data/definitions/416.html}}

@techreport{CWM03a,
  author = {{Object} {Management} {Group}},
  title = {Common Warehouse Metamodel},
  year = {2003},
  url = {http://www.omg.org/cgi-bin/doc?formal/03-03-02},
  institution = {{Object} {Management} {Group}}}

@inproceedings{Caba12,
  author = {Caballero, Juan and Grieco, Gustavo and Marron, Mark and Nappa, Antonio},
  title = {{Undangle: Early Detection of Dangling Pointers in Use-after-Free and Double-Free Vulnerabilities}},
  booktitle = {Proceedings of the 2012 International Symposium on Software Testing and Analysis},
  pages = {133-143},
  publisher = {Association for Computing Machinery},
  year = {2012},
  url = {https://doi.org/10.1145/2338965.2336769},
  doi = {10.1145/2338965.2336769},
  abstract = {Use-after-free vulnerabilities are rapidly growing in popularity, especially for exploiting web browsers. Use-after-free (and double-free) vulnerabilities are caused by a program operating on a dangling pointer. In this work we propose early detection, a novel runtime approach for finding and diagnosing use-after-free and double-free vulnerabilities. While previous work focuses on the creation of the vulnerability (i.e., the use of a dangling pointer), early detection shifts the focus to the creation of the dangling pointer(s) at the root of the vulnerability. Early detection increases the effectiveness of testing by identifying unsafe dangling pointers in executions where they are created but not used. It also accelerates vulnerability analysis and minimizes the risk of incomplete fixes, by automatically collecting information about all dangling pointers involved in the vulnerability. We implement our early detection technique in a tool called Undangle. We evaluate Undangle for vulnerability analysis on 8 real-world vulnerabilities. The analysis uncovers that two separate vulnerabilities in Firefox had a common root cause and that their patches did not completely fix the underlying bug. We also evaluate Undangle for testing on the Firefox web browser identifying a potential vulnerability.},
  address = {New York, NY, USA},
  isbn = {9781450314541},
  location = {Minneapolis, MN, USA},
  numpages = {11},
  series = {ISSTA 2012}}

@inproceedings{Cabal07,
  author = {Caballero, Juan and Yin, Heng and Liang, Zhenkai and Song, Dawn},
  title = {Polyglot: Automatic Extraction of Protocol Message Format Using Dynamic Binary Analysis},
  booktitle = {Proceedings of the 14th ACM Conference on Computer and Communications Security},
  pages = {317--329},
  publisher = {ACM},
  year = {2007},
  url = {http://doi.acm.org/10.1145/1315245.1315286},
  doi = {10.1145/1315245.1315286},
  acmid = {1315286},
  address = {New York, NY, USA},
  isbn = {978-1-59593-703-2},
  keywords = {binary analysis, protocol reverse engineering},
  location = {Alexandria, Virginia, USA},
  numpages = {13},
  series = {CCS '07}}

@inproceedings{Cabr07a,
  author = {Bruno Cabral and Paulo Marques},
  title = {Exception Handling: A Field Study in {Java} and {.NET}},
  booktitle = {Proceedings of European Conference on Object-Oriented Programming (ECOOP'07)},
  volume = {4609},
  pages = {151--175},
  publisher = {Springer Verlag},
  year = {2007},
  doi = {10.1007/978-3-540-73589-2_8},
  abstract = {Most modern programming languages rely on exceptions
for dealing with abnormal situations. Although
exception handling was a significant improvement
over other mechanisms like checking return codes, it
is far from perfect. In fact, it can be argued that
this mechanism is seriously limited, if not, flawed.
This paper aims to contribute to the discussion by
providing quantitative measures on how programmers
are currently using exception handling. We examined
32 different applications, both for Java and .NET.
The major conclusion for this work is that
exceptions are not being correctly used as an error
recovery mechanism. Exception handlers are not
specialized enough for allowing recovery and,
typically, programmers just do one of the following
actions: logging, user notification and application
termination. To our knowledge, this is the most
comprehensive study done on exception handling to
date, providing a quantitative measure useful for
guiding the development of new error handling
mechanisms.},
  isbn = {978-3-540-73588-5},
  series = {LNCS}}

@misc{Caek12a,
  author = {Caekenberghe, Sven Van},
  title = {Smalltalk Object Notation (STON)},
  year = {2012}}

@inproceedings{Cahi93a,
  author = {Vinny Cahill and Se\'an Baker and Chris Horn and Gradimir Starovic},
  title = {The Amadeus {GRT} --- Generic Runtime Support for Distributed Persistent Programming},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {144--161},
  year = {1993},
  month = oct}

@book{Cahi93b,
  title = {The {COMANDOS}: Distributed Application Platform},
  publisher = {Springer-Verlag},
  year = {1993},
  editor = {Roland Balter and Neville R. Harris and Vinny Cahill and Xavier Rousset de Pina},
  isbn = {3-540-56660-0}}

@inproceedings{Cai07a,
  author = {Cai, Yuangfang and Huynh, Sunny},
  title = {An Evolution Model for Software Modularity Assessment},
  booktitle = {WoSQ '07: Proceedings of the 5th International Workshop on Software Quality},
  pages = {3},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/WOSQ.2007.2},
  address = {Washington, DC, USA},
  isbn = {0-7695-2959-3}}

@inproceedings{Cai14,
  author = {Haipeng Cai and Raul Santelices},
  title = {Estimating the Accuracy of Dynamic Change-Impact Analysis Using Sensitivity Analysis},
  booktitle = {SERE '14 Proceedings of the 2014 Eighth International Conference on Software Security and Reliability},
  pages = {48--57},
  year = {2014}}

@inproceedings{Cai15a,
  author = {Haipeng Cai and Ra{\'{u}}l A. Santelices},
  title = {A framework for cost-effective dependence-based dynamic impact analysis},
  booktitle = {22nd {IEEE} International Conference on Software Analysis, Evolution, and Reengineering, {SANER} 2015, Montreal, QC, Canada, March 2-6, 2015},
  pages = {231--240},
  year = {2015},
  url = {http://dx.doi.org/10.1109/SANER.2015.7081833},
  doi = {10.1109/SANER.2015.7081833}}

@article{Cai21a,
  author = {Zixian Cai and Stephen M. Blackburn and Michael D. Bond and Martin Maas},
  title = {Distilling the Real Cost of Production Garbage Collectors},
  journal = {CoRR},
  volume = {abs/2112.07880},
  year = {2021},
  url = {https://arxiv.org/abs/2112.07880},
  eprint = {2112.07880},
  eprinttype = {arXiv},
  timestamp = {Tue, 10 May 2022 16:11:09 +0200}}

@inproceedings{Cai90a,
  author = {J. Cai and R. Paige and R. Tarjan},
  title = {More efficient bottom-up tree pattern matching},
  booktitle = {Proceedings of CAAP},
  pages = {72--86},
  year = {1990}}

@inproceedings{Caia98a,
  author = {E.G. Caiani and A. Porta and G. Turiel and M. Muzzupappa and S. Pieruzzi and F. Grema and C. Malliani and A. Cerutti and S. Cerutti},
  title = {Warped-average template technique to track on a cycle-by-cycle basis the cardiac filling phases on left ventricular volume.},
  booktitle = {IEEE Computers in Cardiology},
  volume = {25},
  year = {1998}}

@phdthesis{Cain05a,
  author = {Andrew Cain},
  title = {Dynamic data flow analysis for object oriented programs},
  year = {2005},
  school = {Swinburne University of Technology}}

@inproceedings{Calc03a,
  author = {Cristiano Calcagno and Walid Taha and Liwen Huang and Xavier Leroy},
  title = {Implementing Multi-stage languages using {ASTs}, {GenSym}, and {Reflection}},
  booktitle = {In Krzysztof Czarnecki, Frank Pfenning, and Yannis Smaragdakis, editors, Generative Programming and Component Engineering (GPCE)},
  volume = {2830},
  pages = {57--76},
  publisher = {Springer-Verlag},
  year = {2003},
  doi = {10.1007/b13639},
  series = {LNCS}}

@article{Cald91a,
  author = {Gianluigi Caldiera and Victor R. Basili},
  title = {Identifying and Qualifying Reusable Software Components},
  journal = {IEEE Computer},
  volume = {24},
  pages = {61--70},
  publisher = {IEEE Computer Society Press},
  year = {1991},
  doi = {10.1109/2.67210},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  month = feb,
  number = {2}}

@inproceedings{Cald92a,
  author = {Paul Calder and Mark Linton},
  title = {The Object-Oriented Implementation of a Document Editor},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {154--165},
  year = {1992},
  month = oct}

@inproceedings{Cald94a,
  author = {Calder, B and Grunwald, D},
  title = {Reducing branch costs via branch alignment},
  booktitle = {International Conference on Architectural Support for Programming Languages and Operating Systems},
  year = {1999}}

@article{Cald99a,
  author = {B. Calder and P. Feller and Alan Eustace},
  title = {Value Profiling and Optimization},
  journal = {J. Instr. Level Parallelism},
  volume = {1},
  year = {1999}}

@article{Cali12a,
  author = {Radu Calinescu and Carlo Ghezzi and Marta Z. Kwiatkowska and Raffaela Mirandola},
  title = {Self-adaptive software needs quantitative verification at runtime},
  journal = {Commun. ACM},
  volume = {55},
  pages = {69-77},
  year = {2012},
  ee = {http://doi.acm.org/10.1145/2330667.2330686},
  number = {9}}

@book{Call05a,
  author = {Werner Callebaut and Diego Rasskin-Gutman},
  title = {Modularity: Understanding the Development and Evolution of Natural Complex Systems},
  publisher = {MIT press},
  year = {2005}}

@inproceedings{Call11a,
  author = {Oscar Callau and Romain Robbes and David Rothlisberger and Eric Tanter},
  title = {How developers use the dynamic features of programming languages: the case of Smalltalk},
  booktitle = {Mining Software Repositories International Conference (MSR'11)},
  year = {2011}}

@inproceedings{Call87a,
  author = {Lisa A. Call and David L. Cohrs and Barton P. Miller},
  title = {{CLAM} --- an Open System for Graphical User Interfaces},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {277--286},
  year = {1987},
  month = dec}

@article{Call88a,
  author = {Calliss, Frank W.},
  title = {Problems with Automatic Restructurers},
  journal = {SIGPLAN Not.},
  volume = {23},
  pages = {13-21},
  publisher = {Association for Computing Machinery},
  year = {1988},
  url = {https://doi.org/10.1145/43895.43897},
  doi = {10.1145/43895.43897},
  issue_date = {March 1988},
  address = {New York, NY, USA},
  number = {3},
  issn = {0362-1340},
  abstract = {The value of automatic restructurers in the maintenance phase of the software life cycle will be discussed. Our discussions will centre on programs written in COBOL but the arguments are applicable to programs written in other languages. Some of the dangers of automatically restructuring a program are highlighted and the use of interactive restructurers to overcome these dangers are considered.},
  month = mar,
  numpages = {9}}

@article{Call91a,
  author = {Frank W. Calliss},
  title = {A comparison of module constructs in programming languages},
  journal = {SIGPLAN Not.},
  volume = {26},
  pages = {38--46},
  publisher = {ACM Press},
  year = {1991},
  doi = {10.1145/122203.122206},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {1}}

@article{Calla13a,
  author = {Callau, Oscar and Tanter, Eric},
  title = {Programming with Ghosts},
  journal = {IEEE Softw.},
  volume = {30},
  pages = {74--80},
  publisher = {IEEE Computer Society Press},
  year = {2013},
  url = {http://dx.doi.org/10.1109/MS.2012.49},
  doi = {10.1109/MS.2012.49},
  acmid = {2478858},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  issue_date = {January 2013},
  keywords = {software tools,data flow analysis,program understanding tasks,programming practices,incremental coding,integrated development environments,IDE,third-party plug-ins,Ghost View,programming workflow,Programming,Software development,Context awareness,Visualization,Java,User interfaces,Search engines,IDEs,Programming,Software development,Context awareness,Visualization,Java,User interfaces,Search engines,ghosts,programming tools,programming environments,integrated development environments},
  month = jan,
  number = {1},
  numpages = {7}}

@book{Cama01a,
  author = {Scott Camazine and Jean-Louis Deneubourg and Nigel R. Franks and James Sneyd and Guy Theraulaz and Eric Bonabeau},
  title = {Self-Organization in Biological Systems},
  publisher = {Princeton University Press},
  year = {2001},
  address = {Princeton}}

@book{Cama13a,
  title = {Assurances for Self-Adaptive Systems - Principles, Models, and Techniques},
  booktitle = {Assurances for Self-Adaptive Systems},
  volume = {7740},
  publisher = {Springer},
  year = {2013},
  editor = {Javier C{\'a}mara and Rog{\'e}rio de Lemos and Carlo Ghezzi and Ant{\'o}nia Lopes},
  ee = {http://dx.doi.org/10.1007/978-3-642-36249-1},
  isbn = {978-3-642-36248-4},
  series = {Lecture Notes in Computer Science}}

@techreport{Cama95a,
  author = {Carlos Camarao de Figueiredo},
  title = {A Proof System for a Sequential Object-Based Language},
  year = {1995},
  url = {http://www.cs.man.ac.uk/csonly/cstechrep/Abstracts/UMCS-95-1-1.html},
  abstract = {This thesis presents a proof system to support the
formal verification of the correctness of sequential
object-based programs written in a simple
programming language named A1. The proof system uses
a specification language named L1, that is based on
Hoare-style assertions. The syntax and formal
semantics of the programming and specification
languages are given. A formal semantics of
correctness formulas (for partial corretness) is
then defined. Axiom schemes and proof rules
associated with commands of A1, which compose a
proof system named P1, are presented. Example are
shown where these axioms schemes and proof rules are
used to derive program correctness. The proof system
P1 is shown to be sound according to the given
semantics of A1 and of the correctness formulas.},
  address = {Oxford, Manchester, England},
  institution = {Departament of Comp. Science, University of Manchester},
  number = {UMCS-95-1-1},
  type = {Technical Report}}

@inproceedings{Came07a,
  author = {Nicholas R. Cameron and Sophia Drossopoulou and James Noble and Matthew J. Smith},
  title = {Multiple ownership},
  booktitle = {Proceedings of the 22nd annual ACM SIGPLAN conference on Object oriented programming systems and applications (OOPSLA'07)},
  pages = {441--460},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297027.1297060},
  address = {New York, NY, USA},
  isbn = {978-1-59593-786-5},
  location = {Montreal, Quebec, Canada}}

@inproceedings{Came09a,
  author = {N. R. Cameron and S. Drossopoulou},
  title = {Existential Quantification for Variant Ownership},
  booktitle = {18th European Symposium on Programming},
  publisher = {Springer},
  year = {2009},
  number = {5502},
  series = {Lecture Notes in Computer Science}}

@article{Came86a,
  author = {John R. Cameron},
  title = {An Overview of {JSD}},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-12},
  pages = {222--240},
  year = {1986},
  month = feb,
  number = {2}}

@book{Came96a,
  author = {Debra Cameron and Bill Rosenblatt and Eric Raymond},
  title = {Learning {GNU} Emacs},
  publisher = {O'Reilly},
  year = {1996},
  isbn = {1-56592-152-6}}

@inproceedings{Camp11a,
  author = {Campanoni, Simone and Rocchini, Luca},
  title = {Static memory management within bytecode languages on multicore systems},
  booktitle = {2011 1st International Workshop on Computing in Heterogeneous, Autonomous 'N' Goal-Oriented Environments (CHANGE)},
  pages = {1-8},
  year = {2011},
  doi = {10.1109/CHANGE.2011.6172452}}

@article{Camp17a,
title = {Live Robot Programming: The language, its implementation, and robot API independence},
journal = {Science of Computer Programming},
volume = {133},
pages = {1-19},
year = {2017},
issn = {0167-6423},
doi = {https://doi.org/10.1016/j.scico.2016.06.002},
url = {https://www.sciencedirect.com/science/article/pii/S0167642316300697},
author = {Miguel Campusano and Johan Fabry},
keywords = {Live Programming, Nested state machines, Robot},
abstract = {Typically, development of robot behavior entails writing the code, deploying it on a simulator or robot and running it in a test setting. If this feedback reveals errors, the programmer mentally needs to map the error in behavior back to the source code that caused it before being able to fix it. This process suffers from a long cognitive distance between the code and the resulting behavior, which slows down development and can make experimentation with different behaviors prohibitively expensive. In contrast, Live Programming tightens the feedback loop, minimizing the cognitive distance. As a result, programmers benefit from an immediate connection with the program that they are making thanks to an immediate, 'live' feedback on program behavior. This allows for extremely rapid creation, or variation, of robot behavior and for dramatically increased debugging speed. To enable such Live Robot Programming, in this article we discuss LRP; our language that provides for live programming of nested state machines. We detail the design of the language and show its features, give an overview of the interpreter and how it enables the liveness properties of the language, and illustrate its independence from specific robot APIs.}
}

@incollection{Camp74a,
  author = {Roy H. Campbell and A. Nico Habermann},
  title = {The Specification of Process Synchronization by Path Expressions},
  booktitle = {Operating Systems, International Symposium},
  volume = {16},
  pages = {89--102},
  publisher = {Springer-Verlag},
  year = {1974},
  editor = {E. Gelenbe and C. Kaiser},
  series = {LNCS}}

@book{Camp96a,
  author = {Mary Campione and Hathy Walrath},
  title = {The {Java} Tutorial: {O}.{O} Programming for the Internet},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63454-6}}

@inproceedings{Cand04a,
  author = {Cantrill, Bryan M. and Shapiro, Michael W. and Leventhal, Adam H.},
  title = {Dynamic instrumentation of production systems},
  booktitle = {Proceedings of USENIX 2004 Annual Technical Conference},
  pages = {15--28},
  publisher = {USENIX Association},
  year = {2004},
  url = {http://www.usenix.org/event/usenix04/tech/general/cantrill.html},
  address = {Berkeley, CA, USA},
  location = {Boston, MA}}

@article{Cand06a,
  author = {Cantrill, Bryan},
  title = {Hidden in Plain Sight},
  journal = {Queue},
  volume = {4},
  pages = {26--36},
  publisher = {ACM},
  year = {2006},
  url = {http://dx.doi.org/10.1145/1117389.1117401},
  doi = {10.1145/1117389.1117401},
  abstract = {In December 1997, Sun Microsystems had just
announced its new flagship machine: a 64-processor
symmetric multiprocessor supporting up to 64
gigabytes of memory and thousands of I/O devices. As
with any new machine launch, Sun was working
feverishly on benchmarks to prove the
machine\&rsquo;s performance. While the benchmarks
were generally impressive, there was one in
particular\&mdash;an especially complicated
benchmark involving several machines\&mdash;that was
exhibiting unexpectedly low performance. The
benchmark machine\&mdash;a fully racked-out behemoth
with the maximum configuration of 64
processors\&mdash;would occasionally become
mysteriously distracted: Benchmark activity would
practically cease, but the operating system kernel
remained furiously busy. After some number of
minutes spent on unknown work, the operating system
would suddenly right itself: Benchmark activity
would resume at full throttle and run to completion.
Those running the benchmark could see that the
machine was on course to break the world record, but
these minutes-long periods of unknown kernel
activity were enough to be the difference between
first and worst.},
  address = {New York, NY, USA},
  issn = {1542-7730},
  number = {1}}

@article{Canf01a,
  author = {G. Canfora and A. Cimitile and A. De Lucia and G.A. Di Lucca},
  title = {Decomposing legacy systems into objects: an eclectic approach},
  journal = {Information and Software Technology},
  volume = {43},
  pages = {401 - 412},
  year = {2001},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584901001495},
  doi = {https://doi.org/10.1016/S0950-5849(01)00149-5},
  number = {6},
  issn = {0950-5849},
  keywords = {Reverse engineering},
  keywords = {Reverse engineering},
  keywords = {Reverse engineering},
  keywords = {Reverse engineering}}

@inproceedings{Canf05a,
  author = {Canfora, Gerardo and Cerulo, Luigi},
  title = {How Software Repositories can Help in Resolving a New Change Request},
  booktitle = {Proceedings of the Workshop on Empirical Studies in Reverse Engineering},
  year = {2005},
  pdf = {/media/backup-part/Documentos/computacao/academia/ufpe/dissertacao-msc/papers-relacionados/[2005 canfora]How Software Repositories can Help in Resolving a New Change Request.pdf},
  citeulike-article-id = {1727459},
  month = sep,
  posted-at = {2007-10-04 14:46:28},
  priority = {4}}

@inproceedings{Canf05b,
  author = {Canfora, Gerardo and Cerulo, Luigi},
  title = {Impact Analysis by Mining Software and Change Request Repositories},
  booktitle = {Proceedings of the 11th IEEE International Software Metrics Symposium},
  pages = {29--},
  publisher = {IEEE Computer Society},
  year = {2005},
  url = {http://dx.doi.org/10.1109/METRICS.2005.28},
  doi = {10.1109/METRICS.2005.28},
  acmid = {1092169},
  address = {Washington, DC, USA},
  isbn = {0-7695-2371-4},
  series = {METRICS '05}}

@inproceedings{Canf06a,
  author = {Gerardo Canfora and Luigi Cerulo},
  title = {Supporting Change Request Assignment in Open Source Development},
  booktitle = {Proceedings of 2006 ACM Symposium on Applied Computing},
  pages = {1767--1772},
  publisher = {ACM Society Press},
  year = {2006},
  location = {New York, NY},
  organization = {ACM}}

@inproceedings{Canf06b,
  author = {Canfora, Gerardo and Fasolino, Anna Rita and Frattolillo, Gianni and Tramontana, Porfirio},
  title = {Migrating interactive legacy systems to web services},
  booktitle = {Conference on Software Maintenance and Reengineering (CSMR'06)},
  pages = {10--pp},
  year = {2006},
  organization = {IEEE}}

@inproceedings{Canf07a,
  author = {Gerardo Canfora and Luigi Cerulo and Massimiliano Di Penta},
  title = {Identifying Changed Source Code Lines from Version Repositories},
  booktitle = {MSR '07: Proceedings of the Fourth International Workshop on Mining Software Repositories},
  pages = {14},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MSR.2007.14},
  address = {Washington, DC, USA},
  isbn = {0-7695-2950-X}}

@inproceedings{Canf07b,
  author = {Canfora Gerardo and Di Penta Massimiliano},
  title = {New Frontiers of Reverse Engineering},
  booktitle = {FOSE '07: 2007 Future of Software Engineering},
  pages = {326--341},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/FOSE.2007.15},
  address = {Washington, DC, USA},
  isbn = {0-7695-2829-5}}

@article{Canf83a,
  author = {E. Rodney Canfield and Paul Erd\"{o}s and Carl Pomerance},
  title = {On a problem of {O}ppenheim concerning ``factorisatio numerorum''},
  journal = {J. Number Theory},
  volume = {17},
  pages = {1--28},
  year = {1983},
  doi = {10.1016/0022-314X(83)90002-1},
  issn = {0022-314X},
  number = {1}}

@article{Canf92a,
  author = {Gerardo Canfora and Aniello Cimitile and Ugo de Carlini},
  title = {A Logic-Based Approach to Reverse Engineering Tools Production},
  journal = {Transactions on Software Engineering},
  volume = {18},
  pages = {1053--1064},
  year = {1992},
  month = dec,
  number = {12},
  organization = {IEEE}}

@article{Canf92b,
  author = {E. Rodney Canfield and David M. Jackson},
  title = {A {D}-finiteness result for products of permutations},
  journal = {Discrete Math.},
  volume = {99},
  pages = {25--30},
  year = {1992},
  doi = {10.1016/0012-365X(92)90362-J},
  issn = {0012-365X},
  number = {1-3}}

@article{Canf96a,
  author = {G. Canfora and A. Cimitile and M. Munro},
  title = {An improved algorithm for identifying objects in code},
  journal = {Softw. Pract. Exper.},
  volume = {26},
  pages = {25--48},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1996},
  doi = {10.1002/(SICI)1097-024X(199601)26:1<25::AID-SPE994>3.3.CO;2-K},
  address = {New York, NY, USA},
  issn = {0038-0644},
  number = {1}}

@article{Canf98a,
  author = {Gerardo Canfora and Aniello Cimitile and Ugo de Carlini and Andrea {De Lucia}},
  title = {An Extensible System for Source Code Analysis},
  journal = {Transactions on Software Engineering},
  volume = {24},
  pages = {721--740},
  year = {1998},
  month = sep,
  number = {9},
  organization = {IEEE}}

@inproceedings{Canf99a,
  author = {Gerardo Canfora and Aniello Cimitile and Andrea {De Lucia} and Giuseppe A. {Di Lucca}},
  title = {A {Case} {Study} of {Applying} an {Eclectic} {Approach} to {Identify} {Objects} in {Code}},
  booktitle = {Proceedings of IWPC '99 (7th International Workshop on Program Comprehension)},
  pages = {136--143},
  publisher = {IEEE Computer Society},
  year = {1999},
  location = {Pittsburg, {USA}},
  month = may,
  organization = {IEEE}}

@techreport{Cann82a,
  author = {H. I. Cannon},
  title = {Flavors: A non-hierarchical approach to object-oriented programming},
  year = {1982},
  institution = {Symbolics Inc.}}

@inproceedings{Cann89a,
  author = {Peter S. Canning and William Cook and Walter L. Hill and John C. Mitchell and Walter G. Olthoff},
  title = {F-Bounded Polymorphism for Object-Oriented Programming},
  booktitle = {Proceedings of the ACM Conference on Functional Programming and Computer Architecture},
  pages = {273--280},
  year = {1989},
  misc = {Sept. 11-13},
  url = {http://theory.stanford.edu/people/jcm/publications.htm},
  month = sep}

@inproceedings{Cann89b,
  author = {Peter S. Canning and William Cook and Walter L. Hill and Walter G. Olthoff},
  title = {Interfaces for Strongly-Typed Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {457--468},
  year = {1989},
  month = oct}

@article{Cao10a,
  author = {Cao, Jiuxin and Mao, Bo and Luo, Junzhou},
  title = {A segmentation method for web page analysis using shrinking and dividing},
  journal = {International Journal of Parallel, Emergent and Distributed Systems},
  volume = {25},
  pages = {93--104},
  publisher = {Taylor \& Francis},
  year = {2010},
  number = {2}}

@inproceedings{Capi03a,
  author = {Andrea Capiluppi},
  title = {Models for the evolution of {OS} projects},
  booktitle = {Proceedings International Conference on Software Maintenance ({ICSM} 2003)},
  pages = {65--74},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  address = {Los Alamitos CA}}

@inproceedings{Capi04a,
  author = {Andrea Capiluppi and Maurizio Morisio and Patricia Lago},
  title = {Evolution of understandability in {OSS} projects},
  booktitle = {Proceedings 8th European Conference on Software Maintenance and Reengineering (CSMR 2004)},
  pages = {58--66},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA}}

@inproceedings{Capi05a,
  author = {Andrea Capiluppi and Alvaro Faria and J. F. Ramil},
  title = {Exploring the relationship between cumulative change and complexity in an open source system evolution},
  booktitle = {Proceedings of the 9th European Conference on Software Maintenance and Re-engineering},
  year = {2005},
  url = {http://oro.open.ac.uk/12330/}}

@inproceedings{Capi07a,
  author = {A. Capiluppi and J. Fernandez-Ramil},
  title = {A Model to Predict Anti-Regressive Efforts in Open Source Software},
  booktitle = {23rd IEEE International Conference on Software Maintenance},
  year = {2007},
  url = {http://oro.open.ac.uk/8243/},
  abstract = {Accumulated changes on a software system are not uniformly distributed: some elements are changed much more often than others. For optimal impact, the always limited time and effort for complexity control work, the anti-regressive work, should be applied to the elements of the system which are complex. If two elements are similarly complex then we should improve the one that attract more changes. Based on this observation, we propose a maintenance guidance model (MGM) which is tested against real-world data in order to study how developers handle the complexity of their systems. MGM takes into account several dimensions of complexity: size, structural complexity and coupling. The results show that maintainers of the eight studied open source systems tend, in general, to prioritize their anti-regressive work in line with the predictions given by our MGM, even though, divergences also exist. MGM offers a history-focused alternative to existing approaches to the identification of elements for anti-regressive work, most of which use certain static code characteristics only.},
  keywords = {Anti-regressive work, Empirical Studies, McCabe Cyclomatic Complexity, Coupling, Maintenance,Metrics, Open Source, Software Evolution},
  month = {oct}}

@inproceedings{Capl87a,
  author = {Michael Caplinger},
  title = {An Information System Based on Distributed Objects},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {126--137},
  year = {1987},
  month = dec}

@inproceedings{Capr93a,
  author = {Bruno Caprile and Paolo Tonella},
  title = {Nomen Est Omen: Analyzing the Language of Function Identifiers},
  booktitle = {Proceedings of 6th Working Conference on Reverse Engineering ({WCRE} 1999)},
  pages = {112--122},
  publisher = {IEEE Computer Society Press},
  year = {1999}}

@inproceedings{Card00a,
  author = {Luca Cardelli},
  title = {Mobility and Security},
  booktitle = {Foundations of Secure Computation},
  pages = {3--37},
  publisher = {IOS Press},
  year = {2000},
  url = {http://lucacardelli.name},
  editor = {Friedrich L. Bauer and Ralf Steinbr\"uggen},
  series = {NATO Science Series}}

@inproceedings{Card00b,
  author = {Luca Cardelli and Andrew D. Gordon},
  title = {Anytime, Anywhere. Modal Logics for Mobile Ambients},
  booktitle = {Proceedings of the 27th ACM Symposium on Principles of Programming Languages},
  pages = {365--377},
  year = {2000},
  url = {http://lucacardelli.name}}

@article{Card00c,
  author = {Luca Cardelli and Andrew D. Gordon},
  title = {Mobile Ambients},
  journal = {TCS special issue on Coordination},
  volume = {240},
  year = {2000},
  url = {http://lucacardelli.name},
  editor = {D. Le M{\'e}tayer},
  month = jul,
  note = {To appear},
  number = {1}}

@unpublished{Card00d,
  author = {Luca Cardelli and Andrew D. Gordon},
  title = {Logical Properties of Name Restriction},
  year = {2000},
  url = {http://lucacardelli.name},
  note = {Draft}}

@article{Card01a,
  author = {Lu{\'\i}s Caires and Luca Cardelli},
  title = {A Spatial Logic for Concurrency (Part I)},
  journal = {TACS '01},
  year = {2001},
  url = {http://lucacardelli.name},
  abstract = {We present a logic that can express properties of
freshness, secrecy, structure, and behavior of
concurrent systems. In addition to standard logical
and temporal operators, our logic includes spatial
operations corresponding to composition, local name
restriction, and a primitive fresh name quantifier.
Properties can also be defined by recursion; a
central theme of this paper is then the combination
of a logical notion of freshness with inductive and
coinductive definitions of properties.},
  note = {To appear}}

@article{Card02a,
  author = {Cardoso, J. and Miller, J. and Arnold, J.},
  title = {Modeling quality of service for workflows and web service processes},
  journal = {Journal of Web Semantics},
  volume = {1},
  pages = {281-308},
  year = {2002},
  month = may}

@book{Card83a,
  author = {Stuart K. Card and Allen Newell and Thomas P. Moran},
  title = {The Psychology of Human-Computer Interaction},
  publisher = {Lawrence Erlbaum Associates, Inc.},
  year = {1983},
  address = {Mahwah, NJ, USA},
  isbn = {0898592437}}

@article{Card85a,
  author = {Luca Cardelli and R. Pike},
  title = {Squeak: a Language for Communicating with Mice},
  journal = {ACM SIGGRAPH '85},
  volume = {19},
  pages = {199--204},
  year = {1985},
  month = jul,
  number = {3}}

@incollection{Card85b,
  author = {Luca Cardelli},
  title = {Amber},
  booktitle = {Combinators and Functional Programming Languages, 13th Spring School of the LITP},
  volume = {242},
  pages = {21--47},
  publisher = {Springer-Verlag},
  year = {1985},
  editor = {Cousineau and Curien and Robinet},
  series = {LNCS}}

@article{Card85c,
  author = {Luca Cardelli and Peter Wegner},
  title = {On Understanding Types, Data Abstraction, and Polymorphism},
  journal = {ACM Computing Surveys},
  volume = {17},
  pages = {471--522},
  year = {1985},
  url = {http://lucacardelli.name http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf},
  doi = {10.1145/6041.6042},
  month = dec,
  number = {4}}

@inproceedings{Card85d,
  author = {Card, David and Page, Gerald and McGarry, Frank},
  title = {Criteria for software modularization},
  booktitle = {ICSE '85 Proceedings of the 8th international conference on Software engineering},
  year = {1985},
  url = {https://dl.acm.org/ft_gateway.cfm?id=319672&ftid=3518&dwn=1&CFID=29375439&CFTOKEN=3515dd444181f63c-1916C026-9C6D-CBD1-1968C7C8C4B9E1C4},
  abstract = {A central issue in programming practice involves determining the appropriate size and information content of a software module. This study attempted to determine the effectiveness of two widely used criteria for software modularization, strength and size, in reducing fault rate and development cost. Data from 453 FORTRAN modules developed by professional programmers were analyzed. The results indicated that module strength is a good criterion with respect to fault rate, whereas arbitrary module size limitations inhibit programmer productivity. This analysis is a first step toward defining empirically based standards for software modularization.},
  address = {London, England},
  keywords = {fortran},
  month = aug}

@techreport{Card86a,
  author = {Luca Cardelli},
  title = {A Polymorphic Lambda Calculus with Type:Type},
  year = {1986},
  url = {http://lucacardelli.name},
  address = {Palo Alto, California},
  institution = {DEC Systems Research Center},
  number = {10},
  type = {Technical Report}}

@article{Card88a,
  author = {Luca Cardelli},
  title = {A Semantics of Multiple Inheritance},
  journal = {Information and Computation},
  volume = {76},
  pages = {138--164},
  year = {1988}}

@techreport{Card89a,
  author = {Luca Cardelli and John C. Mitchell},
  title = {Operations on Records.},
  pages = {60 pages.},
  year = {1989},
  institution = {Digital Equipment Corporation, Systems Research Centre},
  month = aug,
  number = {48}}

@inproceedings{Card91a,
  author = {Luca Cardelli and Simone Martini and John C. Mitchell and Andre Scedrov},
  title = {An Extension of System {F} with Subtyping},
  booktitle = {Proceedings Theoretical Aspects of Computer Software (TACS '91)},
  volume = {526},
  pages = {750--770},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Sendai, Japan},
  editor = {T. Ito and A.R. Meyer},
  month = sep,
  series = {LNCS}}

@incollection{Card91b,
  author = {Luca Cardelli},
  title = {Typeful programming},
  booktitle = {Formal Description of Programming Concepts},
  pages = {431--507},
  publisher = {Springer-Verlag},
  year = {1991},
  url = {http://lucacardelli.name},
  editor = {E. J. Neuhold and M. Paul},
  series = {IFIP State of the Art Reports Series}}

@article{Card92a,
  author = {Luca Cardelli and Jim Donahue and Lucille Glassman and Mick Jordan and Bill Kalsow and Greg Nelson},
  title = {Modula-3 Language Definition},
  journal = {ACM SIGPLAN Notices},
  volume = {27},
  pages = {15--42},
  year = {1992},
  month = aug,
  number = {8}}

@incollection{Card93a,
  author = {Luca Cardelli and John C. Mitchell},
  title = {Operations on Records},
  booktitle = {Theoretical Aspects of Object-Oriented Programming. Types, Semantics and Language Design},
  pages = {295--350},
  publisher = {MIT Press},
  year = {1993},
  editor = {Carl A. Gunter and John C. Mitchell}}

@incollection{Card93b,
  author = {Luca Cardelli},
  title = {Extensible Records in a Pure Calculus of Subtyping},
  booktitle = {Theoretical Aspects of Object-Oriented Programming. Types, Semantics and Language Design},
  pages = {373--425},
  publisher = {MIT Press},
  year = {1993},
  editor = {Carl A. Gunter and John C. Mitchell}}

@article{Card95a,
  author = {Luca Cardelli},
  title = {A Language with Distributed Scope},
  journal = {Computing Systems},
  volume = {8},
  pages = {27--59},
  year = {1995},
  url = {http://lucacardelli.name},
  number = {1}}

@incollection{Card97a,
  author = {Luca Cardelli},
  title = {Type Systems},
  chapter = {103},
  booktitle = {The Computer Science and Engineering Handbook},
  pages = {2208--2236},
  publisher = {CRC Press},
  year = {1997},
  url = {http://lucacardelli.name},
  address = {Boca Raton, FL},
  editor = {Allen B. Tucker}}

@inproceedings{Card97b,
  author = {Stuart K. Card and Jock Mackinlay},
  title = {The Structure of the Information Visualization Design Space},
  booktitle = {Proc. of the IEEE Symposium on Information Visualization},
  pages = {92--99},
  year = {1997},
  url = {citeseer.ist.psu.edu/card96structure.html}}

@incollection{Card98a,
  author = {Luca Cardelli and Andrew D. Gordon},
  title = {Mobile Ambients},
  booktitle = {Foundations of Software Science and Computational Structures},
  volume = {1378},
  pages = {140--155},
  publisher = {Springer-Verlag},
  year = {1998},
  url = {http://lucacardelli.name},
  editor = {Maurice Nivat},
  series = {LNCS}}

@article{Card99a,
  author = {Luca Cardelli and Rowan Davies},
  title = {Service Combinators for Web Computing},
  journal = {IEEE Transactions on Software Engineering},
  volume = 25,
  pages = {309--316},
  year = {1999},
  number = 3}

@book{Card99b,
  title = {Readings in Information Visualization --- Using Vision to Think},
  publisher = {Morgan Kaufmann},
  year = {1999},
  editor = {Stuart K. Card and Jock D. Mackinlay and Ben Shneiderman}}

@inproceedings{Carg86a,
  author = {T.A. Cargill},
  title = {Pi: {A} Case Study in Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {350--360},
  year = {1986},
  month = nov}

@book{Carg92a,
  author = {Tom Cargill},
  title = {{C}++ Programming Style},
  publisher = {Addison Wesley},
  year = {1992},
  isbn = {0-201-56365-7}}

@inproceedings{Cari18a,
  author = {Cariou, Eric and Le Goaer, Olivier and Brunschwig, L{\'{e}}a and Barbier, Franck},
  title = {A generic solution for weaving business code into executable models},
  booktitle = {21st International Conference on Model Driven Engineering Languages and Systems},
  volume = {2245},
  pages = {251--256},
  publisher = {CEUR-WS.org},
  year = {2018},
  url = {http://ceur-ws.org/Vol-2245/exe\_paper\_2.pdf},
  editor = {Regina Hebig and Thorsten Berger},
  series = {{CEUR} Workshop Proceedings}}

@phdthesis{Carl98a,
  author = {Magnus Carlsson and Thomas Hallgren},
  title = {Fudgets --- Purely Functional Processes with applications to Graphical User Interfaces},
  year = {1998},
  school = {Chalmers University of Technology},
  address = {G\"oteborg, Sweden}}

@article{Carm90a,
  author = {Jos\'e Carmo and Amilcar Sernadas},
  title = {Branching versus Linear Logics Yet Again},
  journal = {Formal Aspects of Computing},
  volume = {2},
  pages = {24--59},
  year = {1990}}

@techreport{Carm91a,
  author = {Ian H. Carmichael and James R. Cordy},
  title = {{TXL} --- The Tree Transformation Language V5.0: Syntax and Informal Semantics},
  year = {1991},
  address = {Karlsruhe},
  institution = {GMD},
  month = apr,
  number = {Rex-2-GMD-41-1.0},
  type = {Project REX Working Paper}}

@inproceedings{Carm95a,
  author = {Carmichael, Ian and Tzerpos, Vassilios and Holt, Rick C.},
  title = {Design Maintenance: Unexpected Architectural Interactions},
  booktitle = {International Conference on Software Maintenance ({ICSM})},
  pages = {134--140},
  publisher = {IEEE CS},
  year = {1995},
  doi = {10.1109/ICSM.1995.526535},
  issn = {1063-6773}}

@inproceedings{Caro01a,
  author = {Denis Caromel and Julien Vayssi\`{e}re},
  title = {Reflections on MOPs, Components, and {Java} Security},
  booktitle = {ECOOP '01: Proceedings of the 15th European Conference on Object-Oriented Programming},
  pages = {256--274},
  publisher = {Springer-Verlag},
  year = {2001}}

@inproceedings{Caro01b,
  author = {Denis Caromel and Fabrice Huet and Julien Vayssi\`{e}re},
  title = {A simple security-aware {MOP} for {Java}},
  booktitle = {In Metalevel Architectures and Separation of Crosscutting Concerns, Third International Conference, REFLECTION 2001, volume LNCS 2192},
  pages = {118--125},
  publisher = {Springer-Verlag},
  year = {2001}}

@article{Caro03a,
  author = {Denis Caromel and Julien Vayssi\`{e}re},
  title = {A security framework for reflective Java applications},
  journal = {Software: Practice and Experience},
  volume = {33},
  pages = {821--846},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2003},
  url = {http://dx.doi.org/10.1002/spe.528},
  doi = {10.1002/spe.528},
  address = {New York, NY, USA},
  issn = {0038-0644},
  number = {9}}

@inproceedings{Caro04a,
  author = {Denis Caromel and Luis Mateu and Eric Tanter},
  title = {Sequential Object Monitors},
  booktitle = {Proceedings of the 18th European Conference on Object-Oriented Programming (ECOOP 2004), number 3086 in Lecture Notes in Computer Science},
  pages = {316--340},
  publisher = {Springer-Verlag},
  year = {2004}}

@inproceedings{Caro90a,
  author = {Denis Caromel},
  title = {Programming Abstractions for Concurrent Programming},
  booktitle = {TOOLS Pacific '90},
  pages = {245--253},
  year = {1990},
  address = {Sydney, Australia},
  month = nov}

@inproceedings{Caro90b,
  author = {Denis Caromel},
  title = {Concurrency: An Object-Oriented Approach},
  booktitle = {Proceedings TOOLS '90},
  pages = {183--197},
  publisher = {Editions Angkor Paris},
  year = {1990},
  editor = {J. B\'ezivin and B. Meyer and J-M. Nerson},
  month = jun}

@article{Caro90c,
  author = {Denis Caromel},
  title = {Concurrency and Reusability: From Sequential to Parallel},
  journal = {Journal of Object-Oriented Programming},
  volume = {3},
  pages = {34--42},
  year = {1990},
  month = sep,
  number = {3}}

@phdthesis{Caro91a,
  author = {Denis Caromel},
  title = {Programmation parall\`ele asynchrone et imp\'erative: \'etudes et propositions},
  year = {1991},
  school = {Universit\'e de Nancy},
  month = feb,
  type = {{Ph.D}. Thesis}}

@inproceedings{Caro93a,
  author = {Denis Caromel and Manuel Rebuffel},
  title = {Object-Based Concurrency: 10 Language Features to Achieve Reuse},
  booktitle = {TOOLS USA '93},
  year = {1993},
  month = aug}

@inproceedings{Carr81a,
  author = {Carr, Richard W. and Hennessy, John L.},
  title = {{WSCLOCK}\- a simple and effective algorithm for virtual memory management},
  booktitle = {Proceedings of the eighth ACM symposium on Operating systems principles},
  pages = {87--95},
  publisher = {ACM},
  year = {1981},
  doi = {10.1145/800216.806596},
  acmid = {806596},
  address = {New York, NY, USA},
  isbn = {0-89791-062-1},
  location = {Pacific Grove, California, United States},
  numpages = {9},
  series = {SOSP '81}}

@article{Carr86a,
  author = {N. Carriero and D. Gelernter},
  title = {The {S}/Net's Linda Kernel},
  journal = {ACM Transactions on Computer Systems},
  volume = {4},
  pages = {110--129},
  year = {1986},
  month = may,
  number = {2}}

@article{Carr89a,
  author = {N. Carriero and D. Gelernter},
  title = {How to Write Parallel Programs: {A} Guide to the Perplexed},
  journal = {ACM Computing Surveys},
  volume = {21},
  pages = {323--357},
  year = {1989},
  doi = {10.1145/72551.72553},
  month = sep,
  number = {3}}

@article{Carr89b,
  author = {N. Carriero and D. Gelernter},
  title = {Linda in Context},
  journal = {Communications of the ACM},
  volume = {32},
  pages = {444--458},
  year = {1989},
  month = apr,
  number = {4}}

@book{Carr90a,
  author = {Nicholas Carriero and David Gelernter},
  title = {How to Write Parallel Programs: a First Course},
  publisher = {MIT Press, cop. 1990},
  year = {1990},
  address = {Cambridge},
  isbn = {0-262-03171-X}}

@inproceedings{Carr90b,
  author = {Bernard Carr\'e and Jean-Marc Geib},
  title = {The Point of View Notion for Multiple Inheritance},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {312--321},
  year = {1990},
  month = oct}

@incollection{Carr95a,
  author = {Nick Carriero and David Gelernter and Lenore Zuck},
  title = {Bauhaus Linda},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = {924},
  pages = {66--76},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {We discuss ``Bauhaus Linda'' (or Bauhaus for short),
a Linda-derived coordination language that is in
many ways simultaneously more powerful and simpler
than Linda. Bauhaus unifies tuples and tuple spaces,
leading to an especially clean treatment of multiple
tuple spaces, and treats processes as atomic and
explicitly representable. We present an informal
semantics of Bauhaus and discuss an extended example
that demonstrates its expressivity and simplicity.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@article{Carr96a,
  author = {M. Carrillo and J. Garcia Molina and E. Pimentel and I. Repiso},
  title = {Design by Contract in Smalltalk},
  journal = {Journal of Object-Oriented Programming},
  volume = {9},
  year = {1996},
  institution = {ACM},
  number = {7}}

@book{Cars87a,
  author = {James P. Carse},
  title = {Finite and Infinite Games --- A Vision of Life as Play and Possibility},
  publisher = {Ballantine Books},
  year = {1987},
  isbn = {978-0345341846}}

@inproceedings{Cart91a,
  author = {Robert Cartwright and Mike Fagan},
  title = {Soft typing},
  booktitle = {PLDI '91: Proceedings of the ACM SIGPLAN 1991 conference on Programming language design and implementation},
  pages = {278--292},
  publisher = {ACM},
  year = {1991},
  doi = {10.1145/113445.113469},
  address = {New York, NY, USA},
  isbn = {0-89791-428-7},
  location = {Toronto, Ontario, Canada}}

@inproceedings{Carz94a,
  author = {A. Carzaniga and G. P. Picco and G. Vigna},
  title = {Designing and Implementing Inter-Client Communication in the O2 Object-Oriented Database Management System},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {53--64},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Carz98a,
  author = {Antonio Carzaniga and Elisabetta Di Nitto and David S. Rosenblum and Alexander L. Wolf},
  title = {Issues in Supporting Event-Based Architectural Styles},
  booktitle = {Third International Software Architecture Workshop},
  pages = {17--20},
  year = {1998},
  address = {Orlando, Florida},
  month = nov}

@inproceedings{Casa01a,
  author = {G. Casazza and G. Antoniol and U. Villano and E. Merlo and M. {Di Penta}},
  title = {Identifying Clones in the Linux Kernel},
  booktitle = {Proc. Int. Workshop on Source Code Analysis and Manipulation (IWSCAM)},
  pages = {90--97},
  publisher = {IEEE},
  year = {2001}}

@inproceedings{Casa88a,
  author = {Eduardo Casais},
  title = {An Object-Oriented System Implementing {KNO}s},
  booktitle = {Proceedings of the ACM Conference on Office Information Systems (COIS)},
  pages = {284--290},
  year = {1988},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/knosImplementation.pdf},
  abstract = {We discuss a distributed object-oriented system
written in LISP that implements KNOs (KNowledge
acquisition, dissemination and manipulation
Objects). The system emphasizes advanced features
like object autonomy, mobility and dynamic
inheritance. The objects are active, independent
entities that can travel in a local area network and
protect themselves from external aggressions. A
dynamic inheritance mechanism enables them to modify
their behaviour during their lifetime. We give a
description of our system and illustrate its
functionality with selected examples.},
  address = {Palo Alto},
  month = mar}

@techreport{Casa89a,
  author = {Eduardo Casais},
  title = {Reorganizing an Object System},
  pages = {161--189},
  year = {1989},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@techreport{Casa90a,
  author = {Eduardo Casais},
  title = {Managing Class Evolution in Object-Oriented Systems},
  pages = {133--195},
  year = {1990},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/classEvolution.pdf},
  abstract = {Software components developed with an
object-oriented language undergo considerable
reprogramming before they become reusable in a wide
range of applications or domains. Tools and
methodologies are therefore needed to cope with the
complexity of designing, updating and reorganizing
vast collections of classes. This paper describes
several techniques for controlling change in
object-oriented systems, illustrates their
functionality with selected examples and discusses
their advantages and their limitations. As a
complement to traditional approaches like version
management, we propose new algorithms for
automatically restructuring a hierarchy when classes
are added to it. These algorithms not only help in
handling modifications to libraries of software
components, but they also provide useful guidance
for detecting and correcting improper class
modelling.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@techreport{Casa91a,
  author = {Eduardo Casais},
  title = {Managing Class Evolution Through Reorganisation},
  pages = {287--301},
  year = {1991},
  abstract = {Because of incomplete specifications or inadequate
design decisions, software components developed with
an object-oriented language require frequent
reorganisations before they become stable, reusable
classes. We propose a new incremental algorithm that
analyses the redefinitions carried out on inherited
properties when a class is added to a hierarchy, and
restructures the hierarchy to discover missing
abstractions and to enforce programming style
guidelines. We illustrate our automatic
restructuring approach with simple examples,
describe formally the algorithm and the object model
it is based on, and discuss its suitability for
object-oriented software engineering.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@phdthesis{Casa91b,
  author = {Eduardo Casais},
  title = {Managing Evolution in Object Oriented Environments: An Algorithmic Approach},
  year = {1991},
  school = {Centre Universitaire d'Informatique, University of Geneva},
  month = may,
  number = {no. 369)},
  type = {{Ph.D}. Thesis}}

@inproceedings{Casa92a,
  author = {Eduardo Casais},
  title = {An Incremental Class Reorganization Approach},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {114--132},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@article{Casa94a,
  author = {Eduardo Casais},
  title = {Automatic Reorganization of Object-Oriented Hierarchies: {A} Case Study},
  journal = {Object-Oriented Systems},
  volume = {1},
  pages = {95--115},
  publisher = {Chapman \& Hall},
  year = {1994},
  month = dec,
  number = {2}}

@incollection{Casa95a,
  author = {Eduardo Casais},
  title = {Managing Class Evolution in Object-Oriented Systems},
  booktitle = {Object-Oriented Software Composition},
  pages = {201--244},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {Software components developed with an
object-oriented language undergo considerable
reprogramming before they become reusable for a wide
range of applications or domains. Tools and
methodologies are therefore needed to cope with the
complexity of designing, updating and reorganizing
class collections. We present a typology of
techniques for controlling change in object-oriented
systems, illustrate their functionality with
selected examples and discuss their advantages and
limitations.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@article{Casa97a,
  author = {Eduardo Casais and Antero Taivalsaari},
  title = {Object-Oriented Software Evolution and Re-engineering (Special Issue)},
  journal = {Theory and Practice of Object Systems (TAPOS)},
  volume = {3},
  pages = {233--301},
  publisher = {John Wiley \& Sons},
  year = {1997},
  number = {4}}

@article{Casa98a,
  author = {Eduardo Casais},
  title = {Re-Engineering Object-Oriented Legacy Systems},
  journal = {Journal of Object-Oriented Programming},
  volume = {10},
  pages = {45--52},
  year = {1998},
  month = jan,
  number = {8}}

@article{Case03a,
  author = {Casey, Kevin and Gregg, David and Ertl, M. and Nisbet, Andy},
  title = {Towards superinstructions for Java interpreters},
  journal = {Lecture Notes in Computer Science},
  year = {2003},
  month = {jan}}

@techreport{Case05a,
  author = {Kevin Casey, Anton Ertl and David Gregg},
  title = {Optimizations for a Java Interpreter Using Instruction Set Enhancement},
  year = {2005},
  institution = {Trinity College Dublin},
  month = sep}

@inproceedings{Case05b,
  author = {Casey, Kevin and Gregg, David and Ertl, M. Anton},
  title = {Tiger -- An Interpreter Generation Tool},
  booktitle = {Compiler Construction},
  pages = {246--249},
  publisher = {Springer Berlin Heidelberg},
  year = {2005},
  abstract = {Tiger (Trinity Interpreter GEneratoR) is a new interpreter generator tool along the lines of vmgen, but with significant improvements in flexibility and feedback. Support for important new features such as instruction specialisation, replication and improved analysis of code at runtime are presented. A simple `C' virtual machine imported into Tiger is used for demonstration purposes. Various realistic benchmarks (such as sorting and Davis-Putnam backtracking algorithms) are used to show the utility of these new features in Tiger.},
  address = {Berlin, Heidelberg},
  editor = {Bodik, Rastislav},
  isbn = {978-3-540-31985-6}}

@unpublished{Case92a,
  author = {Yves Caseau and Laurent Perron},
  title = {A Type System for Object-Oriented Database Programming and Querying Languages},
  year = {1992},
  month = may,
  note = {draft}}

@inproceedings{Case93a,
  author = {Yves Caseau and Laurent Perron},
  title = {Attaching Second-Order Types to Methods in an Object-Oriented Language},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {142--160},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {This paper proposes an extension of the notion of
method as it is currently used in most
object-oriented languages. We define polymethods as
methods that we can attach directly to types, as
opposed to classes and that we can describe with a
second-order type. Two benefits result from this
extension; first, the expressive power of the
language is improved with better modeling abilities.
Next, second-order types yield a more powerful
(precise) type inference, which extends the range of
static type checking in a truly extensible
object-oriented language. We first show that
extensible object-oriented languages present many
difficulties for static type-checking and that
second-order types are necessary to get stronger
type-checking. We illustrate how to combine
polymethods through type inheritance and propose a
technique based on abstract interpretation to derive
a second-order type for new polymethods.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Case93b,
  author = {Yves Caseau},
  title = {Efficient Handling of Multiple Inheritance Hierarchies},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {271--287},
  year = {1993},
  month = oct}

@article{Caser11a,
  author = {Pierre Caserta and Olivier Zendra},
  title = {Visualization of the Static aspects of Software: a survey},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {17},
  pages = {913-933},
  year = {2011},
  doit = {10.1109/TVCG.2010.110},
  number = {7}}

@article{Casn91a,
  author = {Stephen M. Casner},
  title = {A Task-Analytic Approach to the Automated Design of Graphic Presentations},
  journal = {ACM Transactions of Graphics},
  volume = {10},
  pages = {111--151},
  year = {1991},
  month = apr,
  number = {2}}

@misc{Cass06a,
  author = {Damien Cassou and Karsten Kuche},
  title = {Dakar Testing},
  year = {2006},
  howpublished = {European Smalltalk User Group Innovation Technology Award},
  month = sep}

@mastersthesis{Cass07b,
  author = {Damien Cassou},
  title = {Remodularisation \`a base de traits},
  year = {2007},
  school = {Universit\'e Bordeaux I},
  url = {http://scg.unibe.ch/archive/external/Cass07b.pdf},
  abstract = {R\'ecemment, les traits ont propos\'e un solution
compatible avec l'h\'eritage simple dans lequel
l'entit\'e qui compose a le contr\^ole sur la
composition. Les traits sont des \'el\'ements \`a
granularit\'e fine qui permettent la composition de
classes, mais qui \'evite la plupart des probl\`emes
pos\'es par l'h\'eritage multiple et les approches
bas\'ees sur les mixins. Pour \'evaluer
l'efficacit\'e des traits, des biblioth\`eques ont
\'et\'e refactoris\'ees, montrant une
r\'eutilisation importante du code. Cependant, bien
que ces travaux soient int\'eressants, ils ne
permettent pas de rencontrer tous les probl\`emes
d'utilisation des traits ; ceci parce que les
biblioth\`eques d'origines \'etaient r\'ealis\'ees
et pens\'ees avec les contraintes de l'h\'eritage
simple. Nous souhaitons \'evaluer l'expressivit\'e
des traits lors de la r\'ealisation d'un projet
complet, en se servant des traits comme unit\'e de
r\'eutilisation de comportement. Ce document
pr\'esente le design d'une nouvelle biblioth\`eque
de streams appel\'ee Nile. Nous pr\'esentons les
traits que nous avons d\'efinis et leur
r\'eutilisabilit\'e ainsi que les probl\`emes
auxquels nous avons fait face.}}

@inproceedings{Cass09b,
  author = {Cassou, Damien and Bertran, Benjamin and Loriant, Nicolas and Consel, Charles},
  title = {A Generative Programming Approach to Developing Pervasive Computing Systems},
  booktitle = {GPCE'09: Proceedings of the 8th International Conference on Generative Programming and Component Engineering},
  pages = {137--146},
  publisher = {ACM},
  year = {2009},
  url = {http://hal.inria.fr/inria-00405819/PDF/gpce42-cassou.pdf},
  doi = {10.1145/1621607.1621629},
  acceptnum = {18},
  accepttotal = {62},
  address = {Denver, CO, USA}}

@inproceedings{Cass10a,
  author = {Cassou, Damien and Bruneau, Julien and Consel, Charles},
  title = {A Tool Suite to Prototype Pervasive Computing Applications (demo)},
  booktitle = {PerCom'10: Proceedings of the 8th International Conference on Pervasive Computing and Communications},
  pages = {1--3},
  publisher = {IEEE Computer Society},
  year = {2010}}

@inproceedings{Cass10b,
  author = {Cassou, Damien and Bruneau, Julien and Mercadal, Julien and Enard, Quentin and Balland, Emilie and Loriant, Nicolas and Consel, Charles},
  title = {Towards a Tool-based Development Methodology for Sense/Compute/Control Applications},
  booktitle = {SPLASH'10: Proceedings of the 1st International Conference on Systems, Programming, Languages, and Applications: Software for Humanity},
  pages = {1--2},
  publisher = {ACM},
  year = {2010},
  note = {poster}}

@inproceedings{Cast12a,
  author = {Castanos, Jose and Edelsohn, David and Ishizaki, Kazuaki and Nagpurkar, Priya and Nakatani, Toshio and Ogasawara, Takeshi and Wu, Peng},
  title = {On the Benefits and Pitfalls of Extending a Statically Typed Language {JIT} Compiler for Dynamic Scripting Languages},
  booktitle = {Proceedings of the International Conference on Object Oriented Programming Systems Languages and Applications - OOPSLA'12},
  pages = {195--212},
  publisher = {ACM},
  year = {2012},
  url = {http://doi.acm.org/10.1145/2398857.2384631},
  doi = {10.1145/2398857.2384631}}

@article{Cast87a,
  author = {Ilaria Castellani},
  title = {Bisimulations and Abstraction Homomorphisms},
  journal = {Journal of Computer and System Sciences},
  volume = {34},
  pages = {210--235},
  publisher = {Academic Press},
  year = {1987},
  month = apr,
  number = {2/3}}

@techreport{Cast89a,
  author = {Ilaria Castellani and Guo Qiang Zhang},
  title = {Parallel Product of Event Structures},
  year = {1989},
  institution = {INRIA},
  month = aug,
  number = {1078},
  type = {Report no.}}

@inproceedings{Cast94a,
  author = {S. Castano and V. De Antonellis},
  title = {Reuse in Object-Oriented Information Systems Development},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {346--358},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@phdthesis{Cast94b,
  author = {Giuseppe Castagna},
  title = {Overloading, subtyping and late binding: functional foundation of object-oriented programming},
  year = {1994},
  school = {Universit\'e de Paris},
  month = jan,
  type = {{Ph.D}. Thesis}}

@article{Cast95a,
  author = {Giuseppe Castagna},
  title = {Covariance and contravariance: conflict without a cause},
  journal = TOPLAS,
  volume = 17,
  pages = {431--447},
  year = {1995},
  number = 3}

@book{Cast97a,
  author = {Giuseppe Castagna},
  title = {Object-Oriented Programming A Unified Foundation},
  publisher = {Birkhaeuser},
  year = {1997}}

@article{Casta95a,
  author = {Guiseppe Castagna},
  title = {Covariance and Contravariance: Conflict without a Cause},
  journal = {ACM Transactions on Programming Languages and Systems},
  volume = {17},
  pages = {431--447},
  year = {1995},
  url = {ftp://ftp.ens.fr/pub/dmi/users/castagna/covariance.ps.Z},
  month = mar,
  number = {3}}

@article{Casta95b,
  author = {Giuseppe Castagna and Giorgio Ghelli and Giuseppe Longo},
  title = {A Calculus for Overloaded Functions with Subtyping},
  journal = {Information and Computation},
  volume = {117},
  pages = {115--135},
  year = {1995},
  url = {ftp://ftp.ens.fr/pub/dmi/users/castagna/infocompu.ps.Z},
  number = {1}}

@article{Cate21a,
  author = {Cates, Roee and Yunik, Nadav and Feitelson, Dror G},
  title = {Does Code Structure Affect Comprehension? On Using and Naming Intermediate Variables},
  journal = {arXiv preprint arXiv:2103.11008},
  year = {2021}}

@book{Catt94a,
  title = {The Object Database Standard: {ODMG}-93},
  publisher = {Morgan \& Kaufmann},
  year = {1994},
  editor = {Rick Cattell},
  isbn = {1-55860-302-6}}

@inproceedings{Caud86a,
  author = {Patrick J. Caudill and Allen Wirfs-Brock},
  title = {A Third Generation {Smalltalk}-80 Implementation},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {119--130},
  year = {1986},
  month = nov}

@article{Cazz04a,
  author = {Walter Cazzola},
  title = {SmartReflection: Efficient Introspection in Java},
  journal = {Journal of Object Technology},
  volume = {3},
  year = {2004},
  institution = {ETH Z\"urich},
  month = aug,
  number = {11}}

@article{Cazz17a,
  author = {Cazzola, Walter and Shaqiri, Albert},
  title = {Open Programming Language Interpreters},
  journal = {The Art, Science, and Engineering of Programming},
  volume = {Vol. 1},
  year = {2017},
  article = {5},
  issue = {2}}

@article{Cazz18a,
  author = {Cazzola, Walter and Chitchyan, Ruzanna and Rashid, Awais and Shaqiri, Albert},
  title = {$\mu$-DSU: A Micro-language Based Approach to Dynamic Software Updating},
  journal = {Computer Languages, Systems \& Structures},
  volume = {51},
  pages = {71--89},
  publisher = {Elsevier},
  year = {2018},
  doi = {10.1016/j.cl.2017.07.003}}

@inproceedings{Cazz98a,
  author = {Walter Cazzola},
  title = {Evaluation of Object-Oriented Reflective Models},
  booktitle = {In Proceedings of ECOOP Workshop on Reflective Object-Oriented Programming and Systems (EWROOPS 98), in 12th European Conference on Object-Oriented Programming (ECOOP 98), Brussels, Belgium, on 20th-24th},
  pages = {3--540},
  year = {1998}}

@inproceedings{Cecc02a,
  author = {Emmanuel Cecchet and Julie Marguerite and Willy Zwaenepoel},
  title = {Performance and Scalability of {EJB} Applications},
  booktitle = {Proceedings of International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'02)},
  pages = {246--261},
  year = {2002}}

@inproceedings{Cecc05a,
  author = {Ceccato, Mario and Marin, Marius and Mens, Kim and Moonen, Leon and Tonella, Paolo and Tourwe, Tom},
  title = {A Qualitative Comparison of Three Aspect Mining Techniques},
  booktitle = {13th International Workshop on Program Comprehension ({IWPC})},
  pages = {13--22},
  publisher = {IEEE CS},
  year = {2005},
  doi = {10.1109/WPC.2005.2},
  isbn = {0-7695-2254-8},
  issn = {1092-8138}}

@inproceedings{Ceri00a,
  author = {Stefano Ceri and Piero Fraternali and Aldo Bongio},
  title = {Web modeling language ({Web}{M}{L}): a modeling language for designing Web sites},
  booktitle = {Ninth International World Wide Web Conference},
  year = {2000}}

@article{Ceri89a,
  author = {Ceri, S. and Gottlob,G. and Tanca,L.},
  title = {What You Always Wanted to Know About {Datalog} (And Never Dared to Ask)},
  journal = {IEEE Transactions on Knowledge and Data Engineering},
  volume = {1},
  pages = {146--166},
  publisher = {IEEE Computer Society},
  year = {1989},
  issn = {1041-4347},
  number = {1}}

@book{Ceri93a,
  title = {Proceedings {DOOD}'93},
  volume = {760},
  publisher = {Springer-Verlag},
  year = {1993},
  address = {Phoenix, Arizona, USA},
  editor = {Stefano Ceri and Katsumi Tanaka},
  isbn = {3-540-57530-8},
  month = dec,
  series = {LNCS}}

@article{Chab94a,
  author = {Bruno Chabrier and Paul Franchi-Zannettacci},
  title = {D\'e\-l\'e\-ga\-tion s\'e\-man\-tique par con\-traintes r\'eactives pour les interfaces graphiques. Semantic delegation with reactive contraints for graphical interfaces},
  journal = {Technique et Sciences Informatiques},
  volume = {13},
  pages = {539--566},
  year = {1994},
  number = {4}}

@book{Chab97a,
  title = {Ing\'enierie Object: Concepts et techniques},
  publisher = {InterEditions},
  year = {1997},
  editor = {Chabanne Oussalah and Et Alii},
  isbn = {2-7296-0642-4}}

@manual{Chac08a,
  author = {Chacon, Scott},
  title = {Git Internal},
  year = {2008},
  organization = {PeepCode}}

@book{Chac09a,
  author = {Chacon, Scott},
  title = {Pro Git},
  publisher = {Apress},
  year = {2009},
  url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1430218339},
  edition = {XXII, 265 p.},
  isbn = {1430218339},
  month = aug}

@book{Chai00a,
  author = {Chailloux},
  title = {D\'{e}veloppement d'applications avec Objective CAML},
  publisher = {O'Reilly},
  year = {2000},
  isbn = {2841771210}}

@inproceedings{Cham89a,
  author = {Craig Chambers and David Ungar and Elgin Lee},
  title = {An Efficient Implementation of {SELF} --- a Dynamically-Typed Object-Oriented Language Based on Prototypes},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {49--70},
  year = {1989},
  doi = {10.1145/74878.74884},
  month = oct}

@inproceedings{Cham89b,
  author = {Chambers, C. and Ungar, D.},
  title = {Customization: Optimizing Compiler Technology for SELF, a Dynamically-typed Object-oriented Programming Language},
  booktitle = {Programming Language Design and Implementation (PLDI)},
  pages = {146--160},
  year = {1989},
  address = {New York, NY, USA},
  isbn = {0-89791-306-X},
  location = {Portland, Oregon, USA},
  numpages = {15},
  series = {PLDI '89}}

@inproceedings{Cham91a,
  author = {Dennis de Champeaux},
  title = {Object-Oriented Analysis and Top-Down Software Development},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {360--376},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Cham91b,
  author = {Craig Chambers and David Ungar},
  title = {Making Pure Object-Oriented Languages Practical},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {1--15},
  year = {1991},
  month = nov}

@article{Cham91c,
  author = {Craig Chambers and David Ungar and Bay-Wei Chang and Urs H{\"o}lzle},
  title = {Parents are Shared Parts of Objects: Inheritance and Encapsulation in SELF},
  journal = {Lisp and Symbolic Computation},
  volume = {4},
  pages = {207--222},
  year = {1991},
  month = jul,
  number = {3}}

@inproceedings{Cham92a,
  author = {Dennis de Champeaux and Al Anderson and Ed Feldhousen},
  title = {Case Study of Object-Oriented Software Development},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {377--391},
  year = {1992},
  month = oct}

@inproceedings{Cham92b,
  author = {Dennis de Champeaux and Doug Lea and Penelope Faure},
  title = {The Process of Object-Oriented Design},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {45--62},
  year = {1992},
  month = oct}

@inproceedings{Cham92c,
  author = {Craig Chambers},
  title = {Object-Oriented Multi-Methods in {Cecil}},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {33--56},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Cham93a,
  author = {Craig Chambers},
  title = {Predicate Classes},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {268--296},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {Predicate classes are a new linguistic construct
designed to complement normal classes in
object-oriented languages. Like a normal class, a
predicate class has a set of superclasses, methods,
and instance variables. However, unlike a normal
class, an object is automatically an instance of a
predicate class whenever it satisfies a predicate
expression associated with the predicate class. The
predicate expression can test the value or state of
the object, thus supporting a form of implicit
property-based classification that augments the
explicit type-based classification provided by
normal classes. By associating methods with
predicate classes, method lookup can depend not only
on the dynamic class of an argument but also on its
dynamic value or state. If an object is modified,
the property-based classification of an object can
change over time, implementing shifts in major
behavior modes of the object. A version of predicate
classes has been designed and implemented in the
context of the Cecil language.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@book{Cham93b,
  author = {Dennis de Champeaux},
  title = {Object-Oriented System Development},
  publisher = {Addison Wesley},
  year = {1993},
  isbn = {0-201-56355-X}}

@inproceedings{Chan03a,
  author = {A. Chan and R. Holmes and G.C. Murphy and A.T. Ying},
  title = {Scaling an object-oriented system execution visualizer through sampling},
  booktitle = {International Workshop on Program Comprehension},
  year = {2003}}

@inproceedings{Chan07a,
  author = {Prakash Chandrasekaran and Christopher L. Conway and Joseph M. Joy and Sriram K. Rajamani},
  title = {Programming asynchronous layers with CLARITY},
  booktitle = {ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  pages = {65--74},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1287624.1287636},
  address = {New York, NY, USA},
  isbn = {978-1-59593-811-4},
  location = {Dubrovnik, Croatia}}

@inproceedings{Chan08a,
  author = {Chang, Hung-Fu and Mockus, Audris},
  title = {Evaluation of source code copy detection methods on freebsd},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {61--66},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370766},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@article{Chan87a,
  author = {Shi-Kuo Chang},
  title = {Visual languages: a tutorial and survey},
  journal = {IEEE Software},
  volume = {4},
  pages = {29--39},
  year = {1987},
  doi = {10.1109/MS.1987.229792},
  month = jan,
  number = {1}}

@book{Chan88a,
  author = {K.M. Chandy and J. Misra},
  title = {Parallel Program Design: {A} Foundation},
  publisher = {Addison Wesley},
  year = {1988},
  address = {Reading, Mass.}}

@article{Chan89a,
  author = {Shi-Kuo Chang and M.J. Tauber and B. Yu and J-S. Yu},
  title = {A Visual Language Compiler},
  journal = {IEEE Transaction on Software Engineering},
  volume = {SE-15},
  pages = {506--525},
  year = {1989},
  month = may,
  number = {5}}

@article{Chan91,
  author = {Chang, Pohua P and Mahlke, Scott A and Hwu, Wen-Mei W},
  title = {Using profile information to assist classic code optimizations},
  journal = {Software: Practice and Experience},
  volume = {21},
  pages = {1301--1321},
  publisher = {Wiley Online Library},
  year = {1991},
  number = {12}}

@book{Chan97a,
  author = {Patrick Chan and Rosanna Lee},
  title = {The {Java} Class Libraries},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63458--9}}

@inproceedings{Chan97b,
  author = {Jason S. Chang and Mathis H. Chen},
  title = {An Alignment Method for Noisy Parallel Corpora based on Image Processing Techniques},
  booktitle = {Proceedings 35th Annual Meeting of the Association for Computational Linguistics},
  year = {1997},
  url = {http://acl.ldc.upenn.edu/P/P97/}}

@book{Chan98a,
  author = {Patrick Chan and Rosanna Lee},
  title = {The {Java} Class Libraries},
  publisher = {Addison Wesley},
  year = {1998},
  edition = {Second},
  isbn = {0-201-31003-1}}

@article{Chap01a,
  author = {Ned Ch{API}n and Joanne E. Hale and Khaled Md. Khan and Juan F. Ramil and Wui-Gee Than},
  title = {Types of software evolution and software maintenance},
  journal = {Journal of software maintenance and evolution},
  volume = {13},
  pages = {3--30},
  year = {2001},
  number = {1}}

@article{Char06a,
  author = {Kaushal Chari and Alan Hevner},
  title = {System Test Planning of Software: An Optimization Approach},
  journal = {IEEE Transactions on Software Enginering},
  volume = {32},
  pages = {503--5099},
  publisher = {IEEE Computer Society},
  year = {2006},
  address = {Los Alamitos, CA, USA},
  number = {07}}

@inproceedings{Char06b,
  author = {Anis Charfi and Michel Riveill and Mireille Blay-Fornarino and Anne-Marie Pinna-Dery},
  title = {Transparent and Dynamic Aspect Composition},
  booktitle = {In Proceedings of the 4th Software Engineering Properties of Languages and Aspect Technologies (SPLAT) Workshop},
  year = {2006},
  url = {http://aosd.net/workshops/splat/2006/papers/charfi.pdf},
  month = mar}

@inproceedings{Char09a,
  author = {Philippe Charles and Robert M. Fuhrer and Stanley M. Sutton Jr. and Evelyn Duesterwald and Jurgen J. Vinju},
  title = {Accelerating the creation of customized, language-Specific {IDEs} in {Eclipse}},
  booktitle = {OOPSLA},
  pages = {191-206},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1640089.1640104},
  editor = {Shail Arora and Gary T. Leavens}}

@book{Char14a,
  author = {Charmaz, Kathy},
  title = {Constructing grounded theory},
  publisher = {sage},
  year = {2014}}

@inproceedings{Char16a,
  author = {Chari, Guido and Garbervetsky, Diego and Marr, Stefan},
  title = {Building Efficient and Highly Run-Time Adaptable Virtual Machines},
  booktitle = {Proceedings of the 12th Symposium on Dynamic Languages},
  pages = {60-71},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {https://doi.org/10.1145/2989225.2989234},
  doi = {10.1145/2989225.2989234},
  abstract = {Programming language virtual machines (VMs) realize language semantics, enforce security properties, and execute applications efficiently. Fully Reflective Execution Environments (EEs) are VMs that additionally expose their whole structure and behavior to applications. This enables develop- ers to observe and adapt VMs at run time. However, there is a belief that reflective EEs are not viable for practical usages because such flexibility would incur a high performance overhead. To refute this belief, we built a reflective EE on top of a highly optimizing dynamic compiler. We introduced a new optimization model that, based on the conjecture that variability of low-level (EE-level) reflective behavior is low in many scenarios, mitigates the most significant sources of the performance overheads related to the reflective capabilities in the EE. Our experiments indicate that reflective EEs can reach peak performance in the order of standard VMs. Concretely, that a) if reflective mechanisms are not used the execution overhead is negligible compared to standard VMs, b) VM operations can be redefined at language-level without incurring in significant overheads, c) for several software adaptation tasks, applying the reflection at the VM level is not only lightweight in terms of engineering effort, but also competitive in terms of performance in comparison to other ad-hoc solutions.},
  address = {New York, NY, USA},
  isbn = {9781450344456},
  keywords = {Metaobject Protocols, Reflection, Performance, Virtual Machines},
  location = {Amsterdam, Netherlands},
  numpages = {12},
  series = {DLS 2016}}

@inproceedings{Chas92a,
  author = {Jeffrey S. Chase and Henry M. Levy and Edward D. Lazowska and Miche Baker-Harvey},
  title = {Lightweight Shared Objects in a 64-Bit Operating System},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {397--413},
  year = {1992},
  month = oct}

@inproceedings{Chas98a,
  author = {M. P. Chase and S.M. Christey and D.R. Harris and A.S. Yeh},
  title = {Managing Recovered Function and Structure of Legacy Software Components},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {79--89},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Chau01a,
  author = {Michel Chaudron},
  title = {Reflections on the Anatomy of Software Composition Languages and Mechanisms},
  booktitle = {Workshop on Composition Languages, WCL '01},
  pages = {15--24},
  year = {2001},
  url = {http://www.cs.iastate.edu/~lumpe/WCL2001/},
  address = {Vienna, Austria},
  month = sep}

@article{Chau02a,
  author = {M. Ajmal Chaumun and Hind Kabaili and Rudolf K. Keller and Francois Lustman},
  title = {A change impact model for changeability assessment in object-oriented software systems},
  journal = {Science of Computer Programming},
  volume = {45},
  pages = {155 - 174},
  year = {2002},
  url = {http://www.sciencedirect.com/science/article/B6V17-45JYFFD-3/2/53450199f9d97f551f74d07e46aa00ea},
  doi = {DOI: 10.1016/S0167-6423(02)00058-8},
  issn = {0167-6423},
  number = {2-3}}

@book{Chau98a,
  author = {Akmal B. Chaudhri and Mary Loomis},
  title = {Object Databases in Practice},
  publisher = {Prentice-Hall},
  year = {1998}}

@article{Chaw96a,
  author = {Chawathe, Sudarshan S. and Rajaraman, Anand and Garcia-Molina, Hector and Widom, Jennifer},
  title = {Change Detection in Hierarchically Structured Information},
  journal = {SIGMOD Rec.},
  volume = {25},
  pages = {493--504},
  publisher = {ACM},
  year = {1996},
  url = {http://doi.acm.org/10.1145/235968.233366},
  doi = {10.1145/235968.233366},
  acmid = {233366},
  address = {New York, NY, USA},
  issn = {0163-5808},
  month = jun,
  number = {2},
  numpages = {12}}

@article{Chel02a,
  author = {Chelf, Benjamin and Engler, Dawson and Hallem, Seth},
  title = {{How to Write System-specific, Static Checkers in Metal}},
  journal = {SIGSOFT Software Engineering Notes},
  volume = {28},
  pages = {51--60},
  publisher = {ACM},
  year = {2002},
  month = {nov},
  number = {1}}

@inproceedings{Chen00a,
  author = {Chen, Kunrong and Rajlich, V{\'a}clav},
  title = {Case Study of Feature Location Using Dependence Graph},
  booktitle = {Proceedings IEEE International Conference on Software Maintenance ({ICSM})},
  pages = {241--249},
  publisher = {IEEE Computer Society Press},
  year = {2000},
  location = {Los Alamitos CA}}

@article{Chen02a,
  author = {Chen, Chun-Houh},
  title = {Generalized Association Plots: Information Vizualization via Interactively Generated Correlation Matrices},
  journal = {Statistica Sinica},
  volume = {12},
  year = {2002},
  month = dec,
  number = {7}}

@inproceedings{Chen02b,
  author = {Chen, Guanling and Kotz, David},
  title = {Context Aggregation and Dissemination in Ubiquitous Computing Systems},
  booktitle = {WMCSA'02: Proceedings of the 4th Workshop on Mobile Computing Systems and Applications},
  pages = {105--114},
  publisher = {IEEE Computer Society},
  year = {2002},
  doi = {10.1109/MCSA.2002.1017490},
  address = {Washington, DC, USA}}

@book{Chen03a,
  author = {Jim X. Chen},
  title = {Guide to Graphics Software Tools},
  publisher = {Springer},
  year = {2003}}

@inproceedings{Chen07a,
  author = {Haibo Chen and Jie Yu and Rong Chen and Binyu Zang and Pen-Chung Yew},
  title = {POLUS: A POwerful Live Updating System},
  booktitle = {ICSE '07: Proceedings of the 29th international conference on Software Engineering},
  pages = {271--281},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/ICSE.2007.65},
  address = {Washington, DC, USA},
  isbn = {0-7695-2828-7}}

@inproceedings{Chen07b,
  author = {Chen, Feng and Ro\c{s}u, Grigore},
  title = {{MOP}: an efficient and generic runtime verification framework},
  booktitle = {OOPSLA '07: Proceedings of the 22nd annual ACM SIGPLAN conference on Object-oriented programming systems, languages and applications},
  pages = {569--588},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297027.1297069},
  address = {New York, NY, USA},
  isbn = {978-1-59593-786-5},
  location = {Montreal, Quebec, Canada}}

@inproceedings{Chen11a,
  author = {Chen, Qingwen and Grosso, Paola and Veldt, Karel van der and Laat, Cees de and Hofman, Rutger and Bal, Henri},
  title = {Profiling Energy Consumption of VMs for Green Cloud Computing},
  booktitle = {2011 IEEE Ninth International Conference on Dependable, Autonomic and Secure Computing},
  pages = {768-775},
  year = {2011},
  doi = {10.1109/DASC.2011.131}}

@article{Chen16a,
  author = {Chen, Tse-Hsun and Thomas, Stephen W. and Hassan, Ahmed E.},
  title = {A survey on the use of topic models when mining software repositories},
  journal = {Empirical Software Engineering},
  volume = {21},
  pages = {1843--1919},
  year = {2016},
  url = {http://dx.doi.org/10.1007/s10664-015-9402-8},
  doi = {10.1007/s10664-015-9402-8},
  abstract = {Researchers in software engineering have attempted to improve software development by mining and analyzing software repositories. Since the majority of the software engineering data is unstructured, researchers have applied Information Retrieval (IR) techniques to help software development. The recent advances of IR, especially statistical topic models, have helped make sense of unstructured data in software repositories even more. However, even though there are hundreds of studies on applying topic models to software repositories, there is no study that shows how the models are used in the software engineering research community, and which software engineering tasks are being supported through topic models. Moreover, since the performance of these topic models is directly related to the model parameters and usage, knowing how researchers use the topic models may also help future studies make optimal use of such models. Thus, we surveyed 167 articles from the software engineering literature that make use of topic models. We find that i) most studies centre around a limited number of software engineering tasks; ii) most studies use only basic topic models; iii) and researchers usually treat topic models as black boxes without fully exploring their underlying assumptions and parameter values. Our paper provides a starting point for new researchers who are interested in using topic models, and may help new researchers and practitioners determine how to best apply topic models to a particular software engineering task.},
  issn = {1573-7616},
  number = {5}}

@inproceedings{Chen16b,
  author = {Chen, J. and Hu, W. and Hao, D. and Xiong, Y. and Zhang, H. and Zhang, L. and Xie, B.},
  title = {An {Empirical} {Comparison} of {Compiler} {Testing} {Techniques}},
  booktitle = {2016 {IEEE}/{ACM} 38th {International} {Conference} on {Software} {Engineering} ({ICSE})},
  pages = {180--190},
  year = {2016},
  abstract = {Compilers, as one of the most important infrastructure of today's digital world, are expected to be trustworthy. Different testing techniques are developed for testing compilers automatically. However, it is unknown so far how these testing techniques compared to each other in terms of testing effectiveness: how many bugs a testing technique can find within a time limit. In this paper, we conduct a systematic and comprehensive empirical comparison of three compiler testing techniques, namely, Randomized Differential Testing (RDT), a variant of RDT-Different Optimization Levels (DOL), and Equivalence Modulo Inputs (EMI). Our results show that DOL is more effective at detecting bugs related to optimization, whereas RDT is more effective at detecting other types of bugs, and the three techniques can complement each other to a certain degree. Furthermore, in order to understand why their effectiveness differs, we investigate three factors that influence the effectiveness of compiler testing, namely, efficiency, strength of test oracles, and effectiveness of generated test programs. The results indicate that all the three factors are statistically significant, and efficiency has the most significant impact.},
  keywords = {Testing, Optimization, Computer bugs, Electromagnetic interference, History, Program processors},
  month = may}

@inproceedings{Chen16c,
  author = {Chen, Yuting and Su, Ting and Sun, Chengnian and Su, Zhendong and Zhao, Jianjun},
  title = {Coverage-directed differential testing of {JVM} implementations},
  booktitle = {Proceedings of the 37th {ACM} {SIGPLAN} {Conference} on {Programming} {Language} {Design} and {Implementation}},
  pages = {85--99},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {https://cse.sjtu.edu.cn/~zhao/pub/pdf/pldi2016.pdf},
  abstract = {Java virtual machine (JVM) is a core technology, whose reliability is critical. Testing JVM implementations requires painstaking effort in designing test classfiles (*.class) along with their test oracles. An alternative is to employ binary fuzzing to differentially test JVMs by blindly mutating seeding classfiles and then executing the resulting mutants on different JVM binaries for revealing inconsistent behaviors. However, this blind approach is not cost effective in practice because most of the mutants are invalid and redundant. This paper tackles this challenge by introducing classfuzz, a coverage-directed fuzzing approach that focuses on representative classfiles for differential testing of JVMs' startup processes. Our core insight is to (1) mutate seeding classfiles using a set of predefined mutation operators (mutators) and employ Markov Chain Monte Carlo (MCMC) sampling to guide mutator selection, and (2) execute the mutants on a reference JVM implementation and use coverage uniqueness as a discipline for accepting representative ones. The accepted classfiles are used as inputs to differentially test different JVM implementations and find defects. We have implemented classfuzz and conducted an extensive evaluation of it against existing fuzz testing algorithms. Our evaluation results show that classfuzz can enhance the ratio of discrepancy-triggering classfiles from 1.7\% to 11.9\%. We have also reported 62 JVM discrepancies, along with the test classfiles, to JVM developers. Many of our reported issues have already been confirmed as JVM defects, and some even match recent clarifications and changes to the Java SE 8 edition of the JVM specification.},
  keywords = {Differential testing, fuzz testing, Java virtual machine, MCMC sampling},
  month = jun,
  urldate = {2021-06-29}}

@inproceedings{Chen17a,
  author = {Ting Chen and Xiaoqi Li and Xiapu Luo and Xiaosong Zhang},
  title = {Under-Optimized Smart Contracts Devour Your Money},
  booktitle = {Saner'17 - Early Research Achievements},
  year = {2017},
  keywords = {smart contracts, blockchain}}

@inproceedings{Chen18a,
  author = {Chen, Chunyang and Su, Ting and Meng, Guozhu and Xing, Zhenchang and Liu, Yang},
  title = {From UI Design Image to GUI Skeleton: A Neural Machine Translator to Bootstrap Mobile GUI Implementation},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering},
  pages = {665-676},
  publisher = {Association for Computing Machinery},
  year = {2018},
  url = {https://doi.org/10.1145/3180155.3180240},
  doi = {10.1145/3180155.3180240},
  address = {New York, NY, USA},
  isbn = {9781450356381},
  keywords = {deep learning, reverse engineering, user interface},
  location = {Gothenburg, Sweden},
  numpages = {12},
  series = {ICSE '18}}

@article{Chen19a,
  author = {Chen, Chunyang and Xing, Zhenchang and Liu, Yang and Ong, Kent Long Xiong},
  title = {Mining likely analogical {API}s across third-party libraries via large-scale unsupervised {API} semantics embedding},
  journal = {IEEE Transactions on Software Engineering},
  publisher = {IEEE},
  year = {2019}}

@inproceedings{Chen19b,
  author = {Chen, Yuting and Su, Ting and Su, Zhendong},
  title = {{Deep Differential Testing of JVM Implementations}},
  booktitle = {International Conference on Software Engineering (ICSE'19)},
  pages = {1257-1268},
  publisher = {IEEE Press},
  year = {2019},
  url = {https://doi.org/10.1109/ICSE.2019.00127},
  doi = {10.1109/ICSE.2019.00127},
  keywords = {semantically different mutants, live bytecode mutation, differential JVM testing},
  location = {Montreal, Quebec, Canada},
  numpages = {12}}

@article{Chen20a,
  author = {Chen, Junjie and Patra, Jibesh and Pradel, Michael and Xiong, Yingfei and Zhang, Hongyu and Hao, Dan and Zhang, Lu},
  title = {A {Survey} of {Compiler} {Testing}},
  journal = {ACM Computing Surveys},
  pages = {1--36},
  year = {2020},
  url = {https://dl.acm.org/doi/10.1145/3363562},
  abstract = {Virtually any software running on a computer has been processed by a compiler or a compiler-like tool. Because compilers are such a crucial piece of infrastructure for building software, their correctness is of paramount importance. To validate and increase the correctness of compilers, significant research efforts have been devoted to testing compilers. This survey article provides a comprehensive summary of the current state-of-the-art of research on compiler testing. The survey covers different aspects of the compiler testing problem, including how to construct test programs, what test oracles to use for determining whether a compiler behaves correctly, how to execute compiler tests efficiently, and how to help compiler developers take action on bugs discovered by compiler testing. Moreover, we survey work that empirically studies the strengths and weaknesses of current compiler testing research and practice. Based on the discussion of existing work, we outline several open challenges that remain to be addressed in future work.},
  month = may,
  urldate = {2021-03-31}}

@article{Chen76a,
  author = {P.P.S. Chen},
  title = {The Entity-Relationship Model: Toward a Unified View of Data},
  journal = {ACM TODS},
  volume = {1},
  pages = {9--36},
  year = {1976},
  month = mar,
  number = {1}}

@incollection{Chen93a,
  author = {Qiming Chen and Ming-Chien Shan},
  title = {Abstract View Objects for Multiple {OODB} Integration},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {237--250},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {The notion of Abstract View Object (AVO) is
introduced to support abstract representations of
foreign or integrated objects in a multidatabase
environment. This approach allows OODBs to be
cooperated without physical integration, underlies a
consistent universal object identification
mechanism, and provides and intuitive set-theoretic
foundation for linking object identification, object
integration and function inheritance semantically
over multidatabases.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Chen94a,
  author = {Weimin Chen and Volker Turau and Wolfgang Klas},
  title = {Efficient Dynamic Look-up Strategy for Multi-Methods},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {408--431},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Chen94b,
  author = {Jia-L. Chen and D. McLeod and D. O'Leary},
  title = {Schema Evolution for Object-Based Accounting Database Systems},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {40--52},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Chen94c,
  author = {Yih-Farn Chen and David S. Rosenblum and Kiem-Phong Vo},
  title = {TestTube: a system for selective regression testing},
  booktitle = {Proceedings of the 16th international conference on Software engineering},
  pages = {211--220},
  publisher = {IEEE Computer Society Press},
  year = {1994},
  doi = {10.1109/ICSE.1994.296780},
  isbn = {0-8186-5855-X},
  issn = {0270-5257},
  location = {Sorrento, Italy}}

@inproceedings{Chen95a,
  author = {T. Y. Chen and C. K. Low},
  title = {Dynamic Data Flow Analysis for {C++}},
  booktitle = {Proceedings of the Second Asia Pacific Software Engineering Conference (APSEC'95)},
  pages = {22},
  publisher = {IEEE Computer Society},
  year = {1995},
  address = {Washington, DC, USA},
  isbn = {0-8186-7171-8}}

@article{Chen96a,
  author = {Jan-Bon Chen and Samuel C. Lee},
  title = {Generation and {Reorganization} of {Subtype} Hierarchies},
  journal = {Journal of Object Oriented Programming},
  volume = {8},
  pages = {26--35},
  year = {1996},
  month = jan,
  number = {8}}

@inproceedings{Chen98,
  author = {Cheng, Perry and Harper, Robert and Lee, Peter},
  title = {Generational stack collection and profile-driven pretenuring},
  booktitle = {Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation},
  pages = {162--173},
  year = {1998}}

@article{Chen98a,
  author = {Chen, Yih-Farn and Gansner, Emden R. and Koutsofios, Eleftherios},
  title = {A {C}++ Data Model Supporting Reachability Analysis and Dead Code Detection},
  journal = {IEEE Transactions on Software Engineering},
  volume = {24},
  pages = {682--693},
  year = {1998},
  url = {http://www.research.att.com/~chen/chen/acacia-tse98.ps},
  month = sep,
  number = {9}}

@article{Chen98b,
  author = {Chen, T. Y. and Cheung, S. C. and Yiu, S. M.},
  title = {Metamorphic {Testing}: {A} {New} {Approach} for {Generating} {Next} {Test} {Cases}},
  journal = {ArXiv},
  year = {1998},
  url = {http://arxiv.org/abs/2002.12543},
  abstract = {In software testing, a set of test cases is constructed according to some predefined selection criteria. The software is then examined against these test cases. Three interesting observations have been made on the current artifacts of software testing. Firstly, an error-revealing test case is considered useful while a successful test case which does not reveal software errors is usually not further investigated. Whether these successful test cases still contain useful information for revealing software errors has not been properly studied. Secondly, no matter how extensive the testing has been conducted in the development phase, errors may still exist in the software [5]. These errors, if left undetected, may eventually cause damage to the production system. The study of techniques for uncovering software errors in the production phase is seldom addressed in the literature. Thirdly, as indicated by Weyuker in [6], the availability of test oracles is pragmatically unattainable in most situations. However, the availability of test oracles is generally assumed in conventional software testing techniques. In this paper, we propose a novel test case selection technique that derives new test cases from the successful ones. The selection aims at revealing software errors that are possibly left undetected in successful test cases which may be generated using some existing strategies. As such, the proposed technique augments the effectiveness of existing test selection strategies. The technique also helps uncover software errors in the production phase and can be used in the absence of test oracles.},
  annote = {Comment: 11 pages, Technical Report HKUST-CS98-01, Department of Computer Science, The Hong Kong University of Science and Technology},
  keywords = {Computer Science - Software Engineering},
  shorttitle = {Metamorphic {Testing}},
  urldate = {2021-07-09}}

@inproceedings{Cheo02a,
  author = {Y. Cheon and G. T. Leavens},
  title = {A simple and practical approach to unit testing: The JML and JUnit way},
  booktitle = {Proceedings ECOOP 2002},
  volume = 2374,
  pages = {231--255},
  publisher = {Springer Verlag},
  year = {2002},
  address = {Malaga, Spain},
  editor = {Boris Magnusson},
  month = jun,
  series = {LNCS}}

@inproceedings{Cheo05a,
  author = {Elaine Cheong and Jie Liu},
  title = {galsC: A Language for Event-Driven Embedded Systems},
  booktitle = {DATE '05: Proceedings of the conference on Design, Automation and Test in Europe},
  pages = {1050--1055},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/DATE.2005.165},
  address = {Washington, DC, USA},
  isbn = {0-7695-2288-2}}

@inproceedings{Cher07a,
  author = {Cherubini, M. and Venolia, G. and DeLine, R.},
  title = {Building an Ecologically valid, Large-scale Diagram to Help Developers Stay Oriented in Their Code},
  journal = {Visual Languages and Human-Centric Computing, 2007. VL/HCC 2007. IEEE Symposium on},
  booktitle = {Visual Languages and Human-Centric Computing, 2007. VL/HCC 2007. IEEE Symposium on},
  pages = {157--162},
  year = {2007},
  url = {http://dx.doi.org/10.1109/VLHCC.2007.19},
  doi = {10.1109/VLHCC.2007.19},
  abstract = {This paper presents the creation, deployment, and
evaluation of a large-scale, spatially-stable,
paper-based visualization of a software system. The
visualization was created for a single team, who
were involved systematically in its initial design
and subsequent design iterations. The evaluation
indicates that the visualization supported the
"onboarding" scenario but otherwise failed to
realize the research team's expectations. We present
several lessons learned, and cautions to future
research into large-scale, spatially-stable
visualizations of software systems.},
  citeulike-article-id = {2623649},
  citeulike-linkout-0 = {http://dx.doi.org/10.1109/VLHCC.2007.19},
  citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4351339},
  day = {27},
  posted-at = {2010-01-08 08:26:12},
  priority = {2}}

@inproceedings{Cher07b,
  author = {Cherubini, Mauro and Venolia, Gina and DeLine, Rob and Ko, Andrew J.},
  title = {Let's go to the whiteboard: how and why software developers use drawings},
  booktitle = {CHI '07: Proceedings of the SIGCHI conference on Human factors in computing systems},
  pages = {557--566},
  publisher = {ACM},
  year = {2007},
  url = {http://dx.doi.org/10.1145/1240624.1240714},
  doi = {10.1145/1240624.1240714},
  abstract = {Software developers are rooted in the written form
of their code, yet they often draw diagrams
representing their code. Unfortunately, we still
know little about how and why they create these
diagrams, and so there is little research to inform
the design of visual tools to support developers'
work. This paper presents findings from
semi-structured interviews that have been validated
with a structured survey. Results show that most of
the diagrams had a transient nature because of the
high cost of changing whiteboard sketches to
electronic renderings. Diagrams that documented
design decisions were often externalized in these
temporary drawings and then subsequently lost.
Current visualization tools and the software
development practices that we observed do not solve
these issues, but these results suggest several
directions for future research.},
  address = {New York, NY, USA},
  citeulike-article-id = {1561270},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1240624.1240714},
  citeulike-linkout-1 = {http://dx.doi.org/10.1145/1240624.1240714},
  isbn = {978-1-59593-593-9},
  location = {San Jose, California, USA},
  posted-at = {2010-01-08 08:27:08},
  priority = {2}}

@inproceedings{Cher07c,
  author = {Chern, Rick and De Volder, Kris},
  title = {Debugging with Control-flow Breakpoints},
  booktitle = {International {C}onference on {A}spect-{O}riented {S}oftware {D}evelopment ({AOSD}'07)},
  pages = {96--106},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1218563.1218575},
  acmid = {1218575},
  address = {New York, NY, USA},
  isbn = {1-59593-615-7},
  keywords = {case studies, debugger interface, pointcut language},
  location = {Vancouver, British Columbia, Canada},
  numpages = {11}}

@article{Cher07d,
  author = {Cherem, Sigmund and Princehouse, Lonnie and Rugina, Radu},
  title = {Practical Memory Leak Detection Using Guarded Value-Flow Analysis},
  journal = {SIGPLAN Not.},
  volume = {42},
  pages = {480--491},
  publisher = {Association for Computing Machinery},
  year = {2007},
  url = {https://doi.org/10.1145/1273442.1250789},
  doi = {10.1145/1273442.1250789},
  abstract = {This paper presents a practical inter-procedural analysis algorithm for detecting memory leaks in C programs. Our algorithm tracks the flow of values from allocation points to deallocation points using a sparse representation of the program consisting of a value flow graph that captures def-use relations and value flows via program assignments. Edges in the graph are annotated with guards that describe branch conditions in the program. The memory leak analysis is reduced to a reachability problem over the guarded value flowgraph. Our implemented tool has been effective at detecting more than 60 memory leaks in the SPEC2000 benchmarks and in two open-source applications, bash and sshd, while keeping the false positive rate below 20%. The sparse program representation makes the tool efficient in practice, and allows it to report concise error messages.},
  address = {New York, NY, USA},
  issn = {0362-1340},
  issue_date = {June 2007},
  keywords = {value-flow analysis, memory leaks, memory management, static error detection},
  month = jun,
  number = {6},
  numpages = {12}}

@article{Cher88a,
  author = {Cheriton, David},
  title = {The V distributed system},
  journal = {Commun. ACM},
  volume = {31},
  pages = {314--333},
  publisher = {ACM},
  year = {1988},
  url = {http://doi.acm.org/10.1145/42392.42400},
  doi = {10.1145/42392.42400},
  acmid = {42400},
  address = {New York, NY, USA},
  issn = {0001-0782},
  issue_date = {March 1988},
  month = mar,
  number = {3},
  numpages = {20}}

@inproceedings{Ches05a,
  author = {Ophelia C. Chesley and Xiaoxia Ren and Barbara G. Ryder},
  title = {Crisp: A Debugging Tool for {J}ava Programs},
  booktitle = {Proceedings of the 21st IEEE International Conference on Software Maintenance},
  pages = {401-410},
  year = {2005},
  issn = {1063-6773},
  series = {{ICSM}'05}}

@inproceedings{Chev11a,
  author = {Chevalier-Boisvert, Maxime and Lavoie, Erick and Feeley, Marc and Dufour, Bruno},
  title = {Bootstrapping a Self-Hosted Research Virtual Machine for JavaScript},
  booktitle = {Dynamic Language Symposium},
  year = {2011}}

@inproceedings{Chev15a,
  author = {Chevalier-Boisvert, Maxime and Feeley, Marc},
  title = {Interprocedural Type Specialization of JavaScript Programs Without Type Analysis},
  booktitle = {European Conference on Object-Oriented Programming (ECOOP'15)},
  pages = {101-123},
  year = {2015},
  note = {volume 37 of Leibniz International Proceedings in Informatics (LIPIcs)}}

@inproceedings{Chev16a,
  author = {Chevalier-Boisvert, Maxime and Feeley, Marc},
  title = {Interprocedural Type Specialization of JavaScript Programs Without Type Analysis},
  booktitle = {European Conference on Object-Oriented Programming (ECOOP'16)},
  pages = {1--24},
  year = {2016}}

@article{Chev78a,
  author = {R. J. Chevance and T. Heidet},
  title = {Static profile and dynamic behavior of COBOL programs},
  journal = {SIGPLAN Not.},
  volume = {13},
  pages = {44--57},
  publisher = {ACM},
  year = {1978},
  doi = {10.1145/953411.953414},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {4}}

@inproceedings{Chi11a,
  author = {Chipounov, Vitaly and Kuznetsov, Volodymyr and Candea, George},
  title = {S2{E}: A {P}latform for {I}n-vivo {M}ulti-path {A}nalysis of {S}oftware {S}ystems},
  booktitle = {Architectural Support for Programming Languages and Operating Systems},
  year = {2011},
  doi = {10.1145/1950365.1950396},
  series = {ASPLOS XVI}}

@article{Chi89a,
  author = {Michelene T. H. Chi and Miriam Bassok and Matthew W. Lewis and Peter Reimann and Robert Glaser},
  title = {Self-Explanations: How students study and use examples in learning to solve problems.},
  journal = {Cognitive Science},
  volume = {13},
  pages = {145--182},
  year = {1989},
  month = apr,
  number = {2}}

@inproceedings{Chib00,
  author = {Shigeru Chiba},
  title = {Load-Time Structural Reflection in {Java}},
  booktitle = {Proceedings of ECOOP 2000},
  volume = {1850},
  pages = {313--336},
  year = {2000},
  coden = {LNCSD9},
  isbn = {3540676600},
  issn = {0302-9743},
  series = {LNCS}}

@inproceedings{Chib03,
  author = {Shigeru Chiba and Muga Nishizawa},
  title = {An Easy-to-Use Toolkit for Efficient {Java} Bytecode Translators},
  booktitle = {In Proceedings of the second International Conference on Generative Programming and Component Engineering (GPCE'03)},
  volume = {2830},
  pages = {364--376},
  year = {2003},
  doi = {10.1007/978-3-540-39815-8_22},
  isbn = {978-3-540-39815-8},
  series = {LNCS}}

@inproceedings{Chib93a,
  author = {Shigeru Chiba and Takashi Masuda},
  title = {Designing an Extensible Distributed Language with a Meta-Level Architecture},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {483--502},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {This paper presents a methodology for designing
extensible languages for distributed computing. As a
sample product of this methodology, which is based
on a meta-level (or reflective) technique, this
paper describes a variant of C++ called Open C++, in
which the programmer can alter the implementation of
method calls to obtain new language functionalities
suitable for the programmer's applications. This
paper also presents a framework called Oc, which is
used to help obtain various functionalities for
distributed computing on top of Open C++. Because
the overhead due to the meta level computation is
negligible in distributed computing, this
methodology is applicable to practical programming.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@techreport{Chib93b,
  author = {Shigeru Chiba},
  title = {Open C++ Release 1.2 Programmer Guide},
  year = {1993},
  institution = {Dept of Information Science, University of Tokyo},
  number = {93-3}}

@inproceedings{Chib95a,
  author = {Shigeru Chiba},
  title = {A Metaobject Protocol for {C}++},
  booktitle = {Proceedings of OOPSLA '95},
  volume = {30},
  pages = {285--299},
  year = {1995},
  month = oct,
  series = {ACM SIGPLAN Notices}}

@inproceedings{Chib96a,
  author = {Shigeru Chiba and Gregor Kiczales and John Lamping},
  title = {Avoiding Confusion in Metacircularity: The Meta-Helix},
  booktitle = {Proceedings of {ISOTAS} '96},
  volume = {1049},
  pages = {157--172},
  publisher = {Springer},
  year = {1996},
  url = {http://www2.parc.com/csl/groups/sda/publications/papers/Chiba-ISOTAS96/for-web.pdf},
  doi = {10.1007/3-540-60954-7_49},
  editor = {Kokichi Futatsugi and Satoshi Matsuoka},
  isbn = {3-540-60954-7}}

@inproceedings{Chid91a,
  author = {Shyam R. Chidamber and Chris F. Kemerer},
  title = {Towards a Metrics Suite for Object Oriented Design},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {197--211},
  year = {1991},
  month = nov}

@article{Chid94a,
  author = {Shyam R. Chidamber and Chris F. Kemerer},
  title = {A Metrics Suite for Object Oriented Design},
  journal = {IEEE Transactions on Software Engineering},
  volume = {20},
  pages = {476--493},
  year = {1994},
  month = jun,
  number = {6}}

@article{Chik90a,
  author = {Elliot Chikofsky and Cross II, James},
  title = {Reverse Engineering and Design Recovery: A Taxonomy},
  journal = {IEEE Software},
  volume = {7},
  pages = {13--17},
  publisher = {IEEE Computer Society Press},
  year = {1990},
  url = {http://dx.doi.org/10.1109/52.43044},
  doi = {10.1109/52.43044},
  month = jan,
  number = {1}}

@incollection{Chik92a,
  author = {Elliot J. Chikofsky and James H. Cross II},
  title = {Reverse Engineering and Design Recovery: A Taxonomy},
  booktitle = {Software Reengineering},
  pages = {54--58},
  publisher = {IEEE Computer Society Press},
  year = {1992},
  editor = {Robert S. Arnold}}

@book{Chil00a,
  author = {Childs, Matt and Lomax, Paul and Petrusha, Ron},
  title = {{VBScript in a Nutshell}},
  publisher = {O'Reilly},
  year = {2000},
  url = {http://www.oreilly.com/catalog/vbscriptian/index.html},
  isbn = {ISBN 1-56592-720-6},
  month = may}

@article{Chil94a,
  author = {Chilenski, J. J. and Miller, S. P.},
  title = {Applicability of modified condition/decision coverage to software testing},
  journal = {Software Engineering Journal},
  volume = {9},
  pages = {193--200},
  year = {1994},
  abstract = {Modified condition/decision coverage is a structural
coverage criterion requiring that each condition
within a decision is shown by execution to
independently and correctly affect the outcome of
the decision. This criterion was developed to help
meet the need for extensive testing of complex
Boolean expressions in safety-critical applications.
The paper describes the modified condition/decision
coverage criterion, its properties and areas for
further work},
  date-added = {2007-02-01 14:05:28 +0100},
  date-modified = {2007-02-01 14:05:28 +0100},
  isbn = {0268-6961},
  number = {5}}

@inproceedings{Chim11a,
  author = {Chimdyalwar, Bharti and Kumar, Shrawan},
  title = {Effective false positive filtering for evolving software},
  booktitle = {Proceedings of the 4th India Software Engineering Conference},
  pages = {103--106},
  publisher = {ACM},
  year = {2011},
  address = {New York,NY,USA},
  isbn = {978-1-4503-0559-4},
  location = {Thiruvananthapuram, Kerala, India},
  numpages = {4},
  series = {ISEC '11}}

@article{Chin91a,
  author = {R.S. Chin and S.T. Chanson},
  title = {Distributed Object-Based Programming Systems},
  journal = {ACM Computing Surveys},
  volume = {23},
  pages = {91--124},
  year = {1991},
  month = mar,
  number = {1}}

@book{Chis07a,
  author = {David Chisnall},
  title = {The Definitive Guide to the Xen Hypervisor},
  publisher = {Prentice Hall},
  year = {2007},
  isbn = {978-0132349710},
  series = {Open Source Software Development Series}}

@inproceedings{Chis11a,
  author = {Chis, Adriana E and Mitchell, Nick and Schonberg, Edith and Sevitsky, Gary and O'Sullivan, Patrick and Parsons, Trevor and Murphy, John},
  title = {Patterns of memory inefficiency},
  booktitle = {ECOOP 2011--Object-Oriented Programming: 25th European Conference, Lancaster, Uk, July 25-29, 2011 Proceedings 25},
  pages = {383--407},
  year = {2011},
  organization = {Springer}}

@inproceedings{Chis13a,
  author = {Andrei Chi\c{s} and Oscar Nierstrasz and Tudor G\^{i}rba},
  title = {Towards a Moldable Debugger},
  booktitle = {Proceedings of the 7th Workshop on Dynamic Languages and Applications},
  year = {2013},
  url = {http://scg.unibe.ch/archive/papers/Chis13a-TowardsMoldableDebugger.pdf},
  doi = {10.1145/2489798.2489801},
  abstract = {The debugger is an essential tool in any programming environment, as it helps developers understand the dynamic behaviour of software systems. However, traditional debuggers fail in answering domain-specific questions, as the semantics of what they show and do are fixed. In this paper we introduce our work towards a moldable debugger which, unlike traditional debuggers, both adapts itself and can be adapted to a particular debugging context. Thus, it allows developers to answer their questions by using concepts from their own application domains.}}

@article{Chis13b,
  author = {Chisnall, David},
  title = {The challenge of cross-language interoperability},
  journal = {Communications of the ACM},
  volume = {56},
  pages = {50--56},
  publisher = {ACM New York, NY, USA},
  year = {2013},
  number = {12}}

@inproceedings{Chis14b,
  author = {Chi\c{s}, Andrei and G\^{i}rba, Tudor and Nierstrasz, Oscar},
  title = {The {Moldable Debugger}: A Framework for Developing Domain-Specific Debuggers},
  booktitle = {Software Language Engineering},
  pages = {102-121},
  publisher = {Springer},
  year = {2014},
  url = {http://scg.unibe.ch/archive/papers/Chis14b-MoldableDebugger.pdf},
  doi = {10.1007/978-3-319-11245-9_6},
  abstract = {Debuggers are crucial tools for developing object-oriented software systems as they give developers direct access to the running systems. Nevertheless, traditional debuggers rely on generic mechanisms to explore and exhibit the execution stack and system state, while developers reason about and formulate domain-specific questions using concepts and abstractions from their application domains. This creates an abstraction gap between the debugging needs and the debugging support leading to an inefficient and error-prone debugging effort. To reduce this gap, we propose a framework for developing domain-specific debuggers called the Moldable Debugger. The Moldable Debugger is adapted to a domain by creating and combining domain-specific debugging operations with domain-specific debugging views, and adapts itself to a domain by selecting, at run time, appropriate debugging operations and views. We motivate the need for domain-specific debugging, identify a set of key requirements and show how our approach improves debugging by adapting the debugger to several domains.},
  isbn = {978-3-319-11244-2}}

@inproceedings{Chis15a,
  author = {Chi\c{s}, Andrei and Nierstrasz, Oscar and Syrel, Aliaksei and G\^{\i}rba, Tudor},
  title = {The Moldable Inspector},
  booktitle = {2015 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software (Onward!)},
  pages = {44--60},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2814228.2814234},
  doi = {10.1145/2814228.2814234},
  acmid = {2814234},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3688-8},
  keywords = {Domain-specific tools, Object inspector, Programming environments, User interfaces},
  location = {Pittsburgh, PA, USA},
  numpages = {17},
  series = {Onward! 2015}}

@phdthesis{Chis16a,
  author = {Chis, Andrei},
  title = {Moldable tools},
  publisher = {Lulu. com},
  year = {2016},
  school = {University of Bern}}

@inproceedings{Chiu02a,
  author = {Kenneth Chiu and Madhusudhan Govindaraju and Randall Bramley},
  title = {Investigating the Limits of SOAP Performance for Scientific Computing},
  booktitle = {HPDC '02: Proceedings of the 11 th IEEE International Symposium on High Performance Distributed Computing HPDC-11 20002 (HPDC'02)},
  pages = {246},
  publisher = {IEEE Computer Society},
  year = {2002},
  address = {Washington, DC, USA},
  isbn = {0-7695-1686-6}}

@inproceedings{Cho13a,
  author = {Cho, Hyoun Kyu and Moseley, Tipp and Hank, Richard and Bruening, Derek and Mahlke, Scott},
  title = {Instant profiling: Instrumentation sampling for profiling datacenter applications},
  booktitle = {Proceedings of the 2013 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  pages = {1-10},
  year = {2013},
  doi = {10.1109/CGO.2013.6494982}}

@article{Cho14a,
  author = {Cho, Kyunghyun and Van Merri{\"e}nboer, Bart and Bahdanau, Dzmitry and Bengio, Yoshua},
  title = {On the properties of neural machine translation: Encoder-decoder approaches},
  journal = {arXiv preprint arXiv:1409.1259},
  year = {2014}}

@book{Chof91a,
  title = {Proceedings {STACS}'91},
  volume = {480},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Hamburg, Germany},
  editor = {Choffrut, M.Jantzen, C.},
  isbn = {3-540-53709-0},
  month = dec,
  series = {LNCS}}

@inproceedings{Choi89a,
  author = {Choi, B. J. and DeMillo, R. A. and Krauser, E. W. and Martin, R. J. and Mathur, A. P. and Offutt, A. J. and Pan, H. and Spafford, E. H.},
  title = {The Mothra Tool Set (Software Testing)},
  journal = {System Sciences, 1989. Vol.II: Software Track, Proceedings of the Twenty-Second Annual Hawaii International Conference on},
  booktitle = {System Sciences},
  volume = {2},
  pages = {275--284},
  year = {1989},
  abstract = {Mothra is a software test environment that supports
mutation-based testing of software systems. Mutation
analysis is a powerful software testing technique
that evaluates the adequacy of test data based on
its ability to differentiate between the program
under test and its mutants, where mutants are
constructed by inserting single, simple errors into
the program under test. This evaluation process also
provides guidance in the creation of new test cases
to provide more adequate testing. Mothra consists of
a collection of individual tools, each of which
implements a separate, independent function for the
testing system. The initial Mothra tool set, for the
most part, duplicates functionality existing in
previous mutation analysis systems. Current efforts
are concentrated on extending this basic tool set to
include capabilities previously unavailable to the
software testing community. The authors describe
Mothra tool set and extensions planned for the
future},
  date-added = {2007-02-01 14:05:28 +0100},
  date-modified = {2007-02-01 14:11:26 +0100},
  institution = {Dept. of Computer Science, Purdue Univiversity, West Lafayette, IN},
  month = {jan}}

@article{Choi90a,
  author = {Song C. Choi and Walt Scacchi},
  title = {Extracting and {Restructuring} the {Design} of {Large} {Systems}},
  journal = {IEEE Software},
  pages = {66--71},
  year = {1990},
  month = jan}

@book{Chom57a,
  author = {Noam Chomsky},
  title = {Syntactic Structures},
  publisher = {Mouton and Co},
  year = {1957},
  address = {The Hague}}

@article{Chon13a,
  author = {Chong, Chun Yong and Lee, Sai Peck and Ling, Teck Chaw},
  title = {Efficient software clustering technique using an adaptive and preventive dendrogram cutting approach},
  journal = {Information and Software Technology},
  volume = {55},
  pages = {1994--2012},
  year = {2013},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584913001481},
  doi = {10.1016/j.infsof.2013.07.002},
  abstract = {Context
Software clustering is a key technique that is used in reverse engineering to recover a high-level abstraction of the software in the case of limited resources. Very limited research has explicitly discussed the problem of finding the optimum set of clusters in the design and how to penalize for the formation of singleton clusters during clustering.
Objective
This paper attempts to enhance the existing agglomerative clustering algorithms by introducing a complementary mechanism. To solve the architecture recovery problem, the proposed approach focuses on minimizing redundant effort and penalizing for the formation of singleton clusters during clustering while maintaining the integrity of the results.
Method
An automated solution for cutting a dendrogram that is based on least-squares regression is presented in order to find the best cut level. A dendrogram is a tree diagram that shows the taxonomic relationships of clusters of software entities. Moreover, a factor to penalize clusters that will form singletons is introduced in this paper. Simulations were performed on two open-source projects. The proposed approach was compared against the exhaustive and highest gap dendrogram cutting methods, as well as two well-known cluster validity indices, namely, Dunn's index and the Davies-Bouldin index.
Results
When comparing our clustering results against the original package diagram, our approach achieved an average accuracy rate of 90.07\% from two simulations after the utility classes were removed. The utility classes in the source code affect the accuracy of the software clustering, owing to its omnipresent behavior. The proposed approach also successfully penalized the formation of singleton clusters during clustering.
Conclusion
The evaluation indicates that the proposed approach can enhance the quality of the clustering results by guiding software maintainers through the cutting point selection process. The proposed approach can be used as a complementary mechanism to improve the effectiveness of existing clustering algorithms.},
  issn = {0950-5849},
  keywords = {Design recovery, Remodularization, Software clustering, Software maintenance},
  month = nov,
  number = {11},
  urldate = {2019-03-27}}

@inproceedings{Chou88a,
  author = {H. Chou and W. Kim},
  title = {Versions and Change Notification in an Object-oriented Database System},
  booktitle = {25th ACM/IEEE Design Automation Conference},
  year = {1988}}

@unpublished{Chou95a,
  author = {M-P. Chou and M. Dodani and C. Hughes and K. Kinsley},
  title = {{CADDET}: {A} Configurable Automated Database Design Engineering Tool},
  year = {1995},
  note = {University of Iowa},
  type = {Draft}}

@inproceedings{Chow96a,
  author = {Chow, Kingsum and Notkin, David},
  title = {Semi-automatic update of applications in response to library changes.},
  booktitle = {International {C}onference on {S}oftware {M}aintenance ({ICSM})},
  volume = {96},
  pages = {359},
  year = {1996}}

@article{Chri03a,
  author = {Aske Simon Christensen and Anders Moller and Michael I. Schwartzbach},
  title = {Extending Java for highlevel web service construction},
  journal = {ACM Transaction on Programming Languages and Systems},
  volume = {25},
  pages = {814--875},
  year = {2003},
  number = {6}}

@inproceedings{Chri05a,
  author = {Andreas Christl and Rainer Koschke and Margaret-Anne Storey},
  title = {Equipping the Reflexion Method with Automated Clustering},
  booktitle = {{WCRE} '05: Proceedings of the 12th Working Conference on Reverse Engineering},
  pages = {89--98},
  year = {2005}}

@book{Chri15a,
  author = {Larry B. Christensen and R. Burke Johnson and Lisa A. Turner},
  title = {Research Methods, Design, and Analysis; 12th Edition, Global Edition},
  publisher = {Pearson, Boston, Mass y 2015},
  year = {2015},
  isbn = {9781292057743}}

@book{Chri98a,
  author = {Tom Christiansen and Nathan Torkington},
  title = {Perl Cookbook},
  publisher = {O'Reilly},
  year = {1998}}

@inproceedings{Chris08a,
  author = {Christophe Rhodes},
  title = {Sbcl: A sanely-bootstrappable common lisp.},
  booktitle = {International Workshop on Self Sustainable Systems (S3)},
  pages = {74-86},
  year = {2008}}

@book{Chris11a,
  title={Research methods, design, and analysis},
  author={Christensen, Larry B and Johnson, Burke and Turner, Lisa Anne and Christensen, Larry B},
  year={2011},
  publisher={Allyn \& Bacon Boston, MA}
}

@book{Chris97a,
  author = {Clayton Christensen},
  title = {The Innovator's Dilemma: When New Technologies Cause Great Firms to Fail},
  publisher = {Harvard Business Review Press},
  year = {1997}}

@misc{Chromedbg,
  author = {Google},
  title = {Chrome Javascript Debugger},
  year = {2023},
  howpublished = {\url{https://www.google.com/chrome/}}}

@inproceedings{Chu03a,
  author = {Mark C. Chu-Carroll and James Wright and Annie T. T. Ying},
  title = {Visual separation of concerns through multidimensional program storage},
  booktitle = {AOSD '03: Proceedings of the 2nd international conference on Aspect-oriented software development},
  pages = {188--197},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/643603.643623},
  address = {New York, NY, USA},
  isbn = {1-58113-660-9}}

@inproceedings{Chu72a,
  author = {Chu, Wesley W. and Opderbeck, Holger},
  title = {The page fault frequency replacement algorithm},
  booktitle = {Proceedings of the December 5-7, 1972, fall joint computer conference, part I},
  pages = {597--609},
  publisher = {ACM},
  year = {1972},
  doi = {10.1145/1479992.1480077},
  acmid = {1480077},
  address = {New York, NY, USA},
  location = {Anaheim, California},
  numpages = {13},
  series = {AFIPS '72 (Fall, part I)}}

@article{Chua98a,
  author = {Mei C. Chuah and Stephen G. Eick},
  title = {Information Rich Glyphs for Software Management Data},
  journal = {IEEE Computer Graphics and Applications},
  volume = {18},
  pages = {24--29},
  publisher = {IEEE Computer Society Press},
  year = {1998},
  month = jul,
  number = {4}}

@inproceedings{Chug09a,
  author = {Ravi Chugh and Jeffrey A. Meister and Ranjit Jhala and Sorin Lerner},
  title = {Staged information flow for javascript},
  booktitle = {Proceedings of PLDI '09},
  pages = {50--62},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1542476.1542483},
  isbn = {978-1-60558-392-1}}

@article{Chun06a,
  author = {Chung-Horng Lung and Xia Xu and Marzia Zaman and Anand Srinivasan},
  title = {Program restructuring using clustering techniques},
  journal = {J. Syst. Softw.},
  volume = {79},
  pages = {1261--1279},
  publisher = {Elsevier Science Inc.},
  year = {2006},
  doi = {10.1016/j.jss.2006.02.037},
  address = {New York, NY, USA},
  issn = {0164-1212},
  number = {9}}

@inproceedings{Chur03a,
  author = {Churcher, Neville and Irwin, Warwick and Kriz, Ron},
  title = {Visualising class cohesion with virtual worlds},
  booktitle = {APVis '03: Proceedings of the Asia-Pacific symposium on Information visualisation},
  pages = {89--97},
  publisher = {Australian Computer Society, Inc.},
  year = {2003},
  address = {Darlinghurst, Australia, Australia},
  location = {Adelaide, Australia}}

@inproceedings{Chur93a,
  author = {Kenneth Ward Church},
  title = {Char\_align: A Program for Aligning Parallel Texts at the Character Level},
  booktitle = {Proceedings 31st Annual Meeting of the Association for Computational Linguistics},
  pages = {1--8},
  publisher = {Association for Computational Linguistics},
  year = {1993},
  month = jun}

@article{Chur93b,
  author = {Kenneth Ward Church and Jonathan Isaac Helfman},
  title = {Dotplot: A Program for Exploring Self-Similarity in Millions of Lines for Text and Code},
  journal = {J. Computational and Graphical Statistics},
  volume = {2},
  pages = {153--174},
  publisher = {American Statistical Association},
  year = {1993},
  url = {http://citeseer.nj.nec.com/church93dotplot.html},
  month = jun,
  number = {2}}

@article{Chur95a,
  author = {N. I. Churcher and M. J. Shepperd},
  title = {A Metrics Suite for Object Oriented Design},
  journal = {IEEE Transactions on Software Engineering},
  volume = {21},
  pages = {263--265},
  year = {1995},
  month = mar,
  number = {3}}

@inproceedings{Chye99a,
  author = {Yu Chye Cheong and Stanislaw Jarzabek},
  title = {Frame-based method for customizing generic software architectures},
  booktitle = {SSR '99: Proceedings of the 1999 symposium on Software reusability},
  pages = {103--112},
  publisher = {ACM Press},
  year = {1999},
  doi = {10.1145/303008.303043},
  address = {New York, NY, USA},
  isbn = {1-58113-101-1},
  location = {Los Angeles, California, United States}}

@inproceedings{Ciab03a,
  author = {Ciabrini, Damien and Serrano, Manuel},
  title = {Bugloo: A Source Level Debugger for Scheme Programs Compiled into JVM Bytecode},
  booktitle = {Proceedings of the International Lisp Conference 2003},
  year = {2003},
  url = {http://www-sop.inria.fr/mimosa/fp/Bugloo},
  month = {oct}}

@inproceedings{Cian90a,
  author = {Paolo Ciancarini},
  title = {Coordination Languages for Open System design},
  booktitle = {Proceedings of the 1990 International Conference of Computer Languages},
  pages = {252--260},
  year = {1990},
  misc = {March 12-15},
  address = {New Orleans},
  month = mar}

@inproceedings{Cian91a,
  author = {Paolo Ciancarini},
  title = {{POLIS}: {A} Programming Model for Multiple Tuple Spaces},
  booktitle = {Proceedings of the 6th International Workshop on Software Specification and Design},
  pages = {44--51},
  year = {1991},
  misc = {Oct. 25-26},
  address = {Como, Italy},
  month = oct}

@techreport{Cian92a,
  author = {Paolo Ciancarini and Keld K. Jensen and Dani Yankelevich},
  title = {The Semantics of a Parallel Language based on a Shared Data Space},
  year = {1992},
  institution = {University of Pisa, Computer Science Dept.},
  month = aug,
  type = {TR-26/92}}

@book{Cian94a,
  title = {Object-Based Models and Languages for Concurrent Systems, Workshop {ECOOP}'94},
  volume = {924},
  publisher = {Springer-Verlag},
  year = {1994},
  doi = {10.1007/3-540-59450-7},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akiro Yonezawa},
  isbn = {3-540-59450-7},
  series = {LNCS}}

@incollection{Cian95a,
  author = {Paolo Ciancarini and Keld K. Jensen and Daniel Yankelevich},
  title = {On the Operational Semantics of a Coordination Language},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = {924},
  pages = {77--106},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {Linda is a coordination language, because it has to
be combined with a sequential language to give a
full parallel programming formalism. Although Linda
has been implemented on a variety of architectures,
and in combination with several sequential
languages, its formal semantics is relatively
unexplored. In this paper we study and compare a
number of operational semantics specifications for
Linda: Plotkin's SOS, Milner's CCS, Petri Nets, and
Berry and Boudol's Chemical Abstract Machine. We
analyze these specifications, and show how they
enlighten different abstract implementations.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@proceedings{Cian96a,
  title = {Coordination Languages and Models},
  booktitle = {Proceedings of the First International Conference, COORDINATION '96},
  publisher = {Springer-Verlag},
  year = {1996},
  editor = {Paolo Ciancarini and Chris Hankin},
  isbn = {3-540-61052-9},
  month = apr,
  number = 1061,
  series = {LNCS}}

@article{Cian96b,
  author = {Paolo Ciancarini},
  title = {Coordination Models and Languages as Software Integrators},
  journal = {ACM Computing Surveys},
  volume = {28},
  pages = {300--302},
  year = {1996},
  month = jun,
  number = {2}}

@inproceedings{Cian96c,
  author = {Paolo Cinacarini and Davide Rossi},
  title = {Jada: Coordination and Communication for {Java} Agents},
  booktitle = {MOS '96: Towards the Programmable Internet},
  volume = {1222},
  pages = {213--228},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  month = jul,
  series = {LNCS}}

@book{Cian99a,
  title = {{FMOODS}'99},
  publisher = {Kluer Academic Publishers},
  year = {1999},
  address = {Florence, Italy},
  editor = {Paolo Ciancarini and Alesandro Fantechi and Roberto Gorrieri},
  isbn = {0-7923-8429-6},
  month = feb}

@proceedings{Cian99b,
  title = {Coordination Languages and Models},
  booktitle = {Proceedings of the Third International Conference, COORDINATION '99},
  publisher = {Springer-Verlag},
  year = {1999},
  editor = {Paolo Ciancarini and Alexander L. Wolf},
  isbn = {3-540-61052-9},
  month = apr,
  number = 1594,
  series = {LNCS}}

@inproceedings{Ciar05a,
  author = {Ciaran O'Reilly and David Bustard and Philip Morrow},
  title = {The war room command console: shared visualizations for inclusive team coordination},
  booktitle = {Proceedings of 2005 ACM Symposium on Software Visualization (Softviz 2005)},
  pages = {57--65},
  year = {2005},
  address = {St. Louis, Missouri, USA},
  month = may}

@misc{Cifu06a,
  title = {Squawk: a {J}ava VM for Wireless Sensor and Actuator Devices},
  key = {Squawk},
  note = {http://developers.sun.com/learning/javaoneonline/2006/coolstuff/TS-1598.pdf}}

@inproceedings{Cifu08a,
  author = {Cifuentes, Cristina and Scholz, Bernhard},
  title = {Parfait: designing a scalable bug checker},
  booktitle = {Proceedings of the 2008 workshop on Static analysis},
  pages = {4--11},
  publisher = {ACM},
  year = {2008},
  address = {New York, NY, USA},
  isbn = {978-1-59593-924-1},
  location = {Tucson, Arizona},
  numpages = {8},
  series = {SAW '08}}

@article{Cimi95a,
  author = {A. Cimitile and G. Visaggio},
  title = {Software Salvaging and the Call Dominance Tree},
  journal = {Journal of Systems and Software},
  volume = {28},
  pages = {117--127},
  year = {1995}}

@inproceedings{Cimi98a,
  author = {A. Cimitile and DeCarlini, U. and DeLucia, A.},
  title = {On the Knowledge Required to Understand a Program},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {59--69},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@article{Cimi99a,
  author = {Aniello Cimitile and Andrea De Lucia and Guiseppe Antonio Di Lucca and Anna Rita Fasolino},
  title = {Identifying objects in legacy systems using design metrics},
  journal = {J. Syst. Softw.},
  volume = {44},
  pages = {199--211},
  publisher = {Elsevier Science Inc.},
  year = {1999},
  doi = {10.1016/S0164-1212(98)10057-2},
  address = {New York, NY, USA},
  issn = {0164-1212},
  number = {3}}

@inproceedings{Cimp07a,
  author = {Cristina Videira Lopes and Sushil Krishna Bajracharya},
  title = {Dynamic architecture based evolution of enterprise information systems},
  booktitle = {International Conference on Enterprise Information Systems (ICEIS)},
  year = {2007}}

@inproceedings{Cimp07b,
  author = {Sorana C\^impan and Herve Verjus and Ilham Alloui},
  title = {Dynamic Architecture based Evolution of Enterprise Information Systems},
  booktitle = {9th Int. Conf. on Enterprise Information Systems},
  pages = {221-229},
  year = {2007}}

@inproceedings{Cimp08a,
  author = {Sorana C\^impan and Vincent Couturier},
  title = {Can Styles Improve Architectural Pattern Reuse?},
  booktitle = {WICSA},
  year = {2008}}

@article{Cimp09a,
  author = {Sorana C{\^\i}mpan and Herv{\'e} Verjus and Ilham Alloui},
  title = {Gestion de l'\'evolution dans le cadre d'une approche d'ing\'enierie logicielle centr\'ee architecture},
  journal = {Technique et Science Informatiques (TSI)},
  year = {2009}}

@misc{Cincom2002,
  title = {VisualWorks Application Developer's Guide},
  year = {2002},
  key = {Cincom2002},
  note = {Cincom}}

@inproceedings{Cinn00a,
  author = {\`O Cinn\'{e}ide, Mel},
  title = {Composite Refactorings for Java Programs},
  booktitle = {Proceedings of the Workshop on Formal Techniques for Java Programs, European Conference on Object-Oriented Programming},
  year = {2000},
  month = apr}

@phdthesis{Cinn01a,
  author = {\`O  Cinn\'eide, Mel},
  title = {Automated application of design patterns : a refactoring approach},
  year = {2001},
  school = {Trinity College - School of Computer Science and Statistics}}

@inproceedings{Cinn11a,
  author = {\`O Cinn\'{e}ide, Mel and Boyle, Dermot and Moghadam, Iman Hemati},
  title = {Automated Refactoring for Testability},
  booktitle = {2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops},
  pages = {437-443},
  year = {2011},
  doi = {10.1109/ICSTW.2011.23}}

@inproceedings{Cinn12a,
  author = {\`O Cinn{\'e}ide, Mel and Tratt, L. and Harman, M. and Counsell, S. and Moghadam, I.H.},
  title = {Experimental Assessment of Software Metrics Using Automated Refactoring},
  booktitle = {Proc. Empirical Software Engineering and Management (ESEM)},
  year = {2012},
  month = sep
  }

@inproceedings{Cinn99a,
  author = {\`O Cinn\'{e}ide, M. and Nixon, P.},
  title = {A Methodology for the Automated Introduction of Design Patterns},
  booktitle = {Proceedings of the IEEE International Conference on Software Maintenance},
  pages = {463},
  publisher = {IEEE Computer Society},
  year = {1999},
  isbn = {0769500161},
  address = {USA},
  abstract = {In reengineering legacy code it is frequently useful to introduce a design pattern in order to add clarity to the system and thus facilitate further program evolution. We show that this type of transformation can be automated in a pragmatic manner and present a methodology for the development of design pattern transformations. We address the issues of the definition of a starting point for the transformation, the decomposition of a pattern into mini-patterns and the development of corresponding mini-transformations that can introduce these mini-patterns to a program. We argue that behaviour preservation is a key issue and develop a rigorous argument of this for each mini-transformation we discover. The architecture of an existing software prototype is also discussed and the results of applying this methodology to develop a transformation for the Factory Method pattern are presented.},
  series = {ICSM '99}}

@book{Cioba06a,
  title = {Applications of Membrane Computing},
  booktitle = {Applications of Membrane Computing},
  publisher = {Springer},
  year = {2006},
  editor = {Gabriel Ciobanu and Mario J. P{\'e}rez-Jim{\'e}nez and Gheorghe Paun},
  isbn = {978-3-540-25017-3},
  series = {Natural Computing Series}}

@inproceedings{Cito19a,
  author = {Cito, J{\"u}rgen and Leitner, Philipp and Rinard, Martin and Gall, Harald C},
  title = {Interactive production performance feedback in the IDE},
  booktitle = {2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)},
  pages = {971--981},
  year = {2019},
  organization = {IEEE}}

@article{Citr98a,
  author = {Wayne Citrin and Soraya Ghiasi and Benjamin G. Zorn},
  title = {{VIPR} and the Visual Programming Challenge},
  journal = {Journal of Visual Languages and Computing},
  volume = {9},
  pages = {241--258},
  year = {1998},
  url = {citeseer.ist.psu.edu/citrin98vipr.html},
  doi = {10.1006/jvlc.1998.0080},
  number = {2}}

@inproceedings{Ciup08a,
  author = {Ilinca Ciupa and Manuel Oriol and Bertrand Meyer and Alexander Pretschner},
  title = {Finding Faults: Manual Testing vs. Random+ Testing vs. User Reports},
  booktitle = {IEEE International Symposium on Software Reliability Engineering (ISSRE)},
  year = {2008},
  month = nov}

@article{Ciup11a,
  author = {Ciupa, I. and Pretschner, A. and Oriol, M. and Leitner, A. and Meyer, B.},
  title = {On the Number and Nature of Faults Found by Random Testing},
  journal = {Software Testing, Verification and Reliability},
  volume = {21},
  pages = {3--28},
  publisher = {John Wiley and Sons Ltd.},
  year = {2011},
  issn = {0960-0833},
  issue_date = {March 2011},
  keywords = {empirical studies, object-oriented software, random tests, test selection strategies},
  month = mar,
  number = {1},
  numpages = {26}}

@inproceedings{Ciup99a,
  author = {Oliver Ciupke},
  title = {Automatic Detection of Design Problems in Object-Oriented Reengineering},
  booktitle = {Proceedings of TOOLS 30 (USA)},
  pages = {18--32},
  year = {1999}}

@proceedings{Ciup99b,
  title = {Proceedings of the {ECOOP} '99 Workshop on Experiences in Object-Oriented Re-Engineering},
  year = {1999},
  address = {Forschungszentrum Informatik, Haid-und-Neu-Strasse 10-14, 76131 Karlsruhe, Germany},
  editor = {Oliver Ciupke and St\'ephane Ducasse},
  month = jun,
  note = {FZI 2-6-6/99}}

@inproceedings{Cive93a,
  author = {Franco Civello},
  title = {Roles for composite objects in object-oriented analysis and design},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {376--393},
  year = {1993},
  month = oct}

@techreport{Clam91a,
  author = {Stewart M. Clamen},
  title = {Data Persistence in Programming Languages --- {A} Survey},
  year = {1991},
  url = {ftp://reports.adm.cs.cmu.edu/1991/CMU-CS-91-155.ps},
  address = {Pittsburgh, PA},
  institution = {Carnegie Mellon University},
  month = may,
  type = {{CMU-CS-91-155}}}

@techreport{Clam92a,
  author = {Stewart M. Clamen},
  title = {Class Evolution and Instance Adaptation},
  year = {1992},
  url = {ftp://reports.adm.cs.cmu.edu/1992/CMU-CS-92-133R.ps},
  abstract = {Schema evolution support is an important facility
for object-oriented database (OODB) systems. While
existing OODB systems provide for limited forms of
evolution, including modification to the database
schema and reorganization of affected instances, we
find their support insufficient. Specific
deficiencies are 1) the lack of compatibility
support for old applications, and 2) the lack of
ability to install arbitrary changes upon the schema
and database. This paper examines the limitations of
existing schemes, and offers a more general
framework for specifying and reasoning about the
evolution of class definitions and the adaptation of
existing, persistent instances to those new
definitions.},
  address = {Pittsburgh, PA},
  institution = {CMU},
  month = jun,
  type = {CS-92-133}}

@article{Clam94a,
  author = {Stewart M. Clamen},
  title = {Schema Evolution and Integration},
  journal = {Distributed and Parallel Databases: An International Journal},
  volume = {2},
  year = {1994},
  abstract = {Providing support for \fIschema evolution\fP allows
existing databases to be adjusted for varying roles
over time. This paper reflects on existing evolution
support schemes and introduces a more general and
functional mechanism to support schema evolution and
\fIinstance adaptation\fP for centralized and
distributed object-oriented database systems. Our
evolution support scheme is distinguished from
previous mechanisms in that it is primarily
concerned with preserving existing database objects
and maintaining compatibility for old applications,
while permitting a wider range of evolution
operations. It achieves this by supporting schema
versioning, allowing multiple representations of
instances to persist simultaneously, and providing
for programmer specification of how to adapt
existing instances. The mechanism is general enough
to provide much of the support necessarily for
\fIheterogeneous schema integration\fP, as well as
incorporating much of the features of object
migration and replication.},
  month = jan,
  number = {1}}

@inproceedings{Clar01a,
  author = {David G. Clarke and James Noble and John M. Potter},
  title = {Simple Ownership Types for Object Containment},
  booktitle = {Proceedings of the 15th European Conference on Object-Oriented Programming (ECOOP'91)},
  pages = {53--76},
  publisher = {Springer Verlag},
  year = {2001},
  address = {London, UK},
  month = jun,
  series = {LNCS}}

@inproceedings{Clar02a,
  author = {Dave Clarke and Sophia Drossopoulou},
  title = {Ownership, encapsulation and the disjointness of type and effect},
  booktitle = {Proceedings of the 17th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications (OOPSLA'02)},
  pages = {292--310},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/582419.582447},
  address = {New York, NY, USA},
  isbn = {1-58113-471-1},
  location = {Seattle, Washington, USA}}

@inproceedings{Clar03a,
  author = {John Clarke and Jose Javier Dolado and Mark Harman and Bryan Jones and Mary Lumkin and Brian Mitchell and Kearton Rees and Marc Roper},
  title = {Reformulating software engineering as a search problem},
  booktitle = {IEEE Proceedings on Software},
  volume = {3},
  pages = {161-175},
  year = {2003},
  numero = {150}}

@inproceedings{Clar03b,
  author = {D. Clarke and T. Wrigstad},
  title = {External Uniqueness is Unique Enough},
  booktitle = {Proceedings 17th European Conference on Object-Oriented Programming ({ECOOP})},
  year = {2003}}

@misc{Clar04a,
  author = {Tony Clark and Andy Evans and Paul Sammut and James Willans},
  title = {Applied Metamodelling: A foundation for Language Driven Development},
  year = {2004},
  url = {http://albini.xactium.com}}

@book{Clar08a,
  author = {Tony Clark and Paul Sammut and James Willans},
  title = {Superlanguages, Developing Languages and Applications with {XMF}},
  volume = {First Edition},
  publisher = {Ceteva},
  year = {2008},
  url = {http://www.ceteva.com/docs/Superlanguages.pdf}}

@book{Clar08b,
  author = {Tony Clark and Paul Sammut and James Willans},
  title = {Applied Metamodelling, a Foundation for Language Driven Development},
  volume = {Second Edition},
  publisher = {Ceteva},
  year = {2008},
  note = {\url{http://www.ceteva.com/docs/Applied+Metamodelling+(Second+Edition).pdf}}}

@incollection{Clar13a,
  author = {Clarke, Dave and {\"O}stlund, Johan and Sergey, Ilya and Wrigstad, Tobias},
  title = {Ownership types: A survey},
  booktitle = {Aliasing in Object-Oriented Programming. Types, Analysis and Verification},
  pages = {15--58},
  publisher = {Springer},
  year = {2013},
  date-added = {2015-06-11 13:14:30 +0000},
  date-modified = {2015-06-11 13:19:07 +0000}}

@article{Clar86a,
  author = {Edmund M. Clarke and E.A. Emerson and A.P. Sistla},
  title = {Automatic Verification of Finite-State Concurrent Systems Using Temporal Logic Specifications},
  journal = {ACM TOPLAS},
  volume = {8},
  pages = {244--263},
  year = {1986},
  month = apr,
  number = {2}}

@article{Clar97a,
  author = {Charles L. A. Clarke and Gordon V. Cormack},
  title = {On the use of regular expressions for searching text},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume = {19},
  pages = {413--426},
  publisher = {ACM Press},
  year = {1997},
  doi = {10.1145/256167.256174},
  issn = {0164-0925},
  number = {3}}

@inproceedings{Clar98a,
  author = {David G. Clarke and John M. Potter and James Noble},
  title = {Ownership types for flexible alias protection},
  booktitle = {Proceedings OOPSLA '98},
  pages = {48--64},
  publisher = {ACM Press},
  year = {1998},
  doi = {10.1145/286936.286947},
  isbn = {1-58113-005-8},
  location = {Vancouver, British Columbia, Canada}}

@phdthesis{Clau09a,
  author = {Benoit Claudel},
  title = {M{\'e}canismes logiciels de protection m{\'e}moire},
  year = {2009},
  school = {Institut Polytechnique de Grenoble},
  address = {Grenoble France},
  month = dec}

@article{Clav01a,
  author = {Manuel Clavel and Francisco Dur{\'a}n and Steven Eker and Patrick Lincoln and Narciso Mart{\'\i}-Oliet and Jos{\'e} Meseguer and Jos{\'e} F. Quesada},
  title = {{Maude}: Specification and Programming in Rewriting Logic},
  journal = {Theoretical Computer Science},
  year = {2001},
  note = {To appear}}

@book{Clay08a,
  author = {Clayberg, Eric and Rubel, Dan},
  title = {{Eclipse Plug-ins (3rd Edition)}},
  publisher = {Addison-Wesley Professional},
  year = {2008},
  day = {21},
  edition = {3},
  howpublished = {Paperback},
  isbn = {0321553462}}

@inproceedings{Clay98a,
  author = {R. Clayton and S. Rugaber and L. Wills},
  title = {Incremental Migration Strategies: Data Flow Analysis for Wrapping},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {69--79},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Clea89a,
  author = {Rance Cleaveland and Joachim Parrow and Bernhard Steffen},
  title = {The Concurrency Workbench},
  booktitle = {Automatic Verification Methods for Finite State Systems: Proceedings},
  volume = {407},
  pages = {24--37},
  publisher = {Springer-Verlag},
  year = {1989},
  editor = {Joseph Sifakis},
  series = {LNCS}}

@inproceedings{Clea90a,
  author = {Rance Cleaveland and Bernhard Steffen},
  title = {A Preorder for Partial Process Specifications},
  booktitle = {Proceedings of CONCUR '90},
  volume = {458},
  pages = {141--151},
  publisher = {Springer-Verlag},
  year = {1990},
  editor = {J.C.M. Baeten and J.W. Klop},
  series = {LNCS}}

@book{Clea92a,
  title = {Proceedings {CONCUR}'92},
  volume = {630},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Stony Brooks, NY, USA},
  editor = {W.R. Cleaveland},
  isbn = {3-540-55822-5},
  month = aug,
  series = {LNCS}}

@inproceedings{Clea93a,
  author = {Rance Cleaveland},
  title = {{RTSL}: {A} Language for Real-Time Schedulability Analysis},
  booktitle = {Proceedings of the Real-Time Systems Symposium},
  year = {1993},
  abstract = {This paper develops a generalized approach to
schedulability analysis that is mathematically
founded in a process algebra called RTSL. Within
RTSL one may described the functional behavior,
timing behavior, timing constraints (or deadlines),
and scheduling displine for real-time systems. The
formal semantics of RTSL then allows the reachable
state space of finite-state systems to be
automatically generated and searched for timing
exceptions. We provide a generalized schedulability
analysis technique to perform this state-based
analysis.},
  address = {Raleigh-Durham, North Carolina.},
  month = dec,
  note = {To appear}}

@article{Clea93b,
  author = {Rance Cleaveland},
  title = {Testing Equivalence as a Bisimulation Equivalence},
  journal = {Formal Aspects of Computing},
  volume = {5},
  pages = {1--20},
  year = {1993},
  url = {ftp://science.csc.ncsu.edu//pub/papers/fac93.dvi.gz},
  abstract = {In this paper we show how the testing equivalences
and preorders on transition systems may be
interpreted as instances of generalized bisimulation
equivalences and prebisimulation preorders. The
characterization relies on defining transformations
on the transition systems in such a way that the
testing relations on the original systems correspond
to (pre)bisimulation relations on the altered
systems. On the basis of these results, it is
possible to use algorithms for determining the
(pre)bisimulation relations in the case of
finite-state transition systems to compute the
testing relations.}}

@article{Clea93c,
  author = {Rance Cleaveland},
  title = {The Concurrency Workbench: {A} Semantics-Based Verification tool for the verification of concurrent systems},
  journal = {ACM Transactions on Programming Languages and Systems},
  volume = {15},
  pages = {36--72},
  year = {1993},
  url = {ftp://science.csc.ncsu.edu//pub/papers/cwb.ps.gz},
  abstract = {The Concurrency Workbench is an automated tool for
analyzing networks of finite-state processes
expressed in Milner's Calculus of Communicating
Systems. Its key feature is its breadth: a variety
of different verification methods, including
equivalence checking, preorder checking, and model
checking, are supported for several different
process semantics. One experience from our work is
that a large number of interesting verification
methods can be formulated as combinations of a small
number of primitive algorithms. The Workbench has
been applied to the verification of communications
protocols and mutual exclusion algorithms and has
proven a valuable aid in teaching and research.},
  month = jan,
  number = {1}}

@inproceedings{Clea94a,
  author = {Rance Cleaveland},
  title = {An Operational Framework for Value-Passing Processes},
  booktitle = {Proceedings of Principles of Programming},
  year = {1994},
  url = {ftp://science.csc.ncsu.edu//pub/papers/popl94.ps.gz},
  abstract = {This paper develops a semantic framework for
concurrent languages with value passing. An
operation analogous to substitution in the
$\lambda$-calculus is given, and a semantics is
given for a value-passing version of Milner's
Calculus of Communicating Systems (CCS). An
operational equivalence is then defined and shown to
coincide with Milner's (early) bisimulation
equivalence. We also show how semantics may given
for languages with asynchronous communication
primitives. In contrast with existing approaches to
value passing, this semantics does not reduce data
exchange to pure synchronization over (potentially
infinite) families of ports indexed by data, and it
avoids variable renamings that are not local to
processes engaged in communication.},
  address = {Portland, Oregon},
  month = jan,
  note = {To appear}}

@inproceedings{Cleb15a,
  author = {Clebsch, Sylvan and Drossopoulou, Sophia and Blessing, Sebastian and McNeil, Andy},
  title = {Deny capabilities for safe, fast actors},
  booktitle = {Proceedings of the 5th International Workshop on Programming Based on Actors, Agents, and Decentralized Control},
  pages = {1--12},
  year = {2015}}

@inproceedings{Clee03a,
  author = {Thomas Cleenewerck},
  title = {Component-based {DSL} Development},
  booktitle = {Proceedings of the 2nd international conference on Generative programming and component engineering},
  pages = {245--264},
  year = {2003},
  organization = {Springer-Verlag New York, Inc. New York, NY, USA}}

@article{Clel13a,
  author = {Cleland-Huang, Jane and Hanmer, Robert S and Supakkul, Sam and Mirakhorli, Mehdi},
  title = {The twin peaks of requirements and architecture},
  journal = {IEEE software},
  volume = {30},
  pages = {24--29},
  publisher = {IEEE},
  year = {2013},
  number = {2}}

@inproceedings{Clel14a,
  author = {Cleland-Huang, Jane and Gotel, Orlena C. Z. and Huffman Hayes, Jane and M\"{a}der, Patrick and Zisman, Andrea},
  title = {Software Traceability: Trends and Future Directions},
  booktitle = {Proceedings of the on Future of Software Engineering},
  pages = {55--69},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2593882.2593891},
  doi = {10.1145/2593882.2593891},
  acmid = {2593891},
  address = {New York, NY, USA},
  isbn = {978-1-4503-2865-4},
  keywords = {Roadmap, Software Traceability},
  location = {Hyderabad, India},
  numpages = {15},
  series = {FOSE 2014}}

@inproceedings{Clem01a,
  author = {John Clements and Paul T. Graunke and Shriram Krishnamurthi and Matthias Felleisen},
  title = {Little Languages and their Programming Environments},
  booktitle = {Proceedings of Monterey Workshop},
  year = {2001},
  url = {http://www.cs.rice.edu/CS/PLT/Publications/mw01-cgkf.pdf}}

@book{Clem02a,
  author = {Paul Clements and Linda Northrop},
  title = {Software Product Lines: Practices and Patterns},
  publisher = {Addison-Wesley},
  year = {2002},
  address = {Boston, MA}}

@book{Clem02b,
  author = {Clements, Paul and Bachmann, Felix and Bass, Len and Garlan, David and Ivers, James and Little, Reed and Nord, Robert and Stafford, Judith},
  title = {Documenting Software Architectures: Views and Beyond},
  publisher = {Addison-Wesley Professional},
  year = {2002}}

@misc{Clem02c,
  author = {Clements, P and Kazman, R and Klein, M},
  title = {Evaluating software architectures: methods and case studies. 2002},
  publisher = {Addison-Wesley}}

@article{Clem95a,
  author = {Paul C. Clements},
  title = {From Subroutines to Subsystems: Component-Based Software Development},
  journal = {American Programmer},
  volume = {8},
  year = {1995},
  url = {http://www.cutter.com},
  number = {11}}

@inproceedings{Clem96a,
  author = {Clements, Paul C.},
  title = {A Survey of Architecture Description Languages},
  booktitle = {8th International Workshop on Software Specification and Design},
  pages = {16--},
  year = {1996}}

@incollection{Clem96b,
  author = {Paul C. Clements and Linda Northrop},
  title = {Software Architecture: An Executive Overview},
  booktitle = {Component-Based Software Engineering},
  pages = {55--68},
  publisher = {IEEE Press},
  year = {1997},
  editor = {Alan W. Brown}}

@inproceedings{Cler88a,
  author = {Silvia Clerici and F. Orejas},
  title = {{GSBL}: An Algebraic Specification Language Based on Inheritance},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {78--92},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Clev00a,
  author = {Holger Cleve and Andreas Zeller},
  title = {Finding Failure Causes through Automated Testing},
  booktitle = {Proceedings of the Fourth International Workshop on Automated Debugging},
  year = {2000},
  month = aug}

@book{Clev94a,
  author = {William S. Cleveland},
  title = {The Elements of Graphing Data},
  publisher = {Hobart Press},
  year = {1994}}

@article{Cleve89a,
  author = {Cleveland, Linore},
  title = {A program understanding support environment},
  journal = {IBM Systems Journal},
  volume = {28},
  pages = {324--344},
  publisher = {IBM},
  year = {1989},
  number = {2}}

@article{Clic95a,
  author = {Click, Cliff and Cooper, Keith D.},
  title = {Combining Analyses, Combining Optimizations},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume = {17},
  pages = {181-196},
  publisher = {Association for Computing Machinery},
  year = {1995},
  url = {https://doi.org/10.1145/201059.201061},
  doi = {10.1145/201059.201061},
  abstract = {Modern optimizing compilers use several passes over a program's intermediate representation to generate good code. Many of these optimizations exhibit a phase-ordering problem. Getting the best code may require iterating optimizations until a fixed point is reached. Combining these phases can lead to the discovery of more facts about the program, exposing more opportunities for optimization. This article presents a framework for describing optimizations. It shows how to combine two such frameworks and how to reason about the properties of the resulting framework. The structure of the frame work provides insight into when a combination yields better results. To make the ideas more concrete, this article presents a framework for combining constant propagation, value numbering, and unreachable-code elimination. It is an open question as to what other frameworks can be combined in this way.},
  address = {New York, NY, USA},
  issn = {0164-0925},
  issue_date = {March 1995},
  keywords = {value numbering, optimizing compilers, data-flow analysis, constant propagation},
  month = mar,
  number = {2},
  numpages = {16}}

@inproceedings{Clif00a,
  author = {Curtis Clifton and Gary T. Leavens and Craig Chambers and Todd Millstein},
  title = {{MultiJava}: Modular Open Classes and Symmetric Multiple Dispatch for {Java}},
  booktitle = {{OOPSLA} 2000 Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  pages = {130--145},
  year = {2000}}

@inproceedings{Clif14a,
  author = {Clifford, Daniel and Payer, Hannes and Starzinger, Michael and Titzer, Ben L.},
  title = {Allocation Folding Based on Dominance},
  booktitle = {International Symposium on Memory Management (ISMM '14)},
  year = {2014},
  address = {New York, NY, USA},
  keywords = {dynamic optimization, garbage collection, javascript, memory managment, write barriers}}

@inproceedings{Clif14b,
  author = {Clifford, Daniel and Payer, Hannes and Starzinger, Michael and Titzer, Ben L.},
  title = {Allocation Folding Based on Dominance},
  booktitle = {International Symposium on Memory Management (ISMM '14)},
  year = {2014},
  address = {New York, NY, USA},
  keywords = {dynamic optimization, garbage collection, javascript, memory managment, write barriers}}

@article{Clif15a,
  author = {Clifford, Daniel and Payer, Hannes and Stanton, Michael and Titzer, Ben L},
  title = {Memento mori: Dynamic allocation-site-based optimizations},
  journal = {ACM SIGPLAN Notices},
  volume = {50},
  pages = {105--117},
  publisher = {ACM New York, NY, USA},
  year = {2015},
  number = {11}}

@techreport{Clin81a,
  author = {W.D. Clinger},
  title = {Foundations of Actor Semantics},
  year = {1981},
  institution = {MIT Artificial Intelligence Laboratory},
  month = may,
  type = {AI-TR-633}}

@book{Clin95a,
  author = {Marshall P. Cline and Greg A. Lomow},
  title = {{C}++ FAQs},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-58958-3}}

@book{Cloc87a,
  author = {W. F. Clocksin and Chris Mellish},
  title = {Programming in Prolog, 3rd Edition},
  publisher = {Springer},
  year = {1987},
  isbn = {3-540-17539-3}}

@misc{ClosureCompiler,
  author = {Anthony Hannan},
  title = {Squeak {Closure} {Compiler}},
  year = {2004},
  key = {ClosureCompiler},
  month = jul,
  note = {http://wiki.squeak.org/squeak/ClosureCompiler}}

@techreport{Clou00a,
  author = {Paul Clough},
  title = {Plagiarism in Natural and Programming Languages: An Overview of Current Tools and Technologies},
  year = {2000},
  institution = {University of Sheffield, Department of Computer Science},
  lastaccess = {nov 22, 2002},
  month = jun}

@inproceedings{Clou16a,
  author = {Cloutier, Jonathan and Kpodjedo, Segla and El Boussaidi, Ghizlane},
  title = {{WAVI}: A reverse engineering tool for web applications},
  booktitle = {2016 IEEE 24th International Conference on Program Comprehension ({ICPC})},
  pages = {1--3},
  publisher = {{IEEE}},
  year = {2016},
  url = {http://ieeexplore.ieee.org/document/7503744/},
  doi = {10.1109/{ICPC}.2016.7503744},
  date = {2016-05},
  isbn = {978-1-5090-1428-6},
  keywords = {static analysis},
  langid = {english},
  shorttitle = {{WAVI}},
  urldate = {2018-04-20}}

@inproceedings{Clyd92a,
  author = {Stephen W. Clyde and David W. Embley and Scott N. Woodfield},
  title = {Tunable Formalism in Object-Oriented Systems Analysis: Meeting the Needs of Both Theoreticians and Practitioners},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {452--465},
  year = {1992},
  month = oct}

@inproceedings{Coad01a,
  author = {Yvonne Coady and Gregor Kiczales and Mike Feeley and Greg Smolyn},
  title = {Using {AspectC} to Improve the Modularity of Path-Specific Customization in Operating System Code},
  booktitle = {ESEC '01},
  publisher = {ACM Press},
  year = {2001},
  editor = {Volker Gruhn}}

@book{Coad91a,
  author = {Peter Coad and Edward Yourdon},
  title = {Object Oriented Design},
  publisher = {Prentice-Hall},
  year = {1991},
  isbn = {0-13-630070-7}}

@article{Coad92a,
  author = {P. Coad},
  title = {Object-Oriented Patterns},
  journal = {Communications of the ACM},
  volume = {35},
  pages = {152--159},
  year = {1992},
  number = {9}}

@book{Coad95a,
  author = {Peter Coad and Daid North and Mark Mayfield},
  title = {Object Models: Strategies, Patterns, \& Applications},
  publisher = {Prentice-Hall},
  year = {1995},
  isbn = {0-13-108614-6}}

@book{Coad99a,
  author = {Peter Coad and Eric Lefebvre and Jeff De Luca},
  title = {Java Modeling in Color with UML},
  publisher = {Prentice Hall},
  year = {1999},
  isbn = {0-13-011510-X}}

@inproceedings{Cobl03a,
  author = {Jamieson M. Cobleigh and Dimitra Giannakopoulou and Corina S. Pasareanu},
  title = {Learning Assumptions for Compositional Verification},
  booktitle = {TACAS},
  pages = {331-346},
  year = {2003},
  url = {http://ti.arc.nasa.gov/m/pub/archive/0452.pdf},
  ee = {http://link.springer.de/link/service/series/0558/bibs/2619/26190331.htm}}

@book{Cock02a,
  author = {Alistair Cockburn},
  title = {Agile Software Development},
  publisher = {Addison Wesley},
  year = {2002},
  isbn = {0201699699}}

@book{Cock03a,
  author = {Alistair Cockburn},
  title = {Writing Effective Use Cases},
  publisher = {Addison Wesley},
  year = {2003},
  isbn = {0201702258}}

@misc{Cock06a,
  author = {Alistair Cockburn},
  title = {Dos equis driven design},
  year = {2006},
  url = {http://alistair.cockburn.us/index.php/Dos_equis_driven_design},
  note = {Retrieved August 25th 2006 \url{alistair.cockburn.us/index.php/Dos_equis_driven_design}}}

@article{Cock93a,
  author = {Alistair Cockburn},
  title = {The impact of object-orientation on application development},
  journal = {IBM Systems Journal},
  volume = {32},
  pages = {420--444},
  year = {1993},
  month = mar,
  number = {3}}

@inproceedings{Cock99a,
  author = {Alistair Cockburn},
  title = {Characterizing People as Non-Linear, First-Order Components in Software Development},
  booktitle = {4th International Multiconference on Systemics, Cybernetics, and Informatics},
  year = {1999},
  address = {Orlando, FL}}

@misc{Cocoon,
  title = {Apache Cocoon, The Apache Cocoon Project},
  key = {Cocoon},
  note = {http://cocoon.apache.org/}}

@article{Code94a,
  author = {W. Codenie and K. {de Hondt} and T. D'Hondt and P. Steyaert},
  title = {Agora: message passing as a foundation for exploring {OO} language concepts},
  journal = {ACM SIG{\-}PLAN Notices},
  volume = {29},
  pages = {48--57},
  year = {1994},
  month = dec,
  number = {12}}

@inproceedings{Coel06a,
  author = {Wesley Coelho and Gail C. Murphy},
  title = {Presenting crosscutting structure with active models},
  booktitle = {Proceedings of the 5th International Conference on Aspect-Oriented Software Development},
  pages = {158--168},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1119655.1119677},
  address = {New York, NY, USA},
  isbn = {1-59593-300-X},
  location = {Bonn, Germany},
  series = {AOSD'06}}

@phdthesis{Coet15a,
  author = {Coetzee, Abraham Liebrecht},
  title = {Combining reverse debugging and live programming towards visual thinking in computer programming},
  year = {2015},
  school = {Stellenbosch: Stellenbosch University}}

@inproceedings{Cohe06a,
  author = {Tal Cohen and Joseph (Yossi) Gil and Itay Maman},
  title = {{JTL}: the {Java} tools language},
  booktitle = {OOPSLA '06: Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming languages, systems, and applications},
  pages = {89--108},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1167473.1167481},
  address = {New York, NY, USA},
  isbn = {1-59593-348-4},
  location = {Portland, Oregon, USA}}

@inbook{Cohe10a,
  author = {Jason Cohen},
  title = {Modern Code Review},
  chapter = {18},
  booktitle = {Making Software},
  publisher = {O'Reilly Media, Inc.},
  year = {2010},
  editors = {Andy Oram and Greg Wilson},
  isbn = {9780596808327},
  month = oct}

@article{Cohe75a,
  author = {E. Cohen and D. Jefferson},
  title = {Protection in the Hydra Operating System},
  journal = {ACM SIGOPS},
  volume = {9},
  pages = {141--160},
  year = {1975},
  address = {Austin, Texas},
  month = nov,
  number = {5}}

@book{Cohn04a,
  author = {Mike Cohn},
  title = {User Stories Applied: For Agile Software Development},
  publisher = {Addison Wesley Longman Publishing Co., Inc.},
  year = {2004},
  address = {Redwood City, CA, USA},
  isbn = {0321205685}}

@book{Cohn10,
  author = {Cohn, Mike},
  title = {Succeeding with agile: software development using Scrum},
  publisher = {Pearson Education},
  year = {2010}}

@inproceedings{Coin87a,
  author = {Pierre Cointe},
  title = {Metaclasses are First Class: the {ObjVlisp} Model},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {156--167},
  year = {1987},
  month = dec}

@inproceedings{Coin89a,
  author = {Jean-Pierre Briot and Pierre Cointe},
  title = {{Programming with Explicit Metaclasses in {Smalltalk}-80}},
  booktitle = {Proceedings OOPSLA '89},
  pages = {419--432},
  year = {1989},
  month = oct}

@inproceedings{Coin90a,
  author = {Pierre Cointe},
  title = {The {Class}{Talk} System: A Laboratory to Study Reflection in Smalltalk},
  booktitle = {OOPSLA/ECOOP Workshop on Reflection and Metalevel Architecture},
  year = {1990}}

@incollection{Coin92a,
  author = {Pierre Cointe},
  title = {{CLOS} and {Smalltalk}: a comparison},
  booktitle = {Object oriented Programming: the {CLOS} Perspective},
  pages = {215--250},
  publisher = {MIT Press},
  year = {1992}}

@book{Coin96a,
  title = {Proceedings {ECOOP}'96},
  volume = {1098},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Kaiserslautern, Germany},
  editor = {Pierre Cointe},
  isbn = {3-540-61439-7},
  month = jul,
  series = {LNCS}}

@book{Cold99a,
  author = {Jens Coldewey and Wolfgang Keller and Klaus Renzel},
  title = {Architectural Patterns for Business Information Systems},
  publisher = {Publisher Unknown},
  year = {1999},
  note = {To appear}}

@inproceedings{Cole01a,
  author = {R.J. Cole and P.W. Eklund},
  title = {Browsing Semi-structured Web texts using Formal Concept Analysis},
  booktitle = {Proceedings 9th International Conference on Conceptual Structures},
  pages = {319--332},
  publisher = {Springer-Verlag},
  year = {2001},
  address = {Berlin},
  series = {LNAI 2120}}

@inproceedings{Cole03a,
  author = {Cole, R. and Tilley, T.},
  title = {Conceptual Analysis of Software Structure},
  booktitle = {Proceedings of Fifteenth International Conference on Software Engineering and Knowledge Engineering, SEKE03},
  pages = {726--733},
  publisher = {Knowledge Systems Institute},
  year = {2003},
  address = {USA},
  month = jun}

@book{Cole94a,
  author = {Derek Coleman and Patrick Arnold and Stephanie Bodoff and Chris Dollin and Helena Gilchrist and Fiona Hayes},
  title = {Object-Oriented Development: The Fusion Method},
  publisher = {Prentice-Hall},
  year = {1994},
  isbn = {0-13-338823-9}}

@inproceedings{Coll03a,
  author = {Christian Collberg and Stephen Kobourov and Jasvir Nagra and Jacob Pitts and Kevin Wampler},
  title = {A System for Graph-based Visualization of the Evolution of Software},
  booktitle = {Proceedings of the 2003 ACM Symposium on Software Visualization},
  pages = {77--86},
  publisher = {ACM Press},
  year = {2003},
  address = {New York NY},
  isbn = {1-58113-642-0},
  location = {San Diego, California}}

@book{Coll04a,
  author = {Ben Collins-Sussman and Brian W. Fitzpatrick and C. Michael Pilato},
  title = {Version Control with Subversion},
  publisher = {O'Reilly \& Associates, Inc.},
  year = {2004},
  url = {http://svnbook.red-bean.com/ http://svnbook.red-bean.com/nightly/en/svn-book.pdf},
  isbn = {0-596-00448-6}}

@inproceedings{Coll05a,
  author = {Collett, Toby H.J. and MacDonald, Bruce A. and Gerkey, Brian P.},
  title = {Player 2.0: Toward a Practical Robot Programming Framework},
  booktitle = {ACRA'05: Proceedings of the 7th Australasian Conference on Robotics and Automation},
  pages = {1--9},
  year = {2005},
  address = {Sydney, Australia}}

@inproceedings{Coll06a,
  author = {Collard, M. and Kagdi, H. and Maletic, J.},
  title = {Factoring Differences for Iterative Change Management},
  booktitle = {International Workshop on Source Code Analysis and Manipulation},
  pages = {217--226},
  publisher = {IEEE},
  year = {2006},
  series = {SCAM'06}}

@book{Coll09a,
  author = {Collins-Sussman, Ben and Fitzpatrick, Brian W. and Pilato, C. Michael},
  title = {Version Control with Subversion (for Subversion 1.6)},
  publisher = {O'Reilly Media},
  year = {2009},
  month = jun}

@article{Coll81a,
  author = {C.B. Collins and Ian P. Goulden and David M. Jackson and Oscar Nierstrasz},
  title = {A Combinatorial Application of Matrix Riccati Equations and their q-analogue},
  journal = {Discrete Mathematics},
  volume = {36},
  publisher = {North-Holland},
  year = {1981},
  url = {http://scg.unibe.ch/archive/uw/Coll81a.pdf},
  doi = {10.1016/0012-365X(81)90234-X},
  abstract = {The generating functions for a large class of
combinatorial problems involving the enumeration of
permutations may be expressed as solutions to matric
Riccati equations. We show that the generating
functions for the permutation problem in which the
number of inversions is also preserved form a system
of matrix Riccati equations in which the
differential operator is the Eulerian differential
operator We obtain the classical result of MacMahon
concerning permutations.},
  address = {Amsterdam}}

@inproceedings{Coll93a,
  author = {P. Collette},
  title = {Application of the Composition Principle to Unity-Like Specifications},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {230--242},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@book{Coll95a,
  author = {Dave Collins},
  title = {Designing Object-Oriented User Interfaces},
  publisher = {Benjamin/Cummings Publishing},
  year = {1995}}

@inproceedings{Coll96a,
  author = {Jason A. Collins and Jim E. Greer and Sherman X. Huang},
  title = {Adaptive Assessment using Granularity Hierarchies and Bayesian Nets},
  booktitle = {Proceedings of the Third International Conference on Intelligent Tutoring Systems},
  pages = {569--577},
  year = {1996},
  city = {Montreal, Canada}}

@inproceedings{Coll98a,
  author = {Collison, Andrey and Bieri, Hanspeter},
  title = {{An Architecture of a Universal DBMS for Graphics Applications}},
  booktitle = {Proceedings of Computer Graphics International '98},
  publisher = {IEEE},
  year = {1998},
  url = {http://www.iam.unibe.ch/~booga/publications/papercollison.pdf},
  address = {Hannover, Germany},
  month = jun}

@book{Coly04a,
  author = {Colyer, Adrian and Clement, Andy and Harley, George and Webster, Matthew},
  title = {Eclipse {AspectJ}: aspect-oriented programming with {AspectJ} and the eclipse {AspectJ} development tools},
  publisher = {Addison-Wesley Professional},
  year = {2004},
  isbn = {0321245873}}

@article{Coly05a,
  author = {Colyer, A. and Clement A.},
  title = {Aspect-oriented programming with {AspectJ}},
  journal = {IBM Systems Journal},
  volume = {44},
  pages = {301-308},
  year = {2005},
  doi = {10.1147/sj.442.0301},
  issn = {0018-8670},
  number = {2}}

@misc{Comanche,
  title = {Comanche: a full featured web serving environment for {Smalltalk}},
  key = {Comanche},
  note = {http://squeaklab.org/comanche}}

@techreport{Come00,
  author = {Comella-Dorda, Santiago and Wallnau, Kurt and Seacord, Robert C and Robert, John},
  title = {A survey of legacy system modernization approaches},
  year = {2000},
  institution = {Carnegie-Mellon univ pittsburgh pa Software engineering inst}}

@techreport{Come00a,
  author = {Comella-Dorda, Santiago and Wallnau, Kurt and Seacord, Robert C and Robert, John},
  title = {A survey of legacy system modernization approaches},
  year = {2000},
  institution = {Carnegie-Mellon univ pittsburgh pa Software engineering inst}}

@manual{Comp00a,
  title = {COMPOST},
  year = {1996},
  url = {http://i44www.info.uni-karlsruhe.de/~compost},
  note = {http://i44www.info.uni-karlsruhe.de/~compost},
  organization = {University of Karlsruhe}}

@techreport{Comp93a,
  author = {Adriana B. Compagnoni and Benjamin C. Pierce},
  title = {Multiple Inheritance via Intersection Types},
  year = {1993},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/fomeet.ps.gz},
  institution = {LFCS, University of Edinburgh},
  month = aug,
  note = {To appear in MSCS},
  type = {ECS-LFCS-93-275}}

@techreport{Comp94a,
  author = {Adriana B. Compagnoni},
  title = {Subtyping in {${F}^\omega_\wedge$} is decidable},
  year = {1994},
  institution = {LFCS, University of Edinburgh},
  month = jan,
  type = {ECS-LFCS-94-281}}

@article{Comp99a,
  author = {Daniele Compare and Paola Inverardi and Alexander L. Wolf},
  title = {Uncovering Architectural Mismatch in Component Behavior},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {33},
  pages = {101--31},
  year = {1999},
  month = feb,
  number = {2}}

@techreport{ConF95a,
  author = {Groupe ConForM},
  title = {Concurrency and Formal Methods},
  year = {1995},
  misc = {19 December},
  institution = {EPFL},
  month = dec,
  type = {Journee scientifique Groupe ConForM}}

@misc{Concentration,
  title = {Concentration},
  url = {http://en.wikipedia.org/wiki/Concentration_(game)},
  key = {Concentration},
  note = {http://en.wikipedia.org/wiki/\-Concentration\-\_(game)}}

@inproceedings{Conn89a,
  author = {R.C.H. Connor and Alan Dearle and Ron Morrison and A.L. Brown},
  title = {An Object Addressing Mechanism for Statically Types Languages with Multiple Inheritance},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {279--286},
  year = {1989},
  month = oct}

@book{Conn95a,
  author = {John Connel and Linda Shafer},
  title = {Object-Oriented R{API}d Prototyping},
  publisher = {Yourdon Press Computing Series},
  year = {1995},
  isbn = {0-13-629643-2}}

@article{Conr98a,
  author = {Reidar Conradi and Bernhard Westfechtel},
  title = {Version Models for Software Configuration Management},
  journal = {ACM Computing Surveys},
  volume = {30},
  pages = {232--282},
  publisher = {ACM CS Press},
  year = {1998},
  month = jun,
  number = {2}}

@inproceedings{Conr99a,
  author = {Reidar Conradi and Bernhard Westfechtel},
  title = {{SCM}: Status and Future Challenges},
  booktitle = {Proceedings SCM 1999 (International Workshop on Software Configuration Management},
  pages = {228--231},
  year = {1999}}

@inproceedings{Cons05a,
  author = {Charles Consel and Fabien Latry and Laurent R\'{e}veill\`{e}re and Pierre Cointe},
  title = {A Generative Programming Approach to Developing {DSL} Compilers},
  booktitle = {Fourth International Conference on Generative Programming and Component Engineering ({GPCE})},
  volume = {3676},
  pages = {29--46},
  publisher = {Springer-Verlag},
  year = {2005},
  url = {http://www.labri.fr/publications/paradis/2005/CLRC05},
  month = sep,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Cons07a,
  author = {Consel, Charles and Jouve, Wilfried and Lancia, Julien and Palix, Nicolas},
  title = {Ontology-Directed Generation of Frameworks For Pervasive Service Development},
  booktitle = {Proceedings of The 4th IEEE Workshop on Middleware Support for Pervasive Computing (PerWare'07)},
  pages = {501--506},
  year = {2007},
  url = {http://phoenix.labri.fr/publications/talks/consel-al_perware07_talk.pdf},
  pdf = {http://phoenix.labri.fr/publications/papers/consel-al_perware-07.pdf},
  address = {White Plains, NY, USA},
  month = mar}

@techreport{Cons91a,
  author = {Panos Constantopoulos and Martin D{\"o}rr and E. Pataki and Eleni Petra and G. Spanoudakis and Yannis Vassiliou},
  title = {The Software Information Base --- Selection Tool Integrated Prototype},
  year = {1991},
  misc = {Jan 12},
  address = {Iraklion, Crete},
  institution = {Foundation of Research and Technology --- Hellas},
  month = jan,
  number = {FORTH.91.E2.3},
  type = {ITHACA report}}

@techreport{Cons92a,
  author = {Panos Constantopoulos and Matthias Jarke and John Mylopoulos and Yannis Vassiliou},
  title = {The Software Information Base: {A} Server for Reuse},
  year = {1992},
  address = {Iraklion, Crete},
  institution = {Foundation of Research and Technology --- Hellas},
  month = jan,
  number = {FORTH.92.E2.1},
  type = {ITHACA report}}

@inproceedings{Cons92b,
  author = {Mariano P. Consens and Alberto O. Mendelzon and Arthur G. Ryman},
  title = {Visualizing and Querying Software Structures},
  booktitle = {Proceedings of the 14th International Conference on Software Engineering},
  pages = {138--156},
  year = {1992}}

@inproceedings{Cons93a,
  author = {Mariano P. Consens and Alberto O. Mendelzon},
  title = {Hy+: {A} Hygraph-based Query and Visualisation System},
  booktitle = {Proceeding of International Conference on Management Data},
  pages = {511--516},
  year = {1993}}

@inproceedings{Cons93c,
  author = {Charles Consel and Olivier Danvy},
  title = {Tutorial Notes on Partial Evaluation},
  booktitle = {Conference Record of {POPL}~'93},
  pages = {493--501},
  year = {1993},
  month = jan,
  organization = {ACM}}

@inproceedings{Cons94b,
  author = {M. Consens and M. Z. Hazan and A. Mendelzon},
  title = {Debugging Distributed Programs by Visualizing and Querying Event Traces},
  booktitle = {Proceedings 1st. International Conference on Applications of Databases, LNCS 819},
  year = {1994}}

@incollection{Cons95a,
  author = {Panos Constantopoulos and Martin D{\"o}rr},
  title = {Component Classification in the Software Information Base},
  booktitle = {Object-Oriented Software Composition},
  pages = {177--200},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {A key component in a reuse-oriented software
development environment is an appropriate software
repository. We present a repository system which
supports the entire software development lifecycle,
providing for the integrated and consistent
representation, organization, storage, and
management of reusable artefacts. The system can
support multiple development and representation
models and is dynamically adaptable to new ones. The
chapter focuses on the facilities offered by the
system for component classification, an important
technique for retrieving reusable software. It is
demonstrated that the inherently delicate and
complex process of classification is streamlined and
considerably facilitated by integrating it into a
wider documentation environment and, especially, by
connecting it with software static analysis. The
benefits in terms of precision, consistency and ease
of use can be significant for large scale
applications.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@article{Cont96a,
  author = {Conte, Thomas and Menezes, Kishore and Patel, Burzin and Cox, J.},
  title = {Hardware-Based Profiling: An Effective Technique for Profile-Driven Optimization},
  journal = {International Journal of Parallel Programming},
  volume = {24},
  year = {1996},
  doi = {10.1007/BF03356747},
  month = {apr}}

@misc{ContextJ,
  title = {{ContextJ}},
  url = {http://prog.vub.ac.be/~pcostanza/contextj.html},
  key = {ContextJ},
  note = {http://prog.vub.ac.be/~pcostanza/contextj.html}}

@misc{ContextL,
  title = {{ContextL}},
  url = {http://common-lisp.net/project/closer/contextl.html},
  key = {ContextL},
  note = {http://common-lisp.net/project/closer/contextl.html}}

@misc{ContextS,
  title = {{ContextS}},
  url = {http://www.swa.hpi.uni-potsdam.de/downloads/index.html},
  key = {ContextS},
  note = {http://www.swa.hpi.uni-potsdam.de/downloads/index.html}}

@article{Conw63a,
  author = {Melvin E. Conway},
  title = {Design of a separable transition-diagram compiler},
  journal = {Commun. ACM},
  volume = {6},
  pages = {396--408},
  publisher = {ACM Press},
  year = {1963},
  doi = {10.1145/366663.366704},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {7}}

@article{Conw68a,
  author = {Melvin E. Conway},
  title = {How do committees invent?},
  journal = {Datamation},
  volume = {14},
  pages = {28--31},
  year = {1968},
  month = apr,
  number = {4}}

@inproceedings{Cook01a,
  author = {Stephen Cook and Rachel Harrison and Brian Ritchie},
  title = {Assessing the Evolution of Financial Management Information Systems},
  booktitle = {ECOOP 2001 Workshop Reader},
  volume = {2323},
  publisher = {Springer-Verlag},
  year = {2001},
  series = {LNCS}}

@inproceedings{Cook01b,
  author = {Stephen Cook and H. Ji and Rachel Harrison},
  title = {Dynamic and Static Views of Software Evolution},
  booktitle = {IEEE {ICSM} 2001},
  year = {2001}}

@article{Cook09a,
  author = {William R. Cook},
  title = {On understanding data abstraction, revisited},
  journal = {SIGPLAN Not.},
  volume = {44},
  pages = {557--572},
  publisher = {ACM},
  year = {2009},
  url = {http://www.cs.utexas.edu/~wcook/Drafts/2009/essay.pdf},
  doi = {10.1145/1639949.1640133},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {10}}

@article{Cook84a,
  author = {P.R. Cook},
  title = {Electronic Encyclopedias},
  journal = {Byte},
  pages = {151--167},
  year = {1984},
  month = jul}

@inproceedings{Cook87a,
  author = {Steve Cook},
  title = {{OOPSLA} '87 {Panel} {P2}: Varieties of Inheritance},
  booktitle = {OOPSLA '87 Addendum To The Proceedings},
  pages = {35--40},
  publisher = {ACM Press},
  year = {1987},
  month = oct}

@inproceedings{Cook89a,
  author = {William Cook and Jens Palsberg},
  title = {A Denotational Semantics of Inheritance and its Correctness},
  booktitle = {Proceedings OOPSLA '89},
  volume = {24},
  pages = {433--443},
  year = {1989},
  url = {http://www.cs.purdue.edu/homes/palsberg/publications.html},
  month = oct}

@inproceedings{Cook89b,
  author = {William Cook},
  title = {A Proposal for Making Eiffel Type-safe},
  booktitle = {Proceedings ECOOP '89},
  pages = {57--70},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  url = {http://www.ifs.uni-linz.ac.at/~ecoop/cd/tocs/tec89.htm http://www.ifs.uni-linz.ac.at/~ecoop/cd/papers/ec89/ec890057.pdf},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@phdthesis{Cook89c,
  author = {William R. Cook},
  title = {A Denotational Semantics of Inheritance},
  year = {1989},
  school = {Department of Computer Science, Brown University, Providence, RI},
  month = may,
  type = {{Ph.D}. Thesis}}

@book{Cook89d,
  title = {Proceeding of {ECOOP}'89 European Conference on Object-Oriented Programming},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {Stephen Cook},
  month = jul}

@inproceedings{Cook90a,
  author = {William Cook and Walter Hill and Peter Canning},
  title = {Inheritance is not Subtyping},
  booktitle = {Proceedings POPL '90},
  year = {1990},
  misc = {Jan 17-19},
  url = {http://www.cs.utexas.edu/~wcook/papers/InheritanceSubtyping90/CookPOPL90.pdf},
  doi = {10.1145/96709.96721},
  address = {San Francisco},
  month = jan}

@inproceedings{Cook90b,
  author = {William R. Cook},
  title = {Object-Oriented Programming Versus Abstract Data Types},
  booktitle = {Proceedings of the REX School/Workshop on Foundations of Object-Oriented Languages},
  pages = {151--178},
  publisher = {Springer-Verlag},
  year = {1991},
  url = {http://www.cs.utexas.edu/~wcook/papers/OOPvsADT/CookOOPvsADT90.pdf},
  address = {London, UK},
  isbn = {3-540-53931-X}}

@inproceedings{Cook92a,
  author = {William R. Cook},
  title = {Interfaces and {Specifications} for the {Smalltalk}-80 {Collection} {Classes}},
  booktitle = {Proceedings of OOPSLA '92 (7th Conference on Object-Oriented Programming Systems, Languages and Applications)},
  volume = {27},
  pages = {1--15},
  publisher = {ACM Press},
  year = {1992},
  url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.7900&rep=rep1&type=pdf},
  doi = {10.1145/141936.141938},
  location = {Vancouver, Canada},
  month = oct}

@inproceedings{Cook93a,
  author = {William Cook},
  title = {Application Integration, not Application Distribution},
  booktitle = {ACM OOPS Messenger, Addendum to the Proceedings of OOPSLA 1993},
  volume = {5},
  pages = {70--71},
  year = {1994},
  month = apr}

@inproceedings{Cook99a,
  author = {Stephen Cook and He Ji and Rachel Harrison},
  title = {Dynamic and Static Views of Software Evolution},
  booktitle = {Proceedings of {ICSM} 2001},
  pages = {592--601},
  publisher = {IEEE Press},
  year = {1999},
  organization = {IEEE}}

@book{Coop00a,
  author = {James W. Cooper},
  title = {Java Design Patterns},
  publisher = {Addison Wesley},
  year = {2000}}

@article{Coop02,
  author = {Cooper, Keith D. and Subramanian, Devika and Torczon, Linda},
  title = {Adaptive Optimizing Compilers for the 21st Century},
  journal = {The Journal of Supercomputing},
  volume = {23},
  pages = {7--22},
  year = {2002},
  url = {https://doi.org/10.1023/A:1015729001611},
  doi = {10.1023/A:1015729001611},
  abstract = {Historically, compilers have operated by applying a fixed set of optimizations in a predetermined order. We call such an ordered list of optimizations a compilation sequence. This paper describes a prototype system that uses biased random search to discover a program-specific compilation sequence that minimizes an explicit, external objective function. The result is a compiler framework that adapts its behavior to the application being compiled, to the pool of available transformations, to the objective function, and to the target machine.},
  da = {2002/08/01},
  date-added = {2022-10-12 13:20:34 +0200},
  date-modified = {2022-10-12 13:20:34 +0200},
  id = {Cooper2002},
  isbn = {1573-0484},
  number = {1},
  ty = {JOUR}}

@book{Coop03a,
  author = {Cooper, Keith and Torczon, Linda},
  title = {Engineering a Compiler: International Student Edition},
  publisher = {Morgan Kaufmann Publishers Inc.},
  year = {2003},
  address = {San Francisco, CA, USA},
  isbn = {9780080472676}}

@article{Coop04,
  author = {Almagor, L. and Cooper, Keith D. and Grosul, Alexander and Harvey, Timothy J. and Reeves, Steven W. and Subramanian, Devika and Torczon, Linda and Waterman, Todd},
  title = {Finding Effective Compilation Sequences},
  journal = {SIGPLAN Not.},
  volume = {39},
  pages = {231–239},
  publisher = {Association for Computing Machinery},
  year = {2004},
  url = {https://doi.org/10.1145/998300.997196},
  doi = {10.1145/998300.997196},
  issue_date = {July 2004},
  address = {New York, NY, USA},
  number = {7},
  issn = {0362-1340},
  abstract = {Most modern compilers operate by applying a fixed, program-independent sequence of optimizations to all programs. Compiler writers choose a single "compilation sequence", or perhaps a couple of compilation sequences. In choosing a sequence, they may consider performance of benchmarks or other important codes. These sequences are intended as general-purpose tools, accessible through command-line flags such as -O2 and -O3.Specific compilation sequences make a significant difference in the quality of the generated code, whether compiling for speed, for space, or for other metrics. A single universal compilation sequence does not produce the best results over all programs [8, 10, 29, 32]. Finding an optimal program-specific compilation sequence is difficult because the space of potential sequences is huge and the interactions between optimizations are poorly understood. Moreover, there is no systematic exploration of the costs and benefits of searching for good (i.e., within a certain percentage of optimal) program-specific compilation sequences.In this paper, we perform a large experimental study of the space of compilation sequences over a set of known benchmarks, using our prototype adaptive compiler. Our goal is to characterize these spaces and to determine if it is cost-effective to construct custom compilation sequences. We report on five exhaustive enumerations which demonstrate that 80% of the local minima in the space are within 5 to 10% of the optimal solution. We describe three algorithms tailored to search such spaces and report on experiments that use these algorithms to find good compilation sequences. These experiments suggest that properties observed in the enumerations hold for larger search spaces and larger programs. Our findings indicate that for the cost of 200 to 4,550 compilations, we can find custom sequences that are 15 to 25% better than the human-designed fixed-sequence originally used in our compiler.},
  month = {jun},
  numpages = {9},
  keywords = {learning models, adaptive compilers}}

@book{Coop95a,
  author = {Alan Cooper},
  title = {About Face --- The Essentials of User Interface Design},
  publisher = {Hungry Minds},
  year = {1995}}

@book{Coop99a,
  author = {Alan Cooper},
  title = {The Inmates are running the Asylum},
  publisher = {SAMS},
  year = {1999}}

@book{Copl92a,
  author = {James O. Coplien},
  title = {Advanced {C}++: Programming Styles and Idioms},
  publisher = {Addison Wesley},
  year = {1992},
  isbn = {0-201-54855-0}}

@book{Copl95a,
  author = {James O. Coplien and Douglas Schmidt},
  title = {Pattern Languages of Program Design},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-60734-4}}

@techreport{Copl95b,
  author = {James O. Coplien},
  title = {Multi-Paradigm Design and Implementation},
  year = {1995},
  institution = {Software Production Research Department AT\&T Bell Laboratories},
  number = {1995},
  type = {Report}}

@booklet{Copl95c,
  author = {James O. Coplien},
  title = {Advanced {C}++ Programming Styles: Using {C}++ as a Higher-Level Language},
  year = {1995},
  howpublished = {CHOOSE Tutorial}}

@incollection{Copl95d,
  author = {James O. Coplien},
  title = {A Development Process Generative Pattern Language},
  booktitle = {Pattern Languages of Program Design},
  pages = {183--237},
  publisher = {Addison Wesley},
  year = {1995},
  editor = {James O. Coplien and Douglas Schmidt},
  isbn = {0-201-60734-4}}

@incollection{Copl95e,
  author = {James O. Coplien},
  title = {A Generative Development-Process Pattern Language},
  booktitle = {Pattern Languages of Program Design 1},
  pages = {184--237},
  publisher = {Addison Wesley},
  year = {1995},
  editor = {James O. Coplien and Douglas C. Schmidt}}

@book{Copl99a,
  author = {James O. Coplien},
  title = {Multi-Paradigm Design for {C}++},
  publisher = {Addison Wesley},
  year = {1999},
  address = {Reading, Mass.}}

@incollection{Copp80a,
  author = {M. Coppo and M. Dezani-Ciancaglini and B. Venneri and New York},
  title = {Principal type schemes and lambda calculus semantics},
  booktitle = {To H. B. Curry: Essays on Combinatory Logic Lambda Calculus, and Formalism},
  pages = {535--560},
  publisher = {Academic Press},
  year = {1980}}

@inproceedings{Copp92a,
  author = {Coppick, J. Chris and Cheatham, Thomas J.},
  title = {Software metrics for object-oriented systems},
  booktitle = {CSC'92: Proceedings of the 20th Conference on Computer Science},
  pages = {317--322},
  publisher = {ACM},
  year = {1992},
  doi = {10.1145/131214.131254},
  address = {New York, NY, USA},
  isbn = {0-89791-472-4},
  location = {Kansas City, Missouri, United States}}

@misc{Coppel08,
  author = {Yohann Coppel},
  title = {Reflecting Scala. Project Report.},
  year = {2008},
  howpublished = {http://lamp.epfl.ch/teaching/projects/archive/coppel\_report.pdf}}

@article{Corb89a,
  author = {Thomas A. Corbi},
  title = {Program Understanding: Challenge for the 1990's},
  journal = {IBM Systems Journal},
  volume = {28},
  pages = {294--306},
  publisher = {IBM},
  year = {1989},
  number = {2}}

@inproceedings{Corb94a,
  author = {P. Corbellini and Della Vigna and F. Mercalli and M. Pugliese},
  title = {Object-Oriented Approach to the Integration of Online Services into Office Automation Environments},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {359--370},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@article{Cord02a,
  author = {James R. Cordy and Thomas R. Dean and Andrew J. Malton and Kevin A. Schneider},
  title = {Source transformation in software engineering using the {TXL} transformation system},
  journal = {Information and Software Technology},
  volume = {44},
  pages = {827--837},
  year = {2002},
  number = {13}}

@inproceedings{Cord03a,
  author = {James R. Cordy},
  title = {Comprehending Reality---Practical Barriers to Industrial Adoption of Software Maintenance Automation},
  booktitle = {Proc. 11th Int. Workshop on Program Comprehension (IWPC'03)},
  pages = {196--205},
  publisher = {IEEE},
  year = {2003},
  address = {Portland, Oregon, USA},
  month = may}

@inproceedings{Cord04a,
  author = {James R. Cordy and Thomas R. Dean and Nikita Synytskyy},
  title = {Practical Language-Independent Detection of Near-Miss Clones},
  booktitle = {Proceedings of the 2004 conference of the Centre for Advanced Studies on Collaborative research (CASCON 04)},
  pages = {1--12},
  publisher = {IBM Press},
  year = {2004},
  address = {Markham, Ontario, Canada}}

@inproceedings{Cord88a,
  author = {James R. Cordy and Charles D. Halpern and Eric Promislow},
  title = {{TXL}: {A} R{API}d Prototyping System for Programming Language Dialects},
  booktitle = {Proceedings of The International Conference of Computer Languages},
  pages = {280--285},
  year = {1988},
  misc = {Oct. 9-13},
  address = {Miami, FL},
  month = oct}

@techreport{Cord91a,
  author = {James R. Cordy},
  title = {User's Guide to {TXL} --- The Tree Transformation Language V5.0},
  year = {1991},
  address = {Karlsruhe},
  institution = {GMD},
  month = apr,
  number = {Rex-2-GMD-42-1.0},
  type = {Project REX Working Paper}}

@article{Cordy06a,
  author = {James R. Cordy},
  title = {The {TXL} source transformation language},
  journal = {Sci. Comput. Program.},
  volume = {61},
  pages = {190-210},
  year = {2006},
  url = {http://research.cs.queensu.ca/~cordy/Papers/Cordy\_TXL\_SCP.pdf},
  ee = {10.1016/j.scico.2006.04.002},
  number = {3}}

@inproceedings{Cordy06b,
  author = {James R. Cordy},
  title = {Source transformation, analysis and generation in {TXL}},
  booktitle = {PEPM},
  pages = {1-11},
  year = {2006},
  url = {http://research.cs.queensu.ca/~cordy/Papers/Cordy\_PEPM06\_TXL.pdf},
  ee = {10.1145/1111542.1111544}}

@inproceedings{Corm00a,
  author = {Flanagan, Cormac and Leino, K. Rustan M. and Lillibridge, Mark and Nelson, Greg and Saxe, James B. and Stata, Raymie},
  title = {{Extended Static Checking for Java}},
  booktitle = {Conference on Programming Language Design and Implementation},
  pages = {234--245},
  year = {2002}}

@inproceedings{Corm90a,
  author = {G.V. Cormack and A.K. Wright},
  title = {Type-Dependent Parameter Inference},
  booktitle = {Proceedings of the ACM SIGPLAN '90 Conference on Programming Language Design and Implementation},
  pages = {127--136},
  year = {1990},
  address = {White Plains, New York}}

@book{Corm90b,
  author = {Thomas H. Corman and Charles E. Leiserson and Ronald L. Rivest},
  title = {Introduction to Algorithms},
  publisher = {MIT Press},
  year = {1990},
  isbn = {0-262-03141-8}}

@misc{Corn06a,
  author = {Steve Cornett},
  title = {Minimum Acceptable Code Coverage},
  year = {2006},
  url = {http://www.bullseye.com/minimum.html},
  date-added = {2007-02-01 14:05:28 +0100},
  date-modified = {2007-02-01 14:05:28 +0100},
  institution = {Bullseye Testing Technology}}

@inproceedings{Corn07a,
  author = {Bas Cornelissen},
  title = {Dynamic Analysis Techniques for the Reconstruction of Architectural Views},
  booktitle = {Proceeding of Working Conference on Reverse Engineering ({WCRE})},
  publisher = {IEEE},
  year = {2007}}

@inproceedings{Corn07b,
  author = {Bas Cornelissen and Danny Holten and Andy Zaidman and Leon Moonen and Jarke J. van Wijk andvan Deursen, Arie},
  title = {Understanding Execution Traces Using Massive Sequence and Circular Bundle Views},
  booktitle = {Proceedings of the 15th International Conference on Program Comprehension ({ICPC})},
  pages = {49--58},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/{ICPC}.2009.5090033}}

@article{Corn09a,
  author = {Bas Cornelissen and Andy Zaidman andvan Deursen, Arie and Leon Moonen and Rainer Koschke},
  title = {A Systematic Survey of Program Comprehension through Dynamic Analysis},
  journal = {IEEE Transactions on Software Engineering},
  volume = {35},
  pages = {684--702},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://swerl.tudelft.nl/twiki/pub/Main/TechnicalReports/TUD-SERG-2008-033.pdf},
  doi = {10.1109/TSE.2009.28},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  number = {5}}

@inproceedings{Corn09b,
  author = {Bas Cornelissen and Andy Zaidman andvan Deursen, Arie and Bart van Rompaey},
  title = {Trace Visualization for Program Comprehension: A Controlled Experiment},
  booktitle = {Proceedings 17th International Conference on Program Comprehension ({ICPC})},
  pages = {100--109},
  publisher = {IEEE Computer Society},
  year = {2009},
  isbn = {0-7695-2860-0}}

@misc{Corn96a,
  author = {Steve Cornett},
  title = {Code Coverage Analysis},
  year = {1996},
  url = {http://www.bullseye.com/coverage.html},
  institution = {Bullseye Testing Technology}}

@misc{Corn99a,
  author = {Steve Cornett},
  title = {What is Wrong with Line Coverage},
  year = {1999},
  url = {http://www.bullseye.com/lineCoverage.html},
  institution = {Bullseye Testing Technology}}

@inproceedings{Corr01a,
  author = {Claudio Corrodi},
  title = {Towards Efficient Object-Centric Debugging with Declarative Breakpoints},
  booktitle = {SATToSE 2016},
  year = {2016},
  keywords = {debugging, breakpoint}}

@article{Cort06a,
  author = {Pier Francesco Cortese and Giuseppe Di Battista and Antonello Moneta and Maurizio Patrignani and Maurizio Pizzonia},
  title = {Topographic Visualization of Prefix Propagation in the Internet},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {12},
  pages = {725--732},
  publisher = {IEEE Educational Activities Department},
  year = {2006},
  doi = {10.1109/TVCG.2006.185},
  address = {Piscataway, NJ, USA},
  issn = {1077-2626},
  number = {5}}

@inproceedings{Corw03a,
  author = {John Corwin and David F. Bacon and David Grove and Chet Murthy},
  title = {{MJ}: a rational module system for {Java} and its applications},
  booktitle = {Proceedings of the 18th ACM SIGPLAN conference on Object-oriented programing, systems, languages, and applications},
  pages = {241--254},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/949305.949326},
  isbn = {1-58113-712-5},
  location = {Anaheim, California, USA}}

@inproceedings{Cose12a,
  author = {Cosentino, Valerio and Cabot, Jordi and Albert, Patrick and Bauquel, Philippe and Perronnet, Jacques},
  title = {{A Model Driven Reverse Engineering Framework for Extracting Business Rules Out of a Java Application}},
  booktitle = {Rules on the {Web}: {Research} and {Applications}},
  pages = {17--31},
  publisher = {Springer Berlin Heidelberg},
  year = {2012},
  editor = {Bikakis, Antonis and Giurca, Adrian},
  isbn = {978-3-642-32689-9},
  keywords = {Atlas Transformation Language, Business Rule, Java Application, Model Drive Engineer, Variable Declaration},
  language = {en},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Coss10a,
  title={DSketch: Lightweight, adaptable dependency analysis},
  author={Cossette, Brad and Walker, Robert J},
  booktitle={Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering},
  pages={297--306},
  year={2010}
}

@inproceedings{Coss12a,
  author = {Cossette, Bradley E. and Walker, Robert J.},
  title = {Seeking the Ground Truth: A Retroactive Study on the Evolution and Migration of Software Libraries},
  booktitle = {Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering},
  pages = {55:1--55:11},
  publisher = {ACM},
  year = {2012},
  url = {http://doi.acm.org/10.1145/2393596.2393661},
  doi = {10.1145/2393596.2393661},
  acmid = {2393661},
  address = {New York, NY, USA},
  articleno = {55},
  isbn = {978-1-4503-1614-9},
  keywords = {{API}, adaptive change, recommendation systems},
  location = {Cary, North Carolina},
  numpages = {11},
  series = {FSE '12}}

@inproceedings{Cost03a,
  author = {Pascal Costanza},
  title = {Dynamically Scoped Functions},
  booktitle = {ECOOP 2003 Workshop on Object-oriented Language Engineering for the Post-Java Era},
  volume = {38/8},
  publisher = {ACM},
  year = {2003},
  url = {http://p-cos.net/documents/dynfun.pdf},
  address = {Darmstadt, Germany},
  month = jul,
  series = {SIGPLAN Notices}}

@inproceedings{Cost05a,
  author = {Pascal Costanza and Robert Hirschfeld},
  title = {Language Constructs for Context-oriented Programming: An Overview of {ContextL}},
  booktitle = {Proceedings of the Dynamic Languages Symposium (DLS'05)},
  pages = {1--10},
  publisher = {ACM},
  year = {2005},
  url = {http://p-cos.net/documents/contextl-overview.pdf},
  doi = {10.1145/1146841.1146842},
  address = {New York, NY, USA},
  isbn = {1-59593-283-6},
  location = {San Diego, CA, USA},
  month = oct}

@inproceedings{Cost05b,
  author = {Pascal Costanza},
  title = {How to Make Lisp More Special},
  booktitle = {International Lisp Conference 2005},
  year = {2005},
  url = {http://p-cos.net/documents/special-full.pdf},
  address = {Stanford, California, USA},
  month = jun}

@inproceedings{Cost06a,
  author = {Costanza, Pascal and Hirschfeld, Robert and De Meuter, Wolfgang},
  title = {Efficient Layer Activation for Switching Context-dependent Behavior},
  booktitle = {JMLC'06: Proceedings of the Joint Modular Languages Conference},
  volume = {4228},
  publisher = {Springer},
  year = {2006},
  url = {http://p-cos.net/documents/context-switch.pdf},
  address = {Oxford, England},
  month = sep,
  series = {LNCS}}

@inproceedings{Cost06c,
  author = {Fabio Costa, Lucas Provensi, Frederico Vaz},
  title = {Towards a More Effective Coupling of Reflection and Runtime Metamodels for Middleware},
  booktitle = {Workshop on Models at Runtime},
  year = {2006}}

@inproceedings{Cost07a,
  author = {Pascal Costanza and Robert Hirschfeld},
  title = {Reflective layer activation in {ContextL}},
  booktitle = {SAC '07: Proceedings of the 2007 ACM Symposium on Applied Computing},
  pages = {1280--1285},
  publisher = {ACM Press},
  year = {2007},
  doi = {10.1145/1244002.1244279},
  address = {New York, NY, USA}}

@article{Cost18c,
  author = {Costiou, Steven and Kerboeuf, Mickael and Cavarle, Glenn and Plantec, Alain},
  title = {Lub: A pattern for fine grained behavior adaptation at runtime},
  journal = {Science of Computer Programming},
  volume = {161},
  pages = {149--171},
  publisher = {Elsevier},
  year = {2018}}

@inproceedings{Cost18d,
  author = {Costiou, Steven and Toullec, Clotilde and Kerboeuf, Micka\"{e}l and Plantec, Alain},
  title = {Back-in-time inspectors: an implementation with Collectors},
  booktitle = {Proceedings of the 13th Edition of the International Workshop on Smalltalk Technologies},
  publisher = {ACM},
  year = {2018},
  doi = {10.1145/3300209.3300219},
  address = {New York, NY, USA},
  isbn = {978-1-4503-6197-2},
  location = {Cagliari, Italy},
  series = {IWST '18}}

@article{Cost21a,
  author = {Costa, Diego and Bezemer, Cor-Paul and Leitner, Philipp and Andrzejak, Artur},
  title = {What's Wrong with My Benchmark Results? Studying Bad Practices in JMH Benchmarks},
  journal = {IEEE Transactions on Software Engineering},
  volume = {47},
  pages = {1452-1467},
  year = {2021},
  doi = {10.1109/TSE.2019.2925345},
  number = {7}}

@article{Cost84a,
  author = {G. Costa and Colin Stirling},
  title = {A Fair Calculus of Communicating Systems},
  journal = {Acta Informatica},
  volume = {21},
  pages = {417--442},
  year = {1984},
  number = {5}}

@inproceedings{Cota20a,
  author = {Cota Vidaure, Andreina and Cusi Lopez, Evelyn and Sandoval Alcocer, Juan Pablo and Bergel, Alexandre},
  title = {TestEvoViz: Visual Introspection for Genetically-Based Test Coverage Evolution.},
  booktitle = {VISSOFT},
  pages = {1--11},
  year = {2020}}

@inproceedings{Cott05,
  author = {Thomas Cottenier and Tzilla Elrad},
  title = {Contextual Pointcut Expressions for Dynamic Service Customization},
  booktitle = {Dynamic Aspect Workshop (DAW'05) as part of AOSD'05},
  year = {2005}}

@book{Cott95a,
  author = {Sean Cottter and Mike Potel},
  title = {Inside Taligent Technology},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-40970-4}}

@book{Coul94a,
  author = {George Coulouris and Jean Dollimore and Tim Kindberg},
  title = {Distributed Systems Concepts and Design},
  publisher = {Addison Wesley},
  year = {1994},
  isbn = {0-201-62433-8}}

@book{Coul98a,
  author = {Bernard Coulange},
  title = {Software Reuse},
  publisher = {Springer-Verlag},
  year = {1998}}

@inproceedings{Coun05a,
  author = {Counsell, Steve and Swift, Stephen and Tucker, Allan},
  title = {Object-oriented cohesion as a surrogate of software comprehension: an empirical study},
  journal = {Proceedings of the Fifth IEEE International Workshop on Source Code Analysis and Manipulation},
  booktitle = {Proceedings of the Fifth IEEE International Workshop on Source Code Analysis and Manipulation},
  pages = {161--172},
  year = {2005},
  date-added = {2011-12-17 22:57:45 +0100},
  date-modified = {2011-12-17 23:01:19 +0100}}

@inproceedings{Cour05a,
  author = {Alexandre Courbot and Jean-Jacques Vandewalle and Gilles Grimaud},
  title = {Romization: Early Deployment and Customization of {Java} Systems for Constrained Devices},
  booktitle = {In Proceedings of Second International Workshop on Construction and Analysis of Safe, Secure, and Interoperable Smart Devices},
  volume = {3956},
  pages = {57--76},
  publisher = {Springer},
  year = {2005},
  isbn = {3-540-33689-3},
  series = {Lecture Notes in Computer Science}}

@article{Cour10a,
  author = {Courbot, Alexandre and Grimaud, Gilles and Vandewalle, Jean-Jacques},
  title = {Efficient off-board deployment and customization of virtual machine-based embedded systems},
  journal = {ACM Transaction on Embedded Computer Systems},
  volume = {9},
  pages = {21:1--21:53},
  publisher = {ACM},
  year = {2010},
  doi = {10.1145/1698772.1698779},
  acmid = {1698779},
  address = {New York, NY, USA},
  issn = {1539-9087},
  issue = {3},
  keywords = {Embedded operating systems, Java, deployment, program customization, software analysis},
  month = {mar}}

@inproceedings{Cous77a,
  author = {Cousot, Patrick and Cousot, Radhia},
  title = {Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints},
  booktitle = {Principles of Programming Languages (POPL '77)},
  pages = {238--252},
  year = {1977},
  address = {New York, NY, USA},
  location = {Los Angeles, California},
  numpages = {15}}

@inproceedings{Cous85a,
  author = {Guy Cousineau and Pierre-Louis Curien and M. Mauny},
  title = {The Categorical Abstract Machine},
  booktitle = {Proceedings Functional Programming languages and Computer Architecture},
  volume = {201},
  pages = {50--64},
  publisher = {Springer-Verlag},
  year = {1985},
  editor = {J-P. Jouannaud},
  series = {LNCS}}

@article{Cout12b,
  author = {Cesar Couto and Joao Eduardo Montandon and Christofer Silva and Marco Tulio Valente},
  title = {{Static Correspondence and Correlation Between Field Defects and Warnings Reported by a Bug Finding Tool}},
  journal = {Software Quality Journal},
  pages = {1--17},
  year = {2012}}

@inproceedings{Cout87a,
  author = {Jo\"elle Coutaz},
  title = {The Construction of User Interfaces and the Object Paradigm},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {121--130},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Cout89a,
  author = {Jo\"elle Coutaz},
  title = {Architecture Models for Interactive Software},
  booktitle = {Proceedings ECOOP '89},
  pages = {383--399},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@book{Covi97a,
  author = {Michael A. Covington and Donald Nute and Andr\'e Vellino},
  title = {Prolog Programming in Depth},
  publisher = {Prentice-Hall},
  year = {1997},
  isbn = {0-13-138645-X}}

@misc{Cowa00a,
  author = {D. Coward},
  title = {Java servlet specification version 2.3},
  year = {2000},
  note = {http://java.\-sun.com/products/servlet/}}

@book{Cowl97a,
  author = {Michael F. Cowlishaw},
  title = {The NetRexx Language},
  publisher = {Prentice-Hall},
  year = {1997},
  isbn = {0-13-806332-X}}

@inproceedings{Cox00a,
  author = {Anthony Cox and Charles Clarke},
  title = {A comparative evaluation of techniques for syntactic level source-code analysis},
  booktitle = {Proceedings 7th Asia-Pacific Software Engineering Conference (APSEC)},
  year = {2000},
  month = dec}

@inproceedings{Cox01a,
  author = {Anthony Cox and Charles Clarke},
  title = {Representing and Accessing Extracted Information},
  booktitle = {Proceedings of the IEEE International Conference on Software Maintenance ({ICSM}'01)},
  pages = {12},
  publisher = {IEEE Computer Society},
  year = {2001},
  doi = {10.1109/ICSM.2001.972707},
  address = {Washington, DC, USA},
  isbn = {0-7695-1189-9}}

@inproceedings{Cox03a,
  author = {Anthony Cox and Charles Clarke},
  title = {Syntactic Approximation Using Iterative Lexical Analysis},
  booktitle = {Proceedings of the 11th International IEEE Workshop on Program Comprehension (IWPC'03)},
  pages = {154--163},
  publisher = {IEEE},
  year = {2003},
  doi = {10.1109/IWPC.2003.10006},
  month = may}

@article{Cox08a,
  author = {Russ Cox and Tom Bergan and Austin T. Clements and Frans Kaashoek and Eddie Kohler},
  title = {{Xoc}, an extension-oriented compiler for systems programming},
  journal = {SIGARCH Comput. Archit. News},
  volume = {36},
  pages = {244--254},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1353534.1346312},
  address = {New York, NY, USA},
  issn = {0163-5964},
  number = {1}}

@incollection{Cox66a,
  author = {D.R. Cox and P.A.W. Lewis},
  title = {The Statistical Analysis of Series of Events},
  booktitle = {Monographs on Applied Probability and Statistics},
  publisher = {Chapman and Hall},
  year = {1966}}

@article{Cox83a,
  author = {Brad J. Cox},
  title = {The Object Oriented Pre-Compiler},
  journal = {SIGPLAN Notices},
  volume = {18},
  pages = {15--22},
  year = {1983},
  month = jan,
  number = {1}}

@article{Cox84a,
  author = {Brad J. Cox},
  title = {Message/Object Programming: An Evolutionary Change in Programming Technology},
  journal = {IEEE Software},
  volume = {1},
  year = {1984},
  month = jan,
  number = {1}}

@inproceedings{Cox85a,
  author = {P. T. Cox and Tomasz Pietrzykowski},
  title = {Advanced programming aids in {PROGRAPH}},
  booktitle = {SIGSMALL '85: Proceedings of the 1985 ACM SIGSMALL symposium on Small systems},
  pages = {27--33},
  publisher = {ACM},
  year = {1985},
  doi = {10.1145/317164.317168},
  address = {New York, NY, USA},
  isbn = {0-89791-154-7},
  location = {Danvers, Massachusetts, United States}}

@book{Cox86a,
  author = {Brad J. Cox},
  title = {Object Oriented Programming --- An Evolutionary Approach},
  publisher = {Addison Wesley},
  year = {1986},
  address = {Reading, Mass.}}

@inproceedings{Cox87a,
  author = {Brad J. Cox and Kurt J. Schmucker},
  title = {Producer: {A} Tool for Translating {Smalltalk}-80 to Objective-{C}},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {423--429},
  year = {1987},
  month = dec}

@article{Cox89a,
  author = {P.T. Cox and F.R. Giles and Tomasz Pietrzykowski},
  title = {Prograph: a step towards liberating programming from textual conditioning},
  journal = {Visual Languages, 1989., IEEE Workshop on},
  pages = {150-156},
  year = {1989},
  doi = {10.1109/WVL.1989.77057},
  month = oct}

@article{Cox90a,
  author = {Brad J. Cox},
  title = {Planning the Software Industrial Revolution},
  journal = {IEEE Software},
  volume = {7},
  pages = {25--33},
  year = {1990},
  month = nov,
  number = {6}}

@incollection{Cox95a,
  author = {P.T. Cox and F.R. Giles and Tomasz Pietrzykowski},
  title = {Prograph},
  booktitle = {Visual Object-Oriented Programming},
  pages = {45--66},
  publisher = {Manning Publications Co.},
  year = {1995},
  editor = {Margaret M. Burnett and Adele Goldberg and Ted G. Lewis}}

@book{Cox96a,
  author = {Brad J. Cox},
  title = {Superdistribution},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-50208-9}}

@article{Cox97a,
  author = {Brad J. Cox},
  title = {Objects as Property},
  journal = {IEEE Software Magazine},
  year = {1997},
  url = {http://virtualschool.edu/cox/IEEE97.html},
  month = jan}

@book{Coyn95a,
  author = {Richard Coyne},
  title = {Designing Information Technology in the Postmodern Age},
  publisher = {MIT Press},
  year = {1995}}

@inproceedings{Crac06a,
  author = {Florin Craciun and Hong Yaw Goh and Corneliu Popeea and Wei-Ngan Chin},
  title = {Core-java: an expression-oriented java},
  booktitle = {OOPSLA '06: Companion to the 21st ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications},
  pages = {639--640},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1176617.1176650},
  address = {New York, NY, USA},
  isbn = {1-59593-491-X},
  location = {Portland, Oregon, USA}}

@book{Crai00a,
  author = {Iain Craig},
  title = {The Integration of Object-Oriented Programming Languages},
  publisher = {Springer-Verlag},
  year = {2000},
  address = {London, UK},
  isbn = {1852331593}}

@book{Crai02a,
  author = {Craig and Lain},
  title = {The Interpretation of object-oriented programming languages},
  publisher = {O'Reilly},
  year = {2006}}

@book{Crai05a,
  author = {Iain D. Craig},
  title = {Virtual machines},
  pages = {269},
  publisher = {Springer Verlag},
  year = {2005},
  address = {Berlin, Germany},
  isbn = {1-85233-969-1}}

@article{Cram97a,
  author = {Cramer, Timothy and Friedman, Richard and Miller, Terrence and Seberger, David and Wilson, Robert and Wolczko, Mario},
  title = {Compiling Java just in time},
  journal = {IEEE Micro},
  volume = {17},
  pages = {36--43},
  publisher = {IEEE},
  year = {1997},
  number = {3}}

@misc{Crar07a,
  author = {Karl Crary and Robert Harper and Frank Pfenning and Benjamin C. Pierce and Stephanie Weirich and Stephan Zdancewic},
  title = {Manifest Security},
  year = {2007}}

@article{Crem02a,
  author = {Katja Cremer and Andr{\'e} Marburger and Bernhard Westfechtel},
  title = {Graph-based tools for re-engineering},
  journal = {Journal of Software Maintenance},
  volume = {14},
  pages = {257--292},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2002},
  doi = {10.1002/smr.254},
  issn = {1040-550X},
  number = {4}}

@inproceedings{Crew97a,
  author = {Roger F. Crew},
  title = {ASTLOG: A Language for Examining Abstract Syntax Trees},
  booktitle = {Proceedings of the USENIX Conference on Domain-Specific Languages},
  year = {1997}}

@misc{Cric20a,
  author = {Will Crichton},
  title = {The Usability of Ownership},
  year = {2020},
  archiveprefix = {arXiv},
  eprint = {2011.06171},
  primaryclass = {cs.PL}}

@techreport{Cris99a,
  author = {Cristina Gheorghiu Cris},
  title = {Visualisierung von pi-Programmen},
  year = {1999},
  url = {http://scg.unibe.ch/archive/projects/Cris99a.pdf},
  abstract = {Die Visualisierung von Programmen erlaubt, durch
animiertes Anzeigen, die Darstellung bedeutender
Zust\"nde, die w\"ahrend der Programmausf\"uhrung
auftreten k\"onnen und sonst unsichtbar f\"ur den
Benutzer bleiben. Ziel dieser Arbeit ist die
Implementation eines interaktiven
Visualisierungswerkzeuges f\"ur das JPict Framework.
In dieser Dokumentation werden Konzepte des JPict
und HotDraw Frameworks und der
Visualisierungsmodelle kurz dargestellt. Danach wird
auf das Design und den verfolgten Ansatz in der
Implementierung dieses Visualisierungswerkzeuges
eingegangen.},
  institution = {University of Bern},
  month = jan,
  type = {Informatikprojekt}}

@book{Crock08a,
  author = {Crockford Douglas},
  title = {JavaScript: The Good Parts},
  publisher = {O'Reilly Media, Inc.},
  year = {2008},
  isbn = {0-596-51774-2}}


@article{Crof85a,
  author = {W. Bruce Croft},
  title = {Planning the Software Industrial Revolution Task Management for an Intelligent Interface},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {8--13},
  year = {1985},
  month = dec,
  number = {4}}

@inproceedings{Crof88a,
  author = {W. Bruce Croft and L.S. Lefkowitz},
  title = {Using a Planner to Support Office Work},
  booktitle = {Proceedings of the Conference on Office Information Systems},
  pages = {55--62},
  year = {1988},
  address = {Palo Alto, CA}}

@article{Cros95a,
  author = {Cross II, James H. and Alex Quilici and Linda Wills and Philip Newcomb and Elliot Chikofsky},
  title = {Second Working Conference on Reverse Engineering Summary Report},
  journal = {SIGSoft Software Engineering Notes},
  volume = {20},
  year = {1995},
  month = dec,
  number = {5}}

@inproceedings{Cros98a,
  author = {Cross II, James H. and T. Dean Hendrix and Larry A. Barowsky and Karl S. Mathias},
  title = {Scalable Visualizations to Support Reverse Engineering: A Framework for Evaluation},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {201--210},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@article{Cross98b,
  author = {Cross II, James H. and Saeed Maghsoodloo and Dean Hendrix},
  title = {Control Structure Diagrams: Overview and Evaluation},
  journal = {Journal of Empirical Software Engineering},
  volume = {3},
  pages = {131--158},
  year = {1998},
  number = {2}}

@book{Crow95a,
  author = {Jon Crowcroft},
  title = {Open Distributed Systems},
  publisher = {UCL Press},
  year = {1995},
  isbn = {1-85728-229-9}}

@inproceedings{Cruz01a,
  author = {Juan-Carlos Cruz},
  title = {CORODS: A Coordination Programming System for Open Distributed Systems},
  booktitle = {Proceedings of LMO 2001},
  volume = {7},
  pages = {11--26},
  year = {2001},
  url = {http://scg.unibe.ch/archive/papers/Cruz01LMO.pdf},
  abstract = {Open Distributed Systems are the dominating
intellectual issue of the research in distributed
systems. Figuring out how to build and maintain
those systems becomes a central issue in distributed
systems research today. Although CORBA seems to
provide all the necessary support to the
construction of those systems, CORBA provides a very
limited support to the evolution of their
requirements. The main problem is that the
description of the elements from which the systems
are built, and the way in which they are composed
are mixed into the application code, making systems
difficult to understand, modify and customize. A
possible solution to this problem goes through the
introduction of the so-called coordination models
and languages into the CORBA model. We propose in
this paper a coordination programming system called
CORODS which introduces the CoLaSD coordination
model and language into the CORBA model. CoLaSD is a
coordination model based on the notion of
Coordination Groups, entities that specify, control
and enforces the coordination of groups of
collaborating active objects.},
  address = {Le Croisic, France}}

@inproceedings{Cruz01b,
  author = {Juan-Carlos Cruz},
  title = {Supporting Development of Object Information Systems with CoLaSD},
  booktitle = {Proceedings of OOIS 2001},
  year = {2001},
  url = {http://scg.unibe.ch/archive/papers/Cruz01OOIS.pdf},
  abstract = {Cooperative Object Information Systems are systems
build from objects that work together as a single
system. Objects that cooperate in the realization of
common tasks. Cooperative Object Information Systems
are systems constrained to continuously adapt to new
requirements: new objects are introduced into the
systems, cooperation protocols change, etc. Building
Cooperative Object Information Systems is difficult
because most of the concurrent and distributed
object oriented programming languages and frameworks
used to build them, provide only limited support for
their specification and abstraction, making them
difficult to understand, modify and customize. We
show in this paper how combining distributed active
objects, and object oriented coordination models and
languages, particularly the CoLaSD coordination
model and language, we can simplify the development
of Cooperative Object Information Systems, and
facilitate at the same time the evolution of their
requirements.},
  address = {Calgary, Canada}}

@inproceedings{Cruz02a,
  author = {Juan-Carlos Cruz},
  title = {{OpenCoLaS} --- a Coordination Framework for {CoLaS} Dialects},
  booktitle = {Proceedings of COORDINATION 2002},
  year = {2002},
  url = {http://scg.unibe.ch/archive/papers/Cruz02Coordination.pdf},
  abstract = {An important family of existing coordination models
and languages is based on the idea of trapping the
messages exchanged by the coordinated entities and
by the specification of rules governing the
coordination. No model, including our CoLaS
coordination model, justifies clearly the reason of
their coordination rules. Why these rules and not
others? Are they all necessary? These are questions
that remain still open. In order to try to provide
an answer, in particular for the CoLaS model, we
propose in this paper OpenCoLaS, a framework for
building CoLaS coordination dialects. The OpenCoLaS
framework allows to experiment with the definition
of coordination rules.},
  address = {York, United Kingdom}}

@phdthesis{Cruz06a,
  author = {Juan Carlos Cruz},
  title = {A Group Based Approach for Coordinating Active Objects},
  pages = {269},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/cruz-phd.pdf},
  abstract = {We propose in this thesis the use of active objects
and coordination models and languages for the
specification and construction of concurrent
object-oriented systems. Active objects are objects
integrating concurrency and coordination models and
languages are models and languages that specify the
way the active objects composing the systems are
glued together. Our approach is based on the
definition of a coordination model and language
called CoLaS for the specification of the
coordination aspect in concurrent object-oriented
systems based on active objects. The CoLaS
coordination model and language introduces a high
level coordination abstraction called Coordination
Group that allows programmers to design, to specify,
to implement and to validate the coordination of
groups of collaborating active objects in concurrent
object-oriented systems.},
  address = {Bern},
  month = jun}

@techreport{Cruz97a,
  author = {Juan Carlos Cruz and Sander Tichelaar and Oscar Nierstrasz},
  title = {A Coordination Component Framework for Open Systems},
  year = {1997},
  abstract = {Coordination technology addresses the construction
of open, flexible systems from software agents in
distributed systems. Most of the work on
coordination technology so far has focussed on the
development of special coordination languages and
environments that provide the basic mechanisms for
realizing the coordination layer of a distributed
application. Typically each new language proposes
its own set of coordination abstractions that
realizes a particular paradigm for realizing
coordination. Coordination problems, however, are
not always well-suited to a particular paradigm.
Instead of proposing a new language, we are
attempting to develop an open set of software
components that realize various useful coordination
abstractions. We are validating our approach by
developing an experimental framework of coordination
components in {Java} and applying them to a
canonical set of sample applications. We present our
initial analysis of the coordination domain, and
give a few examples of simple applications using the
developed coordination components.},
  institution = {IAM, University of Bern},
  type = {Working Paper}}

@techreport{Cruz97b,
  author = {Juan Carlos Cruz},
  title = {Coordination Support for Real-Time Multiagent Systems Development},
  year = {1997},
  abstract = {Most of the work on coordination technology so far
focused on the development of special coordination
languages that provide the basic mechanisms for
realizing the coordination layer of complex software
applications. Each new language provide its own set
of coordination abstractions that realizes a
particular paradigm for realizing coordination.
Coordination problems, however are not always
well-suited to a particular paradigm. Instead of
proposing a language, we propose to realize a set of
coordination components that realize useful
coordination abstractions. We argue in this paper
that this approach can be applied to the development
of software systems which strong real-time
requirements.},
  institution = {IAM, University of Bern},
  type = {Working Paper}}

@inproceedings{Cruz98b,
  author = {Juan Carlos Cruz and Sander Tichelaar},
  title = {Managing Evolution of Coordination Aspects in Open Systems},
  booktitle = {Ninth International Workshop on Database and Expert Systems Applications},
  pages = {578--582},
  publisher = {IEEE Computer Press},
  year = {1998},
  misc = {August 26-28},
  url = {http://scg.unibe.ch/archive/papers/Cruz98bManagingEvolution.pdf},
  doi = {10.1109/DEXA.1998.707460},
  abstract = {Most of the work on coordination technology so far
has focused on the development of special
coordination languages and environments that provide
the basic mechanisms for realizing the coordination
layer of an open system. It is clear that the idea
of managing separately the coordination aspect from
the computation in a language has a lot of
advantages in the development of those systems.
Nevertheless, most of the coordination languages do
not take care that additionally to managing
coordination requirements, they must manage other
kinds of "openness" related requirements in Open
Systems. The most important requirement being to
support the evolution of the coordination
requirements themselves. This problem manifests
during the software development process by the
development over and over again of solutions to
similar coordination problems. To tackle this
problem, and instead of proposing a new language, we
are attempting to develop an open set of adaptable
and reusable software components that realize
various useful coordination abstractions. With these
components we provide explicit separation of
coordination from computation, and facilitate reuse
and evolution of coordination aspects in Open
Systems.},
  address = {Vienna, Austria},
  editor = {Roland R. Wagner},
  month = aug}

@article{Csal04a,
  author = {Csallner, Christoph and Smaragdakis, Yannis},
  title = {JCrasher: an automatic robust tester for Java},
  journal = {Software: Practice and Experience},
  volume = 43,
  year = {2004},
  issue = 11}

@article{Csal08a,
  author = {Csallner, Christoph and Smaragdakis, Yannis and Xie, Tao},
  title = {DSD-Crasher: A Hybrid Analysis Tool for Bug Finding},
  journal = {Transactions on Software Engineering and Methodology},
  volume = {17},
  pages = {1--37},
  publisher = {ACM},
  year = {2008},
  month = {may},
  number = {2}}

@article{Cuad09a,
  author = {Jes\'us S\'anchez Cuadrado and Jes\'us Garc\'ia Molina},
  title = {A Model-Based Approach to Families of Embedded Domain Specific Languages},
  journal = {{IEEE} Transactions on Software Engineering},
  volume = {99},
  year = {2009},
  doi = {10.1109/TSE.2009.14},
  number = {1}}

@inproceedings{Cubr03a,
  author = {Davor Cubranic and Gail Murphy},
  title = {Hipikat: Recommending Pertinent Software Development Artifacts},
  booktitle = {Proceedings 25th International Conference on Software Engineering (ICSE 2003)},
  pages = {408--418},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1109/ICSE.2003.1201219},
  address = {New York NY},
  isbn = {0-7695-1877-X},
  location = {Portland, Oregon}}

@phdthesis{Cubr04a,
  author = {Davor \v{C}ubrani\'{c}},
  title = {Project History as a Group Memory: Learning From the Past},
  pages = {149},
  year = {2004},
  school = {University of British Columbia},
  address = {Vancouver BC},
  month = dec}

@inproceedings{Cubr04b,
  author = {Davor \v{C}ubrani\'c and Gail C. Murphy},
  title = {Automatic bug triage using text categorization.},
  booktitle = {Proceedings of the Sixteenth International Conference on Software Engineering \& Knowledge Engineering},
  pages = {92--97},
  year = {2004},
  date = {2005-01-07},
  description = {dblp},
  isbn = {1-891706-14-4}}

@unpublished{Cuet95a,
  author = {A. Cueto and Mahesh Dodani},
  title = {Browsing the Dynamic Behavior of Interactive Objects with DynaBrowse},
  year = {1995},
  note = {University of Iowa},
  type = {Draft}}

@unpublished{Cuet95b,
  author = {A. Cueto and Mahesh Dodani},
  title = {Spy: An Object-Oriented Interactive Debugger},
  year = {1995},
  note = {University of Iowa},
  type = {Draft}}

@misc{Cunn06a,
  author = {Ward Cunningham},
  title = {{P}rivate communication},
  year = {2006}}

@inproceedings{Cunn86a,
  author = {Ward Cunningham and Kent Beck},
  title = {A Diagram for Object-Oriented Programs},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {361--367},
  year = {1986},
  month = nov}

@article{Cunn92a,
  author = {Cunningham, Ward},
  title = {The WyCash portfolio management system},
  journal = {ACM SIGPLAN OOPS Messenger},
  volume = {4},
  pages = {29--30},
  publisher = {ACM New York, NY, USA},
  year = {1992},
  number = {2}}

@techreport{Cunn93a,
  author = {P\'adraig Cunningham and Alexander N. Mikoyan},
  title = {Using {CBR} Techniques to Detect Plagiarism in Computing Assignments},
  year = {1993},
  url = {http:://citeseer.ist.psu.edu/cunningham93using.html},
  annotate = {Also {inProceedings} of the First European Workshop on Case-Based Reasoning, Kaiserslauten, Germany)},
  institution = {Trinity College, Dublin},
  number = {TCD-CS-93-22}}

@article{Curi08a,
  author = {Curino, Carlo A and Moon, Hyun J and Zaniolo, Carlo},
  title = {Graceful database schema evolution: the prism workbench},
  journal = {Proceedings of the VLDB Endowment},
  volume = {1},
  pages = {761--772},
  year = {2008},
  number = {1}}

@inproceedings{Curi09a,
  author = {Curino, Carlo and Moon, Hyun J and Zaniolo, Carlo},
  title = {Automating database schema evolution in information system upgrades},
  booktitle = {Proceedings of the 2nd International Workshop on Hot Topics in Software Upgrades},
  pages = {5},
  publisher = {ACM},
  year = {2009}}

@inproceedings{Curr82a,
  author = {Gael Curry and Larry Baer and Daniel Lipkie and Bruce Lee},
  title = {{TRAITS}: an Approach to Multiple Inheritance Subclassing},
  booktitle = {Proceedings ACM SIGOA, Newsletter},
  volume = {3},
  year = {1982},
  address = {Philadelphia},
  month = jun}

@article{Curr84a,
  author = {G. Curry and R. Ayers},
  title = {Experiences with {TRAITS} in the {XEROX} {STAR} Workstation},
  journal = {IEEE TOSE},
  volume = {10},
  year = {1984},
  month = sep,
  number = {5}}

@inproceedings{Curr86a,
  author = {Gael Curry},
  title = {An approach to type safety in a traits system},
  booktitle = {Proceedings of 1986 joint computer conference},
  pages = {25--30},
  year = {1986}}

@inproceedings{Curt13a,
  author = {Curtsinger, Charlie and Berger, Emery D.},
  title = {STABILIZER: Statistically Sound Performance Evaluation},
  booktitle = {Proceedings of the Eighteenth International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages = {219-228},
  publisher = {Association for Computing Machinery},
  year = {2013},
  url = {https://doi.org/10.1145/2451116.2451141},
  doi = {10.1145/2451116.2451141},
  abstract = {Researchers and software developers require effective performance evaluation. Researchers must evaluate optimizations or measure overhead. Software developers use automatic performance regression tests to discover when changes improve or degrade performance. The standard methodology is to compare execution times before and after applying changes.Unfortunately, modern architectural features make this approach unsound. Statistically sound evaluation requires multiple samples to test whether one can or cannot (with high confidence) reject the null hypothesis that results are the same before and after. However, caches and branch predictors make performance dependent on machine-specific parameters and the exact layout of code, stack frames, and heap objects. A single binary constitutes just one sample from the space of program layouts, regardless of the number of runs. Since compiler optimizations and code changes also alter layout, it is currently impossible to distinguish the impact of an optimization from that of its layout effects.This paper presents Stabilizer, a system that enables the use of the powerful statistical techniques required for sound performance evaluation on modern architectures. Stabilizer forces executions to sample the space of memory configurations by repeatedly re-randomizing layouts of code, stack, and heap objects at runtime. Stabilizer thus makes it possible to control for layout effects. Re-randomization also ensures that layout effects follow a Gaussian distribution, enabling the use of statistical tests like ANOVA. We demonstrate Stabilizer's efficiency (&lt;7% median overhead) and its effectiveness by evaluating the impact of LLVM's optimizations on the SPEC CPU2006 benchmark suite. We find that, while -O2 has a significant impact relative to -O1, the performance impact of -O3 over -O2 optimizations is indistinguishable from random noise.},
  address = {New York, NY, USA},
  isbn = {9781450318709},
  keywords = {randomization, measurement bias, performance evaluation},
  location = {Houston, Texas, USA},
  numpages = {10},
  series = {ASPLOS '13}}

@inproceedings{Curt90a,
  author = {Pavel Curtis and James Rauen},
  title = {A module system for scheme},
  booktitle = {Proceedings of the 1990 ACM conference on LISP and functional programming},
  pages = {13--19},
  publisher = {ACM Press},
  year = {1990},
  isbn = {0-89791-368-X},
  location = {Nice, France}}

@article{Cusa91a,
  author = {Elspeth Cusack},
  title = {Refinement, Conformance and Inheritance},
  journal = {Formal Aspects of Computing},
  volume = {3},
  pages = {129--141},
  year = {1991}}

@inproceedings{Cusa91b,
  author = {Elspeth Cusack},
  title = {Inheritance in Object-Oriented gz},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {167--179},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@article{Cuts07a,
  author = {Van Cutsem, Tom and Mostinckx, Stijn and Boix, Elisa Gonzalez and Dedecker, Jessie and De Meuter, Wolfgang},
  title = {AmbientTalk: Object-oriented Event-driven Programming in Mobile Ad hoc Networks},
  journal = {XXVI International Conference of the Chilean Computer Science Society (SCCC 2007)},
  volume = {0},
  pages = {3-12},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/SCCC.2007.12},
  address = {Los Alamitos, CA, USA},
  issn = {1522-4902},
  month = nov}

@inproceedings{Cuts11a,
  author = {van Cutsem, Tom and Miller, Mark},
  title = {traits.js -- Robust Object Composition and High-integrity Objects for ECMAScript 5},
  booktitle = {Proceedings of PLASTIC'11},
  year = {2011}}

@article{Cvs00a,
  author = {Morse, Tom},
  title = {CVS},
  journal = {Linux J.},
  volume = {1996},
  publisher = {Specialized Systems Consultants, Inc.},
  year = {1996},
  address = {Seattle, WA, USA},
  date-added = {2009-10-20 17:20:47 +0200},
  date-modified = {2009-10-20 17:26:02 +0200},
  issn = {1075-3583},
  number = {21}}

@book{Cwal05a,
  author = {Cwalina, Krzysztof and Abrams, Brad},
  title = {Framework Design Guidelines: Conventions, Idioms, and Patterns for Reusable {.Net} Libraries},
  publisher = {Addison-Wesley Professional},
  year = {2005},
  edition = {first},
  isbn = {9780321578815}}

@book{Cyph93a,
  title = {Watch what {I} do: programming by demonstration},
  publisher = {MIT Press},
  year = {1993},
  url = {http://acypher.com/wwid/},
  address = {Cambridge, MA, USA},
  editor = {Allen Cypher and Daniel C. Halbert and David Kurlander and Henry Lieberman and David Maulsby and Brad A. Myers and Alan Turransky},
  isbn = {0-262-03213-9}}

@article{Cytr91a,
  author = {Ron Cytron and Jeanne Ferrante and Barry K. Rosen and Mark N. Wegman and F. Kenneth Zadeck},
  title = {Efficiently computing static single assignment form and the control dependence graph},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume = {13},
  pages = {451--490},
  publisher = {ACM},
  year = {1991},
  doi = {10.1145/115372.115320},
  address = {New York, NY, USA},
  issn = {0164-0925},
  number = {4}}

@inproceedings{Czaj00a,
  author = {Czajkowski, Grzegorz},
  title = {Application isolation in the Java Virtual Machine},
  booktitle = {OOPSLA '00: Proceedings of the 15th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages = {354--366},
  publisher = {ACM},
  year = {2000},
  doi = {10.1145/353171.353195},
  address = {New York, NY, USA},
  isbn = {1-58113-200-X},
  location = {Minneapolis, Minnesota, United States}}

@article{Czaj01a,
  author = {Czajkowski, G. and Dayn{\'e}s, L.},
  title = {Multitasking without comprimise: a virtual machine evolution},
  journal = {ACM SIGPLAN Notices},
  volume = {36},
  pages = {125--138},
  publisher = {ACM},
  year = {2001},
  number = {11}}

@inproceedings{Czaj03,
  author = {Czajkowski, Grzegorz and Dayn\`{e}s, Laurent and Titzer, Ben},
  title = {A multi-user virtual machine},
  booktitle = {Proceedings of the annual conference on USENIX Annual Technical Conference},
  pages = {7--7},
  publisher = {USENIX Association},
  year = {2003},
  url = {http://portal.acm.org/citation.cfm?id=1247340.1247347},
  acmid = {1247347},
  address = {Berkeley, CA, USA},
  location = {San Antonio, Texas},
  numpages = {1}}

@inproceedings{Czaj03a,
  author = {Grzegorz Czajkowski and Laurent Dayn{\`e}s and Ben Titzer},
  title = {A Multi-User Virtual Machine},
  booktitle = {USENIX Annual Technical Conference, General Track},
  pages = {85-98},
  year = {2003},
  ee = {http://www.usenix.org/events/usenix03/tech/czajkowski.html}}

@article{Czaj05,
  author = {Czajkowski, Grzegorz and Hahn, Stephen and Skinner, Glenn and Soper, Pete and Bryce, Ciar\'{a}n},
  title = {A resource management interface for the Java platform},
  journal = {Softw. Pract. Exper.},
  volume = {35},
  pages = {123--157},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2005},
  url = {http://portal.acm.org/citation.cfm?id=1055953.1055955},
  doi = {10.1002/spe.v35:2},
  acmid = {1055955},
  address = {New York, NY, USA},
  issn = {0038-0644},
  issue = {2},
  keywords = {Java\texttrademark platform, resource management, safe languages},
  month = {feb},
  numpages = {35}}

@book{Czar00a,
  author = {Krzysztof Czarnecki and Ulrich W. Eisenecker},
  title = {Generative programming: methods, tools, and applications},
  publisher = {ACM Press/Addison-Wesley Publishing Co.},
  year = {2000},
  address = {New York, NY, USA},
  isbn = {0-201-30977-7}}

@inproceedings{Czar03a,
  author = {Krzysztof Czarnecki and Simon Helsen},
  title = {Classification of model transformation approaches},
  booktitle = {OOPSLA '03 Generative Techniques in the context of Model Driven Architecture},
  year = {2003}}

@article{Czar06a,
  author = {Czarnecki, Krzysztof and Helsen, Simon},
  title = {Feature-based survey of model transformation approaches},
  journal = {IBM systems journal},
  volume = {45},
  pages = {621--645},
  publisher = {IBM},
  year = {2006},
  number = {3}}

@inproceedings{Czar99a,
  author = {Krzysztof Czarnecki and Ulrich Eisenecker},
  title = {Synthesizing Objects},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {18--42},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {This paper argues that the current OO technology
does not support reuse and configurability in an
effective way. This problem can be addressed by
augmenting OO analysis and design with feature
modeling and by applying generative implementation
techniques. Feature modeling allows capturing the
variability of domain concepts. Concrete concept
instances can then be synthesized from abstract
specifications. Using a simple example of a
configurable list component, we demonstrate the
application of feature modeling and how to implement
a feature model as a generator. We introduce the
concepts of configuration repositories and
configuration generators and show how to implement
them using object-oriented, generic, and generative
language mechanisms. The configuration generator
utilizes C++ template metaprogramming, which enables
its execution at compile-time.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Czer00a,
  author = {J\"org Czeranski and Thomas Eisenbarth and Holger M. Kienle and Rainer Koschke and Erhard Pl\"odereder and Daniel Simon and Yan Zhang and Jean-Fran{\c{c}}ois Girard and Martin W\"urthner},
  title = {Data Exchange in {Bauhaus}},
  booktitle = {Proceedings {WCRE} '00},
  publisher = {IEEE Computer Society Press},
  year = {2000},
  month = nov}

@misc{DAML16a,
  author = {DAML.com},
  title = {The Digital Asset Platform: Non - Technical White paper},
  year = {2018},
  url = {https://hub.digitalasset.com/hubfs/Documents/Digital%20Asset%20Platform%20-%20Non-technical%20White%20Paper.pdf}}

@misc{DAML18b,
  author = {Martin Huschenbett},
  title = {The only valid smart contract is a voluntary one -- easier said than done},
  year = {2018},
  url = {https://medium.com/daml-driven/the-only-valid-smart-contract-is-a-voluntary-one-easier-said-than-done-726df37c04c}}

@inproceedings{DAmb05a,
  author = {Marco D'Ambros and Michele Lanza and Harald Gall},
  title = {Fractal Figures: Visualizing Development Effort for CVS Entities},
  booktitle = {Proceedings of Vissoft 2005 (3th IEEE International Workshop on Visualizing Software for Understanding)},
  pages = {46--51},
  year = {2005}}

@inproceedings{DAmb06a,
  author = {Marco D'Ambros and Michele Lanza},
  title = {Software Bugs and Evolution: A Visual Approach to Uncover Their Relationship},
  booktitle = {European {C}onference on {S}oftware {M}aintenance and {R}eengineering ({CSMR})},
  pages = {227 - 236},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  mon = mar}

@inproceedings{DAmb06b,
  author = {Marco D'Ambros and Michele Lanza and Mircea Lungu},
  title = {The Evolution Radar: Integrating Fine-grained and Coarse-grained Logical Coupling Information},
  booktitle = {Proceedings of the 3rd International Workshop on Mining Software Repositories},
  pages = {26 - 32},
  year = {2006},
  mon = may,
  series = {MSR'06}}

@inproceedings{DAmb06c,
  author = {Marco D'Ambros and Michele Lanza},
  title = {Applying the Evolution Radar to PostgreSQL},
  booktitle = {Proceedings of MSR 2006 (3rd International Workshop on Mining Software Repositories)},
  pages = {177 - 178},
  year = {2006},
  mon = may}

@inproceedings{DAmb06d,
  author = {Marco D'Ambros and Michele Lanza},
  title = {Reverse Engineering with Logical Coupling},
  booktitle = {Proceedings of {WCRE} 2006 (13th Working Conference on Reverse Engineering)},
  pages = {189 - 198},
  year = {2006},
  mon = oct}

@inproceedings{DAmb07a,
  author = {Marco D'Ambros and Michele Lanza},
  title = {{BugCrawler}: Visualizing Evolving Software Systems},
  booktitle = {Proceedings of the 11th IEEE European Conference on Software Maintenance and Reengineering},
  pages = {to be published},
  year = {2007},
  mon = mar,
  series = {CSMR'07}}

@inproceedings{DAmb07b,
  author = {Marco D'Ambros and Michele Lanza and Martin Pinzger},
  title = {``A Bug's Life'' - Visualizing a Bug Database},
  booktitle = {Proceedings of VISSOFT 2007 (4th IEEE International Workshop on Visualizing Software For Understanding and Analysis)},
  pages = {to be published},
  year = {2007},
  mon = jun}

@techreport{DCE97a,
  author = {{Open} {Group}},
  title = {{DCE} 1.1: Remote Procedure Call},
  year = {1997},
  url = {http://www.opengroup.org/onlinepubs/009629399/},
  institution = {{Open} {Group}},
  key = {DCE},
  month = aug,
  number = {C706}}

@inproceedings{DHon00a,
  author = {D'Hondt, Theo and De Volder, Kris and Mens, Kim and Wuyts, Roel},
  title = {Co-evolution of Object-Oriented Software Design and Implementation},
  booktitle = {Proceedings of the international symposium on Software Architectures and Component Technology 2000.},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/DHon00a.pdf}}

@inproceedings{DHon02a,
  author = {Th\'eo D'Hondt and Wolfgang},
  title = {Of first-class methods and dynamic scope},
  booktitle = {Actes de LMO'2002: Langages et Mod\`eles \`a Objets},
  year = {2002}}

@incollection{DHon08a,
  author = {D'Hondt, Theo},
  title = {Are Bytecodes an Atavism?},
  booktitle = {Self-Sustaining Systems: First Workshop, S3 2008 Potsdam, Germany, May 15-16, 2008 Revised Selected Papers},
  pages = {140--155},
  publisher = {Springer-Verlag},
  year = {2008},
  address = {Berlin, Heidelberg},
  isbn = {978-3-540-89274-8}}

@inproceedings{DHon99a,
  author = {D'Hondt, Maja and De Meuter, Wolfgang and Wuyts, Roel},
  title = {Using Reflective Programming to Describe Domain Knowledge as an Aspect},
  booktitle = {Proceedings of GCSE '99},
  year = {1999},
  url = {http://scg.unibe.ch/archive/papers/DHon99a.pdf}}

@manual{DOM00,
  title = {Document Object Model {DOM} Level 2 Events Specification},
  year = {1998},
  url = {http://www.w3.org/TR/DOM-Level-2-Events},
  organization = {World Wide Web Consortium}}

@manual{DOM98,
  author = {L. Wood and J. Sorensen and S. Byrne and R.S. Sutor and V. Apparao and S. Isaacs and G. Nicol and M. Champion},
  title = {Document Object Model Specification {DOM} 1.0},
  year = {1998},
  url = {http://www.w3.org/TR/REC-DOM-Level-1},
  organization = {World Wide Web Consortium}}

@misc{DPWS,
  title = {Devices Profile for Web Services},
  url = {http://schemas.xmlsoap.org/ws/2006/02/devprof/},
  key = {DPWS},
  note = {http://schemas.xmlsoap.org/ws/2006/02/devprof/}}

@misc{DSM,
  title = {The Design Structure Matrix (DSM)},
  url = {http://www.dsmweb.org},
  key = {DSM}}

@misc{DabbleDB,
  title = {Dabble DB},
  url = {http://dabbledb.com/},
  key = {DabbleDB},
  note = {http://dabbledb.com/}}

@inproceedings{Daga93a,
  author = {Ido Dagan and Kenneth W. Church and William A. Gale},
  title = {Robust Bilingual Word Alignment for Machine Aided Translation},
  booktitle = {Proceedings of the Workshop on Very Large Corpora: Academic and Industrial Perspectives},
  pages = {1--8},
  year = {1993},
  url = {http://citeseer.ist.psu.edu/ido93robust.html},
  address = {Columbus, OH}}

@inproceedings{Dage08a,
  author = {Dagenais, Barth\'{e}l\'{e}my and Robillard, Martin P.},
  title = {Recommending adaptive changes for framework evolution},
  booktitle = {{I}nternational {C}onference on {S}oftware {E}ngineering ({ICSE}'08)},
  pages = {481--490},
  publisher = {{ACM}},
  year = {2008},
  doi = {10.1145/1368088.1368154},
  address = {New York, NY, USA},
  isbn = {978-1-60558-079-1},
  location = {Leipzig, Germany}}

@article{Dage11a,
  author = {Dagenais, Barth{\'e}l{\'e}my and Robillard, Martin P},
  title = {Recommending adaptive changes for framework evolution},
  journal = {ACM Transactions on Software Engineering and Methodology ({TOSEM})},
  volume = {20},
  pages = {1--35},
  publisher = {ACM New York, NY, USA},
  year = {2011},
  number = {4}}

@inproceedings{Dage98a,
  author = {Michel Dagenais and Ettore Merlo and Bruno Lagu{\"e} and Daniel Proulx},
  title = {Clones Occurrence in Large Object Oriented Software Packages},
  booktitle = {Proceedings of {CASCON} 1998},
  pages = {192--200},
  year = {1998},
  location = {Toronto, Ontario, Canada}}

@inproceedings{Dahl07a,
  author = {Dominik Dahlem and Lotte Nickel and Jan Sacha and Bartosz Biskupski and Jim Dowling and Ren\'e Meier},
  title = {Towards Improving the Availability of Service Compositions},
  booktitle = {In Proceedings of the IEEE International Conference on Digital Ecosystems and Technologies (IEEE DEST 2007)},
  publisher = {IEEE Computer Society},
  year = {2007},
  address = {Cairns, Australia}}

@techreport{Dahl70a,
  author = {O.-J. Dahl and B. Myrhaug and K. Nygaard},
  title = {{(Simula67) Common Base Language}},
  year = {1970},
  address = {Oslo, N},
  institution = {Norsk Regnesentral (Norwegian Computing Center)},
  month = oct,
  number = {N. S-22}}

@book{Dahl72a,
  author = {Ole-Johan Dahl and Edsgar W. Dijkstra and C.A.R. Hoare},
  title = {Structured Programming},
  publisher = {Academic Press},
  year = {1972}}

@inproceedings{Dahm99,
  author = {M. Dahm},
  title = {Byte Code Engineering},
  booktitle = {Proceedings of Java-Informations-Tage (JIT'99)},
  pages = {267--277},
  year = {1999},
  address = {D{\"u}sseldorf, Deutschland},
  isbn = {3-540-66464-5},
  month = {sep}}

@inproceedings{Daka15a,
  author = {Daka, Ermira and Campos, Jos\'{e} and Fraser, Gordon and Dorn, Jonathan and Weimer, Westley},
  title = {Modeling readability to improve unit tests},
  year = {2015},
  isbn = {9781450336758},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi-org.ressources-electroniques.univ-lille.fr/10.1145/2786805.2786838},
  doi = {10.1145/2786805.2786838},
  abstract = {Writing good unit tests can be tedious and error prone, but even once they are written, the job is not done: Developers need to reason about unit tests throughout software development and evolution, in order to diagnose test failures, maintain the tests, and to understand code written by other developers. Unreadable tests are more difficult to maintain and lose some of their value to developers. To overcome this problem, we propose a domain-specific model of unit test readability based on human judgements, and use this model to augment automated unit test generation. The resulting approach can automatically generate test suites with both high coverage and also improved readability. In human studies users prefer our improved tests and are able to answer maintenance questions about them 14\% more quickly at the same level of accuracy.},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages = {107-118},
  numpages = {12},
  keywords = {Readability, automated test generation, unit testing},
  location = {Bergamo, Italy},
  series = {ESEC/FSE 2015}}

@inproceedings{Dall06a,
  author = {Valentin Dallmeier and Christian Lindig and Andrzej Wasylkowski and Andreas Zeller},
  title = {Mining object behavior with ADABU},
  booktitle = {Proceedings of the 2006 international workshop on Dynamic systems analysis (WODA'06)},
  pages = {17--24},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1138912.1138918},
  address = {New York, NY, USA},
  isbn = {1-59593-400-6},
  location = {Shanghai, China}}

@article{Dall12a,
  author = {Jehad Al-Dallal and Lionel C. Briand},
  title = {A Precise Method-Method Interaction-Based Cohesion Metric for Object-Oriented Classes},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  volume = {21},
  pages = {8},
  year = {2012},
  doi = {10.1145/2089116.2089118},
  number = {2}}

@article{Dall15a,
  author = {Al Dallal, Jehad},
  title = {Identifying refactoring opportunities in object-oriented code: {A} systematic literature review},
  journal = {Information and Software Technology},
  volume = {58},
  pages = {231--249},
  year = {2015},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584914001918},
  doi = {10.1016/j.infsof.2014.08.002},
  abstract = {Context
Identifying refactoring opportunities in object-oriented code is an important stage that precedes the actual refactoring process. Several techniques have been proposed in the literature to identify opportunities for various refactoring activities.
Objective
This paper provides a systematic literature review of existing studies identifying opportunities for code refactoring activities.
Method
We performed an automatic search of the relevant digital libraries for potentially relevant studies published through the end of 2013, performed pilot and author-based searches, and selected 47 primary studies (PSs) based on inclusion and exclusion criteria. The PSs were analyzed based on a number of criteria, including the refactoring activities, the approaches to refactoring opportunity identification, the empirical evaluation approaches, and the data sets used.
Results
The results indicate that research in the area of identifying refactoring opportunities is highly active. Most of the studies have been performed by academic researchers using nonindustrial data sets. Extract Class and Move Method were found to be the most frequently considered refactoring activities. The results show that researchers use six primary existing approaches to identify refactoring opportunities and six approaches to empirically evaluate the identification techniques. Most of the systems used in the evaluation process were open-source, which helps to make the studies repeatable. However, a relatively high percentage of the data sets used in the empirical evaluations were small, which limits the generality of the results.
Conclusions
It would be beneficial to perform further studies that consider more refactoring activities, involve researchers from industry, and use large-scale and industrial-based systems.},
  issn = {0950-5849},
  keywords = {Refactoring activity, Refactoring opportunity, Systematic literature review},
  month = feb,
  shorttitle = {Identifying refactoring opportunities in object-oriented code},
  urldate = {2019-03-27}}

@article{Dalo18a,
  author = {Daloze, Benoit and Tal, Arie and Marr, Stefan and M\"{o}ssenb\"{o}ck, Hanspeter and Petrank, Erez},
  title = {Parallelization of Dynamic Languages: Synchronizing Built-in Collections},
  journal = {Proc. ACM Program. Lang.},
  volume = {2},
  pages = {108:1--108:30},
  publisher = {ACM},
  year = {2018},
  url = {http://doi.acm.org/10.1145/3276478},
  doi = {10.1145/3276478},
  acmid = {3276478},
  address = {New York, NY, USA},
  articleno = {108},
  issn = {2475-1421},
  keywords = {Collections, Concurrency, Dynamically-typed languages, Graal, Ruby, Thread Safety, Truffle},
  month = oct,
  number = {OOPSLA},
  numpages = {30}}

@inproceedings{Dalz00a,
  author = {Silvano Dal Zilio},
  title = {An Interpretation of Typed Concurrent Objects in the Blue Calculus},
  booktitle = {Proc. of IFIP TCS 2000},
  volume = {1872},
  pages = {409--424},
  publisher = {Springer-Verlag},
  year = {2000},
  url = {http://research.microsoft.com/~sdal/interptypcoo.htm},
  month = aug,
  series = {LNCS}}

@inproceedings{Dalz98a,
  author = {Silvano Dal Zilio},
  title = {Quiet and Bouncing Objects: Two Migration Abstractions in a Simple Distributed Blue Calculus},
  booktitle = {Proc. of SOAP '98 --- International Workshop on Semantics of Objects as Processes},
  pages = {35--42},
  publisher = {BRICS Notes Series 5},
  year = {1998},
  url = {http://research.microsoft.com/~sdal/bouncingobj.htm}}

@inproceedings{Dalz99a,
  author = {Silvano Dal Zilio},
  title = {Concurrent Objects in the Blue Calculus},
  booktitle = {Proc. of JFLA '99},
  pages = {189--206},
  year = {1999},
  url = {http://research.microsoft.com/~sdal/blueobj.htm},
  month = feb}

@phdthesis{Dalz99b,
  author = {Silvano Dal-Zilio},
  title = {Le calcul bleu: types et objects},
  year = {1999},
  school = {Universit{\'e} de Nice --- Sophia Antipolis},
  month = jul,
  note = {In french},
  type = {{Ph.D}. Thesis}}

@inproceedings{Dam09a,
  author = {Mads Dam1 and Bart Jacobs2 and Andreas Lundblad and Frank Piessens},
  title = {Security Monitor Inlining for Multithreaded Java},
  booktitle = {ECOOP 2009},
  year = {2009}}

@techreport{Dam88a,
  author = {Mads Dam},
  title = {Relevance Logic and Concurrent Composition},
  pages = {178--185},
  year = {1988},
  address = {Edinburgh},
  institution = {Computer Society Press},
  month = jul,
  type = {Proc. 3rd Annual Symposium on Logic in Computer Science}}

@phdthesis{Dam90a,
  author = {Mads Dam},
  title = {Relevance Logic and Concurrent Composition},
  year = {1990},
  school = {Computer Science Dept., University of Edinburgh},
  month = sep,
  number = {report CST-66-90},
  type = {{Ph.D}. Thesis}}

@techreport{Dami88a,
  author = {Laurent Dami and Eugene Fiume and Oscar Nierstrasz and Dennis Tsichritzis},
  title = {Temporal Scripts for Objects},
  pages = {144--161},
  year = {1988},
  url = {http://scg.unibe.ch/archive/osg/Dami88aTemporalScripts.pdf},
  abstract = {Computer animation, computer simulation, computer
music and other areas often need to deal with
concurrent activities with specific temporal
characteristics. This paper proposes a scripting
facility to help program such applications. This
facility provides support for specifying long-term
behaviour of objects in an object-oriented
environment. Temporal scripts can instantiated and
combined using a set of temporal operators, saying
for example that two activities begin at the same
time, or that one has to follow the other. Through a
flexible sampling policy based on a notion of
virtual time, temporal specifications can he
executed at various temporal resolutions, and
therefore can be reused indifferent contexts.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Active Object Environments}}

@techreport{Dami88b,
  author = {Laurent Dami},
  title = {Musical Scripts},
  pages = {162--171},
  year = {1988},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Active Object Environments}}

@techreport{Dami89a,
  author = {Laurent Dami},
  title = {Reusability through Horizontal Composition},
  pages = {143--160},
  year = {1989},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@techreport{Dami90a,
  author = {Laurent Dami},
  title = {Scripting Musical Components in Application Interfaces},
  pages = {357--366},
  year = {1990},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/musicalScripting.pdf},
  abstract = {Musical events can enrich application interfaces in
two ways: by adding new channels for notifying users
about changes in the internal state of an
application, or by getting data input from audio
equipment connected to the workstation. Such
possibilities will only get more widely used if
environments are developed in which musical
components can be scripted, i.e. can be easily
arranged and connected to applications by direct
manipulation, as opposed to traditional programming
methods. Similar facilities already exist in several
systems for working with graphical components like
buttons or windows. This paper describes ongoing
work for extending one of those systems, namely
Interface Builder on the NeXT workstation, with
musical capabilities.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@techreport{Dami91a,
  author = {Laurent Dami},
  title = {More Functional Reusability in {C}/{C}++/Objective-{C} with Curried Functions},
  pages = {85--98},
  year = {1991},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/curry.pdf},
  abstract = {Several mechanisms commonly used in functional
programming languages can be beneficial in terms of
conciseness and reuse potential in more traditional
programming areas, like applications programming or
even systems programming. An implementation of
functional operators for the C, C++ and Objective-C
languages, based on the principle of curried
functions, is proposed. Its implications in terms of
improved power and additional cost are examined.
Examples of parameterized function generators,
function compositions and closures are given. A
particular section shows how closures of
C++/Objective-C objects with their member functions
can be done with the currying operator.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  note = {Working paper},
  type = {Object Composition}}

@techreport{Dami92a,
  author = {Laurent Dami},
  title = {{HOP}: Hierarchical Objects with Ports},
  pages = {41--77},
  year = {1992},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@techreport{Dami93a,
  author = {Laurent Dami},
  title = {The {HOP} Calculus},
  pages = {151--212},
  year = {1993},
  abstract = {A new calculus is presented for modelling
object-oriented constructs. The main features of the
calculus are: interaction by names, unification of
types and values, operators for combinations and
alternations of terms. With a limited set of
syntactic constructs a surprisingly large range of
features can be modelled, including not only
object-oriented constructs but also abstract data
types, recursive and dependent types and
concurrency. The syntax and operational semantics of
the calculus are presented, together with numerous
programming examples. Through comparisons with the
lambda calculus, we argue that interaction by names
is fundamentally more expressive than traditional
functional abstraction and application. In
particular, it becomes possible to treat the
parameters of an abstraction independently while
doing a fixed-point operation, which is of great
convenience for modelling object-oriented systems.
Finally, an approach to type-checking is presented.
Although not totally mature yet, it shows how types
and values are merged in a single preorder over
terms, and how this preorder can be used to prevent
type errors.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Visual Objects}}

@phdthesis{Dami94a,
  author = {Laurent Dami},
  title = {Software Composition: Towards an Integration of Functional and Object-Oriented Approaches},
  year = {1994},
  school = {University of Geneva},
  number = {No. 396},
  type = {{Ph.D}. Thesis}}

@inproceedings{Dami94b,
  author = {M. Damiani},
  title = {An Intelligent Information System for Heterogeneous Data Exploration},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {298--312},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@unpublished{Dami94c,
  author = {Laurent Dami},
  title = {Named Parameters: {A} Foundation for Subtyping},
  year = {1994},
  note = {Centre Universitaire d'Informatique de Gen\`eve},
  type = {Draft}}

@incollection{Dami95a,
  author = {Laurent Dami},
  title = {Functions, Records and Compatibility in the Lambda {N} Calculus},
  booktitle = {Object-Oriented Software Composition},
  pages = {153--174},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {Subtyping, a fundamental notion for software
reusability, establishes a classification of data
according to a compatibility relationship. This
relationship is usually associated with records.
However, compatibility can be defined in other
situations, involving for example enumerated types
or concrete data types. We argue that the basic
requirement for supporting compatibility is an
interaction protocol between software components
using names instead of positions. Based on this
principle, an extension of the lambda calculus is
proposed, which combines de Bruijn indices with
names. In the extended calculus various subtyping
situations mentioned above can be modelled; in
particular, records are encoded in a straightforward
way. Compatibility is formally defined in terms of
an operational lattice based on observation of error
generation. Unlike many usual orderings, errors are
not identified with divergence; as a matter of fact,
both are even opposite since they respectively
correspond to the bottom and top elements of the
lattice. Finally, we briefly explore a second
extension of the calculus, providing meet and join
operators through a simple operational definition,
and opening interesting perspectives for type
checking and concurrency.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@misc{Dami95b,
  author = {Laurent Dami},
  title = {Pure Lambda Calculus with Records: From Compatibility To Subtyping},
  year = {1995},
  note = {submitted to TLCA 95}}

@article{Dami98a,
  author = {Laurent Dami},
  title = {A lambda-calculus for dynamic binding},
  journal = {Theoretical Computer Science},
  volume = {192},
  pages = {201--231},
  year = {1998},
  url = {ftp://cui.unige.ch/pub/dami/dynBind.ps.Z},
  month = feb,
  number = {2}}

@article{Danf88a,
  author = {S. Danforth and Chris Tomlinson},
  title = {Type Theories and Object-Oriented Programming},
  journal = {ACM Computing Surveys},
  volume = {20},
  pages = {29--72},
  year = {1988},
  month = mar,
  number = {1}}

@inproceedings{Danf94b,
  author = {Scott Danforth and Ira R. Forman},
  title = {Derived Metaclass in {SOM}},
  booktitle = {Proceedings of TOOLS EUROPE '94},
  pages = {63--73},
  year = {1994}}

@phdthesis{Dang19a,
  author = {Benjamin Danglot},
  title = {Automatic Unit Test Amplification For DevOps},
  year = {2019},
  school = {Universit\'e de Lille}}

@article{Dang19b,
  author = {Danglot, Benjamin and Vera-Perez, Oscar and Yu, Zhongxing and Zaidman, Andy and Monperrus, Martin and Baudry, Benoit},
  title = {A snowballing literature study on test amplification},
  journal = {Journal of Systems and Software},
  volume = {157},
  year = {2019},
  url = {https://www.sciencedirect.com/science/article/pii/S0164121219301736},
  abstract = {The adoption of agile approaches has put an increased emphasis on testing, resulting in extensive test suites. These suites include a large number of tests, in which developers embed knowledge about meaningful input data and expected properties as oracles. This article surveys works that exploit this knowledge to enhance manually written tests with respect to an engineering goal (e.g., improve coverage or refine fault localization). While these works rely on various techniques and address various goals, we believe they form an emerging and coherent field of research, which we coin "test amplification". We devised a first set of papers from DBLP, searching for all papers containing "test" and "amplification" in their title. We reviewed the 70 papers in this set and selected the 4 papers that fit the definition of test amplification. We use them as the seeds for our snowballing study, and systematically followed the citation graph. This study is the first that draws a comprehensive picture of the different engineering goals proposed in the literature for test amplification. We believe that this survey will help researchers and practitioners entering this new field to understand more quickly and more deeply the intuitions, concepts and techniques used for test amplification.},
  keywords = {Automatic testing, Test amplification, Test augmentation, Test optimization, Test regeneration},
  language = {en},
  month = nov,
  urldate = {2021-07-10}}

@inproceedings{Dani11a,
  author = {Daniel, Brett and Dig, Danny and Gvero, Tihomir and Jagannath, Vilas and Jiaa, Johnston and Mitchell, Damion and Nogiec, Jurand and Tan, Shin Hwei and Marinov, Darko},
  title = {ReAssert: A Tool for Repairing Broken Unit Tests},
  booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
  pages = {1010--1012},
  publisher = {ACM},
  year = {2011},
  url = {http://doi.acm.org/10.1145/1985793.1985978},
  doi = {10.1145/1985793.1985978},
  acmid = {1985978},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0445-0},
  keywords = {reassert, test repair, testing tools, unit testing},
  location = {Waikiki, Honolulu, HI, USA},
  numpages = {3},
  series = {ICSE '11}}

@inproceedings{Dani14a,
  author = {Daniel, Donny T and Wuchner, Egon and Sokolov, Konstantin and Stal, Michael and Liggesmeyer, Peter},
  title = {Polyptychon: A hierarchically-constrained classified dependencies visualization},
  booktitle = {2014 Second IEEE Working Conference on Software Visualization},
  pages = {83--86},
  year = {2014},
  organization = {IEEE}}

@inproceedings{Dant06a,
  author = {Daniel S. Dantas and David Walker},
  title = {Harmless advice},
  booktitle = {POPL '06: Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages = {383--396},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1111037.1111071},
  address = {New York, NY, USA},
  isbn = {1-59593-027-2},
  location = {Charleston, South Carolina, USA}}

@techreport{Danz00a,
  author = {Marc Danzeisen},
  title = {{ASTRA} --- Portfolio},
  year = {2000},
  url = {http://scg.unibe.ch/archive/projects/Danz00a.pdf},
  institution = {University of Bern},
  month = jun,
  type = {Informatikprojekt}}

@inproceedings{Dao02a,
  author = {Michel Dao and Marianne Huchard and Th{\'e}r{\`e}se Libourel and Cyril Roume and Herv{\'e} Leblanc},
  title = {A {New} {Approach} to {Factorization}: {Introducing} {Metrics}},
  booktitle = {Proceedings of {METRICS} '02 (8$_{th}$ IEEE International Symposium on Software Metrics},
  pages = {227--236},
  publisher = {IEEE Computer Society},
  year = {2002}}

@inproceedings{Dao04a,
  author = {Michel Dao and Marianne Huchard and Mohamed Rouane Hacene and Cyril Roume andPetko Valtchev},
  title = {Improving {Generalization} {Level} in {UML} {Models} {Iterative} {Cross} {Generalization} in {Practice}},
  booktitle = {Proceedings of {ICCS} '94 (12th International Conference on Conceptual Structures)},
  volume = {3127},
  pages = {346--360},
  publisher = {Springer-Verlag},
  year = {2004},
  month = jul,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Dao06a,
  author = {Michel Dao and Marianne Huchard and Mohamed Rouane-Hacene and Cyril Roume and Petko Valtchev},
  title = {{T}owards {P}ractical {T}ools for {M}ining {A}bstractions in {UML} {M}odels},
  booktitle = {{ICEIS}'06: {I}nternational {C}onference on {E}nterprise {I}nformation {S}ystems},
  pages = {276-283},
  year = {2006},
  isbn = {972-8865-43-0}}

@article{Dao17a,
  author = {Dao, Thi-Huong and Trinh, Thanh-Binh and Truong, Ninh-Thuan},
  title = {A tool support for checking consistency in model refactoring},
  journal = {2017 9th International Conference on Knowledge and Systems Engineering (KSE)},
  pages = {100-105},
  year = {2017},
  url = {https://api.semanticscholar.org/CorpusID:9989413}}

@inproceedings{Daqi09a,
  author = {Hou, Daqing and Jablonski, Patricia and Jacob, Ferosh},
  title = {CnP: Towards an environment for the proactive management of copy-and-paste programming},
  booktitle = {2009 IEEE 17th International Conference on Program Comprehension},
  pages = {238--242},
  publisher = {IEEE},
  year = {2009},
  url = {http://dx.doi.org/10.1109/{ICPC}.2009.5090049},
  doi = {10.1109/{ICPC}.2009.5090049},
  isbn = {978-1-4244-3998-0},
  location = {Vancouver, BC, Canada},
  month = may,
  priority = {0}}

@misc{Darcs00a,
  title = {Darcs: The distributed change-based revision control system},
  url = {http://darcs.net/},
  key = {darcs}}

@misc{Dard04,
  author = {Betiana Darderes and M{\'\a}ximo Prieto},
  title = {Subjective Behavior: a General Dynamic Method Dispatch},
  year = {2004}}

@inproceedings{Daro87a,
  author = {Ph. Darondeau and B. Gamatie},
  title = {A Fully Observational Model for Infinite Behaviours of Communicating Systems},
  booktitle = {Proceedings TAPSOFT '87},
  volume = {249},
  pages = {153--168},
  publisher = {Springer-Verlag},
  year = {1987},
  editor = {Ehrig and Kowalski and Levi and Montanari},
  series = {LNCS}}

@article{Das02a,
  author = {Das, Manuvir and Lerner, Sorin and Seigle, Mark},
  title = {ESP: path-sensitive program verification in polynomial time},
  journal = {SIGPLAN Not.},
  volume = {37},
  pages = {57--68},
  publisher = {ACM},
  year = {2002},
  address = {New York, NY, USA},
  issn = {0362-1340},
  issue = {5},
  month = {may},
  numpages = {12}}

@inproceedings{Dasg86a,
  author = {Partha Dasgupta},
  title = {A Probe-Based Monitoring Scheme for an Object-Oriented Distributed Operating System},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {57--66},
  year = {1986},
  month = nov}

@article{Dasg91a,
  author = {Partha Dasgupta and LeBlanc, Jr., R.J. and M. Ahamad and U. Ramachandran},
  title = {The Cloads Distributed Operating System},
  journal = {IEEE Computer},
  volume = {24},
  pages = {34--44},
  year = {1991},
  month = nov,
  number = {11}}

@inproceedings{Dash21a,
  author = {Dashuber, Veronika and Philippsen, Michael and Weigend, Johannes},
  title = {A Layered Software City for Dependency Visualization.},
  booktitle = {VISIGRAPP (3: IVAPP)},
  pages = {15--26},
  year = {2021}}

@article{Dash22a,
  author = {Dashuber, Veronika and Philippsen, Michael},
  title = {Static and Dynamic Dependency Visualization in a Layered Software City},
  journal = {SN Computer Science},
  volume = {3},
  pages = {511},
  publisher = {Springer},
  year = {2022},
  number = {6}}

@inproceedings{Dash99a,
  author = {Dashofy, Eric M. and Medvidovic, Nenad and Taylor, Richard N.},
  title = {Using off-the-shelf middleware to implement connectors in distributed software architectures},
  booktitle = {ICSE'99: Proceedings of the 21st International Conference on Software engineering},
  pages = {3--12},
  publisher = {ACM},
  year = {1999},
  doi = {10.1145/302405.302407},
  address = {New York, NY, USA},
  location = {Los Angeles, California, United States}}

@book{Date92a,
  author = {C. J. Date and D. McGoveran},
  title = {A Guide to Sybase and {SQL} Server},
  publisher = {Addison Wesley},
  year = {1992},
  isbn = {0-201-55710-X}}

@techreport{Datr00a,
  author = {{Bell} {Canada}},
  title = {{DATRIX} Abstract Semantic Graph Reference Manual (version 1.4)},
  year = {2000},
  institution = {{Bell} {Canada}},
  key = {Dat},
  month = may}

@inproceedings{Dave00a,
  author = {Davey, John and Burd, Elizabeth},
  title = {Evaluating the Suitability of Data Clustering for Software Remodularization},
  booktitle = {{WCRE} '00: Proceedings of the Seventh Working Conference on Reverse Engineering ({WCRE}'00)},
  pages = {268},
  publisher = {IEEE Computer Society},
  year = {2000},
  address = {Washington, DC, USA},
  isbn = {0-7695-0881-2}}

@inproceedings{Dave01a,
  author = {John Davey and Elizabeth Burd},
  title = {Clustering and concept analysis for software evolution},
  booktitle = {Proceedings of the 4th international Workshop on Principles of Software Evolution (IWPSE 2001)},
  pages = {146--149},
  year = {2001},
  address = {Vienna, Austria}}

@book{Dave02a,
  author = {B.A. Davey and H. A. Priestley},
  title = {Introduction to Lattices and Order: Second Edition},
  publisher = {Cambridge University Press},
  year = {2002}}

@book{Dave03a,
  author = {B.A. Davey and H.A. Priestley},
  title = {Introduction to Lattices and Order},
  publisher = {Cambridge University Press},
  year = {2003},
  isbn = {0--521-78451-4}}

@article{Dave95a,
  author = {N. Davey and P. Barson and S.D.H. Field and R.J. Frank and D.S.W. Tansley},
  title = {The Development of a Software Clone Detector},
  journal = {International Journal of Applied Software Technology},
  volume = {1},
  pages = {219--236},
  year = {1995},
  url = {http://homepages.feis.herts.ac.uk/~nngroup/pubs/pubs-19956.html},
  number = {3/4}}

@book{Davi05a,
  author = {Martha Davis},
  title = {Scientific Papers and Presentations},
  publisher = {Elsevier Academic Press},
  year = {2005},
  isbn = {0120884240}}

@inproceedings{Davi05b,
  author = {David, Valentin and Demaille, Akim and Durlin, Renaud and Gournet, Olivier},
  title = {C/C++ Disambiguation Using Attribute Grammars},
  booktitle = {Proc. 6th Stratego User Days},
  pages = {2--4},
  year = {2005}}

@article{Davi80a,
  author = {Davidson, Jack W and Fraser, Christopher W},
  title = {The design and application of a retargetable peephole optimizer},
  journal = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume = {2},
  pages = {191--202},
  publisher = {ACM New York, NY, USA},
  year = {1980},
  number = {2}}

@article{Davi93a,
  author = {John Davis and Tom Morgan},
  title = {Object-Oriented Development at Brooklyn Union Gas},
  journal = {IEEE Software (Special Issue on "Making O-O Work")},
  volume = {10},
  pages = {67--74},
  year = {1993},
  month = jan,
  number = {1}}

@inproceedings{Davi93b,
  author = {G. David and F. Drewes and H.-J. Kreowski},
  title = {Hyperedge Replacement with Rendezvous},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {167--181},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@book{Davi95a,
  author = {Alan Mark Davis},
  title = {201 Principles of Software Development},
  publisher = {McGraw-Hill},
  year = {1995},
  isbn = {0-07-015840-1}}

@inproceedings{Daws00a,
  author = {Engler, Dawson and Chelf, Benjamin and Chou, Andy and Hallem, Seth},
  title = {{Checking system Rules Using System-specific, Programmer-Written Compiler Extensions}},
  booktitle = {Symposium on Operating System Design \& Implementation},
  pages = {1--16},
  year = {2000}}

@inproceedings{Daya88a,
  author = {Umeshwar Dayal and Alejandro Buchmann and Dennis McCarthy},
  title = {Rules Are Objects Too: A knowledge Model For An Active, Object-Oriented Database System},
  booktitle = {Proceedings of the 2nd workshop on Object-Oriented Database Systems: Advances in Object-Oriented Database Systems},
  volume = {334},
  pages = {129--143},
  year = {1988},
  series = {LNCS}}

@inbook{Daya96a,
  author = {Umeshwar Dayal and Alejandro Buchmann and Sharma Chakravarthy},
  title = {The HiPAC project},
  chapter = {7},
  pages = {177--206},
  publisher = {Morgan Kaufman Publishers},
  year = {1996}}

@inproceedings{Daya98a,
  author = {H. Dayani-Fard and I. Jurisca},
  title = {Reverse Engineering by Mining Dynamic Repositories},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {174--182},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{DeAl08a,
  author = {Brian de Alwis and Gail C. Murphy},
  title = {Answering conceptual queries with Ferret},
  booktitle = {Proceedings of the 30th International Conference on Software Engineering ({ICSE})},
  pages = {21--30},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1368088.1368092},
  address = {New York, NY, USA},
  isbn = {978-1-60558-079-1},
  location = {Leipzig, Germany}}

@inproceedings{DeBa96a,
  author = {Jean-Marc DeBaud},
  title = {Lessons from a Domain-Based Reengineering Effort},
  booktitle = {Proceedings of {WCRE} 1996},
  publisher = {IEEE Computer Society},
  year = {1998}}

@book{DeBon90a,
  author = {Edward de Bono},
  title = {Simplicity},
  publisher = {Penguin Books Ltd},
  year = {1990},
  isbn = {0140258396}}

@inproceedings{DeLa98a,
  author = {David E. DeLano and Linda Rising},
  title = {Patterns for System Testing},
  booktitle = {Pattern Languages of Program Design 3},
  pages = {503--527},
  publisher = {Addison-Welsey},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann},
  isbn = {978-0201310115}}

@inproceedings{DeLa98b,
  author = {David E. DeLano and Linda Rising},
  title = {Patterns for System Testing},
  booktitle = {Pattern Languages of Program Design 2},
  pages = {503--527},
  publisher = {Addison-Welsey},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann},
  isbn = {0201895277		978-0201895278}}

@inproceedings{DeLa98c,
  author = {David E. DeLano and Linda Rising},
  title = {Patterns for System Testing},
  booktitle = {Pattern Languages of Program Design 1},
  pages = {503--527},
  publisher = {Addison-Welsey},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann},
  isbn = {0201607344		978-0201607345}}

@inproceedings{DeLa98d,
  author = {David E. DeLano and Linda Rising},
  title = {Patterns for System Testing},
  booktitle = {Pattern Languages of Program Design 4},
  pages = {503--527},
  publisher = {Addison-Welsey},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann},
  isbn = {0201433044		978-0201433043}}

@inproceedings{DeLa98e,
  author = {David E. DeLano and Linda Rising},
  title = {Patterns for System Testing},
  booktitle = {Pattern Languages of Program Design 5},
  pages = {503--527},
  publisher = {Addison-Welsey},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann},
  isbn = {0321321944		978-0321321947}}

@article{DeLe13a,
  author = {Rog{\'e}rio de Lemos and David Garlan and Carlo Ghezzi and Holger Giese},
  title = {Software Engineering for Self-Adaptive Systems: Assurances (Dagstuhl Seminar 13511)},
  journal = {Dagstuhl Reports},
  volume = {3},
  pages = {67-96},
  year = {2013},
  ee = {http://dx.doi.org/10.4230/DagRep.3.12.67},
  number = {12}}

@inproceedings{DeLi97,
  author = {DeLine, Robert and Zelesnik, Gregory and Shaw, Mary},
  title = {Lessons on Converting Batch Systems to Support Interaction: Experience Report},
  booktitle = {Proceedings of the 19th International Conference on Software Engineering},
  pages = {195 to 204},
  publisher = {Association for Computing Machinery},
  year = {1997},
  url = {https://doi.org/10.1145/253228.253267},
  doi = {10.1145/253228.253267},
  address = {New York, NY, USA},
  isbn = {0897919149},
  keywords = {batch systems, reengineering, interactive systems, software evolution},
  location = {Boston, Massachusetts, USA},
  numpages = {10},
  series = {ICSE '97}}

@article{DeLu08,
  author = {De Lucia, Andrea and Francese, Rita and Scanniello, Giuseppe and Tortora, Genoveffa},
  title = {Developing legacy system migration methods and tools for technology transfer},
  journal = {Software: Practice and Experience},
  volume = {38},
  pages = {1333-1364},
  year = {2008},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.870},
  doi = {https://doi.org/10.1002/spe.870},
  abstract = {Abstract This paper presents the research results of an ongoing technology transfer project carried out in cooperation between the University of Salerno and a small software company. The project is aimed at developing and transferring migration technology to the industrial partner. The partner should be enabled to migrate monolithic multi-user COBOL legacy systems to a multi-tier Web-based architecture. The assessment of the legacy systems of the partner company revealed that these systems had a very low level of decomposability with spaghetti-like code and embedded control flow and database accesses within the user interface descriptions. For this reason, it was decided to adopt an incremental migration strategy based on the reengineering of the user interface using Web technology, on the transformation of interactive legacy programs into batch programs, and the wrapping of the legacy programs. A middleware framework links the new Web-based user interface with the Wrapped Legacy System. An Eclipse plug-in, named MELIS (migration environment for legacy information systems), was also developed to support the migration process. Both the migration strategy and the tool have been applied to two essential subsystems of the most business critical legacy system of the partner company.},
  eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.870},
  keywords = {legacy systems, migration to the Web, reengineering, technology transfer},
  number = {13}}

@inproceedings{DeLu15a,
  author = {Andrea De Lucia and Vincenzo Deufemia and Carmine Gravino and Michele Risi},
  title = {Towards Automating Dynamic Analysis for Behavioral Design Pattern Detection},
  booktitle = {Proc.\ {ICSM}E},
  pages = {161--170},
  publisher = {IEEE},
  year = {2015}}

@book{DeMa02,
  author = {Tom DeMarco},
  title = {Slack, Getting Past Burnout, BusyWork, and the Myth of Total Efficiency},
  publisher = {Broadway Books},
  year = {2002},
  isbn = {0-7679-0769-8}}

@inproceedings{DeMa14a,
  author = {F. DeMarco and J. Xuan and D. Le Berre and M. Monperrus},
  title = {Automatic Repair of Buggy If Conditions and Missing Preconditions with SMT},
  booktitle = {CSTVA},
  year = {2014}}

@book{DeMa86a,
  author = {Tom deMarco},
  title = {Controlling Software Projects: Management, Measurement, and Estimates},
  publisher = {Springer-Verlag},
  year = {1986},
  isbn = {0131717111}}

@book{DeMa99a,
  author = {Tom DeMarco and Timothy Lister},
  title = {Peopleware, Productive Projects and Teams},
  publisher = {Dorset House},
  year = {1999},
  edition = {2nd}}

@article{DeMi78a,
  author = {DeMillo, R. A. and Lipton, R. J. and Sayward, F. G.},
  title = {Hints on Test Data Selection: Help for the Practicing Programmer},
  journal = {Computer},
  volume = {11},
  pages = {34--41},
  publisher = {IEEE Computer Society Press},
  year = {1978},
  url = {http://dx.doi.org/10.1109/C-M.1978.218136},
  doi = {10.1109/C-M.1978.218136},
  acmid = {1301357},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  issue_date = {April 1978},
  month = apr,
  number = {4},
  numpages = {8}}

@inproceedings{DeMi87a,
  author = {Linda G. DeMichiel and Richard P. Gabriel},
  title = {The {Common} {Lisp} Object System: An Overview},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {151--170},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@article{DePa01a,
  author = {Paul De Palma},
  title = {Viewpoint: Why women avoid computer science},
  journal = {Commun. ACM},
  volume = {44},
  pages = {27--30},
  publisher = {ACM Press},
  year = {2001},
  doi = {10.1145/376134.376145},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {6}}

@article{DeRe76a,
  author = {Frank DeRemer and Hans H. Kron},
  title = {Programming in the Large Versus Programming in the Small},
  journal = {IEEE Transactions on Software Engineering},
  volume = {2},
  pages = {80--86},
  year = {1976},
  month = jun,
  number = {2}}

@inproceedings{DeSo03,
  author = {de Souza, Phillip and McNair, Andrew and Jahnke, Jens H},
  title = {Network-centric migration of embedded control software: a case study},
  booktitle = {Proceedings of the 2003 conference of the Centre for Advanced Studies on Collaborative research},
  pages = {54--65},
  year = {2003}}

@inproceedings{DeVo00a,
  author = {De Volder, Kris and Fabry, Johan and Wuyts, Roel},
  title = {Logic Meta Components as a Generic Component Model},
  booktitle = {Proceedings of the ECOOP 2000: Fifth International Workshop on Component-Oriented Programming},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/DeVo00a.pdf}}

@inproceedings{DeVo99a,
  author = {Kris De Volder and Theo D'Hondt},
  title = {Aspect-Orientated Logic Meta Programming},
  booktitle = {Reflection '99: Proceedings of the Second International Conference on Meta-Level Architectures and Reflection},
  pages = {250--272},
  publisher = {Springer-Verlag},
  year = {1999},
  address = {London, UK},
  isbn = {3-540-66280-4}}

@mastersthesis{DeZa09a,
  author = {Sandro De Zanet},
  title = {Grammar Generation with Genetic Programming --- Evolutionary Grammar Generation},
  year = {2009},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/DeZa09a.pdf},
  abstract = {External domain specific languages are ubiquitous in
computer science. Getting ahold of definitions of
these languages and being able to analyze them is
difficult. The code has to be parsed and transformed
to a model before we can even start to retrieve
meaningful information. Often a parser is not openly
available or is written in an other language. Hence
a developer analyzing the code has to manually
figure out the grammar and write his own parser.
This thesis will address the problem by automating
the grammar and parser retrieval process. The
approach uses a combination of Parsing Expression
Grammars and Genetic Programming.},
  institution = {University of Bern},
  month = jul,
  type = {Master's Thesis}}

@article{Dean03a,
  author = {Thomas R. Dean and James R. Cordy and Andrew J. Malton and Kevin A. Schneider},
  title = {Agile Parsing in {TXL}},
  journal = {Autom. Softw. Eng.},
  volume = {10},
  pages = {311-336},
  year = {2003},
  url = {http://research.cs.queensu.ca/~cordy/Papers/JASE\_AP.pdf},
  ee = {10.1023/A:1025801405075},
  number = {4}}

@inproceedings{Dean95a,
  author = {Jeffrey Dean and David Grove and Craig Chambers},
  title = {Optimization of Object-Oriented Programs Using Static Class Hierarchy Analysis},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {77--101},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@inproceedings{Dean96,
  author = {Dean, Jeffrey and DeFouw, Greg and Grove, David and Litvinov, Vassily and Chambers, Craig},
  title = {Vortex: An Optimizing Compiler for Object-oriented Languages},
  booktitle = {Proceedings of the 11th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
  pages = {83--100},
  publisher = {ACM},
  year = {1996},
  url = {http://doi.acm.org/10.1145/236337.236344},
  doi = {10.1145/236337.236344},
  acmid = {236344},
  address = {New York, NY, USA},
  isbn = {0-89791-788-X},
  location = {San Jose, California, USA},
  numpages = {18},
  series = {OOPSLA '96}}

@inproceedings{Dean96a,
  author = {Drew Dean and Edward W. Felten and Dan S. Wallach},
  title = {Java Security: From HotJava to Netscape and Beyond},
  booktitle = {In Proceedings of the 1996 IEEE Symposium on Security and Privacy},
  pages = {190--200},
  year = {1996}}

@inproceedings{Dean97a,
  author = {Dean, J. and Hicks, J.E. and Waldspurger, C.A. and Weihl, W.E. and Chrysos, G.},
  title = {ProfileMe: hardware support for instruction-level profiling on out-of-order processors},
  booktitle = {Proceedings of 30th Annual International Symposium on Microarchitecture},
  pages = {292-302},
  year = {1997},
  doi = {10.1109/MICRO.1997.645821}}

@inproceedings{Deck94a,
  author = {Karsten M. Decker and Jiri J. Dvorak and Ren\'e M. Rehmann},
  title = {A tool environment for parallel programming --- User-driven development of a novel programming environment for distributed memory parallel processor systems},
  booktitle = {Priority Programme Informatics Research, Information Conference Module 3 on Massively parallel systems},
  pages = {40--47},
  year = {1994},
  month = nov}

@inproceedings{Deco86a,
  author = {Decouchant, Dominique},
  title = {Design of a Distributed Object Manager for the {Smalltalk}-80 System},
  booktitle = {Conference proceedings on Object-oriented programming systems, languages and applications},
  pages = {444--452},
  publisher = {ACM},
  year = {1986},
  url = {http://doi.acm.org/10.1145/28697.28743},
  doi = {10.1145/28697.28743},
  acmid = {28743},
  address = {New York, NY, USA},
  isbn = {0-89791-204-7},
  location = {Portland, Oregon, United States},
  numpages = {9},
  series = {OOPLSA '86}}

@inproceedings{Deco91a,
  author = {D. Decouchant and P. Le Dot and M. Riveill and C. Roisin and X. Rousset de Pina},
  title = {A Synchronization Mechanism for an Object-Oriented Distributed System},
  booktitle = {Proceedings of the 11th IEEE Conference on Distributed Computing Systems},
  year = {1991},
  month = may}

@inproceedings{Dede02a,
  author = {Jessie Dedecker and Wolfgang De Meuter},
  title = {Using the Prototype-based Programming Paradigm for Structuring Mobile Applications},
  booktitle = {Workshop: Agent-oriented methodologies. OOPSLA 2002, Seattle, WA USA.},
  year = {2002}}

@inproceedings{Dede06a,
  author = {Dedecker, Jessie and Van Cutsem, Tom and Mostinckx, Stijn and D'Hondt, Theo and De Meuter, Wolfgang},
  title = {Ambient-Oriented Programming in AmbientTalk},
  booktitle = {ECOOP'06: Proceedings of the 20th European Conference on Object-Oriented Programming},
  volume = {4067},
  pages = {230--254},
  publisher = {Springer-Verlag},
  year = {2006},
  editor = {Dave Thomas}}

@article{Deer90a,
  author = {Scott C. Deerwester and Susan T. Dumais and Thomas K. Landauer and George W. Furnas and Richard A. Harshman},
  title = {Indexing by Latent Semantic Analysis},
  journal = {Journal of the American Society of Information Science},
  volume = {41},
  pages = {391--407},
  year = {1990},
  url = {citeseer.ist.psu.edu/deerwester90indexing.html},
  number = {6}}

@article{Dega88a,
  author = {P. Degano and Rocco De Nicola and Ugo Montanari},
  title = {A Distributed Operational Semantics for {CCS} Based on Condition/Event Systems},
  journal = {Acta Informatica},
  volume = {26},
  pages = {59--92},
  year = {1988},
  number = {1/2}}

@inproceedings{Dega93a,
  author = {P. Degano and R. Gorrieri and S. Vigna},
  title = {On Relating Some Models for Concurrency},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {15--30},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@inproceedings{Dein24a,
  title={NuzzleBug: Debugging block-based programs in scratch},
  author={Deiner, Adina and Fraser, Gordon},
  booktitle={Proceedings of the 46th IEEE/ACM International Conference on Software Engineering},
  pages={1--13},
  year={2024}
}

@inproceedings{Deis05a,
  author = {Florian Dei{\ss}enb\"ock and Markus Pizska},
  title = {Concise and Consistent Naming},
  booktitle = {International Workshop on Program Comprehension (IWPC 2005)},
  pages = {97--106},
  year = {2005},
  month = may}

@inproceedings{Deis06a,
  author = {Florian Deissenboeck and Daniel Ratiu},
  title = {A Unified Meta-Model for Concept-Based Reverse Engineering},
  booktitle = {Proceedings of the 3rd International Workshop on Metamodels, Schemas, Grammars and Ontologies (ATEM'06)},
  year = {2006}}

@article{Deis06b,
  author = {Deissenboeck, Florian and Pizka, Markus},
  title = {Concise and consistent naming},
  journal = {Software Quality Journal},
  volume = {14},
  pages = {261--282},
  publisher = {Springer},
  year = {2006},
  number = {3}}

@inproceedings{Deiss10a,
  author = {Deissenboeck, Florian and Heinemann, Lars and Hummel, Benjamin and Juergens, Elmar},
  title = {Flexible architecture conformance assessment with ConQAT},
  booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume 2},
  pages = {247--250},
  year = {2010}}

@techreport{Deke02a,
  author = {Uri Dekel},
  title = {Applications of Concept Lattices to Code Inspection and Review},
  year = {2002},
  institution = {Department of Computer Science, Technion}}

@mastersthesis{Deke03a,
  author = {Uri Dekel},
  title = {Revealing {JAVA} {Class} {Structures} using {Concept} {Lattices}},
  year = {2003},
  school = {Technion-Israel Institute of Technology},
  month = feb,
  type = {Diploma Thesis}}

@inproceedings{Deke03b,
  author = {Uri Dekel and Yossi Gil},
  title = {Revealing Class Structure with Concept Lattices},
  booktitle = {{WCRE}},
  pages = {353--362},
  publisher = {IEEE Press},
  year = {2003},
  abstract = {This paper promotes the use of a mathematical
concept lattice based upon the binary relation of
accesses between methods and fields as a novel
visualization of individual JAVA classes. We
demonstrate in a detailed real-life case study that
such a lattice is valuable for reverse-engineering
purposes, in that it helps reason about the
interface and structure of the class and find errors
in the absence of source code. Our technique can
also serve as a heuristic for automatic feature
categorization, enabling it to assist efforts of
re-documentation.},
  month = nov}

@inproceedings{Deko05a,
  author = {Steve Dekorte},
  title = {Io: a small programming language},
  booktitle = {Companion to the 20th Annual {ACM} {SIGPLAN} Conference on Object-Oriented Programming, Systems, Languages, and Applications, {OOPSLA} 2005, October 16-20, 2004, San Diego, {CA}, {USA}},
  pages = {166--167},
  publisher = {ACM},
  year = {2005},
  url = {http://www.iolanguage.com/},
  editor = {Ralph Johnson and Richard P. Gabriel}}

@misc{Del15a,
  author = {Delmolino, Kevin and Arnett, Mitchell and Kosba, Ahmed and Miller, Andrew and Shi, Elaine},
  title = {Step by Step Towards Creating a Safe Smart Contract: Lessons and Insights from a Cryptocurrency Lab},
  year = {2015},
  howpublished = {Cryptology ePrint Archive, Report 2015/460},
  note = {\url{http://eprint.iacr.org/2015/460}}}

@inproceedings{Delc91a,
  author = {Christine Delcourt and Roberto Zicari},
  title = {The Design of an Integrity Consistency Checker ({ICC}) for an Object-Oriented Database System},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {97--117},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Deli05a,
  author = {Robert DeLine and Amir Khella and Mary Czerwinski and George G. Robertson},
  title = {Towards understanding programs through wear-based filtering.},
  booktitle = {SOFTVIS},
  pages = {183-192},
  year = {2005},
  doi = {10.1145/1056018.1056044},
  isbn = {1-59593-073-6}}

@inproceedings{Deli05b,
  author = {Robert DeLine},
  title = {Staying Oriented with Software Terrain Maps},
  booktitle = {Proceedings of the 2005 International Workshop on Visual Languages and Computing},
  pages = {309-314},
  publisher = {IEEE Computer Society},
  year = {2005},
  date = {2007-06-12},
  isbn = {1-891706-17-9}}

@inproceedings{Deli05c,
  author = {Robert DeLine and Mary Czerwinski and George G. Robertson},
  title = {Easing Program Comprehension by Sharing Navigation Data},
  booktitle = {VLHCC '05: Proceedings of the 2005 IEEE Symposium on Visual Languages and Human-Centric Computing},
  pages = {241-248},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/VLHCC.2005.32},
  address = {Washington, DC, USA},
  isbn = {0-7695-2443-5}}

@inproceedings{Deli06a,
  author = {Robert DeLine and Mary Czerwinski and Brian Meyers and Gina Venolia and Steven M. Drucker and George G. Robertson},
  title = {Code Thumbnails: Using Spatial Memory to Navigate Source Code.},
  booktitle = {VL/HCC},
  pages = {11-18},
  year = {2006},
  date = {2007-07-02},
  description = {dblp},
  ee = {http://doi.ieeecomputersociety.org/10.1109/VLHCC.2006.14},
  isbn = {0-7695-2586-5}}

@book{Delo91a,
  title = {Proceedings {DOOD}'91},
  volume = {566},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Munich,Germany},
  editor = {C. Delobel and M. Kifer and Y. Masunaga},
  isbn = {3-540-55015-1},
  month = dec,
  series = {LNCS}}

@inproceedings{Delt12a,
  author = {Deltombe, Ga{\"{e}}tan and Le Goaer, Olivier and Barbier, Franck},
  title = {Bridging {KDM} and {ASTM} for Model-Driven Software Modernization},
  booktitle = {Proceedings of the 24th International Conference on Software Engineering {\&} Knowledge Engineering (SEKE'2012)},
  pages = {517--524},
  publisher = {Knowledge Systems Institute Graduate School},
  year = {2012},
  biburl = {https://dblp.org/rec/conf/seke/DeltombeGB12.bib}}

@book{Dema82a,
  author = {Tom De Marco},
  title = {Controlling Software Projects},
  publisher = {Yourdon Press},
  year = {1982}}

@article{Deme00m,
  author = {Serge Demeyer and Harald Gall},
  title = {Workshop on Object-Oriented Re-engineering ({WOOR}'99)},
  journal = {Software Engineering Notes},
  volume = {25},
  publisher = {ACM},
  year = {2000},
  url = {http://scg.unibe.ch/archive/famoos/ESEC99/WOOR99report.html},
  doi = {10.1145/340855.340857},
  month = jan,
  number = {1}}

@inproceedings{Deme03c,
  author = {Wolfgang De Meuter, Theo D'hondt, Jessie Dedecker},
  title = {Intersecting classes and prototypes},
  booktitle = {Andrei Ershov Fifth International Conference on Perspectives of System Informatics, Siberia, Russia},
  year = {2003}}

@inproceedings{Deme04a,
  author = {Camil Demetrescu and Irene Finocchi},
  title = {A portable virtual machine for program debugging and directing},
  booktitle = {Proceedings of the 2004 ACM symposium on Applied computing (SAC'04)},
  pages = {1524--1530},
  publisher = {ACM},
  year = {2004},
  doi = {10.1145/967900.968205},
  address = {New York, NY, USA},
  isbn = {1-58113-812-1},
  location = {Nicosia, Cyprus}}

@techreport{Deme79a,
  author = {Alan Demers and Jim Donahue},
  title = {Revised Report on Russell},
  year = {1979},
  address = {Ithaca, New York},
  institution = {Department of Computer Science, Cornell University},
  type = {TR79-389}}

@inproceedings{Deme80a,
  author = {A.J. Demers and Jim Donahue},
  title = {''Type-Completeness'' as a Language Principle},
  booktitle = {Proceedings, POPL 80},
  pages = {234--244},
  year = {1980}}

@techreport{Deme92z,
  author = {Serge Demeyer},
  title = {A survey of Object-Oriented Databases},
  year = {1992},
  abstract = {This paper tries to give an overview of the current
object oriented data base (OODB) technology. It is
intended for readers that had occasional experience
with computer programming, so technical details are
avoided whenever possible. Rather, we did try to
explain the meaning of certain key-concepts so the
reader is able to understand the possibilities and
capabilities of the technology. This will be done by
sketching the evolution of the 'database' and
'programming language' communities, each of which
has led to some important concepts.At the end an
overview of various object oriented databases (both
commercial systems and research prototypes) is
included.},
  institution = {vub},
  month = may,
  type = {technical report}}

@inproceedings{Deme94m,
  author = {Serge Demeyer and Patrick Steyaert and Koen De Hondt},
  title = {Techniques for Building Open Hypermedia Systems},
  booktitle = {Proceedings of the 1rst Workshop on Open Hypermedia Systems --- Hypertext '94},
  publisher = {Institute for Electronic Systems --- Department of Mathematics and Computer Science --- Frederik Bajers Vej 7 --- DK 9220 Aalborg --- Denmark},
  year = {1994},
  url = {http://www.iam.unibe.ch/~demeyer/Deme94m/ http://www.iam.unibe.ch/~demeyer/Deme94m/tchohs.html http://www.daimi.aau.dk/~kock/OHS-ECHT94/},
  abstract = {This paper describes a methodology the authors found
very useful in the development of open systems for
object-oriented languages, user-interface builders
and hypermedia. We promote the idea of "open
designs" as being a key factor for success and
discuss software engineering techniques useful in
implementing such designs.},
  editor = {Uffe Kock Wiil and Kasper Osterbye},
  month = sep,
  series = {R-94-2038}}

@techreport{Deme94z,
  author = {Serge Demeyer},
  title = {Virtual Hypertext Based on Paths and Warm Links},
  year = {1994},
  url = {http://www.iam.unibe.ch/~demeyer/Deme94z/ http://www.iam.unibe.ch/~demeyer/Deme94z/vrthypt.html http://progwww.vub.ac.be/papers/paperquery.html},
  abstract = {Throughout the last years a huge amount of work has
been devoted to the definition of hypertext models.
Even more resources have been directed towards the
domain of virtual (dynamic/ computational)
hypertext, among others motivated by the idea of
building open systems. Surprisingly enough, almost
nobody stressed the role of the underlying model in
such virtual systems. That is precisely the aim of
this text: to define a general hypertext model that
is able to support the notion of virtuality. Our
assertion is that the combination of the ancient
concepts 'Paths' and 'Warm Links' provide just the
extra support needed. Moreover this allows for a
model where links are but one of the possible ways
to relate nodes. While experimenting with the model,
an interesting question arose: do bi-directional
links fit into a virtual model ? This paper attempts
to answer the question. We chose a constructive
approach, because our aim was to create a laboratory
where ideas concerning virtual hypertext might be
explored. We applied recent viewpoints from the
field of software engineering (namely object
oriented frameworks and mixins) to assist the
iterative design process. In order to show the value
of the work, we have implemented two prototype
applications. The first is a browser for viewing
(Smalltalk) source code which includes query
facilities, the second is an electronic agenda.
These experiments demonstrate three desired
properties of the model: the applicability
(considering the differences between the
prototypes), the open endedness (since it is able to
establish hypertext structures on top of underlying
foreign constructions) and the extensibility (while
building the applications, we continued to expand
the model).},
  institution = {vub},
  month = jun}

@techreport{Deme95z,
  author = {Serge Demeyer},
  title = {Ending the Tyranny of the Link: Adding Paths to the Dexter-model},
  year = {1995},
  url = {http://www.iam.unibe.ch/~demeyer/Deme95z/ http://www.iam.unibe.ch/~demeyer/Deme95z/dxpath.html http://progwww.vub.ac.be/papers/paperquery.html},
  abstract = {Hypermedia technology is a potential benefit for all
computer applications that deal with information. To
penetrate new markets, hypermedia systems should be
tailorable to specific application domains. We claim
that an open, extensible hypermedia system is
crucial to attain such tailorability. A hypermedia
system should be capable to integrate 1) facilities
for incorporating vendor-independent document
viewers and 2) flexible linking facilities that
access external information repositories. This
document describes how we extended the Dexter model
with the "path" concept, to model hypermedia systems
with extensible link engines. We show that paths
absorb the notion of links and make it possible to
integrate various strategies for resolving links.
This proves our claim that "paths end the tyranny of
the link". This is demonstrated with a case from the
Software Engineering Community: a framework browser.
The case involves a hypermedia system that
integrates a home-cooked world-wide web browser, an
off-the-shelf word processor (Microsoft Word) and a
programming environment for Smalltalk (VisualWorks).
Besides interpreting embedded (HTML style) anchors,
the system is able to query the Smalltalk
environment to link documentation to Smalltalk
source code. The case serves as a proof of concept
that an extensible hypermedia system can penetrate
specific application domains.},
  institution = {vub},
  month = mar}

@phdthesis{Deme96a,
  author = {Serge Demeyer},
  title = {{ZYPHER} Tailorability as a link from Object-Oriented Software Engineering to Open Hypermedia},
  year = {1996},
  school = {Vrije Universiteit Brussel (Belgium), Department of Computer Science},
  url = {http://www.iam.unibe.ch/~demeyer/Deme96a/ http://www.iam.unibe.ch/~demeyer/Zypher/ http://dinf.vub.ac.be/~demeyer/Zypher/},
  abstract = {The dissertation concerns a study of state of the
art object-oriented software engineering applied
within the domain of open hypermedia systems. The
results of this study are discussed within the
context of a software artefact named Zypher. The
scientific contribution of this work is situated in
the domain of object-oriented software engineering.
The contribution is a proper combination of
frameworks and meta-object protocols, which are two
promising techniques in object-oriented software
engineering. We show that, when combining both
approaches, explicit representations of framework
contracts are part of a meta-object protocol. This
insight is valuable in the design of meta-object
protocols.},
  month = jul}

@techreport{Deme96b,
  author = {Serge Demeyer and Theo Dirk Meijler and Robb Nebbe},
  title = {State-of-the-Art in Software Models},
  year = {1996},
  institution = {University of Bern},
  month = nov}

@techreport{Deme96c,
  author = {Wolfgang De Meuter and Tom Mens and Patrick Steyaert},
  title = {Agora: Reintroducing Safety in Prototype-based Languages},
  year = {1996},
  institution = {Programming Technology Lab, Vrije Universiteit Brussel}}

@inproceedings{Deme96m,
  author = {Serge Demeyer and Patrick Steyaert and Koen De Hondt and Wim Codenie and Roel Wuyts and Theo D'Hondt},
  title = {The Zypher Meta Object Protocol},
  booktitle = {Proceedings of the 2nd Workshop on Open Hypermedia Systems --- Hypertext '96},
  pages = {15--23},
  publisher = {Department of Information and Computer Science --- University of California Irvine --- CA 92717-3425},
  year = {1996},
  url = {http://www.iam.unibe.ch/~demeyer/Deme96m/ http://www.iam.unibe.ch/~demeyer/Deme96m/psstmnt.html http://www.daimi.aau.dk/~kock/OHS-HT96/ http://progwww.vub.ac.be/papers/paperquery.html},
  abstract = {This paper discusses the necessity of a meta object
protocol in the design of an open hypermedia system.
It shows that a meta object protocol enables to
tailor the behaviour and configuration of the
hypermedia system, independent of its constituting
elements. The approach is demonstrated by means of
the Zypher Open Hypermedia Framework, where the meta
object protocol eases the incorporation of system
services (i.e. caching, logging, authority control
and integrity control) and flexible reconfiguration
(i.e. run-time extensibility and cross-platform
portability).},
  editor = {Uffe Kock Wiil and Serge Demeyer},
  month = apr,
  note = {UCI-ICS Technical Report 96-10}}

@book{Deme97a,
  title = {Proceedings of the {ESEC}/{FSE} Workshop on Object-Oriented Re-engineering},
  publisher = {Technical University of Vienna --- Information Systems Institute --- Distributed Systems Group},
  year = {1997},
  url = {http://www.iam.unibe.ch/~demeyer/Deme97a/},
  editor = {Serge Demeyer and Harald Gall},
  month = sep,
  series = {TUV-1841-97-10}}

@article{Deme97b,
  author = {Serge Demeyer and Theo Dirk Meijler and Oscar Nierstrasz and Patrick Steyaert},
  title = {Design Guidelines for Tailorable Frameworks},
  journal = {Communications of the ACM},
  volume = {40},
  pages = {60--64},
  publisher = {ACM Press},
  year = {1997},
  url = {http://scg.unibe.ch/archive/papers/Deme97bDesignGuidelines.pdf},
  doi = {10.1145/262793.262805},
  abstract = {Since the early 1980s, object-oriented frameworks
have demonstrated that programmers can encapsulate a
reusable, tailorable software architecture as a
collection of collaborating, extensible object
classes. Such frameworks are particularly important
for developing open systems in which not only
functionality but architecture is reused across a
family of related applications. Unfortunately, the
design of frameworks remains an art rather than a
science, because of the inherent conflict between
reuse --- packaging software components that can be
reused in as many contexts as possible --- and
tailorability --- designing software architectures
easily adapted to target requirements.},
  month = oct,
  number = {10}}

@unpublished{Deme97c,
  author = {Serge Demeyer},
  title = {{Tool} {Support} for {Object}--{Oriented} {Re}--engineering. {F}{A}{M}{O}{O}{S} --- {Lessons} {Learned} {II}},
  year = {1997},
  month = feb,
  note = {3rd FAMOSS Re--engineering workshop, March 1997, Karlsruhe Germany}}

@inproceedings{Deme97m,
  author = {Serge Demeyer},
  title = {A Framework Browser Scenario},
  booktitle = {Proceedings of the 3rd Workshop on Open Hypermedia Systems --- Hypertext '97},
  pages = {26--36},
  publisher = {The Danish National Centre for IT Research --- Forskerparken Gustav Wieds Vej 10 --- DK-8000 Aarhus C --- Denmark},
  year = {1997},
  url = {http://www.iam.unibe.ch/~demeyer/Deme97m/ http://www.iam.unibe.ch/~demeyer/Deme97m/OHWS3scenaria.html http://www.daimi.aau.dk/~kock/OHS-HT97/},
  abstract = {This document describes a hypothetical "Framework
Browser" in the form of a scenario describing the
ideal framework programming environment.},
  editor = {Uffe Kock Wiil},
  month = apr,
  series = {CIT Scientific report SR-97-01}}

@inproceedings{Deme97n,
  author = {Serge Demeyer and Theo Dirk Meijler and Matthias Rieger},
  title = {Towards Design Pattern Transformations},
  booktitle = {Object-Oriented Technology (ECOOP '97 Workshop Reader)},
  volume = 1357,
  pages = {280--281},
  publisher = {Springer-Verlag},
  year = {1997},
  url = {http://www.iam.unibe.ch/~demeyer/Deme97n/ http://www.iam.unibe.ch/~demeyer/Deme97n/ECOOP97.html},
  abstract = {-No abstract, the paper is only 2 pages-},
  editor = {Jan Bosch and Stuart Mitchell},
  month = jun,
  series = {LNCS}}

@article{Deme98a,
  author = {Serge Demeyer and Koen De Hondt and Patrick Steyaert},
  title = {Consistent Framework Documentation with Computed Links and Framework Contracts},
  journal = {Computing Surveys},
  publisher = {ACM},
  year = {1998},
  url = {http://www.iam.unibe.ch/~demeyer/Deme98a/ http://www.iam.unibe.ch/~demeyer/Deme98a/paper.html},
  abstract = {Since an object-oriented framework is an evolving
artifact, ensuring consistency between its
documentation and its implementation is difficult.
This paper reports on the use of open hypermedia to
keep framework documentation up-to-date. In
particular, we demonstrate how one can feed
framework contracts into computational hypermedia
links to ensure the consistency between the source
code and the framework cookbook.},
  note = {To appear in March 2000}}

@book{Deme98c,
  title = {Object-Oriented Technology ({ECOOP}'98 Workshop Reader)},
  volume = {1543},
  publisher = {Springer-Verlag},
  year = {1998},
  address = {Kaiserslautern, Germany},
  editor = {Serge Demeyer and Jan Bosch},
  isbn = {3-540-65460-7-(Donation-Serge)},
  month = dec,
  series = {LNCS}}

@article{Deme98m,
  author = {Serge Demeyer and Harald Gall},
  title = {Workshop on Object-Oriented Re-engineering ({WOOR}'97)},
  journal = {Software Engineering Notes},
  volume = {23},
  pages = {28--29},
  publisher = {ACM},
  year = {1998},
  url = {http://scg.unibe.ch/archive/famoos/ESEC97/WOOR97rprt.html},
  month = jan,
  number = {1}}

@inproceedings{Deme98o,
  author = {Serge Demeyer},
  title = {Analysis of Overridden Methods to Infer Hot Spots},
  booktitle = {Object-Oriented Technology (ECOOP '98 Workshop Reader)},
  volume = {1543},
  publisher = {Springer-Verlag},
  year = {1998},
  url = {http://www.iam.unibe.ch/~demeyer/Deme98o/ http://www.iam.unibe.ch/~demeyer/Deme98o/paper.html},
  editor = {Serge Demeyer and Jan Bosch},
  series = {LNCS}}

@misc{Deme98p,
  author = {Serge Demeyer and Matthias Rieger and Sander Tichelaar},
  title = {Three Reverse Engineering Patterns},
  year = {1998},
  url = {http://scg.unibe.ch/archive/papers/Deme98pThreeRevEngPatterns.pdf},
  abstract = {Whereas a design pattern describes and discusses a
solution to a design problem, a reverse engineering
pattern describes how to understand aspects of an
object-oriented design and how to identify problems
in that design. In the context of a project
developing a methodology for reengineering
object-oriented legacy systems into frameworks,
weare working on a pattern language for
reengineering. This paper presents three samples of
that pattern language, all dealing with reverse
engineering.},
  month = apr,
  note = {Writing Workshop at EuroPLOP '98}}

@inproceedings{Deme98q,
  author = {De Meuter, Wolfgang},
  title = {Agora: The Story of the Simplest {MOP} in the World --- or --- The Scheme of Object--Orientation},
  booktitle = {Prototype-based Programming},
  publisher = {Springer-Verlag},
  year = {1998},
  editor = {J. Noble and I. Moore and A. Taivalsaari}}

@article{Deme99b,
  author = {Serge Demeyer and Matthias Rieger and Theo Dirk Meijler and Edzard Gelsema},
  title = {Class Composition for Specifying Framework Design},
  journal = {Theory and Practice of Object Systems (TAPOS)},
  volume = {5},
  pages = {73--81},
  publisher = {John Wiley \& Sons},
  year = {1999},
  url = {http://scg.unibe.ch/archive/papers/Deme99bClassComposition.pdf},
  abstract = {Object-oriented frameworks are a particularly
appealing approach towards software reuse. An
object-oriented framework represents a design for a
family of applications, where variations in the
application domain are tackled by filling in the
so-called hot spots. However, experience has shown
that the current object-oriented mechanisms (class
inheritance and object composition) are not able to
elegantly support the "fill in the hot spot" idea.
This paper introduces class composition as a more
productive approach towards hot spots, offering all
of the advantages of both class inheritance and
object composition but involving extra work for the
framework designer.},
  month = apr,
  number = {2}}

@misc{Deme99e,
  author = {Isabelle Borne and Serge Demeyer and Galal Hassan Galal},
  title = {Proceedings of the {ECOOP}'99 Workshop on Object-Oriented Architectural Evolution},
  year = {1999},
  url = {http://www.iam.unibe.ch/~demeyer/Deme99e/ http://www.emn.fr/borne/ECOOP99-OOAE.html},
  month = jun}

@book{Deme99f,
  title = {Proceedings of the {ESEC}/{FSE}'99 Workshop on Object-Oriented Re-engineering ({WOOR}'99)},
  publisher = {Technical University of Vienna --- Information Systems Institute --- Distributed Systems Group},
  year = {1999},
  url = {http://www.iam.unibe.ch/~demeyer/Deme99f/},
  doi = {10.1145/340855.340857},
  editor = {Serge Demeyer and Harald Gall},
  month = sep,
  series = {TUV-1841-99-13}}

@inproceedings{Deme99m,
  author = {Serge Demeyer},
  title = {Structural Computing: The Case for Reengineering Tools},
  booktitle = {Proceedings of the 1st Workshop on Structural Computing --- Hypertext '99},
  year = {1999},
  abstract = {-No abstract, the paper is only 2 pages-},
  editor = {Peter Nuernberg},
  month = feb}

@inproceedings{Demer95a,
  author = {Demers, Francois-Nicola and Malenfant, Jacques},
  title = {Reflection in logic, functional and object-oriented programming: a Short Comparative Study},
  booktitle = {IJCAI'95 Workshop on Reflection and Metalevel Architectures and their Applications in AI},
  year = {1995}}

@article{Demi79a,
  author = {DeMillo, Richard A and Lipton, Richard J and Sayward, Frederick G},
  title = {Program mutation: A new approach to program testing},
  journal = {Infotech State of the Art Report, Software Testing},
  volume = {2},
  pages = {107--126},
  publisher = {Infotech International},
  year = {1979},
  number = {1979}}

@inproceedings{Demi91a,
  author = {DeMillo, Richard A and Krauser, Edward W and Mathur, Aditya P},
  title = {Compiler-integrated program mutation},
  booktitle = {1991 The Fifteenth Annual International Computer Software \& Applications Conference},
  pages = {351--352},
  year = {1991},
  organization = {IEEE Computer Society}}

@inproceedings{Dems02a,
  author = {Brian Demsky and Martin Rinard},
  title = {Role-based exploration of object-oriented programs},
  booktitle = {Proceedings of the 24th International Conference on Software Engineering (ICSE'02)},
  pages = {313--324},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/581339.581379},
  address = {New York, NY, USA},
  isbn = {1-58113-472-X},
  location = {Orlando, Florida}}

@inproceedings{Deni00a,
  author = {Guy Saint-Denis and Reinhard Schauer and Rudolf K. Keller},
  title = {Selecting a Model Interchange Format. The {SPOOL} Case Study},
  booktitle = {Proceedings of the Thirty-Third Annual Hawaii International Conference on System Sciences},
  year = {2000}}

@article{Denn70a,
  author = {Denning, Peter J.},
  title = {Virtual Memory},
  journal = {ACM Comput. Surv.},
  volume = {2},
  pages = {153--189},
  publisher = {ACM},
  year = {1970},
  doi = {10.1145/356571.356573},
  acmid = {356573},
  address = {New York, NY, USA},
  issn = {0360-0300},
  issue_date = {Sept. 1970},
  month = sep,
  number = {3},
  numpages = {37}}

@article{Denn80,
  author = {Peter Denning},
  title = {Working Sets Past and Present},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-6},
  pages = {64--84},
  publisher = {IEEE Press},
  year = {1980},
  doi = {10.1109/TSE.1980.230464},
  month = jan,
  number = {1}}

@proceedings{Denn96a,
  title = {Languages et Mod\`eles \`a Objets},
  booktitle = {Actes LMO '96},
  publisher = {EPFL},
  year = {1996},
  misc = {16-18 Octobre},
  address = {Leysin, Suisse},
  editor = {Yves Dennebouy},
  month = oct}

@inproceedings{Dent97a,
  author = {Enrico Denti and Antonio Natali and Andrea Omicini},
  title = {Programmable Coordination Medium},
  booktitle = {Proceedings of COORDINATION '97 (Coordination Languages and Models},
  volume = 1282,
  pages = {274--288},
  publisher = {Springer-Verlag},
  year = {1997},
  editor = {David Garlan and Daniel Le M{\'e}tayer},
  series = {LNCS}}

@book{Deo74a,
  author = {Deo, N.},
  title = {Graph Theory with Applications to Engineering and Computer Science},
  publisher = {Prentice-Hall, Inc. Upper Saddle River, NJ, USA},
  year = {1974}}

@inproceedings{Deri96a,
  author = {Luca Deri},
  title = {Network Management for the 90s},
  booktitle = {ECOOP '96 Workshop on 'OO Technologies For Network and Service Management' Proceedings},
  year = {1996},
  abstract = {The increasing complexity and heterogeneity of
modern networks has pushed industry and research
towards a single and consistent way of managing
networks. The effort to define a single
industry-standard {API} for network management
basically failed because it did not address aspects
like complexity and ease of programming. Recently, a
common approach is to map established network
management standards into another object model,
often based on the emerging Corba standard.
Unfortunately even this approach has shown many
drawbacks related primarily to the significant
amount of code that has to be linked with the final
application and to the many limitations and
imperfections of the mapping itself. This paper
describes a new approach to inter-domain management
that attempts to overcome the limitations of current
solutions. The goal is to allow people to write
hybrid CMIP and SNMP-based network management
applications using a single and simple object model.
Relevant characteristics of this approach are that
it is light, extensible, object-oriented,
language-neutral, built upon software-components,
string-syntax based and Internet-ready. This
demonstrates that it is feasible to implement simple
and light applications for inter-domain management
without the need for expensive or complex
technologies.},
  brokenurl = {http://www.zurich.ibm.com/~lde/SimpleNM.ps.Z},
  month = jul}

@inproceedings{Deri96b,
  author = {Luca Deri},
  title = {Surfin' Network Resources Across the Web},
  booktitle = {2nd International IEEE Workshop on Systems Management Proceedings},
  pages = {158--167},
  year = {1996},
  abstract = {Network management standards provide a basis for
hiding differences between network resources, along
with a method of managing them in a consistent way.
Frequently, network management tools are based on
proprietary products and are often complex both to
use and to install. The increasing popularity of the
World Wide Web, with its established user interface
and the ability to run on almost any platform,
offers a new way to provide wide access to complex
software applications. This paper describes the
architecture and implementation of two new network
management applications that are accessible through
the web and are targeted to run on powerful hosts as
well as small mobile computers. The GDMO/ASN.1
Search Engine enables users to perform complex
queries and to navigate OSI management documents
exploiting the web hypertext facilities. Liaison is
a web-based browser for CMIP/SNMP agents equipped
with powerful tools such as a directory service and
a metadata facility.},
  brokenurl = {http://www.zurich.ibm.com/~lde/Surfin.ps.Z},
  month = jun}

@phdthesis{Deri97a,
  author = {Luca Deri},
  title = {A Component-based Architecture for Open, Independently Extensible Distributed Systems},
  year = {1997},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/deri-phd.pdf},
  month = jun,
  type = {{Ph.D}. Thesis}}

@article{Derr85a,
  author = {Nigel Derrett and William Kent and P. Lyngbaek},
  title = {Some Aspects of Operations in an Object-Oriented Database},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {66--74},
  year = {1985},
  month = dec,
  number = {4}}

@inproceedings{Ders93a,
  author = {N. Deshowitz},
  title = {Trees, Ordinals and Termination},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {243--250},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@inproceedings{DesR88a,
  author = {Jim des Rivi\`eres},
  title = {Control-{Related} {Meta}-{Level} {Facilities} in {LISP}},
  booktitle = {Meta-level Architectures and Reflection},
  pages = {101--110},
  year = {1988},
  editor = {North-Holland, P. Maes and D. Nardi}}

@inproceedings{Desf00a,
  author = {Desfray, P},
  title = {UML Profiles versus Metamodeling Extensions. . . an Ongoing Debate},
  booktitle = {Uml In The.Com Enterprise: Modeling CORBA, Components, XML/XMI And Metadata Workshop},
  pages = {6--9},
  year = {2000}}

@inproceedings{Desm06a,
  author = {Brecht Desmet and Jorge Vallejos and Pascal Costanza},
  title = {Introducing Mixin Layers to Support the Development of Context-Aware Systems},
  booktitle = {3rd European Workshop on Aspects in Sofware (EWAS 2006)},
  year = {2006},
  url = {http://p-cos.net/documents/mixin-layers.pdf},
  address = {University of Twente, Enschede, The Netherlands},
  month = aug}

@inproceedings{Desm06b,
  author = {Brecht Desmet and Jorge Vallejos Vargas and Stijn Mostinckx and Pascal Costanza},
  title = {Using Mixin Layers for Context-Aware and Self-Adaptable Systems},
  booktitle = {ECOOP 2006 Workshop on Object Technology for Ambient Intelligence and Pervasive Computing (OT4AmI)},
  year = {2006},
  url = {http://p-cos.net/documents/vub-prog-tr-06-14.pdf},
  address = {Nantes, France},
  month = jul}

@inproceedings{Desm06c,
  author = {Michael Desmond and Margaret-Anne Storey and Chris Exton},
  title = {Fluid Source Code Views},
  booktitle = {{ICPC} '06: Proceedings of the 14th IEEE International Conference on Program Comprehension ({ICPC}'06)},
  pages = {260--263},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/{ICPC}.2006.24},
  address = {Washington, DC, USA},
  isbn = {0-7695-2601-2}}

@inproceedings{Desm06d,
  author = {Desmet, Lieven and Piessens, Frank and Joosen, Wouter and Verbaeten, Pierre},
  title = {Static verification of indirect data sharing in loosely-coupled component systems},
  booktitle = {Proceedings of the 5th international conference on Software Composition},
  pages = {34--49},
  publisher = {Springer-Verlag},
  year = {2006},
  acmid = {2164968},
  address = {Berlin, Heidelberg},
  isbn = {3-540-37657-7, 978-3-540-37657-6},
  location = {Vienna, Austria},
  numpages = {16},
  series = {SC'06}}

@article{Desm08a,
  author = {Desmet, Lieven and Verbaeten, Petrus and Joosen, Wouter and Piessens, Frank},
  title = {Provable protection against web application vulnerabilities related to session data dependencies},
  journal = {IEEE transactions on software engineering},
  volume = {34},
  pages = {50--64},
  year = {2008},
  url = {https://lirias.kuleuven.be/handle/123456789/161855},
  doi = {10.1109/TSE.2007.70742},
  issn = {0098-5589},
  month = jan,
  number = {1}}

@inproceedings{Dest18a,
  author = {Giuseppe Destefanis and Michele Marchesi and Marco Ortu and Roberto Tonelli and Andrea Bracciali and Robert M. Hierons},
  title = {Smart contracts vulnerabilities: a call for blockchain software engineering?},
  booktitle = {2018 International Workshop on Blockchain Oriented Software Engineering (IWBOSE)},
  pages = {19--25},
  year = {2018},
  url = {https://doi.org/10.1109/IWBOSE.2018.8327567},
  doi = {10.1109/IWBOSE.2018.8327567},
  keywords = {smart contract, blockchain}}

@book{Deti01a,
  author = {D{\'e}tienne, Fran{\c{c}}oise},
  title = {Software design--cognitive aspect},
  publisher = {Springer Science \& Business Media},
  year = {2001}}

@inproceedings{Detl99a,
  author = {David Detlefs and Ole Agesen},
  title = {Inlining of Virtual Methods},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {258--278},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {We discuss aspects of inlining of virtual method
invocations. First, we introduce a new method test
to guard inlinings of such invocations, with a
different set of tradeoffs from the class-equality
tests proposed previously in the literature. Second,
we consider the problem of inlining virtual methods
directly, with no guarding test, in dynamic
languages such as Self or the {Java} (TM)
programming language, whose semantics prohibit a
static identification of the complete set of modules
that comprise a program. In non-dynamic languages, a
whole-program analysis might prove the correctness
of a direct virtual inlining. In dynamic languages,
however, such analyses can be invalidated by later
class loading, and must therefore be treated as
assumptions whose later violation must cause
recompilation. In the past, such systems have
required an on-stack replacement mechanism to update
currently-executing invocations of methods
containing invalidated inlinings. This paper
presents analyses that allow some virtual calls to
be inlined directly, while ensuring that invocations
in progress may complete safely even if class
loading invalidates the inlining for future
invocations. This provides the benefits of direct
inlining without the need for on-stack replacement,
which can be complicated and require space-consuming
data structures.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@article{Deur00a,
  author = {van Deursen, Arie and Paul Klint and Joost Visser},
  title = {Domain-Specific Languages: An Annotated Bibliography},
  journal = {ACM SIGPLAN Notices},
  volume = {35},
  pages = {26--36},
  year = {2000},
  url = {http://homepages.cwi.nl/~arie/papers/dslbib.pdf},
  doi = {10.1145/352029.352035},
  month = jun,
  number = {6}}

@inproceedings{Deur01a,
  author = {van Deursen, Arie and Leon Moonen andvan den Bergh, Alex and Gerard Kok},
  title = {Refactoring Test Code},
  booktitle = {Proceedings of the 2nd International Conference on Extreme Programming and Flexible Processes (XP2001)},
  pages = {92--95},
  publisher = {University of Cagliari},
  year = {2001},
  editor = {M. Marchesi}}

@inproceedings{Deur01b,
  author = {van Deursen, Arie},
  title = {Program Comprehension Risks and Opportunities in Extreme Programming},
  booktitle = {Working Conference on Reverse Engineering},
  pages = {176-},
  year = {2001}}

@inproceedings{Deur02a,
  author = {van Deursen, Arie and Leon Moonen},
  title = {The Video Store Revisited --- Thoughts on Refactoring and Testing},
  booktitle = {Proceedings of the 3nd International Conference on Extreme Programming and Flexible Processes in Software Engineering (XP2002)},
  year = {2002},
  editor = {M. Marchesi and G. Succi},
  month = may}

@inproceedings{Deur04a,
  author = {van Deursen, Arie and Hofmeister, Christine and Koschke, Rainer and Moonen, Leon and Riva, Claudio},
  title = {Symphony: View-Driven Software Architecture Reconstruction},
  booktitle = {Proceedings of the Fourth Working IEEE/IFIP Conference on Software Architecture (WICSA)},
  pages = {122--134},
  year = {2004},
  url = {http://csdl.computer.org/comp/proceedings/wicsa/2004/2172/00/21720122abs.htm}}

@inproceedings{Deur97a,
  author = {van Deursen, Arie and Paul Klint},
  title = {Little Languages: Little Maintenance?},
  booktitle = {First ACM-SIGPLAN Workshop on Domain-Specific Languages; DSL'97},
  pages = {109--127},
  year = {1997},
  editor = {S. Kamin},
  month = jan}

@inproceedings{Deur98a,
  author = {van Deursen, Arie and Leon Moonen},
  title = {Type Inference for COBOL Systems},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {220--229},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Deur99a,
  author = {van Deursen, Arie and Tobias Kuipers},
  title = {Building Document Generators},
  booktitle = {Proceedings {ICSM}'99 (International Conference on Software Maintenance)},
  pages = {40--49},
  publisher = {IEEE},
  year = {1999},
  editor = {Hongji Yang and Lee White},
  month = sep}

@inproceedings{Deur99b,
  author = {van Deursen, Arie and Tobias Kuipers},
  title = {Identifying objects using cluster and concept analysis},
  booktitle = {ICSE},
  pages = {246--255},
  publisher = {IEEE Press},
  year = {1999},
  abstract = {Many approaches to support (semi-automatic)
identification of objects in legacy code take the
data structures as starting point for candidate
classes. Unfortunately, legacy data structures tend
to grow over time, and may contain many unrelated
fields at the time of migration. We propose a method
for identifying objects by semi-automatically
restructuring the legacy data structures. Issues
involved include the selection of record fields of
interest, the identification of procedures actually
dealing with such fields, and the construction of
coherent groups of fields and procedures into
candidate classes. We explore the use of cluster and
concept analysis for the purpose of object
identification, and we illustrate their effect on a
100,000 LOC Cobol system. Furthermore, we use these
results to contrast clustering with concept analysis
techniques.}}

@article{Deut76a,
  author = {L. Peter Deutsch and Daniel G. Bobrow},
  title = {An Efficient, Incremental Garbage Collector},
  journal = {CACM},
  volume = {19},
  pages = {522--526},
  year = {1976},
  month = sep,
  number = {9}}

@inproceedings{Deut84a,
  author = {L. Peter Deutsch and Allan M. Schiffman},
  title = {Efficient Implementation of the {Smalltalk}-80 system},
  booktitle = {Proceedings POPL '84},
  year = {1984},
  misc = {Jan. 15-18},
  doi = {10.1145/800017.800542},
  address = {Salt Lake City, Utah},
  month = jan}

@inproceedings{Deut89a,
  author = {L. Peter Deutsch},
  title = {The Past, Present and Future of {Smalltalk}},
  booktitle = {Proceedings ECOOP '89},
  pages = {73--87},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@book{Deut89b,
  author = {L. Peter Deutsch},
  title = {Design Reuse and Frameworks in the {Smalltalk}-80 System Software Reusability},
  volume = {II},
  pages = {57--71},
  publisher = {ACM Press \& Addison Wesley},
  year = {1989},
  address = {Reading, Mass.}}

@article{Deux90a,
  author = {O. Deux and et al.},
  title = {The Story of O2},
  journal = {IEEE Transactions on Knowledge and Data Engineering},
  volume = {2},
  pages = {91--108},
  year = {1990},
  abstract = {This is a complete description of the O2 system. O2
is an object-oriented database system. It thus has
the functionality of a DBMS (persistence, disk
management, sharing, and query language) and that of
an object-oriented system (complex objects, object
identity, encapsulation, typing, inheritance,
overriding, extensibility, and completeness). It
also includes a set of user interface generation
tools and a complete programming environment. O2
supports a multilanguage paradigm, a dual mode of
operation (development and execution), and operates
on a workstation/server configuration. We describe
the system as seen from the programmer's point of
view, and as seen through the programming
environment. We also provide a complete description
of the implementation. Finally, we give an
evaluation of the prototype.},
  month = mar,
  number = {1}}

@inproceedings{Deva15a,
  author = {Devanbu, Premkumar},
  title = {New initiative: the naturalness of software},
  booktitle = {Proceedings of the 37th International Conference on Software Engineering-Volume 2},
  pages = {543--546},
  year = {2015},
  organization = {IEEE Press}}

@article{Deva91a,
  author = {P. Devanbu and R. Brachman and P. Selfridge and B. Ballard},
  title = {LaSSIE: {A} Knowledge-Based Software Information System},
  journal = {CACM},
  volume = {34},
  pages = {34--49},
  year = {1991},
  month = may,
  number = {5}}

@article{Deve84a,
  author = {J. Devereux and P. H{\"a}berli and O. Smithies},
  title = {A Comprehensive Set of Sequence Analysis Programs for the {VAX}},
  journal = {Nucleic Acids Research},
  volume = {12},
  pages = {395--397},
  year = {1984}}

@inproceedings{Devi09a,
  author = {Devietti, Joseph and Lucia, Brandon and Ceze, Luis and Oskin, Mark},
  title = {DMP: Deterministic shared memory multiprocessing},
  booktitle = {Proceedings of the 14th international conference on Architectural support for programming languages and operating systems},
  pages = {85--96},
  year = {2009}}

@inproceedings{Devi15a,
  author = {DeVito, Zachary and Hanrahan, Pat},
  title = {The {Design} of {Terra}: {Harnessing} the {Best} {Features} of {High}-{Level} and {Low}-{Level} {Languages}},
  journal = {SNAPL'15},
  booktitle = {Summit on Advances in Programming Languages},
  year = {2015},
  pdf = {https://drops.dagstuhl.de/opus/volltexte/2015/5018/pdf/8.pdf},
  abstract = {Applications are often written using a combination of high-level and low-level languages since it allows performance critical parts to be carefully optimized, while other parts can be written more productively. This approach is used in web development, game programming, and in build systems for applications themselves. However, most languages were not designed with interoperability in mind, resulting in glue code and duplicated features that add complexity. We propose a two-language system where both languages were designed to interoperate. Lua is used for our high-level language since it was originally designed with interoperability in mind. We create a new low-level language, Terra, that we designed to interoperate with Lua. It is embedded in Lua, and meta-programmed from it, but has a low level of abstraction suited for writing high-performance code. We discuss important design decisions compartmentalized runtimes, glue-free interoperation, and meta-programming features that enable Lua and Terra to be more powerful than the sum of their parts.}}

@inproceedings{Devo98a,
  author = {Martine Devos and Michel Tilman},
  title = {Incremental development of a repository-based framework supporting organizational inquiry and learning},
  booktitle = {OOPSLA'98 Practioner's Report},
  year = {1998}}

@inproceedings{Devr16a,
  author = {Devroey, Xavier and Perrouin, Gilles and Papadakis, Mike and Legay, Axel and Schobbens, Pierre-Yves and Heymans, Patrick},
  title = {Featured Model-Based Mutation Analysis},
  booktitle = {2016 IEEE/ACM 38th International Conference on Software Engineering ({ICSE})},
  pages = {655-666},
  year = {2016},
  doi = {10.1145/2884781.2884821}}

@misc{Dewa00a,
  author = {Rick Dewar et al.},
  title = {PublicReengineering Wiki},
  note = {http://www.dcs.ed.ac.uk/home/rgd/wiki/html/PublicReengineering/ReengineeringPatterns.htm}}

@inproceedings{Dewa99a,
  author = {Rick Dewar},
  title = {Characteristics of Legacy System Reengineering},
  booktitle = {Proceedings of EuroPLoP 1999},
  year = {1999},
  url = {http://www.argo.be/europlop/writers.htm}}

@book{Dewd93a,
  author = {A. K. Dewdney},
  title = {The {Tinkertoy} Computer and Other Machinations},
  publisher = {W. H. Freeman and Company},
  year = {1993}}

@inproceedings{Dewh87a,
  author = {S.C. Dewhurst},
  title = {Object Representation of Scope During Translation},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {71--78},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@book{Dews07a,
  author = {Dewsbury, Ryan},
  title = {Google web toolkit applications},
  publisher = {Pearson Education},
  year = {2007}}

@article{Dey01a,
  author = {Anind K. Dey},
  title = {Understanding and Using Context},
  journal = {Personal Ubiquitous Computing},
  volume = {5},
  pages = {4--7},
  publisher = {Springer-Verlag},
  year = {2001},
  doi = {10.1007/s007790170019},
  address = {London, UK},
  issn = {1617-4909},
  number = {1}}

@article{Dey01b,
  author = {Dey, Anind K. and Abowd, Gregory D. and Salber, Daniel},
  title = {A conceptual framework and a toolkit for supporting the r{API}d prototyping of context-aware applications},
  journal = {Human-Computer Interaction},
  volume = {16},
  pages = {97--166},
  publisher = {L. Erlbaum Associates Inc.},
  year = {2001},
  address = {Hillsdale, NJ, USA},
  number = {2}}

@inproceedings{Deza08a,
  author = {Mariangiola Dezani-Ciancaglini and Paola Giannini and Oscar Nierstrasz},
  title = {A Calculus of Evolving Objects},
  booktitle = {Proceedings of the 6th International Workshop on Multiparadigm Programming with Object-Oriented Languages (MPOOL 2008)},
  year = {2008},
  url = {http://homepages.fh-regensburg.de/~mpool/mpool08/programme.html http://scg.unibe.ch/archive/papers/Deza08aEvolvingObjects.pdf},
  abstract = {The demands of developing modern, highly dynamic
applications have led to an increasing interest in
dynamic programming languages and mechanisms. Not
only applications must evolve over time, but the
object models themselves may need to be adapted to
the requirements of different run-time contexts.
Class-based models and prototype-based models, for
example, may need to co-exist to meet the demands of
dynamically evolving applications. Multi-dimensional
dispatch, fine-grained and dynamic software
composition, and run-time evolution of behaviour are
further examples of diverse mechanisms which may
need to co-exist in a dynamically evolving run-time
environment How can we model the semantics of these
highly dynamic features, yet still offer some
reasonable safety guarantees? To this end we present
an original calculus in which objects can adapt
their behaviour at run-time to changing contexts.
Both objects and environments are represented by
first-class mappings between variables and values.
Message sends are dynamically resolved to method
calls. Variables may be dynamically bound, making it
possible to model a variety of dynamic mechanisms
within the same calculus. Despite the highly dynamic
nature of the calculus, safety properties are
assured by a type assignment system.},
  medium = {2},
  note = {Extended version published in Scientific Annals of Computer Science}}

@article{Deza08b,
  author = {Mariangiola Dezani-Ciancaglini and Paola Giannini and Oscar Nierstrasz},
  title = {A Calculus of Evolving Objects},
  journal = {Scientific Annals of Computer Science},
  volume = {XVIII},
  pages = {63-98},
  publisher = {``A.I. Cuza'' University Press, Ia\c si},
  year = {2008},
  url = {http://www.info.uaic.ro/bin/Annals/XVIII http://scg.unibe.ch/archive/papers/Deza08bEvolvingObjects.pdf},
  abstract = {The demands of developing modern, highly dynamic
applications have led to an increasing interest in
dynamic programming languages and mechanisms. Not
only must applications evolve over time, but the
object models themselves may need to be adapted to
the requirements of different run-time contexts.
Class-based models and prototype-based models, for
example, may need to co-exist to meet the demands of
dynamically evolving applications. Multi-dimensional
dispatch, fine-grained and dynamic software
composition, and run-time evolution of behaviour are
further examples of diverse mechanisms which may
need to co-exist in a dynamically evolving run-time
environment. How can we model the semantics of these
highly dynamic features, yet still offer some
reasonable safety guarantees? To this end we present
an original calculus in which objects can adapt
their behaviour at run-time. Both objects and
environments are represented by first-class mappings
between variables and values. Message sends are
dynamically resolved to method calls. Variables may
be dynamically bound, making it possible to model a
variety of dynamic mechanisms within the same
calculus. Despite the highly dynamic nature of the
calculus, safety properties are assured by a type
assignment system.},
  medium = {2},
  organization = {``A.I. Cuza'' University, Ia\c si, Rom\^ania}}

@incollection{Dezan10a,
  author = {Dezani-Ciancaglini, Mariangiola and De'Liguoro, Ugo},
  title = {Sessions and session types: an overview},
  booktitle = {Web Services and Formal Methods},
  pages = {1--28},
  publisher = {Springer},
  year = {2010}}

@incollection{Di12a,
  title={Model transformations},
  author={Di Ruscio, Davide and Eramo, Romina and Pierantonio, Alfonso},
  booktitle={International School on Formal Methods for the Design of Computer, Communication and Software Systems},
  pages={91--136},
  year={2012},
  publisher={Springer}
}

@inproceedings{DiLu01a,
  author = {Guiseppe Antonio {Di Lucca} and Massimiliano {Di Penta} and Anna Rita Fasolino and Pasquale Granato},
  title = {Clone Analysis in the Web Era: an Approach to Identify Cloned Web Pages},
  booktitle = {Proceedings Seventh IEEE Workshop on Empirical Studies of Software Maintenance},
  publisher = {IEEE},
  year = {2001},
  month = oct}

@inproceedings{DiLu02a,
  author = {Guiseppe Antonio {Di Lucca} and Massimiliano {Di Penta} and Anna Rita Fasolino},
  title = {An Approach to Identify Duplicated Web Pages},
  booktitle = {Proceedings of the 26th Annual Computer Software and Application Conference},
  pages = {481--486},
  publisher = {IEEE},
  year = {2002},
  address = {Oxford, England},
  month = aug}

@inproceedings{DiSa07,
  author = {Di Santo, Giuseppe and Zimeo, Eugenio},
  title = {Reversing GUIs to XIML Descriptions for the Adaptation to Heterogeneous Devices},
  booktitle = {Proceedings of the 2007 ACM Symposium on Applied Computing},
  pages = {1456 to 1460},
  publisher = {Association for Computing Machinery},
  year = {2007},
  url = {https://doi.org/10.1145/1244002.1244314},
  doi = {10.1145/1244002.1244314},
  abstract = {The spread of Personal Wireless Devices (PWDs) has raised the need to migrate existing applications to these new environments. Desktop applications often exhibit complex user interfaces and are too large and resource demanding to be executed on devices with limited resources without changing the application code. Current research efforts are mainly focused on Web applications whose user interfaces are specifically designed for multi-platform environments through platform-independent models. On the contrary, little effort has been made to support the migration of applications with component-based GUIs towards PWD environments. This paper presents a tool for reverse engineering Java GUIs through their transformations to XIML-based abstract descriptions. The resulting descriptions are used by the TCPTE framework to be rendered into different GUIs, which are dynamically adapted to heterogeneous devices on the basis of their profile communicated at request time.},
  address = {New York, NY, USA},
  isbn = {1595934804},
  keywords = {software architectures, graphical user interfaces, middleware, reverse engineering},
  location = {Seoul, Korea},
  numpages = {5},
  series = {SAC '07}}

@book{Diac98a,
  author = {R. Diaconescu and K. Futatsugi},
  title = {Cafe{OBJ} Report},
  publisher = {World Scientific},
  year = {1998},
  address = {Singapore}}

@inproceedings{Dias20a,
  author = {Martin Dias and Diego Orellana and Santiago Vidal and Leonel Merino and Alexandre Bergel},
  title = {Evaluating a Visual Approach for Understanding JavaScript Source Code},
  booktitle = {2020 IEEE/ACM 28th International Conference on Program Comprehension ({ICPC})},
  year = {2020}}

@inproceedings{Diaz05a,
  author = {J. Andres Diaz-Pace and Marcelo R. Campo},
  title = {ArchMatE: From Architectural Styles to Object-Oriented Models through Exploratory Tool Support},
  booktitle = {Proceedings of Object Oriented Programming, Systems, Languages, and Applications (OOPSLA'2005)},
  pages = {117--132},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1094811.1094821},
  address = {New York, NY, USA},
  isbn = {1-59593-031-0},
  location = {San Diego, CA, USA}}

@book{Diaz89a,
  title = {Proceedings {TAPSOFT}'89: Volume 1},
  volume = {351},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Barcelona, Spain},
  editor = {J. D\'iaz and F. Orejas},
  isbn = {3-540-53939-9},
  month = mar,
  series = {LNCS}}

@book{Diaz89b,
  title = {Proceedings {TAPSOFT}'89: Volume 2},
  volume = {352},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Barcelona, Spain},
  editor = {J. D\'iaz and F. Orejas},
  isbn = {3-540-53940-2},
  month = mar,
  series = {LNCS}}

@book{Diba99a,
  author = {Giuseppe Di Battista and Peter Eades and Roberto Tamassia and Ioannis G. Tolls},
  title = {Graph Drawing --- Algorithms for the visualization of graphs},
  publisher = {Prentice-Hall},
  year = {1999}}

@inproceedings{Dick01a,
  author = {William Dickinson and David Leon and Andy Podgurski},
  title = {Finding failures by cluster analysis of execution profiles},
  booktitle = {Proceedings of the 23rd international conference on Software engineering},
  pages = {339--348},
  publisher = {IEEE Computer Society},
  year = {2001},
  isbn = {0-7695-1050-7},
  location = {Toronto, Ontario, Canada}}

@inproceedings{Dick95a,
  author = {Herv{\'e} Dicky and Christoph Dony and Marianne Huchard and Th{\'e}r{\`e}se Libourel},
  title = {{ARES}, {Adding} a class and {RES}tructuring {Inhertitance} {Hierarchy}},
  booktitle = {BDA: 11\`emes Journ\'ees Bases de Donn\'ees Avanc\'ees},
  pages = {25--42},
  year = {1995},
  url = {http://www.lirmm.fr/w3arc/fr/publications/1995/},
  location = {Nancy, France}}

@inproceedings{Dick96a,
  author = {Herv{\'e} Dicky and Christoph Dony and Marianne Huchard and Th{\'e}r{\`e}se Libourel},
  title = {On {Automatic} {Class} {Insertion} with {Overloading}},
  booktitle = {Proceedings of {OOPSLA} '96 (11th ACM SIGPLAN conference on Object-oriented Programming, Systems, Languages, and Applications)},
  pages = {251--267},
  publisher = {ACM Press},
  year = {1996},
  location = {San Jose, California, United States}}

@inproceedings{Diec99a,
  author = {Sylvia Dieckmann and Urs H{\"o}lzle},
  title = {A Study of the Allocation Behavior of the SPECjvm98 {Java} Benchmarks},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {92--115},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {We present an analysis of the memory usage for six
of the {Java} programs in the SPECjvm98 benchmark
suite. Most of the programs are real- world
applications with high demands on the memory system.
For each program, we measured as much low level data
as possible, including age and size distribution,
type distribution, and the overhead of object
alignment. Among other things, we found that
non-pointer data usually represents more than 50\% of
the allocated space for instance objects, that
{Java} objects tend to live longer than objects in
Smalltalk or ML, and that they are fairly small.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Died87a,
  author = {Jim Diederich and Jack Milton},
  title = {An Object-Oriented Design System Shell},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {61--77},
  year = {1987},
  month = dec}

@incollection{Died89a,
  author = {Jim Diederich and Jack Milton},
  title = {Objects, Messages and Rules in Database Design},
  booktitle = {Object-Oriented Concepts, Databases and Applications},
  pages = {177--197},
  publisher = {ACM Press and Addison Wesley},
  year = {1989},
  address = {Reading, Mass.},
  editor = {W. Kim and F. Lochovsky}}

@book{Dieh02a,
  title = {Software Visualization},
  publisher = {Springer},
  year = {2002},
  editor = {Stephan Diehl}}

@book{Dieh07a,
  author = {Stephan Diehl},
  title = {Software Visualization},
  publisher = {Springer-Verlag},
  year = {2007},
  address = {Berlin Heidelberg},
  isbn = {978-3-540-46504-1}}

@book{Dieh07b,
  author = {Diehl, Stephan},
  title = {Software visualization: visualizing the structure, behaviour, and evolution of software},
  publisher = {Springer Science \& Business Media},
  year = {2007}}

@inproceedings{Diet07a,
  author = {W. Dietl and P. M{\"u}ller},
  title = {Runtime Universe Type Inference},
  booktitle = {Proceedings of the International Workshop on Aliasing, Confinement and Ownership in object-oriented programming (IWACO'07)},
  year = {2007},
  address = {Berlin, Germany},
  editor = {Tobias Wrigstad},
  month = jul}

@inproceedings{Diet89a,
  author = {Dietrich, Jr., Walter C. and Lee R. Nackman and Franklin Gracer},
  title = {Saving a Legacy With Objects},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {77--84},
  year = {1989},
  month = oct}

@techreport{Diet99a,
  author = {Urs Dietrich and Christian Kaufmann},
  title = {Dokumentation zu BernHist {III}},
  year = {1999},
  url = {http://scg.unibe.ch/archive/projects/Diet99a.pdf},
  institution = {University of Bern},
  month = oct,
  type = {Informatikprojekt}}

@inproceedings{Dig05a,
  author = {Daniel Dig and Ralph Johnson},
  title = {The Role of Refactorings in {{API}} Evolution},
  booktitle = {Proceedings of 21st International Conference on Software Maintenance ({ICSM} 2005)},
  pages = {389--398},
  year = {2005},
  month = sep}

@inproceedings{Dig06,
  author = {Dig, Danny and Johnson, Ralph},
  title = {Automated upgrading of component-based applications},
  booktitle = {OOPSLA '06: Companion to the 21st ACM SIGPLAN symposium on Object-oriented programming systems, languages, and applications},
  pages = {675--676},
  publisher = {ACM},
  year = {2006},
  url = {http://doi.acm.org/10.1145/1176617.1176668},
  doi = {10.1145/1176617.1176668},
  address = {New York, NY, USA},
  isbn = {1-59593-491-X},
  location = {Portland, Oregon, USA}}

@article{Dig06a,
  author = {Danny Dig and Ralph Johnson},
  title = {How do {{API}s} evolve? A story of refactoring},
  journal = {Journal of Software Maintenance and Evolution: Research and Practice (JSME)},
  volume = 18,
  pages = {83--107},
  year = {2006},
  month = apr,
  number = 2}

@inproceedings{Dig06b,
  author = {Danny Dig and Can Comertoglu and Darko Marinov and Ralph Johnson},
  title = {Automated Detection of Refactorings in Evolving Components},
  booktitle = {ECOOP},
  pages = {404-428},
  year = {2006}}

@inproceedings{Dig07a,
  author = {Danny Dig and Kashif Manzoor and Ralph Johnson and Tien Nguyen},
  title = {Refactoring-aware Configuration Management for Object-Oriented Programs},
  booktitle = {International Conference on Software Engineering (ICSE 2007)},
  pages = {427--436},
  year = {2007}}

@article{Dig08a,
  author = {Danny Dig and Kashif Manzoor and Ralph E. Johnson and Tien N. Nguyen},
  title = {Effective Software Merging in the Presence of Object-Oriented Refactorings},
  journal = {IEEE Transactions on Software Engineering},
  volume = {34},
  pages = {321--335},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {10.1109/TSE.2008.29},
  address = {Los Alamitos, CA, USA},
  date-added = {2009-10-21 13:31:17 +0200},
  date-modified = {2009-10-22 14:32:13 +0200},
  issn = {0098-5589},
  number = {3}}

@incollection{Dijk68a,
  author = {Edsgar W. Dijkstra},
  title = {Co-operating Sequential Processes},
  booktitle = {Programming Languages},
  pages = {43--112},
  publisher = {Academic Press},
  year = {1968},
  address = {New York},
  editor = {F. Genuys}}

@article{Dijk68b,
  author = {Edsgar W. Dijkstra},
  title = {The Structure of the "{THE}" multiprogramming systems"},
  journal = {CACM},
  volume = {11},
  pages = {341--346},
  year = {1968},
  month = may,
  number = {5}}

@article{Dijk68c,
  author = {Edsger W. Dijkstra},
  title = {Go To Statement Considered Harmful},
  journal = {Communications of the ACM},
  volume = {11},
  pages = {147--148},
  year = {1968},
  month = mar,
  number = {3}}

@article{Dijk71a,
  author = {Edsger W. Dijkstra},
  title = {Hierarchical ordering of sequential processes},
  journal = {Acta Informatica},
  volume = {1},
  pages = {115--138},
  year = {1971},
  url = {http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD310.PDF},
  number = {2}}

@article{Dijk72a,
  author = {Edsgar W. Dijkstra},
  title = {The Humble Programmer},
  journal = {Commun. ACM},
  volume = {15},
  pages = {859--866},
  publisher = {ACM},
  year = {1972},
  url = {http://www.cs.utexas.edu/~EWD/transcriptions/EWD03xx/EWD340.html},
  doi = {10.1145/355604.361591},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {10}}

@incollection{Dijk72b,
  author = {E. W. Dijkstra},
  title = {Notes on Structured Programming},
  booktitle = {Structured Programming},
  pages = {1--82},
  publisher = {Academic Press, Inc.},
  year = {1972},
  address = {New York, NY},
  editor = {E. Dijkstra and O-J. Dahl and C. A. R. Hoare}}

@article{Dijk72c,
  author = {Edsgar W. Dijkstra},
  title = {Selected Writings on Computing: A Personal Perspective},
  journal = {EWD},
  volume = {477},
  pages = {60--66},
  publisher = {Springer-Verlag},
  year = {1972}}

@article{Dijk75a,
  author = {Edsgar W. Dijkstra},
  title = {Guarded Commands, Nondeterminacy, and Formal Derivation of Programs},
  journal = {CACM},
  volume = {18},
  pages = {453--457},
  year = {1975},
  month = aug,
  number = {8}}

@book{Dijk76,
  author = {Edsger Wybe Dijkstra},
  title = {A Discipline of Programming},
  publisher = {Prentice Hall},
  year = {1976}}

@article{Dijk78a,
  author = {Edsgar W. Dijkstra and Leslie Lamport and A.J. Martin and C.S. Scholten and E.F.M. Steffens},
  title = {On-the-Fly Garbage Collection: An Exercise in Cooperation},
  journal = {CACM},
  volume = {21},
  year = {1978},
  month = nov,
  number = {11}}

@book{Dijk90a,
  author = {E.W. Dijkstra and C. S. Scholten},
  title = {Predicate Calculus and Program Semantics},
  publisher = {Springer Verlag},
  year = {1990},
  isbn = {3-540-96957-8}}

@book{Diko92a,
  author = {Marc Dik{\"o}tter},
  title = {Le Calcul des Accepteurs: Une Approache Uniforme de l'Abstraction},
  publisher = {Ecole Polytechnique F\'ed\'erale de Lausanne (EPFL)},
  year = {1992}}

@article{Dimit04a,
  author = {Sergey Dimitriev},
  title = {Language Oriented Programming: The Next Programming Paradigm},
  journal = {onBoard Online Magazine},
  volume = {1},
  year = {2004},
  url = {http://www.onboard.jetbrains.com/is1/articles/04/10/lop/},
  month = nov,
  number = {1}}

@inproceedings{Ding01a,
  author = {Lei Ding and Nenad Medvidovic},
  title = {Focus: A Light-Weight, Incremental Approach to Software Architecture Recovery and Evolution},
  booktitle = {Working Conference on Software Architecture (WICSA)},
  pages = {191--201},
  year = {2001}}

@inproceedings{Ding20a,
  author = {Ding, Zishuo and Chen, Jinfu and Shang, Weiyi},
  title = {Towards the Use of the Readily Available Tests from the Release Pipeline as Performance Tests: Are We There Yet?},
  booktitle = {ICSE'20},
  pages = {1435-1446},
  publisher = {ACM},
  year = {2020},
  url = {https://doi.org/10.1145/3377811.3380351},
  doi = {10.1145/3377811.3380351},
  abstract = {Performance is one of the important aspects of software quality. Performance issues exist widely in software systems, and the process of fixing the performance issues is an essential step in the release cycle of software systems. Although performance testing is widely adopted in practice, it is still expensive and time-consuming. In particular, the performance testing is usually conducted after the system is built in a dedicated testing environment. The challenges of performance testing make it difficult to fit into the common DevOps process in software development. On the other hand, there exist a large number of tests readily available, that are executed regularly within the release pipeline during software development. In this paper, we perform an exploratory study to determine whether such readily available tests are capable of serving as performance tests. In particular, we would like to see whether the performance of these tests can demonstrate performance improvements obtained from fixing real-life performance issues. We collect 127 performance issues from Hadoop and Cassandra, and evaluate the performance of the readily available tests from the commits before and after the performance issue fixes. We find that most of the improvements from the fixes to performance issues can be demonstrated using the readily available tests in the release pipeline. However, only a very small portion of the tests can be used for demonstrating the improvements. By manually examining the tests, we identify eight reasons that a test cannot demonstrate performance improvements even though it covers the changed source code of the issue fix. Finally, we build random forest classifiers determining the important metrics influencing the readily available tests (not) being able to demonstrate performance improvements from issue fixes. We find that the test code itself and the source code covered by the test are important factors, while the factors related to the code changes in the performance issues fixes have a low importance. Practitioners may focus on designing and improving the tests, instead of fine-tuning tests for different performance issues fixes. Our findings can be used as a guideline for practitioners to reduce the amount of effort spent on leveraging and designing tests that run in the release pipeline for performance assurance activities.},
  isbn = {9781450371216},
  keywords = {software performance, performance issues, performance testing},
  location = {Seoul, South Korea},
  numpages = {12}}

@inproceedings{Dinh17,
  author = {Dinh, Tien Tuan Anh and Wang, Ji and Chen, Gang and Liu, Rui and Ooi, Beng Chin and Tan, Kian-Lee},
  title = {BLOCKBENCH: A Framework for Analyzing Private Blockchains},
  booktitle = {Proceedings of the 2017 ACM International Conference on Management of Data},
  pages = {1085--1100},
  publisher = {ACM},
  year = {2017},
  url = {http://doi.acm.org/10.1145/3035918.3064033},
  doi = {10.1145/3035918.3064033},
  acmid = {3064033},
  address = {New York, NY, USA},
  isbn = {978-1-4503-4197-4},
  keywords = {blockchains, consensus, performance benchmark, security, smart contracts, transactions},
  location = {Chicago, Illinois, USA},
  numpages = {16},
  series = {SIGMOD '17}}

@book{Dipe05a,
  title = {Tools for Software Maintenance and Reengineering},
  publisher = {Franco Angeli},
  year = {2005},
  address = {Milano},
  editor = {Massimiliano {Di Penta} and Maarit Harsu},
  isbn = {88-464-6396-X},
  series = {RCOST / Software Technology Series}}

@inproceedings{Dipe07a,
  author = {Massimiliano Di Penta and R. E. K. Stirewalt and Eileen Kraemer},
  title = {Designing your Next Empirical Study on Program Comprehension},
  booktitle = {Proceedings of the 15th International Conference on Program Comprehension},
  pages = {281--285},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/{ICPC}.2007.17},
  address = {Washington, DC, USA},
  isbn = {0-7695-2860-0}}

@article{Dipe08a,
  author = {Massimiliano Di Penta and Luigi Cerulo and Lerina Aversano},
  title = {The Evolution and Decay of Statically Detected Source Code Vulnerabilities},
  journal = {Source Code Analysis and Manipulation, IEEE International Workshop on},
  volume = {0},
  pages = {101-110},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {10.1109/SCAM.2008.20},
  address = {Los Alamitos, CA, USA},
  isbn = {978-0-7695-3353-7}}

@inproceedings{Diss14a,
  author = {Dissegna, Stefano and Logozzo, Francesco and Ranzato, Francesco},
  title = {Tracing Compilation by Abstract Interpretation},
  booktitle = {Principles of Programming Languages (POPL'14)},
  year = {2014},
  doi = {10.1145/2535838.2535866},
  keywords = {abstract interpretation, trace semantics, tracing compilation},
  series = {POPL'14}}

@inproceedings{Dit11a,
  author = {Bogdan Dit and Meghan Revelle and Malcom Gethers and Denys Poshyvanyk},
  title = {Feature Location in Source Code: A Taxonomy and Survey},
  booktitle = {Journal of Software Maintenance and Evolution: Research and Practice},
  year = {2011}}

@inproceedings{Ditt86a,
  author = {K. Dittrich and W. Gotthard and P. Lockemann},
  title = {DAMOKLES, a Database System for Software Engineering Environments},
  booktitle = {Proceedings of the International Workshop on Advanced Programming Environments},
  volume = {244},
  pages = {353--371},
  year = {1986},
  series = {LNCS}}

@book{Dix04a,
  author = {Alan Dix, Janet E. Finlay, Gregory D. Abowd},
  title = {Human-Computer Interaction (3rd Edition)},
  publisher = {Prentice Hall},
  year = {2004},
  date-added = {2006-08-25 10:48:43 +0200},
  date-modified = {2006-08-25 10:57:09 +0200}}

@inproceedings{Dixo89a,
  author = {R. Dixon and T. McKee and M. Vaughan and P. Schweizer},
  title = {A Fast Method Dispatcher for Compiled Languages with Multiple Inheritance},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {211--214},
  year = {1989},
  month = oct}

@inproceedings{Dixo89b,
  author = {G.N. Dixon and Graham D. Parrington and Santosh K. Shrivastava and Stuart M. Wheater},
  title = {The Treatment of Persistent Objects in Arjuna},
  booktitle = {Proceedings ECOOP '89},
  pages = {169--189},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Dmit01a,
  author = {M. Dmitriev},
  title = {Towards Flexible and Safe Technology for Runtime Evolution of {Java} Language Applications},
  booktitle = {Proceedings of the Workshop on Engineering Complex Object-Oriented Systems for Evolution, in association with OOPSLA 2001},
  year = {2001},
  month = oct}

@phdthesis{Dmit01b,
  author = {M. Dmitriev},
  title = {Safe Class and Data Evolution in Large and Long-Lived Java Applications},
  year = {2001},
  school = {University of Glasgow}}

@misc{Dmit04a,
  author = {Sergey Dmitriev},
  title = {Language Oriented Programming: The Next Programming Paradigm},
  journal = {onBoard online magazine},
  volume = {1},
  year = {2004},
  month = nov,
  note = {\url{http://www.onboard.jetbrains.com/is1/articles/04/10/lop/mps.pdf}}}

@inproceedings{Dmit04b,
  author = {M. Dmitriev},
  title = {Profiling Java Applications Using Code Hotswapping and Dynamic Call Graph Revelation},
  booktitle = {Proceedings of the Fourth International Workshop on Software and Performance},
  pages = {139--150},
  publisher = {ACM Press},
  year = {2004}}

@inproceedings{Dmoo07a,
  author = {{de Moor}, O. and Verbaere, M. and Hajiyev, E. and Avgustinov, P. and Ekman,T. and Ongkingco,N. and Sereni,D. and Tibble, J.},
  title = {Keynote address: {.QL} for source code analysis},
  booktitle = {Proceedings of the 7th IEEE International Working Conference on Source Code Analysis and Manipulation},
  pages = {3--16},
  year = {2007},
  address = {Washington, DC, USA},
  editor = {IEEE Computer Society},
  series = {SCAM'07}}

@article{Doda89a,
  author = {Mahesh Dodani and Charles Hughes and Michael Moshell},
  title = {Separation of Powers},
  journal = {BYTE},
  volume = {14},
  year = {1989},
  month = mar,
  number = {3}}

@article{Doda90a,
  author = {Mahesh Dodani and A.J.G. Babu},
  title = {Karmarkar's Projective Method for Linear Programming: {A} Computational Appraisal},
  journal = {Computer Science Education Journal},
  volume = {21},
  pages = {191--212},
  year = {1990},
  number = {2}}

@inproceedings{Doda92a,
  author = {Mahesh Dodani and Chung-Shin Tsai},
  title = {{ACTS}: {A} Type System for Object-Oriented Programming Based on Abstract and Concrete Classes},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {309--328},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@article{Doda92b,
  author = {M. Dodani and C.S. Tsai},
  title = {A Reliable and Flexible Type System for Object-Oriented Programming},
  journal = {Journal of Object-Oriented Systems},
  volume = {??},
  pages = {??-??},
  year = {1992},
  number = {??}}

@article{Doda92c,
  author = {M. Dodani and T. Lee and C.S. Tsai},
  title = {Integrating Reliable Type Systems Into Object-Oiented Software Development Environments},
  journal = {Journal of Theory and Practice of Object-Oriented Systems},
  volume = {??},
  pages = {??-??},
  year = {1992},
  number = {??}}

@article{Doda93a,
  author = {Mahesh Dodani},
  title = {Practical Object-Oriented Software Engineering},
  journal = {Computer Science Education Journal},
  volume = {4},
  pages = {87--98},
  year = {1993},
  number = {1}}

@article{Doda93b,
  author = {Mahesh Dodani},
  title = {Teaching Practical Object-Oriented Engineering},
  journal = {OOPS Messenger},
  volume = {4},
  pages = {251--257},
  year = {1993},
  number = {2}}

@inproceedings{Doda93c,
  author = {Mahesh Dodani and J.H. Perng},
  title = {{IOWARE}: {A} Design Architecture for Interactive Object-Oriented Frameworks},
  booktitle = {International Conference on Computers and Communications},
  publisher = {IEEE Computer Society},
  year = {1993}}

@article{Doda94a,
  author = {Mahesh Dodani},
  title = {Model-Based Specifications of Object-Oriented Software},
  journal = {Report on Object-Oriented Analysis and Desing},
  volume = {1},
  publisher = {SIGS Publications},
  year = {1994},
  month = nov,
  number = {4}}

@incollection{Doda94b,
  author = {Mahesh Dodani and Kok Siew Gan},
  title = {A Semantic Framework for Understanding the Behavior of Modules and Classes in Programming Languages},
  booktitle = {Advances in Modular Languages},
  pages = {79--92},
  publisher = {University of Ulm (Germany)},
  year = {1994},
  editor = {Peter Schultheses}}

@article{Doda94c,
  author = {Mahesh Dodani},
  title = {Specifying Object-Oriented Software},
  journal = {Report on Object-Oriented Analysis},
  volume = {1},
  pages = {33--37},
  year = {1994},
  month = sep,
  number = {3}}

@inproceedings{Doda94d,
  author = {Mahesh Dodani and Shih-Poe Lee},
  title = {A History-Based Semantic Framework for Object-Oriented Software Engineering Methodologies"},
  booktitle = {Proceedings of OOPSLA '94 Poster Session},
  publisher = {ACM},
  year = {1994},
  month = oct}

@article{Doda94e,
  author = {Mahesh Dodani},
  title = {Fusing Formal Methods with Object-Oriented Software Engineering Methodologies},
  journal = {Report on Object-Oriented Analysis and Design},
  volume = {1},
  pages = {20--24},
  publisher = {SIGS Publications},
  year = {1994},
  month = aug,
  number = {2}}

@incollection{Doda94f,
  author = {Mahesh Dodani and Chung-Shin Tsai and Siu-Pui Tami Lee},
  title = {Flexible TYpe Systems for Object-Oriented Programming},
  booktitle = {TOOLS '94 14th on Technology of Object-Oriented Languages and Systems},
  pages = {124--136},
  publisher = {Prentice-Hall},
  year = {1994},
  editor = {E. Ege and B. Meyer and M. Singh}}

@article{Doda94g,
  author = {Mahesh Dodani},
  title = {Semantically Rich Object-Oriented Software Engineering Methodologies},
  journal = {Report on Object-Oriented Analysis and Design},
  volume = {1},
  pages = {17--21},
  publisher = {SIGS Publications},
  year = {1994},
  month = jun,
  number = {1}}

@article{Doda94h,
  author = {Mahesh Dodani},
  title = {{WANTED}: Archaeological Object-Oriented Designers},
  journal = {Report on Object-Oriented Analysis and Design},
  volume = {7},
  pages = {6--7},
  publisher = {SIGS Publications},
  year = {1994},
  month = may,
  number = {3}}

@article{Doda94i,
  author = {Mahesh Dodani},
  title = {Formal Methods for Object-Oriented Software Engineering},
  journal = {OOPS Messenger},
  volume = {5},
  year = {1994},
  month = apr,
  number = {2}}

@techreport{Doda94j,
  author = {Mahesh Dodani},
  title = {A Semantic Framework for Integrating Formal Methods With Object-Oriented ({OO}) Software Engineering Methodologies},
  year = {1994},
  institution = {University of Iowa},
  type = {Report}}

@article{Doda95a,
  author = {Mahesh Dodani},
  title = {An Effective Object-Oriented Software Engineering Curriculum},
  journal = {OOPS Messenger},
  volume = {6},
  year = {1995},
  month = apr,
  number = {2}}

@inproceedings{Doda95b,
  author = {Mahesh Dodani and Randall Rupp},
  title = {Integrating Formal Specifications with Object-Oriented Software Engineering Methodologies: {A} Case Study},
  booktitle = {WIFT '95 Workshop on Industrial-strength Formal Techniques},
  year = {1995}}

@unpublished{Doda95c,
  author = {Mahesh Dodani and J.H Perng},
  title = {An Object-Oriented Design of a User Interface Framework},
  year = {1995},
  note = {University of Iowa},
  type = {Draft}}

@unpublished{Doda95d,
  author = {Mahesh Dodani and K.S. Gan},
  title = {Dynamic Modules for Establishing Relationships Between Collaborating Objects in Object-Oriented Programming},
  year = {1995},
  note = {University of Iowa},
  type = {Draft}}

@inproceedings{Doi88a,
  author = {Norihisa Doi and Yasushi Kodama and Ken Hirose},
  title = {An Implementation of an Operating System Kernel Using Concurrent Object-Oriented Language {ABCL}/c+},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {250--266},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@article{Dola03a,
  author = {J. J. Dolado and M. Harman and M. C. Otero and L. Hu},
  title = {An Empirical Investigation of the Influence of a Type of Side Effects on Program Comprehension},
  journal = {IEEE Transactions on Software Engineering},
  volume = {29},
  pages = {665--670},
  publisher = {IEEE Press},
  year = {2003},
  doi = {10.1109/TSE.2003.1214329},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {7}}

@misc{DolphinSmalltalk,
  author = {DolphinSmalltalk},
  title = {{Doplhin} {Smalltalk}},
  year = {2003},
  key = {DoplphinSmalltalk},
  month = sep,
  note = {http://www.object-arts.com/DolphinSmalltalk.htm}}

@techreport{Dols02a,
  author = {Eelco Dolstra and Eelco Visser},
  title = {Building interpreters with rewriting strategies},
  year = {2002},
  url = {http://www.cs.uu.nl/research/techreps/repo/CS-2002/2002-022.pdf},
  institution = {Department of Information and Computing Sciences, Utrecht University},
  number = {UU-CS-2002-022},
  pubcat = {techreport}}

@book{Dona76a,
  author = {Jim Donahue},
  title = {Complementary Definitions of Programming Language Semantics},
  volume = {42},
  publisher = {Springer-Verlag},
  year = {1976},
  series = {LNCS}}

@inproceedings{Dona85a,
  author = {Jim Donahue},
  title = {Integration Mechanisms in Cedar},
  booktitle = {Proceedings ACM SIGPLAN 85 Symposium on Language Issues in Programming Environments, ACM SIGPLAN Notices},
  volume = {20},
  pages = {245--251},
  year = {1985},
  month = jul}

@article{Dona85b,
  author = {Jim Donahue and Alan Demers},
  title = {Data Types are Values},
  journal = {Transactions on Programming Languages and Systems},
  volume = {7},
  pages = {426--445},
  year = {1985},
  number = {3}}

@inproceedings{Dona99a,
  author = {Judith Donath and Karrie Karahalios and Fernanda Viegas},
  title = {Visualizing Conversation},
  booktitle = {Proceedings of the 32nd Hawaii International Conference on System Sciences},
  publisher = {IEEE},
  year = {1999}}

@inproceedings{Dong07a,
  author = {Xinyi Dong and Godfrey, M.W.},
  title = {System-level Usage Dependency Analysis of Object-Oriented Systems},
  booktitle = {{ICSM} 2007},
  publisher = {IEEE Comp. Society},
  year = {2007},
  doi = {10.1109/ICSM.2007.4362650},
  isbn = {978-1-4244-1256-3}}

@inproceedings{Dony88a,
  author = {Christophe Dony},
  title = {An Object-Oriented Exception Handling System for an Object-Oriented Language},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {146--161},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Dony90a,
  author = {Christophe Dony},
  title = {Exception Handling and Object-Oriented Programming: Towards a Synthesis},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {322--330},
  year = {1990},
  month = oct}

@inproceedings{Dony92a,
  author = {Christophe Dony and Jacques Malenfant and Pierre Cointe},
  title = {Prototype-Based Languages: From a New Taxonomy to Constructive Proposals and Their Validation},
  booktitle = {Proceedings OOPSLA '92},
  pages = {201--217},
  year = {1992},
  month = oct}

@inproceedings{Dony96a,
  author = {Daniel Bardou and Christophe Dony},
  title = {Split Objects: a Disciplined Use of Delegation within Objects},
  booktitle = {Proceedings of OOPSLA '96},
  pages = {122--137},
  year = {1996},
  month = oct}

@techreport{Dony98a,
  author = {Dony, C. and Huchard, M. and Leblanc, H. and Libourel, T.},
  title = {Meta-modele de representation de hierarchies de classes},
  pages = {2--29},
  year = {1998},
  institution = {CNET},
  month = apr,
  number = {Rapport d'avancement 01.98}}

@incollection{Dony98b,
  author = {Christophe Dony and Jacques Malenfant and Daniel Bardou},
  title = {Classification of Object-Centered Languages},
  booktitle = {Prototype-based Programming: Concepts, Languages and Applications},
  pages = {17--45},
  publisher = {Springer Verlag},
  year = {1998},
  editor = {James Noble and Antero Taivalsaari and Ivan Moore}}

@misc{Doors,
  title = {Telelogic DOORS},
  url = {http://www2.telelogic.com/products/doorsers/doors/index.cfm},
  key = {Doors},
  note = {http://www2.telelogic.com/products/doorsers/doors/index.cfm}}

@article{Dosr11a,
  author = {Dos Reis, Gabriel and Stroustrup, Bjarne},
  title = {A principled, complete, and efficient representation of {C++}},
  journal = {Mathematics in Computer Science},
  volume = {5},
  pages = {335--356},
  publisher = {Springer},
  year = {2011},
  number = {3}}

@inproceedings{Doue01a,
  author = {Remi Douence and Olivier Motelet and Mario Sudholt},
  title = {A formal definition of crosscuts},
  booktitle = {Proceedings of the Third International Conference on Metalevel Architectures and Separation of Crosscutting Concerns (Reflection 2001)},
  volume = {2192},
  pages = {170--186},
  publisher = {Springer-Verlag},
  year = {2001},
  address = {Berlin, Heidelberg, and New York},
  month = sep,
  series = {Lecture Notes in Computer Science}}

@article{Doue01b,
  author = {Douence, R\'{e}mi and S\"{u}dholt, Mario},
  title = {A Generic Reification Technique for Object-Oriented Reflective Languages},
  journal = {Higher Order Symbol. Comput.},
  volume = {14},
  pages = {7--34},
  publisher = {Kluwer Academic Publishers},
  year = {2001},
  doi = {10.1023/A:1011549115358},
  address = {Hingham, MA, USA},
  issn = {1388-3690},
  number = {1}}

@techreport{Doue02a,
  author = {R\'{e}mi Douence and Mario S\"{u}dholt},
  title = {A model and a tool for Event-based Aspect-Oriented Programming (EAOP)},
  year = {2002},
  institution = {Ecole des Mines de Nantes},
  month = dec,
  type = {Technical Report}}

@inproceedings{Doue02b,
  author = {Douence, R\'{e}mi and Fradet, Pascal and S\"{u}dholt, Mario},
  title = {A Framework for the Detection and Resolution of Aspect Interactions},
  booktitle = {GPCE'02: Proceedings of the 1st International Conference on Generative Programming and Component Engineering},
  pages = {173-188},
  publisher = {Springer-Verlag},
  year = {2002}}

@inproceedings{Doue04a,
  author = {R\'{e}mi Douence and Pascal Fradet and Mario S\"{u}dholt},
  title = {Composition, reuse and interaction analysis of stateful aspects},
  booktitle = {AOSD '04: Proceedings of the 3rd international conference on Aspect-oriented software development},
  pages = {141--150},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/976270.976288},
  address = {New York, NY, USA},
  isbn = {1-58113-842-3},
  location = {Lancaster, UK}}

@article{Doue06a,
  author = {Douence, R{\'e}mi and Fritz, Thomas and Loriant, Nicolas and Menaud, Jean-Marc and S{\'e}gura-Devillechaise, Marc and S\"udholt, Mario},
  title = {An expressive aspect language for system applications with Arachne},
  journal = {Transaction on Aspect-Oriented Software Development},
  volume = {1},
  publisher = {LNCS},
  year = {2006},
  month = jan,
  number = {1}}

@inproceedings{Dous05a,
  author = {Bernard DOUSSET and Said KAROUACH},
  title = {Manipulation de graphes de grande taille pour l'\'etude des r\'eseaux d'acteurs et des r\'eseaux s\'emantiques},
  booktitle = {10i\`eme journ\'ees d'\'etudes sur les syst\`emes d'information \'elabor\'ee: Bibliom\'etrie, Informatique strat\'egique, Veille technologique},
  year = {2005},
  month = jun}

@article{Dout09a,
  author = {Gis\`ele Douta and Haydar Talib and Oscar Nierstrasz and Frank Langlotz},
  title = {{CompAS}: A new approach to commonality and variability analysis with applications in computer assisted orthopaedic surgery},
  journal = {Information and Software Technology},
  volume = {51},
  pages = {448-459},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Dout09aCompAS.pdf},
  doi = {10.1016/j.infsof.2008.05.017},
  abstract = {In r{API}dly evolving domains such as Computer
Assisted Orthopaedic Surgery (CAOS) emphasis is
often put first on innovation and new functionality,
rather than in developing the common infrastructure
needed to support integration and reuse of these
innovations. In fact, developing such an
infrastructure is often considered to be a high-risk
venture given the volatility of such a domain. We
present CompAS, a method that exploits the very
evolution of innovations in the domain to carry out
the necessary quantitative and qualitative
commonality and variability analysis, especially in
the case of scarce system documentation. We show how
our technique applies to the CAOS domain by using
conference proceedings as a key source of
information about the evolution of features in CAOS
systems over a period of several years. We detect
and classify evolution patterns to determine
functional commonality and variability. We also
identify non-functional requirements to help capture
domain variability. We have validated our approach
by evaluating the degree to which representative
test systems can be covered by the common and
variable features produced by our analysis.},
  issn = {0950-5849},
  medium = {2},
  number = {2}}

@inproceedings{Dova99c,
  author = {D. Doval and S. Mancoridis and B. S.Mitchell},
  title = {Automatic Clustering of Software Systems Using a Genetic Algorithm},
  booktitle = {STEP '99: Proceedings of the Software Technology and Engineering Practice},
  pages = {73},
  publisher = {IEEE Computer Society},
  year = {1999},
  address = {Washington, DC, USA},
  isbn = {0-7695-0328-4}}

@book{Dowd06a,
  author = {Mark Dowd and John McDonald and Justin Schuh},
  title = {The art of software security assessment},
  publisher = {Addison Wesley Professional},
  year = {2006},
  isbn = {0-321-44442-6},
  month = nov}

@book{Dowd07a,
  author = {Dowd and Mark},
  title = {Art of software security assessment},
  publisher = {Addison-Wesley},
  year = {2007},
  note = {received, Suen}}

@book{Down98a,
  author = {Troy Bryan Downing},
  title = {Java {RMI}: Remote Method Invocation},
  publisher = {IDG Books Worldwide, Inc.},
  year = {1998},
  address = {Foster City, CA, USA}}

@mastersthesis{Dozs07a,
  author = {Adrian Dozsa},
  title = {Reverse Engineering Techniques for Lisp Systems},
  year = {2007},
  school = {Politehnica University of Timisoara},
  url = {http://scg.unibe.ch/archive/external/Dozs07a.pdf},
  abstract = {Reverse engineering software systems, especially
large legacy systems, is a difficult task, because
of the sheer size and complexity of the systems.
Many approaches have been developed to analyze
software systems written in different languages.
These approaches employ vary techniques like metrics
or visualizations, and typically rely on parsing the
system and on extracting a model that conforms to a
meta-model. However, no existent meta-model could
fulfill the requirements for analyzing Lisp systems,
so we developed the FAMIX-Lisp meta-model, as an
extension of an existing meta-model. Our FAMIX-Lisp
meta-model extends the initial meta-model with
capabilities to model Lisp systems by adding new
entities that are unique to Lisp, like Macros and
CLOS entities. Software visualization has been
widely used by the reverse engineering research
community during the past two decades, becoming one
of the major approaches in reverse engineering. In
our thesis we also propose a set of new
visualizations for Lisp systems, developed to
underline the differences of the language and to
help understand and browse complex Lisp systems,
namely: (1) The Class-Method Relation View is a
visual way of supporting the understanding of the
relation between classes and methods in a
object-oriented Lisp program; (2) The Class Types
View is a visual way of identifying different types
of classes, based on their structure (the attributes
to methods ratio); (3) The Programming Style
Distribution View is a visual way of identifying the
programming paradigm used in a program and their
distribution over the system's packages; (4) The
Generic Concerns View is a visual way of identifying
different cross-cutting concerns in a system by
visualizing the spread of generic functions in the
system. The target of our views is to visualize very
large Lisp systems, for which we want to obtain an
initial understanding of their structure and their
properties, which helps to guide software developers
in the first steps of the reverse engineering
process of an unknown system.},
  month = sep}

@inproceedings{Dozs08a,
  author = {Adrian Dozsa and Tudor G\^irba and Radu Marinescu},
  title = {How {Lisp} systems look different},
  booktitle = {European Conference on Software Maintenance and Re-Engineering (CSMR 2008)},
  pages = {223--232},
  publisher = {IEEE Computer Society Press},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Dozs08aLispLooksDifferent.pdf},
  doi = {10.1109/CSMR.2008.4493317},
  abstract = {Many reverse engineering approaches have been
developed to analyze software systems written in
different languages like C/C++ or Java. These
approaches typically rely on a meta-model, that is
either specific for the language at hand or language
independent (e.g. UML). However, one language that
was hardly addressed is Lisp. While at first sight
it can be accommodated by current language
independent meta-models, Lisp has some unique
features (e.g. macros, CLOS entities) that are
crucial for reverse engineering Lisp systems. In
this paper we propose a suite of new visualizations
that reveal the special traits of the Lisp language
and thus help in understanding complex Lisp systems.
To validate our approach we apply them on several
large Lisp case studies, and summarize our
experience in terms of a series of recurring visual
patterns that we have detected.},
  medium = {2}}

@misc{DrScheme,
  title = {{Dr}{Scheme}},
  key = {DrScheme},
  note = {http://www.drscheme.org/}}

@inproceedings{Drag09a,
  author = {Dragan, N. and Collard, M.L. and Maletic, J. I.},
  title = {Using Method Stereotype Distribution as a Signature Descriptor for Software Systems},
  booktitle = {IEEE International Conference on Software Maintenance ({ICSM}'09)},
  pages = {567-570},
  year = {2009}}

@inproceedings{Drag10a,
  author = {Automatic Identification of Class Stereotypes},
  title = {Using Method Stereotype Distribution as a Signature Descriptor for Software Systems},
  booktitle = {IEEE International Conference on Software Maintenance ({ICSM}'10)},
  year = {2010}}

@inproceedings{Drag11a,
  author = {Dragan, N. and Collard, M. and Hammad, M. and Maletic, J.},
  title = {Categorizing Commits Based on Method Stereotypes},
  booktitle = {Proceedings of the 27th IEEE International Conference on Software Maintenance},
  pages = {520--523},
  publisher = {IEEE},
  year = {2011},
  series = {{ICSM}'11}}

@misc{Drag13a,
  added-at = {2017-02-08T14:27:40.000+0100},
  author = {Dragos, Iulian},
  day = {1},
  keywords = {actors asynchronous debugger scala},
  month = {jul},
  series = {Scala2013},
  title = {{Stack Retention in Debuggers For Concurrent Programs}},
  url = {http://iulidragos.com/assets/papers/stack-retention.pdf},
  year = {2013}
}

@inproceedings{Drah03a,
  author = {Dirk Draheim and Lukasz Pekacki},
  title = {Process-Centric Analytical Processing of Version Control Data},
  booktitle = {International Workshop on Principles of Software Evolution (IWPSE 2003)},
  pages = {131--136},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  address = {Los Alamitos CA}}

@book{Drak98a,
  author = {Caleb Drake},
  title = {Object-Oriented Programming with {C}++ and {Smalltalk}},
  publisher = {Prentice-Hall},
  year = {1998}}

@inproceedings{Drav91a,
  author = {Richard P. Draves and Brian N. Bershad and Richard F. Rashid and Randall W. Dean},
  title = {Using continuations to implement thread management and communication in operating systems},
  booktitle = {SOSP '91: Proceedings of the thirteenth ACM symposium on Operating systems principles},
  pages = {122--136},
  publisher = {ACM Press},
  year = {1991},
  doi = {10.1145/121132.121155},
  address = {New York, NY, USA},
  isbn = {0-89791-447-3},
  location = {Pacific Grove, California, United States}}

@inproceedings{Drey09a,
  author = {Drey, Zo{\'e} and Mercadal, Julien and Consel, Charles},
  title = {A Taxonomy-Driven Approach to Visually Prototyping Pervasive Computing Applications},
  booktitle = {DSL WC'09: Proceedings of the 1st Working Conference on Domain-Specific Languages},
  volume = {5658},
  pages = {78--99},
  year = {2009}}

@inproceedings{Drie10a,
  title={Quickchecking refactoring tools},
  author={Drienyovszky, D{\'a}niel and Horp{\'a}csi, D{\'a}niel and Thompson, Simon},
  booktitle={Proceedings of the 9th ACM SIGPLAN Workshop on Erlang},
  pages={75-80},
  year={2010}
}

@inproceedings{Drie93a,
  author = {Karel Driesen},
  title = {Selector Table Indexing \& Sparse Arrays},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {259--270},
  year = {1993},
  month = oct}

@inproceedings{Drie95a,
  author = {Karel Driesen and Urs H{\"o}lzle and Jan Vitek},
  title = {Message Dispatch on Pipelined Processors},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {253--282},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@article{Dris89a,
  author = {James R. Driscoll and Neil Sarnak and Daniel D. Sleator and Robert E. Tarjan},
  title = {Making Data Structures Persistent},
  journal = {Journal of Computer and System Sciences},
  volume = {38},
  pages = {86--124},
  year = {1989},
  month = feb,
  number = {1}}

@inproceedings{Dros08a,
  author = {Drossopoulou, Sophia and Francalanza, Adrian and M{\"{u}}ller, Peter and Summers, Alexander},
  title = {A Unified Framework for Verification Techniques for Object Invariants},
  booktitle = {Proceedings of 22nd European Conference on Object-Oriented Programming (ECOOP'08)},
  pages = {412--437},
  year = {2008},
  url = {http://pubs.doc.ic.ac.uk/verificationTechniquesFramework/},
  month = jul,
  series = {Lecture Notes in Computer Science}}

@article{Drumm00a,
  author = {Chris Drummond and Dan Ionescu and Robert C. Holte},
  title = {A Learning Agent that Assists the Browsing of Software Libraries},
  journal = {Software Engineering},
  volume = {26},
  pages = {1179--1196},
  year = {2000},
  number = {12}}

@inproceedings{Drus92a,
  author = {Druschel, P. and Peterson, L.L. and Hutchinson, N.C.},
  title = {Beyond micro-kernel design: decoupling modularity and protection in Lipto},
  booktitle = {Distributed Computing Systems, 1992., Proceedings of the 12th International Conference on},
  pages = {512 -520},
  year = {1992},
  doi = {10.1109/ICDCS.1992.235002}}

@misc{Dryad,
  author={Microsoft},
  title = {DryadLINQ},
  howpublished = {https://www.microsoft.com/en-us/research/project/dryadlinq/},
  note = {Accessed: 2017-05-10}
}

@inproceedings{Dubo13b,
  author = {Duboscq, Gilles and W\"{u}rthinger, Thomas and Stadler, Lukas and Wimmer, Christian and Simon, Doug and M\"{o}ssenb\"{o}ck, Hanspeter},
  title = {An Intermediate Representation for Speculative Optimizations in a Dynamic Compiler},
  booktitle = {Workshop on Virtual Machines and Intermediate Languages ({VMIL}'13)},
  year = {2013},
  keywords = {intermediate representation, java virtual machine, just-in-time compilation, speculative optimization}}

@inproceedings{Dubo13c,
  author = {Duboscq, Gilles and Stadler, Lukas and W\"urthinger, Thomas and Simon, Doug and Wimmer, Christian and M\"ossenb\"ock, Hanspeter},
  title = {Graal IR: An Extensible Declarative Intermediate Representation},
  booktitle = {Asia-Pacific Programming Languages and Compilers Workshop},
  year = {2013}}

@inproceedings{Dubo14a,
  author = {Catherine Dubois and Michalis Famelis and Martin Gogolla and Leonel Nobrega and Ileana Ober and Martina Seidl and Markus V{\"o}lter},
  title = {Research Questions for Validation and Verification in the Context of Model-Based Engineering},
  booktitle = {International Workshop on Model Driven Engineering, Verification and Validation - MoDeVVA 2013},
  volume = {1069},
  pages = {67--76},
  year = {2014},
  url = {https://oatao.univ-toulouse.fr/12880/},
  keywords = {Model-based engineering, Validation, Verification}}

@inproceedings{Dubo87a,
  author = {Eric Dubois and Jacques Hagelstein},
  title = {Reasoning on Formal Requirements: {A} Lift Control System},
  booktitle = {Proceedings of the Fourth International Workshop on Software Specifications and Design},
  year = {1987},
  misc = {April 3-4},
  address = {Monterey, CA},
  month = apr}

@inproceedings{Dubo93a,
  author = {Eric Dubois and Philippe Du Bois and Micha\"el Petit},
  title = {O-{O} Requirements Analysis: an Agent Perspective},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {458--482},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {In this paper, we present a formal object-oriented
specification language designed for capturing
requirements expressed on composite real-time
systems. The specification describes the system as a
society of `agents', each of them being
characterised (i) by its responsibility with respect
to actions happening in the system and (ii) by its
time-varying perception of the behaviour of the
other agents. On top of the language, we also
suggest some methodological guidance by considering
a general strategy based on a progressive
assignement of responsibilities to agents.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@book{Duca17a,
  author = {St\'ephane Ducasse and Dmitri Zagidulin and Nicolai Hess and Dimitris Chloupis --- Originally written by A. Black and S. Ducasse and O. Nierstrasz and D. Pollet with D. Cassou and M. Denker},
  title = {Pharo by Example 5},
  pages = {376},
  publisher = {Square Bracket Associates},
  year = {2017},
  url = {http://books.pharo.org},
  abstract = {Pharo by Example, intended for both students and developers, will guide you gently through the Pharo language and environment by means of a series of examples and exercises. This book is made available under the Creative Commons Attribution-ShareAlike 3.0 license.},
  annote = {book},
  isbn = {978-3-9523341-0-2},
  keywords = {skipdoi kzSmalltalk kzPharo lse-pub}}

@article{Duca97h,
  author = {Mireille Ducass\'e},
  title = {Opium: An extendable trace analyser for Prolog},
  journal = {The Journal of Logic programming},
  year = {1999},
  url = {citeseer.nj.nec.com/ducasse97opium.html}}

@proceedings{Duca98d,
  title = {Proceedings of the {ECOOP}'98 Workshop on Experiences in Object-Oriented Re-Engineering},
  year = {1998},
  address = {Forschungszentrum Informatik, Haid-und-Neu-Strasse 10-14, 76131 Karlsruhe, Germany},
  editor = {St\'ephane Ducasse and Joachim Weisbrod},
  month = jun,
  note = {FZI 6/7/98}}

@proceedings{Duca99e,
  title = {Proceedings of the {ECOOP}'99 Workshop on Experiences in Object-Oriented Re-Engineering},
  publisher = {Forschungszentrum Informatik, Karlsruhe, Germany},
  year = {1999},
  editor = {St\'ephane Ducasse and Oliver Ciupke},
  month = jun,
  note = {FZI 2-6-6/99}}

@inproceedings{Duca99f,
  author = {Mireille Ducass\'e},
  title = {Coca: An Automated Debugger for {C}},
  booktitle = {International Conference on Software Engineering},
  pages = {154--168},
  year = {1999}}

@book{Duca99x,
  title = {The {FAMOOS} Object-Oriented Reengineering Handbook},
  publisher = {University of Bern},
  year = {1999},
  url = {http://scg.unibe.ch/archive/papers/Duca99xFamoosHandBook.pdf},
  editor = {St\'ephane Ducasse and Serge Demeyer},
  month = oct}

@techreport{Duco01a,
  author = {R. Ducournau},
  title = {Sp\'ecialisation et sous-typage: th\`eme et variations},
  year = {2001},
  url = {http://www.lirmm.fr/~ducour/Publis/spectyperr.ps.gz},
  institution = {L.I.R.M.M., Montpellier},
  number = {Rapport de Recherche 01-013}}

@incollection{Duco02a,
  author = {R. Ducournau},
  title = {``{Real World}'' as an Argument for Covariant Specialization in Programming and Modeling},
  booktitle = {Advances in Object-Oriented Information Systems, OOIS'02 Workshops Proc.},
  pages = {3--12},
  publisher = {Springer},
  year = {2002},
  editor = {J.-M. Bruel and Z. Bellahs\`ene},
  series = {LNCS 2426}}

@techreport{Duco07a,
  author = {Roland Ducournau and Flor\'eal Morandat and Jean Privat},
  title = {Modules and Class Refinement: a Meta-Modeling Approach to Object-Oriented Programming},
  year = {2007},
  institution = {LIRMM, Universit\'e Montpellier II},
  number = {07-021}}

@article{Duco09a,
  author = {Roland Ducournau},
  title = {Implementing statically typed object-oriented programming languages},
  journal = {ACM Computing Surveys},
  year = {2010},
  note = {to appear}}

@article{Duco11a,
  author = {Ducournau, Roland and Privat, Jean},
  title = {Metamodeling Semantics of Multiple Inheritance},
  journal = {Science of Computer Programming},
  volume = {76},
  pages = {555--586},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2011},
  doi = {10.1016/j.scico.2010.10.006},
  issn = {0167-6423},
  month = jul,
  number = {7},
  numpages = {32}}

@inproceedings{Duco87a,
  author = {R. Ducournau and Michel Habib},
  title = {On Some Algorithms for Multiple Inheritance in Object-Oriented Programming},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {243--252},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Duco92a,
  author = {R. Ducournau and M. Habib and M. Huchard and M.L. Mugnier},
  title = {Monotonic Conflict Resolution Mechanisms for Inheritance},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {16--24},
  year = {1992},
  month = oct}

@article{Dudd04a,
  author = {Duddy, K and Gerber, Anna and Lawley, Michael and Raymond, Kerry and Steel, Jim},
  title = {Declarative transformation for object-oriented models},
  journal = {Transformation of Knowledge, Information, and Data: Theory and Applications},
  year = {2004},
  month = {jan}}

@inproceedings{Duen98a,
  author = {Due{\~n}as, J. and Lopes de Oliveira, W. and de la Puente, J.},
  title = {Architecture Recovery for Software Evolution},
  booktitle = {Conference on Software Maintenance and Reengineering (CSMR)},
  pages = {113--120},
  year = {1998},
  doi = {10.1109/CSMR.1998.10007}}

@inproceedings{Duff07a,
  author = {Duffy, Edward B and Malloy, Brian A},
  title = {An automated approach to grammar recovery for a dialect of the C++ language},
  booktitle = {Reverse Engineering, 2007. {WCRE} 2007. 14th Working Conference on},
  pages = {11--20},
  year = {2007},
  organization = {IEEE}}

@article{Dufo03a,
  author = {Dufour, Bruno and Driesen, Karel and Hendren, Laurie and Verbrugge, Clark},
  title = {Dynamic metrics for java},
  journal = {SIGPLAN Not.},
  volume = {38},
  pages = {149--168},
  publisher = {ACM},
  year = {2003},
  doi = {10.1145/949343.949320},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {11}}

@book{Duge90a,
  author = {Philippe Dugerdil},
  title = {Smalltalk-80: Programmation par Objets},
  publisher = {Presses Polytechniques et Universitaires Romandes},
  year = {1991},
  isbn = {2-88074-182-3}}

@inproceedings{Dugg00a,
  author = {Dominic Duggan},
  title = {A Mixin-Based, Semantics-Based Approach to Reusing Domain-Specific Programming Languages},
  booktitle = {Proceedings ECOOP 2000},
  volume = {1850},
  pages = {179--200},
  publisher = {Springer-Verlag},
  year = {2000},
  address = {Berlin Heidelberg},
  editor = {Elisa bertino},
  series = {LNCS}}

@inproceedings{Dugg01a,
  author = {Dominic Duggan and Ching-Ching Techaubol},
  title = {Modular Mixin-Based Inheritance for Application Frameworks},
  booktitle = {Proceedings OOPSLA 2001},
  pages = {223--240},
  year = {2001},
  month = oct}

@inproceedings{Dugg01b,
  author = {Dominic Duggan},
  title = {Type-Based Hot Swapping of Running Modules},
  booktitle = {Intl. Conf. on Functional Programming},
  pages = {62--73},
  year = {2001}}

@inproceedings{Dugg02a,
  author = {Sheryl L. Duggin and Barbara Bernal Thomas},
  title = {An Historical Investigation of Graduate Software Engineering Curriculum},
  booktitle = {Proceedings of the 15th Conference on Software Engineering Education and Training (CSEET'02},
  publisher = {IEEE},
  year = {2002},
  doi = {1093-0175/02}}

@inproceedings{Dugg99a,
  author = {Dominic Duggan},
  title = {Modular type-based reverse engineering of parameterized types in Java code},
  booktitle = {OOPSLA '99: Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages = {97--113},
  publisher = {ACM Press},
  year = {1999},
  doi = {10.1145/320384.320393},
  address = {New York, NY, USA},
  isbn = {1-58113-238-7},
  location = {Denver, Colorado, United States}}

@inproceedings{Duhl88a,
  author = {Joshua Duhl and Craig Damon},
  title = {A Performance Comparison of Object and Relational Databases Using the Sun Benchmark},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {153--163},
  year = {1988},
  month = nov}

@article{Duma91a,
  author = {Susan T. Dumais},
  title = {Improving the retrieval of information from external sources},
  journal = {Behavior Research Methods, Instruments and Computers},
  volume = {23},
  pages = {229--236},
  year = {1991}}

@inproceedings{Duma92a,
  author = {Susan T. Dumais and Jakob Nielsen},
  title = {Automating the Assignment of Submitted Manuscripts to Reviewers},
  booktitle = {Research and Development in Information Retrieval},
  pages = {233--244},
  year = {1992}}

@techreport{Dunc98a,
  author = {Andrew Duncan and Urs H\"olze},
  title = {Adding Contracts to Java with Handshake},
  year = {1998},
  institution = {Departement of Computer Science of University of California, Santa Barbara},
  number = {TRCS-98-32}}

@inproceedings{Dunk06a,
  author = {Adam Dunkels and Oliver Schmidt and Thiemo Voigt and Muneeb Ali},
  title = {Protothreads: simplifying event-driven programming of memory-constrained embedded systems},
  booktitle = {SenSys '06: Proceedings of the 4th international conference on Embedded networked sensor systems},
  pages = {29--42},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1182807.1182811},
  address = {New York, NY, USA},
  isbn = {1-59593-343-3},
  location = {Boulder, Colorado, USA}}

@inproceedings{Duns00a,
  author = {Alastair Dunsmore and Marc Roper and Murray Wood},
  title = {Object-Oriented Inspection in the Face of Delocalisation},
  booktitle = {Proceedings of ICSE '00 (22nd International Conference on Software Engineering)},
  pages = {467--476},
  publisher = {ACM Press},
  year = {2000},
  location = {Limerick, Ireland}}

@book{Dupr98a,
  author = {Lyn Dupre},
  title = {Bugs in Writing},
  publisher = {Addison Wesley},
  year = {1998},
  isbn = {020137921X}}

@article{Dure19a,
  author = {V. H. S. {Durelli} and R. S. {Durelli} and S. S. {Borges} and A. T. {Endo} and M. M. {Eler} and D. R. C. {Dias} and M. P. {Guimar\~aes}},
  title = {Machine Learning Applied to Software Testing: A Systematic Mapping Study},
  journal = {IEEE Transactions on Reliability},
  volume = {68},
  pages = {1189-1212},
  year = {2019},
  doi = {10.1109/TR.2019.2892517},
  number = {3}}

@inproceedings{Duss89a,
  author = {Patrick H. Dussud},
  title = {{TICLOS}: An Implementation of {CLOS} for the Explorer Family},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {215--220},
  year = {1989},
  month = oct}

@article{Dutc06a,
  author = {Christopher Dutchyn and David B. Tucker and Shriram Krishnamurthi},
  title = {Semantics and scoping of aspects in higher-order languages},
  journal = {Sci. Comput. Program.},
  volume = {63},
  pages = {207--239},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2006},
  doi = {10.1016/j.scico.2006.01.003},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {0167-6423},
  number = {3}}

@book{Duto97a,
  author = {Thierry Dutoit},
  title = {An Introduction to Text-to-Speech Synthesis},
  publisher = {Kluwer Academic Publishers},
  year = {1997},
  isbn = {1402003692}}

@inproceedings{Duwe00a,
  author = {Stephan D{\"{u}}wel and Wolfgang Hesse},
  title = {Bridging the {Gap} between {Use} {Case} {Analysis} and {Class} {Structure} {Design} by {Formal} {Concept} {Analysis}},
  booktitle = {Modelle und Modellierungssprachen in Informatik und Wirtschaftsinformatik. Proceedings ``Modellierung 2000''},
  pages = {27--40},
  publisher = {F\"{o}lbach-Verlag},
  year = {2000},
  address = {Koblenz},
  editor = {J. Ebert and U. Frank}}

@phdthesis{Duwe00b,
  author = {Stephan D{\"{u}}wel},
  title = {BASE --- ein be\-griffs\-basiertes {Analyseverfahren} f{\"{u}}r die {Soft}\-ware-{Ent}\-wick\-lung},
  year = {2000},
  school = {Philipps-Universit{\"{a}}t},
  url = {http://www.ub.uni-marburg.de/digibib/ediss/welcome.html},
  address = {Marburg}}

@inproceedings{Duwe98a,
  author = {Stephan D{\"{u}}wel and Wolfgang Hesse},
  title = {Identifying Candidate Objects during System Analysis},
  booktitle = {Proceedings of {CAiSE'98/IFIP} 8.1 3rd International Workshop on Evaluation of Modelling Methods in System Analysis and Design ({EMMSAD'98})},
  year = {1998},
  address = {Pisa}}

@inproceedings{Duwe99a,
  author = {Stephan D{\"{u}}wel},
  title = {Enhancing {System} {Analysis} by {Means} of {Formal} {Concept} {Analysis}},
  booktitle = {Conference on Advanced Information Systems Engineering. 6th Doctoral Consortium},
  year = {1999},
  address = {Heidelberg, Germany},
  month = jun}

@techreport{Dwye96a,
  author = {Mattew B. Dwyer and Mattew J. Craig},
  title = {High-Level Coordination Abstraction in Stock Languages},
  year = {1996},
  institution = {CIS TR},
  number = {96-9}}

@inproceedings{Dwye97a,
  author = {Matthew B. Dwyer and Virgil Wallentine},
  title = {Object-Oriented Coordination Abstractions for Parallel Software},
  booktitle = {Proceedings of the International Conference on Parallel and Distributed Processing Techniques and Applications (PDPTA '97)},
  year = {1997},
  url = {http://www.cis.ksu.edu/~dwyer/papers/ooca.ps},
  abstract = {Abstraction is a fundamental concept in software
engineering. In this paper, we describe how
object-oriented technology can be applied to provide
a class of abstractions, called coordination
abstractions, that can simplify the construction of
parallel software. Coordination abstractions capture
communication, synchronization and topological
information about parallel computations.
Abstractions can be defined that provide support for
a surprisingly broad range of parallel applications
which share a common underlying coordination
structure. We demonstrate this by describing the
design and implementation of a coordination
abstraction in {Java} and its application to the
solution of selected parallel computing problems.},
  month = jun}

@book{Dybv03a,
  author = {Kent Dybvig},
  title = {The Scheme Programming Language},
  publisher = {MIT Press},
  year = {2003},
  url = {http://www.scheme.com/tspl3/index.html},
  isbn = {0-262-54148-3}}

@book{Dybv87a,
  author = {R. Kent Dybvig},
  title = {The {SCHEME} Programming Language},
  publisher = {Prentice-Hall},
  year = {1987},
  isbn = {0-13-791864-X}}

@manual{Dyla92a,
  title = {Dylan: an object-oriented dynamic language},
  year = {1992},
  month = apr,
  organization = {Apple Computer, Eastern Research and Technology}}

@incollection{Dyso97a,
  author = {Paul Dyson and Bruse Anderson},
  title = {State Patterns},
  booktitle = {Pattern Languages of Program Design 3},
  publisher = {Addison Wesley},
  year = {1997},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann}}

@inproceedings{Dziem15a,
  author = {Dziembowski, Stefan},
  title = {Introduction to Cryptocurrencies},
  booktitle = {22nd ACM SIGSAC Conference on Computer and Communications Security},
  pages = {1700--1701},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2810103.2812704},
  doi = {10.1145/2810103.2812704},
  acmid = {2812704},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3832-5},
  keywords = {cryptocurrencies, distributed cryptography},
  location = {Denver, Colorado, USA},
  numpages = {2},
  series = {CCS '15}}

@book{ECMA11a,
  title = {ECMAScript Language Specification version 5},
  publisher = {European Computer Machinery Association},
  year = {2011},
  url = {http://www.ecma-international.org/publications/standards/Ecma-262.htm},
  editor = {ECMA},
  month = jul}

@techreport{ECMA83a,
  author = {{ECMA}},
  title = {Office Document Architecture},
  year = {1983},
  institution = {ECMA},
  type = {TC 29/83/56, Fourth Working Draft}}

@book{ECMA97a,
  title = {ECMAScript Language Specification},
  publisher = {European Computer Machinery Association},
  year = {1997},
  url = {http://www.ecma-international.org/publications/standards/Ecma-262-arch.htm},
  editor = {ECMA},
  month = jun}

@misc{ECMAScriptClassFieldProposal,
  title = {Class field declarations for JavaScript -- consulted on 24 February 2022},
  key = {ECMAScriptClassFieldProposal},
  note = {https://github.com/tc39/proposal-class-fields}}

@misc{ELanguage,
  title = {The {E} {Language}},
  url = {http://www.erights.org/},
  key = {ELanguage},
  note = {http://www.erights.org/}}

@misc{EToyGames,
  author = {Markus Gaelli},
  title = {Composing Simple Games with {Etoys}},
  misc = {gaelli},
  url = {http://www.emergent.de/etoys.html},
  key = {Etoys Games},
  note = {http://www.emergent.de/etoys.html}}

@techreport{Eage07a,
  author = {Michael Eager},
  title = {Introduction to the {DWARF} debugging format},
  year = {2007},
  url = {http://www.dwarfstd.org/doc/Debugging%20using%20DWARF.pdf},
  institution = {Eager Consulting}}

@article{Earl70a,
  author = {Jay Earley},
  title = {An efficient context-free parsing algorithm},
  journal = {Commun. ACM},
  volume = {13},
  pages = {94--102},
  publisher = {ACM Press},
  year = {1970},
  doi = {10.1145/362007.362035},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {2}}

@incollection{East08a,
  author = {Steve Easterbrook and Janice Singer and Margaret-Anne Storey and Daniela Damian},
  title = {Selecting Empirical Methods for Software Engineering Research},
  booktitle = {Guide to Advanced Empirical Software Engineering},
  publisher = {Springer verlag},
  year = {2008},
  editor = {Forrest Shull and Janice Singer and Daq I. K. Sjoberg}}

@book{Eber00a,
  title = {Proceedings of the Fourth European Conference on Software Maintenance and Reengineering},
  publisher = {IEEE},
  year = {2000},
  editor = {J. Ebert and Chris Verhoef}}

@techreport{Eber02a,
  author = {J{\"u}rgen Ebert and Bernt Kullbach and Volker Riediger and Andreas Winter},
  title = {{GUPRO} --- Generic Understanding of Programs, An Overview},
  year = {2002},
  url = {http://www.uni-koblenz.de/fb4/publikationen/gelbereihe/RR-7-2002.pdf},
  abstract = {GUPRO is an integrated workbench to support program
understanding of heterogenous software systems on
arbitrary levels of granularity. GUPRO can be
adapted to specific needs by an appropriate
conceptual model of the target software. \par GUPRO
is based on graph-technology. It heavily relies on
graph querying and graph algorithms. Source code is
extracted into a graph repository which can be
viewed by an integrated querying and browsing
facility. For C-like languages GUPRO browsing
includes a complete treatment of preprocessor
facilities. \par This paper summarizes the work done
on GUPRO during the last seven years.},
  institution = {Universit{\"a}t Koblenz-Landau},
  number = {7--2002},
  type = {Fachberichte Informatik}}

@article{Eber02b,
  author = {J{\"u}rgen Ebert and Bernt Kullbach and Volker Riediger and Andreas Winter},
  title = {GUPRO - Generic Understanding of Programs},
  journal = {Electronic Notes Theoretical Computer Science.},
  volume = {72},
  year = {2002},
  number = {2}}

@inproceedings{Eber94a,
  author = {J. Ebert and G. Engels},
  title = {Structural and Behavioral Views of {OMT}-Classes},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {142--157},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Ebra06a,
  author = {P. Ebraert and T. D'Hondt and Y. Vandewoude and Y. Berbers},
  title = {User-centric dynamic evolution},
  booktitle = {Proceedings, ERCIM 2006},
  year = {2006}}

@inproceedings{Ebra07a,
  author = {Ebraert, Peter and Vallejos, Jorge and Costanza, Pascal and {Van Paesschen}, Ellen and D'Hondt, Theo},
  title = {Change-oriented software engineering},
  booktitle = {Proceedings of the 2007 international conference on Dynamic languages: in conjunction with the 15th International Smalltalk Joint Conference},
  pages = {3--24},
  publisher = {ACM},
  year = {2007},
  isbn = {978-1-60558-084-5},
  location = {Lugano, Switzerland},
  series = {ICDL '07}}

@inproceedings{Ebra08a,
  author = {Peter Ebraert},
  title = {First-Class Change Objects for Feature-Oriented Programming},
  booktitle = {Proceedings of the 15th Working Conference on Reverse Engineering},
  pages = {319--322},
  publisher = {IEEE Computer Society},
  year = {2008},
  series = {{WCRE}'08}}

@phdthesis{Ebra09a,
  author = {Peter Ebraert},
  title = {A bottom-up approach to program variation},
  year = {2009},
  school = {Vrije Universiteit Brussels}}

@inproceedings{Ebra10a,
  author = {Ebraert, Peter and D'Hondt, Theo and Molderez, Tim and Janssens, Dirk},
  title = {Intensional changes: modularizing crosscutting features},
  booktitle = {Proceedings of the 2010 ACM Symposium on Applied Computing},
  pages = {2176--2182},
  publisher = {ACM},
  year = {2010},
  isbn = {978-1-60558-639-7},
  series = {SAC '10}}

@inproceedings{Ebra11a,
  author = {Ebraert, Peter and Soetens, Quinten David and Janssens, Dirk},
  title = {Change-based {FODA} diagrams: bridging the gap between feature-oriented design and implementation},
  booktitle = {Proceedings of the 2011 ACM Symposium on Applied Computing},
  pages = {1345--1352},
  publisher = {ACM},
  year = {2011},
  isbn = {978-1-4503-0113-8},
  series = {SAC'11}}

@misc{Ecke03a,
  author = {Bruce Eckel},
  title = {{Strong} {Typing} vs. {Strong} {Testing}},
  year = {2003},
  url = {http://www.mindview.net/WebLog/log-0025},
  key = {Ecke03a},
  note = {http://www.mindview.net/WebLog/log-0025}}

@misc{Eclipse03a,
  title = {Eclipse Platform: Technical Overview},
  year = {2003},
  url = {http://www.eclipse.org/whitepapers/eclipse-overview.pdf},
  key = {Eclipse03a}}

@misc{EclipseJDT,
  title = {Eclipse Java Development Tools (JDT) Subproject},
  url = {http://www.eclipse.org/jdt/},
  key = {Eclipse JDT},
  note = {http://www.eclipse.org/jdt/}}

@article{Edel88a,
  author = {Mark Edel},
  title = {The {Tinkertoy} Graphical Programming Environment},
  journal = {IEEE Trans on Software Engineering},
  volume = {SE-14},
  pages = {1110--1115},
  year = {1988},
  doi = {10.1109/32.7621},
  month = aug,
  number = {8}}

@inproceedings{Eden01a,
  author = {Eden, Amnon H.},
  title = {Visualization of Object-Oriented Architectures},
  booktitle = {International ICSE workshop on Software Visualization},
  year = {2001},
  month = may}

@inproceedings{Eden02a,
  author = {Eden, Amnon H.},
  title = {LePUS: A Visual Formalism for Object-Oriented Architectures},
  booktitle = {6th World Conference on Integrated Design and Process Technology (IDPT)},
  year = {2002},
  location = {Pasadena, California},
  month = jun}

@inproceedings{Eder12a,
  author = {Eder, Sebastian and Junker, Maximilian and J{\"u}rgens, Elmar and Hauptmann, Benedikt and Vaas, Rudolf and Prommer, Karl-Heinz},
  title = {How much does unused code matter for maintenance?},
  booktitle = {2012 34th International Conference on Software Engineering (ICSE)},
  pages = {1102--1111},
  year = {2012},
  organization = {IEEE}}

@techreport{Eder94a,
  author = {J. Eder, G. Kappel, M. Schrefl},
  title = {Coupling and cohesion in object-oriented systems},
  year = {1994},
  institution = {Department of Information Systems, University of Linz, Austria}}

@inproceedings{Edwa04a,
  author = {Jonathan Edwards},
  title = {Example centric programming},
  booktitle = {OOPSLA 04: Companion to the 19th annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications},
  pages = {124--124},
  publisher = {ACM Press},
  year = {2004},
  url = {http://subtextual.org/OOPSLA04.pdf},
  doi = {10.1145/1028664.1028713},
  isbn = {1-58113-833-4},
  location = {Vancouver, BC, CANADA}}

@inproceedings{Edwa05a,
  author = {Jonathan Edwards},
  title = {Subtext: uncovering the simplicity of programming},
  booktitle = {Proceedings of the 20th Annual {ACM} {SIGPLAN} Conference on Object-Oriented Programming, Systems, Languages, and Applications, {OOPSLA} 2005, October 16-20, 2004, San Diego, {CA}, {USA}},
  pages = {505--518},
  publisher = {ACM},
  year = {2005},
  url = {http://subtextual.org/OOPSLA05.pdf},
  doi = {10.1145/1094811.1094851},
  editor = {Ralph Johnson and Richard P. Gabriel},
  isbn = {1-59593-031-0}}

@inproceedings{Edwa07a,
  author = {Jonathan Edwards},
  title = {No ifs, ands, or buts: uncovering the simplicity of conditionals},
  booktitle = {OOPSLA '07: Proceedings of the 22nd annual ACM SIGPLAN conference on Object oriented programming systems and applications},
  pages = {639--658},
  publisher = {ACM},
  year = {2007},
  url = {http://subtextual.org/OOPSLA07.pdf},
  doi = {10.1145/1297027.1297075},
  address = {New York, NY, USA},
  isbn = {978-1-59593-786-5},
  location = {Montreal, Quebec, Canada}}

@techreport{Edwa63a,
  author = {D. J. Edwards and M. L. Minsky},
  title = {Recent Improvements in {DDT}},
  year = {1963},
  url = {ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-060.pdf},
  abstract = {This paper will report new developments and recent
improvements to DDT. {"}Window DDT{"} now will
remember undefined symbols and define them on a
later command. Using sequence breaks, it can change
the contents of memory while a program is running,
and the contents of memory can be displayed in
symbolic form on the scope.},
  institution = {MIT Artificial Intelligence Laboratory},
  key = {Edwa63a},
  number = {AIM-60}}

@article{Edwa94a,
  author = {Stephen H. Edwards and Wayne D. Heym and Timothy J. Long and Murali Sitaraman and Bruce W. Weide},
  title = {Part II: specifying components in {RESOLVE}},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {19},
  pages = {29--39},
  publisher = {ACM Press},
  year = {1994},
  doi = {10.1145/190679.190682},
  issn = {0163-5948},
  number = {4}}

@inproceedings{Edwa97a,
  author = {Edwards, W. Keith},
  title = {Flexible conflict detection and management in collaborative applications},
  booktitle = {Proceedings of the 10th annual ACM symposium on User interface software and technology},
  pages = {139--148},
  publisher = {ACM},
  year = {1997},
  doi = {/10.1145/263407.263533},
  address = {New York, NY, USA},
  isbn = {0-89791-881-9},
  location = {Banff, Alberta, Canada},
  series = {UIST'97}}

@inproceedings{Edwi02c,
  author = {Edwin Hautus},
  title = {Improving Java Software through Package Structure Analysis},
  booktitle = {Software Engineering and Applications - 2002},
  publisher = {ACTA Press},
  year = {2002},
  address = {Calgary, AB, Canada}}

@techreport{Eert91a,
  author = {Henk Eertink and Dietmar Wolz},
  title = {Symbolic Execution of {LOTOS} Specifications},
  year = {1991},
  institution = {University of Twente},
  month = may,
  number = {91/016},
  type = {Memoranda Informatica 91-47, TIOS}}

@article{Egbe92a,
  author = {Parris K. Egbert and William J. Kubitz},
  title = {Application Graphics Modeling Support Through Object Orientation},
  journal = {IEEE Computer (Special Issue on Inheritance \& Classification)},
  volume = {25},
  pages = {84--91},
  year = {1992},
  month = oct,
  number = {10}}

@inproceedings{Ege87a,
  author = {Raimund K. Ege and David Maier},
  title = {The Filter Browser Defining Interfaces Graphically},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {140--150},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Egge92a,
  author = {Thomas Eggenschwiler and Erich Gamma},
  title = {{ET}++ Swaps Manager: Using Object Technology in the Financial Engineering Domain},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {166--177},
  year = {1992},
  month = oct}

@inproceedings{Egye03a,
  author = {Alexander Egyed},
  title = {A Scenario-Driven Approach to Trace Dependency Analysis},
  booktitle = {IEEE Transactions on Software Engineering},
  volume = {29},
  year = {2003},
  month = feb}

@inproceedings{Egye99a,
  author = {Alexander Egyed and Phillipe B. Kruchten},
  title = {Rose/Architect: a tool to visualize architecture},
  booktitle = {Proc. 32nd Annual Hawaii Conference on Systems Sciences},
  year = {1999}}

@inproceedings{Egyed00a,
  author = {Egyed, Alexander and Medvidovic, Nenad},
  title = {A Formal Approach to Heterogeneous Software Modeling},
  booktitle = {Fundamental {Approaches} to {Software} {Engineering}},
  pages = {178--192},
  publisher = {Springer, Berlin, Heidelberg},
  year = {2000},
  url = {http://sunset.usc.edu/TECHRPTS/1999/usccse99-526/usccse99-526.pdf},
  abstract = {The problem of consistently engineering large, complex software systems of today is often addressed by introducing new, "improved" models. Examples of such models are architectural, design, structural, behavioral, and so forth. Each software model is intended to highlight a particular view of a desired system. A combination of multiple models is needed to represent and understand the entire system. Ensuring that the various models used in development are consistent relative to each other thus becomes a critical concern. This paper presents an approach that integrates and ensures the consistency across an architectural and a number of design models. The goal of this work is to combine the respective strengths of a powerful, specialized (architecture-based) modeling approach with a widely used, general (design-based) approach. We have formally addressed the various details of our approach, which has allowed us to construct a large set of supporting tools to automate the related development activities. We use an example application throughout the paper to illustrate the concepts.},
  isbn = {978-3-540-67261-6 978-3-540-46428-0},
  keywords = {heterogeneous model, sple},
  language = {en},
  month = mar,
  series = {Lecture {Notes} in {Computer} {Science}},
  urldate = {2018-05-04}}

@article{Ehri10a,
  author = {Ehringer, David},
  title = {The dalvik virtual machine architecture},
  journal = {Techn. report (March 2010)},
  volume = {4},
  pages = {8},
  year = {2010}}

@inproceedings{Ehri90a,
  author = {H-D. Ehrich and Joseph A. Goguen and Amilcar Sernadas},
  title = {A Categorical Theory of Objects as Observed Processes},
  booktitle = {Proc. REX/FOOLS Workshop},
  year = {1990},
  address = {Noordwijkerhout},
  month = jun,
  note = {To appear}}

@inproceedings{Ehri93a,
  author = {H. Ehrig and R. M. Jimenez and F. Orejas},
  title = {Compositionality Results for Different Types of Parameterization and Parameter Passing in Specification Languages},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {31--45},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@article{Eick00a,
  author = {Stephen G. Eick},
  title = {Visual Discovery and Analysis},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {6},
  pages = {44--58},
  year = {2000},
  number = {1}}

@article{Eick01a,
  author = {Stephen Eick and Todd Graves and Alan Karr and J. Marron and Audris Mockus},
  title = {Does Code Decay? Assessing the Evidence from Change Management Data},
  journal = {IEEE Transactions on Software Engineering},
  volume = {27},
  pages = {1--12},
  publisher = {IEEE Press},
  year = {2001},
  issn = {0098-5589},
  number = {1}}

@article{Eick02a,
  author = {Stephen Eick and Todd Graves and Alan Karr and Audris Mockus and Paul Schuster},
  title = {Visualizing Software Changes},
  journal = {IEEE Transactions on Software Engineering},
  volume = {28},
  pages = {396--412},
  year = {2002},
  number = {4}}

@article{Eick92a,
  author = {Stephen G. Eick and Joseph L. Steffen and Eric E., Jr., Sumner},
  title = {{SeeSoft}---A Tool for Visualizing Line Oriented Software Statistics},
  journal = {IEEE Transactions on Software Engineering},
  volume = {18},
  pages = {957--968},
  year = {1992},
  month = nov,
  note = {Depth},
  number = {11}}

@article{Eick93a,
  author = {Christoph F. Eick and Bogdan Czejdo},
  title = {Reactive rules for {C++}},
  journal = {JOOP},
  volume = {6},
  pages = {56--62},
  year = {1993},
  month = oct,
  number = {6}}

@article{Eick94a,
  author = {Stephen G. Eick},
  title = {Graphically Displaying Text},
  journal = {Journal of Computational Graphics and Statistics},
  volume = {3},
  pages = {127--142},
  year = {1994},
  number = {2}}

@article{Eick95a,
  author = {Stephen G. Eick and Paul J. Lucas},
  title = {Displaying Trace Files},
  journal = {Software Practice and Experience},
  volume = {26},
  pages = {399--409},
  year = {1995},
  number = {4}}

@article{Eick95b,
  author = {Stephen G. Eick and Graham J. Wills},
  title = {High Interaction Graphics},
  journal = {European Journal of Operational Research},
  volume = {84},
  pages = {445--459},
  year = {1995},
  url = {citeseer.ist.psu.edu/eick94high.html}}

@inproceedings{Eide01a,
  author = {Eric Eide and Alastair Reid and Matthew Flatt and Jay Lepreau},
  title = {Aspect Weaving as Component Knitting: Separating Concerns with Knit},
  booktitle = {Workshop on Advanced Separation of Concerns in Software Engineering},
  year = {2002},
  url = {http://www.cs.utah.edu/flux/papers/knit-icse01-wasc-base.html}}

@inproceedings{Eide08a,
  author = {Eide, Eric and Regehr, John},
  title = {Volatiles Are Miscompiled, and What to Do About It},
  booktitle = {Embedded Software},
  year = {2008},
  doi = {10.1145/1450058.1450093},
  keywords = {automated testing, compiler defect, compiler testing, random program generation, random testing, volatile},
  series = {EMSOFT'08}}

@inproceedings{Eise01a,
  author = {Thomas Eisenbarth and Rainer Koschke and Daniel Simon},
  title = {Aiding {Program} {Comprehension} by {Static} and {Dynamic} {Feature} {Analysis}},
  booktitle = {Proceedings of {ICSM} '01 (International Conference on Software Maintenance)},
  publisher = {IEEE Computer Society Press},
  year = {2001},
  location = {Florence, Italy}}

@inproceedings{Eise01b,
  author = {Thomas Eisenbarth and Rainer Koschke and Daniel Simon},
  title = {Feature-{Driven} {Program} {Understanding} using {Concept} {Analysis} of {Execution} {Traces}},
  booktitle = {Proceedings of IWPC '01 (9th International Workshop on Program Comprehension)},
  pages = {300--309},
  publisher = {IEEE Computer Society Press},
  year = {2001}}

@inproceedings{Eise02a,
  author = {T. Eisenbarth and R. Koschke and G. Vogel},
  title = {Static Trace Execution},
  booktitle = {9th Working Conference on Reverse Engineering},
  publisher = {IEEE},
  year = {2002}}

@inproceedings{Eise02b,
  author = {Daniel Simon and Thomas Eisenbarth},
  title = {Evolutionary Introduction of Software Product Lines},
  booktitle = {SPLC 2: Proceedings of the Second International Conference on Software Product Lines},
  pages = {272--282},
  publisher = {Springer-Verlag},
  year = {2002},
  address = {London, UK},
  isbn = {3-540-43985-4}}

@article{Eise03a,
  author = {Thomas Eisenbarth and Rainer Koschke and Daniel Simon},
  title = {Locating Features in Source Code},
  journal = {IEEE Computer},
  volume = {29},
  pages = {210--224},
  year = {2003},
  month = mar,
  number = {3}}

@inproceedings{Eise05a,
  author = {Eisenberg, Andrew and De Volder, Kris},
  title = {Dynamic Feature Traces: Finding Features in Unfamiliar code},
  booktitle = {Proceedings IEEE International Conference on Software Maintenance ({ICSM} 2004)},
  pages = {337--346},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  address = {Los Alamitos CA},
  location = {Budapest, Hungary},
  month = sep}

@article{Eise05b,
  author = {Thomas Eisenbarth and Rainer Koschke and Gunther Vogel},
  title = {Static object trace extraction for programs with pointers},
  journal = {Journal of Systems and Software},
  volume = {77},
  pages = {263--284},
  publisher = {Elsevier Science Inc.},
  year = {2005},
  doi = {10.1016/j.jss.2004.04.028},
  address = {New York, NY, USA},
  issn = {0164-1212},
  number = {3}}

@inproceedings{Eise06a,
  author = {Andrew David Eisenberg and Gregor Kiczales},
  title = {A Simple Edit-Time Metaobject Protocol},
  booktitle = {International Conference on Aspect-Oriented Software Development},
  year = {2006},
  url = {http://www.cs.ubc.ca/~ade/research/are-mop-oal06.pdf}}

@inproceedings{Eise23a,
author = {Eisele, Max and Ebert, Daniel and Huth, Christopher and Zeller, Andreas},
title = {Fuzzing Embedded Systems using Debug Interfaces},
year = {2023},
isbn = {9798400702211},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3597926.3598115},
doi = {10.1145/3597926.3598115},
abstract = {Fuzzing embedded systems is hard. Their key components - microcontrollers - are highly diverse and cannot be easily virtualized; their software may not be changed or instrumented. However, we observe that many, if not most, microcontrollers feature a debug interface through which a debug probe (typically controllable via GDB, the GNU debugger) can set a limited number of hardware breakpoints. Using these, we extract partial coverage feedback even for uninstrumented binary code; and thus enable effective fuzzing for embedded systems through a generic, widespread mechanism. In its evaluation on four different microcontroller boards, our prototypical implementation GDBFuzz quickly reaches high code coverage and detects known and new vulnerabilities. As it can be applied to any program and system that GDB can debug, GDBFuzz is one of the least demanding and most versatile coverage-guided fuzzers.},
booktitle = {Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {1031-1042},
numpages = {12},
keywords = {GDB, automated software testing, embedded systems, firmware, fuzzing, security},
series = {ISSTA 2023}
}

@inproceedings{Eise93a,
  author = {Susan Eisenbach and Ross Paterson},
  title = {Pi-Calculus Semantics of the Concurrent Configuration Language Darwin},
  booktitle = {Proceedings of the 26th Annual Hawaii International Conference on System Sciences},
  volume = {2},
  publisher = {IEEE Computer Society Press},
  year = {1993},
  url = {ftp://dse.doc.ic.ac.uk/dse-papers/darwin/formal.ps.Z}}

@article{Eise97a,
  author = {Eisenstadt, Marc},
  title = {My Hairiest Bug War Stories},
  journal = {Commun. ACM},
  volume = {40},
  pages = {30--37},
  publisher = {ACM},
  year = {1997},
  url = {http://doi.acm.org/10.1145/248448.248456},
  doi = {10.1145/248448.248456},
  acmid = {248456},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {4},
  numpages = {8}}

@inproceedings{Eixe98a,
  author = {Wolfgang Eixelsberger and Michaela Ogris and Gall, Harald and Bernt Bellay},
  title = {Software Architecture Recovery of a Program Family},
  booktitle = {International Conference on Software Engineering ({ICSE})},
  pages = {508--511},
  year = {1998},
  isbn = {0-8186-8368-6}}

@inproceedings{Eixe98c,
  author = {Wolfgang Eixelsberger and Gall, Harald},
  title = {Describing Software Architectures by System Structure and Properties},
  booktitle = {International Computer Software and Applications Conference (COMPSAC)},
  pages = {106--111},
  publisher = {IEEE Computer Society},
  year = {1998},
  url = {http://csdl2.computer.org/dl/proceedings/compsac/1998/8585/00/85850106.pdf}}

@inproceedings{Ekel15a,
  author = {Ekelund, Edward Dunn and Engstr{\"o}m, Emelie},
  title = {Efficient Regression Testing Based on Test History: An Industrial Evaluation},
  booktitle = {International Conference on Software Maintenance and Evolution},
  year = {2015},
  organization = {IEEE Computer Society}}

@article{Ekma03a,
  author = {G\"{o}rel Hedin and Eva Magnusson},
  title = {{JastAdd}: An aspect-oriented compiler construction system},
  journal = {Science of Computer Programming},
  volume = {47},
  pages = {37--58},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2003},
  doi = {10.1016/S0167-6423(02)00109-0},
  address = {Amsterdam, The Netherlands},
  number = {1}}

@article{Ekma07a,
  author = {Torbj{\"o}rn Ekman and G{\"o}rel Hedin},
  title = {Pluggable checking and inferencing of non-null types for {Java}},
  journal = {Journal of Object Technology},
  volume = {6},
  pages = {455--475},
  year = {2007},
  number = {9}}

@article{Ekma07b,
  author = {Torbj\"{o}rn Ekman and G\"{o}rel Hedin},
  title = {The {JastAdd} system -- modular extensible compiler construction},
  journal = {Science of Computer Programming},
  volume = 69,
  pages = {14--26},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2007},
  doi = {10.1016/j.scico.2007.02.003},
  address = {Amsterdam, The Netherlands},
  number = {1-3}}

@inproceedings{Ekma07c,
  author = {Torbj\"{o}rn Ekman and G\"{o}rel Hedin},
  title = {The {JastAdd} extensible {Java} compiler},
  booktitle = {OOPSLA'07: Proceedings of the 22nd Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  pages = {1--18},
  publisher = {ACM Press},
  year = {2007},
  doi = {10.1145/1297027.1297029},
  address = {New York, NY, USA},
  editor = {Richard P. Gabriel and David F. Bacon and Cristina Videira Lopes and Guy L. Steele Jr.},
  location = {Montreal, Quebec, Canada}}

@inproceedings{Ekma08a,
  author = {Ekman, Torbj\"{o}rn and Sch\"{a}fer, Max and Verbaere, Mathieu},
  title = {Refactoring is Not (yet) about Transformation},
  year = {2008},
  isbn = {9781605583396},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1636642.1636647},
  doi = {10.1145/1636642.1636647},
  abstract = {In order to ensure correctness, refactorings have to check extensive preconditions before performing the transformation. These preconditions usually involve subtle analyses of the program to be refactored, and as long as there is no good support for implementing them, refactoring is not about transformation, but about analysis. In most cases, these refactoring analyses are very similar to analyses implemented in a compiler and require the same level of detail to ensure behaviour preservation. We therefore propose to implement a refactoring engine on top of a compiler to leverage existing infrastructure, and complement it with refactoring-specific functionality.Many simple refactorings appear as building blocks in more complex refactorings. We have implemented two such building blocks that are widely useful: The first one allows to move symbolic names from one place in the program to another while preserving binding structure; it frees the developer from having to worry about issues like name clashes and accidental overriding. The second building block encapsulates data flow and control flow analyses, enabling the developer to specify precise conditions for validity of a transformation in terms of concepts like dominance and liveness.Based on these approaches, we have implemented a refactoring engine as part of a larger effort to generate IDEs from declarative language specifications using the JastAdd metacompiler tools. The described building blocks were successfully used as a foundation for other refactorings such as Rename, Extract Method, and Encapsulate Field.},
  booktitle = {Proceedings of the 2nd Workshop on Refactoring Tools},
  articleno = {5},
  numpages = {4},
  keywords = {refactoring, IDEs, extensible compilers},
  location = {Nashville, Tennessee},
  series = {WRT '08}}

@inproceedings{Ekwa08a,
  author = {Ekoko, Ekwa D. and Robillard, Martin P.},
  title = {Clonetracker: tool support for code clone management},
  booktitle = {ICSE '08: Proceedings of the 30th international conference on Software engineering},
  pages = {843--846},
  publisher = {ACM},
  year = {2008},
  url = {http://dx.doi.org/10.1145/1368088.1368218},
  doi = {10.1145/1368088.1368218},
  abstract = {Code clones are generally considered to be an
obstacle to software maintenance.},
  address = {New York, NY, USA},
  citeulike-article-id = {6566348},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1368088.1368218},
  citeulike-linkout-1 = {http://dx.doi.org/10.1145/1368088.1368218},
  isbn = {978-1-60558-079-1},
  location = {Leipzig, Germany},
  posted-at = {2010-01-20 14:12:24},
  priority = {2}}

@inproceedings{Elba00a,
  author = {Sebastian G. Elbaum and Alexey G. Malishevsky and Gregg Rothermel},
  title = {Prioritizing test cases for regression testing},
  booktitle = {International Symposium on Software Testing and Analysis},
  pages = {102--112},
  publisher = {ACM Press},
  year = {2000}}

@article{Elba03a,
  author = {S. Elbaum and P. Kallakuri and Malishevsky, A. G. and Rothermel, G. and Kanduri, S.},
  title = {Understanding the effects of changes on the cost-effectiveness of regression testing techniques},
  journal = {Journal of Software Testing, Verification, and Reliability},
  year = {2003}}

@article{Elem01a,
  author = {Khaled El Emam and Saida Benlarbi and Nishith Goel and Shesh N. Rai},
  title = {The Confounding Effect of Class Size on the Validity of Object-Oriented Metrics},
  journal = {IEEE Transactions on Software Engineering},
  volume = {27},
  pages = {630--650},
  publisher = {IEEE Computer Society},
  year = {2001},
  doi = {10.1109/32.935855},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  number = {7}}

@inproceedings{Eles97a,
  author = {Eles P. and Peng Z. and Kuchcinski K. and Doboli A.},
  title = {System Level Hardware/Software Partitioning Based on Simulated Annealing and Tabu Search},
  booktitle = {Design Automation for Embedded Systems},
  volume = {2},
  pages = {5--32},
  publisher = {Springer Formerly Kluwer Academic Publishers},
  year = {1997},
  url = {http://www.springerlink.com/index/N0M725Q46126V741.pdf},
  month = jan}

@misc{Elia02a,
  author = {Anders Eliasson},
  title = {Implement Design by Contract for Java using Dynamic Proxies},
  year = {2002},
  url = {http://www.javaworld.com/javaworld/jw-02-2002/jw-0215-dbcproxy.html},
  howpublished = {\url{hhttp://download.oracle.com/javase/1.5.0/docs/{API}/java/lang/reflect/Proxy.html}},
  key = {contractProxies}}

@unpublished{Elia94a,
  author = {Gabriele elia and Guiseppe Menga},
  title = {G++:{A} Pattern Language for Object-Oriented Design of Concurrent and Distributed Information Systems with Applications to Computer Integrated Manufacturing},
  year = {1994},
  note = {Dept. of Automatica e Informatica Politecnico di Torino},
  type = {Draft}}

@book{Elie95a,
  author = {Anton Eliens},
  title = {Principles of Object-Oriented Software Development},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-62444-3}}

@article{Elli80a,
  author = {Clarence Ellis and Gary J. Nutt},
  title = {Computer Science and Office Information Systems},
  journal = {ACM Computing Surveys},
  volume = {12},
  pages = {27--60},
  year = {1980},
  month = mar,
  number = {1}}

@inproceedings{Elli82a,
  author = {Clarence Ellis and M. Bernal},
  title = {OfficeTalk-{D}: An Experimental Office Information System},
  booktitle = {Proceedings First ACM SIGOA Conference},
  pages = {131--140},
  year = {1982},
  address = {Philadelphia},
  month = jun}

@techreport{Elli92a,
  author = {Clarence Ellis and Gary J. Nutt},
  title = {The Modelling and Analysis of Coordination Systems},
  year = {1992},
  institution = {University of Colorado},
  type = {Technical Report}}

@inproceedings{Elli99a,
  author = {Susan Elliott Sim and Charles L.A. Clarke and Richard C. Holt and Anthony M. Cox},
  title = {Browsing and Searching Software Architectures},
  booktitle = {International Conference on Software Maintenant ({ICSM})},
  pages = {381--391},
  publisher = {IEEE CS},
  year = {1999},
  doi = {10.1109/ICSM.1999.792636},
  issn = {1063-6773}}

@book{Elma10a,
  author = {Elmasri, Ramez and Navathe, Shamkant},
  title = {Fundamentals of Database Systems},
  publisher = {Addison-Wesley Publishing Company},
  year = {2010},
  address = {USA},
  edition = {6th},
  isbn = {0136086209, 9780136086208}}

@book{Elma94a,
  author = {Ramez Elmasri and Shamkant B. Navathe},
  title = {Fundamentals of Database Systems},
  publisher = {Benjamin/Cummings},
  year = {1994},
  isbn = {0-8053-1753-8}}

@article{Elmq15a,
  author = {Elmqvist, Niklas and Yi, Ji Soo},
  title = {Patterns for visualization evaluation},
  journal = {Information Visualization},
  volume = {14},
  pages = {250--269},
  publisher = {SAGE Publications Sage UK: London, England},
  year = {2015},
  number = {3}}

@inproceedings{Elra02a,
  author = {Mohammad El-Ramly and Eleni Stroulia and Paul Sorenson},
  title = {Recovering software requirements from system-user interaction traces},
  booktitle = {Proceedings ACM International Conference on Software Engineering and Knowledge Engineering},
  pages = {447--454},
  publisher = {ACM Press},
  year = {2002},
  address = {New York NY}}

@inproceedings{Elra06a,
  author = {El-Ramly, Mohammad and Eltayeb, Rihab and Alla, Hisham A},
  title = {An experiment in automatic conversion of legacy Java programs to C},
  booktitle = {IEEE International Conference on Computer Systems and Applications, 2006.},
  pages = {1037--1045},
  year = {2006},
  organization = {IEEE}}

@article{Elrad01a,
  author = {Elrad, Tzilla and Filman, Robert E. and Bader, Atef},
  title = {Aspect-Oriented Programming},
  journal = {cacm},
  volume = 44,
  year = {2001},
  month = oct,
  number = 10}

@misc{Elua,
  title = {eLua},
  url = {http://www.eluaproject.net/},
  howpublished = {\url{http://www.eluaproject.net/}},
  key = {eLua}}

@inproceedings{Emer84a,
  author = {Thomas Emerson},
  title = {A Discriminant Metric for Module Cohesion},
  booktitle = {Proceedings of the 7th International Conference on Software Engineering ({ICSE})},
  year = {1984}}

@phdthesis{Emi07a,
  author = {Burak Emir},
  title = {Object-Oriented Pattern Matching},
  year = {2007},
  school = {Ecole Polytechnique F\'ed\'erale de Lausanne},
  month = oct,
  type = {{Ph.D}. Thesis}}

@inproceedings{Emir07b,
  author = {Emir, Burak and Odersky, Martin and Williams, John},
  title = {Matching Objects with Patterns},
  booktitle = {21st European Conference on Object-Oriented Programming},
  pages = {273--298},
  year = {2007}}

@inproceedings{Engb12a,
  author = {Engblom, Jakob},
  title = {A review of reverse debugging},
  booktitle = {System, Software, SoC and Silicon Debug Conference (S4D), 2012},
  year = {2012}}

@techreport{Engb86a,
  author = {Uffe Engberg and M. Nielsen},
  title = {A Calculus of Communicating Systems with Label Passing},
  year = {1986},
  institution = {University of Aarhus},
  number = {PB-208},
  type = {DAIMI}}

@inproceedings{Engb90a,
  author = {Uffe Engberg and Glynn Winskel},
  title = {Petri Nets as Models of Linear Logic},
  booktitle = {Proceedings CAAP '90},
  volume = {431},
  pages = {147--161},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Copenhagen},
  editor = {A. Arnold},
  month = may,
  series = {LNCS}}

@article{Enge03a,
  author = {Engelbrecht, R.L. and Kourie, D.G.},
  title = {Translating Smalltalk blocks to Java},
  journal = {Software, IEE Proceedings},
  volume = {150},
  pages = {203-211},
  year = {2003},
  doi = {10.1049/ip-sen:20030582},
  issn = {1462-5970},
  month = jun,
  number = {3}}

@inproceedings{Enge96a,
  author = {Vadim Engelson and Dag Fritzson and Peter Fritzson},
  title = {Automatic Generation of User Interfaces from Data Structure Specifications and Object-Oriented Application Models},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {114--141},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Engl00a,
  author = {Engler, Dawson and Chelf, Benjamin and Chou, Andy and Hallem, Seth},
  title = {Checking system rules using system-specific, programmer-written compiler extensions},
  booktitle = {Proceedings of the 4th conference on Symposium on Operating System Design \& Implementation - Volume 4},
  pages = {1--1},
  publisher = {USENIX Association},
  year = {2000},
  address = {Berkeley, CA, USA},
  location = {San Diego, California},
  numpages = {1},
  series = {OSDI'00}}

@article{Engl01a,
  author = {Engler, Dawson and Chen, David Yu and Hallem, Seth and Chou, Andy and Chelf, Benjamin},
  title = {Bugs as deviant behavior: a general approach to inferring errors in systems code},
  journal = {SIGOPS Oper. Syst. Rev.},
  volume = {35},
  pages = {57--72},
  publisher = {ACM},
  year = {2001},
  address = {New York, NY, USA},
  issn = {0163-5980},
  issue = {5},
  month = {oct},
  numpages = {16}}

@inproceedings{Engl95a,
  author = {Dawson R. Engler and M. Frans Kaashoek and James O'Tool},
  title = {Exokernel: An Operating System Architecture for Application-Level Resource Management},
  booktitle = {SOSP},
  pages = {251--266},
  year = {1995},
  doi = {10.1145/224056.224076}}

@inproceedings{Engl95b,
  author = {Engler, D.R. and Gupta, S.K. and Kaashoek, M.F.},
  title = {{AVM}: Application-Level Virtual Memory},
  booktitle = {Hot Topics in Operating Systems, 1995. (HotOS-V), Proceedings., Fifth Workshop on},
  pages = {72 -77},
  year = {1995},
  doi = {10.1109/HOTOS.1995.513458},
  keywords = {AVM; Aegis experimental exokernel; OS kernel; VM abstraction; application-level virtual memory; architectures; bad memory policies; opportunity cost; page-table structure selection; prototype AVM system; software TLB management; virtual memory; operating system kernels; paged storage; software engineering;},
  month = {may}}

@inproceedings{Engs08a,
  author = {Engstr{\"o}m, Emelie and Skoglund, Mats and Runeson, Per},
  title = {{Empirical Evaluations of Regression Test Selection Techniques: A Systematic Review}},
  booktitle = {Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement},
  pages = {22--31},
  year = {2008},
  organization = {ACM}}

@article{Engs10a,
  author = {Engstr{\"o}m, Emelie and Runeson, Per and Skoglund, Mats},
  title = {{A Systematic Review on Regression Test Selection Techniques}},
  journal = {Information and Software Technology},
  volume = {52},
  pages = {14--30},
  publisher = {Elsevier},
  year = {2010},
  number = {1}}

@book{Enja93a,
  title = {Proceedings {STACS}'93},
  volume = {665},
  publisher = {Springer-Verlag},
  year = {1993},
  address = {Wurzburg, Germany},
  editor = {P.Enjalbert and Finkel, K.W.Wagner, A.},
  isbn = {3-540-56503-5},
  month = feb,
  series = {LNCS}}

@book{Enja94a,
  title = {Proceedings of {STACS} '94 11th Annual Symposium on Theoretical Aspects of Computer Science},
  volume = {775},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {P. Enjalbert and E.W. Mayr and K.W. Wagner},
  isbn = {3-540-57785-8},
  series = {LNCS}}

@inproceedings{Eppe22,
  author = {Epperson, Will and Wang, April Yi and DeLine, Robert and Drucker, Steven M},
  title = {Strategies for reuse and sharing among data scientists in software teams},
  booktitle = {Proceedings of the 44th International Conference on Software Engineering: Software Engineering in Practice},
  pages = {243--252},
  year = {2022},
  date-added = {2023-09-15 10:29:15 +0200},
  date-modified = {2023-09-15 10:29:41 +0200}}

@inproceedings{Eppi91a,
  author = {Steven D. Eppinger, David A. Gebala},
  title = {Methods for Analyzing Design Procedures},
  booktitle = {ASME Conference on Design Theory and Methodology},
  pages = {227--233},
  year = {1991},
  note = {Miami}}

@inproceedings{Epst88a,
  author = {Danny Epstein and Wilf R. LaLonde},
  title = {A {Smalltalk} Window System Based on Constraints},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {83--94},
  year = {1988},
  month = nov}

@inproceedings{Erbe05a,
  author = {Erben and L{\"o}hr},
  title = {SAB - The Software Architecture Browser},
  booktitle = {International Workshop on Visualizing Software for Understanding and Analysis (VISSOFT)},
  publisher = {IEEE CS},
  year = {2005},
  month = sep}

@inproceedings{Erde11a,
  author = {Erdemir, Ural and Tekin, Umut and Buzluca, Feza},
  title = {E-Quality: A graph based object oriented software quality visualization tool},
  booktitle = {2011 6th International Workshop on Visualizing Software for Understanding and Analysis (VISSOFT)},
  pages = {1--8},
  year = {2011},
  organization = {IEEE}}

@book{Erdo02a,
  author = {Hakan Erdogmus and Oryal Tanir},
  title = {Advances in Software Engineering},
  publisher = {Springer},
  year = {2002}}

@inproceedings{Erdw13a,
  author = {Erdweg, Sebastian and Van Der Storm, Tijs and V{\"o}lter, Markus and Boersma, Meinte and Bosman, Remi and Cook, William R and Gerritsen, Albert and Hulshout, Angelo and Kelly, Steven and Loh, Alex and others},
  title = {The state of the art in language workbenches},
  booktitle = {International Conference on Software Language Engineering},
  pages = {197--217},
  year = {2013},
  organization = {Springer}}

@article{Eric17a,
  title={Protocol analysis},
  author={Ericsson, K Anders},
  journal={A companion to cognitive science},
  pages={425--432},
  year={2017},
  publisher={Wiley Online Library}
}

@article{Eric19a,
  author = {Sandberg Ericsson, Adam and Myreen, Magnus O. and {\AA}man Pohjola, Johannes},
  title = {A Verified Generational Garbage Collector for CakeML},
  journal = {Journal of Automated Reasoning},
  volume = {63},
  pages = {463--488},
  year = {2019},
  url = {https://doi.org/10.1007/s10817-018-9487-z},
  doi = {10.1007/s10817-018-9487-z},
  abstract = {This paper presents the verification of a generational copying garbage collector for the CakeML runtime system. The proof is split into an algorithm proof and an implementation proof. The algorithm proof follows the structure of the informal intuition for the generational collector's correctness, namely, a partial collection cycle in a generational collector is the same as running a full collection on part of the heap, if one views pointers to old data as non-pointers. We present a pragmatic way of dealing with ML-style mutable state, such as references and arrays, in the proofs. The development has been fully integrated into the in-logic bootstrapped CakeML compiler, which now includes command-line arguments that allow configuration of the generational collector. All proofs were carried out in the HOL4 theorem prover.},
  da = {2019/08/01},
  date-added = {2022-09-27 20:59:00 +0000},
  date-modified = {2022-09-27 20:59:00 +0000},
  id = {Sandberg Ericsson2019},
  isbn = {1573-0670},
  number = {2},
  ty = {JOUR}}

@book{Erik98a,
  author = {Hans-Erik Eriksson and Magnus Penker},
  title = {{UML} Toolkit},
  publisher = {John Wiley \& Sons},
  year = {1998},
  isbn = {0-471-19161-2}}

@article{Erli00a,
  author = {Len Erlikh},
  title = {Leveraging Legacy System Dollars for E-Business},
  journal = {IT Professional},
  volume = {2},
  pages = {17--23},
  publisher = {IEEE Educational Activities Department},
  year = {2000},
  doi = {10.1109/6294.846201},
  address = {Piscataway, NJ, USA},
  number = {3}}

@inproceedings{Erli00b,
  author = {Erlingsson, U. and Schneider, F.B.},
  title = {IRM enforcement of Java stack inspection},
  booktitle = {IEEE Symposium on Security and Privacy},
  pages = {246-255},
  year = {2000}}

@phdthesis{Erli04a,
  author = {Erlingsson, Ulfar},
  title = {The inlined reference monitor approach to security policy enforcement},
  publisher = {Cornell University},
  year = {2004},
  school = {Cornell University},
  address = {Ithaca, NY, USA}}

@article{Erli06a,
  author = {Erlingsson, \'{U}lfar and MacCormick, John},
  title = {Ad hoc extensibility and access control},
  journal = {SIGOPS Oper. Syst. Rev.},
  volume = {40},
  pages = {93--101},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1151374.1151393},
  address = {New York, NY, USA},
  issn = {0163-5980},
  number = {3}}

@inproceedings{Erli99a,
  author = {Erlingsson, U. and Schneider, F.B.},
  title = {SASI enforcement of security policies: a retrospective},
  booktitle = {Proc. Workshop on New Security Paradigms (NSPW 1999)},
  pages = {87-95},
  year = {2000}}

@article{Erlt02a,
  author = {Ertl, M. Anton and Gregg, David and Krall, Andreas and Paysan, Bernd},
  title = {Vmgen-a generator of efficient virtual machine interpreters},
  journal = {Software: Practice and Experience},
  volume = {32},
  pages = {265-294},
  year = {2002},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.434},
  doi = {https://doi.org/10.1002/spe.434},
  abstract = {Abstract In a virtual machine interpreter, the code for each virtual machine instruction has similarities to code for other instructions. We present an interpreter generator that takes simple virtual machine instruction descriptions as input and generates C code for processing the instructions in several ways: execution, virtual machine code generation, disassembly, tracing, and profiling. The generator is designed to support efficient interpreters: it supports threaded code, aching the top-of-stack item in a register, combining simple instructions into superinstructions, and other optimizations. We have used the generator to create interpreters for Forth and Java. Theresulting interpreters are faster than other interpreters for the same languages and they are typically 2-10 times slower than code produced by native-code compilers. We also present results for the effects of the individual optimizations supported by the generator},
  eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.434},
  keywords = {interpreter, virtual machine, generator, stack architecture, superinstruction, byte code},
  number = {3}}

@techreport{Erni08a,
  author = {David Erni},
  title = {{JAG} --- a Prototype for Collective Behavior in {Java}},
  year = {2008},
  url = {http://scg.unibe.ch/archive/projects/Erni08a.pdf},
  abstract = {Today's programming language models support a wide
variety of mechanisms to share or define the
behavior of objects but this often addresses a
single object only. As there are operations that are
related to a group of objects rather than to a
single object, we propose a way to define how those
objects operate as group, when stored inside a data
container (e.g. Collection, Set, ...). We present a
prototype of Collective Behavior in Java that
enables some basic collective functionality.},
  institution = {University of Bern},
  month = aug,
  type = {Bachelor's thesis}}

@techreport{Erni08b,
  author = {David Erni},
  title = {The Hacker's Guide to {Javac}},
  year = {2008},
  url = {http://scg.unibe.ch/archive/projects/Erni08b.pdf},
  abstract = {This document is an introduction to hacking the Java
compiler. An introduction to the Java compiler is
given. Two examples are exercised, a simple hello
world and a AST rewriting plugin.},
  institution = {University of Bern},
  month = aug,
  type = {Bachelor's thesis, supplementary documentation}}

@mastersthesis{Erni10a,
  author = {David Erni},
  title = {Codemap---Improving the Mental Model of Software Developers through Cartographic Visualization},
  year = {2010},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Erni10a.pdf},
  abstract = {Software is intangible and the knowledge about a
software system and its architecture is often
implicit. Thus the developers'mental model of their
software system is an important factor in software
engineering. We want to provide developers, and
everyone else involved in software development, with
a shared, spatial and stable mental model of their
software project. We aim to reinforce this by
embedding a cartographic visualization in the IDE
(Integrated Development Environment). The
visualization is always visible in the IDE, similar
to the overview map found in many computer games.
For each development task, related information is
displayed on the map. In this thesis we present
Codemap, an Eclipse plug-in that demonstrates the
use of software cartography in the context of an
IDE. We perform an informal user study to validate
our assumptions about the usage of Codemap.},
  institution = {University of Bern},
  month = jan,
  type = {Master's Thesis}}

@inproceedings{Erns01a,
  author = {Erik Ernst},
  title = {Family Polymorphism},
  booktitle = {ECOOP 2001},
  pages = {303--326},
  publisher = {Springer Verlag},
  year = {2001},
  editor = {J. L. Knudsen},
  number = {2072},
  series = {LNCS}}

@inproceedings{Erns03a,
  author = {E. Ernst},
  title = {Higher-order hierarchies},
  booktitle = {Proceedings European Conference on Object-Oriented Programming (ECOOP 2003)},
  pages = {303--329},
  publisher = {Springer Verlag},
  year = {2003},
  address = {Heidelberg},
  location = {Darmstadt, Germany},
  month = jul,
  series = {LNCS}}

@inproceedings{Erns03b,
  author = {Ernst, Michael D},
  title = {Static and dynamic analysis: Synergy and duality},
  booktitle = {WODA 2003: ICSE Workshop on Dynamic Analysis},
  pages = {24--27},
  year = {2003}}

@inproceedings{Erns98,
  author = {"Michael Ernst and Craig Kaplan and Craig Chambers"},
  title = {"Predicate Dispatching: {A} Unified Theory of Dispatch"},
  booktitle = {"{ECOOP}~'98---Object-Oriented Programming"},
  volume = {"1445"},
  pages = {"186--211"},
  publisher = {"Springer"},
  year = {"1998"},
  abstract = {"\emph{Predicate dispatching} generalizes previous
		 method dispatch mechanisms by permitting arbitrary
		 predicates to control method applicability and by using
		 logical implication between predicates as the
		 overriding relationship. The method selected to handle
		 a message send can depend not just on the classes of
		 the arguments, as in ordinary object-oriented dispatch,
		 but also on the classes of the arguments, as in
		 ordinary object-oriented dispatch, but also on the
		 classes of subcomponents, on an argument's state, and
		 on relationships between objects. This simple mechanism
		 subsumes and extends object-oriented single and
		 multiple dispatch, ML-style pattern matching, predicate
		 classes, and classifiers, which can all be regarded as
		 syntactic sugar for predicate dispatching. This paper
		 introduces predicate dispatching, gives motivating
		 examples, and presents its static and dynamic
		 semantics. An implementation of predicate dispatching
		 is available."},
  editor = {"Eric Jul"},
  isbn = {"3-540-64737-6"},
  issn = {"0302-9743"},
  referencedby = {"\cite{1998:oois:kristensen}"},
  series = {"Lecture Notes in Computer Science"}}

@inproceedings{Erns99a,
  author = {Erik Ernst},
  title = {Propagating Class and Method Combination},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {67--91},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {This paper presents a mixin based class and method
combination mechanism with block structure
propagation. Traditionally, mixins can be composed
to form new classes, possibly merging the
implementations of methods (as in CLOS). In our
approach, a class or method combination operation
may cause any number of implicit combinations. For
example, it is possible to specify separate aspects
of a family of classes, and then combine several
aspects into a full-fledged class family. The
combination expressions would explicitly combine
whole-family aspects, and by propagation implicitly
combine the aspects for each member of the class
family, and again by propagation implicitly compose
each method from its aspects. As opposed to CLOS,
this is type-checked statically; and as opposed to
other systems for advanced class
combination/merging/weaving, it is integrated
directly in the language, ensuring a clear semantics
and a seamless interaction with the type system.
Moreover, the basic mechanism used in the
combination, linearization, is formalized and
generalized compared to previous presentions.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Erns99b,
  author = {Michael D. Ernst and Jake Cockrell and William G. Griswold and David Notkin},
  title = {Dynamically Discovering Likely Program Invariants to Support Program Evolution},
  booktitle = {Proceedings of ICSE '99},
  year = {1999},
  month = may}

@phdthesis{Erns99c,
  author = {Erik Ernst},
  title = {gbeta --- a Language with Virtual Attributes, Block Structure, and Propagating, Dynamic Inheritance},
  year = {1999},
  school = {Department of Computer Science, University of Aarhus, \AA{}rhus, Denmark}}

@article{Ertl03a,
  author = {Ertl, M. and Gregg, David},
  title = {The Structure and Performance of Efficient Interpreters.},
  journal = {J. Instruction-Level Parallelism},
  volume = {5},
  year = {2003},
  month = nov}

@inproceedings{Ertl03b,
  author = {Ertl, M Anton and Gregg, David},
  title = {Optimizing indirect branch prediction accuracy in virtual machine interpreters},
  booktitle = {Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation},
  pages = {278--288},
  year = {2003}}

@article{Ertl95a,
  author = {Ertl, M. Anton},
  title = {Stack Caching for Interpreters},
  journal = {SIGPLAN Not.},
  volume = {30},
  pages = {315-327},
  publisher = {Association for Computing Machinery},
  year = {1995},
  url = {https://doi.org/10.1145/223428.207165},
  doi = {10.1145/223428.207165},
  abstract = {An interpreter can spend a significant part of its execution time on accessing arguments of virtual machine instructions. This paper explores two methods to reduce this overhead for virtual stack machines by caching top-of-stack values in (real machine) registers. The dynamic method is based on having, for every possible state of the cache, one specialized version of the whole interpreter; the execution of an instruction usually changes the state of the cache and the next instruction is executed in the version corresponding to the new state. In the static method a state machine that keeps track of the cache state is added to the compiler. Common instructions exist in specialized versions for several states, but it is not necessary to have a version of every instruction for every cache state. Stack manipulation instructions are optimized away.},
  address = {New York, NY, USA},
  issn = {0362-1340},
  month = {jun},
  number = {6},
  numpages = {13}}

@article{Erwi07a,
  author = {Martin Erwig, Zhe Fu and Ben Pflaum},
  title = {Parametric Fortran: Program Generation in Scientific Computing},
  journal = {Journal of Software Maintenance and Evolution},
  volume = 19,
  pages = {155-182},
  year = {2007},
  number = 3}

@inproceedings{Esba15a,
  author = {Esbai, Redouane and Erramdani, Mohammed},
  title = {Model-to-model transformation in approach by modeling: From UML model to Model-View-Presenter and Dependency Injection patterns},
  booktitle = {2015 5th World Congress on Information and Communication Technologies (WICT)},
  pages = {1--6},
  year = {2015},
  organization = {IEEE}}

@inproceedings{Eshk11a,
  author = {Eshkevari, Laleh M and Arnaoudova, Venera and Di Penta, Massimiliano and Oliveto, Rocco and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Antoniol, Giuliano},
  title = {An exploratory study of identifier renamings},
  booktitle = {Proceedings of the 8th Working Conference on Mining Software Repositories},
  pages = {33--42},
  year = {2011}}

@article{Estu05a,
  author = {Jacky Estublier and David Leblang and Andr\'e van der Hoek and Reidar Conradi and Geoffrey Clemm and Walter Tichy and Darcy Wiborg-Weber},
  title = {Impact of Software Engineering Research on the Practice of Software Configuration Management},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {14},
  pages = {383--430},
  year = {2005},
  month = oct,
  number = {4}}

@incollection{Estu94a,
  author = {J. Estublier and R. Casallas},
  title = {The Adele Configuration Manager},
  booktitle = {Trends in Software: Configuration Management},
  volume = {2},
  pages = {99--134},
  publisher = {Wiley},
  year = {1994},
  editor = {W. F. Tichy}}

@misc{EtDoc16a,
  author = {{Ethereum Community}},
  title = {Ethereum Homestead Documentation},
  year = {2016},
  url = {http://ethdocs.org/en/latest/index.html}}

@misc{EtRp18a,
  author = {{Ethereum Foundation}},
  title = {JSON RPC},
  year = {2018},
  url = {https://github.com/ethereum/wiki/wiki/JSON-RPC}}

@misc{Ether14,
  author = {{Ethereum Foundation}},
  title = {Ethereum's white paper.},
  year = {2014},
  url = {https://en.wikibooks.org/wiki/LaTeX/Bibliography\_Management}}

@book{Etie92a,
  title = {Proceedings {PARLE}'92},
  volume = {605},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Paris, France},
  editor = {D.Etiemble and J.C.Syre},
  isbn = {3-540-55599-4},
  month = jun,
  series = {LNCS}}

@article{Etzk98a,
  author = {Letha Etzkorn and Carl Davis and Wei Li},
  title = {A Practical Look at the Lack of Cohesion in Methods Metric},
  journal = {Journal of Object-Oriented Programming},
  volume = {11},
  pages = {27--34},
  year = {1998},
  month = sep,
  number = {5}}

@article{Etzk99a,
  author = {Letha Etzkorn and Jagdish Bansiya and Carl Davis},
  title = {Design and Code Complexity Metrics for OO Classes},
  journal = {Journal of Object-Oriented Programming},
  pages = {35--40},
  year = {1999}}

@article{Eugs03a,
  author = {Patrick Th. Eugster and Pascal A. Felber and Rachid Guerraoui and {Anne-Marie} Kermarrec},
  title = {The many faces of publish/subscribe},
  journal = {{ACM} Comput. Surv.},
  volume = {35},
  pages = {114--131},
  year = {2003},
  url = {http://portal.acm.org/citation.cfm?id=857078},
  doi = {10.1145/857076.857078},
  abstract = {Well adapted to the loosely coupled nature of
distributed interaction in large-scale applications,
the publish/subscribe communication paradigm has
recently received increasing attention. With systems
based on the publish/subscribe interaction scheme,
subscribers register their interest in an event, or
a pattern of events, and are subsequently
asynchronously notified of events generated by
publishers. Many variants of the paradigm have
recently been proposed, each variant being
specifically adapted to some given application or
network model. This paper factors out the common
denominator underlying these variants: full
decoupling of the communicating entities in time,
space, and synchronization. We use these three
decoupling dimensions to better identify
commonalities and divergences with traditional
interaction paradigms. The many variations on the
theme of publish/subscribe are classified and
synthesized. In particular, their respective
benefits and shortcomings are discussed both in
terms of interfaces and implementations.},
  number = {2}}

@inproceedings{Eugs06a,
  author = {Eugster, Patrick},
  title = {Uniform proxies for {Java}},
  booktitle = {Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications},
  pages = {139--152},
  publisher = {ACM},
  year = {2006},
  url = {http://doi.acm.org/10.1145/1167473.1167485},
  doi = {10.1145/1167473.1167485},
  acmid = {1167485},
  address = {New York, NY, USA},
  isbn = {1-59593-348-4},
  keywords = {Java, future, proxy, transformation},
  location = {Portland, Oregon, USA},
  numpages = {14},
  series = {OOPSLA '06}}

@article{Evan02a,
  author = {David Evans and David Larochelle},
  title = {Improving Security Using Extensible Lightweight Static Analysis},
  journal = {IEEE Software},
  volume = {19},
  pages = {42-51},
  publisher = {IEEE Computer Society},
  year = {2002},
  doi = {10.1109/52.976940},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459}}

@book{Evan03a,
  author = {Eric Evans},
  title = {Domain-Driven Design: Tacking Complexity In the Heart of Software},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {2003},
  address = {Boston, MA, USA},
  isbn = {0321125215}}

@book{Evan04a,
  author = {Evans and Eric},
  title = {Domain-driven design},
  publisher = {Addison-Wesley},
  year = {2004}}

@inproceedings{Evan99a,
  author = {David Evans and Andrew Twyman},
  title = {{Flexible Policy-Directed Code Safety}},
  booktitle = {Proceedings of the 1999 IEEE Symposium on Security and Privacy},
  year = {1999},
  address = {Oakland, CA},
  month = may}

@book{Ever74a,
  author = {B. Everitt},
  title = {Cluster Analysis},
  publisher = {Heineman Educational Books},
  year = {1974},
  address = {London}}

@inproceedings{Ewin86a,
  author = {Juanita J. Ewing},
  title = {An Object-Oriented Operating System Interface},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {46--56},
  year = {1986},
  month = nov}

@inproceedings{Exer94a,
  author = {F. Exertier and S. Haj Houssain},
  title = {Issues in Extending a Relational System with Object-Oriented Features},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {1--19},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Eysh10a,
  author = {Eysholdt, Moritz and Behrens, Heiko},
  title = {Xtext: implement your language faster than the quick and dirty way},
  booktitle = {Proceedings of the ACM international conference companion on Object oriented programming systems languages and applications companion},
  pages = {307--309},
  year = {2010}}

@book{Ezra98a,
  author = {Michel Ezran and Maurizio Morisio and Collin Tully},
  title = {Practical Software Reuse: the essential guide},
  publisher = {Valtech},
  year = {1998}}

@article{Fabr03a,
  author = {Johan Fabry and Tom Mens},
  title = {Language-Independent Detection of Object-Oriented Design Patterns},
  journal = {Journal of Computer Languages, Systems and Structures},
  volume = {30},
  pages = {21--33},
  year = {2004},
  number = {1-2}}

@inproceedings{Fabr04a,
  author = {Johan Fabry},
  title = {Transaction Management in {EJBs}: Better Separation of Concerns With {AOP}},
  booktitle = {Proc. of the 3rd AOSD Workshop on Aspects, Components, and Patterns for Infrastructure Software (ACP4IS)},
  pages = {20--25},
  year = {2004},
  url = {http://aosd.net/2005/workshops/acp4is/past/acp4is04/papers/E00-390907325.pdf},
  editor = {Y. Coady and D. Lorenz},
  month = mar}

@inproceedings{Fabr06a,
  author = {Fabry, Johan and D'Hondt, Theo},
  title = {KALA: Kernel Aspect language for advanced transactions},
  booktitle = {SAC '06: Proceedings of the 2006 ACM symposium on Applied computing},
  pages = {1615--1620},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1141277.1141655},
  address = {New York, NY, USA},
  isbn = {1-59593-108-2},
  location = {Dijon, France}}

@article{Fabr08a,
  author = {Luc Fabresse and Christophe Dony and Marianne Huchard},
  title = {Foundations of a simple and unified component-oriented language},
  journal = {Computer Languages, Systems and Structures},
  volume = {34},
  pages = {130--149},
  publisher = {Elsevier Science Publishers B. V.},
  year = {2008},
  doi = {10.1016/j.cl.2007.05.002},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {1477-8424},
  number = {2-3}}

@article{Fabr12b,
  author = {Fabry, Johan and Galdames, Daniel},
  title = {PHANtom: a modern aspect language for Pharo Smalltalk},
  journal = {Software: Practice and Experience},
  pages = {n/a--n/a},
  publisher = {John Wiley & Sons, Ltd},
  year = {2012},
  url = {http://dx.doi.org/10.1002/spe.2117},
  doi = {10.1002/spe.2117},
  issn = {1097-024X},
  keywords = {PHANtom, Aspect-Oriented Programming, Smalltalk}}

@article{Fabr74a,
  author = {R.S. Fabry},
  title = {Capability-Based Addressing},
  journal = {CACM},
  volume = {17},
  pages = {403--412},
  year = {1974},
  month = jul,
  number = {7}}

@article{Fabr97a,
  author = {Jean-Charles Fabre},
  title = {Syst\`emes s\^urs de fontionnement, tol\'erance aux fautes par protocoles \`a m\'etaobjets.},
  journal = {L'Objet},
  volume = {3},
  pages = {9--29},
  year = {1997},
  note = {article},
  number = {1}}

@inproceedings{Fact04a,
  author = {Michael Factor and Assaf Schuster and Konstantin Shagin},
  title = {Instrumentation of standard libraries in object-oriented languages: the twin class hierarchy approach},
  booktitle = {Proceedings of the 19th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications (OOPSLA '04)},
  pages = {288--300},
  publisher = {ACM},
  year = {2004},
  doi = {10.1145/1028976.1029000},
  address = {New York, NY, USA},
  isbn = {1-58113-831-9},
  location = {Vancouver, BC, Canada}}

@inproceedings{Faeh03a,
  author = {Manuel F{\"a}hndrich and Rustan Leino},
  title = {Declaring and Checking Non-null Types in an Object-Oriented Language},
  booktitle = {Proceedings of OOPSLA '03, ACM SIGPLAN Notices},
  year = {2003},
  url = {http://research.microsoft.com/~maf/Papers/non-null.pdf}}

@article{Faga76a,
  author = {Mike Fagan},
  title = {Design and code inspections to reduce errors in program development},
  journal = {IBM Journal of Research and Development},
  volume = {15},
  pages = {182},
  year = {1976},
  number = {3}}

@inproceedings{Fahn06a,
  author = {M. Fahndrich and M. Aiken and C. Hawblitzel and O. Hodson and G. Hunt and J. Larus and S. Levi},
  title = {Language Support for Fast and Reliable Message-based Communication in Singularity OS},
  booktitle = {1st EuroSys Conference},
  publisher = {ACM},
  year = {2006}}

@inproceedings{Fahn06b,
  author = {F\"{a}hndrich, Manuel and Carbin, Michael and Larus, James R.},
  title = {Reflective program generation with patterns},
  booktitle = {GPCE '06: Proceedings of the 5th international conference on Generative programming and component engineering},
  pages = {275--284},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1173706.1173748},
  address = {New York, NY, USA},
  isbn = {1-59593-237-2},
  location = {Portland, Oregon, USA}}

@article{Faid87a,
  author = {J.A.W. Faidhi and S.K. Robinson},
  title = {An Empirical Approach for Detecting Program Similarity within a University Programming Environment},
  journal = {Computers and Education},
  volume = {11},
  pages = {11--19},
  year = {1987},
  number = {1}}

@article{Fair87a,
  author = {J. Fairbairn},
  title = {Making Form Follow Function: An Exercise in Functional Programming Style},
  journal = {Software --- Practice and Experience},
  volume = {17},
  pages = {379--386},
  year = {1987},
  number = {6}}

@inproceedings{Fait97a,
  author = {Rickard E. Faith and Lars S. Nyland and Jan F. Prins},
  title = {{KHEPERA}: a system for r{API}d implementation of domain specific languages},
  booktitle = {DSL'97: Proceedings of the Conference on Domain-Specific Languages on Conference on Domain-Specific Languages (DSL), 1997},
  pages = {19--19},
  publisher = {USENIX Association},
  year = {1997},
  url = {http://www.cs.unc.edu/~faith/faith-dsl-1997.ps},
  address = {Berkeley, CA, USA},
  location = {Santa Barbara, California}}

@inproceedings{Fall08,
  author = {Falleri, Jean-R\'emy and Huchard, Marianne and Lafourcade, Mathieu and Nebut, Cl\'ementine},
  title = {Meta-model {Matching} for {Automatic} {Model} {Transformation} {Generation}},
  booktitle = {Meta-model {Matching} for {Automatic} {Model} {Transformation} {Generation}},
  pages = {326--340},
  year = {2008},
  url = {https://hal-lirmm.ccsd.cnrs.fr/file/index/docid/322879/filename/models08.pdf},
  abstract = {Abstract. Applying Model-Driven Engineering (MDE) leads to the creation
of a large number of metamodels, since MDE recommends an intensive
use of models defined by metamodels. Metamodels with similar
objectives are then inescapably created. A recurrent issue is thus to turn
compatible models conforming to similar metamodels, for example to use
them in the same tool. The issue is classically solved developing ad hoc
model transformations. In this paper, we propose an approach that automatically
detects mappings between two metamodels and uses them to
generate an alignment between those metamodels. This alignment needs
to be manually checked and can then be used to generate a model transformation.
Our approach is built on the Similarity Flooding algorithm
used in the fields of schema matching and ontology alignment. Experimental
results comparing the effectiveness of the application of various
implementations of this approach on real-world metamodels are given.},
  address = {Berlin},
  language = {English}}

@inproceedings{Fall14a,
  author = {Falleri, Jean-R{\'e}my and Morandat, Flor{\'e}al and Blanc, Xavier and Martinez, Matias and Montperrus, Martin},
  title = {Fine-grained and Accurate Source Code Differencing},
  booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  pages = {313--324},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2642937.2642982},
  doi = {10.1145/2642937.2642982},
  acmid = {2642982},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3013-8},
  keywords = {ast, program comprehension, software evolution, tree differencing},
  location = {Vasteras, Sweden},
  numpages = {12},
  series = {ASE '14}}

@techreport{Fank98a,
  author = {Simon Fankhauser},
  title = {Installation einer Datenbank am Astronomischen Institut der Universit{\"a}t Bern},
  year = {1998},
  url = {http://scg.unibe.ch/archive/projects/Fank98a-bericht.pdf http://scg.unibe.ch/archive/projects/Fank98a-hb.pdf},
  institution = {University of Bern},
  month = jan,
  type = {Informatikprojekt}}

@inproceedings{Fant98a,
  author = {Richard Fanta and Vaclav Rajlich},
  title = {Reengineering Object-Oriented Code},
  booktitle = {Proceedings of the International Conference on Software Maintenance},
  year = {1998}}

@inproceedings{Fard13a,
  author = {Fard, Amin Milani and Mesbah, Ali},
  title = {Jsnose: Detecting javascript code smells},
  booktitle = {2013 IEEE 13th international working conference on Source Code Analysis and Manipulation (SCAM)},
  pages = {116--125},
  year = {2013},
  organization = {IEEE}}

@inproceedings{Fari20a,
  author = {Fariha, Anna and Nath, Suman and Meliou, Alexandra},
  title = {Causality-Guided Adaptive Interventional Debugging},
  booktitle = {SIGMOD/PODS '20: International Conference on Management of Data},
  pages = {431-446},
  year = {2020},
  doi = {10.1145/3318464.3389694}}

@book{Farl98a,
  author = {Jim Farley},
  title = {Java Distributed Computing},
  publisher = {O'Reilly},
  year = {1998},
  isbn = {1-56592-206-9}}

@inproceedings{Farr82a,
  author = {R. Farrow},
  title = {{LINGUIST}-86: Yet Another Translator Writing System Based on Attribute Grammars},
  booktitle = {ACM SIGPLAN Notices, Proceedings 1982 Symposium on Compiler Construction},
  volume = {17},
  pages = {160--171},
  year = {1982},
  month = jun}

@inproceedings{Faus90a,
  author = {John E. Faust and Henry M. Levy},
  title = {The Performance of an Object-Oriented Threads Package},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {278--288},
  year = {1990},
  month = oct}

@article{Fava20a,
  author = {Fava, Daniel Schnetzer and Steffen, Martin},
  title = {Ready, set, Go!: Data-race detection and the Go language},
  journal = {Science of Computer Programming},
  volume = {195},
  pages = {102473},
  publisher = {Elsevier},
  year = {2020}}

@inproceedings{Favr01a,
  author = {Jean-Marie Favre},
  title = {GSEE: a Generic Software Exploration Environment},
  booktitle = {Proceedings of the 9th International Workshop on Program Comprehension},
  pages = {233--244},
  publisher = {IEEE},
  year = {2001},
  month = may}

@inproceedings{Favr03a,
  author = {Jean-Marie Favre},
  title = {Meta-Model and Model Co-Evolution within the 3D Software Space},
  booktitle = {Proceedings of the International Workshop on Evolution of Large-Scale Industrial Software 2003},
  year = {2003},
  month = sep}

@inproceedings{Favr04a,
  author = {Jean-Marie Favre},
  title = {{Cac}{Opho}{Ny}: Metamodel-Driven Software Architecture Reconstruction},
  booktitle = {Proceedings of 11th Working Conference on Reverse Engineering ({WCRE} 2004)},
  pages = {204--213},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA},
  location = {Delft, The Netherlands},
  month = nov}

@book{Favr06a,
  author = {Jean-Marie Favre and Jacky Estublier and Mireille Blay},
  title = {L'ing\'enierie dirig\'ee par les mod\`eles: au-del\`a du MDA},
  pages = {240},
  publisher = {Hermes-Lavoisier},
  year = {2006},
  month = {feb},
  note = {ISBN: 2-7462-12-12-7}}

@article{Faya97a,
  author = {Mohamed E. Fayad and Douglas C. Schmidt},
  title = {Object-Oriented Application Frameworks (Special Issue Introduction)},
  journal = {Communications of the ACM},
  volume = {40},
  pages = {39--42},
  year = {1997},
  month = oct,
  number = {10}}

@book{Faya99a,
  author = {Mohamed Fayad and Douglas Schmidt and Ralph Johnson},
  title = {Building Application Frameworks: Object Oriented Foundations of Framework Design},
  publisher = {Wiley and Sons},
  year = {1999}}

@inproceedings{Fazz94a,
  author = {Michael Fazzolare and Bernhard G. Humm and R. David Ranson},
  title = {Object-Oriented Extendibility in Hermes/{ST}, a Transactional Distributed Programming Environment},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {240--261},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {A major aim of transactional distributed programming
environments is to facilitate the development of
reliable distributed applications by shielding the
developer from concerns such as failures. This paper
describes the linguistic features of the Hermes/ST
object-oriented distributed programming environment
that further ease the development of such
applications by enhancing the flexibility and
extendibility of their implementations. This is
achieved through the parameterisation of properties
such as permanence, concurrency, transactional
semantics and distribution. Parameterisation
supports reuse, and enables the notion of
incremental development, whereby a simple
centralized sequential prototype of the application
can be easily validated before being gradually
extended to the final efficient reliable distributed
application. An example application is included to
demonstrate this approach.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@book{Feat05a,
  author = {Michael C. Feathers},
  title = {Working Effectively with Legacy Code},
  publisher = {Prentice Hall},
  year = {2005},
  isbn = {0-13-117705-2}}

@inproceedings{Feat89a,
  author = {Feather, Martin S.},
  title = {Detecting interference when merging specification evolutions},
  booktitle = {IWSSD '89: Proceedings of the 5th international workshop on Software specification and design},
  pages = {169--176},
  publisher = {ACM},
  year = {1989},
  doi = {10.1145/75199.75226},
  address = {New York, NY, USA},
  date-added = {2009-10-21 12:59:58 +0200},
  date-modified = {2009-10-21 13:00:10 +0200},
  isbn = {0-89791-305-1},
  location = {Pittsburgh, Pennsylvania, United States}}

@inproceedings{Feel92a,
  author = {Michael J. Feeley and Henry M. Levy},
  title = {Distributed Shared Memory with Versioned Objects},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {247--262},
  year = {1992},
  month = oct}

@inproceedings{Fehn06a,
  author = {Ansgar Fehnker and Ralf Huuck and Patrick Jayet and Michel Lussenburg and Felix Rauch},
  title = {Goanna - A Static Model Checker},
  booktitle = {FMICS/PDMC},
  pages = {297-300},
  year = {2006}}

@article{Feij98a,
  author = {Loe Feijs and Roel De Jong},
  title = {{3D} visualization of software architectures},
  journal = {Communication of the ACM},
  volume = {41},
  pages = {73--78},
  publisher = {ACM Press},
  year = {1998},
  doi = {10.1145/290133.290151},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {12}}

@article{Feij98b,
  author = {Loe Feijs and Ren\'{e} Krikhaar and van Ommering, Rob},
  title = {A Relational Approach to Support Software Architecture Analysis},
  journal = {Software --- Practice and Experience},
  volume = {28},
  pages = {371--400},
  year = {1998},
  month = apr,
  number = {4}}

@inproceedings{Feij99a,
  author = {Loe M.G. Feijs},
  title = {Modelling Microsoft {COM} Using $\pi$-calculus},
  booktitle = {Proceedings of FM '99},
  volume = 1709,
  publisher = {Springer Verlag},
  year = {1999},
  address = {Toulouse, France},
  month = sep,
  series = {LNCS}}

@techreport{Feil91a,
  author = {Peter H. Feiler},
  title = {Configuration Management Models in Commercial Environments},
  year = {1991},
  institution = {Carnegie-Mellon University},
  month = mar,
  type = {Technical Report CMU/SEI-91-TR-7}}

@book{Feil96a,
  author = {Jesse Feiler and Anthony Meadow},
  title = {Essential OpenDoc},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-47958-3}}

@article{Feit20a,
  author = {Feitelson, Dror and Mizrahi, Ayelet and Noy, Nofar and Shabat, Aviad Ben and Eliyahu, Or and Sheffer, Roy},
  title = {How developers choose names},
  journal = {IEEE Transactions on Software Engineering},
  publisher = {IEEE},
  year = {2020}}

@inproceedings{Feld02a,
  author = {Yishai A. Feldman},
  title = {Extreme Design By Contract},
  booktitle = {Extreme Programming and Agile Processes in Software Engineering},
  pages = {261--270},
  publisher = {Springer},
  year = {2003},
  editor = {Michele Marchesi and Giancarlo Succi},
  series = {LNCS}}

@article{Feld04a,
  author = {Stuart Feldman},
  title = {A conversation with Alan Kay.},
  journal = {ACM Queue},
  volume = {2},
  pages = {20--30},
  year = {2004},
  ee = {10.1145/1039511.1039523},
  number = {9}}

@article{Feld79a,
  author = {J.A. Feldman},
  title = {High Level Programming for Distributed Computing},
  journal = {CACM},
  volume = {22},
  year = {1979},
  month = jun,
  number = {6}}

@inproceedings{Feld89a,
  author = {Stuart I. Feldman and Channing B. Brown},
  title = {IGOR: a system for program debugging via reversible execution},
  booktitle = {Proceedings of the 1988 ACM SIGPLAN and SIGOPS workshop on Parallel and distributed debugging (PADD'88)},
  pages = {112--123},
  publisher = {ACM},
  year = {1988},
  doi = {10.1145/68210.69226},
  address = {New York, NY, USA},
  isbn = {0-89791-296-9},
  location = {Madison, Wisconsin, United States}}

@article{Feld90a,
  author = {Feldman, S. I.},
  title = {A Fortran to C Converter},
  journal = {SIGPLAN Fortran Forum},
  volume = {9},
  pages = {21--22},
  publisher = {ACM},
  year = {1990},
  url = {http://doi.acm.org/10.1145/101363.101366},
  doi = {10.1145/101363.101366},
  issue_date = {Oct. 1990},
  number = {2},
  month = oct,
  issn = {1061-7264},
  numpages = {2},
  address = {New York, NY, USA}}

@techreport{Feld95,
  author = {Feldman, Stuart I.},
  title = {A {Fortran} to {C} converter},
  pages = {27},
  year = {1995},
  url = {http://portal.acm.org/citation.cfm?doid=101363.101366},
  abstract = {We describe f 2c, a program that translates Fortran 77 into C or C++. F2c lets one portably mix C and Fortran and makes a large body of well-tested Fortran source code available to C environments.},
  institution = {AT\&T Bell Laboratories},
  language = {en},
  month = mar,
  number = {149},
  urldate = {2018-05-22}}

@article{Feldm91,
  author = {Feldman, S. I. and Gay, D. M. and Maimone, M. W. and Schryer, N. L.},
  title = {Availability of {F}2C-a {Fortran} to {C} {Converter}},
  journal = {SIGPLAN Fortran Forum},
  volume = {10},
  pages = {14--15},
  year = {1991},
  url = {http://doi.acm.org/10.1145/122006.122007},
  doi = {10.1145/122006.122007},
  abstract = {We have produced a program that automatically converts ANSI standard Fortran 77 [1] to C [8]. It has converted many Fortran programs without manual intervention; it is easily available --- free of charge (and of warranty) --- by electronic mail and ftp.},
  issn = {1061-7264},
  month = jul,
  number = {2},
  urldate = {2018-05-22}}

@book{Fell01a,
  author = {Matthias Felleisen and Robert Bruce Findler and Matthew Flatt and Shiram Krishnamurthi},
  title = {How to Design Programs},
  publisher = {The MIT Press},
  year = {2001}}

@book{Fell03a,
  author = {Matthias Felleisen and Robert Bruce Findler and Matthew Flatt and Shiram Krishnamurthi},
  title = {How to Design Programs},
  publisher = {The MIT Press},
  year = {2003},
  url = {http://www.htdp.org/}}

@article{Fell89a,
  author = {Matthias Felleisen and Robert Hieb},
  title = {The revised report on the syntactic theories of sequential control and state},
  journal = {Theor. Comput. Sci.},
  volume = {103},
  pages = {235--271},
  publisher = {Elsevier Science Publishers Ltd.},
  year = {1992},
  doi = {10.1016/0304-3975(92)90014-7},
  address = {Essex, UK},
  issn = {0304-3975},
  number = {2}}

@article{Fell92a,
  author = {Matthias Felleisen and Robert Hieb},
  title = {The revised report on the syntactic theories of sequential control and state},
  journal = {Theoretical Computer Science},
  volume = {103},
  pages = {235 - 271},
  year = {1992},
  issues = {2}}

@book{Fell98a,
  author = {Matthias Felleisen and Daniel P. Friedman},
  title = {A Little {Java}, {A} Few Patterns},
  publisher = {MIT Press},
  year = {1998},
  isbn = {0-262-56115-8}}

@inproceedings{Fent00a,
  author = {Fenton, Norman E. and Neil, Martin},
  title = {Software Metrics: Roadmap},
  booktitle = {ACM Press},
  pages = {357--370},
  year = {2000},
  date-added = {2014-07-08 13:25:55 +0000},
  date-modified = {2014-07-08 13:26:25 +0000}}

@inproceedings{Fent89a,
  author = {Jay Fenton and Kent Beck},
  title = {Playground: An Object-Oriented Simulation System With Agent Rules for Children of All Ages},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {123--138},
  year = {1989},
  month = oct}

@article{Fent94a,
  author = {Norman Fenton and Shari Lawrence Pfleeger and Robert L. Glass},
  title = {{Science} and {Substance}: {A} {Challenge} to {Software} {Engineers}},
  journal = {IEEE Software},
  volume = {11},
  pages = {86--95},
  publisher = {IEEE Computer Society},
  year = {1994},
  month = jul,
  number = {4}}

@book{Fent96a,
  author = {Norman Fenton and Shari Lawrence Pfleeger},
  title = {Software Metrics: {A} Rigorous and Practical Approach},
  publisher = {International Thomson Computer Press},
  year = {1996},
  address = {London, UK},
  edition = {Second},
  isbn = {0534956009},
  note = {06-8147-I*, envoye a l'inria lille le 19 aout}}

@article{Fent99a,
  author = {Norman E. Fenton and Martin Neil},
  title = {A Critique of Software Defect Prediction Models},
  journal = {IEEE Transactions on Software Engineering},
  volume = {25},
  pages = {675-689},
  publisher = {IEEE Computer Society},
  year = {1999},
  doi = {10.1109/32.815326},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  number = {5}}

@techreport{Ferb83a,
  author = {Jacques Ferber},
  title = {{MERING}, un langage d'acteurs pour la representation et la manipulation de connaissances},
  year = {1983},
  institution = {Universite de Paris VI},
  month = dec,
  type = {These de docteur ingenieur}}

@article{Ferb84a,
  author = {J. Ferber},
  title = {Quelques aspects du caract\`ere self r\'eflexif du langage {MERING}},
  journal = {Bigre + Globule},
  volume = {41},
  pages = {277--290},
  year = {1984},
  note = {Deuxi\`eme journ\'ee d'\'etude du groupe de travail AFCET sur les langages orient\'ees objets},
  number = {41}}

@inproceedings{Ferb88a,
  author = {Jacques Ferber and Jean-Pierre Briot},
  title = {Design of a Concurrent Language for Distributed Artificial Intelligence},
  booktitle = {Proc. of FGCS '88 ICOT},
  volume = {2},
  pages = {755--762},
  year = {1988},
  misc = {Nov-Dec},
  url = {http://web.yl.is.u-tokyo.ac.jp/members/briot/papers/cl4dai-fgcs88.ps.Z},
  address = {Tokyo Japan},
  month = nov}

@inproceedings{Ferb88b,
  author = {Jacques Ferber},
  title = {Conceptual reflection and actor languages},
  booktitle = {Meta-level Architectures and Reflection},
  pages = {177--193},
  year = {1988},
  editor = {North-Holland, P. Maes and D. Nardi}}

@inproceedings{Ferb89a,
  author = {Jacques Ferber},
  title = {Computational Reflection in Class-Based Object-Oriented Languages},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {317--326},
  year = {1989},
  month = oct}

@book{Ferb95a,
  author = {Jacques Ferber},
  title = {Les Syst\`emes Multiagents: Vers une Intelligence Collective},
  publisher = {InterEditions},
  year = {1995}}

@inproceedings{Fere01a,
  author = {Rudolf Ferenc and Susane E. Sim and Richard C. Holt and Rainer Koschke and Tibor Gyim{\'o}thy},
  title = {Towards a Standard Schema for C/C++},
  booktitle = {Proceedings Eight Working Conference on Reverse Engineering ({WCRE}'01)},
  pages = {49--58},
  year = {2001},
  month = oct,
  organization = {IEEE Computer Society}}

@inproceedings{Fere02a,
  author = {Ferenc, Rudolf and Besz{\'e}des, {\'A}rp{\'a}d and Tarkiainen, Mikko and Gyim{\'o}thy, Tibor},
  title = {Columbus-reverse engineering tool and schema for C++},
  booktitle = {International Conference on Software Maintenance, 2002. Proceedings.},
  pages = {172--181},
  year = {2002},
  organization = {IEEE}}

@inproceedings{Fere94a,
  author = {Szabolcs Ferenczi},
  title = {{MONADS}-{DP}: Outline of an Object-Oriented Concurrent Programming Model for Multiprocessor Systems},
  booktitle = {Proceedings of the 2nd Austrian-Hungarian Workshop on Transputer Applications},
  pages = {206--217},
  year = {1994},
  misc = {Sept 29-Oct 1},
  url = {http://www.kfki.hu/~ferenczi/AH-WS-MonDP.html},
  address = {Budapest, Hungary},
  editor = {Szabolcs Ferenczi and Peter Kacsuk},
  month = sep,
  series = {KFKI-1995-2/M,N Reports}}

@inproceedings{Fere94b,
  author = {Szabolcs Ferenczi},
  title = {Concurrent Objects with Inherited Synchronizations},
  booktitle = {Proceedings of the 2nd International Workshop on Massive Parallelism: Hardware, Software and Applications},
  pages = {80--89},
  year = {1994},
  misc = {Oct. 3-7},
  url = {http://www.kfki.hu/~ferenczi/MP94.html},
  address = {Capri, Italy},
  editor = {M. Mango Furnari},
  month = oct,
  series = {World Scientific Publishing Co., 1994}}

@article{Fere95a,
  author = {Szabolcs Ferenczi},
  title = {Guarded Methods vs. Inheritance Anomaly: Inheritance Anomaly Solved by Nested Guarded Method Calls},
  journal = {ACM SIGPLAN Notices},
  volume = {30},
  pages = {49--58},
  year = {1995},
  url = {http://www.kfki.hu/~ferenczi/InhAnom.html},
  month = feb,
  number = {2}}

@misc{Ferl01c,
  author = {Jacques A. Ferland and Daniel Costa},
  title = {Heuristic Search Methods for Combinatorial Programming Problems},
  year = {2001},
  url = {http://www.iro.umontreal.ca/~ferland/Genetic/Heur\Search\_Methods\_Ferland\_Costa.pdf}}

@inproceedings{Fern16a,
  author = {I. Fernandez and A. Bergel andJ. P. S. Alcocer and A. Infante and T. G\^irba},
  title = {Glyph-based software component identification},
  booktitle = {International Conference on Program Comprehension ({ICPC})},
  pages = {1-10},
  year = {2016}}

@inproceedings{Fern18a,
  author = {Fernandez Blanco, Alison and Sandoval Alcocer, Juan Pablo and Alexandre Bergel},
  title = {Effective Visualization of Object Allocation Sites},
  booktitle = {2018 IEEE Working Conference on Software Visualization (VISSOFT)},
  pages = {43-53},
  year = {2018}}

@inproceedings{Fern22a,
  author = {Fernandez Blanco, Alison and Bergel, Alexandre and Sandoval Alcocer, Juan Pablo and Queirolo C{\'o}rdova, Araceli},
  title = {Visualizing Memory Consumption with Vismep},
  booktitle = {2022 Working Conference on Software Visualization (VISSOFT)},
  pages = {108--118},
  year = {2022},
  organization = {IEEE}}

@misc{Fern23a,
  title={Empirical Evaluation of a Live Environment for Extract Method Refactoring},
  author={Fernandes, Sara and Aguiar, Ademar and Restivo, Andr\'e},
  year={2023},
  eprint={2307.11010},
  archivePrefix={arXiv}
}

@article{Ferr00a,
  author = {GianLuigi Ferrari and Ugo Montanari},
  title = {Tile formats for located and mobile systems},
  journal = {Inf. Comput.},
  volume = {156},
  pages = {173--235},
  publisher = {Academic Press, Inc.},
  year = {2000},
  url = {http://www.di.unipi.it/~ugo/proic.ps},
  doi = {10.1006/inco.1999.2825},
  address = {Duluth, MN, USA},
  issn = {0890-5401},
  number = {1-2}}

@inproceedings{Ferr10a,
  author = {Ferrara, Pietro},
  title = {Static Type Analysis of Pattern Matching by Abstract Interpretation},
  booktitle = {12th IFIP WG 6.1 International Conference and 30th IFIP WG 6.1 International Conference on Formal Techniques for Distributed Systems},
  pages = {186--200},
  year = {2010}}

@inproceedings{Ferr82a,
  author = {J.C. Ferrans},
  title = {{SEDL} --- {A} Language for Specifying Integrity Constraints on Office Forms},
  booktitle = {Proceedings of the First ACM SIGOA Conference},
  pages = {123--130},
  year = {1982}}

@inproceedings{Ferr89a,
  author = {Patrick J. Ferrel and Robert F. Meyer},
  title = {Vamp: The Aldus Application Framework},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {185--190},
  year = {1989},
  month = oct}

@inproceedings{Ferr90a,
  author = {Gian Luigi Ferrari and Ugo Montanari},
  title = {Towards the Unification of Models of Concurrency},
  booktitle = {Proceedings CAAP '90},
  volume = {431},
  pages = {162--176},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Copenhagen},
  editor = {A. Arnold},
  month = may,
  series = {LNCS}}

@article{Ferr96a,
  author = {Gian-Luigi Ferrari and Ugo Montanari and Paola Quaglia},
  title = {A $\pi$-calculus with explicit substitutions},
  journal = {Theoretical Computer Science},
  volume = {168},
  pages = {53--103},
  year = {1996},
  month = nov,
  number = {1}}

@inproceedings{Ferr96b,
  author = {William Ferreira and Matthew Hennessy and Alan Jeffrey},
  title = {A Theory of Weak Bisimulation for Core {CML}},
  booktitle = {Proceedings of the 1996 {ACM} {SIGPLAN} International Conference on Functional Programming},
  pages = {201--212},
  year = {1996},
  address = {Philadelphia, Pennsylvania},
  month = may}

@article{Ferr99a,
  author = {Paolo Ferragina and Roberto Grossi},
  title = {The String {B}-tree: A New Data Structure for String Search in External Memory and its Applications},
  journal = {Journal of the ACM},
  volume = {46},
  pages = {236--280},
  year = {1999},
  url = {citeseer.ist.psu.edu/ferragina98string.html},
  number = {2}}

@book{Few04a,
  author = {Stephen Few},
  title = {Show me the numbers: Designing Tables and Graphs to Enlighten},
  publisher = {Analytics Press},
  year = {2004},
  isbn = {0-970-60199-9}}

@book{Few06a,
  author = {S. Few},
  title = {Information Dashboard Design},
  publisher = {OReilly},
  year = {2006},
  isbn = {0596100167 978-0596100162}}

@inbook{Fews99a,
  author = {M. Fewster and D. Graham},
  title = {Software Test Automation},
  chapter = {7: Building maintainable tests},
  publisher = {ACM Press},
  year = {1999}}

@article{Fiad07a,
  author = {Jos\'e Luiz Fiadeiro},
  title = {Designing for Software's Social Complexity},
  journal = {Computer},
  volume = {40},
  pages = {34--39},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MC.2007.16},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {1}}

@article{Fich92a,
  author = {Robert G. Fichman and Chris F. Kemerer},
  title = {Object-Oriented and Conventional Analysis and Design Methodologies},
  journal = {IEEE Computer (Special Issue on Inheritance \& Classification)},
  volume = {25},
  pages = {22--39},
  year = {1992},
  month = oct,
  number = {10}}

@techreport{Fier07a,
  author = {Julien Fierz},
  title = {Java {Wiretap} --- Extracting Feature Execution Models for Reverse Engineering},
  year = {2007},
  url = {http://scg.unibe.ch/archive/projects/Fier07a.pdf},
  abstract = {Java Wiretap is a profiler tool that instruments
Java applications and allows a reverse engineer to
directly control the extraction of behavioral data
units (features) and the level of detail of the
dynamic data in a well-defined format. Java Wiretap
captures fine-grained dynamic data such as message
semds (activations), field access and instance
tracking. The extracted model can then be used by a
reverse engineering platform for further analysis in
reverse engineering environments like Moose extended
with DynaMoose for Feature Analysis and Object Flow
Analysis, Java Wiretap allows the user to trace
different triggerable actions of an application,
each representing different features, which can then
be treated as distinct feature entities when
performing feature analysis. To control the large
volume of detailed dynamic information, Java Wiretap
allows selective instrumentation of an application
at package level.},
  institution = {University of Bern},
  month = jun,
  type = {Informatikprojekt}}

@mastersthesis{Fier09a,
  author = {Julien Fierz},
  title = {Compass: Flow-Centric Back-In-Time Debugging},
  year = {2009},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Fier09a.pdf},
  abstract = {Debugging object-oriented programs often is a
difficult and time-consuming task. Nearly all of
today's debuggers only show the current state of a
failing program. The user can see when the state is
corrupted, but usually the root cause that leads to
that state occurs long before that. Back-in-time
debuggers address this problem by recording the
execution history of a program run and presenting it
to the user for inspection of past states. Those
debuggers have proven useful as they help the
developer to solve difficult problems better than a
standard debugger. However, most of those tools do
not provide sophisticated techniques to explore the
collected dynamic data, which can make it hard to
track down the root cause of an error in large
program executions. The approaches are
state-centric, which means they provide the past
state at different points in time, but they provide
no information on how objects were passed around in
the system. To address this problem we provide a
flow-centric approach that focuses on the reference
transfers of objects. We present a new back-in-time
debugger user interface that provides more efficient
exploration of the execution history. The debugger
has views and functionality that help the developer
understand the failing system and let him explore
how objects were passed around. Our initial case
studies show that it is possible to find complex
bugs more efficiently than with existing
approaches.},
  month = jan,
  type = {Master's Thesis}}

@misc{FifteenPuzzle,
  title = {15 {Puzzle}},
  url = {http://en.wikipedia.org/wiki/N-puzzle},
  key = {FifteenPuzzle},
  note = {http://en.wikipedia.org/wiki/N-puzzle}}

@article{Filh11a,
  author = {Joao Araujo Filho, Silvio Souza and Marco Tulio Valente},
  title = {{Study on the Relevance of the Warnings Reported by Java Bug-finding Tools}},
  journal = {Software, IET},
  volume = {5},
  pages = {366 --374},
  year = {2011},
  month = {aug},
  number = {4}}

@inproceedings{Fill07a,
  author = {Filli{\^a}tre, Jean-Christophe and March{\'e}, Claude},
  title = {The {Why/Krakatoa/Caduceus} platform for deductive program verification},
  booktitle = {CAV'07: 19th International Conference on Computer Aided Verification},
  year = {2007},
  series = {Lecture Notes in Computer Science}}

@book{Film05a,
  title = {Aspect-Oriented Software Development},
  publisher = {Addison-Wesley},
  year = {2005},
  editor = {Filman, R. and Elrad, T. and Ak\c{s}it, M. and Clarke, S.}}

@book{Film84a,
  author = {Robert E. Filman and Daniel P. Friedman},
  title = {Coordinated Computing: Tools and Techniques for Distributed Software},
  publisher = {McGraw-Hill},
  year = {1984}}

@inproceedings{Film87a,
  author = {Robert E. Filman},
  title = {Retrofitting Objects},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {342--353},
  year = {1987},
  month = dec}

@inproceedings{Fin03a,
  author = {Fink, Stephen J. and Qian, Feng},
  title = {Design, Implementation and Evaluation of Adaptive Recompilation with On-stack Replacement},
  booktitle = {International Symposium on Code Generation and Optimization: Feedback-directed and Runtime Optimization},
  pages = {241--252},
  publisher = {IEEE Computer Society},
  year = {2003},
  address = {Washington, DC, USA},
  numpages = {12},
  series = {CGO '03}}

@inproceedings{Find98a,
  author = {Robert Bruce Findler and Matthew Flatt},
  title = {Modular object-oriented programming with units and mixins},
  booktitle = {Proceedings of the third ACM SIGPLAN international conference on Functional programming},
  pages = {94--104},
  publisher = {ACM Press},
  year = {1998},
  doi = {10.1145/289423.289432},
  isbn = {1-58113-024-4},
  location = {Baltimore, Maryland, United States}}

@inproceedings{Fini08a,
  author = {Matthew Finifter and Adrian Mettler and Naveen Sastry and David Wagner},
  title = {Verifiable Functional Purity in Java},
  booktitle = {CCS'08},
  pages = {27-31},
  year = {2008}}

@inproceedings{Fini10a,
  author = {Matthew Finifter and Joel Weinberger and Adam Barth},
  title = {Preventing Capability Leaks in Secure JavaScript Subsets},
  booktitle = {Proceedings of Network and Distributed System Security Symposium},
  pages = {375--388},
  year = {2010},
  keywords = {security static type}}

@inproceedings{Fink02a,
  author = {Raphael A. Finkel and Arkady Zaslavsky and Krisztian Monostori and Heinz Schmidt},
  title = {Signature Extraction for Overlap Detection in Documents},
  booktitle = {Twenty-Fifth Australasian Computer Science Conference (ACSC2002)},
  publisher = {ACS},
  year = {2002},
  url = {http://citeseer.ist.psu.edu/539959.html},
  address = {Melbourne, Australia},
  editor = {Michael J. Oudshoorn}}

@book{Fink92a,
  title = {Proceedings {STACS}'92},
  volume = {577},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Cachan, France},
  editor = {A. Finkel and M. Jantzen},
  isbn = {3-540-55210-3},
  month = feb,
  series = {LNCS}}

@unpublished{Fink93a,
  author = {S. Finke and P. Jahn and K.-P Lohr and I. Piens and Th. Wolff},
  title = {Distribution and Inheritance in the {HERON} Approach to Heterogeneous Computing},
  year = {1993},
  note = {Proceedings og the 13th Conf. on Distributed Computing SystemsUniversit{\"a}t Berlin},
  type = {Draft}}

@article{Finn97a,
  author = {P. Finnigan and R. Holt and I. Kalas and S. Kerr and K. Kontogiannis and H. Mueller and J. Mylopoulos and S. Perelgut and M. Stanley and K. Wong.},
  title = {The Software Bookshelf},
  journal = {IBM Systems Journal},
  volume = 36,
  pages = {564--593},
  year = {1997},
  url = {http://researchweb.watson.ibm.com/journal/sj/364/finnigan.html http://researchweb.watson.ibm.com/journal/sj/364/finnigan.pdf},
  month = nov,
  number = 4}

@article{Finz84a,
  author = {W. Finzer and L. Gould},
  title = {Programming by Rehearsal},
  journal = {BYTE},
  volume = {9},
  pages = {187--210},
  year = {1984},
  month = jun,
  number = {6}}

@inproceedings{Fior98a,
  author = {Fabrizio Fioravanti and Paolo Nesi and Sandro Perli},
  title = {Assessment of System Evolution Through Characterization},
  booktitle = {ICSE '98 Proceedings (International Conference on Software Engineering)},
  publisher = {IEEE Computer Society},
  year = {1998}}

@inproceedings{Fior98b,
  author = {Fabrizio Fioravanti and Paolo Nesi and Sandro Perli},
  title = {A Tool for Process and Product Assessment of {C}++ Applications},
  booktitle = {CSMR '98 Proceedings (Euromicro Conference on Software Maintenance and Reengineering)},
  publisher = {IEEE Computer Society},
  year = {1998}}

@inproceedings{Fisc03a,
  author = {Michael Fischer and Martin Pinzger and Harald Gall},
  title = {Analyzing and Relating Bug Report Data for Feature Tracking},
  booktitle = {Proceedings IEEE Working Conference on Reverse Engineering ({WCRE} 2003)},
  pages = {90--99},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  address = {Los Alamitos CA},
  month = nov}

@techreport{Fisc03b,
  author = {Kathleen Fisher and John Reppy},
  title = {Statically typed traits},
  year = {2003},
  url = {http://www.cs.uchicago.edu/research/publications/techreports/TR-2003-13},
  institution = {University of Chicago, Department of Computer Science},
  month = dec,
  number = {TR-2003-13},
  type = {Technical Report}}

@inproceedings{Fisc03c,
  author = {Michael Fischer and Martin Pinzger and Harald Gall},
  title = {Populating a Release History Database from Version Control and Bug Tracking Systems},
  booktitle = {Proceedings International Conference on Software Maintenance ({ICSM} 2003)},
  pages = {23--32},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  address = {Los Alamitos CA},
  month = sep}

@article{Fisc04a,
  author = {Michael Fischer and Harald Gall},
  title = {Visualizing Feature Evolution of Large-Scale Software based on Problem and Modification Report Data},
  journal = {Journal of Software Maintenance and Evolution: Research and Practice},
  volume = {16},
  pages = {385--403},
  publisher = {John Wiley \& Sons, Ltd.},
  year = {2004},
  number = {6}}

@book{Fisc93a,
  author = {Alice E. Fischer and Frances S. Grodzinsky},
  title = {The Anatomy of Programming Languages},
  publisher = {Prentice-Hall},
  year = {1993},
  isbn = {0-13-042219-3}}

@article{Fisc95a,
  author = {Fischer, Gerhard and Redmiles, David and Williams, Lloyd and Puhr, Gretchen I. and Aoki, Atsushi and Nakakoji, Kumiyo},
  title = {{Beyond Object-Oriented Technology: Where Current Approaches Fall Short}},
  journal = {Human-Computer Interaction},
  volume = {10},
  pages = {79--119},
  year = {1995}}

@inproceedings{Fisc97a,
  author = {Fischer, Bernd and Snelting, Gregor},
  title = {Reuse by contract},
  booktitle = {ESEC-FSE Workshop on Foundations of Component-Based Sytems},
  pages = {91--100},
  year = {1997}}

@inproceedings{Fisc98a,
  author = {Bernd Fischer},
  title = {Specification-based {Browsing} of {Software} {Component} {Libraries}},
  booktitle = {Proceedings of ASE '98(13th Conference on Automated Software Engineering},
  pages = {74--83},
  publisher = {IEEE Computer Society Press},
  year = {1998},
  url = {http://citeseer.nj.nec.com/fischer99specificationbased.html}}

@inproceedings{Fish07a,
  author = {Fischer, Jeffrey and Majumdar, Rupak and Millstein, Todd},
  title = {Tasks: language support for event-driven programming},
  booktitle = {PEPM '07: Proceedings of the 2007 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation},
  pages = {134--143},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1244381.1244403},
  address = {New York, NY, USA},
  isbn = {978-1-59593-620-2},
  location = {Nice, France}}

@article{Fish12a,
author = {Fisher, Danyel and DeLine, Rob and Czerwinski, Mary and Drucker, Steven},
journal = {ACM},
number = {5220},
pages = {50--59},
title = {{Interactions with Big Data Analytics}},
volume = {1072},
year = {2012}
}

@article{Fish87a,
  author = {D.H. Fishman and David Beech and H.P. Cate and E.C. Chow and T. Connors and J.W. Davis and Nigel Derrett and C.G. Hoch and William Kent and P. Lyngbaek and B. Mahbod and M.A. Neimat and T.A. Ryan and M.C. Shan},
  title = {Iris: An Object-Oriented Database Management System},
  journal = {ACM TOOIS},
  volume = {5},
  pages = {48--69},
  year = {1987},
  month = jan,
  number = {1}}

@inproceedings{Fish94a,
  author = {Kathleen Fisher and Jhon C. Mitchell},
  title = {Notes on Typed Object-Oriented Programming},
  booktitle = {Proceedings of TACS '94},
  volume = {789},
  pages = {844--885},
  year = {1994},
  series = {LNCS}}

@article{Fish96a,
  author = {Kathleen Fisher and John C. Mitchell},
  title = {The Development of Type Systems for Object-Oriented Languages},
  journal = {Theory and Practice of Object Systems},
  volume = {1},
  pages = {189--220},
  year = {1996},
  url = {ftp://theory.stanford.edu/pub/jcm/papers/tapos.ps},
  number = {3}}

@inproceedings{Fishe08,
  author = {Fisher, Kathleen and Walker, David and Zhu, Kenny Q. and White, Peter},
  title = {From Dirt to Shovels: Fully Automatic Tool Generation from Ad Hoc Data},
  booktitle = {Proceedings of the 35th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages = {421--434},
  publisher = {ACM},
  year = {2008},
  url = {http://doi.acm.org/10.1145/1328438.1328488},
  doi = {10.1145/1328438.1328488},
  acmid = {1328488},
  address = {New York, NY, USA},
  isbn = {978-1-59593-689-9},
  keywords = {ad hoc data, data description languages, grammar induction, tool generation},
  location = {San Francisco, California, USA},
  numpages = {14},
  series = {POPL '08}}

@article{Fitc69a,
  author = {Walter M. Fitch},
  title = {Locating Gaps in Amino Acid Sequences to Optimize the Homology between Two Proteins},
  journal = {Biochemical Genetics},
  volume = {3},
  pages = {99--108},
  year = {1969}}

@inproceedings{Fitt15a,
  author = {Fittkau, Florian and Krause, Alexander and Hasselbring, Wilhelm},
  title = {Exploring software cities in virtual reality},
  booktitle = {2015 ieee 3rd working conference on software visualization (vissoft)},
  pages = {130--134},
  year = {2015},
  organization = {IEEE}}

@article{Fitt54a,
  author = {Fitts, Paul M.},
  title = {The Information Capacity of the Human Motor System in Controlling the Amplitude of Movement.},
  journal = {Journal of Experimental Psychology},
  volume = {47},
  pages = {381--391},
  year = {1954},
  number = {6}}

@techreport{Fitz98a,
  author = {Robert Fitzgerald and Todd B. Knoblock and Erik Ruf and Bjarne Steensgaard and David Tarditi},
  title = {Marmot: An Optimizing Compiler for Java},
  pages = {29},
  year = {1999},
  url = {http://research.microsoft.com/apps/pubs/default.aspx?id=68561},
  abstract = {The Marmot system is a research platform for studying the implementation of high level programming languages. It currently comprises an optimizing native-code compiler, runtime system, and libraries for a large subset of Java. Marmot integrates well-known representation, optimization, code generation, and runtime techniques with a few Java-specific features to achieve competitive performance.
This paper contains a description of the Marmot system design, along with highlights of our experience applying and adapting traditional implementation techniques to Java. A detailed performance evaluation assesses both Marmot's overall performance relative to other Java and C++ implementations and the relative costs of various Java language features in Marmot-compiled code.
Our experience with Marmot has demonstrated that well-known compilation techniques can produce very good performance for static Java applications---comparable or superior to other Java systems, and approaching that of C++ in some cases.},
  annote = {explains different optimization techniques on a static java program (no dynamic class loading)!
java compiled to native},
  date-added = {2011-02-18 13:05:04 +0100},
  date-modified = {2011-02-18 13:30:46 +0100},
  institution = {Microsoft Researcho},
  keywords = {compiler, optimizations, ssa,},
  month = {jun},
  number = {MSR-TR-99-33},
  read = {1}}

@techreport{Fium83a,
  author = {Eugene Fiume},
  title = {A Programming Environment for Constructing Graphical User Interfaces: {A} Proposal},
  year = {1983},
  institution = {Department of Computer Science, University of Toronto},
  type = {M.Sc thesis}}

@techreport{Fium87a,
  author = {Eugene Fiume},
  title = {An Attempt at Formal Specifications For a Non-Trivial Object},
  pages = {149--164},
  year = {1987},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = mar,
  type = {Objects and Things}}

@inproceedings{Fium87b,
  author = {Eugene Fiume and Dennis Tsichritzis and Laurent Dami},
  title = {A Temporal Scripting Language for Object-Oriented Animation},
  booktitle = {Proceedings of Eurographics 1987 (North-Holland)},
  publisher = {Elsevier Science Publishers},
  year = {1987},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/temporalScripting.pdf},
  abstract = {Object orientation and concurrency are inherent to
computer animation. Since the pieces of an animation
can come from various media such as
computer-generated imagery, video, and sound, the
case for object orientation is all the stronger.
However, languages for expressing the temporal
co-ordination of animated objects have been slow in
coming. We present such a language in this paper.
Since the movements that an animated object can
perform are also encapsulated as objects in our
system, the scripting language can also be used to
specify motion co-ordination. Such "motion objects"
can be applied to any animated object. The syntax,
semantics, and implementation of this language will
be described, and we shall show how to specify
device-independent computer animation.},
  address = {Amsterdam}}

@article{Fium87c,
  author = {Eugene Fiume and Dennis Tsichritzis},
  title = {Multimedia objects},
  journal = {IEEE Office Knowledge Engineering Newsletter},
  volume = {1},
  year = {1987},
  month = feb,
  number = {1}}

@inproceedings{Fium87d,
  author = {Eugene Fiume and Dennis Tsichritzis},
  title = {Dynamic Multimedia Objects},
  booktitle = {Workshop for Multimedia Objects},
  year = {1987},
  misc = {June 15-17},
  address = {Taormina, Sicily},
  month = jun}

@inproceedings{Fiut96a,
  author = {Roberto Fiutem and Paolo Tonella and Giuliano Antoniol and Ettore Merlo},
  title = {A Clich\'{e}-Based Environment to Support Architectural Reverse Engineering},
  booktitle = {Proceedings {ICSM} '96},
  year = {1996},
  month = nov,
  organization = {IEEE}}

@article{Fiut99a,
  author = {R. Fiutem and G. Antoniol and P. Tonella and E. Merlo},
  title = {ART: an Architectural Reverse Engineering Environment},
  journal = {Journal of Software Maintenance: Research and Practice},
  volume = 11,
  pages = {339--364},
  publisher = {Wiley},
  year = {1999},
  doi = {10.1002/(SICI)1096-908X(199909/10)11:5<339::AID-SMR196>3.3.CO;2-9},
  issn = {1040-550X},
  number = 5}

@inproceedings{Fjel79a,
  author = {R.K. Fjeldstad and W. T. Hamlen},
  title = {Application Program maintenance study: report to our respondents},
  booktitle = {Proceedings of GUIDE 48},
  publisher = {The Guide Corporation},
  year = {1979},
  city = {Philedalphia}}

@inproceedings{Flaj90a,
  author = {Philippe Flajolet and Paolo Sipala and Jean-Marc Steyaert},
  title = {Analytic variations on the common subexpression problem},
  booktitle = {Automata, Languages, and Programming},
  volume = {443},
  pages = {220--234},
  publisher = {Springer Verlag},
  year = {1990},
  series = {LNCS}}

@inproceedings{Flan02a,
  author = {Flanagan, Cormac and Leino, K. Rustan M. and Lillibridge, Mark and Nelson, Greg and Saxe, James B. and Stata, Raymie},
  title = {Extended static checking for Java},
  booktitle = {Proceedings of the ACM SIGPLAN 2002 Conference on Programming language design and implementation},
  pages = {234--245},
  publisher = {ACM},
  year = {2002},
  address = {New York, NY, USA},
  isbn = {1-58113-463-0},
  location = {Berlin, Germany},
  numpages = {12},
  series = {PLDI '02}}

@inproceedings{Flan06a,
  author = {Cormac Flanagan and Stephen N. Freund},
  title = {Dynamic Architecture Extraction},
  booktitle = {FATES/RV},
  volume = {4262},
  pages = {209--224},
  publisher = {Springer},
  year = {2006},
  doi = {10.1007/11940197_14},
  date = {2006-11-28},
  isbn = {3-540-49699-8},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Flan06b,
  author = {Cormac Flanagan},
  title = {Hybrid type checking},
  booktitle = {POPL '06: Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages = {245--256},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1111037.1111059},
  address = {New York, NY, USA},
  isbn = {1-59593-027-2},
  location = {Charleston, South Carolina, USA}}

@book{Flan06c,
  author = {Flanagan David},
  title = {JavaScript: The Definitive Guide},
  publisher = {O'Reilly Media, Inc.},
  year = {2006},
  edition = {Fifth},
  isbn = {0-596-10199-6}}

@inproceedings{Flan08a,
  author = {Cormac Flanagan and Stephen N. Freund and Jaeheon Yi},
  title = {Velodrome: a sound and complete dynamic atomicity checker for multithreaded programs},
  booktitle = {PLDI '08: Proceedings of the 2008 ACM SIGPLAN conference on Programming language design and implementation},
  pages = {293--303},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1375581.1375618},
  address = {New York, NY, USA},
  isbn = {978-1-59593-860-2},
  location = {Tucson, AZ, USA}}

@inproceedings{Flan09a,
  author = {Cormac Flanagan and Stephen N. Freund},
  title = {{FastTrack}: efficient and precise dynamic race detection},
  booktitle = {PLDI '09: Proceedings of the 2009 ACM SIGPLAN conference on Programming language design and implementation},
  pages = {121--133},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1542476.1542490},
  address = {New York, NY, USA},
  isbn = {978-1-60558-392-1},
  location = {Dublin, Ireland}}

@inproceedings{Flan10a,
  author = {Cormac Flanagan and Stephen N. Freund},
  title = {Adversarial memory for detecting destructive races},
  booktitle = {PLDI '10: Proceedings of the 2010 ACM SIGPLAN conference on Programming language design and implementation},
  pages = {244--254},
  publisher = {ACM},
  year = {2010},
  doi = {10.1145/1806596.1806625},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0019-3},
  location = {Toronto, Ontario, Canada}}

@book{Flan96a,
  author = {David Flanagan},
  title = {Java in Nutshell},
  publisher = {O'Reilly},
  year = {1996},
  isbn = {1-56592-183-6}}

@book{Flan97a,
  author = {David Flanagan},
  title = {JavaScript: The Definitive Guide},
  publisher = {O'Reilly \& Associates},
  year = {1997},
  url = {http://www.ora.com/catalog/jscript2/noframes.html},
  edition = {Second},
  isbn = {1-56592-234-4},
  month = jan}

@book{Flan97b,
  author = {David Flanagan},
  title = {Java Examples in a Nutshell},
  publisher = {O'Reilly},
  year = {1997},
  isbn = {1-56592-371-5}}

@book{Flan97c,
  author = {David Flanagan},
  title = {Java in a Nutshell: 2nd Edition},
  publisher = {O'Reilly},
  year = {1997},
  edition = {2nd},
  isbn = {1-56592-262-X}}

@book{Flan99a,
  author = {David Flanagan},
  title = {Java In a Nutshell: 3rd Edition},
  publisher = {O'Reilly},
  year = {1999},
  edition = {3rd}}

@book{Flan99b,
  author = {David Flanagan},
  title = {Java Foundation Classes In {A} Nutshell},
  publisher = {O'Reilly},
  year = {1999}}

@book{Flan99c,
  author = {David Flanagan and Jim Farley and William Crawford and Kris Magnusson},
  title = {Java Enterprise In {A} Nutshell},
  publisher = {O'Reilly},
  year = {1999}}

@inproceedings{Flat06a,
  author = {Matthew Flatt and Robert Bruce Finder and Matthias Felleisen},
  title = {Scheme with Classes, Mixins and Traits},
  booktitle = {AAPLAS 2006},
  year = {2006}}

@article{Flat19a,
  title={Rebuilding racket on chez scheme (experience report)},
  author={Flatt, Matthew and Derici, Caner and Dybvig, R Kent and Keep, Andrew W and Massaccesi, Gustavo E and Spall, Sarah and Tobin-Hochstadt, Sam and Zeppieri, Jon},
  journal={Proceedings of the ACM on Programming Languages},
  volume={3},
  number={ICFP},
  pages={1--15},
  year={2019},
  publisher={ACM New York, NY, USA}
}

@inproceedings{Flat98a,
  author = {Matthew Flatt and Matthias Felleisen},
  title = {Units: Cool Modules for HOT Languages},
  booktitle = {Proceedings of PLDI '98 Conference on Programming Language Design and Implementation},
  pages = {236--248},
  publisher = {ACM Press},
  year = {1998}}

@inproceedings{Flat98b,
  author = {Matthew Flatt and Shriram Krishnamurthi and Matthias Felleisen},
  title = {Classes and Mixins},
  booktitle = {Proceedings of the 25th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages = {171--183},
  publisher = {ACM Press},
  year = {1998},
  url = {http://www.cs.brown.edu/~sk/Publications/Papers/Published/fkf-classes-mixins/},
  doi = {10.1145/268946.268961},
  isbn = {0-89791-979-3},
  location = {San Diego, California, United States}}

@techreport{Flat99a,
  author = {Matthew Flatt and Shriram Krishnamurthi and Matthias Felleisen},
  title = {A Programmer's Reduction Semantics for Classes and Mixins},
  year = {1999},
  url = {www.ccs.neu.edu/scheme/pubs/tr97-293.pdf},
  institution = {Rice University},
  number = {TR 97-293}}

@inproceedings{Fleis07a,
  author = {Sebastian Fleissner and Elisa L. A. Baniassad},
  title = {Epi-aspects: aspect-oriented conscientious software},
  booktitle = {Proceedings of OOPSLA '07},
  pages = {659--674},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297027.1297076},
  address = {New York, NY, USA},
  isbn = {978-1-59593-786-5},
  location = {Montreal, Quebec, Canada}}

@article{Fleu04a,
  author = {Franck Fleurey and Yves Le Traon and Benoit Baudry},
  title = {From Testing to Diagnosis: An Automated Approach},
  journal = {ase},
  volume = {00},
  pages = {306--309},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/ASE.2004.10013},
  address = {Los Alamitos, CA, USA},
  issn = {1068-3062}}

@phdthesis{Fleu06a,
  author = {Franck Fleurey},
  title = {Langage et m\'ethode pour une ing\'enierie des mod\`eles fiable},
  year = {2006},
  school = {Th\`ese de doctorat, Universit\'e de Rennes 1}}

@inproceedings{Fleu07a,
  author = {Fabien Fleutot and Laurence Tratt},
  title = {Contrasting compile-time meta-programming in {Metalua} and {Converge}},
  booktitle = {Proceedings of the Workshop on Dynamic Languages and Applications},
  year = {2007}}

@inproceedings{Fleu07b,
  author = {Fleurey, Franck and Breton, Erwan and Baudry, Benoit and Nicolas, Alain and Jez\'equel, Jean-Marc},
  title = {{Model-Driven Engineering for Software Migration in a Large Industrial Context}},
  booktitle = {Model Driven Engineering Languages and Systems},
  volume = {4735},
  pages = {482--497},
  publisher = {Springer Berlin Heidelberg},
  year = {2007},
  doi = {10.1007/978-3-540-75209-7_33},
  abstract = {As development techniques, paradigms and platforms evolve far more quickly than domain applications, software modernization and migration, is a constant challenge to software engineers. For more than ten years now, the Sodifrance company has been intensively using ModelDriven Engineering (MDE) for both development and migration projects. In this paper we report on the use of MDE as an effcient, flexible and reliable approach for a migration process (reverse-engineering, transformation and code generation). Moreover, we discuss how MDE is economically profitable and is cost-effective over the migration through out-sourced manual re-development. The paper is illustrated with the migration of a large-scale banking system from Mainframe to J2EE.},
  address = {Berlin, Heidelberg},
  editor = {Engels, Gregor and Opdyke, Bill and Schmidt, Douglas C. and Weil, Frank},
  isbn = {978-3-540-75208-0 978-3-540-75209-7},
  keywords = {heterogeneous model, pivot model},
  language = {en},
  urldate = {2018-05-14}}

@inproceedings{Flor18a,
  author = {Flores-Ruiz, Sergio and Perez-Castillo, Ricardo and Domann, Christoph and Puica, Simona},
  title = {Mainframe Migration Based on Screen Scr{API}ng},
  booktitle = {2018 IEEE International Conference on Software Maintenance and Evolution ({ICSM}E)},
  pages = {675--684},
  year = {2018},
  organization = {IEEE}}

@inproceedings{Flor95a,
  author = {Gert Florijn},
  title = {Object Protocols as Functional Parsers},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {351--373},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@inproceedings{Flor97a,
  author = {Gert Florijn and Marco Meijers and Pieter van Winsen},
  title = {Tool Support for Object-Oriented Patterns},
  booktitle = {Proceedings ECOOP '97},
  volume = 1241,
  pages = {472--495},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Jyvaskyla, Finland},
  editor = {Mehmet Aksit and Satoshi Matsuoka},
  month = jun,
  series = {LNCS}}

@inproceedings{Fluc17a,
  author = {Olivier Fl\"uckiger and Gabriel Scherer and Ming-Ho Yee and Aviral Goel and Amal Ahmed and Jan Vitek},
  title = {Correctness of Speculative Optimizations with Dynamic Deoptimization},
  booktitle = {Principles of programming languages (POPL'17)},
  year = {2017},
  doi = {10.1145/3158137}}

@inproceedings{Flur05a,
  author = {Fluri, Beat and Gall, Harald C. and Pinzger, Martin},
  title = {Fine-grained analysis of change couplings},
  booktitle = {Source Code Analysis and Manipulation, 2005. Fifth IEEE International Workshop on},
  pages = {66-74},
  year = {2005},
  doi = {10.1109/SCAM.2005.14},
  keywords = {Java;configuration management;software prototyping;Eclipse IDE;Java class;change coupling filtering;fine-grained analysis;software evolution analysis;source code couplings;Computer architecture;Data analysis;History;Informatics;Information filtering;Information filters;Java;Licenses;Performance analysis;Software systems},
  month = {sep}}

@inproceedings{Flur06a,
  author = {Fluri, Beat and Gall, Harald C.},
  title = {Classifying Change Types for Qualifying Change Couplings},
  booktitle = {Proceedings of the 14th IEEE International Conference on Program Comprehension},
  pages = {35--45},
  publisher = {IEEE Computer Society},
  year = {2006},
  address = {Washington, DC, USA},
  isbn = {0-7695-2601-2},
  series = {{ICPC}'06}}

@article{Flur07a,
  author = {Fluri, Beat and Wuersch, Michael and PInzger, Martin and Gall, Harald},
  title = {Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction},
  journal = {IEEE Transactions on Software Engineering},
  volume = {33},
  pages = {725--743},
  year = {2007},
  number = {11}}

@inproceedings{Flur08a,
  author = {Beat Fluri and Emanuel Giger and Harald Gall},
  title = {Discovering Patterns of Change Types},
  booktitle = {23rd International Conference on Automated Software Engineering},
  pages = {463--466},
  year = {2008}}

@book{Foge01a,
  author = {Karl Fogel and Moshe Bar},
  title = {Open Source Development with CVS},
  publisher = {Coriolis},
  year = {2001}}

@inproceedings{Foka09a,
  author = {Fokaefs, M. and Tsantalis, N. and Chatzigeorgiou, A. and Sander, J.},
  title = {Decomposing object-oriented class modules using an agglomerative clustering technique},
  booktitle = {2009 {IEEE} {International} {Conference} on {Software} {Maintenance}},
  pages = {93--101},
  year = {2009},
  doi = {10.1109/ICSM.2009.5306332},
  abstract = {Software can be considered a live entity, as it undergoes many alterations throughout its lifecycle. Furthermore, developers do not usually retain a good design in favor of adding new features, comply with requirements or meet deadlines. For these reasons, code can become rather complex and difficult to understand. More particularly in object-oriented systems, classes may become very large and less cohesive. In order to identify such problematic cases, existing approaches have proposed the use of cohesion metrics. However, while metrics can identify classes with low cohesion, they cannot identify new or independent concepts. Moreover, these methods require a lot of human interpretation to identify the respective design flaws. In this paper, we propose a class decomposition method using an agglomerative clustering algorithm based on the Jaccard distance between class members. Our methodology is able to identify new concepts and rank the solutions according to their impact on the design quality of the system. Finally, our method has been evaluated by two independent designers who were asked to comment on the suggestions produced by our technique on their projects. The designers provided feedback on the ability of the method to identify new concepts and improve the design quality of the system in terms of cohesion.},
  keywords = {software engineering, Humans, Object oriented programming, object-oriented programming, Software engineering, Informatics, agglomerative clustering technique, class decomposition method, class members, Clustering algorithms, Clustering methods, Data mining, Feedback, Jaccard distance, object-oriented class module decomposition, pattern clustering, system design quality, systems analysis},
  month = sep}

@article{Foka12a,
  author = {Fokaefs, Marios and Tsantalis, Nikolaos and Stroulia, Eleni and Chatzigeorgiou, Alexander},
  title = {Identification and application of {Extract} {Class} refactorings in object-oriented systems},
  journal = {Journal of Systems and Software},
  volume = {85},
  pages = {2241--2260},
  year = {2012},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0164121212001057},
  doi = {10.1016/j.jss.2012.04.013},
  abstract = {Refactoring is recognized as an essential practice in the context of evolutionary and agile software development. Recognizing the importance of the practice, modern IDEs provide some support for low-level refactorings. A notable exception in the list of supported refactorings is the ``Extract Class'' refactoring, which is conceived to simplify large, complex, unwieldy and less cohesive classes.},
  issn = {01641212},
  language = {en},
  month = oct,
  number = {10},
  urldate = {2019-03-22}}

@book{Fole82a,
  author = {James Foley and Andy van Dam},
  title = {Fundamentals of Interactive Computer Graphics},
  publisher = {Addison Wesley Publishing Company},
  year = {1982},
  address = {Reading, Mass.},
  series = {The Systems Programming Series}}

@proceedings{Fole86a,
  title = {Special Issues on User Interface Software},
  journal = {ACM Transactions on Graphics},
  volume = {5},
  year = {1986},
  editor = {James Foley}}

@article{Fole86b,
  author = {James D. Foley and C.F. McMath},
  title = {Dynamic Process Visualization},
  journal = {IEEE Computer Graphics and Applications},
  volume = {6},
  pages = {16--25},
  year = {1986},
  month = mar,
  number = {2}}

@inproceedings{Fole88a,
  author = {James Foley and Christina Gibbs and Won Chul Kim and Srdjan Kovacevic},
  title = {A Knowledge-based User Interface Management System},
  booktitle = {CHI '88 Conference Proceedings},
  year = {1988},
  editor = {Elliot Soloway and Douglas Frye and Sylvia B. Sheppard}}

@article{Foli10a,
  author = {Christian Folini},
  title = {Sein Kampf f{\"u}r das Teilen},
  journal = {unilink, Die Nachrichten der Universit{\"a}t Bern},
  pages = {8},
  year = {2010},
  date-added = {2010-04-02 13:19:23 +0200},
  date-modified = {2010-04-02 13:22:57 +0200},
  month = may}

@inproceedings{Foll00a,
  author = {Bertil Folliot},
  title = {The Virtual Virtual Machine Project},
  booktitle = {IFIP Symposium on Computer Architecture and High Performance Computing},
  year = {2000},
  address = {Sao Paulo, Brazil},
  month = {oct}}

@inproceedings{Foll02a,
  author = {Bertil Folliot and Ian Piumarta and Lionel Seinturier and Carine Baillarguet and Christian Khoury and Arthur L\'{e}ger and Fr\'{e}d\'{e}ric Ogel},
  title = {Beyond flexibility and reflection: the virtual virtual machine approach},
  booktitle = {NATO Advanced Research Workshop, Environments, Tools and Applications for Cluster Computing},
  pages = {17--26},
  year = {2002},
  address = {Springer-Verlag}}

@article{Folm04a,
  author = {Folmer, Eelke and Bosch, Jan},
  title = {Architecting for usability: a survey},
  journal = {Journal of systems and software},
  volume = {70},
  pages = {61--78},
  publisher = {Elsevier},
  year = {2004},
  number = {1-2}}

@inproceedings{Folt99a,
  author = {Peter Foltz and Darrell Laham and Thomas Landauer},
  title = {Automated Essay Scoring: Applications to Educational Technology},
  booktitle = {Proceedings World Conference on Educational Multimedia, Hypermedia and Telecommunications (EdMedia 1999)},
  pages = {939--944},
  year = {1999}}

@techreport{Fong04a,
  author = {Philip W. L. Fong and Cheng Zhang},
  title = {Capabilities as alias control: Secure cooperation in dynamically extensible systems},
  year = {2004},
  institution = {Department of Computer Science, University of Regina}}

@article{Fong10a,
  author = {Fong, Philip W. L. and Orr, Simon},
  title = {Isolating untrusted software extensions by custom scoping rules},
  journal = {Comput. Lang. Syst. Struct.},
  volume = {36},
  pages = {268--287},
  publisher = {Elsevier Science Publishers B. V.},
  year = {2010},
  doi = {10.1016/j.cl.2009.12.002},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {1477-8424},
  number = {3}}

@inproceedings{Font17a,
  author = {Fontana, Francesca Arcelli and Pigazzini, Ilaria and Roveda, Riccardo and Tamburri, Damian and Zanoni, Marco and Di Nitto, Elisabetta},
  title = {Arcan: A tool for architectural smells detection},
  booktitle = {2017 IEEE International Conference on Software Architecture Workshops (ICSAW)},
  pages = {282--285},
  year = {2017},
  organization = {IEEE}}

@inproceedings{Fonta15a,
  author = {Fontana, Francesca Arcelli and Ferme, Vincenzo and Zanoni, Marco},
  title = {Towards assessing software architecture quality by exploiting code smell relations},
  booktitle = {2015 IEEE/ACM 2nd International Workshop on Software Architecture and Metrics},
  pages = {1--7},
  year = {2015},
  organization = {IEEE}}

@article{Food94a,
  author = {Michael Foody},
  title = {Providing Object System Interoperability},
  journal = {??},
  volume = {??},
  pages = {??-??},
  year = {1994},
  number = {??}}

@incollection{Foot00a,
  author = {Brian Foote and Joseph W. Yoder},
  title = {Big Ball of Mud},
  booktitle = {Pattern Languages of Program Design},
  volume = {4},
  pages = {654--692},
  publisher = {Addison Wesley},
  year = {2000},
  url = {http://www.laputan.org/mud/mud.html},
  editor = {N. Harrison and B. Foote and H. Rohnert}}

@inproceedings{Foot89a,
  author = {Brian Foote and Ralph E. Johnson},
  title = {Reflective Facilities in {Smalltalk}-80},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {327--336},
  year = {1989},
  month = oct}

@inproceedings{Foot93a,
  author = {B. Foote},
  title = {Architectural Balkanization in the Post-Linguistic Area},
  booktitle = {OOPSLA '93 Workshop on Reflection and Metalevel Architectures in Object-Oriented Programming},
  year = {1993}}

@unpublished{Foot94a,
  author = {Brian Foote and William F. Opdyke},
  title = {Evolve Aggregations From Inheritance Hierarchies: {A} Consolidation Pattern to Support Evolution and Reuse},
  year = {1994},
  url = {ftp://p300.cpl.uiuc.edu/pub/foote/aggregates.ps},
  abstract = {Reusable objects are the result of an iterative,
evolutionary process. This evolution proceeds as
designers refactor their designs to address hanging
requirments and improve the structural integrity and
reusability of their designs. As objects mature,
relationships based on aggregation replace casual
inheritance.},
  note = {Department of Computer Science University of Illinois at Urbana-Champaign Urbana},
  type = {draft}}

@inproceedings{Foot97a,
  author = {Brian Foote and Joseph W. Yoder},
  title = {{Big} {Ball} of {Mud}},
  booktitle = {Proceedings of PLop '97},
  year = {1997},
  note = {Fourth Conference on Patterns Languages of Programs (PLoP '97/EuroPLoP '97), Technical Report WUCS-97-34 (PLoP '97/EuroPLoP '97), September 1997 Department of Computer Science, Washington University}}

@inproceedings{Foot97b,
  author = {Brian Foote and Joseph W. Yoder},
  title = {{Big} {Ball} of {Mud}},
  booktitle = {Proceedings of PLoP '97},
  year = {1997}}

@inproceedings{Ford02a,
  author = {Bryan Ford},
  title = {Packrat parsing: simple, powerful, lazy, linear time, functional pearl},
  booktitle = {ICFP 02: Proceedings of the seventh ACM SIGPLAN international conference on Functional programming},
  volume = {37/9},
  pages = {36--47},
  publisher = {ACM},
  year = {2002},
  url = {http://pdos.csail.mit.edu/~baford/packrat/icfp02/packrat-icfp02.pdf},
  doi = {10.1145/583852.581483},
  address = {New York, NY, USA},
  issn = {0362-1340}}

@mastersthesis{Ford02b,
  author = {Bryan Ford},
  title = {Packrat Parsing: a Practical Linear-Time Algorithm with Backtracking},
  booktitle = {ICFP '02: Proceedings of the seventh ACM SIGPLAN international conference on Functional programming},
  year = {2002},
  school = {Massachusetts Institute of Technology},
  url = {http://pdos.csail.mit.edu/~baford/packrat/thesis/ http://pdos.csail.mit.edu/~baford/packrat/thesis/thesis.pdf}}

@inproceedings{Ford04a,
  author = {Bryan Ford},
  title = {Parsing expression grammars: a recognition-based syntactic foundation},
  booktitle = {POPL '04: Proceedings of the 31st ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages = {111--122},
  publisher = {ACM},
  year = {2004},
  url = {http://pdos.csail.mit.edu/~baford/packrat/popl04/peg-popl04.pdf},
  doi = {10.1145/964001.964011},
  address = {New York, NY, USA},
  isbn = {1-58113-729-X},
  location = {Venice, Italy}}

@misc{Form,
  title = {Formulator, an extensible framework that eases the creation and validation of web forms for {Zope}},
  url = {http://www.infrae.com/download/Formulator},
  key = {Formulator},
  note = {http://www.infrae.com/download/Formulator}}

@book{Form04a,
  author = {Forman, Ira R. and Forman, Nate},
  title = {Java Reflection in Action (In Action series)},
  year = {2004},
  isbn = {1932394184},
  publisher = {Manning Publications Co.},
  address = {USA}
}

@inproceedings{Form94a,
  author = {Ira R. Forman and Scott Danforth and Hari Madduri},
  title = {Composition of Before/After Metaclasses in {SOM}},
  booktitle = {Proceedings of OOPSLA '94},
  volume = {29},
  pages = {427--439},
  year = {1994},
  address = {Portland},
  editor = {ACM},
  month = oct,
  number = {10},
  organization = {ACM},
  series = {ACM Sigplan Notices}}

@book{Form99a,
  author = {Ira R. Forman and Scott Danforth},
  title = {Putting Metaclasses to Work: A New Dimension in Object-Oriented Programming},
  publisher = {Addison-Wesley},
  year = {1999}}

@misc{Fortress,
  title = {The {Fortress} Language Specification},
  url = {http://research.sun.com/projects/plrg/fortress0866.pdf},
  key = {fortress},
  note = {\url{http://research.sun.com/projects/plrg/fortress0866.pdf}}}

@phdthesis{Fost02a,
  author = {Jeffrey Scott Foster},
  title = {Type Qualifiers: Lightweight Specifications to Improve Software Quality},
  year = {2002},
  school = {University of California, Berkeley},
  url = {http://www.cs.umd.edu/~jfoster/papers/thesis.pdf},
  month = dec,
  type = {{Ph.D}. Thesis}}

@inproceedings{Fost02b,
  author = {Jeffrey S. Foster and Tachio Terauchi and Alex Aiken},
  title = {Flow-Sensitive Type Qualifiers},
  booktitle = {Proceedings of PLDI '02 Conference on Programming Language Design and Implementation},
  pages = {1--12},
  publisher = {ACM Press},
  year = {2002},
  url = {http://www.cs.umd.edu/~jfoster/papers/pldi02.pdf}}

@inproceedings{Fost06a,
  author = {Howard Foster and Sebastian Uchitel and Jeff Magee and Jeff Kramer},
  title = {LTSA-WS: a tool for model-based verification of web service compositions and choreography},
  booktitle = {ICSE '06: Proceeding of the 28th international conference on Software engineering},
  pages = {771--774},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1134285.1134408},
  address = {New York, NY, USA},
  isbn = {1-59593-375-1},
  location = {Shanghai, China}}

@inproceedings{Fost12a,
  author = {Foster, Stephen R. and Griswold, William G. and Lerner, Sorin},
  title = {WitchDoctor: IDE Support for Real-time Auto-completion of Refactorings},
  booktitle = {Proceedings of the 34th International Conference on Software Engineering},
  pages = {222--232},
  publisher = {IEEE Press},
  year = {2012},
  url = {http://dl.acm.org/citation.cfm?id=2337223.2337250},
  acmid = {2337250},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4673-1067-3},
  location = {Zurich, Switzerland},
  numpages = {11},
  series = {ICSE '12}}

@inproceedings{Four96a,
  author = {C\'edric Fournet and Georges Gonthier},
  title = {The Reflexive {CHAM} and the Join-Calculus},
  booktitle = {Proceedings of the 23rd ACM Symposium on Principles of Programming Languages},
  pages = {372--385},
  publisher = {ACM Press},
  year = {1996},
  url = {http://www.research.microsoft.com/~fournet/biblio.htm http://pauillac.inria.fr/~fournet/papers/popl-96.ps.gz}}

@inproceedings{Four96b,
  author = {C{\'e}dric Fournet and Georges Gonthier and Jean-Jacques L{\'e}vy and Luc Maranget and Didier R{\'e}my},
  title = {A Calculus of Mobile Agents},
  booktitle = {Proceedings of the 7th International Conference on Concurrency Theory (CONCUR '96)},
  volume = 1119,
  pages = {406--421},
  publisher = {Springer-Verlag},
  year = {1996},
  url = {http://www.research.microsoft.com/~fournet/biblio.htm},
  month = aug,
  series = {LNCS}}

@inproceedings{Four97b,
  author = {C\'edric Fournet and Cosimo Laneve and Luc Maranget and Didier R\'emy},
  title = {Implict Typing \`a la {ML} for the Join-Calculus},
  booktitle = {Proc. of the 1997 8th International Conference on Concurrency Theory},
  publisher = {Springer-Verlag},
  year = {1997},
  url = {ftp://ftp.inria.fr/INRIA/Projects/para/maranget/CONCUR-97.dvi.gz}}

@inproceedings{Four98a,
  author = {C{\'e}dric Fournet and Georges Gonthier},
  title = {A Hierarchy of Equivalences for Asynchronous Calculi},
  booktitle = {Proceedings of ICALP~'98},
  pages = {844--855},
  year = {1998},
  url = {http://www.research.microsoft.com/~fournet/biblio.htm}}

@inproceedings{Four98b,
  author = {C{\'e}dric Fournet and Michele Boreale and Cosimo Laneve},
  title = {Bisimulations in the Join Calculus},
  booktitle = {Proceedings of the IFIP Working Conference on Programming Concepts, Methods and Calculi (PROCOMET)},
  year = {1998},
  url = {http://www.research.microsoft.com/~fournet/biblio.htm},
  month = jun}

@phdthesis{Four98c,
  author = {C{\'e}dric Fournet},
  title = {The Join-Calculus: a Calculus for Distributed Mobile Programming},
  year = {1998},
  school = {Ecole Polytechnique},
  url = {http://www.research.microsoft.com/~fournet/biblio.htm},
  number = {INRIA TU-0556},
  type = {{Ph.D}. Thesis}}

@article{Fowl01a,
  author = {Fowler, Martin and Highsmith, Jim},
  title = {The {Agile} Manifesto},
  journal = {Software Development Magazine},
  volume = 9,
  pages = {29--30},
  year = {2001},
  month = aug,
  note = {http://agilemanifesto.org},
  number = 8}

@book{Fowl02a,
  author = {Martin Fowler},
  title = {Patterns of Enterprise Application Architecture},
  publisher = {Addison-Wesley},
  year = {2002},
  isbn = {0321127420}}

@book{Fowl03a,
  author = {Martin Fowler},
  title = {{UML} Distilled},
  publisher = {Addison Wesley},
  year = {2003},
  isbn = {0321193687}}

@book{Fowl05a,
  author = {Martin Fowler},
  title = {Patterns of Enterprise Application Architecture},
  publisher = {Addison Wesley},
  year = {2002},
  isbn = {0321127420}}

@misc{Fowl05b,
  author = {Martin Fowler},
  title = {Language Workbenches: The Killer-App for Domain-Specific Languages},
  year = {2005},
  url = {http://www.martinfowler.com/articles/languageWorkbench.html},
  month = jun,
  note = {\url{http://www.martinfowler.com/articles/languageWorkbench.html}}}

@misc{Fowl05c,
  author = {Martin Fowler},
  title = {Inversion Of Control, obtained from {Martin Fowler}'s Wiki},
  year = {2005},
  url = {http://www.martinfowler.com/bliki/InversionOfControl.html},
  month = jun}

@misc{Fowl05d,
  author = {Martin Fowler},
  title = {Fluent Interface},
  year = {2005},
  url = {http://www.martinfowler.com/bliki/FluentInterface.html}}

@misc{Fowl08X,
  author = {Martin Fowler},
  title = {Domain Specific Languages},
  year = {2008},
  url = {http://martinfowler.com/dslwip/},
  month = jun,
  note = {http://martinfowler.com/dslwip/, Work in progress}}

@book{Fowl18a,
  author = {Fowler, Martin},
  title = {Refactoring: {Improving} the {Design} of {Existing} {Code}},
  publisher = {Addison-Wesley Professional},
  year = {2018},
  address = {Boston},
  edition = {2 edition},
  isbn = {9780134757599},
  language = {English},
  month = nov,
  shorttitle = {Refactoring}}

@inproceedings{Fowl94a,
  author = {Robert J. Fowler},
  title = {Architectural Convergence and the Granularity of Objects in Distributed Systems},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {33--46},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {Recent dramatic speedups in processor speeds have
not been matched by comparable reductions in
communication latencies, either in MIMD systems
designed for parallel computation or in workstation
networks. A consequence is that these two classes of
concurrent architectures are becoming more alike.
This architectural convergence is affecting the
software techniques and programming styles used: the
distinctions are beginning to fade and all software
systems are looking increasingly "distributed." We
discuss these architectural trends from the
standpoint of providing a single, uniform
object-based programming abstraction that
accommodates both large and small objects.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@book{Fowl97a,
  author = {Martin Fowler},
  title = {{UML} Distilled},
  publisher = {Addison Wesley},
  year = {1997},
  isbn = {0-201-32563-2}}

@book{Fowl97b,
  author = {Martin Fowler},
  title = {Analysis Patterns: Reusable Objects Models},
  publisher = {Addison Wesley},
  year = {1997},
  isbn = {0-201-89542-0}}

@book{Fowl99a,
  author = {Martin Fowler and Kent Beck and John Brant and William Opdyke and Don Roberts},
  title = {Refactoring: Improving the Design of Existing Code},
  publisher = {Addison Wesley},
  year = {1999}}

@book{Fowl99b,
  author = {Martin Fowler},
  title = {Refactoring: improving the design of existing code},
  publisher = {Addison-Wesley Professional},
  year = {1999}}

@techreport{Fox90a,
  author = {Geoffrey Charles Fox and Seema Hiranandani and Ken Kennedy and Charles Koelbel and Ulrich Kremer and Chau-Wen Tseng and M. L. C. Wu},
  title = {Fortran D Language Specification},
  year = 1990,
  institution = {Dept. of Computer Science, Rice University},
  number = {CRPC\#TR90--141}}

@article{Fox97,
  author = {Fox, Geoffrey and Li, Xiaoming and Qiang, Zheng and Zhigang, Wu},
  title = {A prototype of {Fortran}-to-{Java} converter},
  journal = {Concurrency: Practice and Experience},
  volume = {9},
  pages = {1047--1061},
  year = {1997},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291096-9128%28199711%299%3A11%3C1047%3A%3AAID-CPE348%3E3.0.CO%3B2-V},
  doi = {10.1002/(SICI)1096-9128(199711)9:11<1047::AID-CPE348>3.0.CO;2-V},
  abstract = {This is a report on a prototype of a Fortran 77 to Java converter, f2j. Translation issues are identified, approaches are presented, a URL is provided for interested readers to download the package, and some unsolved problems are brought up. F2j allows value to be added to some of the investment on Fortran code - in particular, those well-established Fortran libraries for scientific and engineering computation. {\copyright} 1997 John Wiley \& Sons, Ltd.},
  copyright = {Copyright {\copyright} 1997 John Wiley \& Sons, Ltd.},
  issn = {1096-9128},
  language = {en},
  month = nov,
  number = {11},
  urldate = {2018-05-22}}

@article{Fox97a,
  author = {Fox, Geoffrey and Li, Xiaoming and Qiang, Zheng and Zhigang, Wu},
  title = {A prototype of {Fortran}-to-{Java} converter},
  journal = {Concurrency: Practice and Experience},
  volume = {9},
  pages = {1047--1061},
  year = {1997},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291096-9128%28199711%299%3A11%3C1047%3A%3AAID-CPE348%3E3.0.CO%3B2-V},
  doi = {10.1002/(SICI)1096-9128(199711)9:11<1047::AID-CPE348>3.0.CO;2-V},
  abstract = {This is a report on a prototype of a Fortran 77 to Java converter, f2j. Translation issues are identified, approaches are presented, a URL is provided for interested readers to download the package, and some unsolved problems are brought up. F2j allows value to be added to some of the investment on Fortran code -- in particular, those well-established Fortran libraries for scientific and engineering computation. {\copyright} 1997 John Wiley \& Sons, Ltd.},
  copyright = {Copyright {\copyright} 1997 John Wiley \& Sons, Ltd.},
  issn = {1096-9128},
  keywords = {fortran},
  language = {en},
  month = nov,
  number = {11},
  urldate = {2018-05-22}}

@article{Frak87a,
  author = {William Frakes and Brian Nejmeh},
  title = {Software Reuse Through Information Retrieval},
  journal = {SIGIR Forum},
  volume = {21},
  pages = {30--36},
  year = {1987},
  number = {1-2}}

@inproceedings{Fram09a,
  author = {Frampton, Daniel and Blackburn, Stephen M. and Cheng, Perry and Garner, Robin J. and Grove, David and Eliot and Salishev, Sergey I.},
  title = {Demystifying magic: high-level low-level programming},
  booktitle = {Proceedings of the 2009 ACM SIGPLAN/SIGOPS international conference on Virtual execution environments},
  pages = {81--90},
  publisher = {ACM},
  year = {2009},
  url = {http://dx.doi.org/10.1145/1508293.1508305},
  doi = {10.1145/1508293.1508305},
  abstract = {The power of high-level languages lies in their abstraction over hardware and software complexity, leading to greater security, better reliability, and lower development costs. However, opaque abstractions are often show-stoppers for systems programmers, forcing them to either break the abstraction, or more often, simply give up and use a different language. This paper addresses the challenge of opening up a high-level language to allow practical low-level programming without forsaking integrity or performance. The contribution of this paper is three-fold: 1) we draw together common threads in a diverse literature, 2) we identify a framework for extending high-level languages for low-level programming, and 3) we show the power of this approach through concrete case studies. Our framework leverages just three core ideas: extending semantics via intrinsic methods, extending types via unboxing and architectural-width primitives, and controlling semantics via scoped semantic regimes. We develop these ideas through the context of a rich literature and substantial practical experience. We show that they provide the power necessary to implement substantial artifacts such as a high-performance virtual machine, while preserving the software engineering benefits of the host language. The time has come for high-level low-level programming to be taken more seriously: 1) more projects now use high-level languages for systems programming, 2) increasing architectural heterogeneity and parallelism heighten the need for abstraction, and 3) a new generation of high-level languages are under development and ripe to be influenced.},
  address = {New York, NY, USA},
  annote = {targets static programming languages},
  isbn = {978-1-60558-375-4},
  location = {Washington, DC, USA},
  posted-at = {2013-01-13 19:01:34},
  priority = {2},
  rating = {4},
  read = {1},
  series = {VEE '09}}

@book{Fram93a,
  author = {Frame Technology Corporation},
  title = {Using Framemaker 4},
  publisher = {Frame technology},
  year = {1993},
  isbn = {41-03776-00}}

@article{Fran03a,
  author = {France, Robert and Ghosh, Sudipto and Song, Eunjee and Kim, Dae-Kyoo},
  title = {A Metamodeling Approach to Pattern-Based Model Refactoring},
  journal = {IEEE Software},
  volume = {20},
  pages = {52--58},
  year = {2003},
  number = {5}}

@inproceedings{Fran07a,
  author = {France, Robert and Rumpe, Bernhard},
  title = {Model-driven development of complex software: A research roadmap},
  booktitle = {Future of Software Engineering (FOSE'07)},
  pages = {37--54},
  year = {2007},
  organization = {IEEE}}

@inproceedings{Fran15a,
  author = {Franks, Christine and Tu, Zhaopeng and Devanbu, Premkumar and Hellendoorn, Vincent},
  title = {Cacheca: A cache language model based code suggestion tool},
  booktitle = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  volume = {2},
  pages = {705--708},
  year = {2015},
  organization = {IEEE}}

@book{Fran92a,
  author = {Nissim Francez},
  title = {Program Verification},
  publisher = {Addison Wesley},
  year = {1992},
  isbn = {0-201-41608-5}}

@book{Fran96a,
  author = {Nissim Francez and Ira R. Forman},
  title = {Interacting Processes},
  publisher = {Addison Wesley},
  year = {1996}}

@article{Fran97a,
  author = {Michael Franz and Thomas Kistler},
  title = {Slim binaries},
  journal = {Commun. ACM},
  volume = {40},
  pages = {87--94},
  publisher = {ACM Press},
  year = {1997},
  doi = {10.1145/265563.265576},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {12}}

@mastersthesis{Fran99a,
  author = {Fredi Frank},
  title = {An Associative Documentation Model},
  year = {1999},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Fran99a.pdf},
  abstract = {This diploma work examines the MAINTENANCE OF
TECHNICAL DOCUMENTATION within an software
engineering process. The characteristics of
technical documentation and its behaviour within an
dynamic software development environment are
important to understand the problems that occur with
technical documentation. I explore the factors that
influence the development and the resulting quality
of the technical docu-mentation. The RELATIONSHIP
BETWEEN SOFTWARE SOURCE CODE AND TECHNICAL
DOC-UMENTATION is used to coordinate the development
of the technical documentation with the software
development. The principle to match software entity
names with documentation segments defines the
relationship between software and documenta-tion. I
demonstrate how it works and how it is used for
coordination of the software development and the
technical documentation development. An analysis of
different name representations and documentation
segmentation structures shows the influence of the
structures on the creation of relations. I explore
under which conditions relations are generated that
fit best to the relationship between software and
documentation that exists in reality. The
ASSOCIATIVE DOCUMENTATION MODEL (ADM) builds on the
relationship between software and documentation that
is determined by matching of software en-tity names
within documentation. The ADM focuses on three
aspects: It concentrates on the extraction of the
names of software entities. ADM uses Famix models
that are capable to represent any object-oriented
software and detects the software entities to be
represented by their names. Additionally, ADM
considers structural relationships between the
software entities that are given by inheritance,
aggregation, invocation and access. The second
aspect is the representation of the relationship
between software and documentation. Especially the
influence of the inner relationship of software
en-tities on the relationship between software and
documentation is important. The third aspect is to
get the detection of the software entity names and
the generation of the relationship between software
and documentation into a consistent model. It serves
as a uniform model of the software-documentation
relationship for any application that uses this
model. CHANGE IMPACT DETECTION is an sample
application of the ADM. It determines changes
between two software versions by comparison of the
models of these versions. Differences between the
models are interpreted as changes. The names of the
entities that are affected by the changes are taken
as representations of the changes. The ADM relates
these change representations to the documentation.
This way, impact of the software changes on the
documentation is detected over the ADM relations.
The func-tionality and usage as well as the power
and...},
  month = oct,
  type = {Diploma thesis}}

@inproceedings{Fras11a,
  author = {Fraser, Gordon and Arcuri, Andrea},
  title = {EvoSuite: Automatic Test Suite Generation for Object-Oriented Software},
  booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
  pages = {416-419},
  publisher = {Association for Computing Machinery},
  year = {2011},
  url = {https://doi.org/10.1145/2025113.2025179},
  doi = {10.1145/2025113.2025179},
  abstract = {To find defects in software, one needs test cases that execute the software systematically, and oracles that assess the correctness of the observed behavior when running these test cases. This paper presents EvoSuite, a tool that automatically generates test cases with assertions for classes written in Java code. To achieve this, EvoSuite applies a novel hybrid approach that generates and optimizes whole test suites towards satisfying a coverage criterion. For the produced test suites, EvoSuite suggests possible oracles by adding small and effective sets of assertions that concisely summarize the current behavior; these assertions allow the developer to detect deviations from expected behavior, and to capture the current behavior in order to protect against future defects breaking this behavior.},
  address = {New York, NY, USA},
  isbn = {9781450304436},
  keywords = {test case generation, search based soft- ware testing, assertion generation},
  location = {Szeged, Hungary},
  numpages = {4},
  series = {ESEC/FSE '11}}

@article{Fras12a,
  author = {Fraser, Gordon and Zeller, Andreas},
  title = {Mutation-Driven Generation of Unit Tests and Oracles},
  journal = {IEEE Transactions on Software Engineering},
  volume = {38},
  pages = {278-292},
  year = {2012},
  doi = {10.1109/TSE.2011.93},
  number = {2}}

@inproceedings{Fras17a,
  author = {Frassetto, Tommaso and Gens, David and Liebchen, Christopher and Sadeghi, Ahmad-Reza},
  title = {Jitguard: hardening just-in-time compilers with sgx},
  booktitle = {Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
  pages = {2405--2419},
  year = {2017}}

@article{Fras80a,
  author = {C.W. Fraser},
  title = {A Generalized Text Editor},
  journal = {CACM},
  volume = {23},
  pages = {154--158},
  year = {1980},
  month = mar,
  number = {3}}

@inproceedings{Fras81a,
  author = {C.W. Fraser},
  title = {Syntax-Directed Editing of General Data Structures},
  booktitle = {Proceedings of the ACM Symposium on Text Manipulation},
  pages = {17--21},
  year = {1981},
  month = jun}

@article{Frat99a,
  author = {Piero Fraternali},
  title = {Tools and approaches for developing data-intensive Web applications: a survey},
  journal = {ACM Computing Surveys},
  volume = {3},
  pages = {227--263},
  year = {1999}}

@inproceedings{Freb87a,
  author = {Karl Freburger},
  title = {{R{API}D}: Prototyping Control Panel Interfaces},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {416--422},
  year = {1987},
  month = dec}

@article{Frec13a,
  author = {Frechette, Nicolas and Badri, Linda and Badri, Mourad},
  title = {Regression Test reduction for object-oriented software: A control call graph based technique and associated tool},
  journal = {ISRN Software Engineering},
  volume = {2013},
  publisher = {Hindawi Publishing Corporation},
  year = {2013}}

@inproceedings{Free04a,
  author = {Steve Freeman and Nat Pryce and Tim Mackinnon and Joe Walnes},
  title = {Mock Roles, not Objects},
  booktitle = {Companion of OOPSLA '04, ACM SIGPLAN Notices},
  pages = {236--246},
  publisher = {ACM Press},
  year = {2004},
  url = {http://www.jmock.org/oopsla2004.pdf},
  address = {New York, NY, USA}}

@inproceedings{Free06a,
  author = {Steve Freeman and Nat Pryce},
  title = {Evolving an embedded domain-specific language in {Java}},
  booktitle = {OOPSLA '06: Companion to the 21st ACM SIGPLAN symposium on Object-oriented programming systems, languages, and applications},
  pages = {855--865},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1176617.1176735},
  address = {New York, NY, USA},
  isbn = {1-59593-491-X},
  location = {Portland, Oregon, USA}}


@inproceedings{Free89a,
  author = {Bjorn N. Freeman-Benson},
  title = {A Module Mechanism for Constraints in {Smalltalk}},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {389--396},
  year = {1989},
  month = oct}

@inproceedings{Free90a,
  author = {Bjorn N. Freeman-Benson},
  title = {Kaleidoscope: Mixing Objects, Constraints and Imperative Programming},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {77--88},
  year = {1990},
  month = oct}

@article{Free90b,
  author = {B. Freeman-Benson and J. Maloney and A. Borning},
  title = {An incremental Constraint Solver},
  journal = {Comminications of the ACM},
  volume = {33},
  pages = {55--63},
  year = {1990},
  number = {1}}

@inproceedings{Free92a,
  author = {Bjorn N. Freeman-Benson and Alan Borning},
  title = {Integrating Constraints with an Object-Oriented Language},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {268--286},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Free92b,
  author = {Bjorn N. Freeman-Benson and Alan Borning},
  title = {The Design and Implementation of Kaleidoscope '90, {A} Constraint Imperative Programming Language},
  booktitle = {Proceedings of the 1992 IEEE International Conference on Computer Languages},
  year = {1992},
  note = {To appear}}

@inproceedings{Free94a,
  author = {S.M.G. Freeman and M.S. Manasse},
  title = {Adding Digital Video to an Object-Oriented User Interface Toolkit},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {493--512},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@article{Free95a,
  author = {Steve Freeman},
  title = {Partial Revelation and {Modula}-3},
  journal = {Dr. Dobb's Journal},
  volume = {20},
  pages = {36--42},
  year = {1995},
  month = oct,
  number = {10}}

@book{Free99a,
  author = {Eric Freeman and Susanne Hupfer and Ken Arnold},
  title = {JavaSpaces Principles, Patterns and Practice},
  publisher = {Addison Wesley},
  year = {1999},
  note = {ISBN: 0201309556}}

@techreport{Frei00a,
  author = {Michael Freidig},
  title = {{XMI} for {FAMIX}},
  year = {2000},
  url = {http://scg.unibe.ch/archive/projects/Frei00a.pdf},
  abstract = {In the context of the FAMOOS project it is necessary
to transfer object-oriented models of software
systems between different analysis tools. These
models conform to the meta-model FAMIX, which is a
model of the source code of a software system. In
this project the OMG standard XMI (XML Metadata
Interchange) is used to map the FAMIX meta-model to
an XML DTD and generate XML files based on the model
that is transferred. Because XMI is based on MOF
(Meta Object Facility) meta-models, FAMIX is defined
as a MOF meta-model. Based on these concepts, a
prototype in Java is implemented that reads data
from the Java reflective-interface and uses the XMI
standard to generate an XML document. Because any
model that has a MOF compliant metamodel can be
exchanged with XMI, the prototype uses a generic
approach by implementing the MOF interfaces and
instantiating the FAMIX meta-model from the MOF
model. This architecture can be reused for systems
that use meta-models different from FAMIX. In order
to test the correctness of the model-data after the
transfer, a test program is implemented, that
verifies the syntax and the content of generated XMI
documents.},
  institution = {University of Bern},
  month = jun,
  type = {Informatikprojekt}}

@mastersthesis{Frei04a,
  author = {Michael Freidig},
  title = {Trace Based Object-Oriented Application Testing},
  year = {2004},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Frei04a.pdf},
  abstract = {Testing the behavior of object-oriented systems is
an important activity in the software development
and maintenance process. It validates an expected
behavior against an observed behavior. A behavioral
test is an assertion over a set of messages and
objects states that occur during the execution of a
system. Testing behavior is especially important for
object-oriented legacy systems where current
behavior is the only thing we can trust because a
specification is often missing. There are two
problems with testing behavior of object-oriented
systems. First there exists no common form to
express a hypothesis about an expected behavior and
to validate it against an actual program behavior.
This has the consequence that behavioral tests are
carried out manually by stepping through an
execution with a debugger and asserting behavioral
properties by visually inspecting states, arguments
and messages in the context of the execution history
of the system. Second it is a priori not clear what
kind of behavior should be tested and how it is
represented in terms of message passing and state
changes. This causes additional friction when
setting up tests for behaviors that occur over and
over again in different systems. In this thesis the
concept of trace-based object-oriented testing is
introduced. It supports the specification of an
expected behavior in the form of a formal expression
and an automatic test of whether an expected
behavior occurs in previously recorded execution
trace. A prototype tool TESTLOG on the basis of the
logic language SOUL is developed that supports
trace-based object-oriented testing in the form of a
logic query over a trace. As a validation of the
concept behavioral tests for different types of
behaviors that frequently occur in object-oriented
systems are designed and documented in the form of a
pattern language. The use of the computational power
of a logic language for behavioral testing solves
the problem of automatically identifying if an
expected behavior occurs in an execution trace. A
set of predefined logic rules serves as a language
to compose complex behavioral tests such that a
tester can take advantage of the intrinsic rule
abstraction facility of SOUL. In order to identify
recurring behavioral concepts we classify behavior
and try to abstract general purpose templates for
different types of behavior in order to obtain
reusable behavioral test artifacts.},
  month = jan,
  type = {Diploma thesis}}

@inproceedings{Freu14a,
  author = {Freudenberg, Bert and Ingalls, Dan H.H. and Felgentreff, Tim and Pape, Tobias and Hirschfeld, Robert},
  title = {SqueakJS: A Modern and Practical Smalltalk That Runs in Any Browser},
  booktitle = {Symposium on Dynamic Languages},
  year = {2014},
  keywords = {javascript, languages, performance, smalltalk, squeak, virtual machines, web browsers},
  series = {DLS '14}}

@book{Frie01a,
  author = {Daniel P. Friedman and Christopher T. Haynes and Mitchell Wand},
  title = {Essentials of programming languages (2nd ed.)},
  publisher = {Massachusetts Institute of Technology},
  year = {2001},
  address = {Cambridge, MA, USA},
  isbn = {0-262-06217-8}}

@book{Frie01b,
  author = {Friedman, Jerome and Hastie, Trevor and Tibshirani, Robert},
  title = {The elements of statistical learning},
  publisher = {Springer series in statistics New York, NY, USA},
  year = {2001}}

@book{Frie06a,
  title={Mastering regular expressions},
  author={Friedl, Jeffrey EF},
  year={2006},
  publisher={" O'Reilly Media, Inc."}
}

@inproceedings{Frie84a,
  author = {Daniel P. Friedman and Mitchell Wand},
  title = {Reification: Reflection without metaphysics},
  booktitle = {LFP '84: Proceedings of the 1984 ACM Symposium on LISP and functional programming},
  pages = {348--355},
  publisher = {ACM},
  year = {1984},
  doi = {10.1145/800055.802051},
  address = {New York, NY, USA},
  isbn = {0-89791-142-3},
  location = {Austin, Texas, United States}}

@techreport{Frie84b,
  author = {Daniel P. Friedman, Christopher T. Haynes and Eugene Kohlbecker},
  title = {Programming with Continuations},
  booktitle = {Program Transformation and Programming Environments},
  pages = {263--274},
  year = {1984},
  editor = {P. Pepper},
  institution = {Indiana University},
  month = nov,
  number = {151}}

@book{Frie87a,
  author = {Daniel Friedman and Mattias Felleisen},
  title = {The Little LISPer},
  publisher = {MIT Press},
  year = {1987},
  isbn = {0-262-56038-0}}

@inproceedings{Frie89a,
  author = {Gerhard Friedrich and Wolfgang H{\"o}llinger and Christian Stary and Markus Stumptner},
  title = {ObjView: {A} Task-Oriented, Graphics-Based Tools for Object Visualization and Arrangement},
  booktitle = {Proceedings ECOOP '89},
  pages = {299--310},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@book{Frie92a,
  author = {Daniel P. Friedman and Mitchell Wand and Christopher T. Haynes},
  title = {Essentials of Programming Languages},
  publisher = {McGraw-Hill},
  year = {1992},
  edition = {2nd}}

@article{Fris08a,
  author = {Frishman, Yaniv and Tal, Ayellet},
  title = {Online Dynamic Graph Drawing},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {14},
  pages = {727--740},
  publisher = {IEEE Computer Society},
  year = {2008},
  url = {http://dx.doi.org/10.1109/TVCG.2008.11},
  doi = {10.1109/TVCG.2008.11},
  address = {Los Alamitos, CA, USA},
  issn = {1077-2626},
  number = {4},
  posted-at = {2009-07-01 22:45:17},
  priority = {2}}

@inproceedings{Frit07a,
  author = {Fritz, Thomas and Murphy, Gail C. and Hill, Emily},
  title = {Does a programmer's activity indicate knowledge of code?},
  booktitle = {ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  pages = {341--350},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1287624.1287673},
  address = {New York, NY, USA},
  isbn = {978-1-59593-811-4},
  location = {Dubrovnik, Croatia}}

@inproceedings{Frit09a,
  author = {Fritz, T. and Murphy, G. C.},
  title = {Search, stitch, view: Easing information integration in an IDE},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {9--12},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070012},
  doi = {10.1109/SUITE.2009.5070012},
  abstract = {When building a software system, software developers
each contribute a flow of information that together
forms the system. As they work, developers
continuously consult various fragments of
information to answer their questions about the
system. In today's programming environments,
information is kept in disparate silos, such as
program code, bugs and change sets. However, to
answer the variety of questions a developer faces,
the interleaving of information from multiple
sources is typically needed. We have implemented a
prototype that allows for the composition of
information fragments from different silos. We also
interviewed three experienced developers to find out
about cases when they need to interleave
information.}}

@inproceedings{Frit10a,
  author = {Fritz, Thomas and Murphy, Gail C.},
  title = {Using information fragments to answer the questions developers ask},
  booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering},
  pages = {175--184},
  publisher = {ACM},
  year = {2010},
  doi = {10.1145/1806799.1806828},
  isbn = {978-1-60558-719-6},
  series = {ICSE'10}}

@inproceedings{Froe04a,
  author = {Jon Froehlich and Paul Dourish},
  title = {Unifying Artifacts and Activities in a Visual Tool for Distributed Software Development Teams},
  booktitle = {Proceedings of the 26th International Conference on Software Engineering},
  pages = {387--396},
  publisher = {IEEE Computer Society},
  year = {2004},
  address = {Washington, DC, USA},
  isbn = {0-7695-2163-0}}

@inproceedings{Frol92a,
  author = {Svend Fr\/olund},
  title = {Inheritance of Synchronization Constraints in Concurrent Object-Oriented Programming Languages},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {185--196},
  publisher = {Springer-Verlag},
  year = {1992},
  url = {ftp://biobio.cs.uiuc.edu/pub/papers/constraints},
  abstract = {We analyse how inheritance of synchronization
constraints should be supported. The conclusion of
our analysis is that inheritance of synchronization
constraints should take the form of incrementally
{\em more} restrictive constraints for derived
subclasses. Our conclusion is based on the view that
combinations of behavior in object-oriented
languages yield subclasses that {\em extend}
superclass behavior. We give a notation for
describing synchronization constraints. In our
notation, synchronization constraints can be
inherited and aggregated. We present a number of
examples that illustrate the fundamental concepts
captured by our notation. Synchronization
constraints are described as restrictions that apply
to invocation of methods. Application of
restrictions is {\em pattern-based}, which allows
the same restriction to apply to multiple methods
and multiple restrictions to apply to the same
method.},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Frol93a,
  author = {Svend Fr\/olund and Gul Agha},
  title = {A Language Framework for Multi-Object Coordination},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {346--360},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {We have developed language support for the
expression of multi-object coordination. In our
language, coordination patterns can be specified
abstractly, independent of the protocols needed to
implement them. Coordination patterns are expressed
in the form of constraints that restrict invocation
of a group of objects. Constraints are defined in
terms of the interface of the objects being invoked
rather than their internal representation.
Invocation constraints enforce properties, such as
temporal ordering and atomicity, that hold when
invoking objects in a group. A constraint can
permanently control access to a group of objects,
thereby expressing an inherent access restriction
associated with the group. Furthermore, a constraint
can temporarily enforce access restrictions during
the activity of individual clients. In that way,
constraints can express specialized access schemes
required by a group of clients.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@phdthesis{Frol94a,
  author = {Svend Fr\/olund},
  title = {Constraint-{Based} {Synchronization} of {Distributed} {Activities}},
  year = {1994},
  school = {University of Illinois at Urbana-Champaign}}

@incollection{Frol95a,
  author = {Svend Fr\/olund and Gul Agha},
  title = {Abstracting Interactions Based on Message Sets},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = {924},
  pages = {107--124},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {An important requirement of programming languages
for distributed systems is to provide abstractions
for coordination. A common type of coordination
requires reactivity in response to arbitrary
communication patterns. We have developed a
communication model in which concurrent objects can
be activated by sets of messages. Specifically, our
model allows direct and abstract expression of
common interaction patterns found in concurrent
systems. For example, the model captures multiple
clients that collectively invoke shared servers as a
single activation. Furthermore, it supports
definition of individual clients that concurrently
invoke multiple servers and wait for subsets of the
returned reply messages. Message sets are
dynamically defined using conjunctive and
disjunctive combinators that may depend on the
patterns of messages. The model subsumes existing
models for multi-RPC and multi-party synchronization
within a single, uniform activation framework.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@book{Frol96a,
  author = {Svend Fr\/olund},
  title = {Coordinating Distributed Objects --- An Actor-Based Approach to Synchronization},
  publisher = {MIT Press},
  year = {1996}}

@techreport{From91a,
  author = {Markus Fromherz},
  title = {Explore/{L} --- An Object-Oriented Logic Language},
  year = {1991},
  institution = {University of Zurich},
  month = jun,
  number = {91.06},
  type = {Report}}

@book{Fron97a,
  author = {John W. Fronckowiak},
  title = {Cobol For Dummies},
  publisher = {IDG Books},
  year = {1997}}

@article{Fros94a,
  author = {Stuart Frost},
  title = {Modelling for the RDBMS Legacy},
  journal = {Object Magazine},
  pages = {43--51},
  publisher = {SIGS Publications},
  year = {1994},
  month = sep}

@book{Frye04a,
  author = {Curtis Frye and Wayne S. Freeze and Felicia K. Buckingham},
  title = {Microsoft Office Excell 2003 Programming},
  publisher = {Microsoft Press},
  year = {2004}}

@misc{Fscript,
  title = {F-Script. Cocoa Developer's Best Friend},
  url = {http://www.fscript.org/},
  key = {Fscript},
  note = {http://www.fscript.org/}}

@article{Fugg98a,
  author = {Fuggetta, Alfonso and Picco, Gian Pietro and Vigna, Giovanni},
  title = {Understanding Code Mobility},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {24},
  pages = {342--361},
  publisher = {IEEE Press},
  year = {1998},
  url = {http://dx.doi.org/10.1109/32.685258},
  doi = {10.1109/32.685258},
  acmid = {278941},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  keywords = {Mobile code, mobile agent, distributed application, design paradigm.},
  month = may,
  number = {5},
  numpages = {20}}

@inproceedings{Fugi90a,
  author = {Mariagrazia Fugini and Barbara Pernici},
  title = {{RECAST}: a tool for reusing requirements},
  booktitle = {Proceedings CAiSE '90},
  volume = {436},
  publisher = {Springer-Verlag},
  year = {1990},
  series = {LNCS}}

@techreport{Fugi90b,
  author = {Mariagrazia Fugini and Stefano Faustle},
  title = {Similarity Queries for Class Retrieval from a Software Information Base},
  year = {1990},
  institution = {Politecnico di Milano},
  month = dec,
  number = {ITHACA.POLIMI.90.E3.7},
  type = {ITHACA report}}

@misc{Fugi91a,
  author = {Mariagrazia Fugini and M. Guggino and Barbara Pernici},
  title = {Reusing Requirements Through a Modeling and Composition Support Tool},
  year = {1991},
  address = {Trondheim},
  month = may,
  note = {Accepted to CAiSE '91}}

@article{Fugi92a,
  author = {Mariagrazia Fugini and Oscar Nierstrasz and Barbara Pernici},
  title = {Application Development Through Reuse: The {ITHACA} Tools Environment},
  journal = {SIGOIS Bulletin},
  volume = {13},
  pages = {38--47},
  year = {1992},
  url = {http://scg.unibe.ch/archive/osg/Fugi92aAppDevThroughReuse.pdf},
  doi = {10.1145/134376.134386},
  abstract = {This paper presents the architecture and basic
features of the Ithaca Application Development
Environment based on a Software Information System
for enhancing reusability of both software
components and artifacts about development of these
components. Object-oriented techniques are used in
the Environment at all levels of the development of
an application: requirement specification,
scripting, implementation through class refinement
and tailoring. In the Environment, it is tracked how
the various products of the development phases were
produced by providing tools for the Application
Engineer who is responsible for abstracting
application skeletons and development information
and storing these as Application Frames into a
Software Information Base. In particular, the paper
describes the Requirement Collection And
Specification Tool (RECAST) and the Visual Scripting
Tool (Vista) of the Ithaca Development Environment.},
  month = aug,
  number = {2}}

@article{Fuji84a,
  author = {L. Fujitani},
  title = {Laser Optical Disk: The Coming Revolution in On-Line Storage},
  journal = {CACM},
  volume = {27},
  pages = {546--554},
  year = {1984},
  month = jun,
  number = {6}}

@inproceedings{Fuku86a,
  author = {Koichi Fukunaga and Shin-ichi Hirose},
  title = {An Experience with a Prolog-based Object-Oriented Language},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {224--231},
  year = {1986},
  month = nov}

@inproceedings{Funk92a,
  author = {Funkhouser, Thomas A. and S{\'e}quin, Carlo H. and Teller, Seth J.},
  title = {Management of large amounts of data in interactive building walkthroughs},
  booktitle = {Proceedings of the 1992 symposium on Interactive 3D graphics},
  pages = {11--20},
  publisher = {ACM},
  year = {1992},
  url = {http://doi.acm.org/10.1145/147156.147158},
  doi = {10.1145/147156.147158},
  acmid = {147158},
  address = {New York, NY, USA},
  isbn = {0-89791-467-8},
  location = {Cambridge, Massachusetts, United States},
  numpages = {10},
  series = {I3D '92}}

@techreport{Funk95a,
  author = {Petra Funk and Anke Lewien and Gregor Snelting},
  title = {Algorithms for {Concept} {Lattice} {Decomposition} and their {Application}},
  year = {1995},
  institution = {Computer Science Dept., Technische Universitat Braunschweig},
  number = {95-09}}

@inproceedings{Furn86a,
  author = {George W. Furnas},
  title = {Generalized {Fisheye} {View}},
  booktitle = {Proceedings of CHI '86 (Conference on Human Factors in Computing Systems)},
  pages = {16--23},
  publisher = {ACM Press},
  year = {1986},
  location = {Massachusetts, USA}}

@inproceedings{Furr09a,
  author = {Furr, Michael and An, Jong-hoon and Foster, Jeffrey S.},
  title = {Profile-guided static typing for dynamic scripting languages},
  booktitle = {OOPSLA'09},
  pages = {283-300},
  year = {2009}}

@inproceedings{Furr09b,
  author = {Michael Furr and Jong-hoon (David) An and Jeffrey S. Foster and Michael Hicks},
  title = {Static Type Inference for {R}uby},
  booktitle = {Symposium on {A}pplied {C}omputing ({SAC}'09)},
  year = {2009}}

@article{Furu82a,
  author = {R. Furuta and J. Scofield and Alan Shaw},
  title = {Document Formatting Systems: Survey, Concepts and Issues},
  journal = {ACM Computing Surveys},
  volume = {14},
  pages = {417--472},
  year = {1982},
  month = sep,
  number = {3}}

@inproceedings{Fusa98a,
  author = {P. Fusaro and M. Tortorella and G. Visaggio},
  title = {REP --- chaRacterizing and Exploting Process Components: Results of Experimentation},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {20--30},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@book{Futa96a,
  title = {Object Technologies for Advanced Software},
  volume = {1049},
  publisher = {Springer-Verlag},
  year = {1996},
  editor = {Kokichi Futatsugi and Satoshi Matsuoka},
  isbn = {3-540-60954-7},
  series = {LNCS}}

@article{Futa99a,
  author = {Yoshihiko Futamura},
  title = {Partial Evaluation of Computation Process: An Approach to a Compiler-Compiler},
  journal = {Higher Order Symbol. Comput.},
  volume = {12},
  pages = {381--391},
  publisher = {Kluwer Academic Publishers},
  year = {1999},
  doi = {10.1023/A:1010095604496},
  address = {Hingham, MA, USA},
  issn = {1388-3690},
  number = {4}}

@article{Fyoc97a,
  author = {Daniel E. Fyock},
  title = {Using Visualization to Maintain Large Computer Systems},
  journal = {IEEE Computer Graphics and Applications},
  volume = {17},
  pages = {73--75},
  year = {1997},
  number = {14}}

@inproceedings{Gabe10a,
  author = {Gabel, Mark and Su, Zhendong},
  title = {A study of the uniqueness of source code},
  booktitle = {Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering},
  pages = {147--156},
  year = {2010},
  organization = {ACM}}

@inproceedings{Gabe92a,
  author = {Bent Gabelgaard},
  title = {Using Object-Oriented Programming Techniques for Implementing {ISDN} Supplementary Services},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {213--232},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Gabr06a,
  author = {Richard P. Gabriel and Ron Goldman},
  title = {Conscientious software},
  booktitle = {Proceedings OOPSLA 2006, ACM SIGPLAN Notices},
  pages = {433--450},
  year = {2006},
  month = dec}

@article{Gabr88a,
  author = {Richard P. Gabriel},
  title = {The why of {Y}},
  journal = {SIGPLAN Lisp Pointers},
  volume = {2},
  pages = {15--25},
  publisher = {ACM},
  year = {1988},
  url = {http://www.dreamsongs.com/Files/WhyOfY.pdf},
  doi = {10.1145/1317250.1317252},
  address = {New York, NY, USA},
  issn = {1045-3563},
  number = {2}}

@book{Gabr96a,
  author = {Richard P. Gabriel},
  title = {Patterns of Software},
  publisher = {Oxford University Press},
  year = {1996},
  url = {http://www.dreamsongs.com/Books.html http://www.dreamsongs.com/NewFiles/PatternsOfSoftware.pdf}}

@inproceedings{Gace95a,
  author = {Cristina Gacek and Ahmed Abd-Allah and Bradford Clark and Barry Boehm},
  title = {{On} the {Definition} of {Software} {System} {Architecture}},
  booktitle = {ICSE 17 Software Architecture Workshop},
  year = {1995},
  month = apr}

@techreport{Gael03a,
  author = {Markus Gaelli},
  title = {Test composition with example objects and example methods},
  year = {2003},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Gael03aTestComposition.pdf},
  abstract = {While assertions of Design by Contract from Eiffel
found its way into the language-definitions of
Python and of Java SDK 1.4, current object-oriented
languages do not make the concepts of unit-testing
explicit in their definitions or meta-models. Not
having support of unit-testing in a programming
language makes it harder to compose and re-compose
test-scenarios and tests. We propose, that an ob
ject-oriented language should include explicit
concepts for example ob jects, example methods and
instance-specific assertions. This concepts ease the
composition of complex test-scenarios, they help to
refactor the program with the tests and also to keep
the duration of the tests as low and the coverage of
the tests as high as possible.},
  address = {Universit\"at Bern, Switzerland},
  classification = {D.2.6 Programming Environments D.2.10 Design D.1.5 Object-oriented Programming; D.3.3 Language Constructs and Features},
  institution = {Institut f\"ur Informatik},
  month = may,
  number = {IAM-03-009},
  type = {Technical Report}}

@techreport{Gael03b,
  author = {Markus Gaelli and Oscar Nierstrasz and Roel Wuyts},
  title = {Partial ordering tests by coverage sets},
  year = {2003},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Gael03bPartialOrderingTestsByCoverageSets.pdf},
  abstract = {A single software fault may cause several tests to
break, if they cover the same methods. The coverage
sets of tests may not just overlap, but include one
another. This information could be of great use to
developers who would like to focus on the most
specific test that concerns a given fault.
Unfortunately, existing unit testing tools neither
gather nor exploit this information. We have
developed a simple approach that analyses a set of
test suites, and infers the partial order
corresponding to inclusion hierarchy of the coverage
sets. When several tests in an inclusion chain
break, we can guide the developer to the most
specific test in the chain. Our first experiments
with three case studies suggest that most unit tests
for typical applications are, in fact, comparable to
other tests, and can therefore be partially ordered.
Furthermore, we show that this partial order is
semantically meaningful, since faults that cause a
test to break will, in nearly all cases cause less
specific tests too break too.},
  address = {Universit\"at Bern, Switzerland},
  classification = {D.2.6 Programming Environments D.2.10 Design D.1.5 Object-oriented Programming; D.3.3 Language Constructs and Features},
  institution = {Institut f\"ur Informatik},
  month = sep,
  note = {Technical Report},
  number = {IAM-03-013}}

@inproceedings{Gael03c,
  author = {Markus Gaelli},
  title = {Test composition with example objects and example methods.},
  booktitle = {Proceedings of the ECOOP '03 Workshop on Object-oriented Language Engineering for the Post-Java Era},
  volume = {3013},
  pages = {143--153},
  year = {2003},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Gael03aTestComposition.pdf},
  doi = {10.1007/b98806},
  abstract = {While assertions of Design by Contract from Eiffel
found its way into the language-definitions of
Python and of Java SDK 1.4, current object-oriented
languages do not make the concepts of unit-testing
explicit in their definitions or meta-models. Not
having support of unit-testing in a programming
language makes it harder to compose and re-compose
test-scenarios and tests. We propose, that an
object-oriented language should include explicit
concepts for example objects, example methods and
instance-specific assertions. This concepts ease the
composition of complex test-scenarios, they help to
refactor the program with the tests and also to keep
the duration of the tests as low and the coverage of
the tests as high as possible.},
  isbn = {978-3-540-22405-1},
  month = jul,
  note = {Abstract only --- full version availabe as technical report IAM-03-009},
  series = {LNCS}}

@inproceedings{Gael04a,
  author = {Markus Gaelli and Michele Lanza and Oscar Nierstrasz and Roel Wuyts},
  title = {Ordering Broken Unit Tests for Focused Debugging},
  booktitle = {20th International Conference on Software Maintenance ({ICSM} 2004)},
  pages = {114--123},
  year = {2004},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Gael04aOrderingBrokenUnitTestsForFocusedDebugging.pdf},
  doi = {10.1109/ICSM.2004.1357796},
  abstract = {Current unit test frameworks present broken unit
tests in an arbitrary order, but developers want to
focus on the most specific ones first. We therefore
inferred a partial order of unit tests corresponding
to a coverage hierarchy of their sets of covered
method signatures: When several unit tests in this
coverage hierarchy break, we can guide the developer
to the test calling the smallest number of methods.
Our experiments with four case studies indicate that
this partial order is semantically meaningful, since
faults that cause a unit test to break generally
cause less specific unit tests to break as well.},
  cvs = {Eg{ICSM}2004}}

@inproceedings{Gael04d,
  author = {Markus Gaelli},
  title = {{PhD}-Symposium: Correlating Unit Tests and Methods under Test},
  booktitle = {5th International Conference on Extreme Programming and Agile Processes in Software Engineering (XP 2004)},
  volume = {3092},
  pages = {317},
  year = {2004},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Gael04dCorrelatingUnitTestsAndMethodsUnderTest.pdf},
  doi = {10.1007/b98150},
  isbn = {978-3-540-22137-1},
  month = jun,
  series = {LNCS}}

@inproceedings{Gael05a,
  author = {Markus Gaelli and Michele Lanza and Oscar Nierstrasz},
  title = {Towards a Taxonomy of {SUnit} Tests},
  booktitle = {Proceedings of 13th International Smalltalk Conference (ISC'03)},
  year = {2005},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Gael05aTowardsATaxonomyOfUnitTests.pdf http://www.esug.org/conferences/thirteenthinternationalconference2005/researchconference/acceptedpapers/},
  abstract = {Not all unit tests are alike. Some tests are simple
one-liners, while others contain a battery of
assertions. Certain tests focus on a single method,
while others test interactions between methods.
There are even tests that do not contain assertions
at all. This can make it difficult for a developer
to understand which methods are tested by which
tests, to what degree they are tested, and what to
take into account while refactoring. We have
manually analyzed the test base of a large existing
object-oriented system in order to derive a first
taxonomy of unit tests. We have then developed some
simple tools to semi-automatically categorize tests
according to this taxonomy, and applied it to two
case studies. Beside explaining our taxonomy, we
report on our initial results using it, namely that
a majority of unit tests focus on single methods and
that our lightweight automatic categorization could
already classify more than 50\% of these single
method commands.},
  cvs = {EgESUG2005},
  month = sep}

@inproceedings{Gael05b,
  author = {Markus Gaelli and Orla Greevy and Oscar Nierstrasz},
  title = {Composing Unit Tests},
  booktitle = {Proceedings of SPLiT 2005 (2nd International Workshop on Software Product Line Testing)},
  year = {2005},
  misc = {gaelli},
  abstract = {If we were to apply the testing techniques of
object-oriented systems prescribed by the XUnit
framework to a car factory, the result would be an
inefficient process: A tire would be created,
quality assured and then thrown away, only to be
recreated later to test the functionality of the
whole car. XUnit makes it difficult to reuse
intermediate results of low level unit tests. As a
consequence a higher level unit test is forced to
recreate test scenarios which were already created
by lower level unit tests. This duplicated testing
effort is time-consuming both for setting up new
scenarios and for running the tests. To address this
problem we suggest a semi-automatic approach to
compose tests. First we describe how we can detect
candidates of composable test cases by partially
ordering their sets of covered method signatures,
then we present techniques to refactor unit tests
accordingly.},
  cvs = {EgSplit2005},
  month = sep}

@inproceedings{Gael06a,
  author = {Markus Gaelli and Oscar Nierstrasz and Serge Stinckwich},
  title = {Idioms for Composing Games with {Etoys}},
  booktitle = {Proceedings of C5 2006 (The Fourth International Conference on Creating, Connecting and Collaborating through Computing)},
  pages = {222--321},
  year = {2006},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Gael06aC5.pdf},
  doi = {10.1109/C5.2006.20},
  abstract = {Creating ones own games has been the main motiva-
tion for many people to learn programming. But the
barrier to learn a general purpose programming
language is very high, especially if some positive
results can only be expected after having manually
written more than 100 lines of code. With this paper
we first motivate potential users by showing that
one can create classic board- and arcade games like
Lights Out, TicTacToe, or Pacman within the playful
and constructivist visual learning environment Etoys
dragging together only a few lines of code. Then we
present recurring idioms which helped to develop
these games with only a few lines of code.},
  cvs = {EgGamesCCC2005},
  month = jan}

@phdthesis{Gael06b,
  author = {Markus Gaelli},
  title = {Modeling Examples to Test and Understand Software},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/gaelli-phd.pdf},
  abstract = {One of the oldest techniques to explain abstract
concepts is to provide concrete examples. By
explaining an abstract concept with a concrete
example people make sure that the concept is
understood and remembered. Examples in software can
be used both to test the software and to illustrate
its functionality. Object-oriented programs are
built around the concepts of classes, methods and
variables, where methods are the atoms of the
functionality. But the meta-models of
object-oriented languages do not allow developers to
associate runnable and composable examples with
these concepts and particularly not with methods.
Unit tests on the other hand, assure the quality of
the units under test and document them. Not being
integrated into the language, unit tests are not
linked explicitly to their units under test which
makes it unnecessarily dif ficult to use them for
documenting, typing and debugging software. In
addition they are not composable making it hard to
develop higher level test scenarios in parallel with
higher level objects. In this thesis we analyze unit
tests to learn about implicit dependencies among
tests and from tests to the methods under test. We
develop a technique to partially order unit tests in
terms of their covered methods, which reveals
possible redundancies due to the lack of
composability. We show how partial orders can be
used to debug and to comprehend software. We then
develop a taxonomy based on several case studies
revealing that a high fraction of unit tests already
implicitly focuses on single methods. We show that
the rest of the tests can be decomposed into
commands focusing on single methods. We build a
meta-model based on our findings of analyzing test
interdependencies which establishes how tests can be
explicitly linked to their method under test and how
they can be composed to form higher-level test
scenarios. We explain how the problems of missing
links between tests and units under test are solved
using our meta-model. Furthermore, we implemented
the meta-model and a first user interface on top of
it to give first evidence of how our model supports
the developer.},
  cvs = {MGaelliPhD},
  month = nov}

@inproceedings{Gael07a,
  author = {Markus Gaelli and Rafael Wampfler and Oscar Nierstrasz},
  title = {Composing Tests from Examples},
  booktitle = {Journal of Object Technology, Special Issue. Proceedings of TOOLS Europe 2007},
  volume = {6/9},
  pages = {71--86},
  year = {2007},
  abstract = {Understanding and maintaining complex software
systems is a difficult task. In principle, tests can
be a good source of information about how the system
works. Unfortunately, tests are frequently
unstructured and disconnected from each other and
from their units under test. We propose a new
approach to organizing unit tests in which tests
produce examples of their units under tests which
also can be reused for composing higher-level tests.
The approach is based on the Eg meta-model, which
classifies tests according to their granularity and
their goals. We have developed the EgBrowser, an
experimental tool for specifying tests that conform
to the Eg metamodel while keeping track of the
connection between tests themselves and their units
under test. Initial usability studies suggest that
the approach is both easy to learn and more
efficient than the programmatic approach to
developing tests.},
  cached = {http://scg.unibe.ch/archive/papers/Gael07aComposingTests.pdf},
  medium = {2},
  month = oct}

@mastersthesis{Gael96,
  author = {Markus Gaelli},
  title = {Integration von {Neuronalen} {Netzen} in {Mathematische} {Prozessmodelle}: Dolphin},
  year = {1996},
  school = {Department of Computer Science, FAU-University of Erlangen-N{\"u}rnberg},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Gael96dolphin.pdf},
  type = {diploma thesis}}

@article{Gaja98a,
  author = {Joan Gajadhar},
  title = {Issues in Plagiarism for the New Millennium: An Assessment Odyssey},
  journal = {Ultibase Online Articles},
  year = {1998},
  url = {http://ultibase.rmit.edu.au/Articles/dec98/gajad1.htm},
  institution = {The open Polytechnic of New Zealand}}

@inproceedings{Gal01a,
  author = {Andreas Gal and Wolfgang Schr\"{o}der-Preikschat and Olaf Spinczyk},
  title = {AspectC++: Language Proposal and Prototype Implementation},
  booktitle = {Workshop on Advanced Separation of Concerns in Object-Oriented Systems --- OOPSLA 2001},
  year = {2001},
  month = oct}

@inproceedings{Gal06a,
  author = {Gal, Andreas and Probst, Christian W. and Franz, Michael},
  title = {HotpathVM: {A}n {E}ffective {JIT} {C}ompiler for {R}esource-constrained {D}evices},
  booktitle = {Virtual Execution Environments},
  year = {2006},
  keywords = {dynamic compilation, embedded and resource-constrained systems, mixed-mode interpretive compiled systems, software trace scheduling, static single assignment form, virtual machines},
  series = {VEE '06}}

@inproceedings{Gal09a,
  author = {Gal, Andreas and Eich, Brendan and Shaver, Mike and Anderson, David and Mandelin, David and Haghighat, Mohammad R. and Kaplan, Blake and Hoare, Graydon and Zbarsky, Boris and Orendorff, Jason and Ruderman, Jesse and Smith, Edwin W. and Reitmaier, Rick and Bebenita, Michael and Chang, Mason and Franz, Michael},
  title = {Trace-based {J}ust-in-time {T}ype {S}pecialization for {D}ynamic {L}anguages},
  booktitle = {Programming Language Design and Implementation},
  year = {2009},
  keywords = {dynamically typed languages, trace-based compilation},
  series = {PLDI '09}}

@inproceedings{Gala98a,
  author = {Galal Hasan Galal},
  title = {A Note on Object-Oriented Software Architecting},
  booktitle = {ECOOP '98 Workshop Reader},
  volume = {1543},
  pages = {46--47},
  year = {1998},
  series = {LNCS}}

@inproceedings{Gale91a,
  author = {William A. Gale and Kenneth W. Church},
  title = {Identifying Word Correspondences in Parallel Texts},
  booktitle = {Proceedings of the Fourth DARPA Workshop on Speech and Natural Language},
  pages = {152--157},
  publisher = {Morgan Kaufman},
  year = {1991},
  address = {Pacific Grove, CA},
  month = feb}

@misc{Galicia,
  title = {Ga{Licia}: Galois lattice interactive constructor},
  url = {http://www.iro.umontreal.ca/~galicia},
  key = {Galicia},
  note = {http://www.iro.umontreal.ca/~galicia}}

@inproceedings{Gall03a,
  author = {Gall, Harald and Jazayeri, Mehdi and Krajewski, Jacek},
  title = {CVS release history data for detecting logical couplings},
  booktitle = {IWPSE '03: Proceedings of the 6th International Workshop on Principles of Software Evolution},
  pages = {13--23},
  publisher = {IEEE Computer Society},
  year = {2003},
  isbn = {0-7695-1903-2}}

@inproceedings{Gall03b,
  author = {Keith Gallagher and Lucas Layman},
  title = {Are Decomposition Slices Clones?},
  booktitle = {Proc. of the 11th International IEEE Workshop on Program Comprehension (IWPC'03)},
  pages = {285--286},
  publisher = {IEEE},
  year = {2003},
  month = may}

@inproceedings{Gall03c,
  author = {Keith Gallagher and David Binkley},
  title = {An Empirical Study of Computation Equivalence as Determined by Decomposition Slice Equivalence},
  booktitle = {Proceedings 10th Working Conference on Reverse Engineering ({WCRE}'03)},
  pages = {316--322},
  year = {2003},
  address = {Victoria, B.C., Canada},
  month = nov,
  organization = {IEEE}}

@inproceedings{Gall05a,
  author = {Keith Gallagher and Andrew Hatch and Malcolm Munro},
  title = {A Framework for Software Architecture Visualization Assessment},
  booktitle = {VISSOFT},
  pages = {76--81},
  publisher = {IEEE CS},
  year = {2005},
  month = sep}

@inproceedings{Gall08a,
  author = {Galloti, S. and Mirandola, R. and Tamburrelli, G.},
  title = {Quality prediction of service compositions through probabilistic model checking},
  booktitle = {Proceedings of the 4th International Conference on Quality of Software-Architectures},
  pages = {119-134},
  publisher = {Springer-Verlag},
  year = {2008}}

@article{Gall08b,
  author = {Gallagher, Keith and Hatch, Andrew and Munro, Malcolm},
  title = {Software architecture visualization: An evaluation framework and its application},
  journal = {IEEE Transactions on Software Engineering},
  volume = {34},
  pages = {260--270},
  publisher = {IEEE},
  year = {2008},
  number = {2}}

@article{Gall09,
  author = {Gall, H C and Fluri, B and Pinzger, M},
  title = {Change analysis with evolizer and ChangeDistiller},
  journal = {IEEE Software},
  volume = {26},
  pages = {26-33},
  publisher = {IEEE},
  year = {2009},
  issn = {0740-7459},
  month = {feb},
  number = 1}

@inproceedings{Gall09a,
  author = {Gallardo-Valencia, R. E. and Elliott Sim, S.},
  title = {Internet-Scale Code Search},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {49--52},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070022},
  doi = {10.1109/SUITE.2009.5070022},
  abstract = {Internet-scale code search is the problem of finding
source on the Internet. Developers are typically
searching for code to reuse as-is on a project or as
a reference example. This phenomenon has emerged due
to the increasing availability and quality of open
source and resources on the Web. Solutions to this
problem will involve more than the simple
application of information retrieval techniques or a
scaling-up of tools for code search. Instead, new,
purpose-built solutions are needed that draw on
results from these areas, as well as program
comprehension and software reuse.}}

@article{Gall87a,
  author = {F. Gallo and R. Minot and I. Thomas},
  title = {The Object Management System of {PCTE} as a Software Engineering Database Management System},
  journal = {ACM SIGPLAN Notices},
  volume = {22},
  pages = {12--15},
  year = {1987},
  month = jan,
  number = {1}}

@article{Gall91a,
  author = {Keith Brian Gallagher and James R. Lyle},
  title = {Using {Program} {Slicing} in {Software} {Maintenance}},
  journal = {Transactions on Software Engineering},
  volume = {17},
  pages = {751--761},
  year = {1991},
  month = aug,
  number = {18},
  organization = {IEEE}}

@inproceedings{Gall93a,
  author = {E. Gallesio},
  title = {Embedding a Scheme Interpreter in the Tk Toolkit},
  booktitle = {First Tcl/Tk Workshop},
  pages = {103--109},
  year = {1993},
  month = jun}

@inproceedings{Gall94a,
  author = {Erick Gallesio},
  title = {STklos: A Scheme Object Oriented System dealing with the Tk Toolkit},
  booktitle = {Xhibition 94, San Jose, CA},
  pages = {63--71},
  year = {1994},
  editor = {ICS},
  key = {Gallesio94},
  month = jun}

@proceedings{Gall95a,
  title = {Proceedings of ESEC '95},
  volume = {989},
  year = {1995},
  editor = {H. Gall and R. Klosch and R. Mittermeir \&T Object-Oriented Re-Architecturing},
  series = {LNCS}}

@inproceedings{Gall95b,
  author = {Harald Gall and Ren\'e; Kl\"osch and Roland Mittermeir},
  title = {Object-Oriented Re-Architecturing},
  booktitle = {Proceedings of the 5th European Software Engineering Conference},
  pages = {499--519},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {London, UK},
  isbn = {3-540-60406-5}}

@inproceedings{Gall96a,
  author = {Erick Gall\'esio},
  title = {Designing a Meta Protocol to Wrap a Standard Graphical Toolkit},
  booktitle = {Proceedings of ISOTAS '96, LNCS 1049},
  pages = {135--156},
  year = {1996},
  month = mar,
  organization = {JSSST-JAIST}}

@article{Gall96b,
  author = {Keith B. Gallagher},
  title = {Visual Impact Analysis},
  journal = {Software Maintenance, IEEE International Conference on},
  volume = {0},
  pages = {52},
  publisher = {IEEE Computer Society},
  year = {1996},
  doi = {10.1109/ICSM.1996.564988},
  address = {Los Alamitos, CA, USA},
  issn = {1063-6773}}

@inproceedings{Gall97a,
  author = {Harald Gall and Mehdi Jazayeri and Ren{\'e} Kl{\"o}sch and Georg Trausmuth},
  title = {Software Evolution Observations Based on Product Release History},
  booktitle = {Proceedings International Conference on Software Maintenance ({ICSM}'97)},
  pages = {160--166},
  publisher = {IEEE Computer Society Press},
  year = {1997},
  url = {http://www.infosys.tuwien.ac.at/Cafe/doc/ICSM97.pdf},
  doi = {10.1109/ICSM.1997.624242},
  address = {Los Alamitos CA}}

@inproceedings{Gall98a,
  author = {Harald Gall and Karin Hajek and Mehdi Jazayeri},
  title = {Detection of Logical Coupling Based on Product Release History},
  booktitle = {Proceedings International Conference on Software Maintenance ({ICSM} '98)},
  pages = {190--198},
  publisher = {IEEE Computer Society Press},
  year = {1998},
  address = {Los Alamitos CA}}

@inproceedings{Gall99a,
  author = {Harald Gall and Johannes Weidl},
  title = {Object-Model Driven Abstraction-to-Code Mapping},
  booktitle = {Proceedings of the 2nd Workshop on Object-Oriented Reengineering (WOOR 1999)},
  publisher = {Technical University of Vienna --- Technical Report TUV-1841-99-13},
  year = {1999}}

@book{Gamm03a,
  author = {Erich Gamma and Kent Beck},
  title = {Contributing to Eclipse},
  publisher = {Addison Wesley},
  year = {2003},
  amount = {1},
  isbn = {0-321-20575-8}}

@article{Gamm15a,
  author = {Gammie, Peter and Hosking, Antony and Engelhardt, Kai},
  title = {Relaxing Safely: Verified On-the-Fly Garbage Collection for x86-TSO},
  journal = {ACM SIGPLAN Notices},
  volume = {50},
  pages = {99-109},
  year = {2015},
  doi = {10.1145/2813885.2738006},
  month = {jun}}

@inproceedings{Gamm89a,
  author = {Erich Gamma and Andr\'e Weinand and Rudolph Marty},
  title = {Integration of a Programming Environment into {ET}++ --- {A} Case Study},
  booktitle = {Proceedings ECOOP '89},
  pages = {283--297},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Gamm93b,
  author = {Erich Gamma and Richard Helm and John Vlissides and Ralph E. Johnson},
  title = {Design Patterns: Abstraction and Reuse of Object-Oriented Design},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {406--431},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {ftp://st.cs.uiuc.edu/pub/papers/patterns/ecoop93-patterns.ps},
  abstract = {We propose design patterns as a new mechanism for
expressing object-oriented design experience. Design
patterns identify, name, and abstract common themes
in object-oriented design. They capture the intent
behind a design by identifying objects, their
collaborations, and the distribution of
responsibilities. Design patterns play many roles in
the object-oriented development process: they
provide a common vocabulary for design, they reduce
system complexity by naming and defining
abstractions, they constitute a base of experience
for building reusable software, and they act as
building blocks from which more complex designs can
be built. Design patterns can be considered reusable
micro-architectures that contribute to an overall
system architecture. We describe how to express and
organize design patterns and introduce a catalog of
design patterns. We also describe our experience in
applying design patterns to the design of
object-oriented systems.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@book{Gamm95a,
  author = {Erich Gamma and Richard Helm and Ralph Johnson and John Vlissides},
  title = {Design Patterns: Elements of Reusable Object-Oriented Software},
  publisher = {Addison-Wesley},
  year = {1995}}

@incollection{Gamm97a,
  author = {Erich Gamma},
  title = {Extension object},
  booktitle = {Pattern languages of program design 3},
  pages = {79--88},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {1997},
  address = {Boston, MA, USA},
  isbn = {0-201-31011-2}}

@incollection{Gand91a,
  author = {M.A Gandrieu and B. Durin},
  title = {Identification and Classification of Reusable Elements in Space Domain},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@inproceedings{Gane16,
  author = {Ganesan, A. Sivagnana and Chithralekha, T.},
  title = {A Survey on Survey of Migration of Legacy Systems},
  booktitle = {Proceedings of the International Conference on Informatics and Analytics},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {https://doi.org/10.1145/2980258.2980409},
  doi = {10.1145/2980258.2980409},
  abstract = {Legacy systems are mission critical complex systems which are hard to maintain owing to shortage of skill sets and monolithic code architecture with tightly coupled tiers, all of which are indication of obsoleteness of the system technology. Thus, they have to be migrated to the latest technology(ies). Migration is an offspring research in Software Engineering which is almost three decades old research and numerous publications have emerged in many topics in the migration domain with focus areas of code migration, architecture migration, case study on migration and effort estimation on migration. In addition, various survey works surveying different aspects of migration have also emerged. This paper provides a survey of these survey works in order to provide a consolidation of these survey works. As an outcome of the survey on survey of migration, a road map of migration evolution from the early stages to the recent works on migration comprising of significant milestones in migration research has been presented in this work.},
  address = {New York, NY, USA},
  articleno = {72},
  isbn = {9781450347563},
  keywords = {Legacy Systems, Migration, SOA, Software Evolution},
  location = {Pondicherry, India},
  numpages = {10},
  series = {ICIA-16}}

@inproceedings{Gang89a,
  author = {Dipayan Gangopadhyay and A. Richard Helm},
  title = {A Domain Model Driven Approach for Representing and Implementing Knowledge about Reusable Object-Oriented Software Classes},
  booktitle = {IBM PADT ITL Conference},
  year = {1989},
  address = {Dallas, TX},
  month = jul}

@techreport{Gang89b,
  author = {Dipayan Gangopadhyay and A. Richard Helm},
  title = {A Domain Model Driven Approach for the Reuse of Classes from Domain Specific Object-Oriented Class Repositories},
  year = {1989},
  institution = {IBM Research Division, Yorktown Heights},
  month = mar,
  number = {64975},
  type = {RC 14510}}

@inproceedings{Gang93a,
  author = {Dipayan Gangopadhyay and Subrata Mitra},
  title = {ObjChart: Tangible Specification of Reactive Object Behavior},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {432--457},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {ObjChart is a new visual formalism to specify
objects and their reactive behavior. A system is
specified as a collection of asynchronously
communicating objects arranged in a part-of
hierarchy, where the reactive behavior of each
object is described by a finite state machine. Value
propagation is effected using functional invariants
over attributes of objects. A compositional
semantics for concurrent object behavior is sketched
using the equational framework of Misra. In contrast
to other Object Oriented modeling notations,
ObjChart uses object decomposition as the single
refinement paradigm, maintains orthogonality between
control flow and value propagation, introduces
Sequence object which embodies structural induction,
and allows tracing causality chains in time linear
in the size of the system. ObjChart's minimality of
notations and precise semantics make ObjChart models
of systems coherent and executable.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Gann98a,
  author = {G.C Gannod and G. Sudindranath and M.E. Fagnani and B.H.C. Cheng},
  title = {PACKRAT: A Software Reengineering Case Study},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {125--135},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@article{Gans00a,
  author = {Gansner and North},
  title = {An Open Graph Visualization System and its Applications to Software Engineering},
  journal = {Software Practice Experience.},
  volume = 30,
  pages = {1203--1233},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2000},
  doi = {10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.3.CO;2-E},
  number = 11}

@book{Gant99a,
  author = {Bernhard Ganter and Rudolf Wille},
  title = {Formal Concept Analysis: Mathematical Foundations},
  publisher = {Springer Verlag},
  year = {1999}}

@inproceedings{Ganz82a,
  author = {H. Ganzinger and R. Giegerich and U. M{\"o}ncke and Robert Wilhelm},
  title = {A Truly Generative Semantics-Directed Compiler Generator},
  booktitle = {ACM SIGPLAN Notices, Proceedings 1982 Symposium on Compiler Construction},
  volume = {17},
  pages = {172--184},
  year = {1982},
  month = jun}

@inproceedings{Garb94a,
  author = {Beno\^it Garbinato and Rachid Guerraoui and Karim R. Mazouni},
  title = {Distributed Programming in {GARF}},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {225--239},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {GARF is an object-oriented programming environment
aimed to support the design of reliable distributed
applications. Its computational model is based on
two programming levels: the functional level and the
behavioral level. At the functional level, software
functionalities are described using passive objects,
named data objects, in a centralized, volatile, and
failure free environment. At the behavioral level,
data objects are dynamically bound to encapsulators
and mailers which support distribution, concurrency,
persistence and fault tolerance. Encapsulators wrap
data objects by controlling how the latter send and
receive messages, while mailers perform
communications between encapsulators. This paper
describes how the GARF computational model enables
to build flexible and highly modular abstractions
for the design of reliable distributed
applications.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@book{Garb95a,
  author = {Jeff Garbus and David Salomon and Brian Tretter},
  title = {{SYBASE} {DBA}: Survival Guide},
  publisher = {Sams Publishing},
  year = {1995},
  isbn = {0-672-30651-4}}

@inproceedings{Garb96a,
  author = {Beno\^it Garbinato and Pascal Felber and Rachid Guerraoui},
  title = {Protocol Classes for Designing Reliable Distributed Environments},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {316--343},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Garc17a,
  author = {Garcia-Banuelos, Luciano and Ponomarev, Alexander and Dumas, Marlon and Weber, Ingo},
  title = {Optimized Execution of Business Processes on Blockchain},
  booktitle = {International Conference on Business Process Management (BPMN'17)},
  year = {2017}}

@article{Garce17b,
  author = {Garc\'es, Kelly and Casallas, Rubby and \'Alvarez, Camilo and Sandoval, Edgar and Salamanca, Alejandro and Viera, Fredy and Melo, Fabi\'an and Soto, Juan Manuel},
  title = {White-box modernization of legacy applications: {The} oracle forms case study},
  journal = {Computer Standards \& Interfaces},
  pages = {110--122},
  year = {2017},
  doi = {https://doi.org/10.1016/j.csi.2017.10.004},
  abstract = {Software modernization consists of transforming legacy applications into modern technologies, mainly to minimize maintenance costs. This transformation often produces a new application that is a poor copy of the legacy due to the degradation of quality attributes, for example. This paper presents a white-box transformation approach that changes the application architecture and the technological stack without losing business value and quality attributes. This approach obtains a technology agnostic model from the original sources, such a model facilitates the architecture configuration before performing the actual transformation of the application into the new technology. The architecture for the new application can be configured considering aspects such as data access, quality attributes, and process. We evaluate our approach through an industrial case study, the gist of which is the transformation of Oracle Forms applications -where the presentation layer is highly coupled to the data access layer -to multitiered applications.},
  keywords = {Java, .Net, Configuration, Industrial case study, Model-driven engineering (MDE), Oracle forms, Quality attributes},
  month = oct}

@inproceedings{Gard06a,
  author = {Gardikiotis, Spyridon K and Malevris, Nicos},
  title = {DaSIAn: A Tool for Estimating the Impact of Database Schema Modifications on WEB Applications},
  booktitle = {Computer Systems and Applications, 2006. IEEE International Conference on.},
  pages = {188--195},
  publisher = {IEEE},
  year = {2006}}

@article{Gard09a,
  author = {Gardikiotis, Spyridon K. and Malevris, Nicos},
  title = {A two-folded impact analysis of schema changes on database applications},
  journal = {International Journal of Automation and Computing},
  volume = {6},
  pages = {109--123},
  year = {2009},
  keywords = {printed},
  number = {2}}

@misc{Gardner,
  author = {Cees de Groot},
  title = {{Gardner}, a {Seaside} {Wiki}},
  url = {http://map.squeak.org/package/6805c4ca-6a33-4396-801a-b7ea1c3e3567},
  key = {Gardner},
  note = {http://map.squeak.org/package/6805c4ca-6a33-4396-801a-b7ea1c3e3567}}

@book{Gare79a,
  author = {M.R. Garey and D.S. Johnson},
  title = {Computers and Intractability: A Guide to the Theory of {NP}-completeness},
  publisher = {Freeman},
  year = {1979},
  address = {San Francisco}}

@book{Garf93a,
  author = {Simson L. Garfinkel and Michael K. Mahoney},
  title = {NeXTSTEP Programming Step One: Object-Oriented Applications},
  publisher = {Springer-Verlag},
  year = {1993},
  isbn = {3-540-97884-4}}

@inproceedings{Garg01a,
  author = {Juan Garguilio and Spiros Mancoridis},
  title = {Gadget: a Tool for Extracting the Dynamic Structure of {Java} Programs},
  booktitle = {Proceedings of {ICSM} 2001},
  publisher = {IEEE Computer Society},
  year = {2001}}

@incollection{Garl00a,
  author = {Garlan, David and Monroe, Robert T. and Wile, David},
  title = {Acme: Architectural Description of Component-Based Systems},
  chapter = {3},
  booktitle = {Foundations of Component-Based Systems},
  pages = {47--67},
  publisher = {Cambridge University Press},
  year = {2000},
  address = {New York, NY, USA},
  editor = {Gary T. Leavens and Murali Sitaraman}}

@inproceedings{Garl00b,
  author = {David Garlan},
  title = {Software architecture: a roadmap},
  booktitle = {{ICSE} -- Future of {SE} Track},
  pages = {91--101},
  year = {2000}}

@article{Garl02a,
  author = {Garlan, David and Siewiorek, Daniel P. and Smailagic, Asim and Steenkiste, Peter},
  title = {Project {AURA}: Toward Distraction-Free Pervasive Computing},
  journal = {IEEE Pervasive Computing},
  volume = {1},
  pages = {22--31},
  publisher = {IEEE Computer Society},
  year = {2002},
  doi = {10.1109/MPRV.2002.1012334},
  address = {Los Alamitos, CA, USA}}

@book{Garl03a,
  author = {Jeff Garland and Richard Anthony},
  title = {Large Scale Software Architecture},
  publisher = {Wiley and Sons},
  year = {2003},
  isbn = {0-470-84849-9}}

@inproceedings{Garl09a,
  author = {Garlan, David and Schmerl, Bradley},
  title = {{\AE}vol: A Tool for Defining and Planning Architecture Evolution},
  booktitle = {Proceedings of the 31st International Conference on Software Engineering},
  pages = {591--594},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/ICSE.2009.5070563},
  doi = {10.1109/ICSE.2009.5070563},
  acmid = {1555081},
  address = {Washington, DC, USA},
  isbn = {978-1-4244-3453-4},
  numpages = {4},
  series = {ICSE'09}}

@inproceedings{Garl86a,
  author = {David Garlan},
  title = {Views for Tools in Integrated Environments},
  booktitle = {Proceedings of an International Workshop on Advanced Programming Environments},
  pages = {314--343},
  publisher = {Springer-Verlag},
  year = {1986},
  address = {London, UK},
  isbn = {3-540-17189-4},
  moth = {June}}

@phdthesis{Garl88a,
  author = {David Barnard Garlan},
  title = {Views for Tools in Integrated Environments},
  year = {1988},
  school = {Carnegie Mellon University},
  address = {Pittsburgh, PA},
  institution = {Computer Science Department},
  month = jan}

@article{Garl95a,
  author = {David Garlan and Robert Allen and John Ockerbloom},
  title = {Architectural Mismatch: Why Reuse Is So Hard},
  journal = {IEEE Software},
  volume = {12},
  pages = {17--26},
  year = {1995},
  month = nov,
  number = {6}}

@misc{Garl95b,
  author = {D. Garlan and D. Kindred and J. Wing},
  title = {Interoperability: Sample Problems and Solutions},
  note = {Available from the authors}}

@article{Garl95c,
  author = {David Garlan and Dewayne Perry},
  title = {Introduction to the Special Issue on Software Architecture},
  journal = {IEEE Transactions on Software Engineering},
  volume = {21},
  year = {1995},
  month = {apr},
  number = {4}}

@proceedings{Garl97a,
  title = {Coordination Languages and Models},
  booktitle = {Proceedings of the Second International Conference, COORDINATION '97},
  volume = 1282,
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Berlin, Germany},
  editor = {David Garlan and Daniel Le M\'etayer},
  isbn = {3-540-63383-9},
  month = sep,
  series = {LNCS}}

@inproceedings{Garl97b,
  author = {Garlan, David and Monroe, Robert T. and Wile, David},
  title = {Acme: An Architecture Description Interchange Language},
  booktitle = {CASCON'97: Proceedings of the 7th Conference of the Centre for Advanced Studies on Collaborative Research},
  pages = {169--183},
  year = {1997},
  doi = {10.1145/782010.782017},
  address = {Toronto, Ontario, Canada}}

@phdthesis{Garn11,
  author = {Garner, Robin},
  title = {The design and construction of high performance garbage collectors},
  year = {2011},
  school = {The Australian National University}}

@inproceedings{Garo14a,
  author = {Garoche, Pierre-Lo\"{i}c and Howar, Falk and Kahsai, Temesghen and Thirioux, Xavier},
  title = {Testing-{Based} {Compiler} {Validation} for {Synchronous} {Languages}},
  booktitle = {{NASA} {Formal} {Methods}},
  pages = {246--251},
  publisher = {Springer International Publishing},
  year = {2014},
  abstract = {In this paper we present a novel lightweight approach to validate compilers for synchronous languages. Instead of verifying a compiler for all input programs or providing a fixed suite of regression tests, we extend the compiler to generate a test-suite with high behavioral coverage and geared towards discovery of faults for every compiled artifact. We have implemented and evaluated our approach using a compiler from Lustre to C.}}

@phdthesis{Garr00a,
  author = {Garrido, Alejandra},
  title = {Software refactoring applied to C programming language},
  year = {2000},
  school = {University of Illinois at Urbana-Champaign}}

@inproceedings{Garr02a,
  author = {Garrido, Alejandra and Johnson, Ralph},
  title = {Challenges of refactoring C programs},
  booktitle = {Proceedings of the international workshop on Principles of software evolution},
  pages = {6--14},
  year = {2002},
  organization = {ACM}}

@inproceedings{Garr05a,
  author = {Garrido, Alejandra and Johnson, Ralph},
  title = {Analyzing multiple configurations of a C program},
  booktitle = {Software Maintenance, 2005. {ICSM}'05. Proceedings of the 21st IEEE International Conference on},
  pages = {379--388},
  year = {2005},
  organization = {IEEE}}

@techreport{Garr06a,
  author = {Garrido, Alejandra and Meseguer, Jos{\'e} and Johnson, Ralph},
  title = {Algebraic semantics of the C preprocessor and correctness of its refactorings},
  year = {2006},
  institution = {University of Illinois at Urbana-Champaign, Urbana IL 61801, USA.}}

@article{Garr13a,
  author = {Garrido, Alejandra and Johnson, Ralph},
  title = {Embracing the C preprocessor during refactoring},
  journal = {Journal of Software: Evolution and Process},
  volume = {25},
  pages = {1285--1304},
  publisher = {Wiley Online Library},
  year = {2013},
  number = {12}}

@inproceedings{Garr86a,
  author = {L. Nancy Garrett and Karen E. Smith},
  title = {Building a Timeline Editor from Prefab Parts: The Architecture of an Object-Oriented Application},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {202--213},
  year = {1986},
  month = nov}

@article{Gary93a,
  author = {Merrill, Gary},
  title = {Parsing Non-LR(k) Grammars with Yacc},
  journal = {Software Practice and Experience},
  volume = {2},
  pages = {829-850},
  year = {1993},
  number = {8}}

@inproceedings{Gasi07a,
  author = {Vaidas Gasiunas and Mira Mezini and Klaus Ostermann},
  title = {Dependent classes},
  booktitle = {OOPSLA '07: Proceedings of the 22nd annual ACM SIGPLAN conference on Object oriented programming systems and applications},
  pages = {133--152},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297027.1297038},
  address = {New York, NY, USA},
  isbn = {978-1-59593-786-5},
  location = {Montreal, Quebec, Canada}}

@article{Gasp16a,
  author = {Gasparic, Marko and Murphy, G. C. and Ricci, Franscesco},
  title = {A Context Model for IDE-Based Recommandation Systems},
  journal = {Journal of Systems and Software},
  year = {2016},
  doi = {10.1016/j.jss.2016.09.012}}

@inproceedings{Gasp99a,
  author = {Mauro Gaspari and Gianluigi Zavattaro},
  title = {A Process Algebraic Specification of the New Asynchronous {CORBA} Messaging Service},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {495--518},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {CORBA (The Common Object Request Broker
Architecture) has to continually evolve in order to
cope with the changes of requirement of applications
which become larger and more distributed. For this
reason new features are being added to the CORBA
specification, for instance the last proposal for a
revised CORBA Messaging Service includes two new
asynchronous models of request invocation. Since
these new features will be added in the next CORBA
implementations a relevant issue is to study their
operational behaviour from different perspectives in
order to facilitate the task of implementors. This
paper addresses this issue providing an analysis of
the CORBA Messaging Service which includes the new
asynchronous features. In particular we illustrate
how CORBA models for request invocation can be
mapped into a message passing architecture based on
the actor model. For this purpose we exploit an
algebra of actors which supports some of the main
features of the abstract Object Model of the Object
Management Group, such as object identity and an
explicit notion of state. This approach allows us to
discuss and compare different models of request
invocation in a standard process algebraic
perspective for instance we show how different
notions of equivalence, such as standard and
asynchronous bisimulation, can be adapted to reason
about CORBA.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@incollection{Gass92a,
  author = {Les Gasser and Jean-Pierre Briot},
  title = {Object-Based Concurrent Programming and Distributed Artificial Intelligence},
  booktitle = {Distributed Artificial Intelligence: Theory and Praxis},
  pages = {81--107},
  publisher = {Kluwer},
  year = {1992},
  editor = {N.M. Avouris \& L. Gasser}}

@inproceedings{Gass98a,
  author = {M.L. Gassanenko},
  title = {Context-Oriented Programming},
  booktitle = {euroForth'98},
  year = {1998},
  abstract = {Context-oriented programming (COP) introduces one
more notion to reason about the structure of
software systems: a context (an environment) is a
set of entities bound with a system of relations.
This view is applicable where the object-oriented
one is inadequate. Implementation of COP requires
the same techniques as OOP: COP and OOP are
different things assembled from the same components.
COP allows things that OOP cannot do, for example,
COP enables us to use late binding for elementary
data that are not OOP objects.},
  address = {Schloss Dagstuhl, Germany},
  month = {apr}}

@book{Gaud93a,
  title = {Proceeding of {TAPSOFT} '93 on Theory and Practice of Software Development},
  volume = {668},
  publisher = {Springer-Verlag},
  year = {1993},
  editor = {Marie-Claude Gaudel and Jean-Pierre Jouannaud},
  series = {LNCS}}

@inproceedings{Gawe96a,
  author = {Andreas Gawecki and Florian Matthes},
  title = {Integrating Subtyping, Matching and Type Quantification: {A} Practical Perspective},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {26--47},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Gay03a,
  author = {David Gay and Philip Levis and Robert von Behren and Matt Welsh and Eric Brewer and David Culler},
  title = {The {nesC} language: A holistic approach to networked embedded systems},
  booktitle = {PLDI '03: Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation},
  pages = {1--11},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/781131.781133},
  address = {New York, NY, USA},
  isbn = {1-58113-662-5},
  location = {San Diego, California, USA}}

@incollection{Gay93a,
  author = {Simon Gay},
  title = {A Sort Inference Algorithm for the Polyadic $\pi$-Calculus},
  booktitle = {Principles of Programming Languages},
  publisher = {ACM},
  year = {1993}}

@article{Gazz12a,
  author = {Gazzillo, Paul and Grimm, Robert},
  title = {SuperC: parsing all of C by taming the preprocessor},
  journal = {ACM SIGPLAN Notices},
  volume = {47},
  pages = {323--334},
  publisher = {ACM},
  year = {2012},
  number = {6}}

@misc{Gdb23a,
  author = {GDB},
  title = {GDB ReverseDebug Project},
  year = {2023},
  howpublished = {\url{https://sourceware.org/gdb/wiki/ReverseDebug}}}

@inproceedings{GeXi12a,
  author = {Ge, Xi and DuBose, Quinton L. and Murphy-Hill, Emerson},
  title = {Reconciling Manual and Automatic Refactoring},
  booktitle = {Proceedings of the 34th International Conference on Software Engineering},
  pages = {211--221},
  publisher = {IEEE Press},
  year = {2012},
  url = {http://dl.acm.org/citation.cfm?id=2337223.2337249},
  acmid = {2337249},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4673-1067-3},
  location = {Zurich, Switzerland},
  numpages = {11},
  series = {ICSE '12}}

@misc{Gear06a,
  author = {Andrew Le Gear},
  title = {Component Reconn-exion},
  year = {2006}}

@inproceedings{Geba91a,
  author = {Gebala, D.A. and Eppinger, S.D. and Cambridge, M.},
  title = {Methods For Analyzing Design Procedures},
  booktitle = {3rd International Conference on Design Theory and Methodology},
  publisher = {Amer Society of Mechanical},
  year = {1991}}

@mastersthesis{Geet06a,
  author = {Joris van Geet},
  title = {Coevolution of Software and Tests: An Initial Assessment},
  year = {2006},
  school = {University of Antwerpen},
  url = {http://scg.unibe.ch/archive/masters/Aebi03a.pdf},
  abstract = {Unit testing is the first line of defence against
software failure. To make the most of this technique
the test code should evolve simultaneously with the
product code. First, this dissertation explores the
possibilities of using dynamic analysis to extract
test dependencies. Then we investigate whether
heuristic metrics on these dynamic test dependencies
provide a measure for the degree to which the test
code evolves with the product code. As a case study
we use Apache Ant and look specifically at two
different phases in the history of this open source
project. We conclude that dynamic test dependencies
alone do not suffice to provide such a measure and
we propose an alternative solution.},
  month = jul,
  type = {Diploma {Thesis}}}

@article{Geet14a,
  author = {Geetika, Rani and Singh, Paramvir},
  title = {Dynamic Coupling Metrics for Object Oriented Software Systems: A Survey},
  journal = {Software Engineering Notes},
  volume = {39},
  pages = {1--8},
  year = {2014},
  date-added = {2014-07-08 13:44:54 +0000},
  date-modified = {2014-07-08 13:45:15 +0000},
  number = {2}}

@article{Geha82a,
  author = {N. Gehani},
  title = {The Potential of Forms in Office Automation},
  journal = {IEEE Transactions on Communications},
  volume = {Com-30},
  pages = {120--125},
  year = {1982},
  month = jan,
  number = {1}}

@inproceedings{Geha91a,
  author = {Narain Gehani and H.V. Jagadish},
  title = {Ode as an Active Database: Constraints and triggers},
  booktitle = {Proceedings of Conference on Very Large Data Bases},
  pages = {327--336},
  year = {1991}}

@inbook{Geha96a,
  author = {Narain Gehani and H.V. Jagadish},
  title = {Active Database Facilities in Ode},
  chapter = {8},
  pages = {208--232},
  publisher = {Morgan Kaufman Publishers},
  year = {1996}}

@inproceedings{Geis07a,
  author = {Rubino Gei\ss and Moritz Kroll},
  title = {GrGen.NET: A Fast, Expressive, and General Purpose Graph Rewrite Tool},
  booktitle = {Applications of Graph Transformations with Industrial Relevance: Third International Symposium, AGTIVE 2007, Kassel, Germany, October 10-12, 2007, Revised Selected and Invited Papers},
  pages = {568--569},
  publisher = {Springer-Verlag},
  year = {2008},
  address = {Berlin, Heidelberg},
  isbn = {978-3-540-89019-5}}

@article{Gele85a,
  author = {David Gelernter and Nicholas Carriero},
  title = {Generative Communication in Linda},
  journal = {ACM TOPLAS},
  volume = {7},
  year = {1985},
  month = jan,
  number = {1}}

@inproceedings{Gele87a,
  author = {David Gelernter and Suresh Jagannathan and Tom London},
  title = {Environments as First-Class Objects},
  booktitle = {Principles of Programming Languages},
  pages = {98--110},
  publisher = {ACM Press},
  year = {1987},
  doi = {10.1145/41625.41634},
  address = {New York, NY, USA},
  isbn = {0-89791-215-2},
  location = {Munich, West Germany}}

@article{Gele92a,
  author = {David Gelernter and Nicholas Carriero},
  title = {Coordination Languages and their significance},
  journal = {Comm. ACM},
  volume = {35},
  year = {1992},
  month = feb,
  number = {2}}

@mastersthesis{Gell10a,
  author = {Geller, Felix and Hirschfeld, Robert and Bracha, Gilad},
  title = {Pattern Matching for an object-oriented and dynamically typed programming language},
  publisher = {Universit{\"a}tsverlag Potsdam},
  year = {2010},
  school = {Universit{\"a}tsverlag Potsdam},
  isbn = {978-3-86956-065-6},
  number = {36}}

@techreport{Gem01a,
  author = {GemStone Systems, Inc},
  title = {GemStone/S Programming Guide},
  year = {2001},
  url = {http://downloads.gemtalksystems.com/docs/GemStone32/6.0.x/GSS-ProgGuide-6.0.pdf},
  institution = {GemStone Systems, Inc}}

@incollection{Gemi93a,
  author = {Marc Gemis and Jan Paredaens},
  title = {An Object-Oriented Pattern Matching Language},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {339--355},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {A graphical model for describing schemes and
instances of object-databases and a graphical data
manipulation language based on pattern matching,
called \fIPaMaL\fR, are introduced. The operations
of PaMaL(addition and deletion of nodes and edges)
use patterns to indicate the parts of the instance
that are affected by the operation. We give the
syntax and semantics of the operations and the
programming constructs(loop, procedure and program)
of PaMaL. We add a reduce-operation to work with a
special group of instance, the \fIreduced
instances\fR.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@unpublished{Gene94a,
  author = {Michael Genesereth and Narinder P. Singh and Mustafa A. Syed},
  title = {A Distributed and Anonymous Knowledge Sharing Approach to Software Interoperation},
  year = {1994},
  month = nov,
  note = {Stanford University},
  type = {Draft}}

@misc{Generics,
  title = {Java Generics},
  key = {Generics},
  note = {http://java.sun.com/j2se/1.5.0/docs/guide/language/generics.html}}

@inproceedings{Geno89a,
  author = {Stefano Genolini and Andrea Di Maio and Cinzia Cardigno and Stephen Goldsack and Colin Atkinson},
  title = {Specifying Synchronisation Constraints in a Concurrent Object-Oriented Language},
  booktitle = {Proceedings TOOLS '89},
  year = {1989},
  month = nov}

@inproceedings{Gens02b,
  author = {Thomas Gen{\ss}ler and Oscar Nierstrasz and Bastiaan Sch\"onhage},
  title = {Components for Embedded Software --- The {PECOS} Approach},
  booktitle = {Proc. International Conference on Compilers, Architectures and Synthesis for Embedded Systems},
  year = {2002},
  doi = {10.1145/581630.581634},
  abstract = {Software is more and more becoming the major cost
factor for embedded devices. Already today, software
accounts for more than 50 percent of the development
costs of such a device. However, software
development practices in this area lag far behind
those in the traditional software industry. Reuse is
hardly ever heard of in some areas, development from
scratch is common practice and component-based
software is usually a foreign word. PECOS is a
collaborative project between industrial and
research partners that seeks to enable
component-based technology for a certain class of
embedded systems known as "field devices" by taking
into account the specific properties of this
application area. In this paper we introduce a
component model for field device software.
Furthermore we report on the PECOS component
composition language CoCo and the mapping from CoCo
to {Java} and C++.}}

@inproceedings{Gens03a,
  author = {Thomas Gen{\ss}ler and Volker Kuttruff},
  title = {Source-to-Source Transformation in the Large},
  booktitle = {Modular Programming Languages, Joint Modular Languages Conference, {JMLC} 2003},
  volume = {2789},
  pages = {254--265},
  publisher = {Springer},
  year = {2003},
  doi = {10.1007/b12023},
  isbn = {3-540-40796-0},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Gens94a,
  author = {Jerome Gensel},
  title = {Expression et satisfaction de contraintes dans {TROPES}},
  booktitle = {RPO},
  pages = {51--62},
  year = {1993}}

@inproceedings{Gens94b,
  author = {J. Gensel and P. Girard and O. Schmeltzer},
  title = {Int\'egration de contraintes, d'objets composites et de t\^aches dans un mod\`ele de repr\'esentation de connaissances par objets},
  booktitle = {9eme Congr\`es Reconnaissance des Formes et Intelligence Artificielle},
  volume = {2},
  pages = {281--292},
  year = {1994},
  address = {Paris},
  month = jan}

@article{Gent81a,
  author = {Morven Gentleman},
  title = {Message Passing Between Sequential Processes: the Reply Primitive and the Administrator Concept},
  journal = {Software --- Practice and Experience},
  volume = {11},
  pages = {435--466},
  year = {1981}}

@article{Genue10a,
  author = {Robin Genuer and Jean-Michel Poggi and Christine Tuleau-Malot},
  title = {Variable selection using random forests},
  journal = {Pattern Recognition Letters},
  volume = {31},
  year = {2010},
  doi = {10.1016/j.patrec.2010.03.014},
  date-modified = {2014-11-18 10:46:04 +0000},
  issn = {0167-8655},
  keywords = {High dimensional data},
  number = {14}}

@inproceedings{Geof09a,
  author = {N. Geoffray and G. Thomas and G. Muller and P. Parrend and S. Fr\'enot and B. Folliot},
  title = {I-JVM: a Java Virtual Machine for Component Isolation in OSGi},
  booktitle = {International Conference on Dependable Systems and Networks (DSN 2009)},
  publisher = {IEEE Computer Society},
  year = {2009}}

@inproceedings{Geof10a,
  author = {Geoffray, Nicolas and Thomas, Ga\"{e}l and Lawall, Julia and Muller, Gilles and Folliot, Bertil},
  title = {VMKit: a substrate for managed runtime environments},
  booktitle = {Proceedings of the 6th ACM SIGPLAN/SIGOPS international conference on Virtual execution environments},
  pages = {51--62},
  publisher = {ACM},
  year = {2010},
  doi = {10.1145/1735997.1736006},
  address = {New York, NY, USA},
  isbn = {978-1-60558-910-7},
  location = {Pittsburgh, Pennsylvania, USA},
  numpages = {12},
  series = {VEE '10}}

@inproceedings{Geor07a,
  author = {Georges, Andy and Buytaert, Dries and Eeckhout, Lieven},
  title = {Statistically Rigorous Java Performance Evaluation},
  booktitle = {Proceedings of the 22nd Annual ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages and Applications},
  pages = {57-76},
  publisher = {Association for Computing Machinery},
  year = {2007},
  url = {https://doi.org/10.1145/1297027.1297033},
  doi = {10.1145/1297027.1297033},
  abstract = {Java performance is far from being trivial to benchmark because it is affected by various factors such as the Java application, its input, the virtual machine, the garbage collector, the heap size, etc. In addition, non-determinism at run-time causes the execution time of a Java program to differ from run to run. There are a number of sources of non-determinism such as Just-In-Time (JIT) compilation and optimization in the virtual machine (VM) driven by timer-based method sampling, thread scheduling, garbage collection, and various.There exist a wide variety of Java performance evaluation methodologies usedby researchers and benchmarkers. These methodologies differ from each other in a number of ways. Some report average performance over a number of runs of the same experiment; others report the best or second best performance observed; yet others report the worst. Some iterate the benchmark multiple times within a single VM invocation; others consider multiple VM invocations and iterate a single benchmark execution; yet others consider multiple VM invocations and iterate the benchmark multiple times.This paper shows that prevalent methodologies can be misleading, and can even lead to incorrect conclusions. The reason is that the data analysis is not statistically rigorous. In this paper, we present a survey of existing Java performance evaluation methodologies and discuss the importance of statistically rigorous data analysis for dealing with non-determinism. We advocate approaches to quantify startup as well as steady-state performance, and, in addition, we provide the JavaStats software to automatically obtain performance numbers in a rigorous manner. Although this paper focuses on Java performance evaluation, many of the issues addressed in this paper also apply to other programming languages and systems that build on a managed runtime system.},
  address = {New York, NY, USA},
  isbn = {9781595937865},
  keywords = {java, benchmarking, methodology, data analysis, statistics},
  location = {Montreal, Quebec, Canada},
  numpages = {20},
  series = {OOPSLA '07}}

@inproceedings{Geor12a,
  title={Type-safe model transformation languages as internal {DSLs} in Scala},
  author={George, Lars and Wider, Arif and Scheidgen, Markus},
  booktitle={Theory and Practice of Model Transformations: 5th International Conference, ICMT 2012, Prague, Czech Republic, May 28-29, 2012. Proceedings 5},
  pages={160--175},
  year={2012},
  organization={Springer}
}

@article{Georg95a,
  author = {Dimitrios Georgakopoulos and Mark F. Hornick and Amit P. Sheth},
  title = {An overview of workflow management: From process modeling to workflow automation infrastructure},
  journal = {Distributed and Parallel Databases},
  volume = 3,
  pages = {119 153},
  year = {1995},
  number = 2}

@unpublished{Gepp92a,
  author = {Andreas Geppert and Klaus Dittrich},
  title = {Constructing the Next 100 Database Management Systems: Like the Handyman or Like the Engineer?},
  year = {1992},
  month = nov,
  note = {Universit{\"a}t Z{\"u}rich},
  type = {draft}}

@unpublished{Gepp92b,
  author = {Andreas Geppert},
  title = {Specification and Realization of Transaction Management Subsystems in Configurable Database Management Systems},
  year = {1992},
  month = jul,
  note = {Universit{\"a}t Z{\"u}rich},
  type = {draft}}

@unpublished{Gepp92c,
  author = {Andreas Geppert},
  title = {On the Architecture of Generated {DBMS} and {DBMS} Generators, or: Can Kids Generate {DBMS}},
  year = {1992},
  month = may,
  note = {Universit{\"a}t Z{\"u}rich},
  type = {draft}}

@techreport{Gepp93a,
  author = {Andreas Geppert and Klaus Dittrich},
  title = {The NO2 Data Model},
  year = {1993},
  institution = {Universit{\"a}t Z{\"u}rich},
  month = apr,
  number = {93.09},
  type = {TR Nr.}}

@article{Gerb77a,
  author = {A.J. Gerber},
  title = {Process Synchronization by Counter Variables},
  journal = {ACM Operating Systems Review},
  volume = {11},
  pages = {6--17},
  year = {1977},
  month = oct,
  number = {4}}

@article{Gerd09a,
  author = {Gerdes Jr, John},
  title = {User interface migration of microsoft windows applications},
  journal = {Journal of Software Maintenance and Evolution: Research and Practice},
  volume = {21},
  pages = {171--187},
  publisher = {Wiley Online Library},
  year = {2009},
  number = {3}}

@inproceedings{Germ04a,
  author = {Daniel Germ\'ain and Abram Hindle and Norman Jordan},
  title = {Visualizing the evolution of software using softChange},
  booktitle = {Proceedings of the 16th International Conference on Software Engineering {\&} Knowledge Engineering (SEKE 2004)},
  pages = {336--341},
  publisher = {ACM Press},
  year = {2004},
  address = {New York NY},
  location = {Banff, Alberta, Canada},
  mon = jun}

@article{Germ09a,
  author = {German, Daniel M. and Hassan, Ahmed E. and Robles, Gregorio},
  title = {Change impact graphs: Determining the impact of prior code changes},
  journal = {Journal of Information Software Technology},
  volume = {51},
  pages = {1394--1408},
  publisher = {Elsevier},
  year = {2009},
  issn = {0950-5849},
  month = oct,
  number = {10}}

@inproceedings{Germ13a,
  author = {German, Daniel M. and Adams, Bram and Hassan, Ahmed E.},
  title = {The Evolution of the R Software Ecosystem},
  booktitle = {Proceedings of the 2013 17th European Conference on Software Maintenance and Reengineering},
  pages = {243--252},
  publisher = {IEEE Computer Society},
  year = {2013},
  url = {http://dx.doi.org/10.1109/CSMR.2013.33},
  doi = {10.1109/CSMR.2013.33},
  acmid = {2495700},
  address = {Washington, DC, USA},
  isbn = {978-0-7695-4948-4},
  keywords = {Software ecosystems, Evolution, R},
  numpages = {10},
  series = {CSMR '13}}

@book{Gero19a,
  author = {G{\'e}ron, Aur{\'e}lien},
  title = {Hands-on machine learning with Scikit-Learn, Keras, and TensorFlow: Concepts, tools, and techniques to build intelligent systems},
  publisher = {" O'Reilly Media, Inc."},
  year = {2019}}

@inproceedings{Gers95a,
  author = {Nahum Gershon and Joshua LeVasseur and Joel Winstead and James Croall and Ari Pernick and William Ruh},
  title = {Case Study Visualizing Internet Resources},
  booktitle = {Proceedings of the Conference on Information Visualization (INFOVIZ '95)},
  pages = {122--128},
  year = {1995},
  organization = {IEEE}}

@mastersthesis{Gert97a,
  author = {J{\"u}rg Gertsch},
  title = {Fruitlets --- a Kind of Mobile Component},
  year = {1997},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Gert97a.pdf http://scg.unibe.ch/archive/masters/Gert97a.ps.gz http://scg.unibe.ch/archive/masters/Gert97a.html},
  abstract = {Mobile software entities are becoming increasingly
important in the domain of local area networks (LAN)
and wide area networks (WAN). Different kinds of
mobile entities are a r{API}dly evolving area of
research in the field of World-Wide-Web, distributed
and open systems. The first part of this thesis
surveys different approaches in order to develop
open, flexible and distributed systems. We focus on
an approach of stateless mobile software entities.
The second part of this thesis introduces the notion
"fruitlet" and "run-time framework" and classifies
"fruitlet" within other existing mobility meanings
and compares them with other concepts related to
mobile code. We describe a prototype of a basic
software architecture for stateless mobile software
entities. The third part shows examples of open,
flexible and extendable software applications using
the described technology of "fruitlets".},
  month = jun,
  type = {Diploma thesis}}

@article{Gesc77a,
  author = {C.M. Geschke and Morris, Jr., J.H. and E.H. Satterthwaite},
  title = {Early Experience with Mesa},
  journal = {CACM},
  volume = {20},
  pages = {540--553},
  year = {1977},
  month = aug,
  number = {8}}

@article{Gett90a,
  author = {P.H. Getto and D.E. Breen},
  title = {An Object-Oriented Architecture for a Computer Animation System},
  journal = {The Visual Computer},
  volume = {6},
  pages = {79--92},
  publisher = {Springer-Verlag},
  year = {1990},
  abstract = {This paper describes the architecture, capabilities
and implementation of The Clockworks, an
object-oriented computer animation system
encompassing a wide variety of modeling, image
synthesis, animation, programming, and simulation
capabilities in a single integrated environment. The
object-oriented features of The Clockworks are
implemented in portable C under Unix using a
programming discipline. These features include
objects with methods and instance variables, class
hierarchies, inheritance, instantiation and message
passing.},
  address = {Heidelberg},
  month = mar,
  number = {2}}

@article{Ghan08a,
  author = {Ghanam, Yaser and Carpendale, Sheelagh},
  title = {A survey paper on software architecture visualization},
  journal = {University of Calgary, Tech. Rep},
  pages = {17},
  year = {2008}}

@inproceedings{Ghel91a,
  author = {Giorgio Ghelli},
  title = {A Static Type System for Message Passing},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {129--145},
  year = {1991},
  month = nov}

@inproceedings{Ghey05a,
  author = {Gheyi, Rohit and Massoni, Tiago and Borba, Paulo},
  title = {A rigorous approach for proving model refactorings},
  booktitle = {20th international Conference on Automated software engineering},
  pages = {372--375},
  year = {2005}}

@book{Ghez89a,
  title = {Proceedings {ESEC}'89},
  volume = {387},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Kaiserslautern, Germany},
  editor = {Ghezzi, J.A.McDermid, C.},
  isbn = {3-540-51635-2},
  month = sep,
  series = {LNCS}}

@book{Ghez91a,
  author = {Carlo Ghezzi and Mehdi Jazayeri and Dino Mandrioli},
  title = {Fundamentals of Software Engineering},
  publisher = {Prentice-Hall},
  year = {1991},
  isbn = {0138204322}}

@article{Ghid01a,
  author = {Chiara Ghidini and Fausto Giunchiglia},
  title = {Local Models Semantics, or contextual reasoning = locality + compatibility},
  journal = {Artificial Intelligence},
  volume = {127},
  pages = {221--259},
  year = {2001},
  url = {http://sra.itc.it/tr/GG97b.pdf},
  month = apr,
  number = {2}}

@inproceedings{Ghin07a,
  author = {Dorina Ghindici and Gilles Grimaud and Isabelle Simplot-Ryl},
  title = {An Information Flow Verifier for Small Embedded Systems},
  booktitle = {Workshop on Information Security Theory and Practices},
  volume = {4462},
  pages = {89--201},
  publisher = {Springer Verlag},
  year = {2007},
  series = {LNCS}}

@inproceedings{Ghon03a,
  author = {Mohammad Ghoniem and Narendra Jussien and Jean-Daniel Fekete},
  title = {Visualizing Explanations to Exhibit Dynamic Structure in Constraint Problems},
  booktitle = {Proceedings 3th International Workshop on User Interaction in Constraint Satisfaction},
  year = {2003},
  url = {http://www.lri.fr/~fekete/},
  address = {Kinsale, Ireland},
  month = sep}

@inproceedings{Ghon04a,
  author = {Mohammad Ghoniem and Narendra Jussien and Jean-Daniel Fekete},
  title = {{VISEXP}: Visualizing Constraint Solver Dynamics using Explanations},
  booktitle = {Proceedings of Seventh Florida Artificial Intelligence Research Society Conference (FLAIR'04)},
  publisher = {AAAI Press},
  year = {2004},
  url = {http://www.lri.fr/~fekete/},
  address = {Miami Beach, FL}}

@inproceedings{Ghon04b,
  author = {Mohammad Ghoniem and Jean-Daniel Fekete and Philippe Castagliola},
  title = {A Comparison of the Readability of Graphs Using Node-Link and Matrix-Based Representations},
  booktitle = {Proceedings of the 10th IEEE Symposium on Information Visualization (InfoVis'04)},
  pages = {17--24},
  publisher = {IEEE Press},
  year = {2004},
  url = {http://www.lri.fr/~fekete/},
  address = {Austin, TX},
  month = oct}

@article{Ghon05a,
  author = {Mohammad Ghoniem and Jean-Daniel Fekete and Philippe Castagliola},
  title = {On the readability of graphs using node-link and matrix-based representations: a controlled experiment and statistical analysis},
  journal = {Information Visualization},
  volume = {4},
  pages = {114-135},
  year = {2005},
  ee = {10.1057/palgrave.ivs.9500092},
  number = {2}}

@inproceedings{Giac89a,
  author = {Alessandro Giacalone and Prateek Mishra and Sanjiv Prasad},
  title = {{FACILE}: {A} Symmetric Integration of Concurrent and Functional Programming},
  booktitle = {Proceedings TAPSOFT '89},
  volume = {351},
  pages = {184--209},
  publisher = {Springer-Verlag},
  year = {1989},
  editor = {D\'iaz and Orejas},
  series = {LNCS}}

@inproceedings{Gian02a,
  author = {Dimitra Giannakopoulou and Corina S. Pasareanu and Howard Barringer},
  title = {Assumption Generation for Software Component Verification},
  booktitle = {ASE},
  pages = {3-12},
  year = {2002},
  url = {http://www.ase-conferences.org/olbib/01114984.pdf},
  ee = {http://csdl.computer.org/comp/proceedings/ase/2002/1736/00/17360003abs.htm}}

@article{Gibb70,
  author = {A.J. Gibbs and G.A. McIntyre},
  title = {The diagram: a method for comparing sequences. Its use with amino acid and nucleotide sequences.},
  journal = {Eur. J. Biochem.},
  volume = 16,
  pages = {1--11},
  year = {1970}}

@article{Gibb70a,
  author = {A.J. Gibbs and G.A. McIntyre},
  title = {The diagram: a method for comparing sequences. Its use with amino acid and nucleotide sequences.},
  journal = {Eur. J. Biochem.},
  volume = {16},
  pages = {1--11},
  year = {1970}}

@mastersthesis{Gibb79a,
  author = {Simon Gibbs},
  title = {{OFS}: An Office Form System for a Network Architecture},
  year = {1979},
  school = {Department of Computer Science, University of Toronto},
  type = {M.Sc. thesis}}

@inproceedings{Gibb82a,
  author = {Simon Gibbs},
  title = {Office Information Models and the Representation of `Office Objects'},
  booktitle = {Proceedings ACM SIGOA},
  pages = {21--26},
  year = {1982},
  address = {Philadelphia},
  month = jun}

@article{Gibb83a,
  author = {Simon Gibbs and Dennis Tsichritzis},
  title = {A Data Modelling Approach for Office Information Systems},
  journal = {ACM TOOIS},
  volume = {1},
  pages = {299--319},
  year = {1983},
  number = {3}}

@techreport{Gibb84a,
  author = {Simon Gibbs},
  title = {An Object-Oriented Office Data Model},
  year = {1984},
  institution = {University of Toronto},
  number = {154},
  type = {CSRG Technical Report}}

@article{Gibb87a,
  author = {Simon Gibbs and Dennis Tsichritzis and Akis Fitas and Dimitri Konstantas and Yannis Yeorgaroudakis},
  title = {Muse: {A} Multimedia Filing System},
  journal = {IEEE Software},
  pages = {4--15},
  year = {1987},
  month = mar}

@inproceedings{Gibb89a,
  author = {Simon Gibbs},
  title = {{LIZA}: An extensible groupware toolkit},
  booktitle = {Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems},
  pages = {29--35},
  publisher = {ACM, New York},
  year = {1989},
  misc = {April 30-May 4},
  address = {Austin, Texas},
  month = apr}

@techreport{Gibb89b,
  author = {Simon Gibbs and Vassili Prevelakis and Dennis Tsichritzis},
  title = {Software Information Systems: {A} Software Community Perspective},
  pages = {41--59},
  year = {1989},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@techreport{Gibb89c,
  author = {Simon Gibbs},
  title = {{CSCW} and Software Engineering},
  pages = {31--40},
  year = {1989},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@article{Gibb90a,
  author = {Simon Gibbs and Dennis Tsichritzis and Eduardo Casais and Oscar Nierstrasz and Xavier Pintado},
  title = {Class Management for Software Communities},
  journal = {Communications of the ACM},
  volume = {33},
  pages = {90--103},
  year = {1990},
  url = {http://scg.unibe.ch/archive/osg/Gibb90aClassManagement.pdf},
  doi = {10.1145/83880.84525},
  abstract = {Object-oriented programming is considered in the
context of software communities --- groups of
designers and developers sharing knowledge and
experience. One way of fostering reuse of this
experience is by establishing large collections of
reusable object classes. Resulting problems include:
Class packaging and class organization --- how can
classes and their methods be represented to simplify
reuse. Class selection and exploration --- what
query and browsing facilities are needed by
developers in order to facilitate software reuse.
Class evolution --- how may the class hierarchy be
reorganized as a result of changes introduced by
developers. These issues are illustrated by
examining prototype tools and systems intended to
aid object-oriented programming.},
  month = sep,
  number = {9}}

@techreport{Gibb90b,
  author = {Simon Gibbs and Vassili Prevelakis},
  title = {Xos: An Overview},
  pages = {37--62},
  year = {1990},
  abstract = {This paper describes Xos, an object-oriented data
model designed for representing software
information. The paper covers the design of Xos,
describes its functionality, and gives an indication
of the current status of the implementation effort.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@techreport{Gibb90c,
  author = {Simon Gibbs and Dennis Tsichritzis},
  title = {Software Licensing versus Software Reuse},
  pages = {107--115},
  year = {1990},
  abstract = {Various software pricing mechanisms are considered
in the context of large-scale reuse. It is argued
that the current practice of software licensing
hinders reuse and that a more flexible and
lightweight mechanism is needed.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@techreport{Gibb90d,
  author = {Simon Gibbs},
  title = {Querying Large Class Collections},
  pages = {63--77},
  year = {1990},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/queryingLargeClass.pdf},
  abstract = {Object-oriented programming and the reuse of classes
and methods, when practised on a large scale by
communities of programmers and designers sharing
software components, will lead to the creation of
very large class collections. In such a context,
facilities for querying a class collection become
important. This paper presents an object-oriented
data model, Xos, which can be used to logically
organize and describe a class collection in a form
suitable for querying. An extended example based on
modelling C++ is given.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@inproceedings{Gibb91a,
  author = {Simon Gibbs},
  title = {Composite Multimedia and Active Objects},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {97--112},
  year = {1991},
  abstract = {An object-oriented framework for composite
multimedia is described. In analogy to constructing
complex graphics entities from graphics primitives
and geometric transformations, composite multimedia
is constructed from multimedia primitives and
temporal transformations. Active objects based on
real-time processes are proposed as multimedia
primitives. Their combination to form composite
multimedia and the requisite temporal
transformations are illustrated.},
  month = nov}

@techreport{Gibb91b,
  author = {Simon Gibbs and Laurent Dami and Dennis Tsichritzis},
  title = {An Object-Oriented Framework for Multimedia Composition and Synchronisation},
  pages = {133--143},
  year = {1991},
  abstract = {Composition and synchronisation are discussed within
an object-oriented framework for programming
multimedia applications. The framework is based on a
conceptual model of inter-connectable multimedia
components and can be used to construct complex
multimedia applications involving audio, video and
graphics.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  note = {A version of this paper appeared in the Eurographics Multimedia Workshop, Stockholm, 1991.},
  type = {Object Composition}}

@inproceedings{Gibb91c,
  author = {Simon Gibbs and Christian Breiteneder and Laurent Dami and Vicki de Mey and Dennis Tsichritzis},
  title = {A Programming Environment for Multimedia Applications},
  booktitle = {Proceedings of the Second International Workshop on Network and Operating System Support for Digital Audio and Video},
  year = {1991},
  address = {Heidelberg}}

@inproceedings{Gibb92a,
  author = {Simon Gibbs},
  title = {Application Construction and Component Design in an Object-Oriented Multimedia Framework},
  booktitle = {Proceedings of the Third International Workshop on Network and Operating System Support for Digital Audio and Video},
  year = {1992},
  abstract = {An approach to constructing multimedia applications
by connecting groups of high-level components is
presented. The components, and their connections,
are software abstractions provided by an
object-oriented multimedia framework --- a set of
related classes that provide basic functionality and
composition mechanisms. Several examples of
components and a working application constructed
using these components are described. We also
consider design issues when components are used
under a wide range of conditions.}}

@inproceedings{Gibb93a,
  author = {Simon Gibbs and Christian Breiteneder and Dennis Tsichritzis},
  title = {Audio/Video Databases: An Object-Oriented Approach},
  booktitle = {Proceedings of the 9th International Conference on Data Engineering},
  publisher = {IEEE Computer Society Press},
  year = {1993},
  abstract = {The notion of an audio/video, or AV, database is
introduced. An AV database is a collection of AV
values (digital audio and video data) and AV
activities (interconnectable components used to
process AV values). Two abstraction mechanisms,
temporal composition and flow composition, allow the
aggregation of AV values and AV activities
respectively. An object-oriented framework,
incorporating an AV data model and prescribing AV
database/application interaction, is described.},
  address = {Vienna},
  note = {To appear}}

@techreport{Gibb93b,
  author = {Simon Gibbs and Christian Breiteneder and Vicki de Mey and Michael Papathomas},
  title = {Video Widgets and Video Actors},
  pages = {51--64},
  year = {1993},
  abstract = {Video widgets are user-interface components that are
rendered using video information. The implementation
and several usage examples of a family of video
widgets, called video actors, are presented. Video
actors rely on two capabilities of digital video:
non-linear access, and the composition and layering
of video information.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Visual Objects}}

@techreport{Gibb93c,
  author = {Simon Gibbs and Christian Breiteneder and Dennis Tsichritzis},
  title = {Data Modeling of Time-Based Media},
  pages = {1--21},
  year = {1993},
  abstract = {Many aspects of time-based media --- complex data
encoding, compression, "quality factors," timing ---
appear problematic from a data modeling standpoint.
This paper proposes timed streams as the basic
abstraction for modeling time-based media. Several
media-independent structuring mechanisms are
introduced and a data model is presented which,
rather than leaving the interpretation of multimedia
data to applications, addresses the complex
organization and relationships present in
multimedia.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Visual Objects}}

@book{Gibb94a,
  author = {Simon J. Gibbs and Dionysios C. Tsichritzis},
  title = {Multimedia Programming},
  publisher = {Addison Wesley},
  year = {1994},
  isbn = {0-201-42282-4}}

@incollection{Gibb95a,
  author = {Simon Gibbs},
  title = {Multimedia Component Frameworks},
  booktitle = {Object-Oriented Software Composition},
  pages = {305--319},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {This chapter looks at the use of object-oriented
technology, in particular class frameworks, in the
domain of multimedia programming. After introducing
digital media and multimedia programming, the
central notion of multimedia frameworks is examined;
an example of a multimedia framework and an
application that uses the framework are presented.
The example application demonstrates how
object-oriented multimedia programming helps to
insulate application developers from "volatility" in
multimedia processing capabilities --- this
volatility and related uncertainty is currently one
of the key factors hindering multimedia application
development.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@inproceedings{Gibs97a,
  author = {Paul Gibson},
  title = {Feature Requirements Models: Understanding Interactions},
  booktitle = {Feature Interactions in Telecommunication Networks},
  pages = {46--60},
  publisher = {IOS Press},
  year = {1997}}

@mastersthesis{Gies03a,
  author = {Simon Giesecke},
  title = {{Clone}--based {Reengineering} f\"ur {Java} auf der {Eclipse}--{Plattform}},
  year = {2003},
  school = {Carl von Ossietzky Universit\"at Oldenburg, Germany},
  url = {http://www.informatik.uni-oldenburg.de/~matrix/da/},
  month = sep}

@inbook{Gies10,
  author = {Giese, Holger and Hildebrandt, Stephan and Neumann, Stefan},
  title = {Model Synchronization at Work: Keeping SysML and AUTOSAR Models Consistent},
  booktitle = {Graph Transformations and Model-Driven Engineering: Essays Dedicated to Manfred Nagl on the Occasion of his 65th Birthday},
  pages = {555--579},
  publisher = {Springer Berlin Heidelberg},
  year = {2010},
  url = {https://doi.org/10.1007/978-3-642-17322-6_24},
  address = {Berlin, Heidelberg}}

@book{Giff98a,
  author = {Dwayne Gifford et al.},
  title = {Access 97 Unleashed},
  publisher = {Sams},
  year = {1998}}

@inproceedings{Gil96a,
  author = {Joseph Gil and David H. Lorenz},
  title = {{Environmental} {Acquisition} --- {A} New Inheritance-Like Abstraction Mechanism},
  booktitle = {Proceedings of OOPSLA'96},
  pages = {214--231},
  year = {1996}}

@book{Gilb05a,
  author = {Tom Gilb},
  title = {Competitive Engineering: A Handbook For Systems Engineering, Requirements Engineering, and Software Engineering Using Planguage},
  publisher = {Butterworth-Heinemann},
  year = {2005},
  address = {Newton, MA, USA},
  isbn = {0750665076}}

@inproceedings{Gilb88a,
  author = {Jonathan P. Gilbert and Lubomir Bic},
  title = {Asynchronous Data Retrieval from an Object-Oriented Database},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {335--349},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@book{Gilb93a,
  author = {Tom Gilb and Dorothy Graham},
  title = {Software Inspection},
  publisher = {Addison Wesley},
  year = {1993}}

@book{Gill92a,
  author = {Alan C. Gillies},
  title = {Software Quality},
  publisher = {Thomson Computer Press},
  year = {1992},
  isbn = {1-85032-270-8}}

@article{Gini21a,
  author = {C. Gini},
  title = {Measurement of Inequality of Incomes},
  journal = {The Economic Journal},
  volume = {31},
  pages = {124--126},
  year = {1921},
  citeulike-article-id = {1204714},
  keywords = {misc},
  posted-at = {2007-04-03 15:51:53},
  priority = {2}}

@incollection{Gira87a,
  author = {Jean-Yves Girard},
  title = {Linear Logic and Parallelism},
  booktitle = {Mathematical Models for the Semantics of Parallelism},
  volume = {280},
  pages = {166--182},
  publisher = {Springer-Verlag},
  year = {1987},
  editor = {M. Zilli},
  series = {LNCS}}

@article{Gira87b,
  author = {Jean-Yves Girard},
  title = {Linear Logic},
  journal = {Theoretical Computer Science},
  volume = {50},
  pages = {1--102},
  publisher = {North-Holland},
  year = {1987}}

@misc{Gira88a,
  author = {Jean-Yves Girard},
  title = {Towards a Geometry of Interaction},
  year = {1988},
  month = apr}

@unpublished{Gira92a,
  author = {Rosario Girardi and Bertrand Ibrahim},
  title = {New Approaches for Reuse Systems},
  year = {1992},
  note = {submitted for publicationCentre Universitaire d'Informatique, University of Geneva},
  type = {draft}}

@techreport{Gira92b,
  author = {Rosario Girardi},
  title = {Application Engineering: Putting Reuse to Work},
  pages = {137--149},
  year = {1992},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@inproceedings{Gira97a,
  author = {Jean-Francois Girard and Rainer Koschke},
  title = {Finding Components in a Hierarchy of Modules: a Step towards Architectural Understanding},
  booktitle = {{ICSM}},
  publisher = {IEEE Press},
  year = {1997},
  abstract = {This paper presents a method to view a system as a
hierarchy of modules according to information hiding
concepts and to identify architectural component
candidates in this hierarchy. The result of the
method eases the understanding of a system's
underlying software architecture. A prototype tool
implementing this method was applied to three
systems written in C (each over 30 Kloc). For one of
these systems, an author of the system created an
architectural description. The components generated
by our method correspond to those of this
architectural description in almost all cases. For
the other two systems, most of the components
resulting from the method correspond to meaningful
system abstractions.}}

@misc{Giraph,
  author={Apache},
  title = {Apache Giraph},
  url = {http://giraph.apache.org/},
  year = {2020},
  urldate = {Accessed: 2020-05-10}
}

@inproceedings{Girb04a,
  author = {Tudor G\^irba and Michele Lanza},
  title = {Visualizing and Characterizing the Evolution of Class Hierarchies},
  booktitle = {WOOR 2004 (5th ECOOP Workshop on Object-Oriented Reengineering)},
  year = {2004},
  url = {http://scg.unibe.ch/archive/papers/Girb04aHierarchiesEvolution.pdf},
  abstract = {Analyzing historical information can show how a
software system evolved into its current state, but
it can also show which parts of the system are more
evolution prone. Yet, historical analysis implies
processing a vast amount of information which makes
the interpretation difficult. To address this issue,
we introduce the notion of history of source code
artifacts as a first class entity and define
measurements which summarize the evolution of such
entities. We then use these measurements to define
polymetric views for visualizing the effect of time
on class hierarchies. We show the application of our
approach on one large open source case study and
reveal how we can classify the class hierarchies
based on their history.}}

@phdthesis{Girb05d,
  author = {Tudor G\^irba},
  title = {Modeling History to Understand Software Evolution},
  pages = {164},
  year = {2005},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/girba-phd.pdf},
  abstract = {Over the past three decades, more and more research
has been spent on understanding software evolution.
The development and spread of versioning systems
made valuable data available for study. Indeed,
versioning systems provide rich information for
analyzing software evolution, but it is exactly the
richness of the information that raises the problem.
The more versions we consider, the more data we have
at hand. The more data we have at hand, the more
techniques we need to employ to analyze it. The more
techniques we need, the more generic the
infrastructure should be. The approaches developed
so far rely on ad-hoc models, or on too specific
meta-models, and thus, it is difficult to reuse or
compare their results. We argue for the need of an
explicit and generic meta-model for allowing the
expression and combination of software evolution
analyses. We review the state-of-the-art in software
evolution analysis and we conclude that: \emph{To
provide a generic meta-model for expressing software
evolution analyses, we need to recognize the
evolution as an explicit phenomenon and model it as
a first class entity.} Our solution is to
encapsulate the evolution in the explicit notion of
history as a sequence of versions, and to build a
meta-model around these notions: Hismo. To show the
usefulness of our meta-model we exercise its dif
ferent characteristics by building several reverse
engineering applications. This dissertation of fers
a meta-model for software evolution analysis yet,
the concepts of history and version do not
necessarily depend on software. We show how the
concept of history can be generalized and how we can
obtain our meta-model by transformations applied on
structural meta-models. As a consequence, our
approach of modeling evolution is not restricted to
software analysis, but can be applied to other
fields as well.},
  address = {Bern},
  cvs = {TGirbaPhD},
  month = nov}

@misc{Girb08a,
  author = {Tudor G\^irba and Michele Lanza and Radu Marinescu},
  title = {Pragmatic Software Quality Detection},
  booktitle = {Proceedings of International Conference on Software Engineering (ICSE 2008)},
  pages = {n6},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Girb08aQualityAssessmentTutorial.pdf},
  abstract = {Quality control is paramount in every engineering
discipline. Software engineering, however, is not
considered a classical engineering activity for
several reasons, such as intrinsic complexity and
lack of rigor. In general, if a software system is
delivering the expected functionality, only in few
cases people see the need to analyze the internals.
In this tutorial we offer a pragmatic approach to
analyzing the quality of software systems. On the
one hand, we offer the theoretical background to
detect quality problems by using and combining
metrics, by analyzing the past through evolution
analysis, and by providing visual evidence of the
state of affairs in the system. On the other hand,
as analyzing real systems requires adequate tool
support, we offer an overview of the problems that
occur in using such tools and provide a hands-on
session with state-of-the-art tools used on a real
case study.},
  note = {Tutorial held at ICSE 2008}}

@book{Girb10a,
  author = {Tudor G\^irba},
  title = {The Moose Book},
  publisher = {Self Published},
  year = {2010},
  url = {http://www.themoosebook.org/book},
  abstract = {This book offers an overview of the Moose platform
for software and data analysis. More specifically it
covers version 4.0.}}

@misc{Git00a,
  title = {Git: The fast version control system},
  url = {http://git-scm.com/},
  key = {git}}

@article{Gitm70a,
  author = {I. Gitman and M. D. Levine},
  title = {An {Algorithm} for {Detecting} {Unimodal} {Fuzzy} {Sets} and {Its} {Application} as a {Clustering} {Technique}},
  journal = {IEEE Transactions on Computers},
  volume = {CE-19},
  pages = {583--593},
  year = {1970},
  month = jul}

@misc{Giuf10a,
  author = {Cristiano Giuffrida and Andrew S. Tanenbaum},
  title = {A Taxonomy of Live Updates},
  year = {2010}}

@techreport{Gius87a,
  author = {D. Giuse},
  title = {KR: an efficient knowledge representation system},
  year = {1987},
  institution = {Carnegie Mellon University},
  month = oct,
  number = {{CMU-RI-TR-87-23}}}

@techreport{Gius92a,
  author = {D. Giuse},
  title = {KR: Constraint-based knowledge representation},
  year = {1992},
  institution = {Carnegie Mellon University},
  month = nov,
  note = {Kr V2.0}}

@techreport{Giusa89a,
  author = {D. Giuse},
  title = {KR: Constraint-based knowledge representation},
  year = {1989},
  institution = {Carnegie Mellon University},
  month = apr,
  number = {{CMU-CS-89-142}}}

@book{Gjes88a,
  title = {Proceedings of {ECOOP}'88},
  volume = {322},
  publisher = {Springer-Verlag},
  year = {1988},
  editor = {S. Gjessing and K. Nygaard},
  isbn = {3-540-50053-7},
  series = {LNCS}}

@inproceedings{Glab90a,
  author = {R.J. van Glabbeek},
  title = {The Linear Time --- Branching Time Spectrum},
  booktitle = {Proceedings of CONCUR '90},
  volume = {458},
  pages = {278--297},
  publisher = {Springer-Verlag},
  year = {1990},
  editor = {J.C.M. Baeten and J.W. Klop},
  series = {LNCS}}

@article{Glas02a,
  author = {Leon Glass},
  title = {Looking at Dots},
  journal = {The Mathematical Intelligencer},
  volume = {24},
  pages = {37--43},
  year = {2002},
  number = {4}}

@article{Glas94a,
  author = {Robert L. Glass},
  title = {{The} {Software} {Research} {Crisis}},
  journal = {IEEE Software},
  pages = {42--47},
  publisher = {IEEE Computer Society},
  year = {1994},
  month = nov,
  number = {11}}

@article{Glas96a,
  author = {Robert L. Glass},
  title = {{The} {Relationship} {Between} {Theory} and {Practice} in {Software} {Engineering}},
  journal = {Communications of the ACM},
  volume = {39},
  pages = {11--13},
  publisher = {ACM},
  year = {1996},
  month = nov,
  number = {11}}

@book{Glass97a,
  author = {Robert L. Glass},
  title = {Building Quality Software},
  publisher = {Prentice-Hall},
  year = {1997}}

@unpublished{Glau91a,
  author = {J. Glauert and Lone Leth and Bent Thomsen},
  title = {A New Translation of Functions as Processes},
  year = {1991},
  misc = {Sept. 30},
  month = sep,
  note = {University of East Anglia},
  type = {Draft}}

@book{Glen79a,
  author = {Glenford J. Myers},
  title = {Art of Software Testing},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1979},
  address = {New York, NY, USA},
  date-added = {2007-02-01 14:05:28 +0100},
  date-modified = {2007-02-01 14:05:28 +0100},
  isbn = {0471043281}}

@inproceedings{Glig13a,
  author = {Gligoric, Milos and Groce, Alex and Zhang, Chaoqiang and Sharma, Rohan and Alipour, Mohammad Amin and Marinov, Darko},
  title = {Comparing Non-adequate Test Suites using Coverage Criteria},
  booktitle = {International Symposium on Software Testing and Analysis},
  year = {2013}}

@inproceedings{Glig14a,
  author = {Gligoric, Milos and Negara, Stas and Legunsen, Owolabi and Marinov, Darko},
  title = {{An Empirical Evaluation and Comparison of Manual and Automated Test Selection}},
  booktitle = {Proceedings of the 29th ACM/IEEE international conference on Automated software engineering},
  pages = {361--372},
  year = {2014},
  organization = {ACM}}

@inproceedings{Glig15a,
  author = {Gligoric, Milos and Eloussi, Lamyaa and Marinov, Darko},
  title = {Practical Regression Test Selection with Dynamic File Dependencies},
  booktitle = {Proceedings of the 2015 International Symposium on Software Testing and Analysis},
  pages = {211--222},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2771783.2771784},
  doi = {10.1145/2771783.2771784},
  acmid = {2771784},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3620-8},
  keywords = {Regression test selection, file dependencies},
  location = {Baltimore, MD, USA},
  numpages = {12},
  series = {ISSTA 2015}}

@phdthesis{Gloo89a,
  author = {Peter Gloor},
  title = {Synchronisation in verteilten Systemen},
  year = {1989},
  school = {B.G. Teubner, Stuttgart},
  number = {University of Zurich},
  type = {{Ph.D}. Thesis}}

@inproceedings{God05a,
  author = {Godefroid, Patrice and Klarlund, Nils and Sen, Koushik},
  title = {D{ART}: Directed Automated Random Testing},
  booktitle = {Programming Language Design and Implementation (PLDI '05)},
  year = {2005},
  doi = {10.1145/1065010.1065036}}

@inproceedings{Gode05a,
  author = {Patrice Godefroid and Nils Klarlund and Koushik Sen},
  title = {DART: directed automated random testing},
  booktitle = {Proceedings of Programming Language Design and Implementation (PLDI'05)},
  pages = {213--223},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1065010.1065036},
  isbn = {1-59593-056-6}}

@inproceedings{Godf00a,
  author = {Michael W. Godfrey and Eric H. S. Lee},
  title = {Secrets from the Monster: Extracting {Mozilla}'s Software Architecture},
  booktitle = {Proc. of the Second Intl. Symposium on Constructing Software Engineering Tools (CoSET-00)},
  year = {2000},
  url = {http://plg.uwaterloo.ca/~migod/papers/coset00.pdf},
  month = jun}

@inproceedings{Godf00b,
  author = {Michael Godfrey and Qiang Tu},
  title = {Evolution in Open Source Software: A Case Study},
  booktitle = {Proceedings International Conference on Software Maintenance ({ICSM} 2000)},
  pages = {131--142},
  publisher = {IEEE Computer Society Press},
  year = {2000},
  address = {Los Alamitos CA}}

@inproceedings{Godf01a,
  author = {Michael Godfrey and Qiang Tu},
  title = {Growth, Evolution, and Structural Change in Open Source Software},
  booktitle = {Proceedings of the 4th International Workshop on Principles of Software Evolution (IWPSE '01)},
  pages = {103--106},
  publisher = {ACM Press},
  year = {2001},
  doi = {10.1145/602461.602482},
  address = {Vienna, Austria}}

@inproceedings{Godf02a,
  author = {Michael Godfrey Qiang Tu},
  title = {Tracking Structural Evolution using Origin Analysis},
  booktitle = {Proceedings of the International Workshop on Principles of Software Evolution},
  pages = {117--119},
  publisher = {ACM Press},
  year = {2002},
  url = {http://plg.uwaterloo.ca/~migod/papers/iwpse02.pdf},
  organization = {SIGSOFT}}

@proceedings{Godi01a,
  title = {LMO 2001: L'Objet, logiciel, bases de donnees, reseaux},
  year = {2001},
  editor = {Robert Godin and Isabelle Borne}}

@inproceedings{Godi02a,
  author = {Robert Godin and Marianne Huchard and Cyrill Roume and Petko Valtchev},
  title = {Inheritance and {Automation}: {Where} {Are} {We} {Now}?},
  booktitle = {ECOOP 2002: Proceedings of the Inheritance Workshop},
  pages = {58--64},
  publisher = {University of Jyv\"askyl\"a},
  year = {2002},
  editor = {Andrew Black and Erik Ernst and Peter Grogono and Markky Sakkinen},
  month = jun}

@inproceedings{Godi93a,
  author = {Robert Godin and Hafedh Mili},
  title = {Building and {Maintaining} {Analysis}-{Level} {Class} {Hierarchies} using {Galois} {Lattices}},
  booktitle = {Proceedings OOPSLA '93 (8th Conference on Object-Oriented Programming Systems, Languages, and Applications)},
  volume = {28},
  pages = {394--410},
  year = {1993},
  location = {Washington, DC, USA},
  month = oct}

@article{Godi94a,
  author = {Godin, R. and Missaoui, R.},
  title = {An Incremental Concept Formation Approach for Learning from Databases},
  journal = {Theoretical Computer Science, Special Issue on Formal Methods in Databases and Software Engineering},
  volume = {133},
  pages = {387--419},
  year = {1994}}

@article{Godi95a,
  author = {Robert Godin and Guy Mineau and Rokia Missaoui and Marc St-Germain and Najib Faraj},
  title = {Applying {Concept} {Formation} {Methods} to {Software} {Reuse}},
  journal = {International Journal of Knowledge Engineering and Software Engineering},
  volume = 5,
  pages = {119--142},
  year = {1995},
  number = 1}

@inproceedings{Godi95b,
  author = {Robert Godin and Guy Mineau and Rokia Missaoui},
  title = {Incremental {Structuring} of {Knowledge} {Bases}},
  booktitle = {Proceedings of KRUSE '95 (International Symposium on Knowledge Retrieval, Use, and Storage for Efficiency)},
  pages = {179--198},
  publisher = {Springer-Verlag},
  year = {1995},
  location = {Santa Cruz, California, USA},
  series = {LNAI}}

@article{Godi98a,
  author = {Robert Godin and Hafedh Mili and Guy W. Mineau and Rokia Missaoui and Amina Arfi and Thuy-Tien Chau},
  title = {Design of {Class} {Hierarchies} based on {Concept} ({Galois}) {Lattices}},
  journal = {Theory and Application of Object Systems},
  volume = {4},
  pages = {117--134},
  year = {1998},
  number = {2}}

@article{Goed02,
  author = {Goedicke, Michael and Zdun, Uwe},
  title = {Piecemeal legacy migrating with an architectural pattern language: A case study},
  journal = {Journal of Software Maintenance and Evolution: Research and Practice},
  volume = {14},
  pages = {1--30},
  publisher = {Wiley Online Library},
  year = {2002},
  number = {1}}

@inproceedings{Goem11a,
  author = {Goeminne, M. and Mens, T.},
  title = {{Evidence for the Pareto principle in Open Source Software Activity}},
  booktitle = {Proc. Int'l Workshop SQM 2011},
  publisher = {CEUR-WS workshop proceedings},
  year = {2011}}

@inproceedings{Goer05a,
  author = {Carsten G\"org and Peter Weissgerber},
  title = {Detecting and Visualizing Refactorings from Software Archives},
  booktitle = {Proceedings of IWPC (13th International Workshop on Program Comprehension},
  pages = {205--214},
  publisher = {IEEE CS Press},
  year = {2005}}

@inproceedings{Goer89a,
  author = {Steven K. Goering and Simon M. Kaplan},
  title = {Visual Concurrent Programming in {GARP}},
  booktitle = {Proceedings PARLE '89, Vol II},
  volume = {366},
  pages = {165--180},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Eindhoven},
  editor = {E. Odijk and J-C. Syre},
  month = jun,
  series = {LNCS}}

@book{Goet06a,
  author = {Brian Goetz and Tim Peierls and Joshua Bloch and Joseph Bowbeer and David Holmes and Doug Lea},
  title = {Java Concurrency in Practice},
  publisher = {Addison Wesley},
  year = {2006},
  isbn = {978-0321349606}}

@incollection{Goet91a,
  author = {Jean-Marc Goetz and Carl Verhoest and Joel Brunet},
  title = {O*: The Business Class Analysis Model},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@misc{Gofer,
  url = {http://www.lukas-renggli.ch/blog/gofer},
  key = {Gofer},
  note = {Gofer is a tool on top of Monticello that performs versioning operations as clean as possible on Monticello packages.}}

@inproceedings{Gogu82a,
  author = {Joseph A. Goguen and J Meseguer},
  title = {Security Policies and security models},
  booktitle = {IEEE Symposium on Security and Privacy},
  pages = {11-20},
  year = {1982}}

@inproceedings{Gogu86a,
  author = {Joseph A. Goguen},
  title = {One, None, a Hundred Thousand Specification Languages},
  booktitle = {Proceedings IFIP '86},
  publisher = {North-Holland},
  year = {1986}}

@article{Gogu86b,
  author = {Joseph A. Goguen and Jos\'e Meseguer},
  title = {Extensions and Foundations of Object-Oriented Programming},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {153--162},
  year = {1986},
  month = oct,
  number = {10}}

@article{Gogu86c,
  author = {Joseph A. Goguen},
  title = {Reusing and Interconnecting Software Components},
  journal = {IEEE Computer},
  pages = {16--28},
  year = {1986},
  month = feb}

@inproceedings{Gogu90a,
  author = {Joseph A. Goguen and David Wolfram},
  title = {On Types and {FOOPS}},
  booktitle = {Proc. IFIP TC2 Working Conference on Database Semantics: Object-Oriented Databases},
  year = {1990},
  misc = {July 2-6},
  address = {Windermere, UK},
  month = jul,
  note = {To appear}}

@article{Gogu90b,
  author = {Joseph A. Goguen},
  title = {Sheaf Semantics for Concurrent Interacting Objects},
  journal = {Mathematical Structures in Computer Science},
  year = {1990},
  note = {To appear}}

@inproceedings{Gogu90c,
  author = {Joseph A. Goguen},
  title = {Types as Theories},
  booktitle = {Proc. of Symposium on General Topology and Applications},
  publisher = {Oxford University Press},
  year = {1990},
  note = {To appear}}

@article{Gogu95a,
  author = {Joseph A. Goguen and Adolfo Socorro},
  title = {Module Composition and System Design for the Object Paradigm},
  journal = {Journal of Object-Oriented Programming},
  pages = {47--55},
  year = {1995},
  month = feb}

@inproceedings{Gogu99a,
  author = {Joseph Goguen and Grigore Ro{\c{s}}u},
  title = {Hiding More of Hidden Algebra},
  booktitle = {Proceedings of FM '99},
  pages = {1704--1719},
  year = {1999},
  url = {http://www-cse.ucsd.edu/users/goguen/projs/halg.html},
  address = {Toulouse, France},
  month = aug}

@inproceedings{Gogu99b,
  author = {Joseph Goguen},
  title = {Hidden Algebra for Software Engineering},
  booktitle = {Proceedings Combinatorics, Computation and Logic},
  volume = {21},
  pages = {35--59},
  publisher = {Springer Verlag},
  year = {1999},
  url = {http://www-cse.ucsd.edu/users/goguen/projs/halg.html},
  address = {Auckland, New Zealand},
  month = jan}

@inproceedings{Goke02a,
  author = {Ayse G\"oker and Hans I. Myrhaug},
  title = {User context and Personalisation},
  booktitle = {ECCBR Workshop on Case Based Reasoning and Personalisation},
  year = {2002},
  url = {https://www.cs.tcd.ie/cbrpws/Papers/AGoker.pdf},
  address = {Aberdeen, UK},
  note = {invited paper}}

@inproceedings{Gold03a,
  author = {Nicolas Gold and Andrew Mohan},
  title = {A Framework for Understanding Conceptual Changes in Evolving Source Code},
  booktitle = {Proceedings of International Conference on Software Maintenance 2003 ({ICSM} 2003)},
  pages = {432--439},
  year = {2003},
  month = sep}

@inproceedings{Gold05a,
  author = {Simon Goldsmith and Robert O'Callahan and Alex Aiken},
  title = {Relational Queries over Program Traces},
  booktitle = {Proceedings of Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'05)},
  pages = {385--402},
  publisher = {ACM Press},
  year = {2005},
  address = {New York, NY, USA}}

@inproceedings{Gold77a,
  author = {Ira P. Goldstein and R. Bruce Roberts},
  title = {NUDGE, a Knowledge-Based Scheduling Program},
  booktitle = {Proceedings of the Fifth International Joint Conference on Artifical Intelligence},
  pages = {257--263},
  year = {1977}}

@inproceedings{Gold80a,
  author = {Ira Goldstein},
  title = {Integrating a Network-Structured Database into an Object-Oriented Programming Language},
  booktitle = {Proceedings of the Workshop on Data Abstraction Database and Conceptual Modelling},
  year = {1980},
  misc = {June 23-26},
  address = {Pingree Park, Colorado},
  editor = {M.L. Brodie and S.N. Zilles},
  month = jun}

@inproceedings{Gold80b,
  author = {Ira P. Goldstein and Daniel G. Bobrow},
  title = {Extending Object-Oriented Programming in {Smalltalk}},
  booktitle = {Proceedings of the Lisp Conference},
  pages = {75--81},
  year = {1980},
  month = aug}

@techreport{Gold80c,
  author = {Ira P. Goldstein and Daniel G. Bobrow},
  title = {A Layered Approach to Software Design},
  year = {1980},
  institution = {Xerox PARC},
  month = dec,
  number = {CSL-80-5}}

@inproceedings{Gold80d,
  author = {Ira P. Goldstein and Daniel G. Bobrow},
  title = {Descriptions for a Programming Environment},
  booktitle = {Proceedings of the First Annual Conference of the National Association for Artificial Intelligence},
  year = {1980},
  month = aug}

@techreport{Gold81a,
  author = {Ira P. Goldstein and Daniel G. Bobrow},
  title = {An Experimental Description-based Programming Environment: Four Reports},
  year = {1981},
  institution = {Xerox PARC},
  month = mar,
  number = {CSL 81-3}}

@book{Gold83a,
  author = {Adele Goldberg and David Robson},
  title = {{Smalltalk} 80: the Language and its Implementation},
  publisher = {Addison Wesley},
  year = {1983},
  url = {http://stephane.ducasse.free.fr/FreeBooks/BlueBook/Bluebook.pdf},
  address = {Reading, Mass.},
  isbn = {0-201-13688-0},
  month = may}

@book{Gold84a,
  author = {Adele Goldberg},
  title = {{Smalltalk} 80: the Interactive Programming Environment},
  publisher = {Addison Wesley},
  year = {1984},
  address = {Reading, Mass.},
  isbn = {0-201-11372-4}}

@incollection{Gold84b,
  author = {Ira P. Goldstein and Daniel G. Bobrow},
  title = {A Layered Approach to Software Design},
  booktitle = {Interactive Programming Environments},
  pages = {387--413},
  publisher = {McGraw-Hill, New York},
  year = {1984},
  editor = {D. R. Barstow and H. E. Shrobe and E. Sandewall}}

@book{Gold89a,
  author = {Adele Goldberg and Dave Robson},
  title = {Smalltalk-80: The Language},
  publisher = {Addison Wesley},
  year = {1989},
  isbn = {0-201-13688-0}}

@inproceedings{Gold91a,
  author = {Eric Gold and Mary Beth Rosson},
  title = {Portia: {An} Instance-Centered Environment for {Smalltalk}},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {62--74},
  year = {1991},
  month = nov}

@book{Gold95a,
  author = {Adele Goldberg and Kenneth S. Rubin},
  title = {Succeeding With Objects: Decision Frameworks for Project Management},
  publisher = {Addison Wesley},
  year = {1995},
  address = {Reading, Mass.},
  isbn = {0-201-62878-3}}

@inproceedings{Gold96a,
  author = {Adele Goldberg},
  title = {Measurement Strategies},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {1},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Goll95a,
  author = {K. Gollmer and C. Posten},
  title = {Detection of distorted pattern using dynamic time warping algorithm and application for the supervision of bioprocesses},
  booktitle = {On-Line Fault Detection and Supervision in Chemical Process Industries.},
  year = {1995}}

@inproceedings{Golm01a,
  author = {Golm, M. and Kleinder, E. and Bellosa, F.},
  title = {Beyond Address Spaces-Flexibility, Performance, Protection, and Resource Management in the Type-Safe JX Operating System},
  booktitle = {Hot Topics in Operating Systems, 2001. Proceedings of the Eighth Workshop on},
  pages = {3--8},
  year = {2001},
  organization = {IEEE}}

@inproceedings{Golm02a,
  author = {Golm, Michael and Felser, Meik and Wawersich, Christian and Klein\"{o}der, J\"{u}rgen},
  title = {The JX Operating System},
  booktitle = {ATEC '02: Proceedings of the General Track of the annual conference on USENIX Annual Technical Conference},
  pages = {45--58},
  publisher = {USENIX Association},
  year = {2002},
  address = {Berkeley, CA, USA},
  isbn = {1-880446-00-6}}

@inproceedings{Golm99,
  author = {Michael Golm and J{\"u}rgen Klein{\"o}der},
  title = {Jumping to the Meta Level: Behavioral Reflection Can Be Fast and Flexible},
  booktitle = {Reflection},
  pages = {22--39},
  year = {1999}}

@inproceedings{Golm99a,
  author = {Golm, Michael and Klein\"{o}der, J\"{u}rgen},
  title = {Jumping to the Meta Level: Behavioral Reflection Can Be Fast and Flexible},
  booktitle = {Reflection '99: Proceedings of the Second International Conference on Meta-Level Architectures and Reflection},
  pages = {22--39},
  publisher = {Springer-Verlag},
  year = {1999},
  address = {London, UK},
  isbn = {3-540-66280-4}}

@mastersthesis{Golo01a,
  author = {Georges Golomingi Koni-N'sapu},
  title = {A Scenario Based Approach for Refactoring Duplicated Code in Object Oriented Systems},
  year = {2001},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Golo01a.pdf},
  abstract = {Code duplication is one of the factors that severely
complicates the maintenance and evolution of large
software systems. Tools exist that allow detection
of duplicated code. Technics to change, correct and
improve code exist also. But it is difficult to find
programs that work between both domains. In this
work, we discuss a scenario based approach to
analyze, categorize and remove duplicated code in an
object oriented context. The scenario is defined as
the relationship between classes containing methods
where the duplications were found. A prototype
framework, SUPREMO, has been developed to validate
our approach. It is characterized by the following
aspect: (a) Visualization of the scenario in a
graphical global context that gives the developer
the possibility to see the impact of the
duplication. (b) Visualization of the source code in
a textual viewer where a pop-up menu gives the user
the opportunity to refactor. Nine case studies
(seven written in Smalltalk, one in C++ and one in
Java) are analyzed. A presentation of statistical
results and a discussion about the qualitative
aspect of three applications developed in the SCG
group are presented. The qualitative validation is
illustrated with a list of examples that simulate
the functioning of SUPREMO.},
  month = jun,
  type = {Diploma thesis}}

@book{Golu80a,
  author = {Martin Charles Golumbic},
  title = {Algorithmic Graph Theory and Perfect Graphs},
  publisher = {Academic Press},
  year = {2004}}

@book{Golu96,
  author = {Gene H. Golub and Charles F. Van Loan},
  title = {Matrix computations},
  pages = {698},
  publisher = {The Johns Hopkins University Press},
  year = {1996},
  address = {Baltimore, MD, USA},
  edition = {Third},
  isbn = {0-8018-5413-X, 0-8018-5414-8},
  series = {Johns Hopkins Studies in the Mathematical Sciences}}

@misc{Goma92a,
  author = {Hassan Gomaa},
  title = {Domain Modeling for Requirements Reuse and Evolution},
  year = {1992},
  month = jun,
  note = {Draft}}

@misc{Goma92b,
  author = {Hassan Gomaa and Larry Kerschberg and Vijayan Sugumaran},
  title = {A Knowledge-Based Approach to Generating Target System Specifications from a Domain Model},
  year = {1992},
  note = {To be presented at the IFIP World Computer Congress, Madrid Spain, 1992}}

@incollection{Gond93a,
  author = {Katsuhiko Gondow and Takashi Imaizumi and Yoichi Shinoda and Takuya Katayama},
  title = {Change Management and Consistency Maintenance in Software Development Environments Using Object Oriented Attribute Grammars},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {77--94},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {In this paper, we consider describing software
development environments (SDEs) using a
computational model OOAG (Object Oriented Attribute
Grammar), which incorporates functions for managing
changes and maintaining consistency. In SDEs, the
change management and consistency maintenance are
key issues and OOAG is suitable for describing them.
Software objects in SDEs have many derived values,
and software objects and their derived values have
complex relations with each other. Careless human
activities often cause inconsistencies among
software objects and it usually costs a lot to
recover them. OOAG provides declarative descriptions
to re-compute automatically derived values based on
change propagation and to check relations among
software objects, which help recovering activities
of programmers. OOAG treats SDEs as aggregated
active objects, i.e. tree structures, where software
products are distributed. Managing changes of
derived values and consistency among software
objects are described over tree structures in
declarative manner. Attributes associated with nodes
are re-computed automatically, if necessary. OOAG is
a computational model with the following extensions
to standard attribute grammars (AGs): (1) OOAG can
change tree structures depending upon their
attribute values. (AGs hat have this function are
called higher order attribute grammars). (2) OOAG
can describe message passing which pastes temporary
attributes and their attribution rules to the tree
structure. The aim of this paper is to show that our
approach of treating SDEs as aggregated objects is
natural and OOAG's features are suited for the task
of describing change management and consistency
control in structure-oriented software development
environments.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Gong09a,
  author = {Li Gong},
  title = {Java Security: A Ten Year Retrospective},
  booktitle = {Proceedings of ACSAC'09},
  pages = {??--??},
  year = {2009}}

@inproceedings{Gong97a,
  author = {Li Gong},
  title = {New security architectural directions for Java},
  booktitle = {Proceedings of CompCon},
  pages = 97,
  publisher = {IEEE Computer Society},
  year = {1997},
  url = {http://dx.doi.org/10.1109/CMPCON.1997.584679},
  doi = {10.1109/CMPCON.1997.584679}}

@inproceedings{Gong97b,
  author = {Gong, Li and Mueller, Marianne and Prafullchandra, Hemma and Schemers, Roland},
  title = {Going beyond the sandbox: an overview of the new security architecture in the javaTM development Kit 1.2},
  booktitle = {Proceedings of the USENIX Symposium on Internet Technologies and Systems on USENIX Symposium on Internet Technologies and Systems},
  pages = {10--10},
  publisher = {USENIX Association},
  year = {1997},
  url = {http://portal.acm.org/citation.cfm?id=1267279.1267289},
  acmid = {1267289},
  address = {Berkeley, CA, USA},
  location = {Monterey, California},
  numpages = {1}}

@book{Gong99a,
  author = {Li Gong},
  title = {Inside {Java} 2 Platform Security},
  publisher = {Addison Wesley},
  year = {1999},
  series = {The {Java} Series}}

@inproceedings{Gonz07a,
  author = {Sebasti\'{a}n Gonz\'{a}lez and Kim Mens and Patrick Heymans},
  title = {Highly dynamic behaviour adaptability through prototypes with subjective multimethods},
  booktitle = {DLS '07: Proceedings of the 2007 symposium on Dynamic languages},
  pages = {77--88},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297081.1297094},
  address = {New York, NY, USA},
  isbn = {978-1-59593-868-8},
  location = {Montreal, Quebec, Canada}}

@book{Gonz77a,
  author = {R. Gonzalez and P. Wintz},
  title = {Digital Image Processing},
  publisher = {Addison Wesley},
  year = {1977},
  address = {Reading, Mass.}}

@book{Good16,
  author = {Ian Goodfellow and Yoshua Bengio and Aaron Courville},
  title = {Deep Learning},
  publisher = {MIT Press},
  year = {2016},
  note = {\url{http://www.deeplearningbook.org}}}

@inproceedings{Good81a,
  author = {M. Good},
  title = {Etude and the Folklore of User Interface Design},
  booktitle = {Proceedings of the ACM SIGPLAN SIGOA Symposium on Text Manipulation},
  year = {1981},
  misc = {June 8-10},
  address = {Portland, Oregon},
  month = jun}

@book{Good87a,
  author = {Danny Goodman},
  title = {The Complete HyperCard 2.2 Handbook},
  publisher = {iUniverse},
  year = {1998},
  isbn = {1583480048}}

@misc{Good97a,
  author = {Goodnow II, James E. and Jonathan I. Helfman and Thaddeus J. Kowalski and John J. Puttress and James R. Rowland and Carl R. Seaquist},
  title = {Method of identifying similarities in code segments},
  year = {1997},
  url = {http://patft.uspto.gov/netahtml/search-bool.html},
  howpublished = {United States Patent 5,699,507},
  month = dec}

@book{Goos94a,
  author = {Michael Goossens and Frank Mittelbach and Alexander Samarin},
  title = {The Latex Companion},
  publisher = {Addison Wesley},
  year = {1994},
  isbn = {0-201-54199-8}}

@book{Goos97a,
  author = {Michel Goossens and Sebastian Rahtz and Frank Mittelbach},
  title = {The LaTeX Graphics Companion: Illustrating Documents with TeX and Postscript(R) (Tools and Techniques for Computer Typesetting)},
  publisher = {Addison-Wesley},
  year = {2007},
  isbn = {0321508920 978-0321508928}}

@book{Goos99a,
  author = {Michael Goossens and Sebastian Rahtz},
  title = {The LaTex Web Companion},
  publisher = {Addison Wesley},
  year = {1999}}

@article{Gopi08a,
  author = {Madhu Gopinathan and Sriram K. Rajamani},
  title = {Enforcing object protocols by combining static and runtime analysis},
  journal = {SIGPLAN Not.},
  volume = {43},
  pages = {245--260},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1449955.1449784},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {10}}

@inproceedings{Gord07a,
  author = {Donald Gordon and James Noble},
  title = {Dynamic ownership in a dynamic language},
  booktitle = {DLS '07: Proceedings of the 2007 symposium on Dynamic languages},
  pages = {41--52},
  publisher = {ACM},
  year = {2007},
  address = {New York, NY, USA},
  editor = {Pascal Costanza and Robert Hirschfeld},
  isbn = {978-1-59593-868-8},
  location = {Montreal, Quebec, Canada}}

@book{Gord79a,
  author = {M.J.C. Gordon and A.J. Milner and C.P. Wadsworth},
  title = {Edinburgh {LCF}},
  volume = {78},
  publisher = {Springer-Verlag},
  year = {1979},
  series = {LNCS}}

@book{Gord79b,
  author = {M.J.C. Gordon},
  title = {The Denotational Description of Programming Languages},
  publisher = {Springer-Verlag},
  year = {1979}}

@book{Gord81a,
  author = {A. D. Gordon},
  title = {Classification: Methods for the Exploratory Analysis of Multivariate Data},
  publisher = {Chapman \& Hall Ltd.},
  year = {1981},
  address = {London}}

@inproceedings{Gord97a,
  author = {Andrew D. Gordon and Paul D. Hankin and S. B. Lassen},
  title = {Compilation and Equivalence of Imperative Objects},
  booktitle = {Proceedings FST+TCS '97},
  publisher = {Springer-Verlag},
  year = {1997},
  url = {http://research.microsoft.com/~adg/Publications/details.html},
  month = dec,
  series = {LNCS}}

@inproceedings{Gord98a,
  author = {Andrew D. Gordon and Paul D. Hankin},
  title = {A Concurrent Object Calculus: Reduction and Typing},
  booktitle = {Proceedings HLCL '98},
  publisher = {Elsevier ENTCS},
  year = {1998},
  url = {http://research.microsoft.com/~adg/Publications/details.html}}

@book{Gore96a,
  author = {Jacob Gore},
  title = {Object Structures: Building Object-Oriented Software Components with Eiffel},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63480-5}}

@book{Gosl00a,
  author = {James Gosling and Bill Joy and Guy Steele and Gilad Bracha},
  title = {The {Java} Language Specification, Second Edition},
  publisher = {Addison Wesley},
  year = {2000},
  isbn = {0-201-31008-2}}

@book{Gosl05a,
  author = {James Gosling and Bill Joy and Guy Steele and Gilad Bracha},
  title = {The {Java} Language Specification (Third Edition)},
  publisher = {Addison Wesley},
  year = {2005},
  isbn = {0-321-24678-0}}

@phdthesis{Gosl83a,
  author = {J. Gosling},
  title = {Algebraic Constraints},
  year = {1983},
  school = {Carnegie Mellon University}}

@book{Gosl95a,
  author = {James Gosling and H. McGilton},
  title = {The {Java} Language Environment},
  publisher = {Sun Microsystems Computer Company},
  year = {1995},
  month = may}

@book{Gosl96a,
  author = {James Gosling and Bill Joy and Guy Steele},
  title = {The {Java} Language Specification},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63451-1}}

@book{Gosl96b,
  author = {James Gosling and Frank Yelling and The {Java} Team},
  title = {The {Java} Application Programming Interface Volume 1},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63453-8}}

@book{Gosl96c,
  author = {James Gosling and Frank Yelling and The {Java} Team},
  title = {The {Java} Application Programming Interface Volume 2},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63459-7}}

@inproceedings{Goss90a,
  author = {Sanjiv Gossain and Bruce Anderson},
  title = {An Iterative-Design Model for Reusable Object-Oriented Software},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {12--27},
  year = {1990},
  month = oct}

@article{Goth05a,
  author = {Greg Goth},
  title = {Beware the March of This {IDE}: {Eclipse} Is Overshadowing Other Tool Technologies},
  journal = {IEEE Software},
  volume = {22},
  pages = {108--111},
  year = {2005},
  url = {http://csdl.computer.org/comp/mags/so/2005/04/s4108.pdf},
  doi = {10.1109/MS.2005.96},
  number = {4}}

@article{Gott12a,
  author = {Gottschalk, Marion and Josefiok, Mirco and Jelschen, Jan and Winter, Andreas},
  title = {Removing energy code smells with reengineering services},
  journal = {INFORMATIK 2012},
  publisher = {Gesellschaft f{\"u}r Informatik eV},
  year = {2012}}

@inproceedings{Gott16a,
  author = {Gotti, Zineb and Mbarki, Samir},
  title = {Java Swing Modernization Approach - Complete Abstract Representation based on Static and Dynamic Analysis:},
  booktitle = {Proceedings of the 11th International Joint Conference on Software Technologies},
  pages = {210--219},
  publisher = {{SCITEPRESS} - Science and Technology Publications},
  year = {2016},
  url = {http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0005986002100219},
  doi = {10.5220/0005986002100219},
  date = {2016},
  isbn = {978-989-758-194-6},
  langid = {english},
  shorttitle = {Java Swing Modernization Approach - Complete Abstract Representation based on Static and Dynamic Analysis},
  urldate = {2018-04-20}}

@article{Gott96a,
  author = {Georg Gottlob and Michael Schrefl and Brigitte R{\"o}ck},
  title = {Extending Object-Oriented Systems with Roles},
  journal = {ACM Transactions on Information Systems},
  volume = {14},
  pages = {268--296},
  year = {1996},
  month = jul,
  number = {3}}

@techreport{Gotz92a,
  author = {Norbert G{\"o}tz and Ulrich Herzog and Michael Rettelbach},
  title = {{TIPP}: {A} Language for Timed Processes and Performance Evaluation},
  year = {1992},
  institution = {Universit{\"a}t Erlangen-N{\"u}rnberg},
  month = mar,
  type = {Report Internal}}

@article{Goues12a,
  author = {Le Goues, Clair and ThanhVu Nguyen and Stephanie Forrest and Westley Weimer},
  title = {GenProg: A Generic Method for Automatic Software Repair},
  journal = {IEEE Transactions on Software Engineering},
  volume = {38},
  pages = {54--72},
  year = {2012},
  doi = {doi:10.1109/TSE.2011.104},
  number = {1}}

@article{Goul93a,
  author = {Jhon D. Gould and Jacob Ukelson and Stephen J. Boies},
  title = {Improving application development productivity by using {ITS}},
  journal = {Int. J. Man-Machine Studies},
  volume = {39},
  pages = {113--146},
  year = {1993}}

@inproceedings{Gous08a,
  author = {Gousios, Georgios and Kalliamvakou, Eirini and Spinellis, Diomidis},
  title = {Measuring developer contribution from software repository data},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {129--132},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370781},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@techreport{Gous14a,
  author = {Georgios Gousios and Andy Zaidman and Margaret-Anne Storey and van Deursen, Arie},
  title = {Work Practices and Challenges in Pull-Based Development: The Integrator's Perspective},
  year = {2014},
  institution = {Technical University Delft - SERG},
  number = {013}}

@misc{Gouy04a,
  author = {Gouy, Isaac and Brent, Fulgham},
  title = {The {C}omputer {L}anguage {B}enchmarks {G}ame},
  year = {2004},
  note = {http://benchmarksgame.alioth.debian.org/}}

@inproceedings{Govi00a,
  author = {Madhusudhan Govindaraju and Aleksander Slominski and Venkatesh Choppella and Randall Bramley and Dennis Gannon},
  title = {Requirements for and evaluation of RMI protocols for scientific computing},
  booktitle = {Supercomputing '00: Proceedings of the 2000 ACM/IEEE conference on Supercomputing (CDROM)},
  pages = {61},
  publisher = {IEEE Computer Society},
  year = {2000},
  address = {Washington, DC, USA},
  isbn = {0-7803-9802-5},
  location = {Dallas, Texas, United States}}

@techreport{Gowi96,
  author = {Gowing, Brendan and Cahill, Vinny},
  title = {Meta-Object Protocols for {C++}: The {Iguana} Approach},
  publisher = {University of Bologna},
  year = {1996},
  institution = {AAA},
  source = {http://www.tara.tcd.ie/bitstream/2262/32390/1/meta1.pdf}}

@techreport{Grac04a,
  author = {Lewis, Grace A and Wrage, Lutz},
  title = {Approaches to constructive interoperability},
  year = {2004},
  institution = {CARNEGIE-MELLON UNIV PITTSBURGH PA SOFTWARE ENGINEERING INST}}

@article{Graf86a,
  author = {Suzanne Graf and Joseph Sifakis},
  title = {A Logic for the Specification and Proof of Regular Controllable Processes of {CCS}},
  journal = {Acta Informatica},
  volume = {23},
  pages = {507--528},
  year = {1986},
  number = {5}}

@book{Grah93a,
  author = {Ian Graham},
  title = {Object-Oriented Methods},
  publisher = {Addison Wesley},
  year = {1993},
  edition = {2nd},
  isbn = {0-201-59371-8}}

@inproceedings{Grah94a,
  author = {P. Graham and K. Barker},
  title = {Effective Optimistic Concurrency Control in Multiversion Object Bases},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {313--328},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@misc{Graham,
  author = {Paul Graham},
  title = {Beating the averages},
  note = {http://www.paulgraham.com/avg.html}}

@inproceedings{Gran08a,
  author = {Scott Grant and James R. Cordy and David Skillicorn},
  title = {Automated Concept Location Using Independent Component Analysis},
  booktitle = {Proceedings of 15th Working Conference on Reverse Engineering ({WCRE}'08)},
  pages = {138--142},
  publisher = {IEEE Computer Society Press},
  year = {2008},
  address = {Los Alamitos CA},
  isbn = {978-0-7695-3429-9},
  location = {Pittsburgh, PA},
  month = oct}

@inproceedings{Gran18a,
  author = {Grano, Giovanni and Scalabrino, Simone and Gall, Harald C. and Oliveto, Rocco},
  title = {An Empirical Investigation on the Readability of Manual and Generated Test Cases},
  booktitle = {Proceedings of the 26th Conference on Program Comprehension},
  pages = {348--351},
  publisher = {Association for Computing Machinery},
  year = {2018},
  url = {https://doi.org/10.1145/3196321.3196363},
  doi = {10.1145/3196321.3196363},
  abstract = {Software testing is one of the most crucial tasks in the typical development process. Developers are usually required to write unit test cases for the code they implement. Since this is a time-consuming task, in last years many approaches and tools for automatic test case generation --- such as EvoSuite--- have been introduced. Nevertheless, developers have to maintain and evolve tests to sustain the changes in the source code; therefore, having readable test cases is important to ease such a process. However, it is still not clear whether developers make an effort in writing readable unit tests. Therefore, in this paper, we conduct an explorative study comparing the readability of manually written test cases with the classes they test. Moreover, we deepen such analysis looking at the readability of automatically generated test cases. Our results suggest that developers tend to neglect the readability of test cases and that automatically generated test cases are generally even less readable than manually written ones.},
  address = {New York, NY, USA},
  isbn = {9781450357142},
  keywords = {empirical software engineering, readability, automated testing},
  location = {Gothenburg, Sweden},
  numpages = {4},
  series = {ICPC '18}}

@book{Gran98b,
  author = {Mark Grant},
  title = {Patterns in {Java} Volume 1},
  publisher = {Willey},
  year = {1998},
  isbn = {0-471-25839-3}}

@phdthesis{Gran99a,
  author = {Calum A. McK. Grant},
  title = {Software Visualization in Prolog},
  year = {1999},
  school = {Queens' College, Cambridge},
  month = dec}

@inproceedings{Granc17a,
  author = {Granchelli, Giona and Cardarelli, Mario and Di Francesco, Paolo and Malavolta, Ivano and Iovino, Ludovico and Di Salle, Amleto},
  title = {Microart: A software architecture recovery tool for maintaining microservice-based systems},
  booktitle = {2017 IEEE International Conference on Software Architecture Workshops (ICSAW)},
  pages = {298--302},
  year = {2017},
  organization = {IEEE}}

@inproceedings{Gras86a,
  author = {J.E. Grass and R.H. Campbell},
  title = {Mediators: {A} Synchronization Mechanism},
  booktitle = {Proceedings of the IEEE Conference on Distributed Computing Systems},
  pages = {468--477},
  year = {1986},
  month = sep}

@article{Gras92a,
  author = {J.E. Grass},
  title = {Object-Oriented Design Archeology with {CIA}++},
  journal = {Computing Systems},
  volume = {5},
  pages = {5--67},
  year = {1992},
  number = {1}}

@article{Grass59a,
  author = {P. Grasse},
  title = {La Reconstruction du Nid et les Coordinations Inter-Individuelles chez Bellicositermes Natalensis et Cubitermes sp. La theorie de la Stigmergie: Essai d'Interpretation du Comportement des Termites Construcieurs},
  journal = {Insectes Sociaux},
  pages = {6:41--81},
  year = {1959}}

@inproceedings{Grass92a,
  author = {Judith E. Grass},
  title = {Cdiff: A Syntax Directed Differencer for C++ Programs},
  booktitle = {Proceddings of The Advanced Computing Systems Professional and Technical Association (USENIX) Conference C++},
  pages = {181-194},
  year = {1992},
  date-added = {2009-10-21 10:53:41 +0200},
  date-modified = {2009-10-21 10:56:04 +0200}}

@inproceedings{Grau01a,
  author = {Paul Graunke and Shriram Krishnamurthi and Van Der Hoeven, Steve and Matthias Felleisen},
  title = {Programming the Web with High-Level Programming Languages},
  booktitle = {Proceedings of ESOP 2001},
  volume = {2028},
  pages = {122--136},
  year = {2001},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Grau01b,
  author = {Paul Graunke and Robert Bruce Findler and Shriram Krishnamurthi and Matthias Felleisen},
  title = {Automatically Restructuring Programs for the Web},
  booktitle = {International Conference on Automated Software Engineering},
  year = {2001}}

@inproceedings{Grau03a,
  author = {Paul Graunke and Shriram Krishnamurthi and Van Der Hoeven, Steve and Matthias Felleisen},
  title = {Modeling Web Interactions},
  booktitle = {Proceedings of ESOP 2003},
  volume = {2618},
  pages = {122--136},
  year = {2003},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Grau88a,
  author = {Nicolas Graube},
  title = {Reflexive Architecture: From {ObjVlisp} to {CLOS}},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {110--127},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Grau89a,
  author = {Nicolas Graube},
  title = {Metaclass Compatibility},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {305--316},
  year = {1989},
  month = oct}

@phdthesis{Grau98a,
  author = {Graudejus, H.},
  title = {Implementing a Concept Analysis Tool for Identifying Abstract Data Types in C Code},
  year = {1998},
  school = {Univeristy of Kaiserslautern},
  address = {Germany}}

@article{Grav00a,
  author = {T. L. Graves and A. F. Karr and J. S. Marron and H. Siy},
  title = {Predicting Fault Incidence Using Software Change History},
  journal = {IEEE Transactions on Software Engineering},
  volume = {26},
  year = {2000},
  number = {2}}

@article{Grav01a,
  author = {Graves, Todd L. and Harrold, Mary Jean and Kim, Jung-Min and Porter, Adam and Rothermel, Gregg},
  title = {{An Empirical Study of Regression Test Selection Techniques}},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  volume = {10},
  pages = {184--208},
  publisher = {ACM},
  year = {2001},
  url = {http://doi.acm.org/10.1145/367008.367020},
  doi = {10.1145/367008.367020},
  acmid = {367020},
  address = {New York, NY, USA},
  issn = {1049-331X},
  keywords = {empirical study, regression testing, selective retest},
  month = apr,
  number = {2},
  numpages = {25}}

@article{Grav12,
  author = {Graves, Alex},
  title = {Supervised sequence labelling with recurrent neural networks},
  journal = {ISBN 9783642212703},
  year = {2012}}

@phdthesis{Grav89a,
  author = {Justin Graver},
  title = {Type-Checking and Type-Inference for Object-Oriented Programming Languages},
  year = {1989},
  school = {University of Illinois at Urbana-Champaign},
  month = aug,
  number = {UIUC DCS-R-89-1539},
  type = {{Ph.D}. Thesis}}

@article{Gray05a,
  author = {Kathryn E. Gray and Robert Bruce Findler and Matthew Flatt},
  title = {Fine-grained interoperability through mirrors and contracts},
  journal = {SIGPLAN Not.},
  volume = {40},
  pages = {231--245},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1103845.1094830},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {10}}

@inproceedings{Gray08a,
  author = {Kathryn E. Gray},
  title = {Safe Cross-Language Inheritance},
  booktitle = {Proceedings {ECOOP}'08},
  volume = {5142},
  pages = {52-75},
  publisher = {Springer Verlag},
  year = {2008},
  series = {LNCS}}

@inproceedings{Gray81a,
  author = {J. Gray},
  title = {The Transaction Concept: Virtues and Limitations},
  booktitle = {Proceedings of the Seventh International Conference on Very Large Data Bases},
  pages = {144--154},
  year = {1981}}

@inproceedings{Gray86,
  author = {Jim Gray},
  title = {Why Do Computers Stop and What Can Be Done About It?},
  booktitle = {Symposium on Reliability in Distributed Software and Database Systems},
  pages = {3-12},
  year = {1986}}

@article{Grea11a,
  author = {Greamo, Chris and Ghosh, Anup},
  title = {Sandboxing and virtualization: Modern tools for combating malware},
  journal = {IEEE Security \& Privacy},
  volume = {9},
  pages = {79--82},
  publisher = {IEEE},
  year = {2011},
  number = {2}}

@inproceedings{Gree03a,
  author = {Jack Greenfield and Keith Short},
  title = {Software factories: assembling applications with patterns, models, frameworks and tools},
  booktitle = {OOPSLA '03: Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages = {16--27},
  publisher = {ACM},
  year = {2003},
  doi = {10.1145/949344.949348},
  address = {New York, NY, USA},
  isbn = {1-58113-751-6},
  location = {Anaheim, CA, USA},
  tokens = {dsllib}}

@inproceedings{Gree05d,
  author = {Orla Greevy and Michele Lanza and Christoph Wysseier},
  title = {Visualizing Feature Interaction in {3-D}},
  booktitle = {Proceedings of {VISSOFT} 2005 (3th IEEE International Workshop on Visualizing Software for Understanding)},
  pages = {114--119},
  year = {2005},
  url = {http://scg.unibe.ch/archive/papers/Gree05dTraceCrawlerVissoft2005.pdf},
  abstract = {Without a clear understanding of how features of a
software system are implemented, a maintenance
change in one part of the code may risk adversely
affecting other features. Feature implementation and
relationships between features are not explicit in
the code. To address this problem, we propose an
interactive 3D visualization technique based on a
combination of static and dynamic analysis which
enables the software developer to step through
visual representations of execution traces. We
visualize dynamic behaviors of execution traces in
terms of object creations and interactions and
represent this in the context of a static
class-hierarchy view of a system. We describe how we
apply our approach to a case study to visualize and
identify common parts of the code that are active
during feature execution.},
  cvs = {TraceCrawlerVissoft2005},
  month = sep}

@inproceedings{Gree05e,
  author = {Orla Greevy and Abdelwahab Hamou-Lhadj and Andy Zaidman},
  title = {Workshop on Program Comprehension through Dynamic Analysis ({PCODA})},
  booktitle = {12th Working Conference on Software Maintenance and Reengineering ({WCRE} 2005)},
  pages = {232--232},
  year = {2005},
  url = {http://www.lore.ua.ac.be/Events/PCODA2005/index.html http://www.lore.ua.ac.be/Events/PCODA2005/PCODA2005proceedings.pdf http://scg.unibe.ch/archive/papers/Gree05e-pcoda2005proceedings.pdf},
  doi = {10.1109/{WCRE}.2005.35},
  month = sep}

@inproceedings{Gree06a,
  author = {Orla Greevy and Michele Lanza and Christoph Wysseier},
  title = {Visualizing live Software Systems in 3{D}},
  booktitle = {Proceedings of SoftVis 2006 (ACM Symposium on Software Visualization)},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Gree06aTraceCrawlerSoftVis2006.pdf},
  doi = {10.1145/1148493.1148501},
  abstract = {The analysis of the runtime behavior of a software
system yields vast amounts of information, making
accurate interpretations difficult. Filtering or
compression techniques are often applied to reduce
the volume of data without loss of key information
vital for a specific analysis goal. Alternatively,
visualization is generally accepted as a means of
effectively representing large amounts of data. The
challenge lies in creating effective and expressive
visual representations that not only allows for a
global picture, but also enables us to inspect the
details of the large data sets. We define the focus
of our analysis to be the runtime behavior of
features. Static structural visualizations of a
system are typically represented in two dimensions.
We exploit a third dimension to visually represent
the dynamic information, namely object
instantiations and message sends. We introduce a
novel 3D visualization technique that supports
animation of feature behavior and integrates
zooming, panning, rotating and on-demand details. As
proof of concept, we apply our visualization
technique to feature execution traces of an example
system.},
  cvs = {TraceCrawlerSoftVis2006},
  medium = {2},
  month = sep}

@phdthesis{Gree07b,
  author = {Orla Greevy},
  title = {Enriching Reverse Engineering with Feature Analysis},
  year = {2007},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/greevy-phd.pdf},
  abstract = {System comprehension is a prerequisite for software
maintenance and evolution, but it is a
time-consuming and costly activity. In an effort to
support system comprehension, researchers have
devised many different reverse engineering
techniques. Several of these are based on statically
analyzing the source code. A purely static
perspective, however, overlooks valuable semantic
knowledge of a system's problem domain. To address
this problem, several researchers have identified
thee potential of exploiting features in a reverse
engineering context. Features are well-understood
abstractions of a problem domain. As such, they
represent a valuable resource for reverse
engineering a system, as they encapsulate knowledge
of a problem domain and denote units of system
behavior. The main body of feature-related reverse
engineering research is concerned with feature
identification, a technique to map features to
source code. To fully exploit features in reverse
engineering, however, we need to extend the focus
beyond feature identification and exploit features
as primary units of analysis. We formulate our
thesis as follows: To exploit the domain knowledge
for object-oriented system comprehension, we need to
model features, their relationships to source
artefacts, and their relationships to each other.
The main contribution of our work is twofold: on the
one hand, we enrich reverse engineering analysis of
object-oriented systems with semantic knowledge of
features, and on the other hand, we introduce new
techniques that treat features as the primary
entities of analysis A further contribution is our
definition of Dynamix, a model for expressing
feature entities in the context of a structural
model of source code. Using case studies, we
demonstrate how our analysis techniques exploit
feature knowledge to establish traceability between
the problem and solution domains throughout the
life-cycle of a system.},
  month = may}

@inproceedings{Gree07c,
  author = {Orla Greevy},
  title = {Dynamix --- a Meta-Model to Support Feature-Centric Analysis},
  booktitle = {Proceedings of FAMOOSr 2007 (Ist International Workshop on FAMIX and Moose in Reengineering)},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Gree07cDynamixFAMOOSr2007.pdf},
  abstract = {Many researchers have identified the potential of
exploiting domain knowledge in a reverse engineering
context. Features are abstractions that encapsulate
knowledge of a problem domain and denote units of
system behavior. As such, they represent a valuable
resource for reverse engineering a system. The main
body of feature-related reverse engineering research
is concerned with feature identification, a
technique to map features to source code. To fully
exploit features in reverse engineering, however, we
need to extend the focus beyond feature
identification and exploit features as primary units
of analysis. To incorporate features into reverse
engineering analyses, we need to explicitly model
features, their relationships to source artefacts,
and their relationships to each other. To address
this we propose Dynamix, am meta--model that
expresses feature entities in the context of a
structural meta-model of source code entities. Our
meta-model supports feature-centric reverse
engineering techniques that establish traceability
between the problem and solution domains throughout
the life-cycle of a system.},
  medium = {2},
  month = jun}

@inproceedings{Gree85a,
  author = {M. Green},
  title = {The University of Alberta User Interface Management System},
  booktitle = {Computer Graphics},
  volume = {19},
  pages = {205--213},
  year = {1985},
  month = jul,
  number = {3}}

@inproceedings{Gree95a,
  author = {R. Mark Greenwood},
  title = {Coordination Theory and Software Process Technology},
  booktitle = {Proceedings of the 4th European Workshop (EWSPT '95)},
  volume = {913},
  publisher = {Springer-Verlag},
  year = {1995},
  url = {ftp://ftp.cs.man.ac.uk/pub/IPG/mg95.ps.Z},
  address = {Noordwijkerhout, the Netherlands},
  month = apr,
  series = {LNCS}}

@inproceedings{Gree96a,
  author = {R. Mark Greenwood},
  title = {Cooperting Evolving Components --- a rigorous approach to evolving large software system},
  booktitle = {Proceedings 18th International Conference of Software Enginnering 1996},
  year = {1996},
  url = {ftp://ftp.cs.man.ac.uk/pub/IPG/gws96.ps.Z}}

@book{Gree99a,
  author = {Alan Greenspun},
  title = {Philip and Alex's Guide To Webpublishing},
  publisher = {Morgan Kaufman},
  year = {1999}}

@inproceedings{Gree99b,
  author = {Aaron Greenhouse and John Boyland},
  title = {An Object-Oriented Effects System},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {205--229},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {An effects systems describes how state may be
accessed during the execution of some program
component. This information is used to assist
reasoning about a program, such as determining
whether data dependencies may exist between two
computations. We define an effects system for {Java}
that preserves the abstraction facilities that make
object-oriented programming languages attractive.
Specifically, a subclass may extend abstract regions
of mutable state inherited from the superclass. The
effects system also permits an object's state to
contain the state of wholly-owned subsidiary
objects. In this paper, we describe a set of
annotations for declaring permitted effects in
method headers, and show how the actual effects in a
method body can be checked against the permitted
effects.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Greg03a,
  author = {Gregg, David and Ertl, M.},
  title = {A Language and Tool for Generating Efficient Virtual Machine Interpreters},
  booktitle = {Domain-Specific Program Generation '03},
  pages = {196-215},
  year = {2003},
  doi = {10.1007/978-3-540-25935-0_12},
  isbn = {978-3-540-22119-7},
  month = {jan}}

@incollection{Greg04a,
  author = {Gregg, David and Ertl, M Anton},
  title = {A language and tool for generating efficient virtual machine interpreters},
  booktitle = {Domain-Specific Program Generation},
  pages = {196--215},
  publisher = {Springer},
  year = {2004}}

@article{Greg05a,
  author = {David Gregg and Andrew Beatty and Kevin Casey and Brian Davis and Andy Nisbet},
  title = {The case for virtual register machines},
  journal = {Science of Computer Programming},
  volume = {57},
  pages = {319--338},
  publisher = {Elsevier},
  year = {2005},
  url = {https://mural.maynoothuniversity.ie/10190/},
  abstract = {Virtual machines (VMs) are a popular target for language implementers. A long-running question in the design of virtual machines has been whether stack or register architectures can be implemented more efficiently with an interpreter. Many designers favour stack architectures since the location of operands is implicit in the stack pointer. In contrast, the operands of register machine instructions must be specified explicitly. In this paper, we present a working system for translating stack-based Java virtual machine (JVM) code to a simple register code. We describe the translation process, the complicated parts of the JVM which make translation more difficult, and the optimisations needed to eliminate copy instructions. Experimental results show that a register format reduced the number of executed instructions by 34.88\%, while increasing the number of bytecode loads by an average of 44.81\%. Overall, this corresponds to an increase of 2.32 loads for each dispatch removed. We believe that the high cost of dispatches makes register machines attractive even at the cost of increased loads.},
  keywords = {Interpreter; Virtual machine; Register architecture; Stack architecture;},
  number = {3}}

@inproceedings{Greg11a,
  author = {Allan Raundahl Gregersen and Bo N{\o}rregaard J{\o}rgensen},
  title = {Run-time phenomena in dynamic software updating: causes and effects},
  booktitle = {12th International Workshop on Principles of Software Evolution},
  pages = {6--15},
  year = {2011},
  doi = {10.1145/2024445.2024448}}

@misc{Greg13a,
  author = {Gregersen, Allan Raundahl and Rasmussen, Michael and J{\o}rgensen, Bo N{\o}rregaard},
  title = {Dynamic Software Updating with Gosh! Current Status and the Road Ahead},
  year = {2013}}

@article{Grei00a,
  author = {Howard Greisdorf},
  title = {Relevance: An Interdisciplinary and Information Science Perspective},
  journal = {Informing Science},
  volume = {3},
  year = {2000},
  note = {Special Issue on Information Science Research},
  number = {2}}

@article{Gric20a,
  title={On the impact of interlanguage dependencies in multilanguage systems empirical case study on java native interface applications (JNI)},
  author={Grichi, Manel and Abidi, Mouna and Jaafar, Fehmi and Eghan, Ellis E and Adams, Bram},
  journal={IEEE Transactions on Reliability},
  volume={70},
  number={1},
  pages={428--440},
  year={2020},
  publisher={IEEE}
}

@misc{Grid,
  title = {Indiana University, Extreme! Computing Lab. Grid Web Services},
  url = {http://www.extreme.indiana.edu/xgws/},
  key = {Extreme! Computing Lab},
  note = {http://www.extreme.indiana.edu/xgws/}}

@article{Grie77a,
  author = {David Gries and N. Gehani},
  title = {Some Ideas on Data Types in High-Level Languages},
  journal = {CACM},
  volume = {20},
  pages = {414--420},
  year = {1977},
  month = jun,
  number = {6}}

@article{Grie81a,
  author = {Sam Grier},
  title = {A Tool that Detects Plagiarism in {PASCAL} Programs},
  journal = {SIGSCE Bulletin},
  volume = {13},
  year = {1981},
  number = {1}}

@book{Grif98a,
  author = {Frank Griffel},
  title = {Componentware: Konzepte und Techniken eines Softwareparadigmas},
  publisher = {dpunkt-Verlag},
  year = {1998},
  isbn = {3-932588-02-9}}

@techreport{Grim04a,
  author = {Robert Grimm},
  title = {Practical Packrat Parsing},
  year = {2004},
  url = {http://www.cs.nyu.edu/csweb/Research/TechReports/TR2004-854/TR2004-854.pdf},
  institution = {New York University}}

@inproceedings{Grim06a,
  author = {Robert Grimm},
  title = {Better extensibility through modular syntax},
  booktitle = {PLDI 2006},
  pages = {38--51},
  year = {2006},
  organization = {ACM}}

@inproceedings{Grim87a,
  author = {Andrew S. Grimshaw and Jane W.S. Liu},
  title = {Mentat: An Object-Oriented Macro Data Flow System},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {35--47},
  year = {1987},
  month = dec}

@inproceedings{Grimm13a,
  author = {Grimmer, Matthias and Rigger, Manuel and Stadler, Lukas and Schatz, Roland and M\"{o}ssenb\"{o}ck, Hanspeter},
  title = {An Efficient Native Function Interface for Java},
  booktitle = {Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools},
  year = {2013},
  keywords = {Graal, JNA, JNI, Java, Truffle, jblas, native code, native function interface, optimization},
  series = {PPPJ '13}}

@inproceedings{Gris01a,
  author = {William G. Griswold and Jimmy J. Juan and Yoshikiyo Kato},
  title = {Exploiting the Map Metaphor in a Tool for Software Evolution},
  booktitle = {Proceedings of the 2001 International Conference on Software Engineering (ICSE 2001)},
  year = {2001},
  month = mar,
  organization = {IEEE Computer Society}}

@article{Gris93d,
  author = {William G. Griswold and David Notkin},
  title = {Automated assistance for program restructuring},
  journal = {ACM Transaction of Software Engineering Methodologies},
  volume = {2},
  pages = {228--269},
  publisher = {ACM},
  year = {1993},
  doi = {10.1145/152388.152389},
  address = {New York, NY, USA},
  issn = {1049-331X},
  number = {3}}

@article{Gris95a,
  author = {William G. Griswold and David Notkin},
  title = {Architectural Tradeoffs for a Meaning-Preserving Program Restructuring Tool},
  journal = {IEEE Transactions on Software Engineering},
  volume = {21},
  pages = {275--287},
  year = {1995},
  month = apr,
  number = {4}}

@book{Gris96a,
  author = {Ralph E. Griswold and Madge T. Griswold},
  title = {The Icon Programming Language},
  publisher = {Peer-to-Peer Communications},
  year = {1996},
  url = {http://www.peer-to-peer.com/catalog/language/icon.html},
  isbn = {1-57398-001-3},
  month = dec}

@inproceedings{Gris96b,
  title={Fast, flexible syntactic pattern matching and processing},
  author={Griswold, William G and Atkinson, Darren C and McCurdy, Collin},
  booktitle={WPC'96. 4th Workshop on Program Comprehension},
  pages={144--153},
  year={1996},
  organization={IEEE}
}

@techreport{Gris98a,
  author = {William G. Griswold},
  title = {Coping With Software Change Using Software Transparency},
  year = {1998},
  url = {www.cs.ucsd.edu/users/wgg/Abstracts/infotrans.html},
  institution = {University of California, San Diego, Department of Computer Science and Engineering},
  month = apr,
  number = {CS98-585},
  revised = {August 1998},
  type = {Technical Report}}

@inproceedings{Groc13a,
  author = {A. {Groce} and C. {Zhang} and M. A. {Alipour} and E. {Eide} and Y. {Chen} and J. {Regehr}},
  title = {Help, help, i'm being suppressed! The significance of suppressors in software testing},
  booktitle = {2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE)},
  year = {2013},
  url = {https://ieeexplore.ieee.org/abstract/document/6698892/},
  urldate = {2021-04-20}}

@inproceedings{Groh98a,
  author = {B. Groh and S. Strahringer and R. Wille},
  title = {TOSCANA-Systems Based on Thesauri},
  booktitle = {Proceedings of the 6th International Conference on Conceptual Structures},
  pages = {127--138},
  publisher = {Springer Verlag},
  year = {1998},
  address = {Berlin},
  series = {LNAI 1453}}

@inproceedings{Groh99a,
  author = {B. Groh and P. Eklund},
  title = {Algorithms for Creating Relational Power Context Families from Conceptual Graphs},
  booktitle = {Conceptual Structures: Standards and Practices},
  pages = {389--400},
  publisher = {Springer Verlag},
  year = {1999},
  address = {Berlin},
  editor = {W. Tepfenhart and W. Cyre},
  series = {Lecture Notes in Artificial Intelligence}}

@inproceedings{Gron06a,
  author = {Guillaume Grondin and Noury Bouraqadi and Laurent Vercouter},
  title = {MaDcAr: an Abstract Model for Dynamic and Automatic (Re-)Assembling of Component-Based Applications},
  booktitle = {Proceedings of the 9th International Symposium on CBSE (Component-Based Software Engineering)},
  pages = {360-367},
  publisher = {Springer},
  year = {2006},
  address = {Sweden},
  month = {jun},
  series = {LNCS}}

@inproceedings{Gron06b,
  author = {Jessica Gronski and Kenneth Knowles and Aaron Tomb and Stephen N. Freund and Cormac Flanagan},
  title = {Sage: Hybrid Checking for Flexible Specifications},
  booktitle = {Scheme and Functional Programming Workshop},
  pages = {93--104},
  year = {2006}}

@inproceedings{Gros02a,
  author = {Grossman, D and Morrisett, J.G. and Jim, T. and Hicks, M. W. and Cheney, J},
  title = {Region-based memory management in Cyclone},
  booktitle = {Proceedings of PLDI},
  year = {2002}}

@inproceedings{Gros02b,
  author = {David Grosser and Houari A. Sahraoui and Petko Valtchev},
  title = {Predicting software stability using Case-Based Reasoning},
  booktitle = {Proceedings of the 17th IEEE International Conference on Automated Software Engienering (ASE '02)},
  pages = {295--298},
  year = {2002},
  doiu = {10.1109/ASE.2002.1115033}}

@book{Gros04a,
  author = {Gross},
  title = {Handbook of graph theory},
  publisher = {CRC Press},
  year = {2004}}

@article{Gros07a,
  author = {Dan Grossman},
  title = {The transactional memory / garbage collection analogy},
  journal = {SIGPLAN Notices},
  volume = {42},
  pages = {695--706},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297105.1297080},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {10}}

@article{Gros12a,
  author = {Grosse-Kunstleve, Ralf W. and Terwilliger, Thomas C. and Sauter, Nicholas K. and Adams, Paul D.},
  title = {Automatic Fortran to C++ conversion with FABLE},
  journal = {Source Code for Biology and Medicine},
  volume = {7},
  pages = {5},
  year = {2012},
  url = {https://doi.org/10.1186/1751-0473-7-5},
  doi = {10.1186/1751-0473-7-5},
  month = {may},
  day = {28},
  number = {1},
  abstract = {In scientific computing, Fortran was the dominant implementation language throughout most of the second part of the 20th century. The many tools accumulated during this time have been difficult to integrate with modern software, which is now dominated by object-oriented languages.},
  issn = {1751-0473}}

@inproceedings{Gros87a,
  author = {Mark Grossman and Raimund K. Ege},
  title = {Logical Composition of Object-Oriented Interfaces},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {295--306},
  year = {1987},
  month = dec}

@inproceedings{Grot01a,
  author = {Christian Grothoff and Jens Palsberg and Jan Vitek},
  title = {Encapsulating objects with confined types},
  booktitle = {Proceedings of the 16th ACM SIGPLAN conference on Object oriented programming, systems, languages, and applications (OOPSLA'01)},
  pages = {241--255},
  publisher = {ACM Press},
  year = {2001},
  url = {http://www.cs.ucla.edu/~palsberg/paper/oopsla01.pdf},
  doi = {10.1145/504282.504300},
  address = {New York, NY, USA},
  isbn = {1-58113-335-9},
  location = {Tampa Bay, FL, USA}}

@article{Grot07a,
  author = {Grottke, Michael and Trivedi, Kishor S.},
  title = {Fighting Bugs: Remove, Retry, Replicate, and Rejuvenate},
  journal = {Computer},
  volume = {40},
  pages = {107-109},
  year = {2007}}

@article{Grou81a,
  author = {{The Xerox Learning Research Group}},
  title = {The {Smalltalk}-80 System},
  journal = {Byte},
  volume = {6},
  pages = {36--48},
  year = {1981},
  institution = {The Xerox Learning Research Group},
  month = aug,
  number = {8}}

@article{Grov01a,
  author = {D. Grove and C. Chambers},
  title = {A Framework for Call Graph Construction Algorithms},
  journal = {ACM Trans.\ Program. Lang.\ Syst.},
  volume = 23,
  pages = {685--746},
  year = {2001},
  number = 6}

@inproceedings{Grov97a,
  author = {Grove, David and DeFouw, Greg and Dean, Jeffrey and Chambers, Craig},
  title = {Call Graph Construction in Object-oriented Languages},
  booktitle = {Proceedings of the 12th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
  pages = {108--124},
  publisher = {ACM},
  year = {1997},
  url = {http://doi.acm.org/10.1145/263698.264352},
  doi = {10.1145/263698.264352},
  acmid = {264352},
  address = {New York, NY, USA},
  isbn = {0-89791-908-4},
  location = {Atlanta, Georgia, USA},
  numpages = {17},
  series = {OOPSLA '97}}

@book{Grub03a,
  author = {Penny Grubb and Armstrong A. Takang},
  title = {Software Maintenance Concepts and Practices},
  publisher = {World Scientific},
  year = {2003},
  edition = {second edition}}

@inproceedings{Grun00a,
  author = {John Grundy and John Hosking},
  title = {High-Level Static and Dynamic Visualisation of Software Architectures},
  booktitle = {Symposium on Visual Languages},
  pages = {5--12},
  publisher = {IEEE Computer Society},
  year = {2000}}

@book{Grun08a,
  author = {Dick Grune and Ceriel J.H. Jacobs},
  title = {Parsing Techniques --- A Practical Guide},
  publisher = {Springer},
  year = {2008},
  url = {http://www.cs.vu.nl/~dick/PT2Ed.html},
  isbn = {038720248X}}

@article{Grun98a,
  author = {John Grundy and John Hosking and Warwick B. Mugridge},
  title = {Inconsistency Management for Multiple-View Software Development Environments},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {24},
  pages = {960--981},
  publisher = {IEEE Press},
  year = {1998},
  doi = {10.1109/32.730545},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {11}}

@inproceedings{Gsch03a,
  author = {Thomas Gschwind and Johann Oberleitner},
  title = {Improving Dynamic Data Analysis with Aspect-Oriented Programming},
  booktitle = {Proceedings of the Seventh European Conference on Software Maintenance and Reengineering (CSMR'03)},
  pages = {259},
  publisher = {IEEE Computer Society},
  year = {2003},
  address = {Washington, DC, USA},
  isbn = {0-7695-1902-4}}

@inproceedings{Gu03a,
  author = {Gu, Xiaohui and Nahrstedt, Klara and Messer, Alan and Greenberg, Ira and Milojicic, Dejan},
  title = {Adaptive Offloading Inference for Delivering Applications in Pervasive Computing Environments},
  booktitle = {Proceedings of the First IEEE International Conference on Pervasive Computing and Communications},
  pages = {107--},
  publisher = {IEEE Computer Society},
  year = {2003},
  url = {http://dl.acm.org/citation.cfm?id=826025.826367},
  acmid = {826367},
  address = {Washington, DC, USA},
  isbn = {0-7695-1893-1},
  series = {PERCOM '03}}

@article{Gu05a,
  author = {Gu, Dayong and Verbrugge, Clark and Gagnon, Etienne},
  title = {Code Layout as a Source of Noise in JVM Performance.},
  journal = {Stud. Inform. Univ.},
  volume = {4},
  pages = {83-99},
  year = {2005},
  month = jan}

@article{Gu17a,
  author = {Gu, Xiaodong and Zhang, Hongyu and Zhang, Dongmei and Kim, Sunghun},
  title = {DeepAM: Migrate {API}s with multi-modal sequence to sequence learning},
  journal = {arXiv preprint arXiv:1704.07734},
  year = {2017}}

@inproceedings{Guar11a,
  author = {Guarnieri, Salvatore and Pistoia, Marco and Tripp, Omer and Dolby, Julian and Teilhet, Stephen and Berg, Ryan},
  title = {Saving the world wide web from vulnerable JavaScript},
  booktitle = {Proceedings of the 2011 International Symposium on Software Testing and Analysis},
  pages = {177--187},
  publisher = {ACM},
  year = {2011},
  url = {http://doi.acm.org/10.1145/2001420.2001442},
  doi = {10.1145/2001420.2001442},
  acmid = {2001442},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0562-4},
  keywords = {JavaScript, abstract interpretation, information flow, static analysis},
  location = {Toronto, Ontario, Canada},
  numpages = {11},
  series = {ISSTA '11}}

@inproceedings{Guchi03a,
  author = {Yamaguchi, Yumi and Itoh, Takayuki},
  title = {Visualization of distributed processes using" data jewelry box" algorithm},
  booktitle = {Proceedings Computer Graphics International 2003},
  pages = {162--169},
  year = {2003},
  organization = {IEEE}}

@inproceedings{Gude06a,
  author = {J\"urgen Wolff v. Gudenberg and A. Niederle and M. Ebner and Holger Eichelberger},
  title = {Evolutionary layout of UML class diagrams},
  booktitle = {SoftVis '06: Proceedings of the 2006 ACM symposium on Software visualization},
  pages = {163--164},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1148493.1148525},
  address = {New York, NY, USA},
  isbn = {1-59593-464-2},
  location = {Brighton, United Kingdom}}

@inproceedings{Gueh01a,
  author = {Yann-Ga{\"e}l Gu{\'e}h{\'e}neuc and Herv{\'e} Albin-Amiot},
  title = {Using Design Patterns and Constraints to Automate the Detection and Correction of Inter-Class Design Defects},
  booktitle = {Proceedings of Conference on the Technology of Object-Oriented Languages and Systems (TOOLS)},
  pages = {296--305},
  publisher = {IEEE Computer Society Press},
  year = {2001},
  url = {www.yann-gael.gueheneuc.net/Work/Publications/},
  editor = {Quioyun Li and Richard Riehle and Gilda Pour and Bertrand Meyer},
  month = jul}

@inproceedings{Gueh02a,
  author = {Yann-Ga{\"e}l Gu{\'e}h{\'e}neuc and R{\'e}mi Douence and Narendra Jussien},
  title = {No Java without Caffeine: {A} Tool for Dynamic Analysis of Java Programs},
  booktitle = {ASE},
  pages = {117},
  publisher = {IEEE Computer Society},
  year = {2002}}

@inproceedings{Gueh04a,
  author = {Gu{\'e}h{\'e}neuc, Yann-Ga\"el and Sahraoui, Houri and Zaidi, Farouk},
  title = {Fingerprinting Design Patterns},
  booktitle = {Working Conference on Reverse Engineering ({WCRE}'04)},
  pages = {172--181},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA}}

@inproceedings{Gueh06a,
  author = {Yann-Ga{\"e}l Gu{\'e}h{\'e}neuc and Kim Mens and Roel Wuyts},
  title = {A Comparative Framework for Design Recovery Tools},
  booktitle = {Conference on Software Maintenance and Reengineering (CSMR 2006)},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  url = {http://www.yann-gael.gueheneuc.net/Work/Publications/Documents/CSMR06b.doc.pdf},
  abstract = {While many commercial and academic design recovery
tools have been proposed over the years, assessing
their relevance and comparing them is difficult due
to the lack of a well-defined, comprehensive, and
common framework. In this paper, we introduce such a
common comparative framework. The framework builds
upon our own experience and extends existing
comparative frameworks. We illustrate the
comparative framework on two specific design
recovery tools.},
  address = {Los Alamitos CA}}

@unpublished{Guen90a,
  author = {Andreas G{\"u}ndel},
  title = {Compatibility Conditions on Subclasses},
  year = {1990},
  misc = {Feb. 28},
  month = feb,
  note = {University of Dortmund},
  type = {Draft}}

@mastersthesis{Guen98a,
  author = {Manuel G{\"u}nter},
  title = {Explicit Connectors for Coordination of Active Objects},
  year = {1998},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Guen98a/index.html http://scg.unibe.ch/archive/masters/Guen98a/Guen98a.pdf},
  month = mar,
  type = {Diploma thesis}}

@techreport{Guen99a,
  author = {Simon G{\"u}nter},
  title = {Trademark Application},
  year = {1999},
  url = {http://scg.unibe.ch/archive/projects/Guen99a.pdf},
  institution = {University of Bern},
  month = may,
  type = {Informatikprojekt}}

@inproceedings{Guer92a,
  author = {Rachid Guerraoui and Riccardo Capobianchi and Agnes Lanusse and Pierre Roux},
  title = {Nesting Actions through Asynchronous Message Passing: the {ACS} Protocol},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {170--184},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Guer92b,
  author = {Rachid Guerraoui and Riccardo Capobianchi and Agnes Lanusse and Pierre Roux},
  title = {Atomic Asynchronous Objects Invocations in a Fault-Tolerant Distributed System},
  booktitle = {Proceedings IEEE FTDS},
  year = {1992},
  address = {Boston}}

@phdthesis{Guer92c,
  author = {Rachid Guerraoui},
  title = {Programmation Repartie par Objets: Etudes et Proposositions},
  year = {1992},
  school = {Universit\'e de Paris-Sud},
  month = oct,
  type = {{Ph.D}. Thesis}}

@unpublished{Guer93a,
  author = {Rachid Guerraoui},
  title = {Modular Atomic Objects},
  year = {1993},
  note = {EPFL Lausanne},
  type = {draft manuscript}}

@book{Guer94a,
  title = {Proceedings of the {ECOOP}'93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  publisher = {Springer-Verlag},
  year = {1994},
  doi = {10.1007/BFb0017530},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  isbn = {3-540-57932-X},
  series = {LNCS}}

@inproceedings{Guer94b,
  author = {Rachid Guerraoui},
  title = {Atomic Object Composition},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {118--138},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Guer94c,
  author = {Rachid Guerraoui and Beno\^it Garbinato and Karim R. Mazouni},
  title = {The {GARF} library of {DSM} consistency models},
  booktitle = {EW 6: Proceedings of the 6th workshop on ACM SIGOPS European workshop},
  pages = {51--56},
  publisher = {ACM Press},
  year = {1994},
  doi = {10.1145/504390.504404},
  address = {New York, NY, USA},
  isbn = {1-23456-789-0},
  location = {Wadern, Germany}}

@inproceedings{Guer98a,
  author = {Rachid Guerraoui and Pascal Felber and Beno\^it Garbinato and Karim Mazouni},
  title = {System support for object groups},
  booktitle = {OOPSLA '98: Proceedings of the 13th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages = {244--258},
  publisher = {ACM Press},
  year = {1998},
  doi = {10.1145/286936.286961},
  address = {New York, NY, USA},
  isbn = {1-58113-005-8},
  location = {Vancouver, British Columbia, Canada}}

@inproceedings{Guha10a,
  author = {Guha, Arjun and Saftoiu, Claudiu and Krishnamurthi, Shriram},
  title = {The essence of javascript},
  booktitle = {Proceedings of the 24th European conference on Object-oriented programming},
  pages = {126--150},
  publisher = {Springer-Verlag},
  year = {2010},
  url = {http://dl.acm.org/citation.cfm?id=1883978.1883988},
  acmid = {1883988},
  address = {Berlin, Heidelberg},
  isbn = {3-642-14106-4, 978-3-642-14106-5},
  location = {Maribor, Slovenia},
  numpages = {25},
  series = {ECOOP'10}}

@article{Guib82a,
  author = {Leo Guibas and J. Stolfi},
  title = {A Language for Bitmap Manipulation},
  journal = {ACM TOG},
  volume = {1},
  pages = {191--214},
  year = {1982},
  month = jul,
  number = {3}}

@inproceedings{Guim12a,
  author = {Guimar\~{a}es, M\'{a}rio Lu\'{\i}s and Silva, Ant\'{o}nio Rito},
  title = {Improving Early Detection of Software Merge Conflicts},
  booktitle = {Proceedings of the 34th International Conference on Software Engineering},
  pages = {342--352},
  publisher = {IEEE Press},
  year = {2012},
  url = {http://dl.acm.org/citation.cfm?id=2337223.2337264},
  acmid = {2337264},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4673-1067-3},
  location = {Zurich, Switzerland},
  numpages = {11},
  series = {ICSE '12}}

@inproceedings{Guim91a,
  author = {Nuno Guimaraes},
  title = {Building Generic User Interface Tools: an Experience with Multiple Inheritance},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {89--96},
  year = {1991},
  month = nov}

@incollection{Guin88a,
  author = {Raymonde Guindon and Bill Curtis},
  title = {Control of Cognitive Processes During Software Design: What Tools are Needed?},
  booktitle = {CHI '88},
  publisher = {ACM},
  year = {1988}}

@inproceedings{Guix21a,
  author = {Ye, Guixin and Tang, Zhanyong and Tan, Shin Hwei and Huang, Songfang and Fang, Dingyi and Sun, Xiaoyang and Bian, Lizhong and Wang, Haibo and Wang, Zheng},
  title = {Automated Conformance Testing for JavaScript Engines via Deep Compiler Fuzzing},
  booktitle = {Proceedings of Conference on Programming Language Design and Implementation (PLDI'21)},
  pages = {435-450},
  publisher = {ACM},
  year = {2021},
  url = {https://doi.org/10.1145/3453483.3454054},
  doi = {10.1145/3453483.3454054},
  isbn = {9781450383912},
  address = {New York, NY, USA},
  numpages = {16},
  keywords = {Conformance bugs, Deep learning, JavaScript, Differential testing, Compiler fuzzing},
  location = {Virtual, Canada}}

@article{Gull91a,
  author = {Gulla, Bj{\o}rn and Karlsson, Even-Andr{\'e} and Yeh, Dashing},
  title = {Change-oriented version descriptions in EPOS},
  journal = {Software Engineering Journal},
  volume = {6},
  pages = {378--386},
  publisher = {Michael Faraday House},
  year = {1991},
  issn = {0268-6961},
  month = nov,
  number = {6}}

@inproceedings{Gull92a,
  author = {Bjorn Gulla},
  title = {Improved Maintenance Support by Multi-Version Visualizations},
  booktitle = {Proceedings Conference on Software Maintenance ({ICSM} 1992)},
  pages = {376--383},
  publisher = {IEEE Computer Society Press},
  year = {1992},
  address = {Los Alamitos CA},
  month = nov}

@inproceedings{Gulz16a,
  author = {Gulzar, Muhammad Ali and Interlandi, Matteo and Yoo, Seunghyun and Tetali, Sai Deep and Condie, Tyson and Millstein, Todd and Kim, Miryung},
  title = {Bigdebug: Debugging primitives for interactive big data processing in spark},
  booktitle = {2016 IEEE/ACM 38th International Conference on Software Engineering ({ICSE})},
  pages = {784--795},
  year = {2016},
  organization = {IEEE}}

@inproceedings{Gulz18a,
author = {Gulzar, Muhammad and Wang, Siman and Kim, Miryung},
year = {2018},
month = {oct},
pages = {863-866},
title = {BigSift: automated debugging of big data analytics in data-intensive scalable computing},
doi = {10.1145/3236024.3264586},
booktitle = {Proc. of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering}
}

@inproceedings{Gumm05a,
  author = {Ramakrishna Gummadi and Nupur Kothari and Ramesh Govindan and Todd Millstein},
  title = {Kairos: a macro-programming system for wireless sensor networks},
  booktitle = {SOSP '05: Proceedings of the twentieth ACM symposium on Operating systems principles},
  pages = {1--2},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1095810.1118600},
  address = {New York, NY, USA},
  isbn = {1-59593-079-5},
  location = {Brighton, United Kingdom}}

@inproceedings{Gumm07a,
  author = {Ramakrishna Gummadi and Nupur Kothari and Todd Millstein and Ramesh Govindan},
  title = {Declarative failure recovery for sensor networks},
  booktitle = {AOSD '07: Proceedings of the 6th international conference on Aspect-oriented software development},
  pages = {173--184},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1218563.1218583},
  address = {New York, NY, USA},
  isbn = {1-59593-615-7},
  location = {Vancouver, British Columbia, Canada}}

@inproceedings{Gunt10a,
  author = {G\"{u}nther, Sebastian and Sunkle, Sagar},
  title = {Dynamically Adaptable Software Product Lines Using Ruby Metaprogramming},
  booktitle = {Proceedings of the 2Nd International Workshop on Feature-Oriented Software Development},
  pages = {80--87},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1868688.1868700},
  doi = {10.1145/1868688.1868700},
  acmid = {1868700},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0208-1},
  keywords = {domain-specific languages, feature-oriented programming, metaprogramming, runtime adaptation, software product lines},
  location = {Eindhoven, The Netherlands},
  numpages = {8},
  series = {FOSD '10}}

@inproceedings{Gunt11a,
  author = {G\"{u}nther, Sebastian and Fischer, Marco},
  title = {Supporting Program Variant Generation and Feature Files in rbFeatures},
  booktitle = {Proceedings of the 15th International Software Product Line Conference, Volume 2},
  pages = {8:1--8:8},
  publisher = {ACM},
  year = {2011},
  url = {http://doi.acm.org/10.1145/2019136.2019145},
  doi = {10.1145/2019136.2019145},
  acmid = {2019145},
  address = {New York, NY, USA},
  articleno = {8},
  isbn = {978-1-4503-0789-5},
  keywords = {feature-oriented programming, software product lines},
  location = {Munich, Germany},
  numpages = {8},
  series = {SPLC '11}}

@book{Gunt92a,
  author = {Carl. A. Gunter},
  title = {Semantics of Programming Languages},
  publisher = {MIT Press},
  year = {1995},
  isbn = {0-262-57095-5}}

@book{Gunt94a,
  author = {Carl A. Gunter and John C. Mitchell},
  title = {Theoretical Aspects of Object-Oriented Programming},
  publisher = {The MIT Press},
  year = {1994},
  isbn = {0-262-07155-X}}

@article{Gunt96,
  author = {Gunter, Carl and Mitchell, John and Notkin, David},
  title = {Strategic Directions in Software Engineering and Programming Languages},
  journal = {ACM Comput. Surv.},
  volume = {28},
  pages = {727 to 737},
  publisher = {Association for Computing Machinery},
  year = {1996},
  url = {https://doi.org/10.1145/242223.242283},
  doi = {10.1145/242223.242283},
  address = {New York, NY, USA},
  issn = {0360-0300},
  month = dec,
  number = {4},
  numpages = {11}}

@inproceedings{Guo00a,
  author = {Guo, Jiang and Luqi},
  title = {{A Survey of Software Reuse Repositories}},
  booktitle = {Proceedings of Seventh IEEE International Conference and Workshop on the Engineering of Computer-Based Systems},
  pages = {92--100},
  publisher = {IEEE},
  year = {2000},
  url = {http://www.computer.org/proceedings/ecbs/0604/06040092abs.htm},
  abstract = {Reuse libraries are organizations of personnel,
procedures, tools, and software components directed
toward facilitating software component reuse to meet
specific cost-effectiveness and productivity goals.
The paper gives a survey of the major software
reusable component repositories. This survey will be
a base to develop future efficiently searchable,
user-friendly, useful, and well-organized
repositories.},
  month = apr}

@book{Guo10,
  author = {Guo, Jichi and Yi, Qing and Qasem, Apan},
  title = {Evaluating the role of optimization-specific search heuristics in effective autotuning},
  publisher = {Department of Computer Science, University of Texas at San Antonio},
  year = {2010}}

@inproceedings{Guo99a,
  author = {Yanbing Guo and Atlee and Kazman},
  title = {A Software Architecture Reconstruction Method},
  booktitle = {Working Conference on Software Architecture (WICSA)},
  pages = {15--34},
  year = {1999}}

@misc{Gupro,
  title = {{GUPRO} Home Page},
  url = {http://www.uni-koblenz.de/~ist/gupro.en.html},
  key = {gupro design-recovery},
  note = {http://www.uni-koblenz.de/~ist/gupro.en.html}}

@inproceedings{Gupt92a,
  author = {Gupta, Rajiv and Harrold, Mary Jean and Soffa, Mary Lou},
  title = {An approach to regression testing using slicing},
  booktitle = {Software Maintenance, 1992. Proceedings., Conference on},
  pages = {299--308},
  year = {1992},
  organization = {IEEE}}

@inproceedings{Gure87a,
  author = {Yuri Gurevich and James M. Morris},
  title = {Algebraic Operational Semantics and Modula-2},
  booktitle = {1st Workshop on Computer Science Logic, CSL '87},
  volume = {329},
  pages = {81--101},
  publisher = {Springer-Verlag},
  year = {1987},
  address = {Karlsruhe},
  editor = {E. B{\"o}rger and H. Kleine B{\"u}ning and M.M. Richter},
  month = oct,
  series = {LNCS}}

@inproceedings{Gure89a,
  author = {Yuri Gurevich and Lawrence S. Moss},
  title = {Algebraic Operational Semantics and Occam},
  booktitle = {3rd Workshop on Computer Science Logic, CSL '89},
  volume = {440},
  pages = {176--192},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Kaiserslautern},
  editor = {E. B{\"o}rger and H. Kleine B{\"u}ning and M.M. Richter},
  month = oct,
  series = {LNCS}}

@techreport{Gurt06a,
  author = {David Gurtner},
  title = {Importing {JSP} into {Moose}},
  year = {2006},
  url = {http://scg.unibe.ch/archive/projects/Gurt06aJSP.pdf},
  abstract = {Java Server Pages (JSP) is an already established
technology for web application development, and thus
there is a big need for tools to support reverse
engineering of JSP applications. A first step
towards the analysis is creating the model by
parsing JSP. We have built j2moose as an Eclipse
plugin to parse JSP using the Eclipse capabilities.
We have validated the approach by extending the
Moose reengineering environment to load the exported
models from j2moose.},
  institution = {University of Bern},
  month = jul,
  type = {Bachelor's thesis}}

@book{Gusf97a,
  author = {Dan Gusfield},
  title = {Algorithms on Strings, Trees, and Sequences},
  publisher = {Cambridge University Press},
  year = {1997}}

@phdthesis{Gust00a,
  author = {Gustafsson, Jan},
  title = {Analyzing Execution-Time of Object-Oriented Programs Using Abstract Interpretation},
  year = {2000},
  school = {M{\"a}lardalen University, Sweden and Upssala University, Sweden},
  keywords = {abstract interpretation, smalltalk, object-oriented, static analysis},
  month = may}

@inproceedings{Gutf87a,
  author = {Steven H. Gutfreund},
  title = {ManiplIcons in ThinkerToy},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {307--317},
  year = {1987},
  month = dec}

@article{Gutt77a,
  author = {John Guttag},
  title = {Abstract Data Types and the Development of Data Structures},
  journal = {CACM},
  volume = {20},
  pages = {396--404},
  year = {1977},
  month = jun,
  number = {6}}

@article{Gutt85a,
  author = {John V. Guttag and James J. Horning and Jeannette M. Wing},
  title = {The {Larch} Family of Specification Languages},
  journal = {IEEE Transactions on Software Engineering},
  volume = {2},
  pages = {24--36},
  year = {1985},
  month = sep,
  number = {5}}

@inproceedings{Gutt93a,
  author = {J.V. Guttag},
  title = {Goldilocks and Three Specifications},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {1--14},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@book{Gutt95a,
  author = {Guttman, B. and Guttman, B. and Roback, E.A.},
  title = {An Introduction to Computer Security: The Nist Handbook},
  publisher = {Diane Publishing Company},
  year = {1995},
  url = {http://csrc.nist.gov/publications/nistpubs/800-12/},
  isbn = {9780788128301}}

@book{Guzd01a,
  author = {Mark Guzdial},
  title = {Squeak --- Object Oriented Design with Multimedia Applications},
  publisher = {Prentice-Hall},
  year = {2001}}

@book{Guzd01b,
  author = {Mark Guzdial and Kim Rose},
  title = {Squeak --- Open Personal Computing and Multimedia},
  publisher = {Prentice-Hall},
  year = {2001}}

@inproceedings{Guzz15a,
  author = {Anja Guzzi and Alberto Bacchelli and Yann Riche andvan Deursen, Arie},
  title = {Supporting Developers' Coordination in the IDE},
  booktitle = {In Proceedings of CSCW 2015 (8th ACM Conference on Computer Supported Cooperative Work and Social Computing)},
  pages = {in press},
  publisher = {ACM},
  year = {2015},
  date-added = {2014-11-12 15:29:13 +0000},
  date-modified = {2015-01-19 16:10:31 +0000}}

@inproceedings{Gwiz03a,
  author = {Steve Gwizdala and Yong Jiang and Vaclav Rajlich},
  title = {JTracker - A Tool for change Propagation in Java},
  booktitle = {Proceedings of the Seventh European Conference on Software Maintenance and Reengineering},
  year = {2003},
  abstract = {During software evolution, programmers add new functionalities and release new versions of software.This is complicated work, particularly in large applications, and tools are needed to deal with it. In this paper we introduce a tool named JTracker that helps programmers implement change propagation in Java applications.We conducted a case study of a change in open source application JMeter, in which we used JTracker.},
  annote = {inproceedings},
  date-added = {2014-09-22 12:53:09 +0000},
  date-modified = {2014-09-22 12:55:21 +0000}}

@inproceedings{Gysi10a,
  author = {Florian S. Gysin},
  title = {Improved Social Trustability of Code Search Results},
  booktitle = {Proceedings International Conference on Software Engineering, ICSE '10, Student Research Competition},
  year = {2010},
  url = {http://scg.unibe.ch/archive/papers/Gysi10a.pdf},
  doi = {10.1145/1810295.1810457},
  abstract = {Search is a fundamental activity in software
development. However, to search source code
efficiently, it is not sufficient to implement a
traditional full text search over a base of source
code, human factors have to be taken into account as
well. We looked into ways of increasing the search
results code trustability by providing and analysing
a range of meta data alongside the actual search
results.}}

@inproceedings{Gysi10b,
  author = {Florian S. Gysin and Adrian Kuhn},
  title = {A Trustability Metric for Code Search based on Developer Karma},
  booktitle = {ICSE Workshop on Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2010. SUITE '10.},
  year = {2010},
  url = {http://scg.unibe.ch/archive/papers/Gysi10b.pdf},
  doi = {10.1145/1809175.1809186},
  abstract = {The promise of search-driven development is that
developers will save time and resources by reusing
external code in their local projects. To
efficiently integrate this code, users must be able
to trust it, thus trustability of code search
results is just as important as their relevance. In
this paper, we introduce a trustability metric to
help users assess the quality of code search results
and therefore ease the cost-benefit analysis they
undertake trying to find suitable integration
candidates. The proposed trustability metric
incorporates both user votes and cross-project
activity of developers to calculate a "karma" value
for each developer. Through the karma value of all
its developers a project is ranked on a trustability
scale. We present JBENDER, a proof-of-concept code
search engine which implements our trustability
metric and we discuss preliminary results from an
evaluation of the prototype.}}

@techreport{Gysi10c,
  author = {Florian S. Gysin},
  title = {{Trust this Code?} --- Improving Code Search Results through Human Trustability Factors},
  year = {2010},
  url = {http://scg.unibe.ch/archive/projects/Gysi10c.pdf},
  abstract = {The promise of search-driven development is that
developers will save time and resources by reusing
foreign code in their local projects. To efficiently
in- tegrate this code, users must be able to trust
it, thus besides relevance of code search results
their trustability is important as well. In this
paper, we introduce a trustability metric to help
users assess the quality of code search results and
therefore ease the risk-cost-benefit analysis they
undertake trying to find suitable integration
candidates. The proposed trustability metric
incorporates both user votes and cross-project
activity of developers to calculate a "karma" value
for each developer. Through the karma value of all
its developers a project is ranked on a trustability
scale. We present JBender, a proof-of-concept code
search engine which implements our trustability
metric and we discuss preliminary results from an
evaluation of the prototype. Furthermore we discuss
findings from the creation of a second prototype --
RBender -- that deals with structured search over
dynamically typed code.},
  institution = {University of Bern},
  month = mar,
  type = {Bachelor's thesis}}

@inproceedings{Haar90a,
  author = {Volker Haarslev and Ralf M{\"o}ller},
  title = {A Framework for Visualizing Object-Oriented Systems},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {237--244},
  year = {1990},
  month = oct}

@article{Habe72a,
  author = {A. Nico Habermann},
  title = {Synchronization of Communicating Processes},
  journal = {Communications of the ACM},
  volume = {15},
  pages = {171--176},
  year = {1972},
  month = mar,
  number = {3}}

@incollection{Habe81a,
  author = {A. Nico Habermann and D.E. Perry},
  title = {System Composition and Version Control for Ada},
  booktitle = {Software Engineering Environments},
  pages = {331--343},
  publisher = {North-Holland Publishing Co.},
  year = {1981},
  editor = {H. H{\"u}nke}}

@inproceedings{Habe90a,
  author = {Sabine Habert and Vadim Abrossimov},
  title = {{COOL}: Kernel Support for Object-Oriented Environments},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {269--277},
  year = {1990},
  month = oct}

@inproceedings{Habe92a,
  author = {Benoit Habert},
  title = {D\'efense et illustration de la combinaison des m\'ethodes en {CLOS}},
  booktitle = {JFLA '92},
  pages = {252--269},
  year = {1992}}

@inproceedings{Hack94a,
  author = {Steven T. Hackstadt and Allen D. Malony and Bernd Mohr},
  title = {Scalable Performance Visualization for Data-Parallel Programs},
  booktitle = {Proc. of the Scalable High Performance Computing Conference (SHPCC)},
  pages = {342--349},
  year = {1994},
  address = {Knoxville, TN},
  month = may}

@inproceedings{Haeb88a,
  author = {Paul E. Haeberli},
  title = {{ConMan}: A Visual Programming Language for Interactive Graphics},
  booktitle = {Proceedings SIGGRAPH' 88, ACM Computer Graphics},
  volume = {22},
  pages = {103--111},
  year = {1988},
  doi = {10.1145/378456.378494},
  month = aug}

@techreport{Haen08a,
  author = {Lea H\"aensenberger},
  title = {{JExample}},
  year = {2008},
  url = {http://scg.unibe.ch/archive/projects/Haen08aJExample.pdf},
  abstract = {Unit tests are primarily written as a good practice
to help developers identify and fix bugs, to
refactor code and to serve as documentation for a
unit of software under test. To achieve these
benefits, unit tests ideally should cover all the
possible paths in a program. One unit test usually
covers one specific path in one function or method.
However a test method is not necessary an
encapsulated, independent entity. Often there are
implicit dependencies between test methods, hidden
in the implementation scenario of a test. In this
work we present JExample, an extension to the JUnit
testing framework, that supports the declaration of
explicit dependencies between test methods. Such
dependencies either only define the order in which
the test methods are to be executed or they
additionally manage the returning of an instance of
the test fixture by the provider and passing it to
the dependent methods. As JExample extends JUnit,
yielding compatible test results, JExample test
cases can for example be executed in Eclipse's JUnit
plugin.},
  institution = {University of Bern},
  month = mar,
  type = {Bachelor's Project}}

@inproceedings{Haen08b,
  author = {Haensenberger, Lea and Kuhn, Adrian and Nierstrasz, Oscar},
  title = {Using Dynamic Analysis for {{API}} Migration},
  booktitle = {Proceedings IEEE Workshop on Program Comprehension through Dynamic Analysis (PCODA 2008)},
  pages = {32--36},
  year = {2008},
  medium = {2},
  month = oct}

@mastersthesis{Haen09a,
  author = {Lea H\"ansenberger},
  title = {Defect Isolation As Responsibility of the Framework --- Automated {{API}} Migration from {JUnit} to {JExample}},
  year = {2009},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Haen09a.pdf},
  abstract = {Unit tests are primarily written as a good practice
to support software evolution, i.e., to help
developers to identify and fix bugs, to refactor
code and to serve as documentation for a unit of
software under test. To achieve these benefits, unit
tests ideally should cover all possible paths in a
program. One unit test usually covers one specific
path in one function or method. However, a test
method is not necessary an encapsulated, independent
entity. Often a test method's coverage is a superset
of another test method's coverage set and thus
defects are not well isolated, i.e., one defect
causes multiple test methods to fail. In this work
we present an approach to automatically migrate
JUnit test classes to JExample. JExample allows test
methods to declare explicit dependencies to other
test methods and therefore improves defect
isolation. With dynamic analysis we recover the
coverage set of each test method and by partially
ordering the test methods by means of their coverage
sets we derive implicit dependencies between test
methods. With program transformation we rewrite the
original JUnit test classes as test classes with
explicit dependencies between test methods that can
be executed with JExample. In a case study on 16
projects we found that 72\% of all test methods have
latent dependencies to other test methods and that
by declaring these dependencies defect isolation
(measured as average square of failures per defect)
could be improved by a factor of 3.77 or higher.},
  month = sep,
  type = {Master's Thesis}}

@techreport{Haer06a,
  author = {Marcel Haerry},
  title = {{JPAAM} - Pluggable Authentication and Authorization Framework},
  year = {2006},
  url = {http://scg.unibe.ch/archive/projects/Haer06a.pdf},
  abstract = {Many (web) applications share content between
several users and different views. To manage this
content often a CMS (Content Management System) is
used with different levels of access and offer
possibilities to edit and change the content. Only a
few systems have a security system, which can adapt
to changing requirements with another type of
security model. Therefore the way access is
permitted or denied is fixed in the architecture and
the evolution progress of the application. In detail
this means that the part of authorization and
authentication is often hard-wired into the
application and bigger changes to the structure in
the application are required to implement for
example another policy. Typically the actual
implementation of the security system fits the
current wishes of the users or developers and is a
fixed part of the application and therefore not very
easy to exchange nor to adapt a new policy. The
proposed pluggable authentication and authorization
framework (called JPAAM) offers a solution to this
problem and allows users to select their security
model for their needs and gives developers the
possibility to develop an application aside the
aspect of authorization and authentication. JPAAM
provides highly configurable interfaces with which a
clear separation of the security system from the
application is possible.},
  institution = {University of Bern},
  month = oct,
  type = {Bachelor's thesis}}

@mastersthesis{Haer10a,
  author = {Marcel Haerry},
  title = {Augmenting Eclipse with Dynamic Information},
  year = {2010},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Haer10a.pdf},
  abstract = {Traditional IDEs such as Eclipse provide a broad
range of supportive tools and views to manage and
maintain software projects. However, they provide
developers mainly with static views on the source
code neglecting any information about runtime
behavior. As object-oriented programs heavily rely
on polymorphism and late-binding, it is difficult to
understand such programs only based on their static
structure. Developers therefore tend to gather
runtime information with debuggers or profilers to
reason about dynamic information. Information
gathered using such procedures is volatile and
cannot be exploited to support developers navigating
the source space to analyze and comprehend the
software system or to accomplish other typical
software maintenance tasks. In this thesis we
present an approach to augment static source
perspectives of Eclipse with dynamic information
such as precise runtime type information or memory
and object allocation statistics. Dynamic
information can leverage the understanding for the
behavior and structure of a system. We rely on
dynamic data gathering based on aspects to analyze
running Java systems. To integrate dynamic
information into Eclipse we implemented a plugin
extending the Eclipse Java Development Toolkit (JDT)
called Senseo. This plugin augments existing IDE
tools of Eclipse and several standard views of JDT
such as the Package Explorer with dynamic
information. Besides these enrichments, Senseo
provides several visualizations such as an overview
of the collaboration within the software system. We
comprehensively report on the efficiency of our
approach to gather dynamic information. To evaluate
our approach we conducted a controlled experiment
with 30 professional developers. The results show
that the availability of dynamic information in the
Eclipse IDE yields for typical software maintenance
tasks a significant 17.5\% decrease of time spent
while significantly increasing the correctness of
the solutions by 33.5\%.},
  month = may,
  type = {Master's Thesis}}

@article{Haer83a,
  author = {T. Haerder and A. Reuter},
  title = {Principles of Transaction-Oriented Database Recovery},
  journal = {ACM Computing Surveys},
  volume = {15},
  pages = {287--317},
  year = {1983},
  month = dec,
  number = {4}}

@inproceedings{Haer92a,
  author = {Martin Haertig and Klaus R. Dittrich},
  title = {An Object-Oriented Integration Framework for Building Heterogeneous Database Systems},
  booktitle = {Proc. of the IFIP DS-5 Conf. on Semantics of Interoperable Database Systems},
  year = {1992},
  address = {Lorne, Australia},
  month = nov}

@inproceedings{Hage90a,
  author = {P.J.W ten Hagen},
  title = {Critique of the Seeheim model},
  booktitle = {Proceedings of the workshop: User Interface Management and Design},
  pages = {3--6},
  publisher = {Springer-Verlag},
  year = {1990}}

@inproceedings{Hagi94a,
  author = {Daniel Hagimont},
  title = {Protection in the Guide Object-Oriented Distributed System},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {280--298},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@article{Hai02,
  author = {Brent Hailpern, Padmanabhan Santhanam},
  title = {Software Debugging, Testing, and Verification},
  journal = {IBM Systems Journal},
  year = {2002}}

@inproceedings{Haid08a,
  author = {Haiduc, S. and Marcus, A.},
  title = {On the Use of Domain Terms in Source Code},
  booktitle = {International Conference on Program Comprehension ({{ICPC}}'08),},
  pages = {113--122},
  year = {2008},
  doi = {10.1109/{ICPC}.2008.29},
  abstract = {Information about the problem domain of the software
and the solution it implements is often embedded by developers in
comments and identifiers. When using software developed by others or
when are new to a project, programmers know little about how domain
information is reflected in the source code. Programmers often learn
about the domain from external sources such as books, articles, etc.
Hence, it is important to use in comments and identifiers terms that are
commonly known in the domain literature, as it is likely that
programmers will use such terms when searching the source code. The
paper presents a case study that investigated how domain terms are used
in comments and identifiers. The study focused on three research
questions: (1) to what degree are domain terms found in the source code
of software from a particular problem domain?; (2) which is the
preponderant source of domain terms: identifiers or comments?; and (3)
to what degree are domain terms shared between several systems from the
same problem domain? Within the studied software, we found that in
average: 42\% of the domain terms were used in the source code; 23\% of
the domain terms used in the source code are present in comments only,
whereas only 11\% in the identifiers alone, and there is a 63\%
agreement in the use of domain terms between any two software systems.},
  address = {Amsterdam, The Netherlands},
  month = jun}

@phdthesis{Haih13a,
  author = {Haihan Yin},
  title = {Defusing the Debugging Scandal - Dedicated Debugging Technologies for Advanced Dispatching Languages},
  year = {2013},
  school = {University of Twente},
  url = {https://research.utwente.nl/en/publications/defusing-the-debugging-scandal-dedicated-debugging-technologies-f},
  month = dec}

@article{Hail01a,
    author = {Brent Hailpern and Padmanabhan Santhanam},
    title = {Software Debugging, Testing, and Verification},
    journal = {IBM SYSTEMS JOURNAL},
    year = {2001},
    volume = {41},
    pages = {4--12}
}

@article{Hail90a,
  author = {Brent Hailpern and Harold Ossher},
  title = {Extending Objects to Support Multiple Interfaces and Access Control},
  journal = {IEEE Transactions on Software Enginnering},
  volume = {16},
  pages = {1247--1257},
  year = {1990},
  month = nov,
  number = {11}}

@techreport{Hail92a,
  author = {Brent Hailpern},
  title = {An Architecture for Dynamic Reconfiguration in a Distributed Object-Based Programming Language},
  year = {1992},
  institution = {IBM Research Division},
  number = {18269(80129)},
  type = {Report RC}}

@inproceedings{Hain00a,
  author = {Hainaut, Jean-Luc and Henrard, Jean and Hick, Jean-Marc and Roland, Didier and Englebert, Vincent},
  title = {The nature of data reverse engineering},
  booktitle = {Proc. of Data Reverse Engineering Workshop (DRE)},
  pages = {1--10},
  year = {2000}}

@article{Hain96a,
  author = {J.-L. Hainaut and V. Englebert and J. Henrard and J.-M. Hick and D. Roland},
  title = {Database reverse Engineering: From requirements to {CARE} Tools},
  journal = {Automated Software Engineering},
  volume = {3},
  publisher = {Kluwer Academic Publishers},
  year = {1996},
  month = jun,
  number = {1-2}}

@inproceedings{Haji05a,
  author = {Hajiyev, E. and Verbaere, M. and {de Moor}, O. and {De Volder}, K.},
  title = {{CodeQuest}: Querying Source Code with {DataLog}},
  booktitle = {Companion to the 20th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages = {102--103},
  publisher = {ACM},
  year = {2005}}

@inproceedings{Haji06a,
  author = {Elnar Hajiyev and Mathieu Verbaere and Oege de Moor},
  title = {CodeQuest: Scalable Source Code Queries with Datalog},
  booktitle = {Proceedings of the 20th European Conference on Object-Oriented Programming},
  pages = {2--28},
  publisher = {Springer-Verlag},
  year = {2006},
  series = {ECOOP'06}}

@inproceedings{Hako99a,
  author = {Harri Hakonen and Ville Lepp{\"a}nen and Timo Raita and T{API}o Salakoski and Jukka Teuhola},
  title = {Improving Object integrity and preventing side effects via deeply immutable references},
  booktitle = {Fenno-Ugric Symposium on Software Technology},
  pages = {139--150},
  year = {1999}}

@phdthesis{Halb84a,
  author = {Daniel C. Halbert},
  title = {Programming by Example},
  year = {1984},
  school = {Dept. of EE and CS, University of California},
  address = {Berkeley CA},
  note = {Also OSD-T8402, XEROX Office Systems Division},
  type = {{Ph.D}. Thesis}}

@inproceedings{Halb87a,
  author = {Daniel C. Halbert and Patrick D. O'Brien},
  title = {Using Types and Inheritance in Object-Oriented Languages},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {20--31},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Halb91a,
  author = {N. Halbwachs and P. Caspi and P. Raymond and D. Pilaud},
  title = {The Synchronous Data Flow Programming Language LUSTRE},
  booktitle = {Proceedings of the IEEE},
  volume = {79},
  year = {1991},
  month = sep,
  number = {9}}

@book{Halb92a,
  author = {Nicolas Halbwachs},
  title = {Synchronous Programming of Reactive Systems},
  publisher = {Kluwer Academic Publishers},
  year = {1992},
  address = {Norwell, MA, USA},
  isbn = {0792393112}}

@techreport{Hald05a,
  author = {Niklaus Haldimann},
  title = {A Sophisticated Programming Environment to Cope with Scoped Changes},
  year = {2005},
  url = {http://scg.unibe.ch/archive/projects/Hald05a.pdf},
  abstract = {A class extension is a technique to evolve software
in ways not foreseen when it was created; it's a
method defined in a module whose class is defined
elsewhere. The classbox model addresses the inherent
problems of class extensions: It limits their impact
to a well-defined scope. We present the classbox
browser, a tool that assists programmers in working
with classboxes in the Squeak Smalltalk environment.
The browser enables the convenient modification of a
class without affecting any of its existing
clients.},
  institution = {University of Bern},
  month = dec,
  type = {Informatikprojekt}}

@mastersthesis{Hald07a,
  author = {Niklaus Haldimann},
  title = {{TypePlug} --- Pluggable Type Systems for {Smalltalk}},
  year = {2007},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Hald07a.pdf},
  abstract = {Statically and dynamically typed programming
languages have complementary strengths. While static
typing provides early error detection, optimized
execution and machine-checkable documentation,
dynamic typing makes a language more expressive,
better suited for r{API}d prototyping and more
adaptive to changing requirements. Pluggable type
systems strive to combine these strengths by
declaring types and type systems to be optional.
Supporting multiple coexisting type systems,
pluggable type systems open up a language to various
kinds of static analyses other than those provided
by traditional type systems. We present TypePlug, a
framework for pluggable type systems for Smalltalk.
TypePlug provides infrastructure to optionally
annotate source code with types and to define in a
simple way semantics for type systems. It contains a
generic type checking algorithm, dealing with issues
arising when statically checking a a dynamically
typed language. To improve type checking results and
the user experience, TypePlug integrates optional
type inference. We introduce type systems comparable
to traditional class-based type systems and a type
system for confinement, proving the validity of our
approach.},
  month = apr,
  type = {Master's thesis}}

@article{Hale99a,
  author = {Hale, Joanne E and Sharpe, Shane and Hale, David P},
  title = {An evaluation of the cognitive processes of programmers engaged in software debugging},
  journal = {Journal of Software Maintenance: Research and Practice},
  volume = {11},
  pages = {73--91},
  publisher = {Wiley Online Library},
  year = {1999},
  number = {2}}

@article{Hall05a,
  author = {Hall, Gregory A. and Tao, Wenyou and Munson, John C.},
  title = {Measurement and Validation of Module Coupling Attributes},
  journal = {Software Quality Control},
  volume = {13},
  pages = {281--296},
  publisher = {Kluwer Academic Publishers},
  year = {2005},
  doi = {10.1007/s11219-005-1753-8},
  address = {Hingham, MA, USA},
  issn = {0963-9314},
  number = {3}}

@inproceedings{Hall06a,
  author = {Philipp Haller and Martin Odersky},
  title = {Event-Based Programming Without Inversion of Control},
  booktitle = {In Proceedings of Join Modular Programming Languages (JMLC)},
  volume = {4228},
  pages = {4 -- 22},
  year = {2006},
  month = sep,
  publiser = {Springer Berlin / Heidelberg}}

@article{Hall90a,
  author = {Anthony Hall},
  title = {Seven Myths of Formal Methods},
  journal = {IEEE Software},
  volume = {7},
  pages = {11--19},
  year = {1990},
  misc = {Sept.},
  month = sep,
  number = {5}}

@incollection{Hall91a,
  author = {Pat Hall and Ray Weedon},
  title = {Towards and Object Algebra},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@book{Hals77a,
  author = {Maurice H. Halstead},
  title = {{Elements} of {Software} {Science}},
  publisher = {Elsevier North-Holland},
  year = {1977}}

@techreport{Halt02a,
  author = {Beat Halter and Mauricio Seeberger and Susanne Wenger and Vivian Kilchherr},
  title = {eXtreme Programming in der Praxis --- das Sentinet-Projekt},
  year = {2002},
  url = {http://scg.unibe.ch/archive/projects/Halt02aSentinet.pdf},
  institution = {University of Bern},
  month = dec,
  type = {Informatikprojekt}}

@inproceedings{Ham03a,
  author = {Frank van Ham},
  title = {Using Multilevel Call Matrices in Large Software Projects},
  booktitle = {Proceedings of the IEEE Symposium on Information Visualization},
  pages = {29--34},
  publisher = {IEEE},
  year = {2003},
  address = {Seattle, Washington},
  month = oct}

@inproceedings{Hama03a,
  author = {Rachid Hamadi and Boualem Benatallah},
  title = {A Petri Net-based Model for Web Service Composition},
  booktitle = {Proceedings of the Fourteenth Australasian Database Conference (ADC 2003)},
  year = {2003},
  address = {Adelaide, Australia}}

@misc{Hami93a,
  author = {Hamilton, Graham and Kougiouris, Panos},
  title = {The Spring Nucleus: A Microkernel for Objects},
  publisher = {Sun Microsystems, Inc.},
  year = {1993},
  address = {Mountain View, CA, USA}}

@misc{Hami97a,
  author = {Graham Hamilton and Rick Hamilton and Rick Cattell and Maydene Fisher},
  title = {{JDBC} Database Access with {Java}},
  year = {1997},
  isbn = {0-201-30995-5}}

@article{Hamm02k,
  author = {Hammer, J and Schmalz, M and O'Brien, W and Shekar, S and Haldavnekar, N},
  title = {Knowledge extraction in the seek project part I: Data reverse engineering},
  journal = {University of Florida, Gainesville, FL, Technical Report TR02-008},
  year = {2002}}

@article{Hamm04a,
  author = {Hammond, Lance and Wong, Vicky and Chen, Mike and Carlstrom, Brian D and Davis, John D and Hertzberg, Ben and Prabhu, Manohar K and Wijaya, Honggo and Kozyrakis, Christos and Olukotun, Kunle},
  title = {Transactional memory coherence and consistency},
  journal = {ACM SIGARCH Computer Architecture News},
  volume = {32},
  pages = {102},
  publisher = {ACM New York, NY, USA},
  year = {2004},
  number = {2}}

@inproceedings{Hamm81a,
  author = {Michael Hammer and R. Ilson and T. Anderson and E. Gilbert and M. Good and B. Niamir and Larry Rosenstein and S. Schoichet},
  title = {The Implementation of Etude, an Integrated and Interactive Document Production System},
  booktitle = {Proceedings of the ACM SIGPLAN SIGOA Symposium on Text Manipulation},
  year = {1981},
  misc = {June 8-10},
  address = {Portland, Oregon},
  month = jun}

@inproceedings{Hamo03a,
  author = {Abdelwahab Hamou-Lhadj and Timothy Lethbridge},
  title = {An Efficient Algorithm for Detecting Patterns in Traces of Procedure Calls},
  booktitle = {Proceedings of 1st International Workshop on Dynamic Analysis (WODA)},
  year = {2003},
  location = {Portland, Oregon},
  month = may}

@inproceedings{Hamo04a,
  author = {Abdelwahab Hamou-Lhadj and Timothy Lethbridge},
  title = {A Survey of Trace Exploration Tools and Techniques},
  booktitle = {Proceedings IBM Centers for Advanced Studies Conferences (CASON 2004)},
  pages = {42--55},
  publisher = {IBM Press},
  year = {2004},
  address = {Indianapolis IN},
  location = {Toronto}}

@inproceedings{Hamo04b,
  author = {Hamou-Lhadj, Abdelwahab and Lethbridge, Timothy C and Fu, Lianjiang},
  title = {Challenges and requirements for an effective trace exploration tool},
  booktitle = {Proceedings. 12th IEEE International Workshop on Program Comprehension, 2004.},
  pages = {70--78},
  year = {2004},
  organization = {IEEE}}

@inproceedings{Hamo05a,
  author = {A. Hamou-Lhadj and E. Braun and D. Amyot and T. Lethbridge},
  title = {Recovering Behavioral Design Models from Execution Traces},
  booktitle = {Proceedings IEEE European Conference on Software Maintenance and Reengineering (CSMR 2005)},
  pages = {112--121},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  address = {Los Alamitos CA},
  location = {Manchester, United Kingdom}}

@inproceedings{Hamo05b,
  author = {Abdelwahab Hamou-Lhadj},
  title = {The Concept of Trace Summarization},
  booktitle = {Proceedings of PCODA 2005 (1st International Workshop on Program Comprehension through Dynamic Analysis)},
  publisher = {IEEE Computer Society Press},
  year = {2005}}

@inproceedings{Hamo06a,
  author = {Abdelwahab Hamou-Lhadj and Timothy Lethbridge},
  title = {Summarizing the Content of Large Traces to Facilitate the Understanding of the Behaviour of a Software System},
  booktitle = {Proceedings of International Conference on Program Comprehension ({ICPC}'06)},
  pages = {181--190},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/{ICPC}.2006.45},
  address = {Washington, DC, USA},
  isbn = {0-7695-2601-2}}

@inproceedings{Hamo07a,
  author = {Abdelwahab Hamou-Lhadj and Andy Zaidman and Orla Greevy},
  title = {Workshop on Program Comprehension through Dynamic Analysis ({PCODA})},
  booktitle = {Proceedings of IEEE 14th Working Conference on Software Maintenance and Reengineering ({WCRE})},
  pages = {298--298},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Hamo07a-pcoda2007proceedings.pdf},
  doi = {10.1109/{WCRE}.2007.53},
  medium = {2},
  month = oct}

@book{Han00a,
  author = {Jiawei Han and Micheline Kamber},
  title = {Data Mining: Concept and Techniques},
  publisher = {Morgan Kaufmann},
  year = {2000}}

@book{Han11a,
  author = {Han, Jiawei and Pei, Jian and Kamber, Micheline},
  title = {Data mining: concepts and techniques},
  publisher = {Elsevier},
  year = {2011},
  edition = {3}}

@inproceedings{Han97a,
  author = {Han, Jun},
  title = {Supporting Impact Analysis and Change Propagation in Software Engineering Environments},
  booktitle = {Proceedings of the 8th International Workshop on Software Technology and Engineering Practice (including CASE '97)},
  pages = {172},
  publisher = {IEEE Computer Society},
  year = {1997},
  address = {Washington, DC, USA},
  isbn = {0-8186-7840-2},
  series = {STEP'97}}

@phdthesis{Hanc03a,
author = {Hancock, Christopher Michael and Resnick, Mitchel},
title = {Real-Time Programming and the Big Ideas of Computational Literacy},
year = {2003},
school = {Massachusetts Institute of Technology},
address = {USA},
abstract = {Though notoriously difficult, real-time programming offers children a rich new set of applications, and the opportunity to engage bodily knowledge and experience more centrally in intellectual enterprises. Moreover, the seemingly specialized problems of real-time programming can be seen as keys to longstanding difficulties of programming in general. I report on a critical design inquiry, into the nature and potential of real-time programming by children. A cyclical process of design, prototyping and testing of computational environments has led to two design innovations: (1) a language in which declarative and procedural descriptions of computation are given equal status, and can subsume each other to arbitrary levels of nesting. (2) a "live text" environment, in which real-time display of, and intervention in, program execution are accomplished within the program text itself. Based on children's use of these tools, as well as comparative evidence from other media and domains, I argue that the coordination of discrete and continuous process should be considered a central Big Idea in programming and beyond. In addition, I offer the theoretical notion of the "steady frame" as a way to clarify the user interface requirements of real-time programming, and also to understand the role of programming in learning to construct dynamic models, theories, and representations. Implications for the role of programming in education and for the future of computational literacy are discussed.}
}

@book{Hand02a,
  author = {Per Brinch Hansen},
  title = {The Origin of Concurrent Programming},
  publisher = {Springer},
  year = {2002}}

@inproceedings{Hane04a,
  author = {Stefan Hanenberg and Robert Hirschfeld and Rainer Unland},
  title = {Morphing aspects: incompletely woven aspects and continuous weaving},
  booktitle = {AOSD '04: Proceedings of the 3rd international conference on Aspect-oriented software development},
  pages = {46--55},
  publisher = {ACM},
  year = {2004},
  doi = {10.1145/976270.976278},
  address = {New York, NY, USA},
  isbn = {1-58113-842-3},
  location = {Lancaster, UK}}

@techreport{Hank92a,
  author = {Chris Hankin and Daniel Le M{\'e}tayer and David Sands},
  title = {A Calculus of Gamma Programs},
  year = {1992},
  institution = {INRIA-Rennes},
  month = oct,
  number = {1758},
  type = {Report No.}}

@article{Hank97a,
  author = {Hank, Richard E. and Hwu, Wen-mei W. and Rau, B. Ramakrishna},
  title = {Region-Based Compilation: Introduction, Motivation, and Initial Experience},
  journal = {Int. J. Parallel Program.},
  volume = {25},
  pages = {113-146},
  publisher = {Kluwer Academic Publishers},
  year = {1997},
  url = {https://doi.org/10.1007/BF02700049},
  doi = {10.1007/BF02700049},
  address = {USA},
  issn = {0885-7458},
  keywords = {region-based compilation, inlining, compilation time complexity, code expansion, ILP compilation},
  month = apr,
  number = {2},
  numpages = {34}}

@book{Hank98a,
  title = {Proceedings {ESOP}'98},
  volume = {1381},
  publisher = {Springer-Verlag},
  year = {1998},
  address = {Lisbon, Portugal},
  editor = {Chris Hankin},
  isbn = {3-540-64302-8},
  month = mar,
  series = {LNCS}}

@article{Hanr90a,
  author = {M. Hanrandi and J. Ning},
  title = {Knowledge-Based Program Analysis},
  journal = {IEEE Transaction on Software Engineering},
  volume = {7},
  pages = {74--81},
  publisher = {IEEE},
  year = {1990},
  number = {1}}

@techreport{Hans00a,
  author = {David R. Hanson and Todd A. Proebsting},
  title = {Dynamic Variables},
  year = {2000},
  url = ftp://ftp.research.microsoft.com/pub/tr/tr-2000-109.pdf,
  institution = {Microsoft Research},
  month = nov,
  number = {MSR-TR-2000-109}}

@incollection{Hans00b,
  author = {Hanson, M David},
  title = {The client/server architecture},
  booktitle = {Server Management},
  pages = {17--28},
  publisher = {Auerbach Publications},
  year = {2000}}

@article{Hans72a,
  author = {Per Brinch Hansen},
  title = {Structured Multi-Programming},
  journal = {CACM},
  volume = {15},
  pages = {574--578},
  year = {1972},
  month = jul,
  number = {7}}

@article{Hans73a,
  author = {Per Brinch Hansen},
  title = {Concurrent Programming Concepts},
  journal = {ACM Computing Surveys},
  volume = {5},
  pages = {223--245},
  year = {1973},
  number = {4}}

@article{Hans78a,
  author = {Per Brinch Hansen},
  title = {Distributed Processes: {A} Concurrent Programming Concept},
  journal = {CACM},
  volume = {21},
  pages = {934--941},
  year = {1978},
  month = nov,
  number = {11}}

@inproceedings{Hans91a,
  author = {Eric N. Hanson and Tina M. Harvey and Mark A. Roth},
  title = {Experiences in {DBMS} Implementation Using an Object-Oriented Persistent Programming Language and a Database Toolkit},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {314--328},
  year = {1991},
  month = nov}

@inproceedings{Hans95a,
  author = {Martin Hansen and Hans H{\"u}ttel and Josva Kleist},
  title = {Bisimulations for asynchronous mobile processes},
  booktitle = {Proceedings of 6th International Conference on Concurrency Theory ({CONCUR} '95, Philadelphia)},
  volume = {962},
  publisher = {Springer-Verlag},
  year = {1995},
  editor = {Insup Lee and Scott A. Smolka},
  series = {LNCS}}

@book{Hans96a,
  author = {Per Brinch Hansen},
  title = {Monitors and Concurrent Pascal: a personal history},
  pages = {121--172},
  publisher = {ACM Press},
  year = {1996},
  doi = {10.1145/234286.1057814},
  address = {New York, NY, USA},
  book = {History of programming languages---II},
  isbn = {0-201-89502-1}}

@inproceedings{Happ08a,
  author = {Happel, Hans J. and Maalej, Walid},
  title = {Potentials and challenges of recommendation systems for software development},
  booktitle = {RSSE '08: Proceedings of the 2008 international workshop on Recommendation systems for software engineering},
  pages = {11--15},
  publisher = {ACM},
  year = {2008},
  url = {http://dx.doi.org/10.1145/1454247.1454251},
  doi = {10.1145/1454247.1454251},
  address = {New York, NY, USA},
  citeulike-article-id = {6609671},
  isbn = {978-1-60558-228-3},
  location = {Atlanta, Georgia},
  posted-at = {2010-02-01 09:23:46},
  priority = {2}}

@incollection{Hara93a,
  author = {Yasunori Harada},
  title = {A Type Mechanism Based on Restricted {CCS} for Distributed Active Objects},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {475--488},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Ordinary object type is a one-to-one relation
between caller and callee. When communication
patters are introduced into object types, they must
be extended to relations among to two-or-more
object. We propose a new type framework that
expresses communication patters and two-or-more
object connections, and its implementation on
asynchronous faulty networks using future
communication property. Although our type is static
and not higher order, we can construct a
computational model with dynamic properties.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@article{Hare88a,
  author = {D. Harel},
  title = {On Visual Formalisms},
  journal = {CACM},
  volume = {31},
  pages = {514--530},
  year = {1988},
  month = may,
  number = {5}}

@article{Hare90a,
  author = {D. Harel and H. Lachover and A. Naamad and Amir Pnueli and M. Politi and R. Sherman and A. Shtull-Trauring and M. Trakhtenbrot},
  title = {{STATEMATE}: {A} Working Environment for the Development of Complex Reactive Systems},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-16},
  pages = {403--414},
  year = {1990},
  month = apr,
  number = {4}}

@book{Hari04a,
  author = {P. Van Roy and S. Haridi},
  title = {Concepts, Techniques and models of computer programming},
  publisher = {MIT PRESS},
  year = {2004},
  note = {received, library}}

@inproceedings{Hari16a,
  author = {Hari, Adiseshu and Lakshman, T. V.},
  title = {The Internet Blockchain: A Distributed, Tamper-Resistant Transaction Framework for the Internet},
  booktitle = {15th ACM Workshop on Hot Topics in Networks},
  pages = {204--210},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/3005745.3005771},
  doi = {10.1145/3005745.3005771},
  acmid = {3005771},
  address = {New York, NY, USA},
  isbn = {978-1-4503-4661-0},
  keywords = {BGPSec, Blockchain, DNSSEC, Security},
  location = {Atlanta, GA, USA},
  numpages = {7},
  series = {HotNets '16}}

@article{Harm01b,
  author = {Harman Mark and Hierons Robert},
  title = {An overview of program slicing},
  journal = {Software Focus},
  volume = {2},
  pages = {85--92},
  year = {2001},
  doi = {10.1002/swf.41},
  address = {Department of Information Systems and Computing, Brunel University, Uxbridge, Middlesex, UB8 3PH, UK},
  number = {3}}

@inproceedings{Harm02a,
  author = {Mark Harman and Robert Hierons and Mark Proctor},
  title = {A new representation and crossover operator for search-based optimization of software modularization},
  booktitle = {In GECCO 2002: Proceedings of the Genetic and Evolutionary Computation Conference},
  pages = {1351--1358},
  publisher = {Morgan Kaufmann Publishers},
  year = {2002}}

@inproceedings{Harm07f,
  author = {Mark Harman and Laurence Tratt},
  title = {Pareto Optimal Search Based Refactoring at the Design Level},
  booktitle = {Proceddings of GECCO'07},
  pages = {1106-1113},
  year = {2007}}

@inproceedings{Harm11a,
  author = {Harman, Mark and Jia, Yue and Langdon, William B.},
  title = {Strong Higher Order Mutation-Based Test Data Generation},
  booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
  pages = {212--222},
  publisher = {Association for Computing Machinery},
  year = {2011},
  url = {https://doi.org/10.1145/2025113.2025144},
  doi = {10.1145/2025113.2025144},
  abstract = {This paper introduces SHOM, a mutation-based test data generation approach that combines
Dynamic Symbolic Execution and Search Based Software Testing. SHOM targets strong
mutation adequacy and is capable of killing both first and higher order mutants. We
report the results of an empirical study using 17 programs, including production industrial
code from ABB and Daimler and open source code as well as previously studied subjects.
SHOM achieved higher strong mutation adequacy than two recent mutation-based test
data generation approaches, killing between 8% and 38% of those mutants left unkilled
by the best performing previous approach.},
  address = {New York, NY, USA},
  isbn = {9781450304436},
  keywords = {test data generation, mutation testing},
  location = {Szeged, Hungary},
  numpages = {11},
  series = {ESEC/FSE '11}}

@book{Harm85a,
  author = {P. Harmon and D. King},
  title = {Expert Systems. Artificial Intelligence in Business},
  publisher = {Judy V. Wilson},
  year = {re-edited 1985},
  note = {Re-edited by Wiley Press Book}}

@book{Haro97a,
  author = {Elliote Rusty Harold},
  title = {Java Network Programming},
  publisher = {O'Reilly},
  year = {1997},
  isbn = {1-56592-227-1}}

@inproceedings{Harp94a,
  author = {Harpal Maini and Kishan Mehrotra and Chilukuri Mohan and Sanjay Ranka},
  title = {Genetic algorithms for graph partitioning and incremental graph partitioning},
  booktitle = {Supercomputing '94: Proceedings of the 1994 conference on Supercomputing},
  pages = {449--457},
  publisher = {IEEE Computer Society Press},
  year = {1994},
  address = {Los Alamitos, CA, USA},
  isbn = {0-8186-6605-6},
  location = {Washington, D.C., United States}}

@inproceedings{Harr00a,
  author = {Harris, Timothy L.},
  title = {Dynamic Adaptive Pre-Tenuring},
  booktitle = {Proceedings of the 2nd International Symposium on Memory Management},
  pages = {127-136},
  publisher = {Association for Computing Machinery},
  year = {2000},
  url = {https://doi.org/10.1145/362422.362476},
  doi = {10.1145/362422.362476},
  abstract = {In a generational garbage collector, a pre-tenured object is one that is allocated directly in the old generation. Pre-tenuring long-lived objects reduces the number of times that they are scanned or copied during garbage collection. Previous work has investigated pre-tenuring based on off-line analysis of execution traces. This paper builds on that work by presenting a dynamic technique in which the decision to pre-tenure a particular kind of object is taken at run-time. This allows decisions to depend on the inputs of a particular application run and also allows decisions to be changed as the application enters different phases. An implementation is presented for the Research VM Java Virtual Machine.},
  address = {New York, NY, USA},
  isbn = {1581132638},
  location = {Minneapolis, Minnesota, USA},
  numpages = {10},
  series = {ISMM '00}}

@incollection{Harr03a,
  author = {Harris, Tim and Fraser, Keir},
  title = {{Language Support for Lightweight Transactions}},
  booktitle = {Object-Oriented Programming, Systems, Languages, and Applications},
  pages = {388--402},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/949305.949340},
  address = {New York, NY, USA},
  location = {Anaheim, California, USA},
  month = oct}

@book{Harr04a,
  author = {Bobby Harris and Rob Warner and Robert Harris},
  title = {The Definitive Guide to {SWT} and {JFace}},
  publisher = {APress},
  year = {2004},
  isbn = {1590593251}}

@inproceedings{Harr86a,
  author = {D.R. Harris},
  title = {A Hybrid Structured Object and Constraint Representation Language},
  booktitle = {Proceedings of the AAAI '86},
  pages = {986--990},
  year = {1986}}

@inproceedings{Harr89a,
  author = {William H. Harrison and Peter F. Sweeney and John J. Shilling},
  title = {Good News, Bad News: Experience Building a Software Development Environment Using the Object-Oriented Paradigm},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {85--94},
  year = {1989},
  month = oct}

@inproceedings{Harr92a,
  author = {Harrison William and Harold Ossher},
  title = {Integrating Coarse-Grained and Fine-Grained Tool Integration},
  booktitle = {Proceedings of the 5th International Workshop on Computer-Aided Software Engineering},
  publisher = {IEEE Computer Society},
  year = {1992},
  month = jul}

@inproceedings{Harr93a,
  author = {William Harrison and Harold Ossher},
  title = {Subject-Oriented Programming (A Critique of Pure Objects)},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = 28,
  pages = {411--428},
  year = {1993},
  doi = {10.1145/165854.165932},
  month = oct}

@techreport{Harr93b,
  author = {William Harrison and Harold Ossher},
  title = {{PCTE} {SDS}'s for Modeling {OOTIS} Control Integration},
  year = {1993},
  institution = {IBM Research Division},
  number = {(82339)},
  type = {RC 18827}}

@inproceedings{Harr95a,
  author = {David R. Harris and Howard B. Reubenstein and Alexander S. Yeh},
  title = {Reverse Engineering to the Architectural Level},
  booktitle = {Proceedings of the 17th International Conference on Software Engineering (ICSE'95)},
  publisher = {Association for Computing Machinery, Inc.},
  year = {1995},
  address = {Seattle, Washington USA},
  month = apr}

@article{Harr96a,
  author = {D.R. Harris and A.S. Yeh and H.B. Reubenstein},
  title = {Extracting Architectural Features from Source Code},
  journal = {Automated Software Engineering},
  volume = {3},
  pages = {109--139},
  year = {1996},
  number = {1-2}}

@book{Harr99a,
  author = {Robert L. Harris},
  title = {Information Graphics: A Comprehensive Illustrated Reference},
  publisher = {Oxford University Press, Inc.},
  year = {1999},
  address = {New York, NY, USA},
  isbn = {0195135326}}

@incollection{Harri96a,
  author = {Neil B. Harrison},
  title = {Organizational Patterns for Teams},
  booktitle = {Pattern Languages of Program Design 2},
  pages = {345--352},
  publisher = {Addison Wesley},
  year = {1996},
  editor = {John M. Vlissides and James O. Coplien and Norman L. Kerth}}

@inproceedings{Hart06a,
  author = {Hartmann, Bj\"{o}rn and Klemmer, Scott R. and Bernstein, Michael and Abdulla, Leith and Burr, Brandon and Robinson-Mosher, Avi and Gee, Jennifer},
  title = {Reflective physical prototyping through integrated design, test, and analysis},
  booktitle = {UIST'06: Proceedings of the 19th Symposium on User interface software and technology},
  pages = {299--308},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1166253.1166300},
  address = {New York, NY, USA},
  location = {Montreux, Switzerland}}

@inproceedings{Hart92a,
  author = {Thorsten Hartmann and Ralf Jungclaus and Gunter Saake},
  title = {Aggregation in a Behaviour Oriented Object Model},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {57--77},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Hart92b,
  author = {Thorsten Hartmann and Ralf Jungclaus},
  title = {Abstract Description of Distributed Object Systems},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {227--244},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@book{Harv94a,
  author = {Brian Harvey and Matthew Wright},
  title = {Simply {Scheme}: introducing computer science},
  publisher = {MIT Press},
  year = {1994}}

@inproceedings{Hass00a,
  author = {Ahmed Hassan and Ric Holt and Bruno Lague and Sebastien Lapierre and Charles Leduc},
  title = {E/R Schema for the Datrix C/C++/Java Exchange Format},
  booktitle = {Proceedings of {WCRE} (Working Conference on Reverse Engineering), Exchange Formats Workshop},
  pages = {284--286},
  publisher = {IEEE Computer Society Press},
  year = {2000},
  address = {Los Alamitos CA},
  month = nov}

@inproceedings{Hass04a,
  author = {Ahmed Hassan and Richard Holt},
  title = {Predicting Change Propagation in Software Systems},
  booktitle = {Proceedings 20th IEEE International Conference on Software Maintenance ({ICSM}'04)},
  pages = {284--293},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  url = {http://plg.uwaterloo.ca/~aeehassa/home/pubs/ICSM2004.pdf},
  doi = {10.1109/ICSM.2004.1357812},
  address = {Los Alamitos CA},
  month = sep}

@inproceedings{Hass04b,
  author = {Ahmed Hassan and Rick Holt},
  title = {Studying The Evolution of Software Systems Using Evolutionary Code Extractors},
  booktitle = {IEEE International Workshop on Principles of Software Evolution (IWPSE04)},
  pages = {76--81},
  year = {2004},
  location = {Kyoto, Japan},
  month = sep}

@inproceedings{Hass04c,
  author = {Ahmed Hassan and Richard Holt},
  title = {Using Development History Sticky Notes to Understand Software Architecture},
  booktitle = {Proceedings of the 12th International Workshop on Program Comprehension},
  pages = {183--193},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/WPC.2004.1311060},
  issn = {1092-8138},
  series = {IWPC'04}}

@inproceedings{Hass05a,
  author = {Ahmed E. Hassan and Richard C. Holt},
  title = {The Top Ten List: Dynamic Fault Prediction},
  booktitle = {{ICSM} '05: Proceedings of the 21st IEEE International Conference on Software Maintenance},
  pages = {263--272},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/ICSM.2005.91},
  address = {Washington, DC, USA},
  isbn = {0-7695-2368-4}}

@article{Hass06a,
  author = {Hassan, Ahmed E. and Holt, Richard C.},
  title = {Replaying Development History to Assess the Effectiveness of Change Propagation Tools},
  journal = {Empirical Softw. Engg.},
  volume = {11},
  pages = {335--367},
  publisher = {Kluwer Academic Publishers},
  year = {2006},
  url = {http://dx.doi.org/10.1007/s10664-006-9006-4},
  doi = {10.1007/s10664-006-9006-4},
  acmid = {1146487},
  address = {Hingham, MA, USA},
  issn = {1382-3256},
  keywords = {Change propagation, Historical co-change, Mining software repositories, Source control systems, Static dependency},
  month = sep,
  number = {3},
  numpages = {33}}

@inproceedings{Hass09a,
  author = {Hassan, A.},
  title = {Predicting Faults Using the Complexity of Code Changes},
  booktitle = {Proceedings of the 31st International Conference on Software Engineering},
  pages = {78--88},
  publisher = {IEEE Computer Society},
  year = {2009},
  series = {ICSE'09}}

@inproceedings{Hass17a,
  author = {Kristian Fjeld Hasselknippe and Jingyue Li},
  title = {A Novel Tool for Automatic GUI Layout Testing},
  booktitle = {2017 24th Asia-Pacific Software Engineering Conference (APSEC)},
  pages = {695-700},
  year = {2017},
  doi = {10.1109/APSEC.2017.87},
  keywords = {graphical user interfaces;mobile computing;program testing;LBH;mobile app development platform;graphical user interface elements;automatic GUI layout testing;Layout Bug Hunter;image diffing algorithms;Layout;Graphical user interfaces;Tools;Visualization;Testing;Fuses;Web pages;GUI;software testing;software tools},
  month = {dec}}

@article{Hassa05,
  author = {Hassan, Ahmed E. and Holt, Richard C.},
  title = {A lightweight approach for migrating web frameworks},
  journal = {Information and Software Technology},
  volume = {47},
  pages = {521--532},
  year = {2005},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584904001466},
  doi = {10.1016/j.infsof.2004.10.002},
  abstract = {Web application development frameworks, like the Java Server Pages framework (JSP), provide web applications with essential functions such as maintaining state information across the application and access control. In the fast paced world of web applications, new frameworks are introduced and old ones are updated frequently. A framework is chosen during the initial phases of the project. Hence, changing it to match the new requirements and demands is a cumbersome task.},
  issn = {09505849},
  language = {en},
  month = jun,
  number = {8},
  urldate = {2018-06-25}}

@article{Hasso05,
  author = {Youssef Hassoun and Roger Johnson and Steve Counsell},
  title = {Applications of dynamic proxies in distributed environments},
  journal = {Software Practice and Experience},
  volume = {35},
  pages = {75--99},
  year = {2005},
  doi = {10.1002/spe.629},
  doi-url = {http://dx.doi.org/10.1002/spe.629},
  issn = {0038-0644},
  month = jan,
  number = {1},
  onlinedate = {17 Nov 2004}}

@book{Hast01a,
  author = {Trevor Hastie and Robert Tibshirani and Jerome Friedman},
  title = {The Elements of Statistical Learning},
  publisher = {Springer},
  year = {2001}}

@phdthesis{Hatc04a,
  author = {Andrew Hatch},
  title = {Software Architecture Visualisation},
  year = {2004},
  school = {Research Institute in Software Engineering, University of Durham},
  month = mar}

@inproceedings{Hatt08a,
  author = {Lile Hattori and Dalton Guerrero and Jorge Figueiredo and Joao Brunet and Jemerson Dam\'asio},
  title = {On the Precision and Accuracy of Impact Analysis Techniques},
  booktitle = {7th IEEE/ACIS International Conference on Computer and Information Science},
  pages = {513 - 518},
  year = {2008},
  abstract = {Several techniques and algorithms for impact analysis of software systems have been recently published in litera- ture. Most of them, however, are not practical enough to be applied in the software industry because, among other rea- sons, they produce too many false results (either positive or negative). In this paper, we propose and evaluate the use of two measures from information retrieval, namely preci- sion and recall, to help express and compare precision and accuracy of impact analysis techniques and algorithms.},
  date-added = {2014-09-08 14:56:40 +0000},
  date-modified = {2014-09-09 12:43:18 +0000}}

@inproceedings{Hatt09a,
  author = {Hattori, L. and Lanza, M.},
  title = {An environment for synchronous software development},
  booktitle = {ICSE Companion},
  pages = {223--226},
  publisher = {IEEE},
  year = {2009}}

@inproceedings{Hatt09b,
  author = {Hattori, L. and Lanza, M.},
  title = {Mining the history of synchronous changes to refine code ownership},
  booktitle = {Proceedings of the 6th International Workshop on Mining Software Repositories},
  pages = {141--150},
  publisher = {IEEE},
  year = {2009},
  doi = {10.1109/MSR.2009.5069492},
  isbn = {978-1-4244-3493-0},
  series = {MSR'09}}

@inproceedings{Hatt10a,
  author = {Hattori, L. and Lanza, M.},
  title = {Syde: a tool for collaborative software development},
  booktitle = {ICSE Tool demo},
  pages = {235--238},
  publisher = {ACM},
  year = {2010}}

@inproceedings{Hatt10b,
  author = {Hattori, L. and Lungu, M. and Lanza, M.},
  title = {Replaying Past Changes in Multi-Developer Projects},
  booktitle = {Proceedings of the Joint ERCIM Workshop on Software Evolution (EVOL) and International Workshop on Principles of Software Evolution (IWPSE)},
  pages = {13--22},
  publisher = {ACM},
  year = {2010}}

@inproceedings{Hauc93a,
  author = {Franz J. Hauck},
  title = {Inheritance Modeled with Explicit Bindings: An Approach to Typed Inheritance},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {231--239},
  year = {1993},
  month = oct}

@article{Haun95a,
  author = {Jim Haungs},
  title = {A technical overview of VisualWorks 2.0},
  journal = {The {Smalltalk} Report},
  pages = {9--14},
  year = {1995},
  month = jan}

@inproceedings{Haup05a,
  author = {M. Haupt and M. Mezini and C. Bockisch and T. Dinkelaker and M. Eichberg and M. Krebs},
  title = {An Execution Layer for Aspect-Oriented Programming Languages},
  booktitle = {Proceedings VEE 2005},
  publisher = {ACM Press},
  year = {2005},
  month = jun}

@inproceedings{Haup07b,
  author = {Michael Haupt and Hans Schippers},
  title = {A Machine Model for Aspect-Oriented Programming},
  booktitle = {Proceedings of European Conference on Object-Oriented Programming (ECOOP'07)},
  volume = {4609},
  pages = {501--524},
  publisher = {Springer Verlag},
  year = {2007},
  isbn = {978-3-540-73588-5},
  series = {LNCS}}

@article{Haup09a,
  author = {Michael Haupt and Bram Adams and Stijn Timbermont andCelina Gibbs and Yvonne Coady and Robert Hirschfeld},
  title = {Disentangling Virtual Machine Architecture},
  journal = {IET Journal on Software, Special Issue on Domain-Specific Aspect Languages},
  volume = {3},
  pages = {201-218},
  year = {2009},
  month = {jun}}

@article{Haup11a,
  author = {Haupt, Michael and Marr, Stefan and Hirschfeld, Robert},
  title = {CSOM/PL: A Virtual Machine Product Line},
  journal = {Journal of Object Technology},
  pages = {1-30},
  year = {2011},
  doi = {10.5381/jot.2011.10.1.a12},
  abstract = {CSOM/PL is a software product line (SPL) derived from applying multi-dimensional separation of concerns (MDSOC) techniques to the domain of high-level language virtual machine (VM) implementations. For CSOM/PL, we modularised CSOM, a Smalltalk VM implemented in C, using VMADL (virtual machine architecture description language). Several features of the original CSOM were encapsulated in VMADL modules and composed in various combinations. In an evaluation of our approach, we show that applying MDSOC and SPL principles to a domain as complex as that of VMs is not only feasible but beneficial, as it improves understandability, maintainability, and configurability of VM implementations without harming performance.}}

@article{Haus04a,
  author = {Hauswirth, Matthias and Chilimbi, Trishul M.},
  title = {Low-Overhead Memory Leak Detection Using Adaptive Statistical Profiling},
  journal = {SIGPLAN Not.},
  volume = {39},
  pages = {156--164},
  publisher = {Association for Computing Machinery},
  year = {2004},
  url = {https://doi.org/10.1145/1037187.1024412},
  doi = {10.1145/1037187.1024412},
  abstract = {Sampling has been successfully used to identify performance optimization opportunities. We would like to apply similar techniques to check program correctness. Unfortunately, sampling provides poor coverage of infrequently executed code, where bugs often lurk. We describe an adaptive profiling scheme that addresses this by sampling executions of code segments at a rate inversely proportional to their execution frequency. To validate our ideas, we have implemented SWAT, a novel memory leak detection tool. SWAT traces program allocations/ frees to construct a heap model and uses our adaptive profiling infrastructure to monitor loads/stores to these objects with low overhead. SWAT reports 'stale' objects that have not been accessed for a 'long' time as leaks. This allows it to find all leaks that manifest during the current program execution. Since SWAT has low runtime overhead (‹5%), and low space overhead (‹10% in most cases and often less than 5%), it can be used to track leaks in production code that take days to manifest. In addition to identifying the allocations that leak memory, SWAT exposes where the program last accessed the leaked data, which facilitates debugging and fixing the leak. SWAT has been used by several product groups at Microsoft for the past 18 months and has proved effective at detecting leaks with a low false positive rate (‹10%).},
  address = {New York, NY, USA},
  issn = {0362-1340},
  keywords = {low-overhead monitoring, runtime analysis, memory leaks},
  month = oct,
  number = {11},
  numpages = {9}}

@article{Haus05a,
  author = {Stefan Haustein and J{\"o}rg Pleumann},
  title = {A model-driven runtime environment for Web applications},
  journal = {Software and System Modeling},
  volume = {4},
  pages = {443--458},
  year = {2005},
  url = {http://citeseer.ist.psu.edu/haustein05modeldriven.html},
  doi = {10.1007/s10270-005-0093-2},
  number = {4}}

@inproceedings{Haut02a,
  author = {Edwin Hautus},
  title = {Improving {Java} Software Through Package Structure Analysis},
  booktitle = {IASTED, International Conference on Software Engineering and Applications},
  year = {2002}}

@article{Have00a,
  author = {Klaus Havelund and Thomas Pressburger},
  title = {Model checking {Java} programs using {Java} {PathFinder}},
  journal = {International Journal on Software Tools for Technology Transfer (STTT)},
  volume = {2},
  pages = {366--381},
  publisher = {Springer},
  year = {2000},
  number = {4}}

@inproceedings{Havi06a,
  author = {Wilke Havinga and Istvan Nagy and Lodewijk Bergmans},
  title = {An Analysis of Aspect Composition Problems},
  booktitle = {In Proceedings of the 3rd European Workshop on Aspects in Software (EIWAS) 2006},
  year = {2006},
  url = {http://janus.cs.utwente.nl:8000/twiki/pub/EIWAS2006/FinalPapers/HavingaNagyBergmans2006.pdf}}

@article{Hawb02a,
  author = {Hawblitzel, C. and von Eicken, T.},
  title = {Luna: a flexible Java protection system},
  journal = {ACM SIGOPS Operating Systems Review},
  volume = {36},
  pages = {391--403},
  publisher = {ACM},
  year = {2002},
  number = {SI}}

@inproceedings{Hawb13a,
  author = {Hawblitzel, Chris and Lahiri, Shuvendu K. and Pawar, Kshama and Hashmi, Hammad and Gokbulut, Sedar and Fernando, Lakshan and Detlefs, Dave and Wadsworth, Scott},
  title = {Will You Still Compile Me Tomorrow? Static Cross-version Compiler Validation},
  booktitle = {European Software Engineering Conference / Foundations of Software Engineering (ESEC/FSE 2013)},
  year = {2013},
  doi = {10.1145/2491411.2491442},
  acmid = {2491442},
  keywords = {Compilers, Translation Validation, Verification},
  location = {Saint Petersburg, Russia},
  numpages = {11},
  series = {ESEC/FSE 2013}}

@inproceedings{Hawb98a,
  author = {Hawblitzel, Chris and Chang, Chi-Chao and Czajkowski, Grzegorz and Hu, Deyu and von Eicken, Thorsten},
  title = {Implementing multiple protection domains in java},
  booktitle = {ATEC '98: Proceedings of the annual conference on USENIX Annual Technical Conference},
  pages = {22--22},
  publisher = {USENIX Association},
  year = {1998},
  address = {Berkeley, CA, USA},
  location = {New Orleans, Louisiana}}

@article{Haya12a,
  author = {Hayakawa, Tomokazu and Hasegawa, Shinya and Yoshika, Shota and Hikita, Teruo},
  title = {Maintaining Web Applications by Translating Among Different {RIA} Technologies},
  journal = {GSTF Journal on Computing},
  pages = {7},
  year = {2012},
  abstract = {As RIA (Rich Internet Application) technologies have been widely used, the compatibility problem has arisen: they are hardly compatible with each other. To solve the problem, we have proposed and implemented an automatic RIA transformation system named Web-IR, which uses an XML-based intermediate representation with a Java-based framework. As concrete examples, Web-IR currently supports Ajax, Flex, JavaFX, and OpenLaszlo as its input/output. Our evaluations show that Web-IR can transform existing real applications into other RIA technologies keeping almost the same appearances. Finally, we conclude that Web-IR can solve the problem sufficiently.},
  file = {Hayakawa et al. - 2012 - Maintaining Web Applications by Translating Among .pdf:C\:\\Users\\benoit.verhaeghe\\Zotero\\storage\\NQN7YGMK\\Hayakawa et al. - 2012 - Maintaining Web Applications by Translating Among .pdf:application/pdf},
  language = {en}}

@inproceedings{Hayd07a,
  author = {Hayden Melton and Ewan Tempero},
  title = {The CRSS Metric for Package Design Quality},
  booktitle = {ACSC '07: Proceedings of the Australian Computer Science Conference},
  year = {2007}}

@article{Hayd12a,
  author = {Hayden, Christopher M and Neamtiu, Iulian},
  title = {Report on the third workshop on hot topics in software upgrades (HotSWUp'11)},
  journal = {ACM SIGOPS Operating Systems Review},
  volume = {46},
  pages = {93--99},
  publisher = {ACM},
  year = {2012},
  number = {1}}

@inproceedings{Hayd12b,
  author = {Hayden, Christopher M and Smith, Edward K and Denchev, Michail and Hicks, Michael and Foster, Jeffrey S},
  title = {Kitsune: Efficient, general-purpose dynamic software updating for {C}},
  booktitle = {{I}nternational {C}onference on {O}bject-{O}riented {P}rogramming {S}ystems {L}anguages and {A}pplications ({OOPSLA}'12)},
  pages = {249--264},
  year = {2012}}

@inproceedings{Haye91a,
  author = {Barry Hayes},
  title = {Using Key Object Opportunism to Collect Old Objects},
  booktitle = {{I}nternational {C}onference on {O}bject-{O}riented {P}rogramming {S}ystems {L}anguages and {A}pplications ({OOPSLA}'91)},
  volume = {26},
  pages = {33--46},
  year = {1991},
  month = nov}

@inproceedings{Haye91b,
  author = {Fiona Hayes and Derek Coleman},
  title = {Coherent Models for Object-Oriented Analysis},
  booktitle = {{I}nternational {C}onference on {O}bject-{O}riented {P}rogramming {S}ystems {L}anguages and {A}pplications ({OOPSLA}'91)},
  volume = {26},
  pages = {171--183},
  year = {1991},
  month = nov}

@inproceedings{Haye94a,
  author = {J. H. Hayes},
  title = {Testing of Object-Oriented Programming Systems ({OOPS}): {A} Fault-Based Approach},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {205--220},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Haye97a,
  author = {Barry Hayes},
  title = {Ephemerons: A new finalization mechanism},
  booktitle = {{I}nternational {C}onference on {O}bject-{O}riented {P}rogramming {S}ystems {L}anguages and {A}pplications ({OOPSLA}'97)},
  year = {1997},
  doi = {10.1145/263700.263733}}

@inproceedings{Hayn84a,
  author = {Haynes, Christopher T. and Friedman, Daniel P. and Wand, Mitchell},
  title = {Continuations and coroutines},
  booktitle = {LFP '84: Proceedings of the 1984 ACM Symposium on LISP and functional programming},
  pages = {293--298},
  publisher = {ACM},
  year = {1984},
  doi = {10.1145/800055.802046},
  address = {New York, NY, USA},
  isbn = {0-89791-142-3},
  location = {Austin, Texas, United States}}

@inbook{Hayn95a,
  author = {P. Haynes and T. Menzies and R.F. Cohen},
  title = {Software Visualization},
  chapter = {{Visualisations} of {Large} {Object}-{Oriented} {Systems}},
  publisher = {World-Scientific},
  year = {1997}}

@inproceedings{Haze04a,
  author = {Hazelwood, Kim and Smith, James E},
  title = {Exploring code cache eviction granularities in dynamic optimization systems},
  booktitle = {International Symposium on Code Generation and Optimization, 2004. CGO 2004.},
  pages = {89--99},
  year = {2004},
  doi = {10.1109/CGO.2004.1281666},
  organization = {IEEE}}

@inproceedings{Haze06a,
  author = {Hazelwood, Kim and Cohn, Robert},
  title = {A cross-architectural interface for code cache manipulation},
  booktitle = {International Symposium on Code Generation and Optimization (CGO'06)},
  pages = {11--pp},
  year = {2006},
  organization = {IEEE}}

@article{Hazz06a,
  author = {Hazzan, Orit and Dubinsky, Yael and Eidelman, Larisa and Sakhnini, Victoria and Teif, Mariana},
  title = {Qualitative research in computer science education},
  journal = {Acm Sigcse Bulletin},
  volume = {38},
  pages = {408--412},
  publisher = {ACM New York, NY, USA},
  year = {2006},
  number = {1}}

@inproceedings{Head05a,
  author = {Michael R. Head and Madhusudhan Govindaraju and Aleksander Slominski and Pu Liu and Nayef Abu-Ghazaleh and Robert van Engelen and Kenneth Chiu and Michael J. Lewis},
  title = {A Benchmark Suite for SOAP-based Communication in Grid Web Services},
  booktitle = {SC '05: Proceedings of the 2005 ACM/IEEE conference on Supercomputing},
  pages = {19},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/SC.2005.2},
  address = {Washington, DC, USA},
  isbn = {1-59593-061-2}}

@mastersthesis{Heal92a,
  author = {Healey, C. G.},
  title = {Visualization of Multivariate Data Using Preattentive Processing},
  year = {1992},
  school = {Department of Computer Science, University of Bristish Columbia}}

@inproceedings{Heal93a,
  author = {Healey, C. G. and Booth, K. S. and Enns, J. T.},
  title = {Harnessing Preattentive Processes for Multivariate Data Visualization},
  booktitle = {GI '93: Proceedings of Graphics Interface},
  year = {1993}}

@inproceedings{Hear06a,
  author = {David Hearnden and Michael Lawley and Kerry Raymond},
  title = {Incremental Model Transformation for the Evolution of Model-Driven Systems},
  booktitle = {International Conference on Model Driven Engineering Languages and Systems (Models/UML 2006)},
  volume = {4199},
  pages = {321--335},
  publisher = {Springer-Verlag},
  year = {2006},
  address = {Berlin, Germany},
  series = {LNCS}}

@inproceedings{Hech18a,
  title={Codifying hidden dependencies in legacy J2EE applications},
  author={Hecht, Geoffrey and Mili, Hafedh and El-Boussaidi, Ghizlane and Boubaker, Anis and Abdellatif, Manel and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Shatnawi, Anas and Privat, Jean and Moha, Naouel},
  booktitle={2018 25th Asia-Pacific Software Engineering Conference (APSEC)},
  pages={305--314},
  year={2018},
  organization={IEEE}
}

@inproceedings{Heck08a,
  author = {Heckman, Sarah and Williams, Laurie},
  title = {On establishing a benchmark for evaluating static analysis alert prioritization and classification techniques},
  booktitle = {Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement},
  pages = {41--50},
  publisher = {ACM},
  year = {2008},
  address = {New York, NY, USA},
  isbn = {978-1-59593-971-5},
  location = {Kaiserslautern, Germany},
  numpages = {10},
  series = {ESEM '08}}

@article{Heck11a,
  author = {Heckman, Sarah and Williams, Laurie},
  title = {A systematic literature review of actionable alert identification techniques for automated static code analysis},
  journal = {Inf. Softw. Technol.},
  volume = {53},
  pages = {363--387},
  publisher = {Butterworth-Heinemann},
  year = {2011},
  address = {Newton, MA, USA},
  issn = {0950-5849},
  issue = {4},
  month = {apr},
  numpages = {25}}

@article{Heck78a,
  author = {Paul Heckel},
  title = {A Technique for Isolating Differences Between Files},
  journal = {CACM},
  volume = {21},
  pages = {264--268},
  year = {1978},
  month = apr,
  number = {4}}

@inproceedings{Hedi03a,
  author = {G{\"o}rel Hedin and Lars Bendix and Boris Magnusson},
  title = {Introducing Software Engineering by means of Extreme Programming},
  booktitle = {Proceedings of ICSE 2003 (International Conference on Software Engineering},
  pages = {586--593},
  publisher = {IEEE Computer Society Press},
  year = {2003}}

@inproceedings{Hedi88a,
  author = {G{\"o}rel Hedin and Boris Magnusson},
  title = {The Mj\/olner Environment: Direct Interaction with Abstractions},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {41--54},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Hedi89a,
  author = {G{\"o}rel Hedin},
  title = {An Object-Oriented Notation for Attribute Grammars},
  booktitle = {Proceedings ECOOP '89},
  pages = {329--345},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@article{Hedi97a,
  author = {G{\"o}rel Hedin},
  title = {Attribute Extensions --- a Technique for Enforcing Programming Conventions},
  journal = {Nordic Journal of Computing},
  volume = {4},
  pages = {93--122},
  year = {1997},
  number = {1}}

@article{Hedi97b,
  author = {G{\"o}rel Hedin},
  title = {Language Support for Design Patterns Using Attribute Extension},
  journal = {Lecture Notes in Computer Science},
  volume = {1357},
  pages = {137--140},
  year = {1998}}

@incollection{Hedi99a,
  author = {G{\"o}rel Hedin and J{\/o}rgen Lindskov Knudsen},
  title = {Language Support for Application Framework Design},
  booktitle = {Implmenting Application Frameworks: Object-{Oriented} Frameworks at Work},
  publisher = {Wiley},
  year = {1999},
  editor = {M. E. Fayad and D.C.Schmidt and R.E. Johnson}}

@phdthesis{Heel09a,
  author = {Heelan, Sean},
  title = {Automatic generation of control flow hijacking exploits for software vulnerabilities},
  year = {2009},
  school = {University of Oxford}}

@inproceedings{Heel18a,
  author = {Sean Heelan and Tom Melham and Daniel Kroening},
  title = {Automatic Heap Layout Manipulation for Exploitation},
  booktitle = {27th USENIX Security Symposium (USENIX Security 18)},
  pages = {763-779},
  publisher = {USENIX Association},
  year = {2018},
  url = {https://www.usenix.org/conference/usenixsecurity18/presentation/heelan},
  address = {Baltimore, MD},
  isbn = {978-1-939133-04-5},
  month = {aug}}

@article{Heer10a,
  author = {Heer, Jeffrey and Bostock, Michael and Ogievetsky, Vadim},
  title = {A Tour through the Visualization Zoo},
  journal = {Queue},
  volume = {8},
  pages = {20--30},
  publisher = {ACM},
  year = {2010},
  doi = {10.1145/1794514.1805128},
  address = {New York, NY, USA},
  issn = {1542-7730},
  number = {5}}

@inproceedings{Heil90a,
  author = {D. Heiler and S. Zdonik},
  title = {Object Views: Extending the Vision},
  booktitle = {Proceedings of the Sixth International Conference on Data Engineering},
  pages = {86--93},
  publisher = {IEEE Computer Society Press},
  year = {1990},
  abstract = {We present a mechanism for producing views in an
object-oriented system. The results are analogous to
database views in traditional database systems,
except that our object views hide or expose methods
as well as data. The mechanism is based on built-in
facilities of our project model for defining data
and procedure abstractions and for constructing new
types and objects. It uses the type system and the
query language of the model to support arbitrary
transformations of the underlying representations in
designing database views. Careful use of the query
language allows one to define updatable views. We
also indicate how our abstraction and view mapping
capabilities can be used to support federation of
heterogeneous software and databases.},
  address = {Los Alamitos CA}}

@book{Hein01a,
  title = {Component-Based Software Engineering},
  publisher = {Addison Wesley},
  year = {2001},
  editor = {George T. Heineman and William T. Councill}}

@article{Hein07a,
  author = {Christian Heinlein},
  title = {Open Types and Bidirectional Relationships as an Alternative to Classes and Inheritance},
  journal = {Journal of Object Technology},
  volume = {6},
  pages = {101--151},
  year = {2007},
  month = mar,
  number = {3}}

@inproceedings{Heis05a,
  author = {Heiss, J.J.},
  title = {The multi-asking virtual machine: building a higly-scalable JVM},
  booktitle = {Java Developers Forum},
  year = {2005}}

@techreport{Held96a,
  author = {Michael Held},
  title = {Analyse der Erstellung eines Help-Dokumentes},
  year = {1996},
  url = {http://scg.unibe.ch/archive/projects/Held96a.html http://scg.unibe.ch/archive/projects/Held96a-bericht.pdf http://scg.unibe.ch/archive/projects/Held96a-hb.pdf},
  abstract = {In der Informatik ist es relativ einfach, sich
Informationen zu beschaffen. Es ist ein leichtes an
eine Vielzahl von Daten zu gelangen. Dabei ergibt
sich die Problematik des Auffindens der
gew\"unschten Informationen. Wer hat nicht schon
einmal nach Daten gesucht und sie nicht gefunden?
Selbstverst\"andlich ist es m\"oglich, Daten so zu
benennen und zu ordnen, dass beim n\"achsten Suchen
der Aufwand minimal ist. Sucht man aber in fremden
Dokumenten, muss man sich wohl oder \"ubel jede
einzelne Datei ansehen. Ich habe mich gefragt, ob
dieser Suchaufwand nicht zu vereinfachen w\"are?
Ziel der Arbeit: Das Q-Handbuch IK 2, welches aus
einer Sammlung von einzelnen Dateien besteht, soll
am Schluss als Help-Dokument vorliegen und f\"ur
alle Interessierte \"uber's Netz zur Verf\"ugung
stehen. Es muss eine Methode ausgearbeitet werden,
damit nicht bei jeder Ver\"anderung (Konfigurationen
werden laufend erstellt) die ganze Arbeit von neuem
gemacht werden muss. Es wird ein passendes
Konversionstool bestimmt, mit welchem danach
gearbeitet wird.},
  institution = {University of Bern},
  month = aug,
  type = {Informatikprojekt}}

@mastersthesis{Held99a,
  author = {Michael Held},
  title = {Scripting f{\"u}r {CORBA}},
  year = {1999},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Held99a.pdf http://scg.unibe.ch/archive/masters/Held99a.ps.gz},
  abstract = {Verteilte Applikationen stellen hohe Anforderungen
an die Software-Hersteller, da diese Applikationen
sehr schnell sehr komplex werden, unzureichende
Entwicklungswerkzeuge haben und einen hohen
Administrationsaufwand verursachen. Zur
Unterst\"utzung werden heutzutage oft Middleware-
Technologien eingesetzt, wie zum Beispiel DCOM, RMI
oder CORBA. In dieser Arbeit wird CORBA analysiert
und mit Hilfe eines in dieser Arbeit erstellten
Verbesserungsansatzes und einer Skript-Sprache zu
einem Komponenten Framework verbessert. CORBA ist
eine Middleware f\"ur verteilte, heterogene
Applikationen und verspricht die Unabh\"angigkeit
von Programmiersprache sowie eine transparente
Verteilung von Objekten. CORBA hat einige
Schwachstellen, wie zum Beispiel die mangelhafte
Flexibilit\"at, die mit hohem Aufwand verbundene
Erweiterbarkeit oder das aufwendige Testen. In der
Informationstechnologie gibt es heute viele,
schnelle Ver\"anderungen, was ein hohes Mass an
Flexibilit\"at und Erweiterbar- beziehungsweise
Ver\"anderbarkeit der Software erfordert. In dieser
Arbeit wird gezeigt, dass eine Middleware, wie
CORBA, durch einen einfachen Verbesserungsansatz,
der Komponenten-Proxy-Methode, wesentlich verbessert
werden kann. Mit Hilfe dieser Methode und der
verwendeten Skript-Sprache Python wird ein
Komponenten Framework erstellt, das die Verwendung
von verteilten Komponenten wesentlich flexibler
macht. Durch dieses Framework wird eine h\"ohere
Abstraktion der Applikationen erreicht, da die
Applikationslogik von den Komponenten getrennt
werden kann und die Komponenten durch Scripting
verbunden werden. Dadurch entstehen allgemeinere
Komponenten, die einfacher wiederverwendet werden
k\"onnen. Die Komponenten-Proxy-Methode f\"ordert
zudem die Einsatzm\"oglichkeiten von CORBA. Es
werden Ans\"atze f\"ur einen 'travelling agent' und
einen 'intelligent proxy' gezeigt.},
  month = mar,
  type = {Diploma thesis}}

@inproceedings{Helf94a,
  author = {Jonathan I. Helfman},
  title = {Similarity Patterns in Language},
  booktitle = {Proceedings of IEEE Symposium on Visual Languages},
  pages = {173--175},
  year = {1994},
  url = {http://imagebeat.com/dotplot/rp3.pdf}}

@article{Helf95a,
  author = {Jonathan I. Helfman},
  title = {{Dotplot} Patterns: a Literal Look at Pattern Languages},
  journal = {TAPOS},
  volume = {2},
  pages = {31--41},
  year = {1995},
  url = {http://www.cs.unm.edu/~jon/dotplot/},
  number = {1}}

@inproceedings{Hell17a,
  author = {Hellendoorn, Vincent J and Devanbu, Premkumar},
  title = {Are deep neural networks the best choice for modeling source code?},
  booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
  pages = {763--773},
  year = {2017}}

@inproceedings{Hell19a,
  author = {Hellendoorn, Vincent J and Proksch, Sebastian and Gall, Harald C and Bacchelli, Alberto},
  title = {When code completion fails: A case study on real-world completions},
  booktitle = {2019 IEEE/ACM 41st International Conference on Software Engineering ({ICSE})},
  pages = {960--970},
  year = {2019},
  organization = {IEEE}}

@book{Hell90a,
  author = {Dan Heller},
  title = {XView Programming Manual: for XView Version 3.2},
  publisher = {O'Reilly \& Associates},
  year = {1993},
  isbn = {0-937175-87-0}}

@article{Helm85a,
  author = {D. Helmbold and D. Luckman},
  title = {Debugging Ada Tasking Programs},
  journal = {IEEE Software},
  volume = {2},
  pages = {47--57},
  year = {1985},
  month = mar,
  number = {2}}

@inproceedings{Helm90a,
  author = {Richard Helm and Ian M. Holland and Dipayan Gangopadhyay},
  title = {Contracts: Specifying Behavioural Compositions in Object-Oriented Systems},
  booktitle = {Proceedings OOPSLA/ECOOP '90},
  volume = {25},
  pages = {169--180},
  year = {1990},
  month = oct}

@inproceedings{Helm91a,
  author = {Richard Helm and Yo\"elle S. Maarek},
  title = {Integrating Information Retrieval and Domain Specific Approaches for Browsing and Retrieval in Object-Oriented Class Libraries},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {47--61},
  year = {1991},
  month = nov}

@misc{Helvetia,
  author = {Lukas Renggli},
  title = {Helvetia, Context Specific Languages with Homogeneous Tool Integration},
  url = {http://scg.unibe.ch/research/helvetia},
  key = {Helvetia},
  note = {http://scg.unibe.ch/research/helvetia}}

@article{Hema23a,
  author = {Hemati Moghadam, Iman and O Cinn\'ide, Mel and Sardarian, Ali and Zarepour, Faezeh},
  title = {Model-based source code refactoring with interaction and visual cues},
  journal = {Journal of Software: Evolution and Process},
  year = {2023},
  doi = {https://doi.org/10.1002/smr.2596},
  abstract = {Abstract Refactoring source code involves the developer in a myriad of program detail that can obscure the design changes that they actually wish to bring about. On the other hand, refactoring a UML model of the code makes it easier to focus on the program design, but the burdensome task of applying the refactorings to the source code is left to the developer. In an attempt to obtain the advantages of both approaches, we propose a refactoring approach where the interaction with the developer takes place at the model level, but the actual refactoring occurs on the source code itself. We call this approach model-based source code refactoring and implement it in this paper using two tools: (1) Design-Imp enables the developer to use interactive search-based design exploration to create a UML-based desired design from an initial design extracted from the source code. It also provides visual cues to improve developer comprehension during the design-level refactoring process and to help the developer to discern between promising and poor refactoring solutions. (2) Code-Imp then refactors the original source so that it has the same functional behavior as the original program, and a design close to the one produced in the design exploration phase, that is, a design that has been confirmed as "desirable" by the developer. We evaluated our approach involving interaction and visual cues with industrial developers refactoring three Java projects, comparing it with an approach using interaction without visual cues and a fully automated approach. The results show that our approach yields refactoring sequences that are more acceptable both to the individual developer and to a set of independent expert refactoring evaluators. Furthermore, our approach removed more code smells and was evaluated very positively by the experiment participants.}}

@article{Hend02a,
  author = {Dean Hendrix and Cross II, James H. and Saeed Maghsoodloo},
  title = {The {Effectiveness} of {Control} {Structure} {Diagrams} in {Source} {Code} {Comprehension} {Activities}},
  journal = {IEEE Transactions on Software Engineering},
  volume = {28},
  pages = {463--477},
  year = {2002},
  month = may,
  number = {5}}

@article{Hend86a,
  author = {J. Hendler},
  title = {Enhancement for Multiple Inheritance},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {98--106},
  year = {1986},
  month = oct,
  number = {10}}

@inproceedings{Hend93a,
  author = {Brian Henderson-Sellers and Simon Moser and Silke Seehusen and Bernhard Weinelt},
  title = {A proposed multi-dimensional framework for object-oriented metrics},
  booktitle = {Proc. of 1st Australian Software Metrics Conf.},
  year = {1993},
  month = nov}

@inproceedings{Hend95a,
  author = {R. J. Hendley and N. S. Drew and A. M. Wood and R. Beale},
  title = {Narcissus: Visualising Information},
  booktitle = {Proceedings InfoVis 1995 (IEEE Symposium on Information Visualization},
  publisher = {IEEE Press},
  year = {1995},
  organization = {IEEE}}

@book{Hend95b,
  author = {Henderson-Sellers, Brian},
  title = {Object-oriented metrics: measures of complexity},
  publisher = {Prentice-Hall, Inc.},
  year = {1995}}

@book{Hend96a,
  author = {Brian Henderson-Sellers},
  title = {Object-Oriented Metrics: Measures of Complexity},
  publisher = {Prentice-Hall},
  year = {1996},
  isbn = {0-13-239872-9}}

@inproceedings{Hend97a,
  author = {T.D. Hendrix and Cross II, James H. and L.A. Barowski and K.S. Mathias},
  title = {{Tool} {Support} for {Reverse} {Engineering} {Multi}-Lingual {Software}},
  booktitle = {Proceedings Fourth Working Conference on Reverse Engineering},
  pages = {136--1143},
  publisher = {IEEE Computer Society},
  year = {1997},
  editor = {Ira Baxter and Alex Quilici and Chris Verhoef}}

@book{Hend98a,
  author = {Brian Henderson-Sellers, Anthony Simons, Houman Younessi},
  title = {The OPEN Toolbox of Techniques},
  publisher = {Addison Wesley},
  year = {1998}}

@inproceedings{Henk05a,
  author = {Johannes Henkel and Amer Diwan},
  title = {{CatchUp}!: capturing and replaying refactorings to support {{API}} evolution},
  booktitle = {Proceedings International Conference on Software Engineering (ICSE 2005)},
  pages = {274--283},
  year = {2005}}

@article{Henn06a,
  author = {Henning, Michi},
  title = {{The Rise and Fall of CORBA}},
  journal = {ACM Queue},
  volume = {4},
  year = {2006},
  doi = {10.1145/1378704.1378718},
  abstract = {The story behind this once-promising distributed
computing technology-why it fell short, and what we
can learn from it.},
  number = {5}}

@techreport{Henn82a,
  author = {Matthew Hennessy},
  title = {Powerdomains and Nondeterministic Recursive Definitions},
  volume = {137},
  pages = {178--193},
  year = {1982},
  editor = {Dezani-Ciancaglini and Montanari},
  institution = {Springer-Verlag},
  series = {LNCS},
  type = {Proceedings, International Symposium on Programming}}

@article{Henn84a,
  author = {Matthew Hennessy},
  title = {Axiomatising Finite Delay Operators},
  journal = {Acta Informatica},
  volume = {21},
  pages = {61--88},
  year = {1984},
  number = {1}}

@article{Henn85a,
  author = {Matthew Hennessy and Robin Milner},
  title = {Algebraic Laws for Nondeterminism and Concurrency},
  journal = {Journal of the ACM},
  volume = {32},
  pages = {137--161},
  year = {1985},
  month = jan,
  number = {1}}

@article{Henn85b,
  author = {Matthew Hennessy},
  title = {Acceptance Trees},
  journal = {Journal of the ACM},
  volume = {32},
  pages = {896--928},
  year = {1985},
  month = jan,
  number = {4}}

@article{Henn86a,
  author = {Matthew Hennessy},
  title = {Proving Systolic Systems Correct},
  journal = {ACM TOPLAS},
  volume = {8},
  pages = {344--387},
  year = {1986},
  month = jul,
  number = {3}}

@book{Henn88a,
  author = {Matthew Hennessy},
  title = {Algebraic Theory of Processes},
  publisher = {MIT Press},
  year = {1988},
  address = {Cambridge, Mass.},
  isbn = {0-262-58093-4}}

@inproceedings{Henn90a,
  author = {Matthew Hennessy and A. Ing\'olfsd\'ottir},
  title = {A Theory of Communicating Processes with Value Passing},
  booktitle = {Proceedings ICALP '90},
  volume = {443},
  pages = {209--219},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Warwick U.},
  editor = {M.S. Paterson},
  month = jul,
  series = {LNCS}}

@techreport{Henn91a,
  author = {Matthew Hennessy},
  title = {A Model for the $pi$ Calculus},
  year = {1991},
  institution = {University of Sussex},
  number = {8/91},
  type = {Technical Report}}

@inproceedings{Henn92a,
  author = {Matthew Hennessy},
  title = {Concurrent Testing of Processes},
  booktitle = {Proceedings of CONCUR '92},
  volume = {630},
  pages = {94--107},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {W.R. Cleaveland},
  series = {LNCS}}

@techreport{Henn92b,
  author = {Matthew Hennessy and H. Lin},
  title = {Symbolic Bisimulations},
  year = {1992},
  url = {ftp://ftp.cogs.sussex.ac.uk//pub/reports},
  institution = {University of Sussex},
  number = {01/92},
  type = {Report}}

@inproceedings{Henn96a,
  author = {Henninger, Scott},
  title = {{Supporting the Construction and Evolution of Component Repositories}},
  booktitle = {Proceedings ICSE '96},
  pages = {279--288},
  publisher = {ACM Press},
  year = {1996},
  address = {Berlin, Germany},
  month = mar}

@article{Henn97a,
  author = {Henninger, Scott},
  title = {{An Evolutionary Approach to Constructing Effective Software Reuse Repositories}},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {6},
  pages = {111--140},
  year = {1997},
  number = {2}}

@inproceedings{Henr04a,
  author = {Henricksen, Karen and Indulska, Jadwiga},
  title = {A software engineering framework for context-aware pervasive computing},
  booktitle = {PerCom'04: Proceedings of the 2nd International Conference on Pervasive Computing and Communications},
  pages = {77--86},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/PERCOM.2004.1276847}}

@article{Henr07,
  author = {Nathalie Henry and Jean-Daniel Fekete and Michael J. McGuffin},
  title = {NodeTrix: a Hybrid Visualization of Social Networks},
  journal = {IEEE Trans. Vis. Comput. Graph.},
  volume = {13},
  pages = {1302-1309},
  year = {2007},
  ee = {http://doi.ieeecomputersociety.org/10.1109/TVCG.2007.70582},
  number = {6}}

@article{Henr07a,
  author = {Nathalie Henry and Jean-Daniel Fekete and Michael J. McGuffin},
  title = {NodeTrix: a Hybrid Visualization of Social Networks},
  journal = {IEEE Trans. Vis. Comput. Graph.},
  volume = {13},
  pages = {1302-1309},
  year = {2007},
  ee = {10.1109/TVCG.2007.70582},
  number = {6}}

@inproceedings{Henr91a,
  author = {Tyson R. Henry and Scott E. Hudson},
  title = {Interactive Graph Layout},
  booktitle = {Proceedings of the 4th annual ACM symposium on User interface software and technology},
  pages = {55--64},
  publisher = {ACM Press},
  year = {1991},
  address = {Hilton Head, South Carolina, United States},
  month = nov}

@techreport{Hens90a,
  author = {Andreas V. Hense},
  title = {Denotational Semantics of an Object Oriented Programming Language with Explicit Wrappers},
  year = {1990},
  misc = {Nov. 5},
  institution = {FB 14, Universit{\"a}t des Saarlandes},
  month = nov,
  note = {submitted for publication},
  number = {A11/90},
  type = {Report}}

@techreport{Hens90b,
  author = {Andreas Hense},
  title = {Polymorphic Type Inference for a Simple Object Oriented Programming Language with State},
  year = {1990},
  institution = {FB 14, Universit{\"a}t des Saarlandes},
  month = nov,
  number = {A20/90},
  type = {Report}}

@techreport{Hens91a,
  author = {Andreas Hense},
  title = {An {O}'Small Interpreter Based on Denotational Semantics},
  year = {1991},
  institution = {FB 14, Universit{\"a}t des Saarlandes},
  month = oct,
  number = {A07/91},
  type = {Report}}

@incollection{Hens91b,
  author = {Andreas Hense},
  title = {Wrapper Semantics of an Object Oriented Programming Language with State},
  booktitle = {Theoretical Aspects of Computer Software 1991},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Sendai, Japan},
  note = {To appear},
  series = {LNCS}}

@techreport{Hens91c,
  author = {Andreas Hense},
  title = {Type Inference for {O}'Small},
  year = {1991},
  institution = {FB 14, Universit{\"a}t des Saarlandes},
  month = oct,
  number = {A06/91},
  type = {Report}}

@techreport{Hens93a,
  author = {Andreas Hense and Gert Smolka},
  title = {Principle Types for Object-Oriented Languages},
  year = {1993},
  institution = {FB 14, Universit{\"a}t des Saarlandes},
  month = jun,
  number = {A02/93},
  type = {Report}}

@article{Henz13a,
  author = {Henzinger, Thomas A. and Kirsch, Christoph M. and Payer, Hannes and Sezgin, Ali and Sokolova, Ana},
  title = {Quantitative Relaxation of Concurrent Data Structures},
  journal = {SIGPLAN Notices},
  volume = {48},
  pages = {317 328},
  publisher = {Association for Computing Machinery},
  year = {2013},
  url = {https://doi.org/10.1145/2480359.2429109},
  doi = {10.1145/2480359.2429109},
  abstract = {There is a trade-off between performance and correctness in implementing concurrent data structures. Better performance may be achieved at the expense of relaxing correctness, by redefining the semantics of data structures. We address such a redefinition of data structure semantics and present a systematic and formal framework for obtaining new data structures by quantitatively relaxing existing ones. We view a data structure as a sequential specification S containing all "legal" sequences over an alphabet of method calls. Relaxing the data structure corresponds to defining a distance from any sequence over the alphabet to the sequential specification: the k-relaxed sequential specification contains all sequences over the alphabet within distance k from the original specification. In contrast to other existing work, our relaxations are semantic (distance in terms of data structure states). As an instantiation of our framework, we present two simple yet generic relaxation schemes, called out-of-order and stuttering relaxation, along with several ways of computing distances. We show that the out-of-order relaxation, when further instantiated to stacks, queues, and priority queues, amounts to tolerating bounded out-of-order behavior, which cannot be captured by a purely syntactic relaxation (distance in terms of sequence manipulation, e.g. edit distance). We give concurrent implementations of relaxed data structures and demonstrate that bounded relaxations provide the means for trading correctness for performance in a controlled way. The relaxations are monotonic which further highlights the trade-off: increasing k increases the number of permitted sequences, which as we demonstrate can lead to better performance. Finally, since a relaxed stack or queue also implements a pool, we actually have new concurrent pool implementations that outperform the state-of-the-art ones.},
  address = {New York, NY, USA},
  issn = {0362 1340},
  keywords = {concurrent data structures, quantitative models, relaxed semantics, costs},
  month = jan,
  number = {1},
  numpages = {12}}

@phdthesis{Herd05a,
  author = {Jorrit N. Herder},
  title = {TOWARDS A TRUE MICROKERNELOPERATING SYSTEM},
  year = {2005},
  school = {Vrije Universiteit Amsterdam in Partial Fulfillment}}

@article{Herl91a,
  author = {Maurice P. Herlihy},
  title = {Wait-Free Synchronization},
  journal = {ACM Transactions on Programming Languages and Systems},
  volume = {13},
  pages = {124--149},
  publisher = {ACM Press},
  year = {1991},
  month = jan,
  number = {1}}

@inproceedings{Herl93a,
  author = {Maurice P. Herlihy and J. Eliot B. Moss},
  title = {Transactional Memory: {Architectural} Support For Lock-Free Data Structures},
  booktitle = {Proceedings of the 20. Annual International Symposium on Computer Architecture},
  pages = {289--300},
  year = {1993}}

@article{Herm00a,
  author = {Herman, Ivan and Melan\c{c}on, Guy and Marshall, M. Scott},
  title = {Graph Visualization and Navigation in Information Visualization: A Survey},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {6},
  pages = {24--43},
  publisher = {IEEE Educational Activities Department},
  year = {2000},
  doi = {10.1109/2945.841119},
  address = {Piscataway, NJ, USA},
  issn = {1077-2626},
  number = {1}}

@techreport{Herm00b,
  author = {Martin Hermann},
  title = {{Erstellung einer zentralen Kundendatenbank bei Firma W. Gassmann AG Biel}},
  year = {2000},
  url = {http://scg.unibe.ch/archive/projects/Herm00a.pdf},
  abstract = {Erstellung einer zentralen Kundendatenbank bei der
Firma W. Gassmann AG, L\"angfeldweg 135, 2504 Biel.
Das Projekt besteht darin, die auf verschiedenste
Quellen verteilten kundenspezifischen Daten zu einer
zentralen Datenquelle zu vereinigen. Diese Datenbank
sollte allen Mitarbeitern via internem LAN oder via
Intranet (WWW) zur Verf\"ugung stehen. Das fertige
Projekt umfasst alle n\"otigen Anpassungen sowie die
Publizierung im firmeneigenen Intranet.},
  institution = {University of Bern},
  month = jun,
  type = {Informatikprojekt}}

@book{Herm03a,
  author = {Michael Hermann and Heiri Leuthold},
  title = {Atlas der politischen Landschaften},
  publisher = {vdf Hochschlverlag AG},
  year = {2003},
  address = {ETH Z\"urich},
  isbn = {3 7281 2901 1}}

@article{Herm13a,
  author = {Fabien Hermenier and Julia Lawall and Gilles Muller},
  title = {BtrPlace: A Flexible Consolidation Manager for Highly Available Applications},
  journal = {IEEE Transactions on Dependable and Secure Computing},
  volume = {10},
  pages = {273-286},
  publisher = {IEEE Computer Society},
  year = {2013},
  address = {Los Alamitos, CA, USA},
  issn = {1545-5971},
  number = {5}}

@article{Hern88a,
  author = {Herndon, Jr., Robert M. and Valdis A. Berzins},
  title = {The Realizable Benefits of a Language Prototyping Language},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-14},
  pages = {803--809},
  year = {1988},
  month = jun,
  number = {6}}

@inproceedings{Herr03a,
  author = {Stephan Herrmann},
  title = {Object Confinement in {Object Teams} --- Reconciling Encapsulation And Flexible Integration},
  booktitle = {3rd German Workshop on Aspect-Oriented Software Development},
  year = {2003},
  url = {http://www.objectteams.org},
  organization = {SIG Object-Oriented Software Development, German Informatics Society}}

@article{Herr07a,
  author = {Herrmann, Stephan},
  title = {A precise model for contextual roles: The programming language ObjectTeams/Java},
  journal = {Appl. Ontol.},
  volume = {2},
  pages = {181--207},
  publisher = {IOS Press},
  year = {2007},
  acmid = {1412405},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {1570-5838},
  issue = {2},
  keywords = {Roles, collaboration, context, method dispatch, modeling, programming language},
  month = {apr},
  numpages = {27}}

@inproceedings{Herr08a,
  author = {Herraiz, Israel and German, Daniel M. and Gonzalez-Barahona, Jesus M. and Robles, Gregorio},
  title = {Towards a simplification of the bug report form in eclipse},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {145--148},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370786},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@article{Herr13a,
  author = {Herraiz, Israel and Rodriguez, Daniel and Robles, Gregorio and Gonzalez-Barahona, Jesus M.},
  title = {The Evolution of the Laws of Software Evolution: A Discussion Based on a Systematic Literature Review},
  journal = {ACM Computing Surveys},
  volume = {46},
  publisher = {ACM},
  year = {2013}}

@techreport{Hert01a,
  author = {Caroline Hertel},
  title = {Informatikprojekt Ideenb\"orse Post},
  year = {2001},
  url = {http://scg.unibe.ch/archive/projects/Hert01a.pdf},
  institution = {University of Bern},
  month = feb,
  type = {Informatikprojekt}}

@inproceedings{Hert02a,
  author = {Hertz, Matthew and Blackburn, Stephen M and Moss, J Eliot B and McKinley, Kathryn S and Stefanovi{\'c}, Darko},
  title = {Error-free garbage collection traces: How to cheat and not get caught},
  booktitle = {Proceedings of the 2002 ACM SIGMETRICS international conference on Measurement and modeling of computer systems},
  pages = {140--151},
  year = {2002}}

@inproceedings{Hert05,
  author = {Hertz, Matthew and Berger, Emery D},
  title = {Quantifying the performance of garbage collection vs. explicit memory management},
  booktitle = {Proceedings of the 20th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages = {313--326},
  year = {2005}}

@inproceedings{Hert05a,
  author = {Hertz, Matthew and Feng, Yi and Berger, Emery D.},
  title = {Garbage collection without paging},
  booktitle = {Proceedings of the 2005 ACM SIGPLAN conference on Programming language design and implementation},
  pages = {143--153},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1065010.1065028},
  acmid = {1065028},
  address = {New York, NY, USA},
  isbn = {1-59593-056-6},
  keywords = {bookmarking collection, garbage collection, generational collection, memory pressure, paging, virtual memory},
  location = {Chicago, IL, USA},
  numpages = {11},
  series = {PLDI '05}}

@article{Hert06a,
  author = {Hertz, Matthew and Blackburn, Stephen M and Moss, J Eliot B and McKinley, Kathryn S and Stefanovi{\'c}, Darko},
  title = {Generating object lifetime traces with Merlin},
  journal = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume = {28},
  pages = {476--516},
  publisher = {ACM New York, NY, USA},
  year = {2006},
  number = {3}}

@book{Herz00a,
  author = {Herzum, Peter and Sims, Oliver},
  title = {Business Components Factory: A Comprehensive Overview of Component-Based Development for the Enterprise},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2000},
  address = {New York, NY, USA},
  edition = {1st},
  isbn = {0471327603}}

@inproceedings{Herz06a,
  author = {Charlotte Herzeel and Kris Gybels and Pascal Costanza},
  title = {A Temporal Logic Language for Context Awareness in Pointcuts},
  booktitle = {Proceeding of the Workshop on Revival of Dynamic Languages},
  year = {2006}}

@inproceedings{Herz07a,
  author = {Charlotte Herzeel and Kris Gybels and Pascal Costanza and Theo D'Hondt},
  title = {Modularizing crosscuts in an e-commerce application in Lisp using HALO},
  booktitle = {Proceeding of the International Lisp Conference (ILC) 2007},
  year = {2007}}

@inproceedings{Herz10a,
  author = {Herzig, Kim Sebastian},
  title = {Capturing the long-term impact of changes},
  booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering},
  pages = {393--396},
  publisher = {ACM},
  year = {2010},
  isbn = {978-1-60558-719-6},
  series = {ICSE'10}}

@inbook{Herz10b,
  author = {Kim Herzig and Andreas Zeller},
  title = {Mining Your Own Evidence},
  chapter = {27},
  booktitle = {Making Software},
  publisher = {O'Reilly Media, Inc.},
  year = {2010},
  editors = {Andy Oram and Greg Wilson},
  isbn = {9780596808327},
  month = oct}

@article{Herz11a,
  author = {Herzig, Kim and Zeller, Andreas},
  title = {Untangling changes},
  journal = {Unpublished manuscript},
  year = {2011},
  url = {https://www.st.cs.uni-saarland.de/publications/files/herzig-tmp-2011.pdf},
  date-added = {2014-11-12 15:29:35 +0000},
  date-modified = {2014-11-12 15:29:35 +0000},
  month = sep}

@inproceedings{Herz11b,
  author = {Kim Herzig and Andreas Zeller},
  title = {Mining Cause-Effect-Chains from Version Histories},
  booktitle = {Proceedings of the 22nd International Symposium on Software Reliability Engineering},
  pages = {60--69},
  publisher = {IEEE},
  year = {2011},
  series = {ISSRE'11}}

@inproceedings{Herz13a,
  author = {Herzig, Kim and Zeller, Andreas},
  title = {The Impact of Tangled Code Changes},
  booktitle = {Proceedings of the 10th Working Conference on Mining Software Repositories},
  pages = {121--130},
  publisher = {IEEE Press},
  year = {2013},
  url = {http://dl.acm.org/citation.cfm?id=2487085.2487113},
  acmid = {2487113},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4673-2936-1},
  location = {San Francisco, CA, USA},
  numpages = {10},
  series = {MSR '13}}

@inproceedings{Herz15,
  author = {Herzig, Kim and Greiler, Michaela and Czerwonka, Jacek and Murphy, Brendan},
  title = {The Art of Testing Less Without Sacrificing Quality},
  booktitle = {Proceedings {ICSE '15} (the 37th International Conference on Software Engineering)},
  pages = {483--493},
  publisher = {IEEE Press},
  year = {2015},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4799-1934-5},
  location = {Florence, Italy},
  numpages = {11}}

@inproceedings{Herz15a,
  author = {Herzig, Kim and Nagappan, Nachiappan},
  title = {Empirically detecting false test alarms using association rules},
  booktitle = {International Conference on Software Engineering},
  year = {2015}}

@inproceedings{Herz94a,
  author = {R. Herzig and M. Gogolla},
  title = {An {SQL}-like Query Calculus for Object-Oriented Databases},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {20--39},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@techreport{Herz94b,
  author = {R. Herzig and M. Gogolla},
  title = {On a Better Formal Basis for Stating {SQL}-like Queries in Value- and Object-Based {DBS}},
  year = {1994},
  institution = {Universit{\"a}t Bremen},
  issn = {0722-8996},
  number = {9/94},
  type = {Report}}

@article{Hess88a,
  author = {Win H. Hesselink},
  title = {A Mathematical Approach to Nodeterminism in Data Types},
  journal = {ACM Transactions on Programming Languages and Systems},
  volume = {10},
  pages = {87--117},
  year = {1988},
  month = jan,
  number = {1}}

@article{Hess90a,
  author = {Wim H. Hesselink},
  title = {Axioms and Models of Linear Logic},
  journal = {Formal Aspects of Computing},
  volume = {2},
  pages = {139--166},
  year = {1990}}

@book{Hess92a,
  author = {Wim H. Hesselink},
  title = {Programs, recursion and unbounded choice},
  publisher = {Cambridge press},
  year = {1992}}

@techreport{Hess94a,
  author = {Win H. Hesselink},
  title = {{NQTHM} proving sequential programs},
  year = {1994},
  institution = {University of Groningen, the Netherlands},
  number = {CS-R9407},
  type = {CS Reports Groningen}}

@misc{Hetz98a,
  author = {Beth Hetzler and Nancy Miller},
  title = {Four Critical Elements for Designing Information Exploration Systems},
  year = {1998},
  url = {http://www.pnl.gov/infoviz/sigchi98/index.html},
  address = {Los Angeles, CA},
  howpublished = {Presented at Information Exploration workshop for ACM SIGCHI '98.},
  month = apr}

@inproceedings{Hetz98b,
  author = {Beth Hetzler and W. Michelle Harris and Susan Havre and Paul Whitney},
  title = {Visualizing the Full Spectrum of Document Relationships},
  booktitle = {Structures and Relations in Knowledge Organization. Proceedings 5th Int. ISKO Conference},
  pages = {168--175},
  publisher = {ERGON Verlag},
  year = {1998},
  address = {W\"urzburg}}

@book{Heue95a,
  author = {Andreas Heuer and Gunter Saake},
  title = {Databanken: Konzepte und Sprachen},
  publisher = {International Thomson Publishing},
  year = {1995},
  isbn = {3-929821-31-1}}

@inproceedings{Heuz03a,
  author = {Dirk Heuzeroth and Thomas Holl and Gustav H\"ogstr\"om and Welf L\"owe},
  title = {Automatic Design Pattern Detection},
  booktitle = {International Workshop on Program Comprehension},
  pages = {94--104},
  year = {2003},
  issn = {1092-8138}}

@article{Hevn97a,
  author = {A.R. Hevner},
  title = {Phase containment metrics for software quality improvement},
  journal = {Information and Software Technology},
  volume = {39},
  pages = {867 - 877},
  year = {1997},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584997000505},
  doi = {https://doi.org/10.1016/S0950-5849(97)00050-5},
  issn = {0950-5849},
  keywords = {Software metrics, Defects, Software development phases, Phase containment, Software quality},
  number = {13}}

@inproceedings{Hewi73a,
  author = {Hewitt, Carl and Bishop, Peter and Steiger, Richard},
  title = {A Universal Modular ACTOR Formalism for Artificial Intelligence},
  booktitle = {Proceedings of the 3rd International Joint Conference on Artificial Intelligence},
  pages = {235-245},
  publisher = {Morgan Kaufmann Publishers Inc.},
  year = {1973},
  abstract = {This paper proposes a modular ACTOR architecture and definitional method for artificial intelligence that is conceptually based on a single kind of object: actors [or, if you will, virtual processors, activation frames, or streams]. The formalism makes no presuppositions about the representation of primitive data structures and control structures. Such structures can be programmed, micro-coded, or hard wired in a uniform modular fashion. In fact it is impossible to determine whether a given object is "really" represented as a list, a vector, a hash table, a function, or a process. The architecture will efficiently run the coming generation of PLANNER-like artificial intelligence languages including those requiring a high degree of parallelism. The efficiency is gained without loss of programming generality because it only makes certain actors more efficient; it does not change their behavioral characteristics. The architecture is general with respect to control structure and does not have or need goto, interrupt, or semaphore primitives. The formalism achieves the goals that the disallowed constructs are intended to achieve by other more structured methods.},
  address = {San Francisco, CA, USA},
  location = {Stanford, USA},
  numpages = {11},
  series = {IJCAI'73}}

@article{Hewi77a,
  author = {Carl Hewitt and Henry Baker},
  title = {Laws for Communicating Parallel Processes},
  journal = {Information Processing 77},
  pages = {987--992},
  publisher = {North-Holland},
  year = {1977},
  editor = {G. Gilchrist}}

@article{Hewi77b,
  author = {Carl Hewitt},
  title = {Viewing Control Structures as Patterns of Passing Messages},
  journal = {Artificial Intelligence},
  volume = {8},
  pages = {323--364},
  year = {1977},
  month = jun,
  number = {3}}

@article{Hewi85a,
  author = {Carl Hewitt},
  title = {The Challenge of Open Systems},
  journal = {Byte},
  volume = {10},
  pages = {223--242},
  year = {1985},
  month = apr,
  number = {4}}

@article{Hewi86a,
  author = {Carl Hewitt},
  title = {Offices are open Open Systems},
  journal = {ACM Transactions Off. Inf. Syst.},
  volume = {4},
  pages = {270--287},
  year = {1986},
  number = {3}}

@article{Hick05a,
	Author = {Michael Hicks and Scott Nettles},
	Doi = {10.1145/1108970.1108971},
	Journal = {ACM Transactions on Programming Languages and Systems},
	Month = {nov},
	Number = {6},
	Pages = {1049--1096},
	Title = {Dynamic software updating},
	Volume = {27},
	Year = {2005}
}

@inproceedings{Hick08,
  author = {Hickey, Rich},
  title = {The {Clojure} programming language},
  booktitle = {DLS '08: Proceedings of the 2008 symposium on Dynamic languages},
  pages = {1--1},
  publisher = {ACM},
  year = {2008},
  url = {http://doi.acm.org/10.1145/1408681.1408682},
  doi = {10.1145/1408681.1408682},
  address = {New York, NY, USA},
  isbn = {978-1-60558-270-2},
  location = {Paphos, Cyprus}}

@manual{Hick12a,
  author = {Hickson, Ian},
  title = {Web Workers (Candidate Recommendation)},
  year = {2012},
  url = {http://www.w3.org/TR/workers},
  organization = {World Wide Web Consortium}}

@book{Higg87a,
  author = {David A. Higgins and Nicholas Zvegintzov},
  title = {Data Structured Software Maintenance: The Warnier/Orr Approach},
  publisher = {Dorset House},
  year = {1987},
  month = jan}

@inproceedings{Higo02a,
  author = {Yoshiki Higo and Yasushi Ueda and Toshihro Kamiya and Shinji Kusumoto and Katsuro Inoue},
  title = {On Software Maintenance Process Improvement based on Code Clone Analysis},
  booktitle = {Proceedings 4th International Conference on Product Focused Software Process Improvement (Profes 2002)},
  year = {2002},
  url = {http://iip-lab.ics.es.osaka-u.ac.jp/~lab-db/betuzuri/archive/394/394.pdf},
  month = dec}

@article{Higu05a,
  author = {Colin de la Higuera},
  title = {A bibliographical study of grammatical inference.},
  journal = {Pattern Recognition},
  volume = {38},
  pages = {1332--1348},
  year = {2005},
  ee = {10.1016/j.patcog.2005.01.003},
  number = {9}}

@inproceedings{Hill00a,
  author = {T. Hill and J. Noble and J. Potter},
  title = {Scalable Visualisations with Ownership Trees},
  booktitle = {Proceedings 37th International Conference on Technology of Object-Oriented Languages and Systems (TOOLS'00)},
  pages = {202--213},
  year = {2000},
  doi = {10.1109/TOOLS.2000.891370},
  isbn = {0-7695-0918-5},
  location = {Sydney, NSW, Australia},
  month = jun}

@article{Hill02a,
  author = {Trent Hill and James Noble and John Potter},
  title = {Scalable Visualizations of Object-Oriented Systems with Ownership Trees.},
  journal = {Journal of Visual Languages and Computing},
  volume = {13},
  pages = {319--339},
  year = {2002},
  doi = {10.1006/jvlc.2002.0238},
  date = {2003-11-21},
  description = {dblp},
  number = {3}}

@techreport{Hill06a,
  author = {Rebecca Hiller},
  title = {{SEDEXfield} --- {PDA} {Programm} zur {Beurteilung} von {Wildb\"achen}},
  year = {2006},
  url = {http://scg.unibe.ch/archive/projects/Hill06a.pdf},
  abstract = {SEDEXfield is a PDA (Personal Digital Assistant)
program to evaluate the sediment delivery in
mountain torrents. The program is written in
SuperWaba, an open source programming language which
is similar to Java, but specially developed for PDA
devices. Using this programming language, it was
possible to develop a program running on Palm OS as
well as under Windows CE. SEDEX itself is a tool to
estimate the sediment delivery of a mountain torrent
in case of a flood or a debris flow. It shall help
specialists to make their analysis more efficient
and to get a more transparent and traceable result
which is, for example, used for hazard maps. The
tool is developed by the Institute for Geography of
the University of Bern in order of the Civil
Engineering Office of the canton of Bern. The PDA
software was developed at the Institute of Computer
Science and Applied Mathematics of the University of
Bern as a project in computer science with the
Institute for Geography as costumer. This document
shall give an overview on the developing process
including the project requirements. Furthermore, a
technical manual and a user handbook is included
into the report.},
  institution = {University of Bern},
  month = mar,
  type = {Bachelor's thesis}}

@inproceedings{Hill08a,
  author = {Hill, Emily and Fry, Zachary P. and Boyd, Haley and Sridhara, Giriprasad and Novikova, Yana and Pollock, Lori and Vijay-Shanker, K.},
  title = {{AMAP}: automatically mining abbreviation expansions in programs to enhance software maintenance tools},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {79--88},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370771},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@inproceedings{Hill09a,
  author = {Hill, Emily and Pollock, Lori and Shanker, K. Vijay},
  title = {Automatically capturing source code context of NL-queries for software maintenance and reuse},
  booktitle = {ICSE '09: Proceedings of the 2009 IEEE 31st International Conference on Software Engineering},
  pages = {232--242},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/ICSE.2009.5070524},
  doi = {10.1109/ICSE.2009.5070524},
  address = {Washington, DC, USA},
  citeulike-article-id = {6610979},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1555001.1555039},
  citeulike-linkout-1 = {http://dx.doi.org/10.1109/ICSE.2009.5070524},
  isbn = {978-1-4244-3453-4},
  posted-at = {2010-02-01 10:02:40},
  priority = {0}}

@inproceedings{Hill12a,
  author = {Mark Hills and Paul Klint and Jurgen J. Vinju},
  title = {Scripting a refactoring with Rascal and Eclipse},
  booktitle = {5th Workshop on Refactoring Tools},
  pages = {40--49},
  year = {2012}}

@inproceedings{Hill12b,
  title={Program analysis scenarios in Rascal},
  author={Hills, Mark and Klint, Paul and Vinju, Jurgen J},
  booktitle={Rewriting Logic and Its Applications: 9th International Workshop, WRLA 2012, Held as a Satellite Event of ETAPS, Tallinn, Estonia, March 24-25, 2012, Revised Selected Papers 9},
  pages={10--30},
  year={2012},
  organization={Springer}
}

@inproceedings{Hill16a,
  title={Navigating the WordPress plugin landscape},
  author={Hills, Mark},
  booktitle={2016 IEEE 24th International Conference on Program Comprehension (ICPC)},
  pages={1--10},
  year={2016},
  organization={IEEE}
}

@article{Hill86a,
  author = {Ralph D. Hill},
  title = {Supporting Concurrency, Communication and Synchronization in Human-Computer Interaction --- The Sassafras {UIMS}},
  journal = {ACM Transactions on Computer Graphics},
  volume = {5},
  pages = {179--210},
  year = {1986},
  month = jul,
  number = {3}}

@inproceedings{Hill87a,
  author = {Ralph D. Hill},
  title = {Event-Response Systems --- {A} Technique for Specifying Multi-Threaded Dialogues},
  booktitle = {Proceedings CHI+GI '87},
  pages = {241--248},
  year = {1987}}

@inproceedings{Hill92a,
  author = {Ralph D. Hill},
  title = {The Abstraction-Link Paradigm: Using Contraints to Connect User Interfaces to Applications},
  booktitle = {Proceedings of CHI '92: the Conference on Human Factors in Computing Systems},
  pages = {335--342},
  year = {1992},
  month = may,
  organization = {ACM}}

@article{Hill93a,
  author = {R.D. Hill and T. Brinck and J.F Patterson and S.L. Rohall and W.T. Wilner},
  title = {The Rendezvous Language and Architecture: Tools for Constructibg Multi-User Interactive Systems},
  journal = {Communications of the ACM},
  volume = {36},
  pages = {62--67},
  year = {1993},
  number = {1}}

@inproceedings{Hill93b,
  author = {R.D. Hill},
  title = {The Rendezvous Constraint Maintenance System},
  booktitle = {Proceedings of UIST '93},
  pages = {225--234},
  year = {1993}}

@article{Hill94a,
  author = {Ralph D. Hill and Tom Brinck and Steven L. Rohall and John F.Patterson and Wayne Wilner},
  title = {{The Rendezvous Architecture and Language for Constructing Multi-User Applications}},
  journal = {ACM Transactions on Computer-Human Interaction},
  volume = {1},
  pages = {81--125},
  year = {1994},
  month = jun,
  number = {2}}

@inproceedings{Hill98a,
  author = {Hilliard, Rich and Rice, Tim},
  title = {Expressiveness in Architecture Description Languages},
  booktitle = {3rd International Workshop on Software Architecture},
  pages = {65--68},
  year = {1998}}

@inproceedings{Hill99a,
  author = {Rich Hilliard},
  title = {Using the {UML} for Architectural Description},
  booktitle = {Proceedings 2nd International UML Conference, UML '99},
  volume = {1723},
  pages = {32--48},
  publisher = {Springer-Verlag},
  year = {1999},
  editor = {Robert France Bernard Rumpe},
  month = oct,
  series = {LNCS}}

@inproceedings{Hils04a,
  author = {Erik Hilsdale and Jim Hugunin},
  title = {Advice weaving in {A}spect{J}},
  booktitle = {AOSD '04: Proceedings of the 3rd international conference on Aspect-oriented software development},
  pages = {26--35},
  publisher = {ACM},
  year = {2004},
  doi = {10.1145/976270.976276},
  address = {New York, NY, USA},
  isbn = {1-58113-842-3},
  location = {Lancaster, UK}}

@book{Hilt99a,
  author = {Michael A. Hiltzik},
  title = {Dealers of Lightning, Xerox Parc and the Dawn of the Computer Age},
  publisher = {Harperbusiness},
  year = {1999}}

@inproceedings{Hind01a,
  author = {Michael Hind},
  title = {Pointer Analysis: Haven't We Solved This Problem Yet?},
  booktitle = {2001 {ACM} {SIGPLAN}-{SIGSOFT} Workshop on Program Analysis for Software Tools and Engineering ({PASTE}'01)},
  pages = {54--61},
  publisher = {ACM},
  year = {2001},
  doi = {10.1145/379605.379665},
  address = {New York, NY, USA},
  isbn = {1-58113-413-4},
  location = {Snowbird, Utah, United States}}

@inproceedings{Hind05a,
  author = {Hindle, Abram and German, Daniel},
  title = {{SCQL}: A formal model and a query language for source control repositories},
  booktitle = {Proceedings of the 2nd International Workshop on Mining Software Repositories},
  pages = {100--105},
  year = {2005},
  series = {MSR'05}}

@inproceedings{Hind06a,
  author = {Benjamin Hindman and Dan Grossman},
  title = {Atomicity via source-to-source translation},
  booktitle = {MSPC '06: Proceedings of the 2006 workshop on Memory system performance and correctness},
  pages = {82--91},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1178597.1178611},
  address = {New York, NY, USA},
  isbn = {1-59593-578-9},
  location = {San Jose, California}}

@inproceedings{Hind08a,
  author = {Abram Hindle and Michael W. Godfrey and Richard C. Holt},
  title = {Reading Beside the Lines: Indentation as a Proxy for Complexity Metrics},
  booktitle = {{ICPC} '08: Proceedings of the 2008 The 16th IEEE International Conference on Program Comprehension},
  pages = {133--142},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {10.1109/{ICPC}.2008.13},
  address = {Washington, DC, USA},
  isbn = {978-0-7695-3176-2}}

@inproceedings{Hind12a,
  author = {Hindle, Abram and Barr, Earl T and Su, Zhendong and Gabel, Mark and Devanbu, Premkumar},
  title = {On the naturalness of software},
  booktitle = {Software Engineering ({ICSE}), 2012 34th International Conference on},
  pages = {837--847},
  year = {2012},
  organization = {IEEE}}

@article{Hind16a,
  author = {Hindle, Abram and Barr, Earl T and Gabel, Mark and Su, Zhendong and Devanbu, Premkumar},
  title = {On the naturalness of software},
  journal = {Communications of the ACM},
  volume = {59},
  pages = {122--131},
  publisher = {ACM},
  year = {2016},
  number = {5}}

@book{Hind86a,
  author = {J. Roger Hindley and Jonathan P. Seldin},
  title = {Introduction to Combinatory Logic and Lambda Calculus},
  publisher = {Cambridge University Press},
  year = {1986}}

@inproceedings{Hind90a,
  author = {Bernd Hindel},
  title = {Objects + Processes = Graphs},
  booktitle = {SOFSEM '90},
  year = {1990},
  address = {Zotavovna Sir\'ena},
  month = nov}

@phdthesis{Hind92a,
  author = {Bernd Hindel},
  title = {Graphische Beschreibung von objektorientierten Programmen},
  year = {1992},
  school = {University of Erlangen-N{\"u}rnberg},
  type = {{Ph.D}. Thesis}}

@inproceedings{Hink93a,
  author = {Hinkle, Bob and Jones, Vicki and Johnson, Ralph E},
  title = {Debugging objects},
  booktitle = {The Smalltalk Report},
  year = {1993}}

@article{Hint04a,
  author = {Jana Hintze and Maic Masuch},
  title = {Designing a 3D Authoring Tool for Children},
  journal = {c5},
  volume = {00},
  pages = {78--85},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/C5.2004.1314373},
  address = {Los Alamitos, CA, USA}}

@inproceedings{Hiro14a,
  author = {Hiroyuki Kirinuki and Yoshiki Higo and Keisuke Hotta and Shinji Kusumoto},
  title = {Hey! Are You Committing Tangled Changes?},
  booktitle = {Proceedings of the 22nd International Conference on Program Comprehension},
  year = {2014},
  abstract = {Although there is a principle that states a commit should only include changes for a single task, it is not always respected by developers. This means that code repositories of- ten include commits that contain tangled changes. The presence of such tangled changes hinders analyzing code repositories because most mining software repository (MSR) ap- proaches are designed with the assumption that every commit includes only changes for a single task. In this paper, we propose a technique to inform developers that they are in the process of committing tangled changes. The proposed technique utilizes the changes included in the past commits to judge whether a given commit includes tangled changes. If it determines that the proposed commit may include tangled changes, it offers suggestions on how the tangled changes can be split into a set of untangled changes.},
  annote = {inproceedings},
  date-added = {2014-09-24 15:12:30 +0000},
  date-modified = {2014-09-24 15:14:38 +0000}}

@inproceedings{Hirs02a,
  author = {Tom Hirschowitz and Xavier Leroy},
  title = {Mixin Modules in a call-by-value setting},
  booktitle = {Proceedings of the European Symposium on Programming},
  pages = {6--20},
  year = {2002},
  url = {http://citeseer.nj.nec.com/hirschowitz02mixin.htm},
  month = apr}

@inproceedings{Hirs02b,
  author = {Robert Hirschfeld},
  title = {{PerspectiveS} --- {AspectS} with Context},
  booktitle = {OOPSLA 2002 Workshop on Engineering Context-Aware Object-Oriented Systems and Environments},
  year = {2002},
  address = {Seattle, WA, United States},
  month = {nov}}

@book{Hirs02c,
  author = {E. D. Hirsch, Joseph F. Kett, James Trefil},
  title = {The New Dictionary of Cultural Literacy},
  publisher = {Houghton Mifflin},
  year = {2002},
  isbn = {978-0618226474}}

@inproceedings{Hirs03a,
  author = {Robert Hirschfeld},
  title = {{AspectS} --- Aspect-Oriented Programming with {Squeak}},
  booktitle = {{Objects, Components, Architectures, Services, and Applications for a Networked World}},
  pages = {216--232},
  publisher = {Springer},
  year = {2003},
  editor = {M. Aksit and M. Mezini and R. Unland},
  number = 2591,
  series = {LNCS}}

@inproceedings{Hirs03b,
  author = {Robert Hirschfeld},
  title = {{AspectS} --- Aspect-Oriented Programming with Squeak},
  booktitle = {Proceedings NODe 2002},
  volume = {2591},
  pages = {216--232},
  publisher = {Springer-Verlag},
  year = {2003},
  series = {LNCS}}

@article{Hirs08a,
  author = {Robert Hirschfeld and Pascal Costanza and Oscar Nierstrasz},
  title = {Context-Oriented Programming},
  journal = {Journal of Object Technology},
  volume = {7},
  year = {2008},
  misc = {March-April},
  abstract = {Context-dependent behavior is becoming increasingly
important for a wide range of application domains,
from pervasive computing to common business
applications. Unfortunately, mainstream programming
languages do not provide mechanisms that enable
software entities to adapt their behavior
dynamically to the current execution context. This
leads developers to adopt convoluted designs to
achieve the necessary runtime flexibility. We
propose a new programming technique called
Context-oriented Programming (COP) which addresses
this problem. COP treats context explicitly, and
provides mechanisms to dynamically adapt behavior in
reaction to changes in context, even after system
deployment at runtime. In this paper we lay the
foundations of COP, show how dynamic layer
activation enables multi-dimensional dispatch,
illustrate the application of COP by examples in
several language extensions, and demonstrate that
COP is largely independent of other commitments to
programming style.},
  cached = {http://scg.unibe.ch/archive/papers/Hirs08aCOP-JOT.pdf},
  medium = {2},
  month = mar,
  number = {3}}

@inproceedings{Hirz16a,
  author = {Hirzel, Matthias and Klaeren, Herbert},
  title = {Code Coverage for Any Kind of Test in Any Kind of Transcompiled Cross-Platform Applications},
  booktitle = {Proceedings of the 2nd International Workshop on User Interface Test Automation},
  pages = {1--10},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {https://doi.org/10.1145/2945404.2945405},
  doi = {10.1145/2945404.2945405},
  abstract = {Code coverage is a widely used measure to determine how thoroughly an application is tested. There are many tools available for different languages. However, to the best of our knowledge, most of them focus on unit testing and ignore end-to-end tests with ui- or web tests. Furthermore, there is no support for determining code coverage of transcompiled cross-platform applications. This kind of application is written in one language, but compiled to and executed in a different programming language. Besides, it may run on a different platform. In this paper, we propose a new code coverage testing method that calculates the code coverage of any kind of test (unit-, integration- or ui-/web-test) for any type of (transcompiled) applications (desktop, web or mobile application). Developers obtain information about which parts of the source code are uncovered by tests. The basis of our approach is generic and may be applied in numerous programming languages based on an abstract syntax tree. We present our approach for any-kind-applications developed in Java and evaluate our tool on a web application created with Google Web Toolkit, on standard desktop applications, and on some small Java applications that use the Swing library to create user interfaces. Our results show that our tool is able to judge the code coverage of any kind of test. In particular, our tool is independent of the unit- or ui-/web test-framework in use. The runtime performance is promising although it is not as fast as already existing tools in the area of unit-testing.},
  address = {New York, NY, USA},
  isbn = {9781450344128},
  keywords = {Software quality, Unit Testing, Cross-Platform, UI Testing, Code instrumentation, Web Testing, Code coverage},
  location = {Saarbr\"{u}cken, Germany},
  numpages = {10},
  series = {INTUITEST 2016}}

@book{Hite99a,
  author = {Kenneth Hite and Craig Neumeier and Michael S. Schiffer},
  title = {GURPS Alternate Earths},
  volume = {2},
  publisher = {Steve Jackson Games},
  year = {1999},
  address = {Austin, Texas},
  isbn = {978-1556343995}}

@article{Hitz95a,
  author = {M. Hitz and B. Montazeri},
  title = {Measure Coupling and Cohesion in Object-Oriented Systems},
  journal = {Proceedings of International Symposium on Applied Corporate Computing (ISAAC '95)},
  year = {1995},
  month = oct}

@article{Hitz96b,
  author = {M. Hitz and B. Montazeri},
  title = {{Chidamber} and {Kemerer}'s Metrics Suite; A Measurement Theory Perspective},
  journal = {IEEE Transactions on Software Engineering},
  volume = {22},
  pages = {267--271},
  year = {1996},
  month = apr,
  number = {4}}

@inproceedings{Hkalm98a,
  author = {Hjalmtysson, Gisli and Gray, Robert},
  title = {Dynamic C++ Classes-A Lightweight Mechanism to Update Code in a Running Program.},
  booktitle = {USENIX Annual Technical Conference},
  volume = {98},
  year = {1998}}

@article{Hoad03a,
  author = {Timothy C. Hoad and Justin Zobel},
  title = {Methods for Identifying Versioned and Plagiarized Documents},
  journal = {Journal of the American Society for Information Science and Technology},
  volume = {54},
  pages = {203--215},
  year = {2003},
  url = {http://goanna.cs.rmit.edu.au/~jz/Papers.html},
  number = {3}}

@article{Hoar69a,
  author = {C.A.R. Hoare},
  title = {An Axiomatic Basis for Computer Programming},
  journal = {Communications of the ACM},
  volume = {12},
  pages = {576--583},
  year = {1969}}

@techreport{Hoar73a,
  author = {C. A. R. Hoare},
  title = {Hints on programming language design},
  year = {1973},
  institution = {Stanford University},
  number = {CS-TR-73-403}}

@article{Hoar74a,
  author = {C.A.R. Hoare},
  title = {Monitors: An Operating System Structuring Concept},
  journal = {CACM},
  volume = {17},
  pages = {549--557},
  year = {1974},
  month = oct,
  number = {10}}

@article{Hoar78a,
  author = {C.A.R. Hoare},
  title = {Communicating Sequential Processes},
  journal = {CACM},
  volume = {21},
  pages = {666--677},
  year = {1978},
  month = aug,
  number = {8}}

@book{Hoar85a,
  author = {C.A.R. Hoare},
  title = {Communicating Sequential Processes},
  publisher = {Prentice-Hall},
  year = {1985},
  isbn = {0-13-153289-8}}

@inproceedings{Hoar99a,
  author = {C.A.R. Hoare and He Jifing},
  title = {A Trace Model for Pointers and Objects},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {1--17},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Object-oriented programs [Dahl, Goldberg, Meyer] are
notoriously prone to the following kinds of error,
which could lead to increasingly severe problems in
the presence of tasking 1. Following a null pointer
2. Deletion of an accessible object 3. Failure to
delete an inaccessible object 4. Interference due to
equality of pointers 5. Inhibition of optimisation
due to fear of (4) Type disciplines and object
classes are a great help in avoiding these errors.
Stronger protection may be obtainable with the help
of assertions, particularly invariants, which are
intended to be true before and after each call of a
method that updates the structure of the heap. This
note introduces a mathematical model and language
for the formulation of assertions about objects and
pointers, and sug- gests that a graphical calculus
[Curtis, Lowe] may help in reasoning about program
correctness. It deals with both garbage-collected
heaps and the other kind. The theory is based on a
trace model of graphs, using ideas from process
algebra; and our development seeks to exploit this
analogy as a unifying principle.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@misc{Hoch01,
  author = {Hochreiter, Sepp and Bengio, Yoshua and Frasconi, Paolo and Schmidhuber, J{\"u}rgen and others},
  title = {Gradient flow in recurrent nets: the difficulty of learning long-term dependencies},
  publisher = {A field guide to dynamical recurrent neural networks. IEEE Press},
  year = {2001}}

@article{Hoch97a,
  author = {Hochreiter, Sepp and Schmidhuber, J{\"u}rgen},
  title = {Long short-term memory},
  journal = {Neural computation},
  volume = {9},
  pages = {1735--1780},
  publisher = {MIT Press},
  year = {1997},
  number = {8}}

@inproceedings{Hoel91a,
  author = {Urs H{\"o}lzle and Craig Chambers and David Ungar},
  title = {Optimizing Dynamically-Typed Object-Oriented Languages With Polymorphic Inline Caches},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {21--38},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  doi = {10.1007/BFb0057013},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Hoel93a,
  author = {Urs H{\"o}lzle},
  title = {Integrating Independently-Developed Components in Object-Oriented Languages},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {36--56},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {Object-oriented programming promises to increase
programmer productivity through better reuse of
existing code. However, reuse is not yet pervasive
in today's object-oriented programs. Why is this so?
We argue that one reason is that current programming
languages and environments assume that components
are perfectly coordinated. Yet in a world where
programs are mostly composed out of reusable
components, these components are not likely to be
completely integrated because the sheer number of
components would make global coordination
impractical. Given that seemingly minor
inconsistencies between individually designed
components would exist, we examine how they can lead
to integration problems with current programming
language mechanisms. We discuss several reuse
mechanisms that can adapt a component in place
without requiring access to the component's source
code and without needing to re-typecheck it.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Hoel95a,
  author = {Urs H{\"o}lzle and David Ungar},
  title = {Do Object-Oriented Languages Need Special Hardware Support?},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {283--302},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@inproceedings{Hoes09a,
  author = {Hoest, Einar W. and OEstvold, Bjarte M.},
  title = {Debugging Method Names},
  booktitle = {Proceedings of the 23nd European Conference on Object-Oriented Programming (ECOOP'09)},
  pages = {To appear},
  publisher = {Springer},
  year = {2009},
  isbn = {978-3-642-03012-3},
  series = {LNCS}}

@misc{Hoey20a,
  author = {Hoey, James and Lanese, Ivan and Nishida, Naoki and Ulidowski, Irek and Vidal, Germ{\'a}n},
  title = {A Case Study for Reversible Computing: Reversible Debugging of Concurrent Programs.},
  year = {2020}}

@mastersthesis{Hofe06b,
  author = {Christoph Hofer},
  title = {Implementing a Backward-In-Time Debugger},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Hofe06b.pdf},
  abstract = {In both development and maintenance of software,
finding and fixing bugs take a huge percentage of
the overall time and resources. Traditional
debugging and stepping execution trace are
well-accepted techniques to understand deep
internals about a program. However in many cases
navigating the stack trace is not enough to find
bugs, since the cause of a bug is often not in the
stack trace anymore and old state is lost, so out of
reach from the debugger. Therefore there is a
challenge in providing new ways of debugging. In
this work, we present the design and implementation
of a backward-in-time debugger for a dynamic
language, i.e., a debugger that allows one to
navigate back the history of the application. We
present the design and implementation of a
backward-in-time debugger called Unstuck and show
our solution to key implementation challenges.},
  month = sep,
  type = {Master's Thesis}}

@inproceedings{Hoff18a,
  author = {Hoffswell, Jane and Satyanarayan, Arvind and Heer, Jeffrey},
  title = {Augmenting code with in situ visualizations to aid program understanding},
  booktitle = {Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems},
  pages = {1--12},
  year = {2018}}

@article{Hoff82a,
  author = {C. M. Hoffman and M. J. O'Donnell},
  title = {Pattern Matching in Trees},
  journal = {Journal of the ACM},
  volume = 29,
  pages = {68--95},
  year = {1982},
  month = jan,
  number = 1}

@book{Hofm00a,
  author = {Christine Hofmeister and Robert L. Nord and Dilip Soni},
  title = {Applied Software Architecture},
  publisher = {Addison Wesley},
  year = {2000}}

@mastersthesis{Hofm01a,
  author = {Thomas F. Hofmann},
  title = {{OPENSPACES}, An Object-Oriented Framework for Configurable Coordination of Heterogeneous Agents},
  year = {2001},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Hofm01a.pdf},
  abstract = {Tuple spaces have turned out to be one of the most
fundamental abstractions for coordinating software
agents. They offer a simple and natural way of
communication and are capable to express a large
class of distributed and parallel algorithms. While
many extensions to the original Linda model have
been proposed, no one approach seems to be
universally applicable to all problem domains. In
this thesis we investigated how a tuple space can be
extended to support configurability of its behavior.
In this way, several variants of the coordination
model can be realized without changing the
underlying base system. Moreover, charging tasks to
the coordination medium allows a programmer to
implement an application at any desired level of
abstraction. A prototype framework, OPENSPACES, has
been developed with the object-oriented language
Smalltalk. It supports both static configurability
as well as dynamic reconfiguration of the behavior
policies through runtime composition. To be useful
in open distributed systems, a coordination medium
must be capable of coordinating a variety of
different software entities. OPENSPACES therefore is
built on top of CORBA and provides access for
heterogeneous external clients. It can be used from
any platform using any programming language with a
CORBA implementation. The sole prerequisite for
participating in a OPENSPACES-based application is
the implementation of the small IDL interface. Hence
not only the provided standard clients, but any
external software agent may be coordinated. We
present the framework and show with a set of typical
examples how it can be instantiated and configured
for different and changing needs. As an example of a
heterogeneous setup with external clients, a Java
agent has been developed to participate in one of
the example applications.},
  month = apr,
  type = {Diploma thesis}}

@inproceedings{Hofm17a,
  author = {Johannes Hofmeister and Janet Siegmund and Daniel V. Holt},
  title = {Shorter Identifier Names Take Longer to Comprehend},
  booktitle = {Proceedings of SANER},
  pages = {217--227},
  publisher = {IEEE},
  year = {2017},
  keywords = {symbol name identifiers}}

@article{Hofm94a,
  author = {Martin Hofmann and Benjamin C. Pierce},
  title = {A Unifying Type-Theoretic Framework for Objects},
  journal = {Journal of Functional Programming},
  year = {1994},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/abstroop.ps.gz},
  month = jan,
  note = {To appear}}

@unpublished{Hofm94b,
  author = {Martin Hofmannn and Benjamin Pierce},
  title = {Positive Subtyping},
  year = {1994},
  misc = {July 22},
  month = jul,
  note = {Department of Computer Science, University of Edinburgh},
  type = {Draft}}

@inproceedings{Hofm95a,
  author = {Martin Hofmann and Benjamin C. Pierce},
  title = {Positive Subtyping},
  booktitle = {Proceedings POPL '95},
  year = {1995},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/pos.ps.gz},
  abstract = {The statement S<T in a lambda-calculus with
subtyping is traditionally interpreted as a semantic
coercion function of type [[S]]->[[T]] that extracts
the ``T part'' of an element of S. If the subtyping
relation is restricted to covariant positions, this
interpretation may be enriched to include both the
coercion and an overwriting function put[S,T]:
[[S]]->[[T]]->[[S]] that updates the T part of an
element of S. We give a realizability model and a
sound equational theory. Though weaker than familiar
calculi of bounded quantification, the restricted
system retains sufficient power to model objects,
encapsulation, and message passing. Moreover,
inheritance may be implemented very
straightforwardly in this setting, using the put
functions arising from ordinary subtyping of records
in place of the more sophisticated systems of record
extension and update often used for this purpose.
The equational laws relating the behavior of
coercions and put functions can be used to prove
simple properties of the resulting classes in such a
way that proofs for superclasses are ``inherited''
by subclasses.}}

@techreport{Hofm99a,
  author = {Thomas F. Hofmann},
  title = {StudentInnen-Verwaltungs-System am Institut f{\"u}r Informatik der Universit{\"a}t Bern},
  year = {1999},
  url = {http://scg.unibe.ch/archive/projects/Hofm99a.pdf http://scg.unibe.ch/archive/projects/Hofm99a-code.pdf},
  institution = {University of Bern},
  month = apr,
  type = {Informatikprojekt}}

@inproceedings{Hofm99b,
  author = {Thomas Hofmann},
  title = {Probabilistic Latent Semantic Indexing},
  booktitle = {International Conference on Research and Development in Information Retrieval},
  year = {1999}}

@techreport{Hogg81a,
  author = {John Hogg and Oscar Nierstrasz and Dennis Tsichritzis},
  title = {Form Procedures},
  pages = {101--133},
  year = {1981},
  url = {http://scg.unibe.ch/archive/uoft/Hogg81aTLA.pdf},
  abstract = {This paper outlines an effort to introduce
automation into an office forms system (OFS) OFS
allows its users to perform a set of operations on
electronic forms. Actions are triggered
automatically when forms or combinations of forms
arrive at particular nodes in the network of
stations. The actions deal with operations on forms.
This paper discusses the facilities provided for the
specification of form-oriented automatic procedures
and sketches their implementation.},
  editor = {D. Tsichritzis},
  institution = {Computer Systems Research Group, University of Toronto},
  month = mar,
  number = {127},
  type = {Omega Alpha, CSRG Technical Report}}

@mastersthesis{Hogg81b,
  author = {John Hogg},
  title = {{TLA}: {A} System for Automating Form Procedures},
  year = {1981},
  school = {Department of Computer Science, University of Toronto},
  type = {M.Sc. thesis}}

@article{Hogg83a,
  author = {John Hogg and Murray S. Mazer and S. Gamvroulas and Dennis Tsichritzis},
  title = {Imail --- An Intelligent Mail System},
  journal = {IEEE Database Engineering},
  volume = {6},
  year = {1983},
  month = sep,
  number = {3}}

@inproceedings{Hogg84a,
  author = {John Hogg and S. Gamvroulas},
  title = {An Active Mail System},
  booktitle = {SIGMOD '84 Proceedings, SIGMOD Record},
  volume = {14},
  year = {1984},
  month = jun}

@incollection{Hogg85a,
  author = {John Hogg and Oscar Nierstrasz and Dennis Tsichritzis},
  title = {Office Procedures},
  booktitle = {Office Automation: Concepts and Tools},
  pages = {137--166},
  publisher = {Springer-Verlag},
  year = {1985},
  url = {http://scg.unibe.ch/archive/uoft/Hogg85aOfficeProcedures.pdf},
  abstract = {This paper outlines an effort to introduce
automation into forms-oriented office procedures.
The system allows its users to specify a set of
operations on electronic forms. Actions are
triggered automatically when certain events occur,
for example, when forms or combinations of forms
arrive at particular nodes in the network of
stations. The actions deal with operations on forms.
The paper discusses the facilities provided for the
specification of form-oriented automatic procedures
and sketches their implementation.},
  address = {Heidelberg},
  editor = {D. Tsichritzis}}

@incollection{Hogg85b,
  author = {John Hogg},
  title = {Intelligent Message Systems},
  booktitle = {Office Automation: Concepts and Tools},
  pages = {113--134},
  publisher = {Springer-Verlag},
  year = {1985},
  address = {Heidelberg},
  editor = {D. Tsichritzis}}

@inproceedings{Hogg87a,
  author = {John Hogg and Steven Weiser},
  title = {{OTM}: applying Objects to Tasks},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {388--393},
  year = {1987},
  month = dec}

@techreport{Hogg87b,
  author = {John Hogg},
  title = {Modelling Coordination Among Objects},
  pages = {165--181},
  year = {1987},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = mar,
  type = {Objects and Things}}

@inproceedings{Hogg91a,
  author = {John Hogg},
  title = {Islands: aliasing Protection In Object-Oriented Languages},
  booktitle = {Proceedings of the International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'91), ACM SIGPLAN Notices},
  volume = {26},
  pages = {271--285},
  year = {1991}}

@inproceedings{Hogg91b,
  author = {Hogg, John and Lea, Doug and Wills, Alan and deChampeaux, Dennis and Holt Richard},
  title = {The Geneva Convention On The Treatment of Object Aliasing},
  booktitle = {Followup Report on ECOOP '91 Workshop W3: Object-Oriented Formal Methods},
  pages = {11--16},
  year = {1991}}

@article{Hogg92a,
  author = {John Hogg and Doug Lea and Alan Wills and Dennis deChampeaux and Richard Holt},
  title = {The {G}eneva convention on the treatment of object aliasing},
  journal = {SIGPLAN OOPS Mess.},
  volume = {3},
  pages = {11--16},
  publisher = {ACM Press},
  year = {1992},
  doi = {10.1145/130943.130947},
  issn = {1055-6400},
  number = {2}}

@book{Hogr95a,
  title = {Proceedings of {IFIP} {WG} 6.1 7th International Conference on Formal Description Techniques},
  publisher = {Chapman \& Hall},
  year = {1995},
  editor = {Dieter Hogrefe and Stefan Leue},
  isbn = {0-412-64450-(2)}}

@inproceedings{Hohe96a,
  author = {Uwe Hohenstein},
  title = {Bridging the Gap between {C}++ and Relational Databases},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {398--420},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@book{Hohp04a,
  author = {Hohpe, G. and WOOLF, B.A.},
  title = {Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions},
  publisher = {Prentice Hall},
  year = {2004},
  url = {http://books.google.com.au/books?id=dH9zp14-1KYC},
  isbn = {9780321200686},
  series = {The Addison-Wesley Signature Series}}

@inproceedings{Holl00a,
  author = {Joseph E. Hollingsworth and Lori Blankenship and Bruce W. Weide},
  title = {Experience Report: Using {RESOLVE/C++} for Commercial Software},
  booktitle = {SIGSOFT '00/FSE-8: Proceedings of the 8th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {11--19},
  publisher = {ACM Press},
  year = {2000},
  doi = {10.1145/355045.355048},
  isbn = {1-58113-205-0},
  location = {San Diego, California, United States}}

@inproceedings{Holl08a,
  author = {Holleis, Paul and Schmidt, Albrecht},
  title = {MAKEIT: Integrate User Interaction Times in the Design Process of Mobile Applications},
  booktitle = {Pervasive'08: Proceedings of the 6th International Conference on Pervasive Computing},
  volume = {5013},
  pages = {56--74},
  publisher = {Springer-Verlag},
  year = {2008},
  series = {LNCS}}

@inproceedings{Holl92a,
  author = {Ian M. Holland},
  title = {Specifying Reusable Components Using Contracts},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {287--308},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@phdthesis{Holl92b,
  author = {Ian M. Holland},
  title = {The Design and Representation of Object-Oriented Components},
  year = {1991},
  school = {Northeastern University},
  url = {http://www.ccs.neu.edu/home/lieber/theses/holland/thesis.ps},
  type = {{Ph.D}. Thesis}}

@phdthesis{Holl92c,
  author = {Joseph E. Hollingsworth},
  title = {Software Component Design-for-Reuse: A Language Independent Discipline Applied to Ada},
  year = {1992},
  school = {Dept. of Computer \& Information Science, The Ohio State University, Columbus, OH},
  url = {http://www.cis.ohio-state.edu/rsrg/}}

@article{Holl94a,
  author = {Joseph E. Hollingsworth and Sethu Sreerama and Bruce W. Weide and Sergey Zhupanov},
  title = {Part IV: {RESOLVE} components in {Ada} and {C++}},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {19},
  pages = {52--63},
  publisher = {ACM Press},
  year = {1994},
  doi = {10.1145/190679.190684},
  issn = {0163-5948},
  number = {4}}

@inproceedings{Holm05a,
  author = {Reid Holmes and Gail C. Murphy},
  title = {Using Structural Context to Recommend Source Code Examples},
  booktitle = {Proceedings of ICSE'05},
  pages = {1--10},
  year = {2005}}

@article{Holm06a,
  author = {Holmes, Reid},
  title = {Approximate Structural Context Matching: An Approach to Recommend Relevant Examples},
  journal = {IEEE Trans. Softw. Eng.},
  booktitle = {Software Engineering, IEEE Transactions on},
  volume = {32},
  pages = {952--970},
  publisher = {IEEE Press},
  year = {2006},
  url = {http://dx.doi.org/10.1109/TSE.2006.117},
  doi = {10.1109/TSE.2006.117},
  address = {Piscataway, NJ, USA},
  citeulike-article-id = {2372522},
  issn = {0098-5589},
  number = {12},
  posted-at = {2009-08-10 15:23:54},
  priority = {5}}

@inproceedings{Holm09a,
  author = {Holmes, R.},
  title = {Do developers search for source code examples using multiple facts?},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {13--16},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070013},
  doi = {10.1109/SUITE.2009.5070013},
  abstract = {In this paper we examine the search behaviours of
developers using the Strathcona source code example
recommendation system over the period of three
years. In particular, we investigate the number of
query facts software engineers included in their
queries as they searched for source code examples.
We found that in practice developers predominantly
searched with multiple search facts and tended to
constrain their queries by iteratively adding more
facts as needed. Our experience with this data
suggest that example search tools should both
support searching with multiple facts as well and
facilitate the construction of multi-fact queries.}}

@inproceedings{Holm10a,
  author = {Holmes, Reid and Walker, Robert J.},
  title = {Customized Awareness: Recommending Relevant External Change Events},
  booktitle = {Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering - Volume 1},
  pages = {465--474},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1806799.1806867},
  doi = {10.1145/1806799.1806867},
  acmid = {1806867},
  address = {New York, NY, USA},
  isbn = {978-1-60558-719-6},
  keywords = {YooHoo, change events, customized awareness, deployment environment, developer-specific awareness, external dependencies, information overload, recommendation system},
  location = {Cape Town, South Africa},
  numpages = {10},
  series = {ICSE '10}}

@book{Holm95a,
  author = {Jim Holmes},
  title = {Building your own Compiler with {C}++},
  publisher = {Prentice-Hall},
  year = {1995},
  isbn = {0-13-182106-7}}

@book{Holm95b,
  author = {Jim Holmes},
  title = {Object-Oriented Compiler Construction},
  publisher = {Prentice-Hall},
  year = {1995},
  isbn = {0-13-192071-5}}

@inproceedings{Holm97a,
  author = {David Holmes and James Noble and John Potter},
  title = {{Aspects of Synchronisation}},
  booktitle = {Proceedings of TOOLS-25'97},
  publisher = {IEEE},
  year = {1997},
  month = nov}

@book{Holo07,
  author = {Adrian Holovaty and Jacob Kaplan-Moss},
  title = {The Django Book},
  publisher = {Apress},
  year = {2007},
  isbn = {TBD}}

@inproceedings{Holt00a,
  author = {Richard C. Holt and Andreas Winter and Andy Sch\"urr},
  title = {{GXL}: Towards a Standard Exchange Format},
  booktitle = {Proceedings {WCRE} '00},
  year = {2000},
  month = nov}

@inproceedings{Holt01a,
  author = {Ric Holt},
  title = {Sofware Architecture as a Shared Mental Model},
  booktitle = {ASERC Workshop on Software Architecture},
  year = {2001},
  address = {University of Alberta},
  month = aug}

@inproceedings{Holt05a,
  author = {Danny Holten and Roel Vliegen and Jarke J. van Wijk},
  title = {Visual Realism for the Visualization of Software Metrics},
  booktitle = {VISSOFT},
  pages = {27--32},
  year = {2005}}

@article{Holt06a,
  author = {Holt and Sch\"urr and Sim and Winter},
  title = {GXL: A graph-based standard exchange format for reengineering},
  journal = {Science of Computer Programming},
  volume = 60,
  pages = {149--170},
  year = {2006},
  month = apr,
  number = 2}

@article{Holt06b,
  author = {Danny Holten},
  title = {Hierarchical Edge Bundles: Visualization of Adjacency Relations in Hierarchal Data},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {12},
  pages = {741--748},
  year = {2006},
  month = sep,
  note = {was holt06a which conflicted with scg},
  number = {5}}

@phdthesis{Holt09a,
  author = {Danny Holten},
  title = {Visualization of Graphs and Trees for Software Analysis},
  year = {2009},
  school = {Computer science department},
  institution = {Eindhoven University of Technology},
  note = {ISBN 978-90-386-1882-1}}

@article{Holt72a,
  author = {Richard Holt},
  title = {Some Deadlock Properties of Computer Systems},
  journal = {ACM Computing Surveys},
  volume = {4},
  pages = {179--196},
  year = {1972},
  month = sep,
  number = {3}}

@book{Holt83a,
  author = {Richard Holt},
  title = {Concurrent Euclid, the {UNIX} system, and {TUNIS}},
  publisher = {Addison Wesley},
  year = {1983},
  address = {Reading, Mass.}}

@inproceedings{Holt96a,
  author = {Richard Holt and Jason Pak},
  title = {{GASE}: Visualizing Software Evolution-in-the-Large},
  booktitle = {Proceedings of Working Conference on Reverse Engineering ({WCRE} 1996)},
  pages = {163--167},
  publisher = {IEEE Computer Society Press},
  year = {1996},
  address = {Los Alamitos CA}}

@inproceedings{Holt98a,
  author = {Richard Holt},
  title = {Structural Manipulations of Software Architecture Using Tarski Relational Algebra},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {210--219},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@techreport{Holt98b,
  author = {Richard C. Holt},
  title = {An Introduction to {TA}: The {Tuple}-{Attribute} Language},
  year = {1998},
  url = {http://plg.uwaterloo.ca/~holt/papers/ta.html},
  institution = {University of Waterloo},
  month = nov}

@inproceedings{Holt99a,
  author = {John B. Tran and Richard C. Holt},
  title = {Forward and Reverse Repair of Software Architecture},
  booktitle = {CASCON '99},
  year = {1999},
  address = {Toronto},
  month = nov}

@book{Holz03a,
  author = {Holzmann, Gerard J.},
  title = {The {SPIN} Model Checker : Primer and Reference Manual},
  publisher = {Addison-Wesley Professional},
  year = {2003},
  url = {http://www.worldcat.org/isbn/0321228626},
  howpublished = {Hardcover},
  isbn = {0321228626}}

@book{Holz04a,
  author = {Steve Holzner},
  title = {Eclipse},
  publisher = {O'Reilly},
  year = {2004},
  isbn = {0596006411},
  month = may}

@article{Holz05a,
  author = {Andreas Holzinger},
  title = {Usability engineering methods for software developers},
  journal = {Commun. ACM},
  volume = {48},
  pages = {71--74},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1039539.1039541},
  address = {New York, NY, USA},
  date-added = {2006-09-11 10:07:03 +0200},
  date-modified = {2006-09-11 10:07:58 +0200},
  issn = {0001-0782},
  number = {1}}

@book{Holz90a,
  author = {Urs H{\"o}lzle and Bay-Wei Chang and Craig Chambers and David Ungar},
  title = {The {SELF} Manual},
  publisher = {Computer Systems Laboratory of Stanford University},
  year = {1991}}

@inproceedings{Holz91a,
  author = {H\"{o}lzle, Urs and Chambers, Craig and Ungar, David},
  title = {Optimizing Dynamically-Typed Object-Oriented Languages With Polymorphic Inline Caches},
  booktitle = {European {C}onference on {O}bject-{O}riented {P}rogramming ({ECOOP}'91)},
  year = {1991},
  doi = {10.1007/BFb0057013}}

@inproceedings{Holz92a,
  author = {H\"{o}lzle, Urs and Chambers, Craig and Ungar, David},
  title = {Debugging Optimized Code with Dynamic Deoptimization},
  booktitle = {Programming Language Design and Implementation ({PLDI}' 92)},
  pages = {32--43},
  publisher = {ACM},
  year = {1992},
  doi = {10.1145/143095.143114},
  acmid = {143114},
  address = {New York, NY, USA},
  location = {San Francisco, California, USA},
  numpages = {12}}

@phdthesis{Holz94a,
  author = {Holzle, Urs},
  title = {Adaptive Optimization for Self: Reconciling High Performance with Exploratory Programming},
  year = {1994},
  school = {Stanford University},
  address = {Stanford, CA, USA},
  advisor = {Ungar, David M.}}

@inproceedings{Holz94b,
  author = {H\"{o}lzle, Urs and Ungar, David},
  title = {Optimizing Dynamically-dispatched Calls with Run-time Type Feedback},
  booktitle = {Programming Language Design and Implementation ({PLDI})},
  pages = {326--336},
  publisher = {ACM},
  year = {1994},
  doi = {10.1145/178243.178478},
  address = {New York, NY, USA},
  isbn = {0-89791-662-X},
  location = {Orlando, Florida, USA},
  numpages = {11},
  series = {PLDI '94}}

@inproceedings{Holz96a,
  author = {A.A.Holzbacher},
  title = {A Software Environment for Concurrent Coordinated Programming},
  booktitle = {Proceedings of COORDINATION '96},
  volume = {1061},
  pages = {249--266},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Cesena, Italy},
  editor = {P. Ciancarini and Chris Hankin},
  series = {LNCS}}

@inproceedings{Hond88a,
  author = {Yasuaki Honda and Akinori Yonezawa},
  title = {Debugging Concurrent Systems Based on Object Groups},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {267--282},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@techreport{Hond90a,
  author = {Kohei Honda and Mario Tokoro},
  title = {Objects and Calculi},
  year = {1990},
  misc = {Oct. 20},
  institution = {Keio University},
  month = oct,
  type = {manuscript}}

@inproceedings{Hond91a,
  author = {Kohei Honda and Mario Tokoro},
  title = {An Object Calculus for Asynchronous Communication},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {133--147},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {Pierre America},
  month = jul,
  series = {LNCS}}

@unpublished{Hond92a,
  author = {Kohei Honda},
  title = {Reduction Theories for Concurrent Calculi --- Behavioural Semantics without Observables},
  year = {1992},
  misc = {Dec. 23},
  month = dec,
  note = {Keio University},
  type = {draft}}

@unpublished{Hond92b,
  author = {Kohei Honda},
  title = {Representing Functions in an Object Calculus},
  year = {1992},
  misc = {Oct. 20},
  month = oct,
  note = {submitted for publicatedKeio University},
  type = {draft}}

@unpublished{Hond92c,
  author = {Kohei Honda},
  title = {Two Bisimilarities in $\nu$-calculus},
  year = {1992},
  misc = {Oct. 9},
  month = oct,
  note = {Keio University},
  type = {draft}}

@inproceedings{Hond92d,
  author = {Kohei Honda and Mario Tokoro},
  title = {On Asynchronous Communication Semantics},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {21--51},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@unpublished{Hond92e,
  author = {Kohei Honda},
  title = {On Interaction Types},
  year = {1992},
  misc = {Aug 17},
  month = aug,
  note = {submitted for publicatedKeio University},
  type = {draft}}

@unpublished{Hond92f,
  author = {Kohei Honda},
  title = {Types for Dyadic Interaction},
  year = {1992},
  misc = {Dec. 23},
  month = dec,
  note = {Keio University},
  type = {draft}}

@phdthesis{Hond98a,
  author = {Koen De Hondt},
  title = {A Novel Approach to Architectural Recovery in Evolving Object-Oriented Systems},
  year = {1998},
  school = {Vrije Universiteit Brussel},
  url = {http://prog.vub.ac.be/Publications/1998/vub-prog-phd-98-02.pdf},
  address = {Belgium},
  month = dec}

@article{Hong12a,
  author = {Hong Mei and Dan Hao and Lingming Zhang and Lu Zhang and Ji Zhou and Rothermel, G.},
  title = {A Static Approach to Prioritizing JUnit Test Cases},
  journal = {Software Engineering, IEEE Transactions on},
  volume = {38},
  pages = {1258-1275},
  year = {2012},
  doi = {10.1109/TSE.2011.106},
  issn = {0098-5589},
  keywords = {Java;program testing;regression analysis;software fault tolerance;JUPTA;JUnit test case prioritization techniques operating in the absence of coverage information;Java programs;dynamic code coverage information;dynamic coverage-based techniques;fault-detection effectiveness;regression testing;static approach;static call graphs;test case prioritization techniques;Regression analysis;Scheduling;Software testing;JUnit;Software testing;call graph;regression testing;test case prioritization},
  month = {nov},
  number = {6}}

@article{Hong12b,
  author = {Hong, Kirak and Park, Jiin and Kim, Sungho and Kim, Taekhoon and Kim, Hwangho and Burgstaller, Bernd and Scholz, Bernhard},
  title = {TinyVM: An Energy-Efficient Execution Infrastructure for Sensor Networks},
  journal = {Softw. Pract. Exper.},
  volume = {42},
  pages = {1193-1209},
  publisher = {John Wiley & Sons, Inc.},
  year = {2012},
  url = {https://doi.org/10.1002/spe.1123},
  doi = {10.1002/spe.1123},
  abstract = {Energy-efficient implementation techniques for virtual machines (VMs) have received little attention yet: conventional wisdom claims that VMs have a diametrical effect on energy consumption, and VM-based applications are therefore short-lived. In this paper, we argue that bytecode interpretation is affordable if we synthesize VMs specifically for energy efficiency. We present TinyVM, an execution infrastructure that seamlessly integrates with C and nesC/TinyOS-based programming environments. TinyVM achieves high code density through the use of compressed bytecode as the primary program representation. Compressed bytecode allows rapid application deployment with low communication overhead. TinyVM executes compressed bytecode in place, which eliminates the need for a decompression stage and thereby reduces memory consumption on sensor nodes. Our infrastructure automates the creation of energy-efficient application-specific VMs. Applications are partitioned in machine code, bytecode, and VM instruction set extensions. Partitioning is manually controlled and/or fully guided by a discrete optimization problem that produces a partitioning with lowest energy consumption for a given program size limit. We provide experimental results for sensor network benchmarks and for selected applications on various CPU architectures including Atmega128-based motes and the ARM-based Intel iMote2. TinyVM has been released under the GNU General Public License.},
  address = {USA},
  issn = {0038-0644},
  issue_date = {October 2012},
  keywords = {virtual machines, bytecode compression, mixed-mode execution, binary/bytecode partitioning},
  month = {oct},
  number = {10},
  numpages = {17}}

@article{Hong97a,
  author = {Hong Zhu and Patrick A. V. Hall and John H. R. May},
  title = {Software Unit Test Coverage and Adequacy},
  journal = {ACM Comput. Surv.},
  volume = {29},
  pages = {366--427},
  publisher = {ACM Press},
  year = {1997},
  doi = {10.1145/267580.267590},
  address = {New York, NY, USA},
  date-added = {2007-02-01 14:05:28 +0100},
  date-modified = {2007-02-01 14:05:28 +0100},
  issn = {0360-0300},
  number = {4}}

@article{Honi93a,
  author = {Shinichi Honiden and Nobuto Kotaka and Yoshinori Kishimoto},
  title = {Formalizing Specification Modeling in {OOA}},
  journal = {IEEE Software (Special Issue on "Making O-O Work")},
  volume = {10},
  pages = {54--66},
  year = {1993},
  month = jan,
  number = {1}}

@inproceedings{Hook84a,
  author = {J.G. Hook},
  title = {Understanding Russell: {A} First Attempt},
  booktitle = {Proceedings, Semantics of Data Types},
  volume = {173},
  pages = {69--85},
  publisher = {Springer-Verlag},
  year = {1984},
  address = {Sophia-Antipolis},
  editor = {Kahn and MacQueen and Plotkin},
  series = {LNCS}}

@inproceedings{Hoon09a,
  author = {Kim, {Taek Hoon} and Sungho Kim and Kirak Hong and Hwangho Kim and Jiin Park and Yousun Ko and Bernd Burgstaller and Bernhard Scholz},
  title = {An efficient mixed-mode execution environment for C on mobile phone platforms},
  booktitle = {2009 WRI World Congress on Computer Science and Information Engineering, CSIE 2009},
  pages = {320-328},
  year = {2009},
  doi = {10.1109/CSIE.2009.909},
  abstract = {Mobile devices are constrained in terms of computational power, battery lifetime and memory sizes. Software development for mobile devices is further complicated by application complexity and heterogeneous hardware platforms. Virtual Machines (VMs) abstract from the underlying hardware, but their use with embedded devices can only be justified if the interpretive overhead is kept to a minimum. In this paper we argue that efficient bytecode execution is feasible on mobile devices. We adapt a VM for the C programming language for ARM-based mobile phone platforms. Our VM utilizes latest interpreter technologies to achieve high performance. It offers mixed-mode execution, i.e., code is either executed on the VM or on the CPU, to combine the advantages of VM-based hardware abstraction with the speed of machine-code. We conduct extensive experiments with the MiBench embedded benchmark suite to evaluate VM-performance and the effectiveness of interpreter optimizations on an ARM-based mobile phone platform. Our interpreter consumes just 10.55KB of code and 0.9KB of data. For all surveyed applications, we achieve a slowdown of less than a factor of 23 over binary code execution, which makes our VM a viable option for bytecode execution on mobile devices.},
  isbn = {9780769535074},
  language = {English},
  series = {2009 WRI World Congress on Computer Science and Information Engineering, CSIE 2009}}

@article{Hoov36a,
  author = {Hoover, E. M.},
  title = {{The measurement of industrial localization}},
  journal = {The Review of Economic Statistics},
  volume = {18},
  pages = {162--171},
  publisher = {JSTOR},
  year = {1936},
  issn = {0034-6535},
  number = {4}}

@book{Hopc79a,
  author = {John E. Hopcroft and Jeffrey D. Ullman},
  title = {Introduction to Automata Theory, Languages and Computation},
  publisher = {Addison Wesley},
  year = {1979},
  address = {Reading, Mass.}}

@book{Hopk95a,
  author = {Trevor Hopkins and Bernard Horan},
  title = {Smalltalk: An Introduction to Application Development using Visualworks},
  publisher = {Prentice-Hall},
  year = {1995},
  isbn = {0-13-318387-4}}

@inproceedings{Hora84a,
  author = {Wolfgang Horak and G{\"u}nther Kr{\"o}nert},
  title = {An Object-Oriented Office Document Architecture Model for Processing and Interchange of Documents},
  booktitle = {Proceedings of the Second ACM-SIGOA Conference},
  pages = {152--160},
  year = {1984},
  address = {Toronto},
  month = jun}

@article{Hora85a,
  author = {Wolfgang Horak},
  title = {Office Document Architecture and Office Document Interchange Formats: Current Status of International Standardization},
  journal = {IEEE Computer},
  volume = {18},
  pages = {50--60},
  year = {1985},
  month = oct,
  number = {10}}

@article{Hori07a,
  author = {Michihiro Horie and Shigeru Chiba},
  title = {Aspect{S}cope: An Outline Viewer for AspectJ Programs},
  journal = {Journal of Object Technology},
  volume = {6},
  pages = {341--361},
  year = {2007},
  month = oct,
  number = {9}}

@inproceedings{Hork15a,
  author = {Hork\'{y}, Vojt\v{e}ch and Libi\v{c}, Peter and Marek, Luk\'{a}\v{s} and Steinhauser, Antonin and T\r{u}ma, Petr},
  title = {Utilizing Performance Unit Tests To Increase Performance Awareness},
  booktitle = {Proceedings of the 6th ACM/SPEC International Conference on Performance Engineering},
  pages = {289-300},
  publisher = {Association for Computing Machinery},
  year = {2015},
  url = {https://doi.org/10.1145/2668930.2688051},
  doi = {10.1145/2668930.2688051},
  abstract = {Many decisions taken during software development impact the resulting application performance. The key decisions whose potential impact is large are usually carefully weighed. In contrast, the same care is not used for many decisions whose individual impact is likely to be small -- simply because the costs would outweigh the benefits. Developer opinion is the common deciding factor for these cases, and our goal is to provide the developer with information that would help form such opinion, thus preventing performance loss due to the accumulated effect of many poor decisions.Our method turns performance unit tests into recipes for generating performance documentation. When the developer selects an interface and workload of interest, relevant performance documentation is generated interactively. This increases performance awareness -- with performance information available alongside standard interface documentation, developers should find it easier to take informed decisions even in situations where expensive performance evaluation is not practical. We demonstrate the method on multiple examples, which show how equipping code with performance unit tests works.},
  address = {New York, NY, USA},
  isbn = {9781450332484},
  keywords = {performance testing, performance awareness, java, performance documentation, javadoc},
  location = {Austin, Texas, USA},
  numpages = {12},
  series = {ICPE '15}}

@inproceedings{Hork15b,
  author = {Hork\'{y}, Vojt\v{e}ch and Libi\v{c}, Peter and Steinhauser, Antonin and T\r{u}ma, Petr},
  title = {DOs and DONT's of Conducting Performance Measurements in Java},
  booktitle = {ICPE'15},
  pages = {337-340},
  publisher = {ACM},
  year = {2015},
  url = {https://doi.org/10.1145/2668930.2688820},
  doi = {10.1145/2668930.2688820},
  abstract = {The tutorial aims at practitioners - researchers or developers - who need to execute small scale performance experiments in Java. The goal is to provide the attendees with a compact overview of some of the issues that can hinder the experiment or mislead the evaluation, and discuss the methods and tools that can help avoid such issues. The tutorial will examine multiple elements of the software execution stack that impact performance, including common virtual machine mechanisms (just-in-time compilation and garbage collection together with associated runtime adaptation), some operating system features (timers) and hardware (memory) - although the focus will be on Java, some of the take away points should apply even in a more general performance experiment context.},
  isbn = {9781450332484},
  keywords = {java, performance measurement, performance evaluation},
  location = {Austin, Texas, USA},
  numpages = {4}}

@incollection{Horn76a,
  author = {Jim J. Horning},
  title = {The Software Project as a Serious Game},
  booktitle = {Software Engineering Education --- Needs and Objectives},
  publisher = {Springer-Verlag},
  year = {1976},
  editor = {Wasserman and Freeman}}

@article{Horn77a,
  author = {Jim J. Horning and David B. Wortman},
  title = {Software Hut: {A} Computer Program Engineering Project in the Form of a Game},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-3},
  pages = {325--330},
  year = {1977},
  month = jul,
  number = {4}}

@article{Horn87a,
  author = {M.F. Hornick and Stanley B. Zdonik},
  title = {A Shared, Segmented Memory System for an Object-Oriented Database},
  journal = {ACM TOOIS},
  volume = {5},
  pages = {70--95},
  year = {1987},
  month = jan,
  number = {1}}

@inproceedings{Horn87b,
  author = {Chris Horn},
  title = {Conformance, Genericity, Inheritance and Enhancement},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {223--233},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Horn92a,
  author = {Bruce Horn},
  title = {Constraint Patterns As a Basis for Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {218--233},
  year = {1992},
  month = oct}

@techreport{Horo91a,
  author = {Michael L. Horowitz},
  title = {An Introduction to Object-Oriented Databases and Database Systems},
  year = {1991},
  address = {Pittsburgh, PA},
  institution = {Carnegie Mellon University, Information Technology Center},
  month = aug,
  type = {{CMU-ITC-91-103}}}

@inproceedings{Horp13a,
author = {Horp\'{a}csi, D\'{a}niel},
title = {Extending Erlang by utilising RefactorErl},
year = {2013},
isbn = {9781450323857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2505305.2505314},
doi = {10.1145/2505305.2505314},
abstract = {In this paper, we present the idea of utilising a refactoring tool for implementing extensions to a programming language. We elaborate the correspondence between the main components of the compiler and the refactoring tool, and examine how analysis and transformation features of the tool can be exploited for turning its refactoring framework into a translation framework. The presented method allows one, for instance, to make the Erlang language supportive for embedding domain specific languages as well as to make its functions portable.},
booktitle = {Proceedings of the Twelfth ACM SIGPLAN Workshop on Erlang},
pages = {63-72},
numpages = {10},
keywords = {domain specific language, erlang, language extension, precompiler, preprocessor, refactoring, static code analysis, transformation, translation},
location = {Boston, Massachusetts, USA},
series = {Erlang '13}
}

@article{Horp16a,
  title={Towards trustworthy refactoring in Erlang},
  author={Horp{\'a}csi, D{\'a}niel and K{\H{o}}szegi, Judit and Thompson, Simon},
  journal={arXiv preprint arXiv:1607.02228},
  year={2016}
}

@article{Horp21a,
title={Towards a Generic Framework for Trustworthy Program Refactoring},
volume={25},
url={https://cyber.bibl.u-szeged.hu/index.php/actcybern/article/view/4121},
DOI={10.14232/actacyb.284349},
number={4},
journal={Acta Cybernetica},
author={Horp\'acsi, Daniel and K\"oszegi, Judit and N\'emeth, D\'avid J.},
year={2021},
month=mar,
pages={753-779}
}

@article{Horr02a,
  author = {I. Horrocks},
  title = {DAML+OIL: a description logic for the Semantic Web},
  journal = {IEEE Data Eng Bull},
  volume = {25},
  pages = {4--9},
  year = {2002},
  number = {1}}

@techreport{Hors90a,
  author = {Nigel Horspool},
  title = {Mode Analysis Techniques for Discovery of Lists in Prolog},
  pages = {305--312},
  year = {1990},
  abstract = {Abstract interpretation is a technique that has been
applied to Prolog code for the purposes of mode
analysis and determinacy analysis. This paper shows
how it may also be used to discover which Prolog
objects are lists. One use of such an analysis would
be for program verification purposes. A second use
would be for optimizing memory allocation,
especially if cdr-coding is used to implement
lists.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@book{Hors98a,
  author = {Cay Horstmann},
  title = {Computing Concepts with {Java} Essentials},
  publisher = {Willey},
  year = {1998},
  isbn = {0-471-17223-5}}

@mastersthesis{Horv04a,
  author = {Marc-Philippe Horvath},
  title = {Automatic Recognition of Class Blueprint Patterns},
  year = {2004},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Horv04a.pdf},
  abstract = {In reverse engineering, class blueprint patterns are
an efficient way to determine the purpose and
abilities of a class. Finding those patterns is not
trivial because the graphical representation of a
large software system is too complex to be grasped
by a software reengineer or a group of reengineers
to find all the similarities and patterns in it.
This thesis presents a technique to discover known
and unknown class patterns automatically in a
software system. Our approach is based on the theory
of graph pattern recognition, mainly graph edit
distance and maximal common subgraph (MCS)
algorithms. Using MCS and hierarchical clustering we
automatically detect known and unknown patterns.},
  month = oct,
  type = {Diploma thesis}}

@inproceedings{Horv08a,
  title={Building a refactoring tool for Erlang},
  author={Horv{\'a}th, Zolt{\'a}n and L{\"o}vei, L{\'a}szl{\'o} and Kozsik, Tam{\'a}s and Kitlei, R{\'o}bert and V{\'\i}g, Anik{\'o} Nagyn{\'e} and Nagy, Tam{\'a}s and T{\'o}th, Melinda and Kir{\'a}ly, Roland},
  booktitle={Workshop on Advanced Software Development Tools and Techniques, WASDETT},
  volume={2008},
  year={2008}
}

@article{Horw89a,
  author = {Horwitz, Susan and Prins, Jan and Reps, Thomas},
  title = {Integrating Non-Interfering Versions of Programs},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume = {11},
  pages = {345--387},
  publisher = {ACM},
  year = {1989},
  doi = {10.1145/65979.65980},
  address = {New York, NY, USA},
  date-added = {2009-10-21 11:29:50 +0200},
  date-modified = {2009-10-21 11:29:59 +0200},
  issn = {0164-0925},
  number = {3}}

@inproceedings{Horw90a,
  author = {Susan Horwitz},
  title = {Identifying the semantic and textual differences between two versions of a program},
  journal = {SIGPLAN Notices},
  booktitle = {Proceedings of the {ACM} {SIGPLAN} '90 Conference on Programming Language Design and Implementation},
  volume = {25},
  pages = {234--245},
  year = {1990},
  url = {citeseer.ist.psu.edu/horwitz90identifying.html},
  address = {White Plains, NY},
  month = jun}

@article{Horw91a,
  author = {Susan Horwitz and Thomas Reps},
  title = {Efficient comparison of program slices},
  journal = {Acta Informatica},
  volume = {28},
  pages = {713--732},
  year = {1991}}

@techreport{Hosk90a,
  author = {Hosking, Antony L. and Moss, J. E and Bliss, Cynthia},
  title = {Design of an Object Faulting Persistent {Smalltalk}},
  year = {1990},
  address = {Amherst, MA, USA},
  institution = {University of Massachusetts}}

@inproceedings{Hosk92a,
  author = {Antony L. Hosking and J. Eliot B. Moss and Darko Stefanovi\'c},
  title = {A Comparative Performance Evaluation of Write Barrier Implementations},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {92--109},
  year = {1992},
  month = oct}

@inproceedings{Hosk93a,
  author = {Antony L. Hosking and J. Eliot B. Moss},
  title = {Object Fault Handling for Persistent Programming Languages: {A} Performance Evaluation},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {288--303},
  year = {1993},
  month = oct}

@inproceedings{Hosk99a,
  author = {Hosking, Antony L. and Chen, Jiawan},
  title = {{PM3}: An Orthogonal Persistent Systems Programming Language - Design, Implementation, Performance},
  booktitle = {Proceedings of the 25th International Conference on Very Large Data Bases},
  pages = {587--598},
  publisher = {Morgan Kaufmann Publishers Inc.},
  year = {1999},
  url = {http://dl.acm.org/citation.cfm?id=645925.671503},
  acmid = {671503},
  address = {San Francisco, CA, USA},
  isbn = {1-55860-615-7},
  numpages = {12},
  series = {VLDB '99}}

@inproceedings{Host09a,
  author = {H{\o}st, Einar W and {\O}stvold, Bjarte M},
  title = {Debugging method names},
  booktitle = {European Conference on Object-Oriented Programming},
  pages = {294--317},
  year = {2009},
  organization = {Springer}}

@misc{HotSwap,
  title = {HotSwap},
  url = {http://developers.sun.com/dev/coolstuff/hotswap/publications.html},
  key = {HotSwap}}

@article{Hou06a,
  author = {Hou, D. and Hoover, J.},
  title = {Using {SCL} to Specify and Check Design Intent in Source Code},
  journal = {IEEE Transactions on Software Engineering},
  volume = {32},
  pages = {404-423},
  year = {2006},
  issue = {6}}

@article{Hove04a,
  author = {David Hovemeyer and William Pugh},
  title = {Finding bugs is easy},
  journal = {ACM SIGPLAN Notices},
  volume = {39},
  pages = {92--106},
  publisher = {ACM New York, NY, USA},
  year = {2004},
  number = {12}}

@inproceedings{Hove05a,
  author = {Hove, Siw Elisabeth and Anda, Bente},
  title = {Experiences from Conducting Semi-structured Interviews in Empirical Software Engineering Research},
  booktitle = {Proceedings of the 11th IEEE International Software Metrics Symposium},
  pages = {23--},
  publisher = {IEEE Computer Society},
  year = {2005},
  url = {http://dx.doi.org/10.1109/METRICS.2005.24},
  doi = {10.1109/METRICS.2005.24},
  acmid = {1092163},
  address = {Washington, DC, USA},
  isbn = {0-7695-2371-4},
  series = {METRICS '05}}

@book{Howa06a,
  author = {Howard, M. and Lipner, S.},
  title = {The Security Development Lifecycle},
  publisher = {Microsoft Press},
  year = {2006}}

@book{Howa95a,
  author = {Tim Howard},
  title = {The {Smalltalk} Developer's Guide to VisualWorks},
  publisher = {SIGS Books},
  year = {1995},
  isbn = {1-884842-11-9}}

@article{Howd82a,
  author = {W. E. Howden},
  title = {Weak Mutation Testing and Completeness of Test Sets},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-8},
  pages = {371--379},
  year = {1982},
  date-added = {2007-01-31 10:27:08 +0100},
  date-modified = {2007-02-01 14:06:58 +0100},
  month = jul,
  number = {4}}

@inproceedings{Hoyd93a,
  author = {Geir Magne H\/oydalsvik and Guttorm Sindre},
  title = {On the purpose of Object-Oriented Analysis},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {240--258},
  year = {1993},
  month = oct}

@inproceedings{Hsi00a,
  author = {Idris Hsi and Colin Potts},
  title = {Studying the Evolution and Enhancement of Software Features},
  booktitle = {Proceedings IEEE International Conference on Software Maintenance ({ICSM} 2000)},
  pages = {143--151},
  publisher = {IEEE Computer Society Press},
  year = {2000},
  address = {New York NY}}

@inproceedings{Hsi03a,
  author = {Idris Hsi and Colin Potts},
  title = {Ontological Excavation: Unearthing the core concepts of an application},
  booktitle = {Proceedings IEEE Working Conference on Reverse Engineering ({WCRE} 2003)},
  pages = {345--352},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  address = {Los Alamitos CA},
  month = nov}

@article{Hsia97a,
  author = {Hsia, Pei and Li, Xiaolin and Chenho Kung, David and Hsu, Chih-Tung and Li, Liang and Toyoshima, Yasufumi and Chen, Cris},
  title = {A technique for the selective revalidation of OO software},
  journal = {Journal of Software Maintenance: Research and Practice},
  volume = {9},
  pages = {217--233},
  publisher = {Wiley Online Library},
  year = {1997},
  number = {4}}

@inproceedings{Hsie96a,
  author = {Hsieh, Cheng-Hsueh A and Gyllenhaal, John C and Hwu, Wen-mei W},
  title = {Java bytecode to native code translation: The Caffeine prototype and preliminary results},
  booktitle = {Proceedings of the 29th annual ACM/IEEE international symposium on Microarchitecture},
  pages = {90--99},
  year = {1996},
  organization = {IEEE Computer Society}}

@article{Hu02a,
  author = {E. Yu-Shing Hu and G. Bernat and A. Wellings},
  title = {A {Static} {Timing} {Analysis} {Environment} {Using} {Java} {Architecture} for {Safety} {Critical} {Real}-{Time} {Systems}},
  journal = {In Proceedings of 7th IEEE International Workshop on Object-Oriented Real-Time Dependable Systems (WORDS-2002)},
  pages = {64--71},
  year = {2002},
  month = jan}

@inproceedings{Hu13a,
  author = {Hu, Wei and Wong, Kenny},
  title = {Using Citation Influence to Predict Software Defects},
  booktitle = {Proceedings of the 10th Working Conference on Mining Software Repositories},
  pages = {419--428},
  publisher = {IEEE Press},
  year = {2013},
  url = {http://dl.acm.org/citation.cfm?id=2487085.2487162},
  acmid = {2487162},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4673-2936-1},
  location = {San Francisco, CA, USA},
  numpages = {10},
  series = {MSR '13}}

@inproceedings{Hu18a,
  author = {Hu, Xing and Li, Ge and Xia, Xin and Lo, David and Jin, Zhi},
  title = {Deep code comment generation},
  booktitle = {Proceedings of the 26th Conference on Program Comprehension},
  pages = {200--210},
  year = {2018},
  organization = {ACM}}

@article{Huan06a,
  author = {Gang Huang and Hong Mei and Fu-Qing Yang},
  title = {Runtime Recovery and Manipulation of Software Architecture of Component-Based Systems},
  journal = {Automated Software Engineering},
  volume = {13},
  pages = {257--281},
  publisher = {Kluwer Academic Publishers},
  year = {2006},
  doi = {10.1007/s10515-006-7738-4},
  address = {Hingham, MA, USA},
  issn = {0928-8910},
  number = {2}}

@inproceedings{Huan06b,
  author = {Huang, Xianglong and Blackburn, Stephen M and Grove, David and McKinley, Kathryn S},
  title = {Fast and efficient partial code reordering: taking advantage of dynamic recompilatior},
  booktitle = {Proceedings of the 5th international symposium on Memory management},
  pages = {184--192},
  year = {2006}}

@inproceedings{Huan06c,
  author = {Huang, Xianglong and Lewis, Brian T and McKinley, Kathryn S},
  title = {Dynamic Code Management: Improving Whole Program Code Locality in Managed Runtimes},
  booktitle = {Proceedings of the 2nd International Conference on Virtual Execution Environments},
  pages = {133-143},
  publisher = {Association for Computing Machinery},
  year = {2006},
  url = {https://doi.org/10.1145/1134760.1134779},
  doi = {10.1145/1134760.1134779},
  abstract = {Poor code locality degrades application performance by increasing memory stalls due to instruction cache and TLB misses. This problem is particularly an issue for large server applications written in languages such as Java and C\# that provide just-in-time (JIT) compilation, dynamic class loading, and dynamic recompilation. However, managed runtimes also offer an opportunity to dynamically profile applications and adapt them to improve their performance. This paper describes a Dynamic Code Management system (DCM) in a managed runtime that performs whole program code layout optimizations to improve instruction locality.We begin by implementing the widely used Pettis-Hansen algorithm for method layout to improve code locality. Unfortunately, this algorithm is too costly for a dynamic optimization system, O(n3) in time in the call graph. For example, Pettis-Hansen requires a prohibitively expensive 35 minutes to lay out MiniBean which has 15,586 methods. We propose three new code placement algorithms that target ITLB misses, which typically have the greatest impact on performance. The best of these algorithms, Code Tiling, groups methods into page sized tiles by performing a depth-first traversal of the call graph based on call frequency. Excluding overhead, experimental results show that DCM with Code Tiling improves performance by 6% on the large MiniBean benchmark over a baseline that orders methods based on invocation order, whereas Pettis-Hansen placement offers less improvement, 2%, over the same base. Furthermore, Code Tiling lays out MiniBean in just 0.35 seconds for 15,586 methods (6000 times faster than Pettis-Hansen) which makes it suitable for high-performance managed runtimes.},
  address = {New York, NY, USA},
  isbn = {1595933328},
  keywords = {code layout, locality, code generation, dynamic optimization, performance monitoring, virtual machines},
  location = {Ottawa, Ontario, Canada},
  numpages = {11},
  series = {VEE '06}}

@inproceedings{Huan06c,
  author = {Huang, Xianglong and Lewis, Brian T and McKinley, Kathryn S},
  title = {Dynamic Code Management: Improving Whole Program Code Locality in Managed Runtimes},
  booktitle = {Proceedings of the 2nd International Conference on Virtual Execution Environments},
  pages = {133-143},
  publisher = {Association for Computing Machinery},
  year = {2006},
  url = {https://doi.org/10.1145/1134760.1134779},
  doi = {10.1145/1134760.1134779},
  abstract = {Poor code locality degrades application performance by increasing memory stalls due to instruction cache and TLB misses. This problem is particularly an issue for large server applications written in languages such as Java and C\# that provide just-in-time (JIT) compilation, dynamic class loading, and dynamic recompilation. However, managed runtimes also offer an opportunity to dynamically profile applications and adapt them to improve their performance. This paper describes a Dynamic Code Management system (DCM) in a managed runtime that performs whole program code layout optimizations to improve instruction locality.We begin by implementing the widely used Pettis-Hansen algorithm for method layout to improve code locality. Unfortunately, this algorithm is too costly for a dynamic optimization system, O(n3) in time in the call graph. For example, Pettis-Hansen requires a prohibitively expensive 35 minutes to lay out MiniBean which has 15,586 methods. We propose three new code placement algorithms that target ITLB misses, which typically have the greatest impact on performance. The best of these algorithms, Code Tiling, groups methods into page sized tiles by performing a depth-first traversal of the call graph based on call frequency. Excluding overhead, experimental results show that DCM with Code Tiling improves performance by 6% on the large MiniBean benchmark over a baseline that orders methods based on invocation order, whereas Pettis-Hansen placement offers less improvement, 2%, over the same base. Furthermore, Code Tiling lays out MiniBean in just 0.35 seconds for 15,586 methods (6000 times faster than Pettis-Hansen) which makes it suitable for high-performance managed runtimes.},
  address = {New York, NY, USA},
  isbn = {1595933328},
  keywords = {code layout, locality, code generation, dynamic optimization, performance monitoring, virtual machines},
  location = {Ottawa, Ontario, Canada},
  numpages = {11},
  series = {VEE '06}}

@inproceedings{Huan07a,
  author = {Shan Shan Huang and David Zook and Yannis Smaragdakis},
  title = {cJ: enhancing java with safe type conditions},
  booktitle = {AOSD '07: Proceedings of the 6th international conference on Aspect-oriented software development},
  pages = {185--198},
  publisher = {ACM Press},
  year = {2007},
  doi = {10.1145/1218563.1218584},
  address = {New York, NY, USA},
  isbn = {1-59593-615-7},
  location = {Vancouver, British Columbia, Canada}}

@inproceedings{Huan09a,
  author = {Huang, Sheng and Chen, Yang and Zhu, Jun and Li, Zhong Jie and Tan, Hua Fang},
  title = {{An Optimized Change-driven Regression Testing Selection Strategy for Binary Java Applications}},
  booktitle = {Proceedings of the 2009 ACM Symposium on Applied Computing},
  pages = {558--565},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1529282.1529403},
  acmid = {1529403},
  address = {New York, NY, USA},
  isbn = {978-1-60558-166-8},
  keywords = {binary Java application, regression testing selection, test case prioritization},
  location = {Honolulu, Hawaii},
  numpages = {8},
  series = {SAC '09}}

@inproceedings{Huan11a,
  author = {Sheng Huang and Zhong Jie Li and Jun Zhu and Yanghua Xiao and Wei Wang},
  title = {A novel approach to regression test selection for J2EE applications},
  booktitle = {Software Maintenance ({ICSM}), 2011 27th IEEE International Conference on},
  pages = {13-22},
  year = {2011},
  doi = {10.1109/ICSM.2011.6080768},
  issn = {1063-6773},
  keywords = {Java;program testing;J2EE;Java application market;hybrid test-case tracing;regression test selection;software system retesting;unified change identification;Instruments;Java;Libraries;Loading;Reflection;Software;Testing;J2EE;Regression Testing;Tracing},
  month = {sep}}

@inproceedings{Huan11b,
  author = {Huang, Jin and Carminati, Federico and Betev, Latchezar and Luzzi, Cinzia and Lu, Yansheng and Zhou, Daicui},
  title = {Identifying composite refactorings with a scripting language},
  booktitle = {2011 IEEE 3rd International Conference on Communication Software and Networks},
  pages = {267-271},
  year = {2011},
  doi = {10.1109/ICCSN.2011.6014267}}

@article{Huang13a,
  author = {Huang, Jeff and Zhang, Charles and Dolby, Julian},
  title = {Clap: Recording local executions to reproduce concurrency failures},
  journal = {Acm Sigplan Notices},
  volume = {48},
  pages = {141--152},
  publisher = {ACM New York, NY, USA},
  year = {2013},
  number = {6}}

@book{Hubb98a,
  author = {Thane Hubbel},
  title = {Teach Yourself Cobol in 24 Hours},
  publisher = {Sams},
  year = {1998}}

@mastersthesis{Hube19a,
  title={Masterarbeit Implementation of an Automatic Extract Method Refactoring},
  author={Johannes Hubert},
  year={2019},
  school={University of Stuttgart},
  url={https://api.semanticscholar.org/CorpusID:201111123}
}

@article{Huch00a,
  author = {Marianne Huchard and Herv{\'e} Dicky and Herv{\'e} Leblanc},
  title = {Galois {Lattice} as a {Framework} to specify {Algorithms} {Building} {Class} {Hierarchies}},
  journal = {Theoretical Informatics and Applications},
  volume = {34},
  pages = {521--548},
  year = {2000}}

@inproceedings{Huch00b,
  author = {Marianne Huchard and Herv{\'e} Leblanc},
  title = {Computing {Interfaces} in {JAVA}},
  booktitle = {Proceedings of ASE '00 (15th IEEE International Conference onAutomated Software Engineering},
  pages = {317--320},
  year = {2000},
  location = {Grenoble, France}}

@book{Huch05a,
  title = {Langages et Mod\`eles \`a Objets LMO'05},
  volume = {11},
  publisher = {Lavoisier},
  year = {2005},
  editor = {Marianne Huchard and St\'ephane Ducasse and Oscar Nierstrasz},
  isbn = {2-7462-1125-4},
  series = {L'objet}}

@article{Huch07a,
  author = {Marianne Huchard and Rouane Hacene and Cyril Roume and Petko Valtchev},
  title = {Relational Concept Discovery in Structured Datasets},
  journal = {Annals of Mathematics and Artificial Intelligence},
  volume = {49},
  pages = {39-76},
  publisher = {Springer Netherlands},
  year = {2007},
  doi = {10.1007/s10472-007-9056-3},
  abstract = {Relational datasets, i.e., datasets in which
individuals are described both by their own features
and by their relations to other individuals, arise
from various sources such as databases, both
relational and object-oriented, knowledge bases, or
software models, e.g., UML class diagrams. When
processing such complex datasets, it is of prime
importance for an analysis tool to hold as much as
possible to the initial format so that the semantics
is preserved and the interpretation of the final
results eased. Therefore, several attempts have been
made to introduce relations into the formal concept
analysis field which otherwise generated a large
number of knowledge discovery methods and tools.
However, the proposed approaches invariably look at
relations as an intra-concept construct, typically
relating two parts of the concept description, and
therefore can only lead to the discovery of
coarse-grained patterns. As an approach towards the
discovery of finer-grain relational concepts, we
propose to enhance the classical (object -
attribute) data representations with a new dimension
that is made out of inter-object links (e.g.,
spouse, friend, manager- of, etc.). Consequently,
the discovered concepts are linked by relations
which, like associations in conceptual data models
such as the entity-relation diagrams, abstract from
existing links between concept instances. The
borders for the application of the relational mining
task are provided by what we call a relational
context family, a set of binary data tables
representing individuals of various sorts (e.g.,
human beings, companies, vehicles, etc.) related by
additional binary relations. As we impose no
restrictions on the relations in the dataset, a
major challenge is the processing of relational
loops among data items. We present a method for
constructing concepts on top of circular
descriptions which is based on an iterative
approximation of the final solution. The underlying
construction methods are illustrated through their
application to the restructuring of class
hierarchies in object-oriented software engineering,
which are described in UML.},
  editor = {Anne Berry, Eric San Juan, Maurice Pouzet and Martin C. Golumbic},
  issn = {1012-2443 ({P}rint) 1573-7470 ({O}nline)},
  month = apr,
  number = {1/4}}

@inproceedings{Huch99a,
  author = {Marianne Huchard and Herv{\'e} Leblanc},
  title = {From {JAVA} {Classes} to {JAVA} {Interfaces} through {Galois} {Lattices}},
  booktitle = {Actes de ORDAL '99 (3rd International Conference on Orders, Algorithms and Applications)},
  pages = {211--216},
  year = {1999},
  address = {Montpellier, France}}

@article{Huda89a,
  author = {Paul Hudak},
  title = {Conception, Evolution, and Application of Functional Programming Languages},
  journal = {ACM Computing Surveys},
  volume = {21},
  pages = {359--411},
  year = {1989},
  month = sep,
  number = {3}}

@article{Huda92a,
  author = {Paul Hudak and Joseph H. Fasel},
  title = {A Gentle Introduction to Haskell},
  journal = {ACM SIGPLAN Notices},
  volume = {27},
  pages = {T1-T53},
  year = {1992},
  url = {http://www.haskell.org/tutorial/},
  month = may,
  number = {5}}

@article{Huda92b,
  author = {Paul Hudak and Simon Peyton Jones and Philip Wadler},
  title = {Report on the Programming Language Haskell --- {A} Non-strict, Purely Functional Language (Version 1.2)},
  journal = {ACM SIGPLAN Notices},
  volume = {27},
  year = {1992},
  url = {http://www.haskell.org/},
  month = may,
  number = {5}}

@article{Huda96a,
  author = {Paul Hudak},
  title = {Building domain specific embedded languages},
  journal = {ACM Computing Surveys},
  volume = {28},
  year = {1996},
  doi = {doi.acm.org/10.1145/242224.242477},
  month = dec,
  number = {4es}}

@inproceedings{Huda98a,
  author = {Paul Hudak},
  title = {Modular Domain Specific Languages and Tools},
  booktitle = {Proceedings: Fifth International Conference on Software Reuse},
  pages = {134--142},
  publisher = {IEEE Computer Society Press},
  year = {1998},
  editor = {P. Devanbu and J. Poulin}}

@inproceedings{Huen95a,
  author = {Hermann Hueni and Ralph E. Johnson and Robert Engel},
  title = {A Framework for Network Protocol Software},
  booktitle = {Proceedings OOPSLA '95, ACM SIGPLAN Notices},
  year = {1995},
  url = {ftp://st.cs.uiuc.edu/pub/patterns/papers/conduits+.ps},
  abstract = {Writing software to control networks is important
and difficult. It must be efficient, reliable, and
flexible. Conduits+ is framework for network
software that has been used to implement the
signalling system of a multi-protocol ATM 1 access
switch. An earlier version was used to implement
TCP/IP. It reduces the complexity of network
software, makes it easier to extend or modify
network protocols, and is sufficiently efficient.
Conduits+ shows the power of a componentized
object-oriented framework and of common
object-oriented design patterns.},
  month = oct}

@inproceedings{Huer94a,
  author = {Walter L. H{\"u}rsch},
  title = {Should Superclasses be Abstract?},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {12--31},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@incollection{Huet89a,
  author = {Hans H{\"u}ttel and Kim G. Larsen},
  title = {The Use of Static Constructs in a Modal Process Logic},
  booktitle = {Logic at Botik 89},
  volume = {363},
  pages = {163--180},
  publisher = {Springer-Verlag},
  year = {1989},
  series = {LNCS}}

@book{Huet90a,
  title = {Logical Foundations of Functional Programming},
  publisher = {Addison Wesley},
  year = {1990},
  address = {Reading, Mass.},
  editor = {G. Huet}}

@phdthesis{Huet91a,
  author = {Hans H{\"u}ttel},
  title = {Decidability, Behavioural Equivalences and Infinite Transition Graphs},
  year = {1991},
  school = {Computer Science Dept., University of Edinburgh},
  month = dec,
  number = {ECS-LFCS-91-181},
  type = {{Ph.D}. Thesis}}

@inproceedings{Huff03a,
  author = {Jane Huffman-Hayes and Alex Dekhtyar and James Osborne},
  title = {Improving Requirements Tracing via Information Retrieval},
  booktitle = {Procerdings of 11th IEEE International Requierments Engineering Conference},
  pages = {138},
  year = {2003}}

@article{Huff06a,
  author = {Jane Huffman-Hayes and Alex Dekhtyar and Senthil Karthikeyan Sundaram},
  title = {Advancing Candidate Link Generation for Requirements Tracing: The Study of Methods},
  journal = {IEEE Transactions on Software Engineering},
  volume = {32},
  pages = {4--19},
  publisher = {IEEE CS Press},
  year = {2006},
  month = jan,
  number = {1}}

@article{Hugh00a,
  author = {John Hughes},
  title = {Generalising Monads to Arrows},
  journal = {Science of Computer Programming},
  volume = {37},
  pages = {67--111},
  year = {2000},
  month = {may}}

@article{Hugh89a,
  author = {J. Hughes},
  title = {{Why Functional Programming Matters}},
  journal = {Computer Journal},
  volume = {32},
  pages = {98--107},
  year = {1989},
  url = {http://www.cs.chalmers.se/~rjmh/Papers/whyfp.html http://www.cs.chalmers.se/~rjmh/Papers/whyfp.pdf},
  number = {2}}

@inproceedings{Hugu04a,
  author = {Hugunin, Jim and others},
  title = {IronPython: A fast Python implementation for .NET and Mono},
  booktitle = {PyCON 2004 International Python Conference},
  volume = {8},
  year = {2004}}

@incollection{Hui93a,
  author = {Siu Cheung Hui and Angela Goh and Jose K. Raphel},
  title = {{CLOG}: {A} Class-Based Logic Language For Object-Oriented Databases},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {356--370},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {In this paper a class-based logic language for
object-oriented databases which is called CLOG is
described. CLOG is based on many sorted horn clauses
with concept of classes, objects, object identity,
multiple class membership of objects and
non-monotonic inheritance. The database view of a
class is maintained as a collection of objects and a
type. Class is a collection of many sorted horn
clauses and functions which define the structural
and behavioral aspects of an object. Generic classes
give parameterized types. Queries are class-based.
Support for view and derived classes are inherent.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Huix01a,
  author = {Huixiang Liu and Timothy C. Lethbridge},
  title = {Intelligent search techniques for large software systems},
  booktitle = {Proceedings of Centre for Advanced Studies on Collaborative research (CASCON)},
  pages = {10},
  year = {2001}}

@mastersthesis{Hull85a,
  author = {S.J. Hull},
  title = {A Study of User Interface Management Systems},
  year = {1985},
  school = {Department of Computer Science, University of Toronto},
  month = jan,
  type = {M.Sc. thesis, CSRI Technical Note}}

@inproceedings{Hull86a,
  author = {Jean-Marie Hullot},
  title = {{SOS Interface}: un generateur d'interfaces Homme-Machine},
  booktitle = {Actes des journees AFCET sur les Langages Orientes Objets},
  year = {1986}}

@article{Hum99,
  author = {Watts S. Humphrey},
  title = {Bugs or Defects ?},
  journal = {Technical Report Vol. 2, Issue 1},
  publisher = {Carnegie Mellon Software Engineering Institute},
  year = {1999}}

@article{Humm08a,
  author = {Hummel, O. and Janjic, W. and Atkinson, C.},
  title = {Code Conjurer: Pulling Reusable Software out of Thin Air},
  journal = {Software, IEEE},
  booktitle = {Software, IEEE},
  volume = {25},
  pages = {45--52},
  year = {2008},
  url = {http://dx.doi.org/10.1109/MS.2008.110},
  doi = {10.1109/MS.2008.110},
  number = {5}}

@book{Hump00a,
  author = {Watts Humphrey},
  title = {Introduction to the Team Software Process},
  publisher = {Addison Wesley},
  year = {2000},
  isbn = {0-201-47719-X},
  series = {SEI Series in Software Engineering}}

@book{Hump89a,
  author = {Watts S. Humphrey},
  title = {Managing the Software Process},
  publisher = {Addison Wesley},
  year = {1989},
  isbn = {0-201-18095-2},
  series = {SEI Series in Software Engineering}}

@book{Hump95a,
  author = {Watts S. Humphrey},
  title = {A Discipline for Software Engineering},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-54610-8},
  series = {SEI Series in Software Engineering}}

@book{Hump97a,
  author = {Watts Humphrey},
  title = {Introduction to the Personal Software Process},
  publisher = {Addison Wesley},
  year = {1997},
  isbn = {0-201-54809-7},
  series = {SEI Series in Software Engineering}}

@unpublished{Huni95a,
  author = {Hermann H{\"u}ni and Ralph Johnson and Robert Engel},
  title = {A Framework for Network Protocol Software},
  year = {1995},
  misc = {February 28},
  month = feb,
  note = {GLUE Software Engineering (Bern), Ascom Tech AG(Bern), University of Illinois},
  type = {Draft}}

@book{Hunt00a,
  author = {Andrew Hunt and David Thomas},
  title = {The Pragmatic Programmer},
  publisher = {Addison Wesley},
  year = {2000},
  isbn = {0-201-61622-X}}

@book{Hunt03a,
  author = {Andy Hunt and Dave Thomas},
  title = {Pragmatic Unit Testing in {Java} with {JUnit}},
  publisher = {ThePragmaticProgrammers},
  year = {2003}}

@techreport{Hunt05a,
  author = {Hunt, G. and Larus, J.R. and Abadi, M. and Aiken, M. and Barham, P. and Fahndrich, M. and Hawblitzel, C. and Hodson, O. and Levi, S. and Murphy, N. and others},
  title = {{An Overview of the Singularity Project}},
  pages = {44},
  year = {2005},
  url = {http://research.microsoft.com/apps/pubs/default.aspx?id=52716},
  abstract = {Singularity is a research project in Microsoft Research that started with the question: what would a software platform look like if it was designed from scratch with the primary goal of dependability? Singularity is working to answer this question by building on advances in programming languages and tools to develop a new system architecture and operating system (named Singularity), with the aim of producing a more robust and dependable software platform. Singularity demonstrates the practicality of new technologies and architectural decisions, which should lead to the construction of more robust and dependable systems.},
  annote = {- security through microkernel approach
- no shared memory
- clear isolation of processes each having its own runtime, memory, GC
- no leaking objects
- separate exchange heap is used for interprocess data
- communication only over securely/strongly typed channels
- each process specifies exactly which resources/channel it wants to use
- no runtime reflection!! only at compile time
- compiler assures a program's safeness},
  date-added = {2011-02-18 13:05:24 +0100},
  date-modified = {2011-02-18 13:30:34 +0100},
  institution = {Microsoft Research},
  keywords = {actors, singularity, compile time meta programming, microkernel},
  month = {oct},
  number = {MSR-TR-2005-135},
  read = {1}}

@article{Hunt07a,
  author = {Hunt, Galen C. and Larus, James R.},
  title = {Singularity: rethinking the software stack},
  journal = {SIGOPS Oper. Syst. Rev.},
  volume = {41},
  pages = {37--49},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1243418.1243424},
  address = {New York, NY, USA},
  issn = {0163-5980},
  number = {2}}

@inproceedings{Hunt07b,
  author = {Galen Hunt and Mark Aiken and Manuel F\"ahndrich and Chris Hawblitzel and Orion Hodson and James and Steven Levi and Bjarne Steensgaard and David Tarditi and Ted Wobber},
  title = {Sealing OS Processes to Improve Dependability and Safety},
  booktitle = {In Proceedings of the ACM EuroSys Conference},
  pages = {341-354},
  year = {2007}}

@techreport{Hunt76a,
  author = {James W. Hunt and M. Douglas McIlroy},
  title = {An Algorithm for Differential File Comparison},
  year = {1976},
  institution = {AT\&T Bell Laboratories Inc},
  number = {41},
  numpages = {9}}

@article{Hunt77a,
  author = {Hunt, James W. and Szymanski, Thomas G.},
  title = {A Fast Algorithm for Computing Longest Common Subsequences},
  journal = {Commun. ACM},
  volume = {20},
  pages = {350--353},
  publisher = {ACM},
  year = {1977},
  doi = {10.1145/359581.359603},
  address = {New York, NY, USA},
  date-added = {2009-10-21 16:59:39 +0200},
  date-modified = {2009-10-21 16:59:49 +0200},
  issn = {0001-0782},
  number = {5}}

@book{Hunt98a,
  author = {Jason Hunter},
  title = {Java Servlet Programming},
  publisher = {O'Reilly \& Associates, Inc},
  year = {1998},
  url = {http://www.servlets.com/index.html}}

@inproceedings{Huo14a,
  author = {Huo, Chen and Clause, James},
  title = {Improving Oracle Quality by Detecting Brittle Assertions and Unused Inputs in Tests},
  booktitle = {Foundations on Software Engineering},
  year = {2014}}

@inproceedings{Hupf04a,
  author = {Hupfer, Susanne and Cheng, Li T. and Ross, Steven and Patterson, John},
  title = {Introducing collaboration into an application development environment},
  booktitle = {CSCW '04: Proceedings of the 2004 ACM conference on Computer supported cooperative work},
  pages = {21--24},
  publisher = {ACM},
  year = {2004},
  url = {http://dx.doi.org/10.1145/1031607.1031611},
  doi = {10.1145/1031607.1031611},
  abstract = {We present contextual collaboration ...},
  address = {New York, NY, USA},
  citeulike-article-id = {3993387},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1031607.1031611},
  citeulike-linkout-1 = {http://dx.doi.org/10.1145/1031607.1031611},
  isbn = {1-58113-810-5},
  location = {Chicago, Illinois, USA},
  posted-at = {2010-01-30 00:15:39},
  priority = {2}}

@inproceedings{Hur87a,
  author = {Jin H. Hur and Kilnam Chon},
  title = {Overview of a Parallel Object-Oriented Language {CLIX}},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {265--273},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Hurd12a,
  author = {Hurdugaci, V. and Zaidman, A.},
  title = {Aiding Software Developers to Maintain Developer Tests},
  booktitle = {Software Maintenance and Reengineering (CSMR), 2012 16th European Conference on},
  pages = {11-20},
  year = {2012},
  doi = {10.1109/CSMR.2012.12},
  issn = {1534-5351},
  keywords = {program testing;software maintenance;software quality;TestNForce;developer test;integration test;quality assurance;software maintenance;unit test;Educational institutions;Indexes;Production;Programming;Software;Testing;Visualization},
  month = {mar}}

@phdthesis{Hurs95a,
  author = {Walter H{\"u}rsch},
  title = {Maintaining Behavior and Consistency of Object-Oriented Systems during Evolution},
  year = {1995},
  school = {Northeastern University, MA},
  url = {http://www.ccs.neu.edu/home/lieber/theses/huersch/thesis.ps},
  type = {{Ph.D}. Thesis}}

@inproceedings{Hurs96,
  author = {Walter L. H{\"u}rsch and Linda M. Seiter},
  title = {Automating the Evolution of Object-Oriented Systems},
  booktitle = {International Symposium on Object Technologies for Advanced Software},
  publisher = {Springer Verlag, Lecture Notes in Computer Science},
  year = {1996},
  month = mar}

@inproceedings{Hurs96a,
  author = {W. H{\"u}rsch and L. Seiter},
  title = {Automating the Evolution of Object-Oriented Systems},
  booktitle = {Proceedings of ISOTAS '96},
  volume = 1049,
  pages = {2--21},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Japan},
  month = mar,
  organization = {JSSST-JAIST},
  series = {LNSC}}

@techreport{Hutc01a,
  author = {John M. Hutchison},
  title = {{JMLS}-- Multi Language System for {Java}},
  year = {2001},
  url = {http://scg.unibe.ch/archive/projects/Hutc01a.pdf},
  abstract = {Motivation: Die Firma TeTrade AG f\"ur Informatik in
Bern vertreibt ein Produkt namens WMLS oder das
Multi Language System for Windows. WMLS bietet die
M\"oglichkeit ein Programm auf der Microsoft Win32
Plattform zu \"ubersetzen, ohne das Programm zu
ver\"andern. Dies bedeutet, dass alle auf dem
Bildschirm angezeigten Texte in eine andere Sprache
als urspr\"unglich vorgesehen. Zudem hat man mit die
M\"oglichkeit Texte aus einem Programm auszulesen,
um die \"Ubersetzung zu vereinfachen. Um das
Gesch\"aftsbereich der \"Ubersetzungssysteme zu
erweitern, wollte die TeTrade die M\"oglichkeit
eines WMLS \"ahnlichen Systems er\"ortern, welche
aber Java Programme \"ubersetzen k\"onnte. Diesem
Projekt wurde der Name JMLS, Multi Language System
for Java, gegeben. Ziel dieses Projektes war es ein
Prototyp f\"ur JMLS zu erstellen, das alle
Hauptprobleme der \"Ubersetzung und der Erfassung
von Texten, ohne die \"ubersetzte Java Applikation
zu ver\"andern. Die tats\"achliche Implementation
eines Produktes JMLS liegt ausserhalb des Rahmens
dieses Projekts.},
  institution = {University of Bern},
  month = aug,
  type = {Informatikprojekt}}

@article{Hutc85a,
  author = {David H. Hutchens and Victor R. Basili},
  title = {System {Structure} {Analysis}: {Clustering} with {Data} {Bindings}},
  journal = {IEEE Transactions on Software Engineering},
  volume = {11},
  pages = {749--757},
  year = {1985},
  month = aug,
  number = {8}}

@techreport{Hutc87a,
  author = {Norman C. Hutchinson and Rajindra K. Raj and Andrew P. Black and Henry M. Levy and Eric Jul},
  title = {The Emerald Programing Lanuage Report},
  year = {1987},
  address = {Seattle},
  institution = {Department of Computer Science, University of Washington},
  month = oct,
  number = {87-10-07},
  type = {Technical Report}}

@article{Hutc91a,
  author = {Norman C. Hutchinson and Larry L. Peterson},
  title = {The X-Kernel: An Architecture for Implementing Network Protocols},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {17},
  pages = {64--76},
  publisher = {IEEE Press},
  year = {1991},
  doi = {10.1109/32.67579},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {1}}

@book{Huth04a,
  author = {Michael Huth and Mark Ryan},
  title = {Logic in Computer Science},
  publisher = {Cambridge},
  year = {2004},
  edition = {second},
  isbn = {0-521-54310-X}}

@techreport{Hutt06a,
  author = {Graham Hutton and Erik Meijer},
  title = {Monadic Parser Combinators},
  year = {1996},
  url = {citeseer.ist.psu.edu/hutton96monadic.html http://eprints.nottingham.ac.uk/237/1/monparsing.pdf},
  institution = {Department of Computer Science, University of Nottingham},
  number = {NOTTCS-TR-96-4}}

@inproceedings{Hwan21a,
  author = {Hwang, Sungjae and Lee, Sungho and Kim, Jihoon and Ryu, Sukyoung},
  title = {{JUSTGen: Effective Test Generation for Unspecified JNI Behaviors on JVMs}},
  booktitle = {International Conference on Software Engineering (ICSE'21)},
  pages = {1708-1718},
  year = {2021},
  doi = {10.1109/ICSE43902.2021.00151}}

@inproceedings{Hwan95a,
  author = {Hwang, Suk-Hyung and Tsujino, Y. and Tokura, N.},
  title = {A reorganization framework of the object-oriented class hierarchy},
  booktitle = {Proceedings 1995 Asia Pacific Software Engineering Conference},
  pages = {117-126},
  year = {1995},
  doi = {10.1109/APSEC.1995.496960}}

@misc{Hype18a,
  author = {https://hyperledger-fabric.readthedocs.io/},
  title = {Hyperledger-Fabric},
  year = {2018},
  url = {https://hyperledger-fabric.readthedocs.io/en/release-1.2/whatis.html}}

@unpublished{Hype87a,
  author = {Bill Atkinson},
  title = {HyperCard},
  year = {1987},
  note = {Hypercard}}

@manual{ICC01a,
  title = {ADvance User's Guide},
  year = {2001},
  address = {Papenhoehe 14, D-25335 Elmshorn/Hamburg, Germany},
  month = aug,
  organization = {IC \mbox{\&} C GmBH Software Foundations}}

@article{IEEE85a,
  author = {{IEEE}},
  title = {Special Issue on Visual Programming},
  journal = {IEEE Computer},
  volume = {18},
  year = {1985},
  institution = {IEEE},
  month = aug,
  number = {8}}

@book{IEEE91a,
  author = {Anne Geraci and Freny Katki and Louise McMonegal and Bennett Meyer and Hugh Porteous},
  title = {IEEE Standard Computer Dictionary: A Compilation of IEEE Standard Computer Glossaries},
  publisher = {IEEE},
  year = {1991},
  isbn = {1559370793}}

@manual{IEEE92a,
  title = {POSIX P1003.4a --- Threads Extension for Portable Operating Systems},
  year = {1992},
  organization = {IEEE}}

@book{IEEE96a,
  title = {Software Change Impact Analysis (Practitioners) (Paperback)},
  publisher = {Wiley-IEEE Computer Society Pr},
  year = {1996},
  editor = {IEEE}}

@book{IEEE98a,
  title = {IEEE standard for software maintenance},
  journal = {IEEE Std 1219-1998},
  publisher = {Wiley-IEEE Computer Society Pr},
  year = {1998},
  editor = {IEEE},
  month = {oct}}

@manual{IEEE99a,
  title = {{IEEE P1471/D5.0} Information Technology --- Draft Recommended Practice for Architecural Description},
  year = {1999},
  month = aug,
  organization = {IEEE Architecture Working Group}}

@misc{IO,
  title = {IO Home Page},
  key = {IO},
  note = {http://www.iolanguage.com/}}

@techreport{ISO01a,
  author = {ISO},
  title = {{International Standard -- ISO/IEC 9126-1:2001 -- Software engineering -- Product quality}},
  year = {2001},
  institution = {ISO}}

@techreport{ISO06a,
  author = {ISO},
  title = {{International Standard -- ISO/IEC 14764 IEEE Std 14764-2006}},
  year = {2006},
  institution = {ISO}}

@techreport{ISO11a,
  author = {ISO},
  title = {{International Standard -- ISO/IEC 25010:2011 -- Software engineering -- Product quality}},
  year = {2011},
  institution = {ISO}}

@article{ISO11b,
  author = {ISO},
  title = {ISO/IEC/IEEE Systems and software engineering -- Architecture description},
  journal = {ISO/IEC/IEEE 42010:2011(E) (Revision of ISO/IEC 42010:2007 and IEEE Std 1471-2000)},
  pages = {1-46},
  year = {2011},
  doi = {10.1109/IEEESTD.2011.6129467}}

@techreport{ISO18a,
  author = {ISO},
  title = {{International Standard -- ISO/ICE 90003:2018 -- Software engineering -- Product quality}},
  year = {2015},
  institution = {ISO}}

@techreport{ISO89a,
  author = {{ISO8807}},
  title = {Information Processing Systems --- Open Systems Interconnection --- {LOTOS} --- {A} formal description technique based on the temporal ordering of observational behaviour},
  year = {1989},
  institution = {ISO8807},
  number = {8807},
  type = {International Standard ISO}}

@inproceedings{Ibra88a,
  author = {Mamdouh H. Ibrahim and Fred A. Cummins},
  title = {KSL: A Reflective Object-Oriented Programming Language},
  booktitle = {Proceedings of the International Conference on Computer Languages},
  pages = {186--193},
  year = {1988},
  doi = {10.1109/ICCL.1988.13063},
  isbn = {0-8186-0874-9},
  month = oct,
  organization = {IEEE}}

@inproceedings{Ibra90a,
  author = {Mamdouh H. Ibrahim},
  title = {Reflection and metalevel architectures in object-oriented programming (workshop session)},
  booktitle = {OOPSLA/ECOOP '90: Proceedings of the European conference on Object-oriented programming addendum: systems, languages, and applications},
  pages = {73--80},
  publisher = {ACM Press},
  year = {1991},
  address = {New York, NY, USA},
  isbn = {0-89791-443-0},
  location = {Ottawa, Canada}}

@article{Ibra91a,
  author = {Mamdouh H. Ibrahim and William E. Bejeck and Fred A. Cummins},
  title = {Instance specialization without delegation},
  journal = {Journal of Object-Oriented Programming},
  volume = {4},
  pages = {53--56},
  year = {1991},
  month = jun,
  number = {3}}

@inproceedings{Ibra95a,
  author = {Fred Cummins and Mamdouh Ibrahim},
  title = {{A Model of Reflection in Object-Oriented Languages}},
  booktitle = {Proceedings of the IJCAI '95 workshop on Reflection and Meta-Level Architectures and their Applications in AI},
  pages = {19--29},
  year = {1995}}

@inproceedings{Ichi02a,
  author = {Yuuji Ichisugi and Akira Tanaka},
  title = {Difference-based modules: A class independent module mechanism},
  booktitle = {Proceedings ECOOP 2002},
  volume = 2374,
  publisher = {Springer Verlag},
  year = {2002},
  url = {http://staff.aist.go.jp/y-ichisugi/mj/},
  address = {Malaga, Spain},
  month = jun,
  series = {LNCS}}

@inproceedings{Ichi09a,
  author = {Ichii, M. and Hayase, Y. and Yokomori, R. and Yamamoto, T. and Inoue, K.},
  title = {Software component recommendation using collaborative filtering},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {17--20},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070014},
  doi = {10.1109/SUITE.2009.5070014},
  abstract = {Software component retrieval systems are widely used
to retrieve reusable software components. This paper
proposes recommendation system integrated into
software component retrieval system based on
collaborative filtering. Our system uses browsing
history to recommend relevant components to users.
We also conducted a case study using programming
tasks and found that our system enables users to
efficiently retrieve reusable components.}}

@techreport{Ieee00a,
  author = {IEEE},
  title = {IEEE Recommended Practice for Architectural Description for Software-Intensive Systems},
  year = {2000},
  institution = {The Architecture Working Group of the Software Engineering Committee},
  month = oct}

@article{Ieee90a,
  author = {IEEE Standards Coordinating Committee, MA and others},
  title = {IEEE standard glossary of software engineering terminology (IEEE Std 610.12-1990). Los Alamitos},
  journal = {CA: IEEE Computer Society},
  volume = {169},
  pages = {132},
  year = {1990}}

@article{Ieru18a,
  title={A look at the design of Lua},
  author={Ierusalimschy, Roberto and De Figueiredo, Luiz Henrique and Celes, Waldemar},
  journal={Communications of the ACM},
  volume={61},
  number={11},
  pages={114--123},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@article{Ieru95a,
  author = {Roberto Ierusalimschy and N. de la Rocque Rodriguez},
  title = {Side-effect free functions in object-oriented languages},
  journal = {Computer Languages},
  volume = {3/4},
  pages = {129-146},
  year = {1995},
  number = {21}}

@article{Ieru96a,
  author = {Roberto Ierusalimschy and Luiz Henrique de Figueiredo and Waldemar Celes Filho},
  title = {Lua --- an Extensible Extension Language},
  journal = {Software: Practice and Experience},
  volume = {26},
  pages = {635--652},
  year = {1996},
  number = {6}}

@article{Igar00,
  author = {Atsushi Igarashi and Benjamin C. Pierce},
  title = {On Inner Classes},
  journal = {Lecture Notes in Computer Science},
  volume = {1850},
  year = {2000}}

@article{Igar01a,
  author = {Atsushi Igarashi and Benjamin C. Pierce and Philip Wadler},
  title = {Featherweight {Java}: a minimal core calculus for {Java} and {GJ}},
  journal = {ACM TOPLAS},
  volume = {23},
  pages = {396--450},
  year = {2001},
  doi = {10.1145/503502.503505},
  month = may,
  number = {3}}

@inproceedings{Igar99a,
  author = {Atsushi Igarashi and Benjamin Pierce},
  title = {Foundations for Virtual Types},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {161--185},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Virtual types have been proposed as a notation for
generic programming in object-oriented
languages---an alternative to the more familiar
mechanism of parametric classes. The tradeoffs
between the two mechanisms are a matter of current
debate: for many examples, both appear to offer
convenient (indeed almost interchangeable)
solutions; in other situations, one or the other
seems to be more satisfactory. However, it has
proved difficult to draw rigorous comparisons
between the two approaches, partly because current
proposals for virtual types vary considerably in
their details, and partly because the proposals
themselves are described rather informally, usually
in the complicating context of full-scale language
designs. Work on the foundations of object-oriented
languages has already established a clear connection
between parametric classes and the polymorphic
functions found in familiar typed lambda-calculi.
Our aim here is to explore a similar connection
between virtual types and dependent records. We
present, by means of examples, a straightforward
model of objects with embedded type fields in a
typed lambda-calculus with subtyping, type
operators, fixed points, dependent functions, and
dependent records with both ``bounded'' and
``manifest'' type fields (this combination of
features can be viewed as a measure of the inherent
complexity of virtual types). Using this model, we
then discuss some of the major differences between
previous proposals and show why some can be checked
statically while others require run-time checks. We
also investigate how the partial ``duality'' of
virtual types and parametric classes can be
understood in terms of translations between
universal and (dependent) existential types.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Igar99b,
  author = {Atsushi Igarashi and Benjamin C. Pierce and Philip Wadler},
  title = {Featherweight {Java}: a minimal core calculus for {Java} and {GJ}},
  booktitle = {Proceedings OOPSLA '99, ACM SIGPLAN Notices},
  pages = {132--146},
  year = {1999},
  doi = {10.1145/320384.320395},
  month = nov}

@inproceedings{Igna16a,
  author = {Ignacio Fernandez and Alexandre Bergel and Juan Pablo Sandoval Alcocer and Alejandro Infante and Tudor G\^irba},
  title = {Glyph-Based Software Component Identification},
  booktitle = {Proceedings of the 24th IEEE International Conference on Program Comprehension ({ICPC} '16)},
  year = {2016}}

@misc{Imposter,
  title = {{Imposter}},
  key = {Imposter},
  note = {http://csoki.ki.iif.hu/$\sim$vitezg/impostor/}}

@article{Infa13a,
  author = {Infante, Alejandro and Sandoval, Juan Pablo and Bergel, Alexandre},
  title = {Identifying equivalent objects to reduce memory consumption},
  journal = {IWST 2013},
  pages = {73},
  year = {2013}}

@inproceedings{Infa15a,
  author = {Infante, Alejandro and Bergel, Alexandre},
  title = {Efficiently identifying object production sites},
  booktitle = {2015 IEEE 22nd International Conference on Software Analysis, Evolution, and Reengineering (SANER)},
  pages = {575--579},
  year = {2015},
  url = {https://bergel.eu/MyPapers/Infa15a-MemoryProfiling.pdf},
  organization = {IEEE}}

@inproceedings{Infa17a,
  author = {Infante, Alejandro and Bergel, Alexandre},
  title = {Object Equivalence: Revisiting Object Equality Profiling (an Experience Report)},
  booktitle = {Proceedings of the 13th ACM SIGPLAN International Symposium on on Dynamic Languages},
  pages = {27--38},
  publisher = {ACM},
  year = {2017},
  url = {http://doi.acm.org/10.1145/3133841.3133844},
  doi = {10.1145/3133841.3133844},
  acmid = {3133844},
  address = {New York, NY, USA},
  isbn = {978-1-4503-5526-1},
  keywords = {cache, memory bloat, object equivalence, profiling},
  location = {Vancouver, BC, Canada},
  numpages = {12},
  series = {DLS 2017}}

@inbook{Ing83,
  author = {Daniel H. Ingalls},
  title = {Smalltalk 80: Bits of History},
  chapter = {The Evolution of the Smalltalk-80 Virtual Machine},
  publisher = {Addison-Wesley, Reading, MA},
  year = {1983}}

@inproceedings{Inga08a,
  author = {Ingalls, Daniel and Palacz, Krzysztof and Uhler, Stephen and Taivalsaari, Antero and Mikkonen, Tommi},
  title = {The lively kernel a self-supporting system on a web page},
  booktitle = {Workshop on Self-sustaining Systems},
  pages = {31--50},
  year = {2008},
  organization = {Springer}}

@inproceedings{Inga76a,
  author = {Dan Ingalls},
  title = {The {Smalltalk}-76 Programming System Design and Implementation},
  booktitle = {POPL'76, Principles of Programming Languages},
  pages = {9--16},
  publisher = {ACM Press},
  year = {1976}}

@inproceedings{Inga78a,
  author = {Ingalls, Daniel H. H.},
  title = {The Smalltalk-76 programming system design and implementation},
  booktitle = {POPL '78: Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
  pages = {9--16},
  publisher = {ACM},
  year = {1978},
  doi = {10.1145/512760.512762},
  address = {New York, NY, USA},
  location = {Tucson, Arizona}}

@article{Inga81a,
  author = {Daniel H. Ingalls},
  title = {Design Principles Behind {Smalltalk}},
  journal = {Byte},
  volume = {6},
  pages = {286--298},
  year = {1981},
  month = aug,
  number = {8}}

@inproceedings{Inga86a,
  author = {Daniel H.H. Ingalls},
  title = {A Simple Technique for Handling Multiple Polymorphism},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = 21,
  pages = {347--349},
  year = {1986},
  month = nov,
  number = 11}

@inproceedings{Inga88a,
  author = {Dan Ingalls},
  title = {Fabrik: A Visual Programming Environment},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {176--190},
  year = {1988},
  doi = {10.1145/62084.62100},
  month = nov}

@inproceedings{Inga97a,
  author = {Dan Ingalls and Ted Kaehler and John Maloney and Scott Wallace and Alan Kay},
  title = {Back to the Future: The Story of {Squeak}, a Practical {Smalltalk} Written in Itself},
  booktitle = {Proceedings of Object-Oriented Programming, Systems, Languages, and Applications conference (OOPSLA'97)},
  pages = {318--326},
  publisher = {ACM Press},
  year = {1997},
  doi = {10.1145/263700.263754},
  isbn = {0897919084},
  month = nov}

@inproceedings{Ingo91a,
  author = {A. Ing\'olfsd\'ottir and Bent Thomsen},
  title = {Semantic Models for {CCS} with Values},
  booktitle = {Proc. of Chalmers Workshop on Concurrency},
  year = {1991},
  misc = {May 27-31},
  address = {Baastad, Sweden},
  month = may}

@book{Ingw92a,
  author = {Peter Ingwersen},
  title = {Information Retrieval Interaction},
  publisher = {Taylor Graham},
  year = {1992},
  url = {http://www.db.dk/pi/iri},
  address = {London}}

@misc{Inne97,
  author = {JavaSoft},
  title = {Inner classes specification},
  year = {1997},
  month = feb,
  note = {Available through http://java.sun.com/docs/index.html}}

@inproceedings{Inos14a,
  author = {Inostroza, Pablo and Van Der Storm, Tijs and Erdweg, Sebastian},
  title = {Tracing program transformations with string origins},
  booktitle = {International Conference on Theory and Practice of Model Transformations},
  pages = {154--169},
  year = {2014},
  organization = {Springer}}

@inproceedings{Inoz14a,
  author = {Inozemtseva, Laura and Holmes, Reid},
  title = {Coverage is not Strongly Correlated with Test Suite Effectiveness},
  booktitle = {International Conference on Software Engineering},
  year = {2014}}

@book{Inst83a,
  author = {{American National Standards Institute, Inc.}},
  title = {The Programming Language Ada Reference Manual},
  volume = {155},
  publisher = {Springer-Verlag},
  year = {1983},
  institution = {American National Standards Institute, Inc.},
  series = {LNCS}}

@book{Inst97,
  author = {{American National Standards Institute, Inc.}},
  title = {Draft American National Standard for Information Systems --- {Programming Languages} --- {Smalltalk}},
  publisher = {American National Standards Institute},
  year = {1997},
  institution = {American National Standards Institute, Inc.}}

@article{Inve91a,
  author = {Paola Inverardi and Corrado Priami},
  title = {Evaluation of Tools for the Analysis of Communicating Systems},
  journal = {Bulletin of EATCS},
  volume = {45},
  pages = {158--185},
  year = {1991},
  month = oct}

@inproceedings{Inve93a,
  author = {P. Inverardi and B. Krishnamurthy and D. Yankelevich},
  title = {Yeast: {A} Case Study for a Practical Use of Formal Methods},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {105--120},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@article{Inve95a,
  author = {Paola Inverardi and Alexander L. Wolf},
  title = {Formal Specification and Analysis of Software Architectures Using the Chemical Abstract Machine Model},
  journal = {IEEE Transactions on Software Engineering},
  volume = {21},
  year = {1995},
  url = {ftp://ftp.cs.colorado.edu/users/alw/papers/tse0495.ps.Z},
  month = apr,
  number = {4}}

@inproceedings{Inve97a,
  author = {Paola Inverardi and Alexander L. Wolf and Daniel Yankelevich},
  title = {Checking Assumptions in Component Dynamics at the Architectural Level},
  booktitle = {Proceedings of COORDINATION '97},
  volume = 1282,
  pages = {46--63},
  publisher = {Springer-Verlag},
  year = {1997},
  month = sep,
  series = {LNCS}}

@book{Irvi97a,
  author = {Kip R. Irvine},
  title = {{C}++ and Object-Oriented Programming},
  publisher = {Prentice-Hall},
  year = {1997},
  isbn = {0-02-359852-2}}

@inproceedings{Ishi86a,
  author = {Yutaka Ishikawa and Mario Tokoro},
  title = {A Concurrent Object-Oriented Knowledge Representation Language Orient84/{K}: Its Features and Implementation},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {232--241},
  year = {1986},
  month = nov}

@inproceedings{Ishi90a,
  author = {Yutaka Ishikawa and Hideyuki Tokuda},
  title = {Object-Oriented Real-Time Language Design: Constructs for Timing Constraints},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {289--298},
  year = {1990},
  month = oct}

@article{Ishi91a,
  author = {Yutaka Ishikawa},
  title = {{Reflection} {Facilities} and {Realistic} {Programming}},
  journal = {SIGPLAN Notices},
  volume = {26},
  pages = {101--110},
  year = {1991},
  month = aug,
  number = {8}}

@inproceedings{Ishi92a,
  author = {Yutaka Ishikawa},
  title = {Communication Mechanism on Autonomous Objects},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {303--314},
  year = {1992},
  month = oct}

@article{Ishi92b,
  author = {Yutaka Ishikawa and Hideyuki Tokuda and Clifford W. Mercer},
  title = {An Object-Oriented Real-Time Programming Language},
  journal = {IEEE Computer (Special Issue on Inheritance \& Classification)},
  volume = {25},
  pages = {66--73},
  year = {1992},
  month = oct,
  number = {10}}

@inproceedings{Isob18a,
  author = {Isobe, Yosuke and Tamada, Haruaki},
  title = {Are Identifier Renaming Methods Secure?},
  booktitle = {2018 19th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)},
  pages = {322--328},
  year = {2018},
  organization = {IEEE}}

@inproceedings{Isra15a,
  author = {Isradisaikul, Chinawat and Myers, Andrew C.},
  title = {Finding Counterexamples from Parsing Conflicts},
  booktitle = {36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages = {555--564},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2737924.2737961},
  doi = {10.1145/2737924.2737961},
  acmid = {2737961},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3468-6},
  keywords = {Context-free grammar, ambiguous grammar, error diagnosis, lookahead-sensitive path, product parser, shift-reduce parser},
  location = {Portland, OR, USA},
  numpages = {10},
  series = {PLDI '15}}

@inproceedings{Issa98a,
  author = {Val{\'e}rie Issarny and Christophe Bidan and Titos Saridakis},
  title = {Characterizing Coordination Architectures According to their Non-Functional Execution Properties},
  booktitle = {{Proceedings of the 31st Annual Hawaii International Conference on System Sciences}},
  pages = {275--283},
  year = {1998},
  url = {http://www-rocq.inria.fr/solidor/members/issarny.html},
  month = jan}

@inproceedings{Itko04a,
  author = {Jonne Itkonen and Minna Hillebrand and Vesa Lappalainen},
  title = {Application of Relation Analysis to a Small {Java} Software},
  booktitle = {Proceedings of the Conference on Software Maintenance and Reengineering (CSMR 2004)},
  pages = {233--239},
  year = {2004}}

@inproceedings{Ivko02a,
  author = {Igor Ivkovic and Michael Godfrey},
  title = {Architecture Recovery of Dynamically Linked Applications: A Case Study},
  booktitle = {In Proceedings of the 10th International Workshop on Program Comprehension 2002 (IWPC 2002)},
  year = {2002},
  address = {Paris, France},
  month = jun}

@inproceedings{Ivko03a,
  author = {Ivkovic and Godfrey},
  title = {Enhancing Domain-Specific Software Architecture Recovery},
  booktitle = {International Workshop on Program Comprehension (IWPC)},
  pages = {266--276},
  year = {2003},
  isbn = {0-7695-1883-4}}

@article{Ivor01,
  author = {Ivory, Melody Y. and Hearst, Marti A.},
  title = {The state of the art in automating usability evaluation of user interfaces},
  journal = {ACM Comput. Surv.},
  volume = {33},
  pages = {470--516},
  publisher = {ACM Press},
  year = {2001},
  url = {http://portal.acm.org/citation.cfm?id=503114},
  doi = {10.1145/503112.503114},
  address = {New York, NY, USA},
  citeulike-article-id = {234932},
  date-added = {2006-08-11 10:47:11 +0200},
  date-modified = {2006-08-15 14:34:46 +0200},
  issn = {0360-0300},
  month = {dec},
  number = {4},
  priority = {3}}

@inproceedings{Iyer16a,
  author = {Iyer, Srinivasan and Konstas, Ioannis and Cheung, Alvin and Zettlemoyer, Luke},
  title = {Summarizing source code using a neural attention model},
  booktitle = {Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)},
  volume = {1},
  pages = {2073--2083},
  year = {2016}}

@article{Izad02a,
  author = {Izadi, Shahram and Coutinho, Pedro and Rodden, Tom and Smith, Gareth},
  title = {The {FUSE} Platform: Supporting Ubiquitous Collaboration Within Diverse Mobile Environments},
  journal = {Automated Software Engineering},
  volume = {9},
  pages = {167--186},
  year = {2002},
  doi = {10.1023/A:1014534414062}}

@techreport{JBean97a,
  author = {Graham Hamilton},
  title = {JavaBeans},
  year = {1997},
  url = {http://java.sun.com/products/javabeans/docs/spec.html},
  institution = {Sun Microsystems}}

@misc{JDI,
  author = {Oracle},
  title = {Java Debug Interface (JDI)},
  year = {2013},
  howpublished = {\url{http://docs.oracle.com/javase/7/docs/jdk/{API}/jpda/jdi/index.html}}}

@misc{JDPA,
  title = {Java Platform Debugger Architecture},
  url = {http://java.sun.com/javase/technologies/core/tools{API}s/jpda/},
  howpublished = {\url{http://java.sun.com/javase/technologies/core/tools{API}s/jpda/}},
  key = {JDPA}}

@misc{JEdit,
  author = {{jEdit web site}},
  title = {{jEdit}: a programmer's text editor},
  year = {2008},
  key = {jEdit},
  note = {http://www.jedit.org}}

@misc{JHotDraw,
  title = {JHotDraw: a Java GUI framework for technical and structured Graphics},
  url = {http://www.jhotdraw.org},
  key = {JHotDraw},
  note = {\url{www.jhotdraw.org}}}

@misc{JMondr,
  author = {JMondrian},
  title = {{JMondrian} --- Java implementation of the Mondrian information visualization framework},
  year = {2009},
  url = {http://loose.upt.ro/iplasma/jmondrian.html},
  key = {JMondrian},
  note = {http://loose.upt.ro/iplasma/jmondrian.html}}

@misc{JPDA,
  author = {Oracle},
  title = {Java Platform Debugger Architecture (JPDA)},
  year = {2013},
  howpublished = {\url{http://docs.oracle.com/javase/7/docs/technotes/guides/jpda/}}}

@misc{JQuery,
  title = {{jQuery}},
  key = {jQuery},
  note = {http://plone.org/products/archgenxml}}

@misc{JSON,
  title = {JSON (JavaScript Object Notation)},
  url = {http://www.json.org},
  howpublished = {\url{http://www.json.org}},
  key = {JSON}}

@misc{JSP,
  title = {Java Server Pages},
  key = {JSP},
  note = {http://java.sun.com/products/jsp/}}

@misc{JSR121,
  author = {Java-Community-Process},
  title = {{Application Isolation {API} Specification}},
  howpublished = {http://jcp.org/en/jsr/detail?id=121}}

@misc{JSTraits,
  title = {JSTraits},
  key = {JSTraits},
  note = {\url{http://slate.tunes.org}}}

@misc{JUnit,
  title = {{JU}nit},
  url = {http://www.junit.org},
  key = {JUnit},
  note = {http://www.junit.org}}

@misc{JVMPI,
  title = {Sun Microsystems, Inc. JVM Profiler Interface (JVMPI).},
  url = {http://java.sun.com/j2se/1.5.0/docs/guide/jvmpi/},
  key = {JVMTI}}

@misc{JVMTI,
  title = {Sun Microsystems, Inc. {JVM} Tool Interface ({JVMTI})},
  url = {http://java.sun.com/j2se/1.5.0/docs/guide/jvmti/},
  key = {JVMTI},
  note = {http://java.sun.com/j2se/1.5.0/docs/guide/jvmti/}}

@misc{JWIG,
  title = {{JWIG}, Java Extensions for High-Level Web Service Development},
  key = {JWIG},
  note = {http://www.brics.dk/JWIG/}}

@article{Jaas95a,
  author = {Ari Jaaski},
  title = {Implementing Interactive Applications in {C++}},
  journal = {Software Practice and Experience},
  volume = {25},
  pages = {271--289},
  year = {1995},
  month = mar,
  number = {3}}

@article{Jack00a,
  author = {Daniel Jackson and John Ch{API}n},
  title = {Redesigning Air Traffic Control: An Exercise in Software Design},
  journal = {IEEE Software},
  volume = {17},
  pages = {63--70},
  publisher = {IEEE},
  year = {2000},
  month = may,
  number = {3}}

@inproceedings{Jack86a,
  author = {Jonathan Jacky and Ira Kalet},
  title = {An Object-Oriented Approach to a Large Scientific Application},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {368--376},
  year = {1986},
  month = nov}

@inproceedings{Jack94a,
  author = {Jackson, Daniel and Ladd, David A.},
  title = {Semantic Diff: A Tool for Summarizing the Effects of Modifications},
  booktitle = {Proceedings of the International Conference on Software Maintenance},
  pages = {243--252},
  publisher = {IEEE Computer Society},
  year = {1994},
  isbn = {0-8186-6330-8},
  series = {{ICSM}'94}}

@article{Jaco03,
  author = {Ivar Jacobson},
  title = {Use Cases and Aspects--Working Seamlessly Together},
  journal = {Journal of Object Technology},
  volume = {2},
  pages = {7--28},
  year = {2003},
  month = jul,
  number = {4}}

@book{Jaco05a,
  author = {Ivar Jacobson and Pan-Wei Ng},
  title = {Aspect-Oriented Software Development with Use Cases},
  publisher = {Addison Wesley Professional},
  year = {2005},
  isbn = {0321268881}}

@article{Jaco08a,
  author = {Bart Jacobs and Frank Piessens and Jan Smans and K. Rustan M. Leino and Wolfram Schulte},
  title = {A programming model for concurrent object-oriented programs},
  journal = {ACM Trans. Program. Lang. Syst. (TOPLAS)},
  volume = {31},
  pages = {1--48},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1452044.1452045},
  address = {New York, NY, USA},
  issn = {0164-0925},
  number = {1}}

@inproceedings{Jaco86a,
  author = {Ivar Jacobson},
  title = {Language Support for Changeable Large Real Time Systems},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {377--384},
  year = {1986},
  month = nov}

@inproceedings{Jaco87a,
  author = {Ivar Jacobson},
  title = {Object Oriented Development in an Industrial Environment},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {183--191},
  year = {1987},
  month = dec}

@inproceedings{Jaco91a,
  author = {Ivar Jacobson and Fredrik Lindstr{\"o}m},
  title = {Re-engineering of Old Systems to an Object-Oriented Database},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {340--350},
  year = {1991},
  month = nov}

@book{Jaco92a,
  author = {Ivar Jacobson and Magnus Christerson and Patrik Jonsson and Gunnar Overgaard},
  title = {Object-Oriented Software Engineering --- {A} Use Case Driven Approach},
  publisher = {Addison Wesley/ACM Press},
  year = {1992},
  address = {Reading, Mass.},
  isbn = {0-201-54435-0}}

@article{Jaco93a,
  author = {Ivar Jacobson},
  title = {Is Object Technology Software's Industrial Platform?},
  journal = {IEEE Software (Special Issue on "Making O-O Work")},
  volume = {10},
  pages = {24--30},
  year = {1993},
  month = jan,
  number = {1}}

@techreport{Jaco93b,
  author = {Ian Jacobs and Francis Montagnac and Janet Bertot and Dominique Cle\'ment and Vincent Prunet},
  title = {The Sophtalk Reference Manual},
  year = {1993},
  institution = {INRIA},
  month = feb,
  number = {150}}

@techreport{Jaco93c,
  author = {Ian Jacobs and Janet Bertot},
  title = {Sophtalk Tutorials},
  year = {1993},
  institution = {INRIA},
  month = feb,
  number = {149}}

@book{Jaco95a,
  author = {Ivar Jacobson and Maria Ericsson and Agneta Jacobson},
  title = {The Object Advantage: Business Process Reengineering with Object Technology},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-42289}}

@inproceedings{Jaco96a,
  author = {Bart Jacobs},
  title = {Inheritance and Cofree Constructions},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {210--231},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@book{Jaco97a,
  author = {Ivar Jacobson and Martin Griss and Patrik Jonsson},
  title = {Software Reuse},
  publisher = {Addison Wesley/ACM Press},
  year = {1997},
  isbn = {0-201-92476-5}}

@book{Jaco99a,
  author = {Ivar Jacobson and Grady Booch and James Rumbaugh},
  title = {The Unified Software Development Process},
  publisher = {Addison Wesley},
  year = {1999}}

@inproceedings{Jaeg05a,
  author = {Jaeger, M. C. Rojec Goldmann, G. and Muhl, G},
  title = {Qos aggregation in web service compositions,},
  booktitle = {Proceedings of the 2005 IEEE International Conference on e-Technology, e-Commerce and e-Service on e-Technology, e-Commerce and e-Service. Washington, DC, USA: IEEE Computer Society},
  pages = {181-185},
  publisher = {IEEE Computer Society},
  year = {2005}}

@article{Jaer03a,
  author = {Jaakko J\"arvi and Gary Powell and Andrew Lumsdaine},
  title = {The Lambda library: unnamed functions in {C++}},
  journal = {Softw. Pract. Exper.},
  volume = {33},
  pages = {259--291},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2003},
  doi = {10.1002/spe.504},
  issn = {0038-0644},
  number = {3}}

@article{Jaff94a,
  author = {J. Jaffar and M. Maher},
  title = {Constraint Logic Programming: a survey},
  journal = {The Journal of Logic Programming},
  pages = {503--581},
  year = {1994},
  number = {19,20}}

@inproceedings{Jaga90a,
  author = {Radha Jagadeesan and Prakash Panangaden},
  title = {A Domain-theoretic Model for a Higher-order Process Calculus},
  booktitle = {Proceedings ICALP '90},
  volume = {443},
  pages = {181--194},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Warwick U.},
  editor = {M.S. Paterson},
  month = jul,
  series = {LNCS}}

@inproceedings{Jaga92a,
  author = {Suresh Jagannathan and Gul Agha},
  title = {A Reflective Model of Inheritance},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {350--371},
  publisher = {Springer-Verlag},
  year = {1992},
  url = {ftp://biobio.cs.uiuc.edu/pub/papers/reflective},
  abstract = {We present an alternative treatment of namespace
construction and manipulation. The {\em reflective}
model is based on a semantic transformation
technique that provides flexible {\em mechanisms}
for managing namespaces. We argue that given the
ability to manipulate environments directly, one can
realize a variety of different object-oriented
paradigms within a unified and simple framework.
Starting from a kernel language whose foundation is
the simply typed $\lambda$-calculus, we develop a
small collection of environment manipulating
primitives that provide an expressive platform
within which a number of inheritance-related
abstractions can be realized.},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Jahn97a,
  author = {Jens Jahnke and Albert Z{\"u}ndorf},
  title = {Rewriting poor Design Patterns by Good Design Patterns},
  booktitle = {Proceedings of the ESEC/FSE Workshop on Object-Oriented Re-engineering},
  publisher = {Technical University of Vienna, Information Systems Institute, Distributed Systems Group},
  year = {1997},
  url = {http://scg.unibe.ch/archive/famoos/ESEC97/index.html},
  editor = {Serge Demeyer and Harald Gall},
  month = sep,
  note = {Technical Report TUV-1841-97-10}}

@inproceedings{Jahn97b,
  author = {Jens. H. Jahnke and Wilhelm. Sch{\"a}fer and Albert. Z{\"u}ndorf},
  title = {Generic Fuzzy Reasoning Nets as a Basis ofr Reverse Engineering Relational Database Applications},
  booktitle = {Proceedings of ESEC/FSE '97},
  pages = {193--210},
  year = {1997},
  note = {inproceedings},
  number = {1301},
  series = {LNCS}}

@inproceedings{Jain01a,
  author = {Jain, Hemant and Chalimeda, Naresh and Ivaturi, Navin and Reddy, Balarama},
  title = {Business component identification-a formal approach},
  booktitle = {Enterprise Distributed Object Computing Conference, 2001. EDIC'01. Proceedings. Fifth IEEE International},
  pages = {183--187},
  year = {2001},
  organization = {IEEE}}

@inproceedings{Jain15,
  author = {Jain, Suman and Chana, Inderveer},
  title = {Modernization of Legacy Systems: A Generalised Roadmap},
  booktitle = {Proceedings of the Sixth International Conference on Computer and Communication Technology 2015},
  pages = {62 to 67},
  publisher = {Association for Computing Machinery},
  year = {2015},
  url = {https://doi.org/10.1145/2818567.2818579},
  doi = {10.1145/2818567.2818579},
  abstract = {A number of key organizations are sustaining the decades old complex legacy systems despite their types of services and operating environment. Cloud computing provides numerous processes, tools and methods to emphasize upon the pay-as-per-use utility models. The utter need to modernize these older systems leads to modernization processes involving the vision to leverage the cloud computing benefits. The proposed modernization framework includes decision support module followed by the elaboration of available modernization approaches. This legacy problem is one of the main challenges for cloud computing to deal with. When re-architecting and reengineering these legacy systems, parallel computing approaches also need to be assessed for resource optimization in cloud environments.},
  address = {New York, NY, USA},
  isbn = {9781450335522},
  keywords = {Modernization, Decision making module, Migration, Reengineering, Cloud computing, Service oriented architecture, MoDisco},
  location = {Allahabad, India},
  numpages = {6},
  series = {ICCCT '15}}

@book{Jain88a,
  author = {Anil Kumar Jain and Richard C. Dubes},
  title = {Algorithms for Clustering Data},
  publisher = {Prentice Hall},
  year = {1988},
  address = {Englewood Cliffs}}

@article{Jain99a,
  author = {Anil Kumar Jain and M. Narasimha Murty and Patrick Joseph Flynn},
  title = {Data Clustering: a Review},
  journal = {ACM Computing Surveys},
  volume = {31},
  pages = {264--323},
  publisher = {ACM Press},
  year = {1999},
  url = {http://dx.doi.org/10.1145/331499.331504},
  doi = {10.1145/331499.331504},
  address = {New York, NY, USA},
  issn = {0360-0300},
  number = {3}}

@inproceedings{Jakob09a,
  author = {Jakob, Henner and Loriant, Nicolas and Consel, Charles},
  title = {An Aspect-Oriented Approach to Securing Distributed Systems},
  booktitle = {ICPS'09: Proceedings of the 6th International Conference on Pervasive Services},
  pages = {21--30},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1568199.1568204},
  isbn = {978-1-60558-644-1},
  location = {London, United Kingdom}}

@book{Jalo97a,
  author = {P. Jalote},
  title = {An Integrated Approach to Software Engineering},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {New York},
  edition = {2nd}}

@inproceedings{Jamm05a,
  author = {Fran\c{c}ois Jammes and Harm Smit},
  title = {Service-Oriented Architectures for Devices --- the SIRENA View},
  booktitle = {Proceedings of the 3rd IEEE International Conference on Industrial Informatics (INDIN'05)},
  pages = {140--147},
  year = {2005},
  doi = {10.1109/INDIN.2005.1560366},
  month = aug}

@inproceedings{Janj09a,
  author = {Janjic, W. and Stoll, D. and Bostan, P. and Atkinson, C.},
  title = {Lowering the barrier to reuse through test-driven search},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {21--24},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070015},
  doi = {10.1109/SUITE.2009.5070015},
  abstract = {Dedicated software search engines that index open
source software repositories or in-house software
assets significantly enhance the chance of finding
software components suitable for reuse. However,
they still leave the work of evaluating and testing
components to the developer. To significantly change
the risk/cost/benefit tradeoff involved in software
reuse, search engines need to be supported by user
friendly environments that deliver code search
functionality, non-intrusively, right to developers'
fingertips during key software development
activities and significantly raise the quality of
search results. In this position paper we describe
our attempt to realize this vision through an
Eclipse plug-in, Code Conjurer, in tandem with the
code search engine, merobase.}}

@inproceedings{Janj15,
  author = {Janjua, Muhammad Umar},
  title = {OnSpot System: Test Impact Visibility During Code Edits in Real Software},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages = {994--997},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2786805.2804430},
  doi = {10.1145/2786805.2804430},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3675-8},
  location = {Bergamo, Italy},
  numpages = {4},
  series = {ESEC/FSE 2015}}

@article{Jank88a,
  author = {Hugo T. Jankowitz},
  title = {Detecting Plagiarism in Student {PASCAL} Programs},
  journal = {Computer Journal},
  volume = {1},
  pages = {1--8},
  year = {1988},
  keywordsw = {plagiarism},
  number = {31}}

@inproceedings{Jans04a,
  author = {Svante Janson and Stefano Lonardi and Wojciech Szpankowski},
  title = {On Average Sequence Complexity},
  booktitle = {Proceedings of the Symposium on Combinatorial Pattern Matching},
  year = {2004},
  address = {Istanbul, Turkey},
  editor = {Springer},
  number = {3109},
  series = {LNCS}}

@incollection{Jans87a,
  author = {Dirk Janssens and G. Rozenberg},
  title = {Basic Notions of Actor Grammars: {A} Graph Grammar Model for Actor Computation},
  booktitle = {Graph-Grammars and Their Application to Computer Science},
  volume = {291},
  pages = {280--298},
  publisher = {Springer-Verlag},
  year = {1987},
  editor = {H. Ehrig and M. Nagl and G. Rozenberg and A. Rosenfeld},
  series = {LNCS}}

@techreport{Jans88a,
  author = {Dirk Janssens and G. Rozenberg},
  title = {Actor Grammars},
  year = {1988},
  institution = {University of Limburg, Diepenbeek, Belgium, and University of Leiden, the Netherlands},
  note = {Submitted for Mathematical Systems Theory},
  type = {manuscript}}

@article{Janss07a,
  author = {Jansson, Ann-Sofie},
  title = {Software maintenance and process improvement by CMMI},
  journal = {UPTEC STS07037 November Examensarbete},
  volume = {20},
  year = {2007}}

@inproceedings{Janz03a,
  author = {Doug Janzen and Kris de Volder},
  title = {Navigating and Querying Code Without Getting Lost},
  booktitle = {Proceedings of the 2nd International Conference on Aspect-Oriented Software Development},
  pages = {178--187},
  publisher = {ACM},
  year = {2003},
  address = {New York, NY, USA},
  isbn = {1-58113-660-9},
  series = {AOSD'03}}

@article{Jarv02a,
  author = {Kalervo J{\"a}rvelin and Jaana Kek{\"a}l{\"a}inen},
  title = {Cumulated Gain-Based Evaluation of IR Techniques},
  journal = {ACM Transactions on Information Systems},
  volume = 20,
  pages = {422--446},
  year = {2002},
  number = 4}

@inproceedings{Jarz03a,
  author = {Stan Jarzabek and Li Shubiao},
  title = {Eliminating Redundancies with a `Composition with Adaptation' Meta-programming Technique},
  booktitle = {Proceedings ESEC-FSE'03, European Software Engineering Conference and ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  pages = {237--246},
  publisher = {ACM Press},
  year = {2003},
  month = sep}

@inproceedings{Jasz08a,
  author = {J{\'a}sz, Judit and Besz{\'e}des, {\'A}rp{\'a}d and Gyim{\'o}thy, Tibor and Rajlich, V{\'a}clav},
  title = {Static execute after/before as a replacement of traditional software dependencies},
  booktitle = {Software Maintenance, 2008. {ICSM} 2008. IEEE International Conference on},
  pages = {137--146},
  year = {2008},
  organization = {IEEE}}

@inproceedings{Jasz12,
  author = {J{\'a}sz Judit and Lango Laszlo and Gyim{\'o}thy Tibor and Gergely Tamas and Beszedes Arpad and Schrettner Lajos},
  title = {Code Coverage-based Regression Test Selection and Prioritization in {WebKit}},
  booktitle = {Proceedings {{ICSM} '12} {the 2012 IEEE International Conference on Software Maintenance ({ICSM})}},
  pages = {46--55},
  publisher = {IEEE Computer Society},
  year = {2012},
  url = {http://dx.doi.org/10.1109/ICSM.2012.6405252},
  doi = {10.1109/ICSM.2012.6405252},
  address = {Washington, DC, USA},
  isbn = {978-1-4673-2313-0},
  numpages = {10}}

@misc{Java,
  title = {Java},
  key = {Java},
  note = {http://java.sun.com/}}

@misc{JavaAnn,
  author = {{Sun microsystems}},
  title = {Java Annotations},
  year = {2004},
  url = {http://java.sun.com/j2se/1.5.0/docs/guide/language/annotations.html},
  key = {JavaAnn},
  note = {http://java.sun.com/j2se/1.5.0/docs/guide/language/annotations.html}}

@misc{JavaCC,
  title = {Java Compiler Compiler},
  url = {http://www.experimentalstuff.com/Technologies/JavaCC/},
  key = {JavaCC},
  note = {http://www.experimentalstuff.com/Technologies/JavaCC/}}

@misc{JavaIDEAPI,
  title = {JSR 198: A Standard Extension {API} for Integrated Development Environments},
  url = {http://jcp.org/en/jsr/detail?id=198},
  key = {Java IDE {API}},
  note = {http://jcp.org/en/jsr/detail?id=198}}

@misc{JavaME,
  title = {Java Micro Edition},
  key = {JavaME},
  note = {http://java.sun.com/javame/index.jsp}}

@misc{JavaOracle,
  author = {Oracle},
  title = {Java},
  year = {2023},
  howpublished = {\url{https://www.java.com/en/}}}

@misc{JavaS13,
  author = {Oracle},
  title = {The Security Manager},
  year = {2013},
  howpublished = {\url{http://docs.oracle.com/javase/7/docs/technotes/guides/security/index.html}}}

@inproceedings{Jave12a,
  author = {Muhammad Javed and Yalemisew Abgaz and Claus Pahl},
  title = {Composite Ontology Change Operators and their Customizable Evolution Strategies},
  booktitle = {Workshop on Knowledge Evolution and Ontology Dynamics, collocated at 11th International Semantic Web Conference},
  pages = {1--12},
  year = {2012}}

@inproceedings{Jaya15,
  author = {Jayasena, Sanath and Fernando, Milinda and Rusira, Tharindu and Perera, Chalitha and Philips, Chamara},
  title = {Auto-tuning the java virtual machine},
  booktitle = {2015 IEEE International Parallel and Distributed Processing Symposium Workshop},
  pages = {1261--1270},
  year = {2015},
  organization = {IEEE}}

@inproceedings{Jaza02a,
  author = {Mehdi Jazayeri},
  title = {On Architectural Stability and Evolution},
  booktitle = {Reliable Software Technologies-Ada-Europe 2002},
  pages = {13--23},
  publisher = {Springer Verlag},
  year = {2002},
  address = {Berlin}}

@inproceedings{Jaza04a,
  author = {Mehdi Jazayeri},
  title = {The Education of a Software Engineer},
  booktitle = {Proceedings of ASE 2004 (20th International Conference on Automated Software Engineering},
  pages = {18--27},
  publisher = {IEEE CS Press},
  year = {2004}}

@inproceedings{Jaza95a,
  author = {Mehdi Jazayeri},
  title = {Component Programming --- a fresh look at software components},
  booktitle = {Proceedings of ESEC 95},
  year = {1995},
  url = {http://www.infosys.tuwien.ac.at/reports/repository/TUV-1841-95-01.ps}}

@book{Jaza97a,
  title = {Proceedings of {ESEC}/{FSE}'97},
  volume = {1301},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Zurich, Switzerland},
  editor = {Mehdi Jazayeri and Helmut Schauer},
  isbn = {3-540-63531-9},
  month = sep,
  series = {LNCS}}

@inproceedings{Jaza99a,
  author = {Mehdi Jazayeri and Harald Gall and Claudio Riva},
  title = {Visualizing {Software} {Release} {Histories}: The {Use} of {Color} and {Third} {Dimension}},
  booktitle = {Proceedings of {ICSM} '99 (International Conference on Software Maintenance)},
  pages = {99--108},
  publisher = {IEEE Computer Society Press},
  year = {1999}}

@book{Jeff01a,
  author = {Ron Jeffries and Ann Anderson and Chet Hendrickson},
  title = {Extreme Programming Installed},
  publisher = {Addison Wesley},
  year = {2001},
  isbn = {0-201-70842-6}}

@inproceedings{Jeff92a,
  author = {S. Jefferson and D.P. Friedman},
  title = {{A Simple Reflective Interpreter}},
  booktitle = {IMSA '92 International Workshop on Reflection and Meta-Level Architecture},
  year = {1992},
  address = {Tokyo},
  month = nov}

@article{Jend13,
  author = {Jendoubi, Slim and Dimassi, Jamil and Ghezala, Henda Ben},
  title = {A Meta-Model for Migrating a Legacy Information System based on Procedural Software Architecture towards Service Oriented Architecture},
  journal = {International Journal of Computer Applications},
  volume = {61},
  year = {2013},
  number = {13}}

@article{Jenn95a,
  author = {Nicholas Jennings and Michael Wooldridge},
  title = {Applying Agent Technology},
  journal = {Applied Artificial Intelligence An International Journal},
  volume = {9},
  pages = {351--361},
  year = {1995},
  number = {4}}

@inproceedings{Jenn95b,
  author = {Nicholas Jennings},
  title = {Agent Software},
  booktitle = {Proc. UNICOM Seminar on Agent Software},
  pages = {12--27},
  year = {1995},
  address = {London}}

@incollection{Jenn96a,
  author = {Nicholas Jennings},
  title = {Coordination Techniques for Distributed Artificial Intelligence},
  booktitle = {Foundations of Distributed Artificial Intelligence},
  pages = {187--210},
  publisher = {John Wiley \& Sons},
  year = {1996},
  editor = {G.M.P. O'Hare and N.R. Jennings}}

@inproceedings{Jens04a,
  author = {Ole Guttorm Jensen and Michael H. B{\"{o}}hlen},
  title = {Lossless Conditional Schema Evolution},
  booktitle = {Conceptual Modeling - {ER}'04},
  pages = {610--623},
  year = {2004},
  doi = {10.1007/978-3-540-30464-7\_46}}

@inproceedings{Jens12a,
  author = {Simon Holm Jensen and Peter A Jonsson and Anders Moller},
  title = {Remedying the Eval that Men Do},
  booktitle = {International Symposium on Software Testing and Analysis},
  year = {2012}}

@inproceedings{Jens14a,
  author = {Jensen, Nicklas Bo and Probst, Christian W and Karlsson, Sven},
  title = {Code Commentary and Automatic Refactorings using Feedback from Multiple Compilers},
  booktitle = {7th Swedish Workshop on Multicore Computing (MCC14)},
  year = {2014}}

@inproceedings{Jens98,
  author = {Jensen, T. and Le M\'{e}tayer, D. and Thorn, T.},
  title = {Security and Dynamic Class Loading in Java: A Formalization},
  booktitle = {Proceedings of the 1998 International Conference on Computer Languages},
  pages = {4--},
  publisher = {IEEE Computer Society},
  year = {1998},
  url = {http://portal.acm.org/citation.cfm?id=857172.857244},
  acmid = {857244},
  address = {Washington, DC, USA},
  isbn = {0-8186-8454-2}}

@inproceedings{Jens98a,
  author = {Jensen, T. and Le M\'{e}tayer, D. and Thorn, T.},
  title = {Security and Dynamic Class Loading in Java: A Formalization},
  booktitle = {Proceedings of the 1998 International Conference on Computer Languages},
  pages = {4--},
  publisher = {IEEE Computer Society},
  year = {1998},
  url = {http://portal.acm.org/citation.cfm?id=857172.857244},
  acmid = {857244},
  address = {Washington, DC, USA},
  isbn = {0-8186-8454-2}}

@article{Jeon02a,
  author = {Jeon, Sang-Uk and Lee, Joon-Sang and Bae, Doo-Hwan},
  title = {An automated refactoring approach to design pattern-based program transformations in Java programs},
  journal = {Ninth Asia-Pacific Software Engineering Conference, 2002.},
  pages = {337-345},
  year = {2002},
  url = {https://api.semanticscholar.org/CorpusID:15738627}}

@article{Jeon14a,
  author = {Jeong, Chisoon and Hang, Su and Burgstaller, Bernd},
  title = {Improved Branch Prediction for Just-in-Time Decompression of Canonical Huffman Bytecode Streams},
  journal = {Lecture Notes in Electrical Engineering},
  volume = {301},
  pages = {719-729},
  year = {2014},
  doi = {10.1007/978-94-017-8798-7_82},
  month = {jan}}

@techreport{Jerd96a,
  author = {Dean Jerding and John Stasko and Thomas Ball},
  title = {Visualizing Message Patterns in Object-Oriented Program Executions},
  year = {1996},
  institution = {Georgia Institute of Technology},
  month = may,
  number = {GIT-GVU-96-15}}

@techreport{Jerd96b,
  author = {Dean F. Jerding and John T. Stasko},
  title = {The Information Mural: Increasing Information Bandwidth in Visualizations},
  year = {1996},
  institution = {Georgia Institute of Technology},
  month = oct,
  number = {GIT-GVU-96-25}}

@inproceedings{Jerd97a,
  author = {Dean Jerding and Spencer Rugaber},
  title = {Using Visualization for Architectural Localization and Extraction},
  booktitle = {Proceedings of 4th Working Conference on Reverse Engineering ({WCRE}'97)},
  pages = {56--65},
  publisher = {IEEE Computer Society Press},
  year = {1997},
  editor = {Ira Baxter and Alex Quilici and Chris Verhoef}}

@inproceedings{Jerd97b,
  author = {Dean J. Jerding and John T. Stasko and Thomas Ball},
  title = {Visualizing Interactions in Program Executions},
  booktitle = {Proceedings of International Conference on Software Engineering (ICSE'97)},
  pages = {360--370},
  year = {1997}}

@inproceedings{Jerd97c,
  author = {Dean Jerding and Spencer Rugaber},
  title = {{Using} {Visualization} for {Architectural} {Localization} and {Extraction}},
  booktitle = {Proceedings {WCRE}},
  pages = {56--65},
  publisher = {IEEE},
  year = {1997}}

@inproceedings{Jerr89a,
  author = {Max E. Jerrell},
  title = {Function Minimization and Automatic Differentiation Using {C}++},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {169--174},
  year = {1989},
  month = oct}

@misc{JetStream,
  author = {Filip Pizlo},
  title = {JetStream Benchmark Suite},
  url = {https://browserbench.org/JetStream/},
  note = {Retrieved June 07 2022}}

@article{Jetl99a,
  author = {Niraj Jetly},
  title = {{Visual}{Age} for {Java} 2.0},
  journal = {Java Developer's Journal},
  volume = {4},
  pages = {48--49},
  year = {1999},
  month = apr,
  number = {4}}

@article{Jeze15a,
  author = {Jezek, Kamil and Dietrich, Jens and Brada, Premek},
  title = {How Java APIs break--an empirical study},
  journal = {Information and Software Technology},
  volume = {65},
  pages = {129--146},
  publisher = {Elsevier},
  year = {2015}}

@inproceedings{Jeze92a,
  author = {J-M. J\'ez\'equel},
  title = {{EPEE}: an Eiffel Environment to Program Distributed Memory Parallel Computers},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {197--212},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Jeze93a,
  author = {Jean-Marc J\'ez\'equel},
  title = {Transparent Parallelisation Through Reuse: Between a Compiler and a Library Approach},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {384--405},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {Software environments for commercially available
Distributed Memory Parallel Computers (DMPCs) mainly
consist of libraries of routines to handle
communications between processes written in
sequential languages such as C or Fortran. This
approach makes it difficult to program massively
parallel systems in both an easy and efficient way.
Another approach relies on (semi-)automatic
parallelizing compilers but it has its own
drawbacks. We propose to tackle this problem at an
intermediate level (i.e. between high level
parallelizing compilers and raw libraries), using
Object Oriented (OO) technologies. We show that
existing OO techniques based on the reuse of
carefully designed software components can be
applied with satisfactory results to the large scale
scientific computation field. We propose to use a
form of parallelism, known as data parallelism, and
to embed it in a pure sequential OOL (Eiffel). We
illustrate on several examples how sequential
components and frameworks can be modified for
parallel execution on DM- PCs to allow for
transparent parallelisation of classes using these
components and frameworks.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@article{Jeze94a,
  author = {J-M. J\'ez\'equel and F. Guidec and F. Hamelin},
  title = {Parallelizing Object-Oriented Software trough the Reuse of Parallel Components},
  journal = {Object-Oriented Systems},
  volume = {1},
  pages = {149--170},
  publisher = {Chapman \& Hall},
  year = {1994},
  month = dec,
  number = {2}}

@book{Jeze96a,
  author = {J-M. J\'ez\'equel},
  title = {Object-Oriented Software Engineering with Eiffel},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63381-7}}

@inproceedings{Jeze96b,
  author = {Jean-Marc J\'ez\'equel and Jean-Lin Pacherie},
  title = {Parallel Operators},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {275--294},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@misc{Jfac,
  title = {j{Factor}},
  key = {jFac},
  note = {http://www.instantiations.com/jfactor/}}

@misc{Jhd76a,
  title = {JHotDraw 7.6: Java GUI framework},
  key = {Jhd76a},
  note = {http://www.jhotdraw.org/}}

@article{Jia10a,
  author = {Jia, Yue and Harman, Mark},
  title = {An analysis and survey of the development of mutation testing},
  journal = {IEEE transactions on software engineering},
  volume = {37},
  pages = {649--678},
  publisher = {IEEE},
  year = {2010},
  number = {5}}

@inproceedings{Jian15a,
  author = {Qingtao Jiang and Xin Peng and Hai Wang and Zhenchang Xing and Wenyun Zhao},
  title = {Summarizing Evolutionary Trajectory by Grouping and Aggregating Relevant Code Changes},
  booktitle = {22nd International Conference on Software Analysis, Evolution, and Reengineering},
  pages = {1--10},
  year = {2015}}

@inproceedings{Jiaw20,
  author = {Jiawei Wang and
                  Tzu{-}yang Kuo and
                  Li Li and
                  Andreas Zeller},
  title = {Assessing and Restoring Reproducibility of Jupyter Notebooks},
  booktitle = {35th {IEEE/ACM} International Conference on Automated Software Engineering,
                  {ASE}},
  pages = {138--149},
  publisher = {{IEEE}},
  year = {2020}}

@misc{Jikes,
  title = {The {Jikes} Research Virtual Machine},
  url = {http://jikesrvm.sourceforge.net/},
  key = {Jikes},
  note = {http://jikesrvm.sourceforge.net/}}

@inproceedings{Jim96a,
  author = {Trevor Jim},
  title = {What are principal typings and what are they good for?},
  booktitle = {Principles of Programming Languages},
  publisher = {ACM},
  year = {1996},
  url = {http://www.research.att.com/~trevor/papers.html}}

@inbook{Jime09b,
  author = {Ricardo Jimenez-Peris and Marta Pati\~no-Martinez and Bettina Kemme and Francisco Perez-Sorrosal and Damian Serrano},
  title = {A System of Architectural Patterns for Scalable, Consistent and Highly Available Multi-Tier Service Oriented Infrastructure},
  booktitle = {Architecting Dependable Systems. Volume 6.},
  volume = {5835},
  pages = {1--23},
  publisher = {Springer},
  year = {2009},
  isbn = {3-642-10247-6},
  series = {LNCS}}

@article{Jimen09a,
  author = {Jimenez, Manuel and Rosique, Francisca and Sanchez, Pedro and Alvarez, Barbara and Iborra, Andres},
  title = {Habitation: A Domain-Specific Language for Home Automation},
  journal = {IEEE Software},
  volume = {26},
  pages = {30-38},
  publisher = {IEEE Computer Society},
  year = {2009},
  doi = {10.1109/MS.2009.93},
  number = {4}}

@misc{Jip,
  title = {Java Interactive Profiler},
  key = {jip},
  note = {http://sourceforge.net/projects/jiprof}}

@book{John00a,
  author = {Jeff Johnson},
  title = {GUI Bloopers},
  publisher = {Morgan Kaufmann},
  year = {2000}}

@book{John04a,
  author = {Rob Johnsohn and Juergen Hoeller},
  title = {Expert One-on-One J2EE Development without EJB},
  pages = 576,
  publisher = {Wrox},
  year = {2004},
  isbn = {0-764-558315}}

@article{John05a,
  author = {Johnson, Rod},
  title = {J2EE development frameworks},
  journal = {Computer},
  volume = {38},
  pages = {107--110},
  publisher = {IEEE},
  year = {2005},
  number = {1}}

@article{John13,
  author = {B. Johnson and Y. Song and E. Murphy-Hill and R. Bowdidge},
  title = {Why don't software developers use static analysis tools to find bugs?},
  journal = {IEEE Press Piscataway, NJ, USA 2013},
  year = {2013},
  keywords = {fortran}}

@techreport{John75a,
  author = {S.C. Johnson},
  title = {Yacc: Yet Another Compiler Compiler},
  year = {1975},
  address = {Murray Hill, NJ},
  institution = {Bell Laboratories},
  number = {32},
  type = {Computer Science Technical Report}}

@incollection{John78a,
  author = {S.C. Johnson},
  title = {Lint, a {C} Program Checker},
  booktitle = {UNIX programmer's manual},
  pages = {78--1273},
  publisher = {AT\&T Bell Laboratories},
  year = {1978}}

@inproceedings{John86a,
  author = {Ralph E. Johnson},
  title = {Type-Checking {Smalltalk}},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {315--321},
  year = {1986},
  month = nov}

@inproceedings{John88a,
  author = {Ralph Johnson},
  title = {{TS}: {An} Optimizing Compiler for {Smalltalk}},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {18--26},
  year = {1988},
  month = nov}

@article{John88b,
  author = {Ralph E. Johnson and Brian Foote},
  title = {Designing Reusable Classes},
  journal = {Journal of Object-Oriented Programming},
  volume = {1},
  pages = {22--35},
  year = {1988},
  url = {ftp://st.cs.uiuc.edu/pub/papers/frameworks/designing-reusable-classes.ps ftp://p300.cpl.uiuc.edu/pub/foote/DRC.ps},
  number = {2}}

@inproceedings{John88c,
  author = {Johnson, G. F. and Duggan, D.},
  title = {Stores and partial continuations as first-class objects in a language and its environment},
  booktitle = {POPL '88: Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages = {158--168},
  publisher = {ACM},
  year = {1988},
  doi = {10.1145/73560.73574},
  address = {New York, NY, USA},
  isbn = {0-89791-252-7},
  location = {San Diego, California, United States}}

@techreport{John91a,
  author = {Ralph E. Johnson and Vincent F. Russo},
  title = {Reusing Object-Oriented Designs},
  year = {1991},
  url = {ftp://st.cs.uiuc.edu/pub/papers/frameworks/reusable-oo-design.ps},
  institution = {UIUC DCS},
  month = may,
  number = {91-1696}}

@inproceedings{John91b,
  author = {Brian Johnson and Ben Shneiderman},
  title = {Tree-Maps: a space-filling approach to the visualization of hierarchical information structures},
  booktitle = {VIS '91: Proceedings of the 2nd conference on Visualization '91},
  pages = {284--291},
  publisher = {IEEE Computer Society Press},
  year = {1991},
  address = {Los Alamitos, CA, USA},
  isbn = {0-8186-2245-8 (PAPER)},
  location = {San Diego, California}}

@inproceedings{John92a,
  author = {Ralph E. Johnson},
  title = {Documenting Frameworks using Patterns},
  booktitle = {Proceedings OOPSLA '92},
  volume = {27},
  pages = {63--76},
  year = {1992},
  month = oct}

@inproceedings{John93a,
  author = {Richard Johnson and Murugappan Palaniappan},
  title = {MetaFlex: {A} Flexible Metaclass Generator},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {503--528},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {Motivated to support the needs of component-based
applications, we have developed a system called
MetaFlex that generates metaclasses to extend the
behavior of our C++ classes without inventing
variants of the original classes. We make the case
that a flexible metaclass generator service that
allows developers to freely choose the kind and
degree of detail for each metaclass is needed and
present our architecture for making this
specification. We also illustrate a powerful use of
this technique with a scripting extension to our
application framework. With an evaluation of our
current MetaFlex implementation and its use with the
scripting extension, we conclude that this service
is best provided by compiler vendors.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@incollection{John93b,
  author = {Ralph E. Johnson and William F. Opdyke},
  title = {Refactoring and Aggregation},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {264--278},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Object-oriented programs evolve by means other than
just the addition of new classes. The changes to
object-oriented programs that have been most studied
are those based on inheritance, on reorganizing a
class hierarchy. However, aggregation is a
relationship between classes that is just as
important as inheritance, and many changes to an
object-oriented design involve the
aggregate/component relationship. This paper
describes some common refactorings based on
aggregation, including how to convert from
inheritance to an aggregation, and how to reorganize
an aggregate/component hierarchy just as one might
reorganize a class inheritance hierarchy.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{John93c,
  author = {J. Howard Johnson},
  title = {Identifying Redundancy in Source Code using Fingerprints},
  booktitle = {Proceedings of CASCON 93},
  pages = {171--183},
  year = {1993}}

@inproceedings{John94a,
  author = {J. Howard Johnson},
  title = {Substring Matching for Clone Detection and Change Tracking},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM} 94)},
  pages = {120--126},
  year = {1994},
  doi = {10.1109/ICSM.1994.336783},
  date = {September 19-23}}

@inproceedings{John94b,
  author = {J. Howard Johnson},
  title = {Visualizing Textual Redundancy in Legacy Source},
  booktitle = {Proceedings of CASCON '94},
  pages = {9--18},
  year = {1994},
  date = {October 31--November 3}}

@techreport{John94c,
  author = {John, Bonnie E. and Kieras, David E.},
  title = {{T}he {GOMS} {F}amily of {A}nalysis {T}echniques: {T}ools for {D}esign and {E}valuation},
  year = {1994},
  date-added = {2006-08-15 14:33:02 +0200},
  date-modified = {2006-09-11 10:14:20 +0200},
  institution = {Carnegie Mellon University School of Computer Science},
  month = {aug},
  number = {CMU-CS-94-181}}

@inproceedings{John95a,
  author = {J.~Howard Johnson},
  title = {Using Textual Redundancy to Understand Change},
  booktitle = {Proceedings of CASCON '95},
  year = {1995},
  date = {November 7-9}}

@inproceedings{John96a,
  author = {J.~Howard Johnson},
  title = {Navigating the Textual Redundancy Web in Legacy Source},
  booktitle = {Proceedings of the 1996 conference of the Centre for Advanced Studies on Collaborative Research},
  publisher = {IBM Press},
  year = {1996},
  organization = {IBM Centre for Advanced Studies}}

@incollection{John98a,
  author = {Ralph Johnson and Bobby Wolf},
  title = {Type Object},
  chapter = {4},
  booktitle = {Pattern Languages of Program Design 3},
  publisher = {Addison Wesley},
  year = {1998},
  editor = {Robert C. Martin and Dirk Riehle and Frank Buschmann},
  note = {ISBN:0-201-31011-2}}

@article{John98b,
  author = {David S. Johnson and Mihalis Yannakakis},
  title = {On Generating all Maximal Independent Sets},
  journal = {Information Processing Letters},
  volume = {27},
  pages = {119--123},
  year = {1998}}

@book{Joll02a,
  author = {Jolliffe, I. T.},
  title = {Principal Component Analysis},
  booktitle = {Principal Component Analysis},
  publisher = {Springer-Verlag},
  year = {2002},
  url = {http://www.springer.com/statistics/statistical+theory+and+methods/book/978-0-387-95442-4},
  doi = {10.1007/b98835},
  abstract = {Principal component analysis is central to the study of multivariate data. Although one of the earliest multivariate techniques, it continues to be the subject of much research, ranging from new model-based approaches to algorithmic ideas from neural networks. It is extremely versatile, with applications in many disciplines.
The first edition of this book was the first comprehensive text written solely on principal component analysis. The second edition updates and substantially expands the original version, and is once again the definitive text on the subject. It includes core material, current research and a wide range of applications. Its length is nearly double that of the first edition.
Researchers in statistics, or in other fields that use principal component analysis, will find that the book gives an authoritative yet accessible account of the subject. It is also a valuable resource for graduate courses in multivariate analysis. The book requires some knowledge of matrix algebra.
Ian Jolliffe is Professor of Statistics at the University of Aberdeen. He is author or co-author of over 60 research papers and three other books. His research interests are broad, but aspects of principal component analysis have fascinated him and kept him busy for over 30 years.},
  added-at = {2018-06-18T21:23:34.000+0200},
  address = {New York},
  biburl = {https://www.bibsonomy.org/bibtex/26e4a040bb89e9f40e67321856f3f9c29/pbett},
  citeulike-article-id = {11071912},
  citeulike-attachment-1 = {Jolliffe_PCA_2002.pdf; /pdf/user/pbett/article/11071912/952224/Jolliffe_PCA_2002.pdf; 8a598380aa3cb85f61749458208999525da7adab},
  citeulike-linkout-0 = {http://www.springer.com/statistics/statistical+theory+and+methods/book/978-0-387-95442-4},
  citeulike-linkout-1 = {http://dx.doi.org/10.1007/b98835},
  citeulike-linkout-2 = {http://www.springerlink.com/content/978-0-387-95442-4},
  comment = {(private-note)Full textbook. I have printed some bits; relevant bit for atm sci is {\S}4.3.},
  file = {Jolliffe_PCA_2002.pdf},
  interhash = {55163789a5c7af76da3e9b319884b07f},
  intrahash = {6e4a040bb89e9f40e67321856f3f9c29},
  isbn = {0-387-95442-2},
  keywords = {visualisation textbook statistics theory ipcc},
  posted-at = {2014-02-28 11:21:32},
  priority = {2},
  series = {Springer Series in Statistics},
  timestamp = {2018-06-22T18:34:09.000+0200}}

@article{Jone04a,
  author = {James A. Jones and Alessandro Orso and Mary Jean Harrold},
  title = {{GAMMATELLA}: visualizing program-execution data for deployed software},
  journal = {Information Visualization},
  volume = {3},
  pages = {173--188},
  publisher = {Palgrave Macmillan},
  year = {2004},
  doi = {10.1057/palgrave.ivs.9500077},
  number = {3}}

@manual{Jone07,
  author = {Richard Jones},
  title = {Roundup: an Issue-Tracking System for Knowledge Workers},
  year = {2007},
  url = http://roundup.sourceforge.net/doc-1.0/index.html}

@book{Jone16,
  author = {Jones, Richard and Hosking, Antony and Moss, Eliot},
  title = {The garbage collection handbook: the art of automatic memory management},
  publisher = {CRC Press},
  year = {2016}}

@incollection{Jone16a,
  author = {Jones, Andrew V.},
  title = {{Addressing the Regression Test Problem with Change Impact Analysis for Ada}},
  booktitle = {Reliable {{Software Technologies}} \textendash{} {{Ada-Europe}} 2016},
  pages = {61--77},
  publisher = {{Springer International Publishing}},
  year = {2016},
  doi = {10.1007/978-3-319-39083-3_5},
  abstract = {The regression test selection problem\textemdash{}selecting a subset of a test-suite given a change\textemdash{}has been studied widely over the past two decades. However, the problem has seen little attention when constrained to high-criticality developments and where a ``safe'' selection of tests need to be chosen. Further, no practical approaches have been presented for the programming language Ada. In this paper, we introduce an approach to solving the selection problem given a combination of both static and dynamic data for a program and a change-set. We present a change impact analysis for Ada that selects the safe set of tests that need to be re-executed to ensure no regressions. We have implemented the approach in the commercial, unit-testing tool VectorCAST, and validated it on a number of open-source examples. On an example of a fully-functioning Ada implementation of a DNS server (Ironsides), the experimental results show a 97\% reduction in test-case execution.},
  copyright = {\textcopyright{}2016 Springer International Publishing Switzerland},
  editor = {Bertogna, Marko and Pinho, Luis Miguel and Qui{\~n}ones, Eduardo},
  isbn = {978-3-319-39082-6 978-3-319-39083-3},
  keywords = {Ada,Change-based testing,Change impact analysis,Code coverage,Logics and Meanings of Programs,Mathematical Logic and Formal Languages,Programming Languages; Compilers; Interpreters,Regression Testing,Safety-critical software,Software engineering,Special Purpose and Application-Based Systems,Test-case selection,Unit testing},
  language = {en},
  month = jun,
  number = {9695},
  series = {Lecture Notes in Computer Science},
  timestamp = {2016-07-26T09:18:19Z},
  urldate = {2016-07-26}}

@book{Jone16b,
  author = {Jones, Richard and Hosking, Antony and Moss, Eliot},
  title = {The garbage collection handbook: the art of automatic memory management},
  publisher = {CRC Press},
  year = {2016}}

@book{Jone78a,
  title = {The Vienna Development Method: The Meta-Language},
  volume = {61},
  publisher = {Springer-Verlag},
  year = {1978},
  address = {Heidelberg},
  editor = {D. Bj\/orner and C.B. Jones},
  series = {LNCS}}

@book{Jone86a,
  author = {C.B. Jones},
  title = {Systematic Software Development Using {VDM}},
  publisher = {Prentice Hall International},
  year = {1986}}

@inproceedings{Jone86b,
  author = {Michael B. Jones and Richard F. Rashid},
  title = {Mach and Matchmaker: Kernel and Language Support for Object-Oriented Distributed Systems},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {67--77},
  year = {1986},
  month = nov}

@book{Jone87a,
  author = {Simon L. Peyton Jones},
  title = {The Implementation of Functional Programming Languages},
  publisher = {Prentice-Hall},
  year = {1987},
  address = {Englewood Cliffs},
  isbn = {0-13-453325-9},
  series = {Prentice Hall international series in computer science}}

@article{Jone91a,
  author = {Neil D. Jones},
  title = {Static Semantics, Types, and Binding Time Analysis},
  journal = {Theoretical Computer Science 90},
  pages = {95--118},
  year = {1991}}

@techreport{Jone92a,
  author = {Cliff B. Jones},
  title = {An Object-Based Design Method for Concurrent Programs},
  year = {1992},
  url = {ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-92-12-1.ps.gz},
  abstract = {The property of a (formal) development method which
gives the development process the potential for
productivity is compositionality. Interference is
what makes it difficult to find compositional
development methods for concurrent systems. This
paper is intended to contribute to tractable
development methods for concurrent programs. In
particular it explores ways in which object-based
language concepts can be used to provide a
compositional development method for concurrent
programs. This text summarizes results from three
draft papers. It firstly shows how object-based
concepts can be used to provide a designer with
control over interference and proposes a
transformational style of development (for systems
with limited interference) in which concurrency is
introduced only in the final stages of design. The
essential idea here is to show that certain object
graphs limit interference. Secondly, the paper shows
how a suitable logic can be used to reason about
those systems where interference plays an essential
role. Here again, concepts are used in the design
notation which are taken from object-oriented
languages since they offer control of granularity
and way of pinpointing interference. Thirdly, the
paper outlines the semantics of the design notation
mapping its constructs to Milner's $pi$c.},
  institution = {University of Manchester},
  type = {UMCS-92-12-1}}

@techreport{Jone93a,
  author = {Cliff B. Jones},
  title = {Process-Algebraic Foundations for an Object-Based Design Notation},
  year = {1993},
  url = {ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-93-10-1.ps.gz},
  abstract = {Earlier papers give examples of the development of
concurrent programs using \pobl\ which is a design
notation employing concepts from object-oriented
programming languages. Use is made of constraints on
the {\em object graphs} to limit interference and
assertions over such graphs to reason about about
interference. This report merges (and corrects minor
inconsistencies between) two papers which document
the semantics of \pobl\ by providing a mapping to
the $pi$ calculus indicate how arguments about the
design notation might be based on that semantics. It
also reflects some recent work not cited in the
earlier papers.},
  institution = {University of Manchester},
  type = {UMCS-93-10-1}}

@inproceedings{Jone93b,
  author = {Cliff B. Jones},
  title = {A pi-calculus Semantics for an Object-Based Design Notation},
  booktitle = {Proceedings of CONCUR '93},
  volume = {715},
  pages = {158--172},
  publisher = {Springer-Verlag},
  year = {1993},
  editor = {E. Best},
  series = {LNCS}}

@inproceedings{Jone93c,
  author = {C.B. Jones},
  title = {Constraining Interference in Object-Based Design Method},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {136--150},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@book{Jone93d,
  author = {Neil J. Jones and Carsten K. Gomard and Peter Sestoft},
  title = {Partial Evaluation and Automatic Program Generation},
  publisher = {Prentice-Hall},
  year = {1993}}

@book{Jone95a,
  author = {C. B. Jones},
  title = {Accomodating Interference in the Formal Design of Concurrent Object-Based Programs},
  publisher = {Kluwer Academic Publishers},
  year = {1995},
  note = {for printing in FMiSD}}

@book{Jone96a,
  author = {Richard Jones},
  title = {Garbage Collection: Algorithms for Automatic Dynamic Memory Management},
  pages = {403},
  publisher = {John Wiley and Sons},
  year = {1996},
  url = {http://www.cs.kent.ac.uk/pubs/1996/13},
  isbn = {0--471--94148--4},
  month = jul}

@inproceedings{Jone97a,
  author = {Mark P. Jones},
  title = {First-class polymorphism with type inference},
  booktitle = {POPL '97: Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages = {483--496},
  publisher = {ACM Press},
  year = {1997},
  isbn = {0-89791-853-3},
  location = {Paris, France}}

@inproceedings{Jone98a,
  author = {Simon Peyton Jones and Erik Meijer and Daan Leijen},
  title = {Scripting {COM} components in Haskell},
  booktitle = {Fifth International Conference on Software Reuse},
  year = {1998},
  url = {http://www.dcs.gla.ac.uk/~simonpj/com.ps.gz},
  address = {Victoria, British Columbia},
  month = jun}

@inproceedings{Jong00a,
  author = {Merijn de Jonge},
  title = {A Pretty Printer for Every Occasion},
  booktitle = {Workshop Proceedings 2nd International Symposion on Constructing Software Engineering Tools CoSET 2000},
  pages = {68--77},
  publisher = {IEEE},
  year = {2000},
  month = jun}

@article{Jong77a,
  author = {Peter de Jong and M.M. Zloof},
  title = {The System for Business Automation ({SBA}): Programming Language},
  journal = {CACM},
  volume = {20},
  pages = {385--396},
  year = {1977},
  month = jun,
  number = {6}}

@article{Jong86a,
  author = {Peter de Jong},
  title = {Compilation into Actors},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {68--77},
  year = {1986},
  month = oct,
  number = {10}}

@unpublished{Jons93a,
  author = {Dirk Jonscher and Klaus R. Dittrich},
  title = {A Formal Security Model based on an Object-Oriented Data Model},
  year = {1993},
  month = aug,
  note = {University of Zurich},
  type = {draft manuscript}}

@book{Jons94a,
  title = {Proceedings {CONCUR}'94},
  volume = {836},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Uppsala, Sweden},
  editor = {Bengt Jonson and Joachim Parrow},
  isbn = {3-540-58329-7},
  month = aug,
  series = {LNCS}}

@inproceedings{Joor12a,
  author = {Joorabchi, Mona Erfani and Mesbah, Ali},
  title = {Reverse Engineering {iOS} Mobile Applications},
  booktitle = {2012 19th Working Conference on Reverse Engineering},
  pages = {177--186},
  publisher = {{IEEE}},
  year = {2012},
  url = {http://ieeexplore.ieee.org/document/6385113/},
  doi = {10.1109/{WCRE}.2012.27},
  date = {2012-10},
  isbn = {978-0-7695-4891-3 978-1-4673-4536-1},
  langid = {english},
  urldate = {2018-06-22}}

@techreport{Jord05a,
  author = {Niklaus Jordi and Frank Wettstein},
  title = {Die {Entwicklung} von {Psystatix}},
  year = {2005},
  url = {http://scg.unibe.ch/archive/projects/Jord05a.pdf},
  abstract = {Ziel dieses Dokumentes ist es eine Uebersicht ueber
die Arbeit waehrend der Vorlesung Praktikum in
Softwareengineering (PSE) und das anschliessende
Projekt zu vermitteln. Dieser Text richtet sich an
Informatikstudenten, welche noch kein groesseres
Projekt bearbeitet haben, und soll ihnen einen
Eindruck vermitteln, wie so etwas ablaufen kann, wo
gewisse Schwierigkeiten liegen koennen, und wie man
sie vermeiden kann.},
  institution = {University of Bern},
  type = {Informatikprojekt}}

@article{Jorg03a,
  author = {Bo N\o rregaard J\o rgensen},
  title = {Integration of Independently Developed Components through Aliased Multi-Object Type Widening},
  journal = {Journal of Object Technology},
  volume = {3},
  pages = {55--76},
  year = {2004},
  number = {11}}

@inproceedings{Joua06a,
  author = {Fr\'ed\'eric Jouault and Jean B\'ezivin},
  title = {{KM3}: a {DSL} for Metamodel Specification},
  booktitle = {IFIP Int. Conf. on Formal Methods for Open Object-Based Distributed Systems, LNCS 4037},
  pages = {171--185},
  publisher = {Springer},
  year = {2006},
  url = {http://www.lina.sciences.univ-nantes.fr/Publications/2006/JB06a}}

@inproceedings{Joua06b,
  author = {Jouault, Fr{\'e}d{\'e}ric and Kurtev, Ivan},
  title = {Transforming models with ATL},
  booktitle = {Satellite Events at the MoDELS 2005 Conference: MoDELS 2005 International Workshops Doctoral Symposium, Educators Symposium Montego Bay, Jamaica, October 2-7, 2005 Revised Selected Papers 8},
  pages = {128--138},
  year = {2006},
  organization = {Springer}}

@inproceedings{Joua10a,
  author = {Jouault, Fr{\'e}d{\'e}ric and Tisi, Massimo},
  title = {Towards incremental execution of ATL transformations},
  booktitle = {Theory and Practice of Model Transformations: Third International Conference, ICMT 2010, Malaga, Spain, June 28-July 2, 2010. Proceedings 3},
  pages = {123--137},
  year = {2010},
  organization = {Springer}}

@inproceedings{Jouv09a,
  author = {Jouve, Wilfried and Bruneau, Julien and Consel, Charles},
  title = {{DiaSim}: A Parameterized Simulator for Pervasive Computing Applications},
  booktitle = {PerCom'09: Proceedings of the 7th Conference on Pervasive Computing and Communications},
  publisher = {IEEE Computer Society Press},
  year = {2009},
  address = {Galveston, TX, USA},
  month = mar,
  note = {demo}}

@techreport{Jouv89a,
  author = {Pierre Jouvelot and David K. Gifford},
  title = {Communication Effects for Message-Based Concurrency},
  year = {1989},
  institution = {MIT},
  month = feb,
  type = {MIT/LCS/TM-386}}

@inproceedings{Jova20a,
  author = {Jovanovikj, Ivan and Yigitbas, Enes and Nagaraj, Achyuth and Anjorin, Anthony and Sauer, Stefan and Engels, Gregor},
  title = {Validating Test Case Migration via Mutation Analysis},
  booktitle = {Proceedings of the IEEE/ACM 1st International Conference on Automation of Software Test},
  pages = {31--40},
  year = {2020}}

@misc{Jreb12a,
  author = {ZeroTurnAround},
  title = {What developers want: The end of application Redeployes},
  year = {2012},
  howpublished = {\url{http://files.zeroturnaround.com/pdf/JRebelWhitePaper2012-1.pdf}}}

@misc{Jref,
  title = {{JR}efactory},
  key = {jRef},
  note = {http://jrefactory.sourceforge.net/}}

@inproceedings{Juck06a,
  author = {Susanne Jucknath-John and Dennis Graf},
  title = {Icon graphs: visualizing the evolution of large class models},
  booktitle = {SoftVis '06: Proceedings of the 2006 ACM symposium on Software visualization},
  pages = {167--168},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1148493.1148527},
  address = {New York, NY, USA},
  isbn = {1-59593-464-2},
  location = {Brighton, United Kingdom}}

@inproceedings{Judd03a,
  author = {Judd, Glenn and Steenkiste, Peter},
  title = {Providing Contextual Information to Pervasive Computing Applications},
  booktitle = {PerCom'03: Proceedings of the 1st International Conference on Pervasive Computing and Communications},
  pages = {133--142},
  publisher = {IEEE Computer Society},
  year = {2003},
  doi = {10.1109/PERCOM.2003.1192735}}

@inproceedings{Juels16a,
  author = {Juels, Ari and Kosba, Ahmed and Shi, Elaine},
  title = {The Ring of Gyges: Investigating the Future of Criminal Smart Contracts},
  booktitle = {2016 ACM SIGSAC Conference on Computer and Communications Security},
  pages = {283--295},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2976749.2978362},
  doi = {10.1145/2976749.2978362},
  acmid = {2978362},
  address = {New York, NY, USA},
  isbn = {978-1-4503-4139-4},
  keywords = {criminal smart contracts, ethereum},
  location = {Vienna, Austria},
  numpages = {13},
  series = {CCS '16}}

@article{Jul88a,
  author = {Eric Jul and et al.},
  title = {Fine Grained Mobility in the Emerald System},
  journal = {ACM TOCS},
  volume = {6},
  year = {1988},
  month = jul,
  number = {1}}

@phdthesis{Jul88b,
  author = {Eric Jul},
  title = {Object Mobility in a Distributd Object-Oriented System},
  year = {1988},
  school = {Department of Computer Science, University of Washington},
  address = {Seattle},
  month = dec,
  number = {TR 88-12-06},
  type = {{Ph.D}. Thesis}}

@inproceedings{Jul94a,
  author = {Eric Jul},
  title = {Separation of Distribution and Objects},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {47--54},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {Based on the experience with developing distributed
applications in Emerald, this paper argues that
distribution and objects are orthogonal concepts and
that they thus can be developed separately: The
object and process structure in many distributed
application can be developed independently of
distribution. We discuss this claim using the models
and paradigms of the Emerald system.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@inproceedings{Jump04,
  author = {Jump, Maria and Blackburn, Stephen M and McKinley, Kathryn S},
  title = {Dynamic object sampling for pretenuring},
  booktitle = {Proceedings of the 4th international symposium on Memory management},
  pages = {152--162},
  year = {2004}}

@article{Jump07a,
  author = {Jump, Maria and McKinley, Kathryn S.},
  title = {Cork: Dynamic Memory Leak Detection for Garbage-Collected Languages},
  journal = {SIGPLAN Not.},
  volume = {42},
  pages = {31--38},
  publisher = {Association for Computing Machinery},
  year = {2007},
  url = {https://doi.org/10.1145/1190215.1190224},
  doi = {10.1145/1190215.1190224},
  abstract = {A memory leak in a garbage-collected program occurs when the program inadvertently maintains references to objects that it no longer needs. Memory leaks cause systematic heap growth, degrading performance and resulting in program crashes after perhaps days or weeks of execution. Prior approaches for detecting memory leaks rely on heap differencing or detailed object statistics which store state proportional to the number of objects in the heap. These overheads preclude their use on the same processor for deployed long-running applications.This paper introduces a dynamic heap-summarization technique based on type that accurately identifies leaks, is space efficient (adding less than 1% to the heap), and is time efficient (adding 2.3% on average to total execution time). We implement this approach in Cork which utilizes dynamic type information and garbage collection to summarize the live objects in a type points-from graph (TPFG) whose nodes (types) and edges (references between types) are annotated with volume. Cork compares TPFGs across multiple collections, identifies growing data structures, and computes a type slice for the user. Cork is accurate: it identifies systematic heap growth with no false positives in 4 of 15 benchmarks we tested. Cork's slice report enabled us (non-experts) to quickly eliminate growing data structures in SPECjbb2000 and Elipse, something their developers had not previously done. Cork is accurate, scalable, and efficient enough to consider using online.},
  address = {New York, NY, USA},
  issn = {0362-1340},
  keywords = {memory leaks, dynamic, runtime analysis, garbage collection, memory leak detection},
  month = jan,
  number = {1},
  numpages = {8}}

@book{June10a,
  author = {Josh Juneau and Jim Baker and Frank Wierzbicki and Leo Soto and Victor Ng},
  title = {The Definitive Guide to Jython: Python for the Java Platform},
  publisher = {Apress},
  year = {2010}}

@phdthesis{June90a,
  author = {Marc Junet},
  title = {S\'emantique des Bases de Don\'ees: Un Mod\`ele et une R\'ealisation},
  year = {1990},
  school = {University of Geneva},
  type = {{Ph.D}. Thesis}}

@article{Jung04a,
  author = {Ho-Won Jung and Seung-Gweon Kim and Chang-Shin Chung},
  title = {Measuring Software Product Quality: A Survey of ISO/IEC 9126},
  journal = {IEEE Softw.},
  volume = {21},
  pages = {88--92},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  doi = {10.1109/MS.2004.1331309},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  number = {5}}

@techreport{Jung91a,
  author = {Ralf Jungclaus and Gunter Saake and Thorsten Hartmann and Cristina Sernadas},
  title = {Object-Oriented Specification of Information Systems: The {TROLL} Language},
  year = {1991},
  institution = {Technical University of Braunschweig},
  month = dec,
  number = {91-04},
  type = {Version 0.01, Report}}

@inproceedings{Jung93a,
  author = {R. Jungclaus and T. Hartmann and G. Saake},
  title = {Relationships between Dynamic Object},
  booktitle = {Proceedings of the second European-Japanese Seminar, Information Modelling and Knowledge Bases IV: Concepts, Methods and Systems},
  pages = {425--438},
  publisher = {IOS Press},
  year = {1993},
  address = {Amsterdam}}

@article{Jung96a,
  author = {R. Jungclaus and G. Saake and T. Hartmann and C. Sernadas},
  title = {Troll --- A langguae for Object-Oriented Specification of Information Systems},
  journal = {ACM transactions on Inofrmation Systems},
  volume = {14},
  pages = {175--211},
  year = {1996},
  month = apr,
  number = {2}}

@article{Juni00a,
  author = {Thomas Junier and Marco Pagni},
  title = {Dotlet: Diagonal Plots in a Web Browser},
  journal = {Bioinformatics},
  volume = {16},
  pages = {178--179},
  publisher = {Oxford University Press},
  year = {2000},
  number = {2}}

@techreport{Junk07a,
  author = {Matthias Junker and Markus Hofstetter},
  title = {Scripting Diagrams with EyeSee},
  year = {2007},
  url = {http://scg.unibe.ch/archive/projects/Junk07aJunkerHofstetterEyeSee.pdf},
  abstract = {Presenting numbers in the right way is crucial for
understanding their meaning. However, many existing
diagram drawing tools do not make understanding the
numbers as easy as it could be. They often insert
too many visual distractions or require a fixed
input format. EyeSee is a model-independent diagram
drawing engine that allows for programmatic
specification of the presentation, while offering
default values that produce uncluttered diagrams. As
a validation, we demonstrate the simplicity to
create well-known diagrams.},
  institution = {University of Bern},
  month = may,
  type = {Bachelor's thesis}}

@mastersthesis{Junk09a,
  author = {Matthias Junker},
  title = {Kumpel: Visual Exploration of File Histories},
  year = {2009},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Junk09a.pdf},
  abstract = {Historical data can serve as a rich source of
information for answering questions about coupling
between components, software structure or developer
contribution. The main goal of previous research was
mainly to gain a high-level view of an entire
system, to ease the task of examination and
analysis. Many approaches exist which help detect
exceptional entities or to understand how developers
work on files. But only little attention has been
dedicated to the low-level analysis of software
systems. We address this issue with an interactive
visualization called Kumpel which consists of a
history flow diagram and several integrated
lightweight approaches. Furthermore we define
patterns which can be used to describe the structure
of a history and how developers work.},
  month = jan,
  type = {Master's Thesis}}

@techreport{Juno93a,
  author = {Betty Junod and Xavier Pintado and Fr\'ed\'eric Pot},
  title = {Building an Object-Oriented Financial Framework},
  pages = {89--109},
  year = {1993},
  abstract = {This paper discusses the modeling of a set of
important classes for the financial domain. Grounded
on the Portfolio and TimeSeries classes, we
developed a portfolio analysis and visualization
tool with the goal of exploring constrained global
optimization algorithms for portfolios assets
allocation and of providing a comparative visual
perspective for portfolio management.Our effort is
motivated by the need to create an open framework
for financial software components which can be
easily integrated and incrementally modified.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Visual Objects}}

@book{Jura09a,
  author = {Jurafsky, Daniel and Martin, James H.},
  title = {Speech and Language Processing (2Nd Edition)},
  publisher = {Prentice-Hall, Inc.},
  year = {2009},
  isbn = {0131873210}}

@inproceedings{Jurg04a,
  author = {J\"{u}rgen Bortolazzi},
  title = {Challenges in Automotive Software Engineering},
  booktitle = {Proceedings of the 2nd Software Engineering for Automotive Systems Workshop (ICSE'04)},
  year = {2004},
  note = {Invited talk}}

@article{Juri00a,
  author = {Juric, Matjaz B and Rozman, Ivan and Hericko, Marjan and Domajnko, Tomaz},
  title = {Integrating legacy systems in distributed object architecture},
  journal = {ACM SIGSOFT Software Engineering Notes},
  volume = {25},
  pages = {35--39},
  publisher = {ACM},
  year = {2000},
  number = {2}}

@inproceedings{Just14a,
  author = {Just, Ren{\'e} and Jalali, Darioush and Inozemtseva, Laura and Ernst, Michael D and Holmes, Reid and Fraser, Gordon},
  title = {Are mutants a valid substitute for real faults in software testing?},
  booktitle = {Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {654--665},
  year = {2014}}

@unpublished{Just94a,
  author = {Timothy P. Justice and Rajeev K. Pandey and Timothy A. Budd},
  title = {A Multiparadigm Approach to Compiler Construction},
  year = {1994},
  note = {Oregon State University},
  type = {Draft}}

@misc{JvNeu45,
  author = {John von Neumann},
  title = {First Draft of a Report on the EDVAC},
  year = {1945},
  howpublished = {IEEE CS Press Book, "The anatomy of a Microprocessor"}}

@misc{Jython,
  title = {Jython},
  key = {jython},
  note = {http://www.jython.org/}}

@misc{KDM11a,
  author = {OMG},
  title = {Knowledge Discovery Meta-Model (KDM)},
  year = {2011}}

@inproceedings{Kaba08a,
  author = {Kabanov, Jevgeni and Raudj\"{a}rv, Rein},
  title = {{Embedded typesafe domain specific languages for Java}},
  booktitle = {PPPJ'08: Proceedings of the 6th International Symposium on Principles and Practice of Programming in Java},
  pages = {189--197},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1411732.1411758},
  address = {New York, NY, USA},
  location = {Modena, Italy}}

@article{Kaeh86a,
  author = {Ted Kaehler},
  title = {Virtual Memory on a Narrow Machine for an Object-Oriented Language},
  journal = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {87--106},
  publisher = {ACM Press},
  year = {1986},
  doi = {10.1145/28697.28707},
  address = {New York, NY, USA},
  editor = {N. Meyrowitz},
  isbn = {0-89791-204-7},
  issn = {0362-1340},
  location = {Portland, Oregon, United States},
  month = nov,
  number = {11},
  organization = {ACM},
  series = {ACM SIGPLAN Notices 21(11)}}

@inproceedings{Kafu89a,
  author = {Dennis G. Kafura and Keung Hae Lee},
  title = {Inheritance in Actor Based Concurrent Object-Oriented Languages},
  booktitle = {Proceedings ECOOP '89},
  pages = {131--145},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Kafu90a,
  author = {Dennis Kafura and Douglas Washabaugh and Jeff Nelson},
  title = {Garbage Collection of Actors},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {126--134},
  year = {1990},
  month = oct}

@inproceedings{Kafu91a,
  author = {Dennis G. Kafura and Greg Lavender},
  title = {Recent Progress in Combining Actor-Based Concurrency with Object-Oriented Programming},
  booktitle = {ACM OOPS Messenger, Proceedings OOPSLA/ECOOP 90 Workshop on Object-Based Concurrent Systems},
  volume = {2},
  pages = {55--58},
  year = {1991},
  month = apr}

@book{Kafu98a,
  author = {Dennis Kafura},
  title = {Object Oriented Software Design and Construction with {C}++},
  publisher = {Prentice-Hall},
  year = {1998},
  isbn = {0-13-901349-0}}

@inproceedings{Kagd06,
  author = {Huzefa Kagdi and Jonathan I. Maletic},
  title = {Software-Change Prediction: Estimated+Actual},
  booktitle = {SOFTWARE-EVOLVABILITY '06 Proceedings of the Second International IEEE Workshop on Software Evolvability},
  pages = {38-43},
  year = {2006},
  abstract = {The thesis proposes a software-change prediction approach that is based on mining fine-grained evolutionary couplings from source code repositories. Here, fine-grain refers to identifying couplings between source code entities such as methods, control structures, or even comments. This differs from current source code mining techniques that typically only identify couplings between files or fairly high-level entities. Furthermore, the model combines the mined evolutionary couplings with the estimated changes identified by traditional impact analysis techniques (e.g., static analysis of call and program-dependency graphs). The research hypothesis is that software-change prediction using the proposed synergistic approach results in an overall improved expressiveness (i.e., granularity and context given to a developer) and effectiveness (i.e., accuracy of the prediction).},
  annote = {inproceedings},
  date-added = {2014-09-18 09:11:23 +0000},
  date-modified = {2015-03-18 09:13:36 +0000}}

@inproceedings{Kagd07a,
  author = {Huzefa Kagdi and Jonathan I. Maletic},
  title = {Combining Single-Version and Evolutionary Dependencies for Software-Change Prediction},
  booktitle = {Fourth International Workshop on Mining Software Repositories},
  year = {2007},
  abstract = {The paper advocates the need for the investigation and development of a software-change prediction methodology that combines the change sets estimated from software dependency analysis (via single-version analysis) and the actual change sets found in software version histories (via multiple-version analysis). Traditionally prescribed methodologies such as Impact Analysis (IA) are based on the former, whereas a more recent methodology, Mining Software Repository (MSR), is based on the latter. The research hypothesis is that combining these two methodologies will result in an overall improved support for software-change prediction.},
  date-added = {2014-09-08 11:53:34 +0000},
  date-modified = {2014-09-08 11:55:51 +0000}}

@inproceedings{Kagd07b,
  author = {Huzefa Kagdi},
  title = {Improving Change Prediction with Fine-Grained Source Code Mining},
  booktitle = {ASE '07 - Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering},
  pages = {559-562},
  year = {2007},
  abstract = {The thesis proposes a software-change prediction approach that is based on mining fine-grained evolutionary couplings from source code repositories. Here, fine-grain refers to identifying couplings between source code entities such as methods, control structures, or even comments. This differs from current source code mining techniques that typically only identify couplings between files or fairly high-level entities. Furthermore, the model combines the mined evolutionary couplings with the estimated changes identified by traditional impact analysis techniques (e.g., static analysis of call and program-dependency graphs). The research hypothesis is that software-change prediction using the proposed synergistic approach results in an overall improved expressiveness (i.e., granularity and context given to a developer) and effectiveness (i.e., accuracy of the prediction).},
  annote = {inproceedings},
  date-added = {2014-09-18 09:11:23 +0000},
  date-modified = {2014-09-18 09:13:36 +0000}}

@inproceedings{Kagd10a,
  author = {Huzefa Kagdi and Malcom Gethers and Denys Poshyvanyk and Michael L. Collard},
  title = {Blending Conceptual and Evolutionary Couplings to Support Change Impact Analysis in Source Code},
  booktitle = {17th Working Conference on Reverse Engineering},
  pages = {119-128},
  year = {2010},
  abstract = {The paper presents an approach that combines conceptual and evolutionary techniques to support change impact analysis in source code. Information Retrieval (IR) is used to derive conceptual couplings from the source code in a single version (release) of a software system. Evolutionary couplings are mined from source code commits. The premise is that such combined methods provide improvements to the accuracy of impact sets. A rigorous empirical assessment on the changes of the open source systems Apache httpd, ArgoUML, iBatis, and KOffice is also reported. The results show that a combination of these two techniques, across several cut points, provides statistically significant improvements in accuracy over either of the two techniques used independently. Improvements in recall values of up to 20% over the conceptual technique in KOffice and up to 45% over the evolutionary technique in iBatis were reported.},
  annote = {inproceedings},
  date-added = {2014-09-18 09:21:45 +0000},
  date-modified = {2014-09-18 09:23:44 +0000}}

@inproceedings{Kahn86a,
  author = {Ken Kahn and Eric Dean Tribble and Mark S. Miller and Daniel G. Bobrow},
  title = {Objects in Concurrent Logic Programming Languages},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {242--257},
  year = {1986},
  month = nov}

@techreport{Kahn87a,
  author = {Gilles Kahn},
  title = {Natural Semantics},
  year = {1987},
  institution = {INRIA},
  month = feb,
  number = {601},
  type = {Report no.}}

@inproceedings{Kahn89a,
  author = {K.M. Kahn},
  title = {Objects --- {A} Fresh Look},
  booktitle = {Proceedings ECOOP '89},
  pages = {207--223},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Kahn90a,
  author = {Kenneth M. Kahn and Vijay A. Saraswat},
  title = {Actors as a Special Case of Concurrent Constraint Programming},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {57--65},
  year = {1990},
  month = oct}

@inproceedings{Kais87a,
  author = {Gail E. Kaiser and David Garlan},
  title = {MELDing Data Flow and Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {254--267},
  year = {1987},
  month = dec}

@inproceedings{Kais88a,
  author = {Gail E. Kaiser and Simon M. Kaplan},
  title = {R{API}d Prototyping of Concurrent Programming Languages},
  booktitle = {Proceedings 8th International Conference on Distributed Computing Systems},
  pages = {250--255},
  publisher = {IEEE Computer Society},
  year = {1988},
  misc = {June 13-17},
  address = {San Jose, CA},
  month = jun}

@inproceedings{Kais89a,
  author = {Gail E. Kaiser and Stephen S. Popovich and Wenwey Hseush and Shyhtsun Felix Wu},
  title = {MELDing Multiple Granularities of Parallelism},
  booktitle = {Proceedings ECOOP '89},
  pages = {147--166},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@techreport{Kais92a,
  author = {Gail E. Kaiser and Brent Hailpern},
  title = {An Object-Based Programming Model for Shared Data},
  year = {1992},
  institution = {IBM Research Division},
  note = {ACM TOPLAS Vol 14, No 2, April 92 201-265},
  type = {Research Report}}

@inproceedings{Kale93a,
  author = {Laxmikant V. Kale and Sanjeev Krishnan},
  title = {{CHARM}++: {A} Portable Concurrent Object Oriented System Based On {C}++},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {91--108},
  year = {1993},
  month = oct}

@inproceedings{Kali13a,
  author = {Kalibera, Tomas and Jones, Richard},
  title = {Rigorous Benchmarking in Reasonable Time},
  booktitle = {Proceedings of the 2013 International Symposium on Memory Management},
  pages = {63-74},
  publisher = {Association for Computing Machinery},
  year = {2013},
  url = {https://doi.org/10.1145/2491894.2464160},
  doi = {10.1145/2491894.2464160},
  abstract = {Experimental evaluation is key to systems research. Because modern systems are complex and non-deterministic, good experimental methodology demands that researchers account for uncertainty. To obtain valid results, they are expected to run many iterations of benchmarks, invoke virtual machines (VMs) several times, or even rebuild VM or benchmark binaries more than once. All this repetition costs time to complete experiments. Currently, many evaluations give up on sufficient repetition or rigorous statistical methods, or even run benchmarks only in training sizes. The results reported often lack proper variation estimates and, when a small difference between two systems is reported, some are simply unreliable.In contrast, we provide a statistically rigorous methodology for repetition and summarising results that makes efficient use of experimentation time. Time efficiency comes from two key observations. First, a given benchmark on a given platform is typically prone to much less non-determinism than the common worst-case of published corner-case studies. Second, repetition is most needed where most uncertainty arises (whether between builds, between executions or between iterations). We capture experimentation cost with a novel mathematical model, which we use to identify the number of repetitions at each level of an experiment necessary and sufficient to obtain a given level of precision.We present our methodology as a cookbook that guides researchers on the number of repetitions they should run to obtain reliable results. We also show how to present results with an effect size confidence interval. As an example, we show how to use our methodology to conduct throughput experiments with the DaCapo and SPEC CPU benchmarks on three recent platforms.},
  address = {New York, NY, USA},
  isbn = {9781450321006},
  keywords = {statistical methods, dacapo, spec cpu, benchmarking methodology},
  location = {Seattle, Washington, USA},
  numpages = {12},
  series = {ISMM '13}}

@inproceedings{Kall14a,
  author = {Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M. and Damian, Daniela},
  title = {The Promises and Perils of Mining GitHub},
  booktitle = {Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages = {92--101},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2597073.2597074},
  doi = {10.1145/2597073.2597074},
  acmid = {2597074},
  address = {New York, NY, USA},
  isbn = {978-1-4503-2863-0},
  keywords = {Mining software repositories, bias, code reviews, git, github},
  location = {Hyderabad, India},
  numpages = {10},
  series = {MSR 2014}}

@article{Kalo17a,
  author = {Kalodner, H. and Goldfeder, S. and Chator, A. and M{\"o}ser, M. and Narayanan, A.},
  title = {BlockSci: Design and applications of a blockchain analysis platform},
  journal = {ArXiv e-prints},
  year = {2017},
  eprint = {1709.02489},
  keywords = {Computer Science - Cryptography and Security, Computer Science - Databases},
  month = {sep},
  primaryclass = {cs.CR}}

@article{Kamb10a,
  author = {Kambalyal, Channu},
  title = {3-tier architecture},
  journal = {Retrieved On},
  volume = {2},
  pages = {2010},
  year = {2010},
  number = {34}}

@inproceedings{Kami01a,
  author = {Toshihiro Kamiya and Fumiaki Ohata and Kazuhiro Kondou and Shinji Kusumoto and Katuro Inoue},
  title = {Maintenance support tools for {Java} programs: CCFinder and JAAT},
  booktitle = {Proceedings 23rd Int'l Conf. on Software Eng. (ICSE'2001)},
  pages = {837--838},
  year = {2001},
  address = {Toronto, Canada},
  month = may}

@article{Kami02a,
  author = {Toshihiro Kamiya and Shinji Kusumoto and Katsuro Inoue},
  title = {{CCF}inder: A Multi-Linguistic Token-Based Code Clone Detection System for Large Scale Source Code},
  journal = {IEEE Transactions on Software Engineering},
  volume = {28},
  pages = {654--670},
  year = {2002},
  number = {6}}

@inproceedings{Kami09a,
  author = {Kamiya, T.},
  title = {Programmable queries, or a new design of earch tools},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {25--28},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070016},
  doi = {10.1109/SUITE.2009.5070016},
  abstract = {This paper presents a novel design of search tools
in reverse engineering, which enables describing
core searching tasks (such as pattern searching,
extraction, filtering, etc.) in a separated way from
the management task of location data (such as line
number or file name). By using example programs with
a prototype implementation, we explain how the
proposed design differs from a traditional design,
and how the programs help the implementation of
customizable tools.}}

@book{Kami90a,
  author = {Samuel N. Kamin},
  title = {Programming Languages: An Interpreter-Based Approach},
  publisher = {Addison Wesley},
  year = {1990},
  isbn = {0-201-06824-9}}

@inproceedings{Kami97a,
  author = {Samuel N. Kamin and David Hyatt},
  title = {A Special-Purpose Language for Picture-Drawing},
  booktitle = {Proceedings of the Conference on Domain-Specific Languages},
  pages = {297--310},
  publisher = {USENIX},
  year = {1997},
  address = {Berkeley, CA, USA},
  month = oct}

@techreport{Kamp18a,
  author = {Kampmann, Alexander and Zeller, Andreas},
  title = {Carving Parameterized Unit Tests},
  year = {2018},
  institution = {CISPA, Saarland University}}

@techreport{Kamp19a,
  author = {Kampmann, Alexander and Zeller, Andreas},
  title = {Bridging the Gap between Unit Test Generation and System Test Generation},
  year = {2019},
  institution = {CISPA, Saarland University}}

@book{Kan02a,
  author = {Stephen H. Kan},
  title = {Metrics and Models in Software Quality Engineering},
  publisher = {Addison Wesley},
  year = {2002},
  isbn = {0-201-72915-6}}

@book{Kan03a,
  author = {Kan, Stephen H.},
  title = {Metrics and models in software quality engineering},
  publisher = {O'Reilly},
  year = {2006}}

@inproceedings{Kand14a,
  author = {Kandil, P. and Moussa, S. and Badr, N.},
  title = {Regression Testing Approach for Large-Scale Systems},
  booktitle = {Software Reliability Engineering Workshops (ISSREW), 2014 IEEE International Symposium on},
  pages = {132-133},
  year = {2014},
  doi = {10.1109/ISSREW.2014.96},
  keywords = {data mining;large-scale systems;program testing;coverage criteria;data mining techniques;fault history;group test cases;large-scale systems;regression testing approach;regression testing problem;regression testing scalability;validated code;Conferences;Data mining;History;Large-scale systems;Software;Software testing;Data Mining;Large Scale System;Regression Testing;Test Cases Prioritization;Test Cases Selection},
  month = {nov}}

@article{Kane03a,
  author = {Kaner, Cem},
  title = {What {IS} a {Good} {Test} {Case}?},
  journal = {Software Testing Analysis \& Review Conference {STAR'03}},
  year = {2003},
  abstract = {Designing good test cases is a complex art. The complexity comes from three sources: Test cases help us discover information. Different types of tests are more effective for different classes of information. Test cases can be "good" in a variety of ways. No test case will be good in all of them. People tend to create test cases according to certain testing styles, such as domain testing or risk-based testing. Good domain tests are different from good risk-based tests.},
  month = may,
  urldate = {2021-09-02}}

@book{Kane97a,
  author = {Jonni Kanerva},
  title = {The {Java} {FAQ}},
  publisher = {Addison Wesley},
  year = {1997},
  isbn = {0-201-63456-2}}

@article{Kang02a,
  author = {K.C. Kang and Jaejoon Lee and Patrick Donohoe},
  title = {Feature-Oriented Product Line Engineering},
  journal = {IEEE Software},
  year = {2002}}

@techreport{Kang90a,
  author = {Kyo C.Kang, Sholom G. Cohen and James A. Hess and William E. Novak and A. Spencer Peterson},
  title = {Feature Oriented Design Analysis (FODA) Feasibility Study},
  year = {1990},
  institution = {iSoftware Engineering Institute, Carnegie Mellon University, Pittsburgh, PA},
  number = {CMU/SEI-90-TR-21-ESD-90/TR-222}}

@book{Kanj99a,
  author = {Gopal K. Kanji},
  title = {100 Statistical Tests},
  pages = {110},
  publisher = {SAGE Publications},
  year = {1999}}

@incollection{Kapl05a,
  author = {Kaplan, Bonnie and Maxwell, Joseph A},
  title = {Qualitative research methods for evaluating computer information systems},
  booktitle = {Evaluating the organizational impact of healthcare information systems},
  pages = {30--55},
  publisher = {Springer},
  year = {2005}}

@incollection{Kapl93a,
  author = {Alan Kaplan and Jack C. Wileden},
  title = {Name Management and Object Technology for Advanced Software (Invited Paper)},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {371--392},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Name management is so fundamental to every aspect of
computing that it is frequently overlooked or taken
for granted. Our research is aimed at developing
both \fImodels\fR to improve understanding and
\fImechanisms\fR to improve practical application of
name management approaches in various computing
domains. one domain that seems to have particularly
strong connections to name management is object
technology for advanced software. Object technology
has already proven very useful in our investigation
of name management models and mechanisms. We also
see great potential for beneficial application of
improved name management mechanisms to object
technology for advanced software. In this paper, we
first outline our overall approach to research on
name management and discuss some specific name
management concerns arising in object technology for
advanced software. We then illustrate the
application of object technology in our efforts to
construct name management models and mechanisms.
Finally we give an example of how enhanced name
management mechanisms might be incorporated into a
representative instance of object technology for
advanced software.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Kapla19a,
  author = {Sebastijan Kaplar andMiroslav Zari\'c andGordana Milosavljevi\'c},
  title = {NewWave Workflow Engine},
  booktitle = {International Workshop on Smalltalk Technologies Cologne},
  year = {2019}}

@inproceedings{Kapp88a,
  author = {Gerti Kappel and Michael Schrefl},
  title = {A Behaviour Integrated Entity Relationship Approach for the Design of Object-Oriented Databases},
  booktitle = {Proceedings 7th International Conference on Entity Relationship Approach},
  pages = {175--192},
  year = {1988},
  address = {Rome},
  month = nov}

@article{Kapp89a,
  author = {Gerti Kappel and Oscar Nierstrasz},
  title = {Prototyping in einer objektorientierten Entwicklungsumgebung},
  journal = {Handbuch der Modernen Datenverarbeitung},
  volume = {145},
  pages = {116--125},
  publisher = {Forkel-Verlag},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Kapp89aPrototyping.pdf},
  abstract = {Prototyping von Software ist eine Entwurfstechnik,
die durch einen zyklischen Entwurfsproze{\ss} und
durch die rasche Entwicklung von operationalen
Systemen "bessere" Software, im Sinn von
zuverl\"assiger und den Anforderungen entsprechend,
erzeugen hilft. Objektorientierte Programmierung ist
eine Programmiertechnik, die durch die
Wiederverwendung bereits existierender
Softwareobjekte ausgezeichnet ist. Die wichtigsten
Mechanismen in objektorientierten Sprachen zur
Wiederverwendung sind die (mehrfache) Vererbung und
die Instantiierung von Objektklassen. Dabei zeigt
sich, da{\ss} die objektorientierte Programmierung
nicht nur verschiedene in der Literatur bekannte
Prototypingans\"atze unterst\"utzt, sondern auch
da{\ss} Prototyping ein inh\"arentes Konzept im
objektorientierten Software Lifecycle darstellt.
Welche Werkzeuge und Entwicklungsumgebungen
ben\"otigt werden, um einen objektorientierten
Prototypingansatz Realit \"at werden zu lassen, wird
diskutiert.},
  month = jan}

@article{Kapp89b,
  author = {Gerti Kappel and Jan Vitek and Oscar Nierstrasz and Betty Junod and Marc Stadelmann},
  title = {Scripting Applications in the Public Administration Domain},
  journal = {SIGOIS Bulletin},
  volume = {10},
  pages = {21--32},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Kapp89bScripting.pdf},
  doi = {10.1145/77250.77253},
  abstract = {Scripting is an approach for constructing open
applications from prepackaged software components. A
scripting model characterizes and standardizes the
interconnection interfaces of software components
appropriate to an application domain. We present a
scripting model for the domain of public
administration applications, and we provide a
scenario of scripting applications in this domain.
This scripting model is being incorporated into a
prototype visual scripting tool which provides a
graphical editing facility for interactively
scripting applications.},
  month = dec,
  number = {4}}

@techreport{Kapp89c,
  author = {Gerti Kappel and Jan Vitek and Oscar Nierstrasz and Simon Gibbs and Betty Junod and Marc Stadelmann and Dennis Tsichritzis},
  title = {An Object-Based Visual Scripting Environment},
  pages = {123--142},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Kapp89cVisualScripting.pdf},
  abstract = {Scripting is a programming technique in which
applications are constructed by composing specially
designed, pre-packaged software components using a
restricted set of scripting operators. Scripting
simplifies programming by cutting down the number of
the syntactic and semantic features found in a
complete programming language, yet is inherently
open-ended in that software components can be
provided by a separate target language. We explore
scripting models in which the basic components are
written in an object-oriented target language. We
introduce a visual scripting tool as a script
development environment. Visual scripts present
components and links graphically, and a visual
scripting tool supports the construction of scripts
through the interactive editing of scripts'
graphical counterparts.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@inproceedings{Kapp94a,
  author = {G. Kappel and S. Rausch-Schott and Retschitzegger},
  title = {Beyond Coupling Modes: Implementing Active Concepts on Top of a Commercial {OODBMS}},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {189--204},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@techreport{Kaps02a,
  author = {Cory Kapser and Jack Chi and Maher Shinouda},
  title = {A Project On Real World Cloning: Cloning in Linux File Systems},
  year = {2002},
  url = {http://plg.uwaterloo.ca/~migod/846/project/KapserChiShinouda-report.pdf},
  address = {Ontario, Canada},
  institution = {School of Computer Science, University of Waterloo},
  month = nov,
  type = {Class Project}}

@inproceedings{Kaps03a,
  author = {Cory Kapser and Michael W. Godfrey},
  title = {Toward a Taxonomy of Clones in Source Code: A Case Study},
  booktitle = {Proceedings of the First International Workshop on Evolution of Large-scale Industrial Software Applications (ELISA)},
  publisher = {IEEE},
  year = {2003},
  institution = {School of Computer Science, University of Waterloo},
  month = sep}

@inproceedings{Kaps04a,
  author = {Cory Kapser and Michael W. Godfrey},
  title = {Aiding Comprehension of Cloning Through Categorization},
  booktitle = {Proceedings of 2004 International Workshop on Software Evolution (IWPSE-04)},
  year = {2004},
  url = {http://plg.uwaterloo.ca/~migod/papers/},
  address = {Kyoto, Japan},
  month = sep}

@article{Kaps06a,
  author = {Kapser, Cory and Godfrey, Michael W.},
  title = {"Cloning Considered Harmful" Considered Harmful},
  journal = {{WCRE} '06},
  booktitle = {{WCRE} '06: Proceedings of the 13th Working Conference on Reverse Engineering},
  volume = {0},
  pages = {19--28},
  publisher = {IEEE Computer Society},
  year = {2006},
  url = {http://dx.doi.org/10.1109/{WCRE}.2006.1},
  doi = {10.1109/{WCRE}.2006.1},
  address = {Los Alamitos, CA, USA}}

@article{Kapu10a,
author = {Kapur, Puneet and Cossette, Brad and Walker, Robert J.},
title = {Refactoring References for Library Migration},
year = {2010},
issue_date = {October 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/1932682.1869518},
doi = {10.1145/1932682.1869518},
abstract = {Automated refactoring is a key feature of modern IDEs. Existing refactorings rely on the transformation of source code declarations, in which references may also be transformed as a side effect. However, there exist situations in which a declaration is not available for refactoring or would be inappropriate to transform, for example, in the presence of dangling references or where a set of references should be retargeted to a different declaration.We investigate the problem of dangling references through a detailed study of three open source libraries. We find that the introduction of dangling references during library migration is a significant real problem, and characterize the specific issues that arise. Based on these findings we provide and test a prototype tool, called Trident, that allows programmers to refactor references. Our results suggest that supporting the direct refactoring of references is a significant improvement over the state-of-the-art.},
journal = {SIGPLAN Not.},
month = oct,
pages = {726-738},
numpages = {13},
keywords = {refactoring, dangling references, trident, flexible search, library migration, flexible transformation}
}

@inproceedings{Kara01a,
  author = {Karahasanovic, Amela and Sjoberg, Dag IK},
  title = {Visualizing impacts of database schema changes-a controlled experiment},
  booktitle = {Human-Centric Computing Languages and Environments, 2001. Proceedings IEEE Symposia on},
  pages = {358--365},
  publisher = {IEEE},
  year = {2001}}

@inproceedings{Kara14a,
  author = {Karaivanov, Svetoslav and Raychev, Veselin and Vechev, Martin},
  title = {Phrase-based statistical translation of programming languages},
  booktitle = {Proceedings of the 2014 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming \& Software},
  pages = {173--184},
  year = {2014},
  organization = {ACM}}

@article{Kara17a,
  author = {Karami, Ebrahim and Prasad, Siva and Shehata, Mohamed},
  title = {Image matching using SIFT, SURF, BRIEF and ORB: performance comparison for distorted images},
  journal = {arXiv preprint arXiv:1710.02726},
  year = {2017}}

@book{Karl95a,
  author = {Even-Andre Karlsson},
  title = {Software Reuse {A} Holistic Approach},
  publisher = {Jhon Willey Sons},
  year = {1995},
  isbn = {0-471-95819-0}}

@inproceedings{Karm09a,
  author = {Karmani, Rajesh K. and Shali, Amin and Agha, Gul},
  title = {Actor frameworks for the JVM platform: a comparative analysis},
  booktitle = {Proceedings of the 7th International Conference on Principles and Practice of Programming in Java},
  pages = {11--20},
  publisher = {ACM},
  year = {2009},
  url = {http://doi.acm.org/10.1145/1596655.1596658},
  doi = {doi.acm.org/10.1145/1596655.1596658},
  acmid = {1596658},
  address = {New York, NY, USA},
  isbn = {978-1-60558-598-7},
  keywords = {JVM, Java, abstractions, actors, comparison, frameworks, libraries, performance, semantics},
  location = {Calgary, Alberta, Canada},
  numpages = {10},
  series = {PPPJ '09}}

@article{Karo02a,
  author = {Karouach, Said and Dousset, Bernard},
  title = {Visualisation de relations par des graphes interactifs de grande taille},
  journal = {Journal of ISDM (Information Sciences for Decision Making)},
  volume = {6},
  pages = {12},
  year = {2003},
  month = mar,
  number = {57}}

@phdthesis{Karo03a,
  author = {Said Karouach},
  title = {Syst\`eme de visualisations interactives pour la d\'ecouverte de connaissances},
  year = {2003},
  school = {Universit\'e Paul Sabatier, Toulouse III},
  month = jul}

@inproceedings{Karo04a,
  author = {Said Karouach and Bernard Dousset},
  title = {Analyse d'information relationnelle par des graphes interactifs de grandes tailles},
  booktitle = {4iemes journ\'ees d'EGC (Extration et Gestion de Connaissances) , Clermont Ferrand, France, 20/01/04-23/01/04},
  publisher = {Hermes},
  year = {2004},
  month = jan}

@inproceedings{Karp07a,
  author = {Marcin Karpinski and Vinny Cahill},
  title = {High-Level Application Development is Realistic for Wireless Sensor Network},
  booktitle = {In Proceedings of Fourth Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc Communications and Networks SECON 2007},
  publisher = {IEEE},
  year = {2007},
  location = {San Diego, CA},
  month = jun}

@article{Karr92a,
  author = {C. Karreman},
  title = {A Dotplot Program for the {Atari} {ST}, for the Analysis of {DNA} and Protein Sequences},
  journal = {Comput. Appl. Biosci.},
  volume = {8},
  pages = {75--77},
  year = {1992}}

@inproceedings{Kars93a,
  author = {Alain Karsenty and Michel Beaudouin-Lafon},
  title = {An algorithm for distributed groupware Applications},
  booktitle = {Proceeding of ICDCS '93 Intyernational Conference on Distributed Computing Systems},
  year = {1993},
  editor = {IEEE},
  month = may}

@inproceedings{Kary95a,
  author = {George Karypis and Vipin Kumar},
  title = {Analysis of Multilevel Graph Partitioning},
  booktitle = {Proceedings of Supercomputing 1995 (ACM/IEEE Conference on Supercomputing)},
  publisher = {ACM},
  year = {1995},
  date-added = {2014-11-14 23:14:03 +0000},
  date-modified = {2014-11-14 23:14:03 +0000}}

@inproceedings{Kase07a,
  author = {Owen Kaser and Daniel Lemire},
  title = {Tag-Cloud Drawing: Algorithms for Cloud Visualization},
  booktitle = {Proceedings of the Tagging and Metadata for Social Information Organization Workshop},
  year = {2007}}

@book{Kast82a,
  author = {U. Kastens and B. Hutt and E. Zimmermann},
  title = {{GAG}: {A} Practical Compiler Generator},
  volume = {141},
  publisher = {Springer-Verlag},
  year = {1982},
  series = {LNCS}}

@article{Kasu10a,
  author = {Kasurinen, Jussi and Taipale, Ossi and Smolander, Kari},
  title = {Software test automation in practice: empirical observations},
  journal = {Advances in Software Engineering},
  volume = {2010},
  publisher = {Hindawi Publishing Corporation},
  year = {2010}}

@inproceedings{Kata01a,
  author = {Yoshio Kataoka and Michael D. Ernst and William G. Griswold and David Notkin},
  title = {Automated support for program refactoring using invariants},
  booktitle = {Proceedings of the International Conference on Software Maintenance, (Florence, Italy)},
  pages = {736--743},
  year = {2001},
  month = nov}

@inproceedings{Kata18a,
  author = {Kataoka, Takafumi and Ugawa, Tomoharu and Iwasaki, Hideya},
  title = {A Framework for Constructing Javascript Virtual Machines with Customized Datatype Representations},
  booktitle = {Proceedings of the 33rd Annual ACM Symposium on Applied Computing},
  pages = {1238-1247},
  publisher = {Association for Computing Machinery},
  year = {2018},
  url = {https://doi.org/10.1145/3167132.3167266},
  doi = {10.1145/3167132.3167266},
  abstract = {Using JavaScript as a description language can increase the productivity of application programs on embedded systems. Since JavaScript is a dynamic language, it is important for a JavaScript virtual machine (VM) to efficiently identify the types of first-class values and perform type-based dispatches while executing VM instructions. Even though the use of tagged pointers is a well-known technique for these operations, the VM implementer has to decide on suitable bit patterns in a tagged pointer according to the characteristics of the target program. This paper presents a novel framework that can generate a customized JavaScript VM on the basis of datatype specifications and operand specifications given by the programmer and instruction definitions supplied by the framework. Datatype specifications describe adequate internal representations of necessary datatypes for a target program and operand specifications do possible operand datatypes for all instructions, while instruction definitions describe the behaviors of all instructions. The generated VM is specialized in the sense that it has efficient and minimum type-based dispatching code for all instructions.},
  address = {New York, NY, USA},
  isbn = {9781450351911},
  keywords = {embedded systems, customization, type-based dispatching, javascript, virtual machine interpreter},
  location = {Pau, France},
  numpages = {10},
  series = {SAC '18}}

@inproceedings{Kats08a,
  author = {Lennart C. L. Kats and Martin Bravenboer and Eelco Visser},
  title = {Mixing Source and Bytecode. {A} Case for Compilation by Normalization},
  booktitle = {Proceedings of the 23rd ACM SIGPLAN Conference on Object-Oriented Programing, Systems, Languages, and Applications ({OOPSLA'}08)},
  pages = {91--108},
  publisher = {ACM},
  year = {2008},
  url = {http://swerl.tudelft.nl/twiki/pub/Main/TechnicalReports/TUD-SERG-2008-030.pdf},
  doi = {10.1145/1449764.1449772},
  address = {Nashville, Tenessee, USA},
  editor = {Gregor Kiczales},
  isbn = {978-1-60558-215-3},
  month = oct}

@mastersthesis{Kauf01a,
  author = {Christian Kaufmann},
  title = {Software Engineering im Spannungsfeld Theorie und Praxis},
  year = {2001},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Kauf01a.pdf},
  abstract = {Die wesentlichen Probleme bei der
Softwareentwicklung sind bekannt. Sie wurden in
zahlreichen Publikationen beschrieben. Ebenso
zahlreich sind die vorgeschlagenen Techniken,
Werkzeuge und Methoden zur Lsung dieser Probleme.
Trotzdem scheitern zahlreiche Softwareprojekte. In
dieser Arbeit wird nicht eine weitere Methode oder
Technik zur Softwareentwicklung definiert. Vielmehr
habe ich meine Erfahrungen in einer einfachen Liste
von Grunds{\"a}tzen zusammengefasst. Theorie und
Praxis ergnzen diese Grunds{\"a}tze und zeigen auch
ihre Grenzen auf.}}

@book{Kauf01b,
  author = {Michael Kaufmann and Dorothea Wagner},
  title = {Drawing Graphs},
  publisher = {Springer-Verlag},
  year = {2001},
  address = {Berlin Heidelberg},
  isbn = {3-540-42062}}

@book{Kauf90a,
  author = {L. Kaufman and P. J. Rousseeuw},
  title = {Finding Groups in Data: An Introduction to Cluster Analysis},
  publisher = {John Wiley \& Sons Inc.},
  year = {1990},
  address = {New York},
  series = {Wiley Series in Probability and Mathematical Statistics}}

@inproceedings{Kaul06a,
  author = {Dimple Kaul and Aniruddha Gokhale},
  title = {Middleware specialization using aspect oriented programming},
  booktitle = {ACM-SE 44: Proceedings of the 44th annual Southeast regional conference},
  pages = {319--324},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1185448.1185520},
  address = {New York, NY, USA},
  isbn = {1-59593-315-8},
  location = {Melbourne, Florida}}

@book{Kave06a,
  author = {Kaveh},
  title = {Optimal structural analysis},
  publisher = {Wiley},
  year = {2006}}

@unpublished{Kavy17a,
  author = {Kavya},
  title = {Inner workings of go channels},
  year = {2017},
  url = {https://speakerdeck.com/kavya719/understanding-channels},
  note = {Go doc github}}

@misc{Kawa,
  author = {Per Bothner},
  title = {{Kawa}, the {Java}-based {Scheme} system},
  note = {http://www.gnu.org/software/kawa/}}

@inproceedings{Kawa04a,
  author = {Shinji Kawaguchi and Pankaj K. Garg and Makoto Matsushita and Katsuro Inoue},
  title = {MUDABlue: An Automatic Categorization System for Open Source Repositories},
  booktitle = {Proceedings of the 11th Asia-Pacific Software Engineering Conference (APSEC 2004)},
  pages = {184--193},
  year = {2004}}

@inproceedings{Kawa07a,
  author = {Kawachiya, Kiyokuni and Ogata, Kazunori and Silva, Daniel and Onodera, Tamiya and Komatsu, Hideaki and Nakatani, Toshio},
  title = {Cloneable JVM: A New Approach to Start Isolated Java Applications Faster},
  booktitle = {International Conference on Virtual Execution Environments},
  pages = {1--11},
  publisher = {ACM},
  year = {2007},
  address = {New York, NY, USA},
  keywords = {cloning, isolation, java, startup overhead},
  numpages = {11},
  series = {VEE '07}}

@book{Kay00a,
  author = {Michael Kay},
  title = {XSLT, Programmer's Reference},
  publisher = {Wrox Press Ltd.},
  year = {2000}}

@book{Kay01a,
  author = {Michael Kay},
  title = {XSLT, Programmer's Reference},
  publisher = {Wrox Press Ltd.},
  year = {2001},
  edition = {2nd}}

@book{Kay72,
  author = {Adele Goldberg, Alan Kay},
  title = {Smalltalk-72 instruction manual},
  publisher = {Xerox Palo Alto Hesearch Center},
  year = {1976},
  address = {Palo Alto, California}}

@inproceedings{Kay72a,
  author = {Alan C. Kay},
  title = {A Personal Computer for Children of All Ages},
  booktitle = {Proceedings of the ACM National Conference},
  publisher = {ACM Press},
  year = {1972},
  url = {http://www.mprove.de/diplom/gui/kay72.html http://www.mprove.de/diplom/gui/Kay72a.pdf},
  month = aug}

@article{Kay77a,
  author = {Alan C. Kay},
  title = {Microelectronics and the Personal Computer},
  journal = {Scientific American},
  volume = {3},
  pages = {230--240},
  year = {1977},
  number = {237}}

@inproceedings{Kay93a,
  author = {Alan C. Kay},
  title = {The Early History of {Smalltalk}},
  booktitle = {ACM SIGPLAN Notices},
  volume = {28},
  pages = {69--95},
  publisher = {ACM Press},
  year = {1993},
  doi = {10.1145/155360.155364},
  month = mar}

@techreport{Kazm01a,
  author = {Rick Kazman and Liam O'Brien and Chris Verhoef},
  title = {Architecture Reconstruction Guidelines},
  year = {2001},
  url = {http://www.sei.cmu.edu/pub/documents/01.reports/pdf/01tr026.pdf},
  institution = {Carnegie Mellon University, Software Engineering Institute},
  month = aug,
  type = {{CMU/SEI-2001-TR-026}}}

@techreport{Kazm03a,
  author = {Rick Kazman and Liam O'Brien and Chris Verhoef},
  title = {Architecture Reconstruction Guidelines, Third Edition},
  year = {2003},
  url = {http://www.sei.cmu.edu/publications/documents/02.reports/02tr034.html http://www.sei.cmu.edu/pub/documents/02.reports/pdf/02tr034.pdf},
  institution = {Carnegie Mellon University, Software Engineering Institute},
  month = nov,
  type = {{CMU/SEI-2002-TR-034}}}

@techreport{Kazm05a,
  author = {Rick Kazman and Len Bass},
  title = {Categorizing Business Goals for Software Architectures},
  year = {2005},
  url = {http://www.sei.cmu.edu/publications/documents/05.reports/05tr021.html http://www.sei.cmu.edu/pub/documents/05.reports/pdf/05tr021.pdf},
  institution = {Carnegie Mellon University, Software Engineering Institute},
  month = dec,
  type = {CMU/SEI-2005-TR-021}}

@article{Kazm17,
  author = {Kazmi, Rafaqut and Jawawi, Dayang N. A. and Mohamad, Radziah and Ghani, Imran},
  title = {Effective Regression Test Case Selection: A Systematic Literature Review},
  journal = {ACM Computing Surveys},
  volume = {50},
  pages = {29:1--29:32},
  publisher = {ACM},
  year = {2017},
  doi = {10.1145/3057269},
  address = {New York, NY, USA},
  articleno = {29},
  issn = {0360-0300},
  month = may,
  number = {2},
  numpages = {32}}

@inproceedings{Kazm94a,
  author = {Rick Kazman and Leonard J. Bass and Mike Webb and Gregory D. Abowd},
  title = {{SAAM}: A Method for Analyzing the Properties of Software Architectures},
  booktitle = {International Conference on Software Engineering ({ICSE})},
  pages = {81--90},
  year = {1994}}

@techreport{Kazm95a,
  author = {Rick Kazman and Marcus Burth},
  title = {Assessing Architectural Complexity},
  year = {1995},
  institution = {University of Waterloo}}

@article{Kazm96a,
  author = {Rick Kazman and Gregory Abowd and Len Bass and Paul Clements},
  title = {Scenario-Based Analysis of Software Architecture},
  journal = {IEEE Software},
  volume = {13},
  pages = {47--55},
  year = {1996},
  month = nov,
  number = {6}}

@misc{Kazm96b,
  author = {R. Kazman},
  title = {Tool support for Architecture Analysis and Design},
  pages = {94--97},
  year = {1996},
  note = {Proceedings of Workshop (ISAW-2) joint Sigsoft}}

@inproceedings{Kazm98a,
  author = {R. Kazman and S.G. Woods and S.J. Carri\'ere},
  title = {Requirements for Integrating Software Architecture and Reengineering Models: CORUM II},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {154--163},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Kazm98b,
  author = {Kazman, Rick and Carriere, S Jeromy},
  title = {View extraction and view fusion in architectural understanding},
  booktitle = {Proceedings. Fifth International Conference on Software Reuse (Cat. No. 98TB100203)},
  pages = {290--299},
  year = {1998},
  organization = {IEEE}}

@inproceedings{Kazm98c,
  author = {Rick Kazman and Mark H. Klein and Mario Barbacci and Thomas A. Longstaff and Howard F. Lipson and S. Jeromy Carri{\`e}re},
  title = {The Architecture Tradeoff Analysis Method},
  booktitle = {ICECCS},
  pages = {68--78},
  year = {1998}}

@article{Kazm99a,
  author = {Rick Kazman and S. J. Carriere},
  title = {Playing detective: Reconstructing software architecture from available evidence.},
  journal = {Automated Software Engineering},
  year = {1999},
  url = {http://www.sei.cmu.edu/architecture/ASE.pdf},
  month = apr}

@inproceedings{Keab88a,
  author = {J. {Keables} and K. {Roberson} and A. {von Mayrhauser}},
  title = {Data flow analysis and its application to software maintenance},
  booktitle = {Proceedings. Conference on Software Maintenance, 1988.},
  pages = {335-347},
  year = {1988},
  doi = {10.1109/ICSM.1988.10185},
  issn = {null},
  keywords = {program diagnostics;software engineering;software tools;software maintenance;data-flow information;representative program changes;data-flow analysis program;Ada language;program maintenance personnel;Data analysis;Application software;Software maintenance;Software prototyping;Prototypes;Information analysis;Personnel;Testing;Flow graphs;Computer science},
  month = {oct}}

@inproceedings{Keay03a,
  author = {Roger Keays and Andry Rakotonirainy},
  title = {Context-oriented programming},
  booktitle = {MobiDe '03: Proceedings of the 3rd ACM international workshop on Data engineering for wireless and mobile access},
  pages = {9--16},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/940923.940926},
  address = {New York, NY, USA},
  isbn = {1-58113-767-2},
  location = {San Diego, CA, USA}}

@inproceedings{Kedl15a,
  author = {Kedlaya, Madhukar N. and Robatmili, Behnam and Hardekopf, Ben},
  title = {Server-side Type Profiling for Optimizing Client-side JavaScript Engines},
  booktitle = {Symposium on Dynamic Languages},
  year = {2015},
  doi = {10.1145/2816707.2816719},
  keywords = {Deoptimization, JavaScript, language implementation, profiling, virtual machine},
  series = {DLS 2015}}

@article{Keef06c,
  author = {Mark O'Keeffe and Mel \'{\O}Cinn\'{e}ide},
  title = {Search-Based Software Maintenance},
  journal = {European Conference on Software Maintenance and Reengineering},
  volume = {0},
  pages = {249-260},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/CSMR.2006.49},
  address = {Los Alamitos, CA, USA},
  issn = {1052-8725}}

@article{Keef07c,
  author = {Mark O'Keeffe and Mel \'{\O} Cinn\'{e}ide},
  title = {Search-based refactoring for software maintenance},
  journal = {Journal of Systems and Software},
  volume = {81},
  pages = {502--516},
  publisher = {Elsevier Science Inc.},
  year = {2008},
  doi = {/10.1016/j.jss.2007.06.003},
  address = {New York, NY, USA},
  issn = {0164-1212},
  number = {4}}

@book{Keen89a,
  author = {Sonia E. Keene},
  title = {Object-Oriented Programming in Common-Lisp},
  publisher = {Addison Wesley},
  year = {1989}}

@inproceedings{Keid16a,
author = {Keidel, Sven and Pfeiffer, Wulf and Erdweg, Sebastian},
title = {The IDE Portability Problem and Its Solution in Monto},
year = {2016},
isbn = {9781450344470},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2997364.2997368},
doi = {10.1145/2997364.2997368},
booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Software Language Engineering},
pages = {152-162},
numpages = {11},
keywords = {reusable software, integrated development environments},
location = {Amsterdam, Netherlands},
series = {SLE 2016}
}

@inproceedings{Keil15a,
  author = {Matthias Keil and Sankha Narayan Guria and Andreas Schlegel and Manuel Geffken and Peter Thiemann},
  title = {{Transparent Object Proxies in JavaScript}},
  booktitle = {29th European Conference on Object-Oriented Programming (ECOOP 2015)},
  volume = {37},
  pages = {149--173},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  year = {2015},
  url = {http://drops.dagstuhl.de/opus/volltexte/2015/5229},
  doi = {10.4230/LIPIcs.ECOOP.2015.149},
  series = {Leibniz International Proceedings in Informatics (LIPIcs)},
  isbn = {978-3-939897-86-6},
  issn = {1868-8969},
  editor = {John Tang Boyland},
  address = {Dagstuhl, Germany}}

@inproceedings{Kell00a,
  author = {Wolfgang Keller},
  title = {The Bridge to the New Town --- A Legacy System Migration Pattern},
  booktitle = {Proceedings of EuroPLoP 2000},
  year = {2000},
  url = {http://www.coldewey.com/europlop2000/papers.html}}

@techreport{Kell05a,
  author = {Andy Kellens and Kim Mens},
  title = {A Survey of Aspect Mining Tools and Techniques},
  year = {2005},
  institution = {UCL, Belgium},
  month = jun}

@article{Kell07a,
  author = {Andy Kellens and Kim Mens and Paolo Tonella},
  title = {A Survey of Automated Code-Level Aspect Mining Techniques},
  journal = {Transactions on Aspect-Oriented Software Development},
  volume = {4},
  pages = {143--162},
  publisher = {Springer Verlag},
  year = {2007},
  number = {4640},
  series = {LNCS}}

@inproceedings{Kell11a,
  author = {Stephen Kell and Conrad Irwin},
  title = {Virtual machines should be invisible},
  booktitle = {VMIL '11: Proceedings of the 5th workshop on Virtual machines and intermediate languages for emerging modularization mechanisms},
  pages = {6},
  publisher = {ACM},
  year = {2011},
  url = {http://www.cs.iastate.edu/~design/vmil/2011/papers/p02-kell.pdf},
  annote = {internationalworkshop},
  date-added = {2013-12-04 16:53:26 +0000},
  date-modified = {2013-12-04 16:53:26 +0000},
  location = {Portland, Oregon, U.S.A.},
  rating = {4},
  read = {1}}

@inproceedings{Kell91a,
  author = {Rudolf K. Keller, Mary Cameon, Richard N. Taylor Dennis B. Troup},
  title = {User Interface Development and Software Environments: the CHIRON-1 System},
  booktitle = {Proceedings of the 13th international conference on Software Engineering},
  pages = {208--218},
  year = {1991},
  address = {Austin},
  month = may,
  organization = {IEEE}}

@inproceedings{Kell97a,
  author = {Wolfgang Keller},
  title = {Mapping Objects to Tables - A Pattern Language},
  booktitle = {Proc. Of European Conference on Pattern Languages of Programming Conference EuroPLOP '97},
  year = {1997}}

@incollection{Kell98a,
  author = {Wolfgang Keller and Jens Coldewey},
  title = {Accessing Relational Databases: {A} Pattern Language},
  booktitle = {Pattern Languages of Program Design 3},
  pages = {313--343},
  publisher = {Addison Wesley},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Bushmann}}

@inproceedings{Kell98b,
  author = {Ralph Keller and Urs H{\"o}lzle},
  title = {Binary Component Adaptation},
  booktitle = {ECOOP'98, LNCS 1445},
  pages = {307--340},
  year = {1998}}

@inproceedings{Kell99a,
  author = {Rudolf K. Keller and Reinhard Schauer and S\'{e}bastien Robitaille and Patrick Pag\'{e}},
  title = {Pattern-{Based} {Reverse} {Engineering} of {Design} {Components}},
  booktitle = {Proceedings of ICSE '99 (21st International Conference on Software Engineering)},
  pages = {226--235},
  publisher = {IEEE Computer Society Press / ACM Press},
  year = {1999},
  location = {Los Angeles, California, United States},
  month = may}

@inproceedings{Kello23a,
  author = {Martin Kellogg and Daniel Daskiewicz and Loi Ngo Duc Nguyen and Muyeed Ahmed and Michael D. Ernst},
  title = {Pluggable type inference for free},
  booktitle = {International Conference on Automated Software Engineering (ASE 23)},
  year = {2023}}

@article{Keme87a,
  author = {Chris F. Kemerer},
  title = {An Empirical Validation of Software Cost Estimation Models},
  journal = {Communications of the ACM},
  year = {1987}}

@article{Keme95a,
  author = {Chris F. Kemerer},
  title = {Empirical Research on Software Complexity and Software Maintenance},
  journal = {Annals of Software Engineering},
  volume = {1},
  pages = {1--22},
  year = {1995},
  number = {1}}

@article{Keme97a,
  author = {Kemerer, Chris F. and Slaughter, Sandra A.},
  title = {Determinants of Software Maintenance Profiles: An Empirical Investigation},
  journal = {Software Maintenance: Research and Practice},
  volume = {9},
  pages = {235--251},
  year = {1997},
  number = {4}}

@article{Keme99a,
  author = {Chris F. Kemerer and S. Slaughter},
  title = {An Empirical Approach to Studying Software Evolution},
  journal = {IEEE Transactions on Software Engineering},
  volume = {25},
  pages = {493--509},
  year = {1999},
  url = {http://plg.uwaterloo.ca/~migod/846/papers/kemerer-tse.pdf},
  doi = {10.1109/32.799945},
  number = {4}}

@inproceedings{Kemp08a,
  title={Cross language refactoring for eclipse plug-ins},
  author={Kempf, Martin and Kleeb, Reto and Klenk, Michael and Sommerlad, Peter},
  booktitle={Proceedings of the 2nd Workshop on Refactoring Tools},
  pages={1--4},
  year={2008}
}

@inproceedings{Kemp87a,
  author = {James Kempf and Warren Harris and Roy D'Souza and Alan Snyder},
  title = {Experience with CommonLoops},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {214--226},
  year = {1987},
  month = dec}

@inproceedings{Kemp87b,
  author = {Renate Kempf and Marilyn Stelzner},
  title = {Teaching Object-Oriented Programming with the {KEE} System},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {11--25},
  year = {1987},
  month = dec}

@inproceedings{Kemp91a,
  author = {Alfons Kemper and Guido Moerkotte and Hans-Dieter Walter and Andreas Zachmann},
  title = {{GOM}: {A} Strongly-Typed Persistent Object Model With Polymorphism},
  booktitle = {Proceedings of Datenbanksysteme in B{\"u}ro, Technik u. Wi{\ss}enschaft (BTW)},
  year = {1991},
  address = {Kaiserslautern},
  month = mar}

@incollection{Kemp91b,
  author = {Alfons Kemper and Peter Lockemann and Guido Moerkotte and Hans-Dieter Walter and S.M. Lang},
  title = {AUtonomy over Ubiquity: Coping with the Complexity of a Distributed World},
  booktitle = {Entity-Relationship Approach: The Core of Conceptual Modelling},
  publisher = {Elsevier Science Publishers},
  year = {1991},
  editor = {H. Kangassalo}}

@inproceedings{Kemp92a,
  author = {Alfons Kemper and Guido Moerkotte and Hans-Dieter Walter},
  title = {Structuring the Distributed Object World of {CIM}},
  booktitle = {Proceedings of 7th IFAC/IFIP/IFORS/IMACS/ISPE Symposium on Information Control Problems in Manufacturing Technology (INCOM '92)},
  year = {1992},
  address = {Toronto},
  month = may}

@article{Kemp95a,
  author = {Kemper, Alfons and Kossmann, Donald},
  title = {Adaptable pointer swizzling strategies in object bases: design, realization, and quantitative analysis},
  journal = {The VLDB Journal},
  volume = {4},
  pages = {519--567},
  publisher = {Springer-Verlag New York, Inc.},
  year = {1995},
  url = {http://dl.acm.org/citation.cfm?id=615224.615230},
  acmid = {615230},
  address = {Secaucus, NJ, USA},
  issn = {1066-8888},
  keywords = {object-oriented database systems, performance evaluation, pointer swizzling},
  month = jul,
  number = {3},
  numpages = {49}}

@book{Kemp96a,
  author = {Alfons Kemper and Andr\'e Eickler},
  title = {Datenbank-systeme},
  publisher = {R. Oldenbourg Verlag},
  year = {1996},
  isbn = {3-486-23008-5}}

@inproceedings{Kend99a,
  author = {Elizabeth Kendall},
  title = {Role Model Design and Implementations with {Aspect}-{Oriented} Programming},
  booktitle = {Proceedings of OOPSLA '99},
  pages = {353--369},
  year = {1999},
  month = nov,
  series = {ACM Sigplan Notices}}

@article{Kenn04a,
  author = {Andrew Kennedy and Don Syme},
  title = {Transposing F to C\#: Expressivity of polymorphism in an object-oriented language},
  journal = {Concurrency and Computation: Practice and Experience},
  volume = {16},
  year = {2004},
  number = {7}}

@incollection{Kenn82a,
  author = {J. Kennaway and M. Sleep},
  title = {Expressions as Processes},
  booktitle = {LISP and Functional Programming},
  pages = {21--28},
  publisher = {ACM},
  year = {1982}}

@incollection{Kenn83a,
  author = {J. Kennaway and M. Sleep},
  title = {Syntax and Informal Semantics of DyNe, a Parallel Language},
  booktitle = {The Analysis of Concurrent Systems},
  volume = {207},
  pages = {222--230},
  publisher = {Springer-Verlag},
  year = {1983},
  series = {LNCS}}

@inproceedings{Kent02a,
  author = {Kent, Stuart},
  title = {Model driven engineering},
  booktitle = {Integrated formal methods},
  pages = {286--298},
  year = {2002},
  organization = {Springer}}

@book{Kent06a,
  author = {Kent Beck},
  title = {Implementation Patterns},
  publisher = {Addison-Wesley Professional},
  year = {2006},
  isbn = {0321413091}}

@inproceedings{Keog01a,
  author = {Eamonn Keogh and Selina Chu and David Hart and Michael Pazzani},
  title = {An Online Algorithm for Segmenting Time Series},
  booktitle = {Proceedings IEEE International Conference on Data Mining},
  pages = {289--298},
  publisher = {IEEE Computer Society Press},
  year = {2001},
  address = {Los Alamitos CA},
  month = nov}

@inproceedings{Keog02a,
  author = {Eamonn Keogh},
  title = {Exact Indexing of dynamic time warping},
  booktitle = {Proceedings 28th International Conference on Very Large Databases, Hong Kong},
  pages = {406--417},
  year = {2002},
  month = dec}

@inproceedings{Keog99a,
  author = {Eamonn Keogh and M. Pazzani},
  title = {Scaling up dynamic time warping to massive datasets},
  booktitle = {Proceedings 3rd European Conference on Principles and Practice of Knowledge Discovery in Databases},
  pages = {1--11},
  year = {1999}}

@inproceedings{Keph05a,
  author = {Kephart, J.O.},
  title = {Research challenges of autonomic computing},
  booktitle = {ICSE 2005},
  pages = {15-22},
  year = {2005},
  month = {may}}

@inproceedings{Keram11a,
  author = {Euclid Keramopoulos and Zounaropoulos Michael and Kourouleas George},
  title = {A Comparison Study Of Object-Oriented Database Management Systems},
  booktitle = {Conference: The Fourth International Theoretical and Practical Conference: Object - Systems},
  year = {2011},
  month = nov}

@book{Keri04a,
  author = {Joshua Kerievsky},
  title = {Refactoring to Patterns},
  publisher = {Pearson Higher Education},
  year = {2004},
  isbn = {0321213351}}

@book{Kern76a,
  author = {B.W. Kernighan and P.J. Plauger},
  title = {Software Tools},
  publisher = {Addison Wesley, Inc.},
  year = {1976},
  address = {Reading, Mass.}}

@book{Kern78a,
  author = {B.W. Kernighan and D.M. Ritchie},
  title = {The {C} Programming Language},
  publisher = {Prentice Hall Software Series},
  year = {1978}}

@book{Kern82a,
  author = {B. W. Kernighan and P.J. Plauger},
  title = {The Elements of Programming Style},
  publisher = {McGraw-Hill, Inc.},
  year = {1982},
  address = {New York, NY, USA},
  isbn = {0070342075}}

@book{Kern84a,
  author = {B.W. Kernighan and R. Pike},
  title = {The {UNIX} Programming Environment},
  publisher = {Prentice-Hall},
  year = {1984}}

@inproceedings{Kerr87a,
  author = {R.K. Kerr and D.B. Percival},
  title = {Use of Object-Oriented Programming in a Time Series Analysis System},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {1--10},
  year = {1987},
  month = dec}

@inproceedings{Kers05a,
  author = {Mik Kersten and Gail C. Murphy},
  title = {Mylar: a degree-of-interest model for IDEs},
  booktitle = {AOSD '05: Proceedings of the 4th international conference on Aspect-oriented software development},
  pages = {159--168},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1052898.1052912},
  address = {New York, NY, USA},
  isbn = {1-59593-042-6},
  location = {Chicago, Illinois}}

@inproceedings{Kers06a,
  author = {Mik Kersten and Gail C. Murphy},
  title = {Using task context to improve programmer productivity},
  booktitle = {SIGSOFT '06/FSE-14: Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering},
  pages = {1--11},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1181775.1181777},
  address = {New York, NY, USA},
  isbn = {1-59593-042-6},
  location = {Portland, Oregon, USA}}

@inproceedings{Kers09a,
  author = {Kerschbaumer, Christoph and Wagner, Gregor and Wimmer, Christian and Gal, Andreas and Steger, Christian and Franz, Michael},
  title = {SlimVM: A Small Footprint Java Virtual Machine for Connected Embedded Systems},
  booktitle = {Proceedings of the 7th International Conference on Principles and Practice of Programming in Java},
  pages = {133--142},
  publisher = {ACM},
  year = {2009},
  url = {http://doi.acm.org/10.1145/1596655.1596678},
  doi = {10.1145/1596655.1596678},
  acmid = {1596678},
  address = {New York, NY, USA},
  isbn = {978-1-60558-598-7},
  keywords = {Java virtual machine, code-size reduction, connected embedded systems, just-in-time compilation, optimization},
  location = {Calgary, Alberta, Canada},
  numpages = {10},
  series = {PPPJ '09}}

@phdthesis{Kess18a,
  author = {Kesseli, Pascal},
  title = {Semantic Refactorings},
  year = {2018},
  school = {University of Oxford}}

@inproceedings{Khad14,
  author = {Khadka, Ravi and Batlajery, Belfrit V and Saeidi, Amir M and Jansen, Slinger and Hage, Jurriaan},
  title = {How do professionals perceive legacy systems and software modernization?},
  booktitle = {Proceedings of the 36th International Conference on Software Engineering},
  pages = {36--47},
  year = {2014}}

@inproceedings{Khan07a,
  author = {Khanna, Sanjeev and Kunal, Keshav and Pierce, Benjamin C.},
  title = {A formal investigation of Diff3},
  booktitle = {Proceedings of the 27th international conference on Foundations of software technology and theoretical computer science},
  pages = {485--496},
  publisher = {Springer-Verlag},
  year = {2007},
  isbn = {3-540-77049-6, 978-3-540-77049-7},
  series = {FSTTCS'07}}

@inproceedings{Khos86a,
  author = {Setrag N. Khoshafian and George P. Copeland},
  title = {Object Identity},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {406--416},
  year = {1986},
  month = nov}

@book{Khos95a,
  author = {Setrag Khoshafian and Marek Buckiewicz},
  title = {Introduction to Groupware, Workflow and Workgroup Computing},
  publisher = {John Wiley \& Sons},
  year = {1995}}

@inproceedings{Kiay17a,
  author = {Kiayias, Aggelos and Russell, Alexander and David, Bernardo and Oliynykov, Roman},
  title = {Ouroboros: A provably secure proof-of-stake blockchain protocol},
  booktitle = {Annual International Cryptology Conference},
  pages = {357--388},
  year = {2017},
  organization = {Springer}}

@article{Kic01,
  author = {Gregor Kiczales and Erik Hilsdale and Jim Hugunin and Mik Kersten and Jeffrey Palm and William G. Griswold},
  title = {Getting Started with AspectJ},
  journal = {Communications of the ACM},
  year = {2001}}

@unpublished{Kici01a,
  author = {Emre K{\i}c{\i}man and Laurence Melloul and Armando Fox},
  title = {Towards Zero-Code Composition},
  year = {2001},
  note = {Submitted to Hot Topics in Operating Systems (HotOS VIII).}}

@inproceedings{Kicz00a,
  author = {Gregor Kiczales and Jim Hugunin and Mik Kersten and John Lamping and Cristina Lopes and William G. Griswold},
  title = {{Semantics-Based Crosscutting in {AspectJ}}},
  booktitle = {{Workshop on Multi-Dimensional Separation of Concerns in Software Engineering (ICSE 2000)}},
  year = {2000}}

@inproceedings{Kicz01a,
  author = {Gregor Kiczales and Erik Hilsdale and Jim Hugunin and Mik Kersten and Jeffrey Palm and William G. Griswold},
  title = {An overview of {AspectJ}},
  booktitle = {European {C}onference on {O}bject-{O}riented {P}rogramming ({ECOOP}' 01)},
  pages = {327--353},
  publisher = {Springer Verlag},
  year = {2001},
  number = {2072},
  series = {LNCS}}

@inproceedings{Kicz90a,
  author = {Gregor Kiczales and Luis Rodriguez},
  title = {Efficient Method Dispatch in {PCL}},
  booktitle = {Proceedings of ACM conference on Lisp and Functional Programming},
  pages = {99--105},
  year = {1990},
  address = {Nice}}

@book{Kicz91a,
  author = {Gregor Kiczales and Jim des Rivi\`eres and Daniel G. Bobrow},
  title = {The Art of the Metaobject Protocol},
  publisher = {MIT Press},
  year = {1991},
  isbn = {9780262111584}}

@inproceedings{Kicz92a,
  author = {Gregor Kiczales and John Lamping},
  title = {Issues in the Design and Documentation of Class Libraries},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = 27,
  pages = {435--451},
  year = {1992},
  month = oct}

@inproceedings{Kicz92b,
  author = {Gregor Kiczales},
  title = {Towards a New Model of Abstraction in the Engineering of Software},
  booktitle = {Proc. of IMSA '92 Workshop on Reflection and Meta-Level Architecture},
  year = {1992}}

@incollection{Kicz93a,
  author = {Gregor Kiczales},
  title = {Traces ({A} Cut at the ``Make Isn't Generic'' Problem)},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {27--42},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Object-oriented language are a powerful tool for
making a system end-programmer specializable. But,
in cases where the system not only accepts objects
as input, but also creates objects internally,
specialization has been more difficult. This has
been referred to as the ``make isn't generic
problem.'' We present a new object-oriented language
concept, called traces, that we have used
successfully to support specialization in cases that
were previously cumbersome. The concept of traces
makes a fundamental separation between two kinds of
inheritance in object-oriented languages:
inheritance of specialization --- an aspect of code
sharing; and inheritance of specialization, a
sometimes static, sometimes dynamic phenomena.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@incollection{Kicz93b,
  author = {Gregor Kiczales and J.Michael Ashley and Luis Rodriguez and Amin Vahdat and Daniel G. Bobrow},
  title = {Metaobject protocols: Why we want them and what else they can do},
  booktitle = {Object-Oriented Programming: the {CLOS} Perspective},
  pages = {101--118},
  publisher = {MIT Press},
  year = {1993}}

@misc{Kicz94a,
  author = {Gregor Kiczales and Andreas Paepcke},
  title = {Open Implementations and Metaobject Protocols},
  year = {1994},
  entered-by = {Andreas Paepcke},
  howpublished = {Expanded tutorial notes},
  keywords = {metaobject protocol},
  links = {(title:www:http://db.stanford.edu/~paepcke/shared-documents/Tutorial.ps)},
  note = {At http://db.stanford.edu/~paepcke/shared-documents/Tutorial.ps}}

@incollection{Kicz96a,
  author = {Gregor Kiczales},
  title = {Aspect-Oriented Programming: A Position Paper From the {Xerox} {PARC} Aspect-Oriented Programming Project},
  booktitle = {Special Issues in Object-Oriented Programming},
  publisher = {Dpunkt Verlag},
  year = {1996},
  editor = {Max Muehlhauser}}

@article{Kicz96b,
  author = {Gregor Kiczales},
  title = {Beyond the Black Box: Open Implementation},
  journal = {IEEE Software},
  year = {1996},
  month = jan}

@inproceedings{Kicz97a,
  author = {Gregor Kiczales and John Lamping and Anurag Mendhekar and Chris Maeda and Cristina Lopes and Jean-Marc Loingtier and John Irwin},
  title = {{Aspect-Oriented Programming}},
  booktitle = {European {C}onference on {O}bject-{O}riented {P}rogramming ({ECOOP}'97)},
  pages = {220--242},
  publisher = {Springer-Verlag},
  year = {1997},
  doi = {10.1007/BFb0053381},
  editor = {Mehmet Aksit and Satoshi Matsuoka},
  isbn = {978-3-540-69127-3},
  month = jun}

@inproceedings{Kieb96a,
  author = {Kieburtz, Richard B. and McKinney, Laura and Bell, Jeffrey M. and Hook, James and Kotov, Alex and Lewis, Jeffrey and Oliva, Dino P. and Sheard, Tim and Smith, Ira and Walton, Lisa},
  title = {A software engineering experiment in software component generation},
  booktitle = {ICSE'96: Proceedings of the 18th International Conference on Software engineering},
  pages = {542--552},
  year = {1996}}

@inproceedings{Kiel95b,
  author = {T. Kielmann and Guido Wirtz},
  title = {Coordination Requirements for Open Distributed Systems},
  booktitle = {Proc. of PARCO '95},
  publisher = {Elsevier},
  year = {1995},
  address = {Gent, Belgium},
  month = sep}

@inproceedings{Kiel96a,
  author = {Thilo Kielmann},
  title = {Designing a Coordination Model for Open Systems},
  booktitle = {Proceedings of COORDINATION '96},
  volume = {1061},
  pages = {267--284},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Cesena, Italy},
  editor = {P. Ciancarini and Chris Hankin},
  series = {LNCS}}

@inproceedings{Kien02a,
  author = {Joerg Kienzle and Rachid Guerraoui},
  title = {{AOP}: Does it Make Sense? The Case of Concurrency and Failures},
  booktitle = {Proceedings ECOOP 2002},
  volume = {2374},
  publisher = {Springer Verlag},
  year = {2002},
  series = {LNCS}}

@article{Kien07a,
  author = {Holger M. Kienle and Hausi A. Muller},
  title = {Requirements of Software Visualization Tools: A Literature Survey},
  journal = {VISSOFT 2007. 4th IEEE International Workshop on Visualizing Software for Understanding and Analysis},
  pages = {2--9},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/VISSOF.2007.4290693},
  address = {Los Alamitos, CA, USA},
  isbn = {1-4244-0599-8}}

@article{Kien09a,
  author = {Kienle, Holger M. and Kuhn, Adrian and Mens, Kim and van den Brand, Mark and Wuyts, Roel},
  title = {Tool Building on the Shoulders of Others},
  journal = {IEEE Software},
  volume = {26},
  pages = {22--23},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/MS.2009.25},
  doi = {10.1109/MS.2009.25},
  abstract = {At the first International Workshop on Advanced
Software Development Tools and Techniques, four
emerging trends in academic tool building were
evident. First, tools are increasingly constructed
on the basis of external code, reusing, for
instance, existing frameworks and integrated
development environments. Second, researchers often
choose dynamic languages such as Smalltalk to
implement prototype tools. Third, Web-based tools
are starting to incorporate Web 2.0 technologies to
improve user interaction. Finally, increasing
computational resources allow tools to tackle
larger, real-world code bases.},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  number = {1},
  posted-at = {2009-09-14 14:33:13},
  priority = {0}}

@incollection{Kien10a,
  author = {Kienle, Holger M. and M\"uller, Hausi A.},
  title = {The Tools Perspective on Software Reverse Engineering: Requirements, Construction, and Evaluation},
  booktitle = {Advanced in Computers},
  volume = {79},
  pages = {189--290},
  publisher = {Elsevier},
  year = {2010}}

@inproceedings{Kies95a,
  author = {Heiko Kie{\ss}ling and Uwe Kr{\"u}ger},
  title = {Sharing Properties in a Uniform Object Space},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {424--448},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@inproceedings{Kiez07a,
  author = {Adam Kiezun and Michael D. Ernst and Frank Tip and Robert M. Fuhrer},
  title = {Refactoring for Parameterizing Java Classes},
  booktitle = {ICSE '07: Proceedings of the 29th International Conference on Software Engineering},
  pages = {437--446},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/ICSE.2007.70},
  address = {Washington, DC, USA},
  isbn = {0-7695-2828-7}}

@inproceedings{Kiku08a,
  author = {Haruka Kikuchi and Dachuan Yu and Ajay Chander and Hiroshi Inamura and Igor Serikov},
  title = {JavaScript Instrumentation in Practice},
  booktitle = {APLAS 2008},
  year = {2008},
  keywords = {security instrumentation}}

@article{Kilo91a,
  author = {Haim Kilov},
  title = {Object Concepts and Bibliography},
  journal = {ACM SIGPLAN Notices},
  volume = {26},
  pages = {11--12},
  year = {1991},
  month = oct,
  number = {10}}

@inproceedings{Kilo92a,
  author = {Haim Kilov},
  title = {From {OSI} Systems Management to an Interoperable Object Model: Behavioural Specification of (Generic) Relationships},
  booktitle = {Proceedings 3d Telecommunications Information Networking Architecture Workshop (TINA 92)},
  year = {1992},
  misc = {Jan. 21-23},
  address = {Narita, Japan},
  month = jan}

@proceedings{Kilo93a,
  title = {Workshop on Specification of Behavioural Semantics in Object-Oriented Information Modeling ({OOPSLA} '93)},
  year = {1993},
  editor = {Haim Kilov and Bill Harvey},
  month = sep}

@inproceedings{Kilo93b,
  author = {Haim Kilov},
  title = {Specifying Joint Behavior of Objects: Formalization and Standardization},
  booktitle = {Proceedings of SESS '93 on Sofware Engineering Standards Symposium},
  pages = {220--226},
  publisher = {IEEE Computer Society},
  year = {1993},
  month = aug}

@inproceedings{Kilo93c,
  author = {Haim Kilov and Peter Koppstein and Hassan Srinidhi},
  title = {A Practical Approach to the Formal Specification of Semantics in the Information MOdeling},
  booktitle = {Proceedings of TINA '93 4th Telcommunications Information Workshop},
  volume = {1},
  publisher = {IEEE Communications Society},
  year = {1993},
  month = sep,
  note = {L'Aquila Italy}}

@inproceedings{Kilo93d,
  author = {Haim Kilov},
  title = {Information Modeling and Object {Z}: Specifying Generic Reusable Associations},
  booktitle = {Proceedings of the International Workshop on Next Generation Information Technologies and Systems},
  pages = {182--191},
  year = {1993},
  editor = {Opher Etzion \& Arie Segev},
  month = jun}

@techreport{Kim02a,
  author = {Howard Kim},
  title = {AspectC\#: An AOSD implementation for C\#},
  year = {2002},
  institution = {Department of Computer Science, Trinity College, Dublin}}

@inproceedings{Kim02b,
  author = {Kim, Jung-Min and Porter, Adam},
  title = {A History-based Test Prioritization Technique for Regression Testing in Resource Constrained Environments},
  booktitle = {Proceedings {ICSE '02} (the 24th International Conference on Software Engineering)},
  pages = {119--129},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/581339.581357},
  address = {New York, NY, USA},
  isbn = {1-58113-472-X},
  location = {Orlando, Florida},
  numpages = {11}}

@inproceedings{Kim05a,
  author = {Miryung Kim and Vibha Sazawal and David Notkin and Gail C. Murphy},
  title = {An Empirical Study of Code Clone Genealogies},
  booktitle = {Proceedings of European Software Engineering Conference (ESEC/FSE 2005)},
  pages = {187--196},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1081706.1081737},
  address = {New York NY},
  isbn = {1-59593-014-0}}

@inproceedings{Kim05b,
  author = {Kim, Sunghunand Pan, Kai and Whitehead, E James},
  title = {When functions change their names: Automatic detection of origin relationships},
  booktitle = {Working Conference on Reverse Engineering},
  year = {2005}}

@inproceedings{Kim06a,
  author = {Sunghun Kim and Thomas Zimmermann and Miryung Kim and Ahmed Hassan and Audris Mockus and Tudor G\^irba and Martin Pinzger and James Whitehead and Andreas Zeller},
  title = {{TA-RE}: An Exchange Language for Mining Software Repositories},
  booktitle = {Proceedings Workshop on Mining Software Repositories (MSR 2006)},
  pages = {22--25},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Kim06aTARE.pdf},
  abstract = {Software repositories have been getting a lot of
attention from researchers in recent years. In order
to analyze software repositories, it is necessary to
first extract raw data from the version control and
problem tracking systems. This poses two challenges:
(1) extraction requires a non-trivial effort, and
(2) the results depend on the heuristics used during
extraction. These challenges burden researchers that
are new to the community and make it difficult to
benchmark software repository mining since it is
almost impossible to reproduce experiments done by
another team. In this paper we present the TA-RE
corpus. TA-RE collects extracted data from software
repositories in order to build a collection of
projects that will simplify extraction process.
Additionally the collection can be used for
benchmarking. As the first step we propose an
exchange language capable of making sharing and
reusing data as simple as possible.},
  medium = {2}}

@inproceedings{Kim06b,
  author = {Kim, Sunghun and Zimmermann, Thomas and Pan, Kai and Whitehead, E. James Jr.},
  title = {{Automatic Identification of Bug-Introducing Changes}},
  booktitle = {International Conference on Automated Software Engineering},
  pages = {81--90},
  year = {2006}}

@inproceedings{Kim07a,
  author = {Sunghun Kim and Thomas Zimmermann and E. James Whitehead Jr. and Andreas Zeller},
  title = {Predicting Faults from Cached History},
  booktitle = {ICSE '07: Proceedings of the 29th international conference on Software Engineering},
  pages = {489--498},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/ICSE.2007.66},
  address = {Washington, DC, USA},
  isbn = {0-7695-2828-7}}

@inproceedings{Kim07b,
  author = {Kim, Sunghun and Ernst, Michael D.},
  title = {Which warnings should I fix first?},
  booktitle = {Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  pages = {45--54},
  publisher = {ACM},
  year = {2007},
  address = {New York, NY, USA},
  isbn = {978-1-59593-811-4},
  location = {Dubrovnik, Croatia},
  numpages = {10},
  series = {ESEC-FSE '07}}

@inproceedings{Kim07c,
  author = {Kim, Miryung and Notkin, David and Grossman, Dan},
  title = {Automatic inference of structural changes for matching across program versions},
  booktitle = {International {C}onference on {S}oftware {E}ngineering ({ICSE}'07)},
  pages = {333--343},
  year = {2007},
  organization = {IEEE}}

@inproceedings{Kim09a,
  author = {Miryung Kim and David Notkin},
  title = {Discovering and Representing Systematic Code Changes},
  booktitle = {31st International Conference on Software Engineering},
  pages = {309--319},
  year = {2009}}

@inproceedings{Kim12a,
author = {Kim, Miryung and Zimmermann, Thomas and Nagappan, Nachiappan},
title = {A Field Study of Refactoring Challenges and Benefits},
year = {2012},
isbn = {9781450316149},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2393596.2393655},
doi = {10.1145/2393596.2393655},
abstract = {It is widely believed that refactoring improves software quality and developer productivity. However, few empirical studies quantitatively assess refactoring benefits or investigate developers' perception towards these benefits. This paper presents a field study of refactoring benefits and challenges at Microsoft through three complementary study methods: a survey, semi-structured interviews with professional software engineers, and quantitative analysis of version history data. Our survey finds that the refactoring definition in practice is not confined to a rigorous definition of semantics-preserving code transformations and that developers perceive that refactoring involves substantial cost and risks. We also report on interviews with a designated refactoring team that has led a multi-year, centralized effort on refactoring Windows. The quantitative analysis of Windows 7 version history finds that the binary modules refactored by this team experienced significant reduction in the number of inter-module dependencies and post-release defects, indicating a visible benefit of refactoring.},
booktitle = {Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering},
articleno = {50},
numpages = {11},
keywords = {software evolution, churn, defects, component dependencies, empirical study, refactoring},
location = {Cary, North Carolina},
series = {FSE '12}
}

@inproceedings{Kim13a,
  author = {D. Kim and J. Nam and J. Song and S. Kim},
  title = {Automatic patch generation learned from human-written patches},
  booktitle = {In Proceedings of the International Conference on Software Engineering},
  year = {2013}}

@article{Kim13b,
  author = {Kim, Dae-Kyoo},
  title = {Design pattern based model transformation with tool support},
  journal = {Software: Practice and Experience},
  volume = {43},
  pages = {1--27},
  year = {2013}}

@article{Kim13c,
  author = {Kim, Miryung and Notkin, David and Grossman, Dan and Wilson Jr., Gary},
  title = {Identifying and Summarizing Systematic Code Changes via Rule Inference},
  journal = {IEEE Transactions on Software Engineering},
  volume = {39},
  pages = {45--62},
  year = {2013},
  number = {1}}

@article{Kim14a,
  author={Kim, Miryung and Zimmermann, Thomas and Nagappan, Nachiappan},
  journal={IEEE Transactions on Software Engineering}, 
  title={An Empirical Study of RefactoringChallenges and Benefits at Microsoft}, 
  year={2014},
  volume={40},
  number={7},
  pages={633-649},
  doi={10.1109/TSE.2014.2318734}}

@inproceedings{Kim15a,
  author = {Kim, Jongwook and Batory, Don and Dig, Danny},
  title = {Scripting Parametric Refactorings in Java to Retrofit Design Patterns},
  booktitle = {ICSME},
  year = {2015}}

@inproceedings{Kim16a,
  author = {Kim, Jongwook and Batory, Don and Dig, Danny and Azanza, Maider},
  title = {Improving Refactoring Speed by 10X},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering},
  pages = {1145 - 1156},
  year = {2016},
  doi = {10.1145/2884781.2884802}}

@inproceedings{Kim87a,
  author = {Won Kim and Jay Banerjee and Hong-Tai Chou and Jorge F. Garza and Darrell Woelk},
  title = {Composite Object Support in an Object-Oriented Database System},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {118--125},
  year = {1987},
  month = dec}

@techreport{Kim87b,
  author = {H-J Kim and H.F. Horth},
  title = {{PSYCHO}: a Graphical Language for Supporting Schema Evolution in Object-oriented Databases},
  year = {1987},
  institution = {University of Texas},
  type = {TR-87-43}}

@inproceedings{Kim88a,
  author = {Won Kim and Nat Ballou and Jay Banerjee and Hong-Tai Chou and Jorge F. Garza and Darrell Woelk},
  title = {Integrating an Object-Oriented Programming System with a Database System},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {142--152},
  year = {1988},
  month = nov}

@inproceedings{Kim88b,
  author = {W. Kim and H.-T. Chou},
  title = {Versions of Schema for Object-oriented Databases},
  booktitle = {ACM SIGMOD Int. Conf. Very Large DataBases},
  pages = {148--159},
  year = {1988},
  address = {Los Angeles, CA},
  editor = {F. Bancilhon and D.J. DeWitt}}

@incollection{Kim89a,
  author = {Won Kim and Nat Ballou and Hong-Tai Chou and Jorge F. Garza and Darrell Woelk},
  title = {Features of the Orion Object-oriented Database System},
  booktitle = {Object-oriented Concepts, Databases and Applications},
  pages = {251--282},
  publisher = {ACM Press},
  year = {1989},
  address = {New York},
  editor = {W Kim and F Lochovsky}}

@book{Kim89b,
  title = {Object Oriented Concepts, Databases and Applications},
  publisher = {ACM Press and Addison Wesley},
  year = {1989},
  address = {Reading, Mass.},
  editor = {Won Kim and Frederick H. Lochovsky},
  isbn = {0-201-14410-7}}

@article{Kim90a,
  author = {Won Kim and Jay Banerjee and Hong-Tai Chou and Jorge F. Garza},
  title = {Object-Oriented Database Support for {CAD}},
  journal = {Computer Aided Design},
  volume = {22},
  pages = {469--479},
  year = {1990},
  number = {8}}

@article{Kim90b,
  author = {Won Kim and Jorge F. Garza and Nat Ballou and Darrell Woelk},
  title = {Architecture of the {ORION} Next-generation Database System},
  journal = {IEEE Transactions on Knowledge and Data Engineering},
  volume = {2},
  pages = {109--124},
  year = {1990},
  number = {1}}

@misc{Kim90c,
  author = {Won Kim},
  title = {Introduction to Object-Oriented Databases},
  year = {1990},
  address = {Cambridge, MA},
  isbn = {0-262-11124-1},
  series = {Computer Systems}}

@inproceedings{Kim92a,
  author = {Won Kim},
  title = {On Unifying Relational and Object-Oriented Database Systems},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {1--18},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@incollection{Kim95a,
  author = {J.J. Kim and K.M. Benner},
  title = {Implementation Patterns for the Observer Pattern},
  booktitle = {Pattern Languages of Program Design 2},
  publisher = {Addison Wesley},
  year = {1995}}

@book{Kim95c,
  author = {Won Kim},
  title = {Modern Database Systems},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-59098-0}}

@proceedings{Kim95d,
  title = {Future Trends in Distributed Computing Systems},
  booktitle = {Proceedings of the 5th Workshop on Future Trends of Distributed Computing Systems},
  publisher = {IEEE},
  year = {1997},
  misc = {August 28-30},
  address = {Cheju Island, Korea},
  editor = {K.H.Him and Radu Popescu-Zeletin},
  isbn = {0-8186-7125-4},
  month = aug}

@incollection{Kimb07a,
  author = {Kimball, Aaron and Grossman, Dan},
  title = {Software Transactions Meet First-Class Continuations},
  booktitle = {The 8th Annual Workshop on Scheme and Functional Programming},
  publisher = {ACM SIGPLAN},
  year = {2007},
  month = sep}

@inproceedings{King05a,
  author = {King, Samuel T and Dunlap, George W and Chen, Peter M},
  title = {Debugging operating systems with time-traveling virtual machines},
  booktitle = {Proceedings of the 2005 USENIX Technical Conference},
  pages = {1--15},
  year = {2005}}

@misc{King12a,
  author = {King, Sunny and Nadal, Scott},
  title = {Ppcoin: Peer-to-peer crypto-currency with proof-of-stake},
  year = {2012},
  url = {https://pdfs.semanticscholar.org/0db3/8d32069f3341d34c35085dc009a85ba13c13.pdf}}

@article{King97a,
  author = {Nelson King},
  title = {Overcoming the Object Onslaught},
  journal = {Internet Systems},
  year = {1997},
  url = {http://www.dbmsmag.com/9704i07.html},
  month = apr}

@inproceedings{Kirc07a,
  title={Anti-pattern matching},
  author={Kirchner, Claude and Kopetz, Radu and Moreau, Pierre-Etienne},
  booktitle={Programming Languages and Systems: 16th European Symposium on Programming, ESOP 2007, Held as Part of the Joint European Conferences on Theory and Practics of Software, ETAPS 2007, Braga, Portugal, March 24-April 1, 2007. Proceedings 16},
  pages={110--124},
  year={2007},
  organization={Springer}
}

@article{Kirk83a,
  author = {S. Kirkpatrick and C. D. Gelatt Jr. and M. P. Vecchi},
  title = {Optimization by Simulated Annealing},
  journal = {Science},
  volume = {220},
  pages = {671--680},
  year = {1983},
  doi = {10.1126/science.220.4598.671},
  number = {4598}}

@inproceedings{Kirk87a,
  author = {Kirkpatrick S. and Gelatt C. D. Jr. and Vecchi M. P.},
  title = {Optimization by simulated annealing},
  booktitle = {Readings in computer vision: issues, problems, principles, and paradigms},
  pages = {606--615},
  year = {1987},
  isbn = {0-934613-33-8}}

@inproceedings{Kirs20a,
  author = {Kirschner, Lukas and Soremekun, Ezekiel and Zeller, Andreas},
  title = {Debugging Inputs},
  year = {2020},
  isbn = {9781450371216},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3377811.3380329},
  doi = {10.1145/3377811.3380329},
  booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
  pages = {75--86},
  numpages = {12},
  location = {Seoul, South Korea},
  series = {ICSE '20}
}

@techreport{Kisc97b,
  author = {Gregor Kiczales and John Irwin and John Lamping and Jean-Marc Loingtier and Cristina Videira Lopes and Chris Maeda and Anurag Mendhekar},
  title = {Aspect-oriented programming},
  year = {1997},
  institution = {Xerox Palo Alto Reserach Center}}

@inproceedings{Kist15a,
  author = {v. Kistowski, J\'{o}akim and Arnold, Jeremy A. and Huppler, Karl and Lange, Klaus-Dieter and Henning, John L. and Cao, Paul},
  title = {How to Build a Benchmark},
  booktitle = {ICPE'15},
  publisher = {ACM},
  year = {2015},
  url = {https://doi.org/10.1145/2668930.2688819},
  doi = {10.1145/2668930.2688819},
  abstract = {Standardized benchmarks have become widely accepted tools for the comparison of products and evaluation of methodologies. These benchmarks are created by consortia like SPEC and TPC under confidentiality agreements which provide little opportunity for outside observers to get a look at the processes and concerns that are prevalent in benchmark development. This paper introduces the primary concerns of benchmark development from the perspectives of SPEC and TPC committees. We provide a benchmark definition, outline the types of benchmarks, and explain the characteristics of a good benchmark. We focus on the characteristics important for a standardized benchmark, as created by the SPEC and TPC consortia. To this end, we specify the primary criteria to be employed for benchmark design and workload selection. We use multiple standardized benchmarks as examples to demonstrate how these criteria are ensured.},
  isbn = {9781450332484},
  keywords = {tpc, spec, specpower_ssj2008, sert, spec cpu},
  numpages = {4}}

@article{Kist99a,
  author = {Thomas Kistler and Michael Franz},
  title = {A Tree-Based Alternative to Java Byte-Codes},
  journal = {Int. J. Parallel Program.},
  volume = {27},
  pages = {21--33},
  publisher = {Kluwer Academic Publishers},
  year = {1999},
  doi = {10.1023/A:1018740018601},
  address = {Norwell, MA, USA},
  issn = {0885-7458},
  number = {1}}

@article{Kitc00a,
  author = {Barbara A. Kitchenham and Shari Lawrence Pfleeger and Lesley M. Pickard and Peter W. Jones and David C. Hoaglin and Khaled El Emam and Jarrett Rosenberg},
  title = {Preliminary guidelines for empirical research in software engineering},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {22},
  pages = {721--734},
  publisher = {IEEE Press},
  year = {2002},
  doi = {10.1109/TSE.2002.1027796},
  address = {Piscataway, NJ, USA},
  number = {8}}

@techreport{Kitc07,
  author = {Kitchenham, Barbara and Charters, Stuart},
  title = {Guidelines for performing systematic literature reviews in software engineering},
  year = {2007},
  institution = {Department of Computer Science University of Durham}}

@article{Kitc14,
  author = {Kitchenham, Barbara},
  title = {Procedures for performing systematic reviews},
  journal = {Keele, UK, Keele University},
  volume = {33},
  pages = {1--26},
  year = {2004},
  number = {2004}}

@inproceedings{Kitc88a,
  author = {Barbara A. Kitchenham},
  title = {An evaluation of software structure metrics},
  booktitle = {Proceedings of the 12th International Computer Software and Application Conference (COMPSAC 1988)},
  pages = {369-376},
  publisher = {IEEE Computer Society Press},
  year = {1988}}

@inproceedings{Klae00a,
  author = {H. Klaeren and E. Pulverm\"{u}ller and A. Raschid and A. Speck},
  title = {Aspect Composition Applying the Design by Contract Principle},
  booktitle = {Proceedings of the 2nd International Symposium on Generative and Component-Based Software Engineering (GCSE 2000)},
  volume = {2177},
  pages = {57--69},
  publisher = {Springer-Verlag},
  year = {2000},
  series = {LNCS}}

@book{Klae87a,
  author = {M. Kl{\"a}y and R. Maibach and I. Metz and H. Riedwyl},
  title = {{ALSTAT} {PC}. Algorithmen der Statistik f{\"u}r {IBM} {PC} und Kompatible},
  publisher = {Birkh{\"a}user},
  year = {1987},
  abstract = {This book describes the implemenation of a
statistics package with numerically very robust
algorithms. This package has been used for long
years for the education of students at the Dept. of
Mathematical Statistics of the University of Bern.},
  address = {Basel}}

@article{Klas90a,
  author = {Wolfgang Klas and Ehrich J. Neuhold and Michael Schrefl},
  title = {Using an Object-Oriented Approach to Model Multimedia Data},
  journal = {Computer Communications},
  volume = {13},
  pages = {204--216},
  year = {1990},
  month = may,
  note = {Most important reference to Klas \& Neuhold},
  number = {4}}

@article{Klas90b,
  author = {Wolfgang Klas and Ehrich J. Neuhold and Michael Schrefl},
  title = {Metaclasses in {VODAK} and their Application in Database Integration},
  journal = {Arbeitpapiere der GMD},
  volume = {?},
  year = {1990},
  number = {462}}

@misc{Klas95a,
  author = {Wolfgang Klas and Michael Schrefl},
  title = {Metaclasses and Their Application},
  volume = {943},
  year = {1995},
  series = {LNCS}}

@inproceedings{Klei03a,
  author = {Dan Klein and Christopher D. Manning},
  title = {Fast Exact Inference with a Factored Model for Natural Language Parsing},
  booktitle = {In Advances in Neural Information Processing Systems 15 (NIPS},
  pages = {3--10},
  publisher = {MIT Press},
  year = {2003}}

@article{Klei81a,
  author = {B. K. Kleiner and J. A. Hartigan},
  title = {Representing Points in Many Dimensions by Trees and Castles},
  journal = {Journal of the American Statistical Association},
  pages = {260-272},
  year = {1981},
  institution = {American Statistical Association},
  month = {jun}}

@inproceedings{Klei96a,
  author = {J\"urgen Kleinoder and Michael Golm},
  title = {{MetaJava}: an efficient run-time meta architecture for {Java} ({TM})},
  booktitle = {IWOOOS '96: Proceedings of the 5th International Workshop on Object Orientation in Operating Systems (IWOOOS '96)},
  pages = {54},
  publisher = {IEEE Computer Society},
  year = {1996},
  address = {Washington, DC, USA},
  isbn = {0-8186-7692-2}}

@book{Klei99a,
  author = {Gary Klein},
  title = {Sources of Power --- How People Make Decisions},
  publisher = {Addison Wesley},
  year = {1999},
  isbn = {0-262-61146-5}}

@inproceedings{Klei99b,
  author = {Mark H. Klein and Rick Kazman and Leonard J. Bass and S. Jeromy Carri{\`e}re and Mario Barbacci and Howard F. Lipson},
  title = {Attribute-Based Architecture Styles},
  booktitle = {WICSA},
  pages = {225--244},
  year = {1999}}

@inproceedings{Klem02a,
  author = {Klemola, Tuomas and Rilling, Juergen},
  title = {Modeling comprehension processes in software development},
  booktitle = {Proceedings First IEEE International Conference on Cognitive Informatics},
  pages = {329--336},
  year = {2002},
  organization = {IEEE}}

@inproceedings{Kley88a,
  author = {Michael F. Kleyn and Paul C. Gingrich},
  title = {{GraphTrace} --- Understanding Object-Oriented Systems using Concurrently Animated Views},
  booktitle = {Proceedings of International Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'88)},
  volume = {23},
  pages = {191--205},
  publisher = {ACM Press},
  year = {1988},
  location = {San Diego, California},
  month = nov}

@inproceedings{Klim09a,
  author = {Klint, Paul and van der Storm, Tijs and Vinju, Jurgen J.},
  title = {RASCAL: A Domain Specific Language for Source Code Analysis and Manipulation},
  booktitle = {International Working Conference on Source Code Analysis and Manipulation (SCAM)},
  pages = {168-177},
  year = {2009}}

@inbook{Klim19a,
  author = {Klimiankou, Yauhen},
  title = {Interpretizer: A Compiler-Independent Conversion of Switch-Based Dispatch into Threaded Code},
  pages = {59-72},
  publisher = {Springer},
  year = {2019},
  doi = {10.1007/978-3-030-29852-4_4},
  isbn = {978-3-030-29851-7},
  month = {oct}}

@book{Klim96a,
  author = {Edward J. Klimas and Suzanne Skublics and David A. Thomas},
  title = {Smalltalk with Style},
  publisher = {Prentice-Hall},
  year = {1996},
  isbn = {0-13-165549-3}}

@article{Klim98a,
  author = {Edward J. Klimas},
  title = {Getting The Biggest Bang For Your Buck},
  journal = {Visual Age Magazine},
  year = {1998},
  month = may}

@article{Klin05a,
  author = {Paul Klint and Ralf Lammel and Chris Verhoef},
  title = {Toward an engineering discipline for grammarware},
  journal = {ACM Transaction on Software Engineering Methodology},
  volume = {14},
  pages = {331--380},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1072997.1073000},
  address = {New York, NY, USA},
  issn = {1049-331X},
  number = {3}}

@inbook{Klin09a,
  author = {Klint, Paul and {van der Storm}, Tijs and Vinju, Jurgen},
  title = {{EASY} meta-programming with Rascal},
  chapter = {Generative and Transformational Techniques in Software Engineering {III}},
  volume = {6491},
  pages = {222--289},
  publisher = {Springer-Verlag},
  year = {2011},
  isbn = {3-642-18022-1, 978-3-642-18022-4},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Klin09b,
  title={Rascal: A domain specific language for source code analysis and manipulation},
  author={Klint, Paul and Van Der Storm, Tijs and Vinju, Jurgen},
  booktitle={2009 Ninth IEEE International Working Conference on Source Code Analysis and Manipulation},
  pages={168--177},
  year={2009},
  organization={IEEE}
}

@incollection{Klin11a,
  author = {Klint, Paul and van der Storm, Tijs and Vinju, Jurgen},
  title = {{EASY Meta-programming with Rascal}},
  booktitle = {Generative and Transformational Techniques in Software Engineering III},
  volume = {6491},
  pages = {222-289},
  publisher = {Springer Berlin / Heidelberg},
  year = {2011},
  abstract = {Rascal is a new language for meta-programming and is intended to solve
	problems in the domain of source code analysis and transformation.
	In this article we give a high-level overview of the language and
	illustrate its use by many examples. Rascal is a work in progress
	both regarding implementation and documentation. More information
	is available at http://www.rascal-mpl.org/.},
  editor = {Fernandes, Jo{\~{a}}o and L\"ammel, Ralf and Visser, Joost and Saraiva, Jo{\~{a}}o},
  isbn = {978-3-642-18022-4},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Klin11b,
  author = {Klint, Paul and Hills, Mark and Van Den Bos, Jeroen and Van Der Storm, Tijs and Vinju, Jurgen},
  title = {Rascal: From Algebraic Specification to Meta-Programming},
  booktitle = {{Proceedings Second International Workshop on Algebraic Methods in Model-based Software Engineering (AMMSE)}},
  pages = {15-32},
  year = {2011},
  url = {http://hal.inria.fr/hal-00644689},
  address = {Zurich, Suisse}}

@inproceedings{Klin89a,
  author = {Jan Heering and Paul Klint and Jan Rekers},
  title = {Incremental generation of parsers},
  booktitle = {PLDI 1989},
  pages = {179--191},
  publisher = {ACM},
  year = {1989},
  doi = {10.1145/73141.74834},
  isbn = {0-89791-306-X}}

@article{Klin93a,
  author = {Paul Klint},
  title = {A meta-environment for generating programming environments},
  journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume = {2},
  pages = {176--201},
  publisher = {ACM New York, NY, USA},
  year = {1993},
  number = {2}}

@inproceedings{Klos09a,
  author = {Karl Klose and Klaus Ostermann},
  title = {A Classification Framework for Pointcut Languages in Runtime Monitoring},
  booktitle = {Objects, Components, Models and Patterns, Proceedings of TOOLS Europe 2009},
  volume = {33},
  pages = {289--307},
  publisher = {Springer-Verlag},
  year = {2009},
  url = {http://www.daimi.au.dk/~ko/papers/tools09.pdf},
  series = {LNBIP}}

@inproceedings{Klus03a,
  author = {Steven Klusener and Ralf L{\"a}mmel},
  title = {Deriving tolerant grammars from a base-line grammar},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM} 2003)},
  pages = {179--188},
  publisher = {IEEE Computer Society},
  year = {2003},
  doi = {10.1109/ICSM.2003.1235420},
  month = sep}

@techreport{Kneu01a,
  author = {Stefan Kneub\"uhl},
  title = {Implementing Coordination Styles in {Piccola}},
  year = {2001},
  url = {http://scg.unibe.ch/archive/projects/Kneu01a.pdf},
  institution = {University of Bern},
  month = feb,
  type = {Informatikprojekt}}

@mastersthesis{Kneu03a,
  author = {Stefan Kneub\"uhl},
  title = {Typeful Compositional Styles},
  year = {2003},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Kneu03a.pdf},
  abstract = {In component-based software development, a software
application is composed of components that are
plugged together. While components represent the
stable parts, the changing or evolving configuration
of a system is defined in scripts. The separation of
changing from stable parts promises flexible
software systems. Compositional styles that define
component interfaces, higher-level connectors and
composition rules describe an architectural
framework. Styles expose the large-scale
architecture of a software system explicitly in
scripts. But they lack a formal foundation allowing
one to reason about styles. We propose to use
Contractual types, an experimental type system that
can express both services provided and required by a
component, as a formal basis to define compositional
styles. We argue that this approach permits us (1)
to verify the consistency of a style, (2) to check
the implementation of a style for correctness, and
(3) to detect compositional mismatches in component
configurations. We exemplify our claims by giving
type-based definitions of some compositional styles.
Implementing a contractual type checker for the
composition language Piccola allows us to verify
existing style implementations in Piccola against
the definitions given. A flexible implementation of
the Piccola language in {Java} provides a basis for
the experiments with the type system.},
  month = apr,
  type = {Diploma thesis}}

@phdthesis{Knie00a,
  author = {G{\"u}nter Kniesel},
  title = {Darwin --- Dynamic Object-Based Inheritance with Subtyping},
  year = {2000},
  school = {CS Dept. III, University of Bonn, Germany},
  type = {{PhD} thesis}}

@article{Knie01a,
  author = {G{\"u}nter Kniesel and Dirk Theisen},
  title = {{JAC} --- Access right based encapsulation for {Java}},
  journal = {Software --- Practice and Experience},
  volume = {31},
  pages = {555--576},
  year = {2001},
  month = may,
  number = {6}}

@incollection{Knie02a,
  author = {G. Kniesel and J. Noppen and T. Mens and J. Buckley},
  title = {The First Workshop on Unanticipated Software Evolution (USE 2002)},
  booktitle = {Proceedings of ECOOP 2002 Workshop Reader},
  volume = {2548},
  publisher = {Springer Verlag},
  year = {2002},
  series = {LNCS}}

@incollection{Knie04a,
  author = {G{\"u}nter Kniesel and Tobias Rho and Stefan Hanenberg},
  title = {Evolvable Pattern Implementations Need Generic Aspects, Proc. of ECOOP 2004 Workshop on Reflection, AOP and Meta-Data for Software Evolution},
  booktitle = {Proc. of ECOOP'2004 Workshop on Reflection, AOP and Meta-Data for Software Evolution},
  publisher = {Springer Verlag},
  year = {2004},
  url = {http://roots.iai.uni-bonn.de/research/logicaj/downloads/papers/KnieselRhoHanenberg-RAM-SE04.pdf},
  month = jun}

@article{Knie04b,
  author = {Kniesel-W\"unsche, G\"unter and Koch, Helge},
  title = {Static composition of refactorings},
  journal = {Science of Computer Programming},
  volume = {52},
  pages = {9-51},
  year = {2004},
  doi = {10.1016/j.scico.2004.03.002},
  month = aug}

@incollection{Knie05a,
  author = {G{\"u}nter Kniesel and Tobias Rho},
  title = {Generic Aspect Languages --- Needs, Options and Challenges, JFDLPA 2005},
  booktitle = {Proceedings of JFDLPA 2005},
  publisher = {Hermes Paris},
  year = {2005},
  month = sep}

@techreport{Knie06a,
  author = {Kniesel, G{\"u}nter},
  title = {A Logic Foundation for Program Transformations},
  year = {2006},
  month = jan,
  institution = {University of Bonn}}

@inproceedings{Knie99a,
  author = {G\"unter Kniesel},
  title = {Type-Safe Delegation for Run-Time Component Adaptation},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {351--366},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {The aim of component technology is the replacement
of large monolithic applications with sets of
smaller software components, whose particular
functionality and interoperation can be adapted to
users' needs. However, the adaptation mechanisms of
component software are still limited. Most proposals
concentrate on adaptations that can be achieved
either at compile time or at link time. Current
support for dynamic component adaptation, i.e.
unanticipated, incremental modifications of a
component system at run-time, is not sufficient.
This paper proposes object-based inheritance (also
known as delegation) as a complement to purely
forwarding-based object composition. It presents a
type-safe integration of delegation into a
class-based object model and shows how it overcomes
the problems faced by for\-warding-based component
interaction, how it supports independent
extensibility of components and unanticipated,
dynamic component adaptation.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@manual{Knig07,
  author = {Steven Knight},
  title = {SCons User Guide 0.97},
  year = {2007},
  url = http://www.scons.org/doc/0.97/HTML/scons-user/book1.html}

@inproceedings{Knig99a,
  author = {Knight, Claire and Munro, Malcolm},
  title = {Visualising software-a key research area},
  booktitle = {Proceedings of the IEEE International Conference on Software Maintenance},
  pages = {437},
  year = {1999}}

@inproceedings{Kno03a,
  author = {Jens Knodel and Martin Pinzger},
  title = {Improving Fact Extraction of Framework-based Software Systems},
  booktitle = {Proceedings of {WCRE} '03},
  pages = {186--195},
  publisher = {IEEE Computer Society},
  year = {2003},
  month = nov}

@inproceedings{Knod05a,
  author = {Jens Knodel and Isabel John and Dharmalingam Ganesan and Martin Pinzger and Fernando Usero and Jose L. Arciniegas and Claudio Riva},
  title = {Asset Recovery and Their Incorporation into Product Lines},
  booktitle = {Proceedings of Working Conference on Reverse Engineering ({WCRE} 05)},
  pages = {120--129},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/{WCRE}.2005.8},
  address = {Washington, DC, USA},
  isbn = {0-7695-2474-5}}

@inproceedings{Knod06a,
  author = {Jens Knodel and Dirk Muthig and Matthias Naab and Mikael Lindvall},
  title = {Static Evaluation of Software Architectures},
  booktitle = {CSMR'06},
  pages = {279--294},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/CSMR.2006.53},
  address = {Los Alamitos, CA, USA},
  issn = {1052-8725}}

@inproceedings{Knud88a,
  author = {J\/orgen Lindskov Knudsen and Ole Lehrmann Madsen},
  title = {Teaching Object-Oriented Programming Is More than Teaching Object-Oriented Programming Languages},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {21--40},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Knud88b,
  author = {J\/orgen Lindskov Knudsen},
  title = {Name Collision in Multiple Classification Hierarchies},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {93--109},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@book{Knut73a,
  author = {D.E. Knuth},
  title = {Sorting and Searching},
  volume = {3},
  publisher = {Addison Wesley},
  year = {1973},
  address = {Reading, Mass.},
  isbn = {0-201-03803-X},
  series = {The Art of Computer Programming}}

@book{Knut73b,
  author = {D.E. Knuth},
  title = {Fundamental Algorithms},
  volume = {1},
  publisher = {Addison Wesley},
  year = {1973},
  address = {Reading, Mass.},
  isbn = {0-201-03809-9},
  series = {The Art of Computer Programming}}

@book{Knut73c,
  author = {D.E. Knuth},
  title = {Seminumerical Algoritms},
  volume = {2},
  publisher = {Addison Wesley},
  year = {1973},
  address = {Reading, Mass.},
  isbn = {0-201-03822-6},
  series = {The Art of Computer Programming}}

@article{Knut77a,
  author = {Donald E. Knuth and James H. Morris and Vaughan R. Pratt},
  title = {Fast Pattern Matching in Strings},
  journal = {SIAM Journal of Computing},
  volume = {6},
  pages = {323--350},
  year = {1977},
  month = jun,
  number = {2}}

@article{Knut84a,
  author = {Knuth, Donald Ervin},
  title = {Literate programming},
  journal = {The Computer Journal},
  volume = {27},
  pages = {97--111},
  publisher = {Oxford University Press},
  year = {1984},
  number = {2}}

@book{Knut86a,
  author = {D.E. Knuth},
  title = {The TexBook},
  publisher = {Addison Wesley},
  year = {1986}}

@book{Knut92a,
  author = {Donald E. Knuth},
  title = {Literate Programming},
  publisher = {Stanford, California: Center for the Study of Language and Information},
  year = {1992},
  isbn = {0-937073-80-6}}

@inproceedings{Ko04a,
  author = {Andrew J. Ko and Brad A. Myers},
  title = {Designing the whyline: a debugging interface for asking questions about program behavior},
  booktitle = {Proceedings of the 2004 conference on Human factors in computing systems},
  pages = {151--158},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/985692.985712}}

@inproceedings{Ko08a,
  author = {Ko, Andrew J. and Myers, Brad A.},
  title = {Debugging Reinvented: Asking and Answering Why and Why Not Questions about Program Behavior},
  booktitle = {In Proceedings of the 30th International Conference on Software Engineering, ICSE 08},
  year = {2008}}

@inproceedings{KoAu05a,
  author = {Andrew J. Ko and Htet Aung and Brad A. Myers},
  title = {Eliciting design requirements for maintenance-oriented IDEs: a detailed study of corrective and perfective maintenance tasks},
  booktitle = {ICSE '05: Proceedings of the 27th international conference on Software engineering},
  pages = {125--135},
  year = {2005},
  doi = {10.1145/1062455.1062492},
  isbn = {1-59593-963-2},
  location = {St. Louis, MO, USA}}

@inproceedings{Koba13a,
  author = {Kobayashi, Kenichi and Kamimura, Manabu and Yano, Keisuke and Kato, Koki and Matsuo, Akihiko},
  title = {SArF map: Visualizing software architecture from feature and layer viewpoints},
  booktitle = {2013 21st International Conference on Program Comprehension (ICPC)},
  pages = {43--52},
  year = {2013},
  organization = {IEEE}}

@techreport{Koba92a,
  author = {Naoki Kobayashi and Akinori Yonezawa},
  title = {Asynchronous Communication Model Based on Linear Logic},
  year = {1992},
  institution = {Dept. of Computer Science, University of Tokyo},
  month = jul,
  number = {92-5},
  type = {TR}}

@inproceedings{Koba96a,
  author = {Naoki Kobayashi and Benjamin C. Pierce and David N. Turner},
  title = {Linearity and the Pi-Calculus},
  booktitle = {Conference Record of {POPL}~'96},
  pages = {358--371},
  publisher = {ACM Press},
  year = {1996},
  url = {http://www.dcs.gla.ac.uk/~dnt/KobayashiPierceTurner96.ps.gz},
  month = jan}

@techreport{Kobe04a,
  author = {Markus Kobel},
  title = {{VisClim} --- Visualisation of Climatological Data},
  year = {2004},
  url = {http://scg.unibe.ch/archive/projects/Kobe04a.pdf},
  abstract = {In this project, we developed a tool for generating
videosequences from geographical data (temperature,
sea level pressure, 500hPa geopot., ...). The
customer for this application (called VisClim) is
the Climatology/Meteorology Research Group (Climet)
from the Institute of Geography of the University of
Bern. They maintain a database which contains earth
science data for the time span from 1500 until
today. VisClim is able to load netCDF files and
generate videosequences from the data in these
files.},
  institution = {University of Bern},
  month = jan,
  type = {Informatikprojekt}}

@mastersthesis{Kobe05a,
  author = {Markus Kobel},
  title = {Parsing by Example},
  year = {2005},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Kobe05a.pdf},
  abstract = {We live in a world where we are surrounded with
information technology. The software systems around
us are countless. All of those systems have been
written once and must be maintained today. While a
system evolves it becomes difficult to maintain. We
use reengineering tools today to simplify
maintenance tasks. With the support of such tools we
can change the form of software systems in a way
that makes them easier to analyze. Before we can use
any reengineering tool with a software system we
must reverse engineer that system. To reverse
engineer a software system means that we need to
build a model from the system. This model represents
our system in a more abstract way than the source
code itself does. The way from the source code to
the model is often a problem. If a reengineering
tool supports a specific model the maintainers of
that tool must provide a parser for every
programming language they want to support. Such
parsers translate source code written in a
particular language into a model. There are so many
languages used in systems today that it is not
possible to support all of them. Additionally, the
languages themselves evolve and so we need parsers
for every version and every dialect of a programming
language. There are a number of approaches to solve
that problem (for example fuzzy parsing). Most of
these approaches are not flexible enough for today's
needs: We cannot adapt them to another programming
language or if we can we need a lot of knowledge
about the language and about the whole parsing
technique. Depending on the technique that we use we
must write a parser or at least a grammar as a basis
for a parser generator. In most of the cases this is
a difficult and time-consuming task. Our idea is to
build an application that generates parsers based on
mapping examples. A mapping example is a section in
the source code to which we assign an element in our
target model. Based on these examples, our
application builds grammars and generates a parser.
If the parser fails to parse some code our
application asks the user to provide more examples.
This approach is flexible enough to work with a
software system written in an arbitrary programming
language. The user does not need to have knowledge
about parsing. However, he should be able to
recognize the elements in the source code that he
wants to map on the elements in the target model. We
prove the flexibility of that approach with our
reference implementation called CodeSnooper. This
application works with any input. As target model we
take the FAMIX model that is used by the MOOSE
reengineering environment.},
  month = apr,
  type = {Diploma thesis}}

@book{Kobi97a,
  author = {James G. Kobielus},
  title = {Workflow Strategies},
  publisher = {IDG Books},
  year = {1997},
  isbn = {0-7645-3012-7}}

@proceedings{Kobr98a,
  title = {EDOC '98 Proceedings},
  publisher = {IEEE},
  year = {1998},
  editor = {Cris Kobryn},
  isbn = {0-7803-5158-4}}

@book{Koch03a,
  author = {Stephen G. Kochan},
  title = {Programming in Objective-C (Developer's Library)},
  publisher = {Sams},
  year = {2003},
  isbn = {0672325861}}

@inproceedings{Koch94a,
  author = {S. Kochhar},
  title = {On Providing a High-Level {C} Interface for an Object-Oriented, {C}++ System},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {232--247},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@book{Koen07a,
  author = {Dierk K\"onig},
  title = {Groovy in action},
  publisher = {Manning},
  year = {2007},
  isbn = {1-932394-85-2}}

@article{Koen95a,
  author = {Andrew Koenig},
  title = {Patterns and antipatterns},
  journal = {Journal of Object-Oriented Programming},
  year = {1995},
  misc = {March-April},
  month = mar}

@article{Kohl81a,
  author = {Walter H. Kohler},
  title = {A Survey of Techniques for Synchronization and Recovery in Decentralized Computer Systems},
  journal = {ACM Computing Surveys},
  volume = {13},
  pages = {149--183},
  year = {1981},
  month = jun,
  number = {2}}

@article{Kohl86a,
  author = {Eugene E. Kohlbecker and Daniel P. Friedman and Matthias Felleisen and Bruce Duba},
  title = {Hygienic macro expansion},
  journal = {Symposium on LISP and Functional Programming},
  pages = {151--161},
  year = {1986},
  month = aug}

@inproceedings{Kohl87a,
  author = {E. E. Kohlbecker and M. Wand},
  title = {Macro-by-Example: Deriving Syntactic Transformations fron their Specification},
  booktitle = {Conference record of the 14th ACM Symposium on Principles of Programming Languages (POPL)},
  pages = {77--84},
  year = {1987}}

@inproceedings{Kohl98a,
  author = {Gerd Kohler and Heinrich Rust and Frank Simon},
  title = {Assessment of Large Object-Oriented Software Systems: {A} Metrics Based Process},
  booktitle = {Object-Oriented Technology (ECOOP '98 Workshop Reader)},
  volume = {1543},
  pages = {250--251},
  publisher = {Springer-Verlag},
  year = {1998},
  editor = {Serge Demeyer and Jan Bosch},
  series = {LNCS}}

@inproceedings{Koll01a,
  author = {Ralf Kollman and Martin Gogolla},
  title = {Capturing Dynamic Program Behaviour with UML Collaboration Diagrams},
  booktitle = {Proceedings 5th European Conference on SOftware Maintenance and Reengineering (CSMR 2001)},
  publisher = {IEEE Computer Society},
  year = {2001}}

@article{Kolm76a,
  author = {Kolm, S.-C.},
  title = {{Unequal inequalities I}},
  journal = {Journal of Economic Theory},
  volume = {12},
  pages = {416-442},
  year = {1976},
  number = {3}}

@inproceedings{Kols98a,
  author = {U. K{\"o}lsch},
  title = {Object-Oriented Re-Engineering of Information Systems in a Hetegeneous Distributed Environment},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {104--115},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Komo01a,
  author = {Raghavan Komondoor and Susan Horwitz},
  title = {Tool Demonstration: Finding Duplicated Code Using Program Dependences},
  booktitle = {Proc. European Symposium on Programming (ESOP)},
  volume = {2028},
  pages = {383--386},
  publisher = {Springer-Verlag},
  year = {2001},
  url = {http://www.cs.wisc.edu/~raghavan/esop01-demo.pdf},
  series = {LNCS}}

@inproceedings{Komo01b,
  author = {Raghavan Komondoor and Susan Horwitz},
  title = {Using slicing to identify duplication in source code},
  booktitle = {Proceedings of the 8th International Symposium on Static Analysis (SAS)},
  publisher = {Springer-Verlag},
  year = {2001},
  url = {http://www.cs.wisc.edu/~raghavan/sas01.pdf},
  address = {Paris, France},
  month = jul}

@techreport{Komo02a,
  author = {Raghavan Komondoor and Susan Horwitz},
  title = {Eliminating Duplication in Source Code via Procedure Extraction},
  year = {2002},
  url = {http://www.cs.wisc.edu/~raghavan/pldi03-paper.pdf},
  institution = {UW-Madison Dept. of Computer Sciences},
  month = dec,
  number = {1461}}

@inproceedings{Kong07a,
  author = {Kong, Deguang and Zheng, Quan and Chen, Chao and Shuai, Jianmei and Zhu, Ming},
  title = {ISA: a Source Code Static Vulnerability Detection System Based on Data Fusion},
  booktitle = {International Conference on Scalable Information Systems},
  pages = {1--7},
  year = {2007}}

@article{Koni06a,
  author = {Alexander K\"onigs and Andy Sch\"urr},
  title = {Tool Integration with Triple Graph Grammars - A Survey},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {148},
  pages = {113 - 150},
  year = {2006},
  doi = {10.1016/j.entcs.2005.12.015},
  abstract = {Nowadays, typical software and system engineering projects in various industrial sectors (automotive, telecommunication, etc.) involve hundreds of developers using quite a number of different tools. Thus, the data of a project as a whole is distributed over these tools. Therefore, it is necessary to make the relationships of different tool data repositories visible and keep them consistent with each other. This still is a nightmare due to the lack of domain-specific adaptable tool and data integration solutions which support maintenance of traceability links, semi-automatic consistency checking as well as update propagation. Currently used solutions are usually hand-coded one-way transformations between pairs of tools. In this article we present a rule-based approach that allows for the declarative specification of data integration rules. It is based on the formalism of triple graph grammars and uses directed graphs to represent MOF-compliant (meta) models. As a result we give an answer to OMG's request for proposals for a MOF-compliant queries, views, and transformation (QVT) approach from the model driven application development (MDA) field.},
  issn = {1571-0661},
  number = {1}}

@inproceedings{Kono96a,
  author = {Kenji Kono and Kazuhiko Kato and Takashi Masuda},
  title = {An Implementation Method of Migratable Distributed Objects Using an {RPC} Technique Integrated with Virtual Memory Management},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {295--315},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@techreport{Kons88a,
  author = {Dimitri Konstantas and Oscar Nierstrasz and Michael Papathomas},
  title = {An Implementation of Hybrid, a Concurrent Object-Oriented Language},
  pages = {61--105},
  year = {1988},
  url = {http://scg.unibe.ch/archive/osg/Kons88aHybridImplementation.pdf http://cuiwww.unige.ch/OSG/publications/OO-articles/Dimitri/hybridImplementation.pdf},
  abstract = {This paper is a report on a prototype implementation
of Hybrid, a strongly-typed, concurrent,
object-oriented language. The implementation we
describe features a compile-time system for
translating Hybrid object type definitions into C, a
run-time system for supporting communication, obc
and object persistence, and a type manager that
mediates between the two.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Active Object Environments}}

@techreport{Kons90a,
  author = {Dimitri Konstantas},
  title = {A Dynamically Scalable Distributed Object-Oriented System},
  pages = {245--254},
  year = {1990},
  abstract = {We present a model of a distributed system that
preserves the personal aspects of today's advanced
personal workstations. Its advantages over
conventional distributed systems are described, and
design issues are presented. Finally, we sketch the
extensions needed to convert the object oriented
language and system, Hybrid, to the new distributed
system model.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@techreport{Kons91a,
  author = {Dimitri Konstantas},
  title = {Cell: {A} Model for Strongly Distributed Object Based Systems},
  pages = {225--237},
  year = {1991},
  abstract = {Cell, a model for strongly Distributed Object Based
systems is discussed. Its components, the nucleus
and the membrane, are presented and their
characteristics are described. The notions of
trading and type transparency in the context of the
Cell model are described and issues related to their
design and implementation are presented.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@inproceedings{Kons91b,
  author = {Joseph A. Konstan and Lawrence A. Rowe},
  title = {Developing a {GUIDE} Using Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {75--88},
  year = {1991},
  month = nov}

@inproceedings{Kons91c,
  author = {Dimitri Konstantas},
  title = {Design Issues of a Strongly Distributed Object Based System},
  booktitle = {Proceedings of 2nd IEEE International Workshop for Object-Orientation in Operating Systems (I-WOOOS '91)},
  pages = {156--163},
  year = {1991},
  misc = {Oct. 17-18},
  abstract = {Cell, a model for strongly Distributed Object Based
systems is discussed. Its components, the nucleus
and the membrane, are presented and their
characteristics are described. The notions of
trading and type transparency in the context of the
Cell model are described and issues related to their
design and implementation are presented.},
  address = {Palo-Alto},
  month = oct}

@techreport{Kons92a,
  author = {Dimitri Konstantas},
  title = {Hybrid Update},
  pages = {109--118},
  year = {1992},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/Dimitri/hybridUpdate.pdf},
  abstract = {In order to improve the usability of the first
prototype implementation of the Hybrid language we
have introduced a number of changes to both the
language and the system. This way features that were
vaguely or not at all mentioned in the original
language design were added, bugs were corrected and
better run time facilities were introduced. The
modifications and extensions include the
introduction of versioning, type operations, a
revised abstract type specification, dynamic loading
and more portable run-time support system.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@techreport{Kons92b,
  author = {Dimitri Konstantas},
  title = {The Implementation of the Hybrid Cell},
  pages = {119--136},
  year = {1992},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/Dimitri/cellImplemntation.pdf},
  abstract = {The Cell is a framework for the design of strongly
distributed object based systems that preserves the
autonomy of the nodes. The Hybrid system was
transformed to a first cell prototype with the
introduction of a membrane providing the services of
Type Matching, Object Mapping and Connection
Trading. A Type Matching language was designed and
the connection and trading protocols were defined},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@inproceedings{Kons93a,
  author = {Dimitri Konstantas},
  title = {Object-Oriented Interoperability},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {80--102},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/Dimitri/objectOrientedInterop.pdf},
  abstract = {Object Oriented Interoperability is an extension and
generalization of the Procedure Oriented
Interoperability approaches taken in the past. It
provides an interoperability support frame by
considering the object as the basic interoperation
unit. This way interoperation is based on higher
level abstractions and it is independent of the
specific interface through which a service is used.
A prototype implementation demonstrates both the
feasibility of the ideas and the related
implementation issues.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Kons93b,
  author = {Dimitri Konstantas},
  title = {Hybrid Cell: An Implementation of an Object Based Strongly Distributed System},
  booktitle = {Proceedings of the International Symposium on Autonomous Decentralized Systems --- ISADS 93},
  pages = {52--61},
  year = {1993},
  misc = {March 30},
  abstract = {The Cell is a framework for the design of strongly
distributed object based systems that preserves the
autonomy of the nodes. The Hybrid system was
transformed to a first cell prototype with the
introduction of a membrane providing the services of
Type Matching, Object Mapping and Connection
Trading. A Type Matching language was designed and
the connection and trading protocols were defined.},
  address = {Kawasaki, Japan},
  month = mar}

@phdthesis{Kons93c,
  author = {Dimitri Konstantas},
  title = {Cell: {A} Framework for a Strongly Distributed Object Based System},
  year = {1993},
  school = {Dept. of Computer Science, University of Geneva},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/Dimitri/ThesisKonstantas.pdf},
  abstract = {Two of the most important problems that open
distributed systems face in large heterogeneous
networks are the scalability of the underlying
mechanisms and the interoperation of the different
applications. In this thesis we introduce the Cell,
a framework for the design of a scalable Strongly
Distributed Object Based System that supports a high
level of interoperation between the different
applications. The basic element in the Cell
framework is a cell which is composed of membrane
and a nucleus. The membrane encapsulates the nucleus
and provides support for all communication with the
external world while the nucleus manages all local
resources. A high level interoperation between the
applications of the different cells is achieved with
the support by the membrane of Object Oriented
Interoperability. A prototype implementation of a
cell demonstrates the ideas and concepts of the Cell
framework and Object Oriented Interoperability.},
  number = {no. 2598)},
  type = {{Ph.D}. Thesis}}

@incollection{Kons95a,
  author = {Dimitri Konstantas},
  title = {Interoperation of Object-Oriented Applications},
  booktitle = {Object-Oriented Software Composition},
  pages = {69--95},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {One of the important advantages of the
object-oriented design and development methodology
is the ability to reuse existing software modules.
However the introduction of many programming
languages with different syntax, semantics and/or
paradigms has created the need for a consistent
interlanguage interoperability support framework. We
present a brief overview of the most characteristic
interoperability support methods and frameworks
allowing the access and reuse of objects from
different programming environments and focus on the
interface bridging object-oriented interoperability
support approach.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@incollection{Kont10a,
  author = {Kontogiannis, Kostas and Martin, Johannes and Wong, Kenny and Gregory, Richard and M{\"u}ller, Hausi and Mylopoulos, John},
  title = {Code migration through transformations: An experience report},
  booktitle = {CASCON First Decade High Impact Papers},
  pages = {201--213},
  publisher = {Unknown},
  year = {2010}}

@inproceedings{Kont95a,
  author = {Kostas Kontogiannis and M. Galler and R. DeMori},
  title = {Detecting Code Similarity using Patterns},
  booktitle = {Working Notes of the Third Workshop on AI and Software Engineering: Breaking the Toy Mold (AISE)},
  pages = {68--73},
  year = {1995},
  url = {citeseer.ist.psu.edu/kontogiannis95detecting.html},
  month = aug}

@article{Kont96a,
  author = {K. Kontogiannis and R. DeMori and E. Merlo and M. Galler and M. Bernstein},
  title = {Pattern Matching for Clone and Concept Detection},
  journal = {Journal of Automated Software Engineering},
  volume = {3},
  pages = {77--108},
  year = {1996},
  doi = {10.1007/BF00126960}}

@inproceedings{Kont97a,
  author = {Kostas Kontogiannis},
  title = {Evaluation Experiments on the Detection of Programming Patterns Using Software Metrics},
  booktitle = {Proceedings Fourth Working Conference on Reverse Engineering},
  pages = {44--54},
  publisher = {IEEE Computer Society},
  year = {1997},
  editor = {Ira Baxter and Alex Quilici and Chris Verhoef}}

@inproceedings{Kont98,
  author = {Kontogiannis, K. and Martin, J. and Wong, K. and Gregory, R. and M\"{u}ller, H. and Mylopoulos, J.},
  title = {Code Migration through Transformations: An Experience Report},
  booktitle = {Proceedings of the 1998 Conference of the Centre for Advanced Studies on Collaborative Research},
  pages = {13},
  publisher = {IBM Press},
  year = {1998},
  abstract = {One approach to dealing with spiraling maintenance costs, manpower shortages and frequent breakdowns for legacy code is to "migrate" the code into a new platform and/or programming language. The objective of this paper is to explore the feasibility of semiautomating such a migration process in the presence of performance and other constraints for the migrant code. In particular, the paper reports on an experiment involving a medium-size software system written in PL/IX. Several modules of the system were migrated to C++, first by hand and then through a semi-automatic tool. After discovering that the migrant code was performing up to 50% slower than the original, a second migration effort was conducted which improved the performance of the migrant code substantially. The paper reports on the transformation techniques used by the transformation process and the effectiveness of the prototype tools that were developed. In addition, the paper presents preliminary results on the evaluation of the experiment.},
  location = {Toronto, Ontario, Canada},
  numpages = {13},
  series = {CASCON '98}}

@inproceedings{Konz04a,
  author = {Ned Konz},
  title = {Connectors: A framework for building graphical applications in Squeak},
  booktitle = {IEEE C5: The Second International Conference on Creating, Connecting and Collaborating through Computing},
  volume = {2},
  pages = {96--103},
  year = {2004}}

@book{Koom04a,
  author = {Jonathan G. Koomey},
  title = {Turning Numbers into Knowledge},
  publisher = {Analytics Press},
  year = {2004}}

@book{Kopk99a,
  author = {Helmut Kopka and Patrick W. Daly},
  title = {A Guide To Latex},
  publisher = {Addison Wesley},
  year = {1999},
  isbn = {0-201-39825-7}}

@article{Kopp96a,
  author = {Rainer Koppler},
  title = {A Systematic Approach to Fuzzy Parsing},
  journal = {Software: Practice and Experience},
  volume = {27},
  pages = {637--649},
  year = {1996},
  number = {6}}

@article{Kore88a,
  author = {B. Korel and J. Laski},
  title = {Dynamic program slicing},
  journal = {Information Processing Letters},
  volume = {29},
  pages = {155--163},
  year = {1988},
  number = {3}}

@inproceedings{Kore97a,
  author = {Bogdan Korel and J\"urgen Rilling},
  title = {Dynamic Program Slicing in Understanding of Program Execution},
  booktitle = {5th International Workshop on Program Comprehension (WPC '97)},
  pages = {80--85},
  year = {1997}}

@article{Kore98a,
  author = {Bogdan Korel and Juergen Rilling},
  title = {Dynamic program slicing methods},
  journal = {Information {\&} Software Technology},
  volume = {40},
  pages = {647--659},
  year = {1998},
  doi = {10.1016/S0950-5849(98)00089-5},
  number = {11-12}}

@book{Kori02a,
  author = {Gene Korienek and Tom Wrensch and Doug Dechow},
  title = {Squeak --- A Quick Trip to Objectland},
  publisher = {Addison Wesley},
  year = {2002}}

@book{Kort94a,
  author = {Henry F. Korth and Abraham Silberschatz},
  title = {Database System Concepts},
  publisher = {McGraw Hill},
  year = {1994},
  isbn = {0-07-100804-7}}

@misc{Kosa09a,
  author = {Kosara, Robert},
  title = {``If your project is still on sourceforge, move it to {Google Code}, github, or bitbucket. {Sourceforge} is becoming the {MySpace} of open source.''},
  year = {2009},
  url = {http://twitter.com/eagereyes/status/3434857667},
  howpublished = {http://twitter.com/eagereyes/status/3434857667, archived at http://www.webcitation.org/5ogz37rBJ},
  month = aug}

@phdthesis{Kosc00a,
  author = {Rainer Koschke},
  title = {Atomic Architectural Component Recovery for Program Understanding and Evolution},
  year = {2000},
  school = {Universit\"at Stuttgart},
  url = {http://www.informatik.uni-stuttgart.de/ifi/ps/bauhaus/papers/koschke.thesis.2000.html}}

@inproceedings{Kosc00b,
  author = {Rainer Koschke and Thomas Eisenbarth},
  title = {A Framework for Experimental Evaluation of Clustering Techniques},
  booktitle = {Proceedings of the International Workshop on Program Comprehension, IWPC'2000},
  year = {2000},
  month = jun,
  organization = {IEEE}}

@inproceedings{Kosc02a,
  author = {Rainer Koschke},
  title = {Atomic Architectural Component Recovery for Program Understanding and Evolution},
  booktitle = {Proceedings of the International Conference on Software Maintenance},
  year = {2002},
  doi = {10.1109/ICSM.2002.1167807},
  month = oct}

@article{Kosc03a,
  author = {Rainer Koschke},
  title = {Software visualization in software maintenance, reverse engineering, and re-engineering: a research survey},
  journal = {Journal of Software Maintenance and Evolution: Research and Practice},
  volume = {15},
  pages = {87--109},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2003},
  doi = {10.1002/smr.270},
  issn = {1040-550X},
  number = {2}}

@inproceedings{Kosc03b,
  author = {Rainer Koschke and Daniel Simon},
  title = {Hierarchical Reflexion Models},
  booktitle = {Proceedings of the 10th Working Conference on Reverse Engineering ({WCRE} 2003)},
  pages = {36},
  publisher = {IEEE Computer Society},
  year = {2003},
  isbn = {0-7695-2027-8}}

@article{Kosc05a,
  author = {Rainer Koschke and Jochen Quante},
  title = {On Dynamic Feature Location},
  journal = {International Conference on Automated Software Engineering, 2005},
  pages = {86--95},
  publisher = {ACM Press},
  year = {2005}}

@incollection{Kosc08a,
  author = {Koschke, Rainer},
  title = {Identifying and Removing Software Clones},
  chapter = {2},
  booktitle = {Software Evolution},
  pages = {15--36},
  publisher = {Springer Berlin Heidelberg},
  year = {2008}}

@inproceedings{Kosc98a,
  author = {Rainer Koschke and J.-F. Girard and M. W{\"u}rthner},
  title = {An Intermediate Representation for Reverse Engineering Analyses},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {241--251},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Kosc99a,
  author = {R. Koschke},
  title = {An Incremental Semi-Automatic Method for Component Recovery},
  booktitle = {Working Conference on Reverse Engineering},
  pages = {256-},
  year = {1999},
  url = {http://citeseer.nj.nec.com/koschke99incremental.html}}

@inproceedings{Kosk03a,
  title={Software maintenance cost estimation and modernization support},
  author={Koskinen, Jussi and Lahtonen, Henna and Tilus, Tero},
  Booktitle={ELTIS-project},
  year={2003},
  publisher={University of Jyv{\"a}skyl{\"a}}
}

@article{Kosk04a,
  author = {Jussi Koskinen and Airi Salminen and Jukka Paakki},
  title = {Hypertext support for the information needs of software maintainers},
  journal = {Journal on Software Maintenance Evolution: Research and Practice},
  volume = {16},
  pages = {187--215},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2004},
  doi = {10.1002/smr.292},
  address = {New York, NY, USA},
  issn = {1532-060X},
  number = {3}}

@article{Kosk10a,
  author = {Koskinen, Jussi},
  title = {Software maintenance costs},
  journal = {Jyv{\"a}skyl{\"a}: University of Jyv{\"a}skyl{\"a}},
  year = {2010}}

@inproceedings{Kosk82a,
  author = {K. Koskimies and K-J. R{\"a}ih{\"a} and M. Sarjakoski},
  title = {Compiler Construction Using Attribute Grammars},
  booktitle = {ACM SIGPLAN Notices, Proceedings 1982 Symposium on Compiler Construction},
  volume = {17},
  pages = {153--159},
  year = {1982},
  month = jun}

@inproceedings{Kosk84a,
  author = {K. Koskimies},
  title = {A Specification Language for One-Pass Semantic Analysis},
  booktitle = {ACM SIGPLAN Notices, Proceedings 1984 Symposium on Compiler Construction},
  volume = {19},
  pages = {179--189},
  year = {1984},
  month = jun}

@article{Kosk94a,
  author = {Kai Koskimies and H. M{\"o}ssenb{\"o}ck},
  title = {Automatic Synthesis of State Machines from Trace Diagrams},
  journal = {Software Practice and Experience},
  volume = {24},
  pages = {643--658},
  publisher = {IEEE},
  year = {1994},
  month = jul,
  number = {7}}

@misc{Kosk95a,
  author = {Kai Koskimies and Hanspeter M{\"o}ssenb{\"o}ck},
  title = {Designing a Framework by Stepwise Generalization},
  year = {1995},
  note = {To appear, ESEC 1995}}

@inproceedings{Kosk96a,
  author = {Kai Koskimies and H. M{\"o}ssenb{\"o}ck},
  title = {Scene: Using Scenario Diagrams and Active Test for Illustrating Object-Oriented Programs},
  booktitle = {Proceedings of ICSE-18},
  pages = {366--375},
  publisher = {IEEE},
  year = {1996},
  month = mar}

@article{Kosk98a,
  author = {Kai Koskimies and Tarja Syst\"{a} and Jyrki Tuomi and Tatu M\"{a}nnisto\"{o}},
  title = {Automated Support for Modeling OO Software},
  journal = {IEEE Software},
  volume = 15,
  pages = {87--94},
  year = {1998},
  misc = {January/February},
  month = jan,
  number = 1}

@techreport{Kost01a,
  author = {Rainer Koster and Andrew P. Black and Jie Huang and Jonathan Walpole and Calton Pu},
  title = {Thread Transparency in Information Flow Middleware},
  year = {2001},
  address = {Oregon},
  institution = {{OGI}, School of Science and Engineering},
  number = {{CSE}-01-004}}

@inproceedings{Koste00a,
  author = {Rainer Koster and Thorsten Kramp},
  title = {Loadable Smart Proxies and Native-Code Shipping for {CORBA}},
  booktitle = {Trends in Distributed Systems: Towards a Universal Service Market, Third International {IFIP}/{GI} Working Conference, {USM} 2000, Munich, Germany, September 12-14, 2000, Proceedings},
  volume = {1890},
  pages = {202--213},
  publisher = {Springer},
  year = {2000},
  editor = {Claudia Linnhoff-Popien and Heinz-Gerd Hegering},
  isbn = {3-540-41024-4},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Koth06a,
  author = {Jay Kothari and Trip Denton and Spiros Mancoridis and Ali Shokoufandeh},
  title = {On Computing the Canonical Features of Software Systems},
  booktitle = {13th IEEE Working Conference on Reverse Engineering ({WCRE} 2006)},
  year = {2006},
  month = oct}

@inproceedings{Koth07a,
  author = {Nupur Kothari and Ramakrishna Gummadi and Todd Millstein and Ramesh Govindan},
  title = {Reliable and efficient programming abstractions for wireless sensor networks},
  booktitle = {PLDI '07: Proceedings of the 2007 ACM SIGPLAN conference on Programming language design and implementation},
  pages = {200--210},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1250734.1250757},
  address = {New York, NY, USA},
  isbn = {978-1-59593-633-2},
  location = {San Diego, California, USA}}

@inproceedings{Kots17a,
  author = {Kotselidis, Christos and Nisbet, Andy and Zakkak, Foivos S and Foutris, Nikos},
  title = {Cross-ISA debugging in meta-circular {VM}s},
  booktitle = {Proceedings of International Workshop on Virtual Machines and Intermediate Languages (VMIL'17)},
  pages = {1--9},
  year = {2017},
  doi = {10.1145/3141871.3141872}}

@inproceedings{Kotz05a,
  author = {Kotzmann, Thomas and M\"{o}ssenb\"{o}ck, Hanspeter},
  title = {Escape Analysis in the Context of Dynamic Compilation and Deoptimization},
  booktitle = {Proceedings of the 1st ACM/USENIX International Conference on Virtual Execution Environments},
  pages = {111-120},
  publisher = {Association for Computing Machinery},
  year = {2005},
  url = {https://doi.org/10.1145/1064979.1064996},
  doi = {10.1145/1064979.1064996},
  abstract = {In object-oriented programming languages, an object is said to escape the method or thread in which it was created if it can also be accessed by other methods or threads. Knowing which objects do not escape allows a compiler to perform aggressive optimizations.This paper presents a new intraprocedural and interprocedural algorithm for escape analysis in the context of dynamic compilation where the compiler has to cope with dynamic class loading and deoptimization. It was implemented for Sun Microsystems' Java HotSpot client compiler and operates on an intermediate representation in SSA form. We introduce equi-escape sets for the efficient propagation of escape information between related objects. The analysis is used for scalar replacement of fields and synchronization removal, as well as for stack allocation of objects and fixed-sized arrays. The results of the interprocedural analysis support the compiler in inlining decisions and allow actual parameters to be allocated on the caller stack.Under certain circumstances, the Java HotSpot VM is forced to stop executing a method's machine code and transfer control to the interpreter. This is called deoptimization. Since the interpreter does not know about the scalar replacement and synchronization removal performed by the compiler, the deoptimization framework was extended to reallocate and relock objects on demand.},
  address = {New York, NY, USA},
  isbn = {1595930477},
  keywords = {synchronization removal, just-in-time compilation, deoptimization, Java, optimization, scalar replacement, stack allocation, escape analysis},
  location = {Chicago, IL, USA},
  numpages = {10},
  series = {VEE '05}}

@inproceedings{Kotz07a,
  author = {Kotzmann, Thomas and Mossenbock, Hanspeter},
  title = {Run-Time Support for Optimizations Based on Escape Analysis},
  booktitle = {International Symposium on Code Generation and Optimization (CGO'07)},
  pages = {49-60},
  year = {2007},
  doi = {10.1109/CGO.2007.34},
  abstract = {We implemented a new escape analysis algorithm for Sun Microsystems' Java HotSpot VM. The results are used to replace objects with scalar variables, to allocate objects on the stack, and to remove synchronization. This paper deals with the representation of optimized objects in the debugging information and with reallocation and garbage collection support for a safe execution of optimized methods. Assignments to fields of parameters that can refer to both stack and heap objects are associated with an extended write barrier which skips card marking for stack objects. The traversal of objects during garbage collection uses a wrapper that abstracts from stack objects and presents their pointer fields as root pointers to the garbage collector},
  month = mar}

@inproceedings{Kous05a,
  author = {Sen, Koushik and Marinov, Darko and Agha, Gul},
  title = {CUTE: A Concolic Unit Testing Engine for C},
  booktitle = {Proceedings of the European Software Engineering Conference (ESEC)},
  pages = {263-272},
  publisher = {Association for Computing Machinery},
  year = {2005},
  doi = {10.1145/1095430.1081750},
  address = {New York, NY, USA},
  issn = {0163-5948}}

@manual{Kout96a,
  author = {Eleftherios Koutsofios and Stephen C. North},
  title = {Drawing graphs with dot},
  address = {Murray Hill, NJ},
  organization = {AT \& T Bell Laboratories}}

@inproceedings{Kove93a,
  author = {Larry Koved and Wayne L. Wooten},
  title = {{GROOP}: An Object-Oriented Toolkit for Animated 3D Graphics},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {309--325},
  year = {1993},
  month = oct}

@book{Koza92a,
  author = {John R. Koza},
  title = {Genetic programming: {O}n the programming of computers by natural selection},
  publisher = {MIT Press},
  year = {1992},
  address = {Cambridge, Mass.},
  isbn = {0-262-11170-5}}

@article{Koza92b,
  author = {Kozaczynski, Wojtek and Ning, Jim and Engberts, Andre},
  title = {Program Concept Recognition and Transformation},
  journal = {IEEE Transactions on Software Engineering},
  volume = {18},
  pages = {1065--1075},
  year = {1992},
  number = {12}}

@article{Koza93a,
  author = {Wojtek Kozaczynski and Annie Kuntzmann-Combelles},
  title = {What It Takes to Make {OO} Work},
  journal = {IEEE Software (Special Issue on "Making O-O Work")},
  volume = {10},
  pages = {20--23},
  year = {1993},
  month = jan,
  number = {1}}

@inproceedings{Koze93a,
  author = {Dexter Kozen and Jens Palsberg and Michael I. Schwartzbach.},
  title = {Efficient Recursive Subtyping},
  booktitle = {Proceedings POPL '93},
  pages = {419--428},
  year = {1993},
  url = {http://www.cs.purdue.edu/homes/palsberg/publications.html}}

@incollection{Kozo00,
  author = {M. Tatsubori and S. Chiba and M.-O. Killijian and K. Itano},
  title = {{OpenJava}: {A} Class-Based Macro System for {Java}},
  booktitle = {1st OOPSLA Workshop on Reflection and Software Engineering},
  volume = {1826},
  pages = {117--133},
  publisher = {Springer Verlag},
  year = {2000},
  series = {LNCS}}

@book{Kozo02a,
  author = {Kozo Sugiyama},
  title = {Graph Drawing and Applications for Software and Knowledge Engineers},
  publisher = {World Scientific},
  year = {2002},
  note = {received 10-06-2009}}

@article{Kozs08a,
  title={Use cases for refactoring in erlang},
  author={Kozsik, Tam{\'a}s and Cs{\"o}rnyei, Zolt{\'a}n and Horv{\'a}th, Zolt{\'a}n and Kir{\'a}ly, Roland and Kitlei, R{\'o}bert and L{\"o}vei, L{\'a}szl{\'o} and Nagy, Tam{\'a}s and T{\'o}th, Melinda and V{\'\i}g, Anik{\'o}},
  journal={Central European Functional Programming School: Second Summer School, CEFP 2007, Cluj-Napoca, Romania, June 23-30, 2007, Revised Selected Lectures 2},
  pages={250-285},
  year={2008},
  publisher={Springer}
}

@inproceedings{Krah07a,
  author = {Holger Krahn and Bernhard Rumpe and Steven V{\"o}lkel},
  title = {Integrated Definition of Abstract and Concrete Syntax for Textual Languages},
  booktitle = {Proceedings of MoDELS 2007},
  volume = {4735},
  pages = {286--300},
  publisher = {Springer Verlag},
  year = {2007},
  doi = {978-3-540-75209-7_20},
  isbn = {978-3-540-75208-0},
  series = {LNCS}}

@inproceedings{Krah08a,
  author = {Holger Krahn and Bernhard Rumpe and Steven V\"olkel},
  title = {{MontiCore}: Modular Development of Textual Domain Specific Languages},
  booktitle = {Proceedings of the 46th International Conference Objects, Models, Components, Patterns (TOOLS-Europe)},
  pages = {297--315},
  publisher = {Springer-Verlag},
  year = {2008},
  editor = {Richard Paige and Bertrand Meyer},
  location = {Zurich, Switzerland}}

@mastersthesis{Kraj03a,
  author = {Jacek Krajewski},
  title = {{QCR} \-- {A} Methodology for Software Evolution Analysis},
  year = {2003},
  school = {Information Systems Institute, Distributed Systems Group, Technical University of Vienna},
  misc = {15, April},
  month = apr}

@article{Krak90a,
  author = {Sacha Krakowiak and M. Meysembourg and H. Nguyen Van and Michel Riveill and C. Roisin and X. Rousset de Pina},
  title = {Design and Implementation of an Object-Oriented Strongly Typed Language for Distributed Applications},
  journal = {Journal of Object-Oriented Programming},
  volume = {3},
  pages = {11--22},
  year = {1990},
  month = sep,
  number = {3}}

@inproceedings{Kral97a,
  author = {Andreas Krall and Jan Vitek},
  title = {On Extending {Java}},
  booktitle = {Proc. of The Joint Modular Languages Conference JMLC},
  year = {1997},
  address = {Linz, Austria}}

@article{Kram85a,
  author = {Jeff Kramer and Jeff Magee},
  title = {Dynamic Configuration for Distributed Systems},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {11},
  pages = {424--436},
  publisher = {IEEE Press},
  year = {1985},
  doi = {10.1109/TSE.1985.232231},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {4}}

@article{Kram89a,
  author = {Jeffrey Kramer and Jeff Magee and K. Ng},
  title = {Graphical Configuration Programming},
  journal = {IEEE Computer},
  volume = {22},
  pages = {53--65},
  year = {1989},
  doi = {10.1109/2.42014},
  month = oct,
  number = {10}}

@inproceedings{Kram89b,
  author = {Jeffrey Kramer and J. Magee and M. Sloman},
  title = {Configuration Support for System Description, Construction and Evolution},
  booktitle = {Proc 5th Int Workshop on Software Specification and Design},
  pages = {28--33},
  year = {1989},
  address = {Pittsburgh, Pennsylvania},
  month = may}

@inproceedings{Kram89c,
  author = {Jeffrey Kramer and Jeff Magee and K. Ng},
  title = {Graphical Support for Configuration Programming},
  booktitle = {Hawaii International Conference on System Sciences},
  pages = {860--870},
  year = {1989},
  month = jan}

@incollection{Kram90a,
  author = {J. Kramer and J. Magee and A. Finkelstein},
  title = {A Constructive Approach to the Design of Distributed Systems},
  booktitle = {Proc 10th Intl Conf on Distributed Computing Systems},
  pages = {580--587},
  publisher = {IEEE},
  year = {1990},
  month = jun}

@article{Kram90b,
  author = {Jeff Kramer and Jeff Magee},
  title = {The Evolving Philosophers Problem: Dynamic Change Management},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {16},
  pages = {1293--1306},
  publisher = {IEEE Press},
  year = {1990},
  doi = {10.1109/32.60317},
  address = {Piscataway, NJ, USA},
  number = {11}}

@inproceedings{Kram96a,
  author = {Christian Kramer and Lutz Prechelt},
  title = {Design {Recovery} by {Automated} {Search} for {Structural} {Design} {Patterns} in {Object}-{Oriented} {Software}},
  booktitle = {Proceedings of {WCRE} '96 (3rd Working Conference on Reverse Engineering)},
  pages = {208--216},
  publisher = {IEEE Computer Society Press},
  year = {1996},
  location = {Monterrey, California, USA},
  month = nov}

@inproceedings{Kram98a,
  author = {R. Kramer},
  title = {iContract -- The Java Design by Contract Tool},
  booktitle = {Proceedings of the Technology of Object-Oriented Languages and Systems (TOOLS-USA)},
  pages = {295-305},
  year = {1998}}

@inproceedings{Kran06a,
  author = {Kranz, Matthias and Rusu, Radu Bogdan and Maldonado, Alexis and Beetz, Michael and Schmidt, Albrecht},
  title = {A Player/Stage System for Context-Aware Intelligent Environments},
  booktitle = {UbiSys'06: Proceedings of the System Support for Ubiquitous Computing Workshop},
  pages = {1--7},
  year = {2006}}

@inproceedings{Kran07a,
  author = {Kranz, Matthias and Spiessl, Wolfgang and Schmidt, Albrecht},
  title = {Designing Ubiquitous Computing Systems for Sports Equipment},
  booktitle = {PerCom'07: Proceedings of the 5th International Conference on Pervasive Computing and Communications},
  pages = {79--86},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/PERCOM.2007.12}}

@article{Kras80a,
  author = {G. Krasner},
  title = {Machine Tongues {VIII}: the Design of a {Smalltalk} Music System},
  journal = {Computer Music Journal},
  volume = {4},
  year = {1980},
  number = {4}}

@book{Kras83a,
  author = {G. Krasner},
  title = {Smalltalk-80: Bits of History, Words of Advice},
  publisher = {Addison Wesley},
  year = {1983},
  address = {Reading, Mass.},
  isbn = {0-201-11669-3}}

@article{Kras88a,
  author = {G. E. Krasner and S. T. Pope},
  title = {A cookbook for using the model-view-controller user interface paradigm in {Smalltalk}-80},
  journal = {Journal of Object-Oriented Programming},
  volume = {1},
  pages = {26--49},
  year = {1988},
  month = aug,
  number = {3}}

@inproceedings{Krem03a,
  author = {Kremenek, Ted and Engler, Dawson},
  title = {Z-ranking: using statistical analysis to counter the impact of static analysis approximations},
  booktitle = {Proceedings of the 10th international conference on Static analysis},
  pages = {295--315},
  publisher = {Springer-Verlag},
  year = {2003},
  address = {Berlin, Heidelberg},
  isbn = {3-540-40325-6},
  location = {San Diego, CA, USA},
  numpages = {21},
  series = {SAS'03}}

@inproceedings{Krem04a,
  author = {Kremenek, Ted and Ashcraft, Ken and Yang, Junfeng and Engler, Dawson},
  title = {Correlation exploitation in error ranking},
  booktitle = {Proceedings of the 12th ACM SIGSOFT twelfth international symposium on Foundations of software engineering},
  pages = {83--93},
  publisher = {ACM},
  year = {2004},
  address = {New York, NY, USA},
  date-modified = {2012-01-16 15:36:40 +0000},
  isbn = {1-58113-855-5},
  location = {Newport Beach, CA, USA},
  numpages = {11},
  series = {SIGSOFT '04/FSE-12}}

@inproceedings{Kreu87a,
  author = {Wolfgang Kreutzer},
  title = {A Modeller's Workbench: Experiments in Object-Oriented Simulation},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {203--212},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@book{Krie92a,
  title = {Proceedings {ESOP}'92},
  volume = {582},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Rennes, France},
  editor = {B. Krieg-Bruckner},
  isbn = {3-540-55253-7},
  month = feb,
  series = {LNCS}}

@phdthesis{Krik99a,
  author = {Rene Krikhaar},
  title = {Software Architecture Reconstruction},
  year = {1999},
  school = {University of Amsterdam},
  url = {http://www.cs.vu.nl/~x/sar/sar.pdf}}

@inproceedings{Krik99b,
  author = {Ren\'e Krikhaar and Andr\'e Postma and Alex Sellink and Marc Stroucken and Chris Verhoef},
  title = {A Two-Phase Process for Software Architecture Improvement},
  booktitle = {Proceedings of International Conference on Software Maintenance ({ICSM}'99)},
  pages = {371},
  publisher = {IEEE Computer Society},
  year = {1999},
  address = {Washington, DC, USA},
  isbn = {0-7695-0016-1}}

@inproceedings{Krin01a,
  author = {Jens Krinke},
  title = {Identifying Similar Code with Program Dependence Graphs},
  booktitle = {Proceedings Eigth Working Conference on Reverse Engineering ({WCRE}'01)},
  pages = {301--309},
  year = {2001},
  doi = {10.1109/{WCRE}.2001.957835},
  month = oct,
  organization = {IEEE Computer Society}}

@inproceedings{Krin04a,
  author = {Jens Krinke},
  title = {Visualization of Program Dependence and Slices},
  booktitle = {Proceedings of the 20th IEEE International Conference on Software Maintenance ({ICSM}'04)},
  pages = {168--177},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/ICSM.2004.1357801},
  address = {Los Alamitos, CA, USA},
  issn = {1063-6773}}

@inproceedings{Krint01a,
  author = {Krintz, Chandra and Calder, Brad},
  title = {Using Annotations to Reduce Dynamic Optimization Time},
  booktitle = {Programming Language Design and Implementation},
  pages = {156--167},
  publisher = {ACM},
  year = {2001},
  address = {New York, NY, USA},
  numpages = {12},
  series = {PLDI '01}}

@book{Kris07a,
  author = {Shriram Krishnamurthi},
  title = {Programming Languages: Application and Interpretation},
  publisher = {Shriram Krishnamurthi},
  year = {2007},
  url = {http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/}}

@inproceedings{Kris07b,
  author = {Bent Bruun Kristensen and Ole Lehrmann Madsen and Birger Moller-Pedersen},
  title = {The when, why and why not of the {BETA} programming language},
  booktitle = {HOPL III: Proceedings of the third ACM SIGPLAN conference on History of programming languages},
  pages = {10-1--10-57},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1238844.1238854},
  address = {New York, NY, USA},
  isbn = {978-1-59593-766-X},
  location = {San Diego, California}}

@book{Kris82a,
  author = {Bent Bruun Kristensen and Ole Lehrmann Madsen and M{\/o}ller-Pedersen,Birger and Kristen Nygaard},
  title = {{BETA} project working notes 1-8},
  publisher = {Norwegian Computing Center, Oslo, Computer Sciences department, Aarhus University},
  year = {1982}}

@inproceedings{Kris83a,
  author = {Bent Bruun Kristensen and Ole Lehrmann Madsen and Birger M{\/o}ller-Pedersen and Kristen Nygaard},
  title = {From {SIMULA} 67 to {BETA}},
  booktitle = {Proceedings of the 11th SIMULA 67 User's Conference},
  year = {1983},
  address = {Paris},
  month = sep}

@inproceedings{Kris83b,
  author = {Bent Bruun Kristensen and Ole Lehrmann Madsen and Birger M{\/o}ller-Pedersen and Kristen Nygaard},
  title = {Abstraction Mechanisms in the {BETA} Programming Language},
  booktitle = {Proceedings POPL '83},
  pages = {285--298},
  year = {1983},
  misc = {Jan 24-26},
  address = {Austin, Texas},
  month = jan}

@article{Kris85a,
  author = {Bent Bruun Kristensen and Ole Lehrmann Madsen and Birger M{\/o}ller-Pedersen and Kristen Nygaard},
  title = {Multi-sequential execution in the {BETA} programming language},
  journal = {SIGPLAN Notices},
  volume = {20},
  pages = {57--70},
  year = {1985},
  month = apr,
  number = {4}}

@incollection{Kris87a,
  author = {Bent Bruun Kristensen and Ole Lehrmann Madsen and Birger M{\/o}ller-Pedersen and Kristen Nygaard},
  title = {The {BETA} Programming Language},
  booktitle = {Research Directions in Object-Oriented Programming},
  pages = {7--48},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  editor = {B. Shriver and P. Wegner}}

@inproceedings{Kris87b,
  author = {Bent Bruun Kristensen and Ole Lehrmann Madsen and Birger M{\/o}ller-Pedersen and Kristen Nygaard},
  title = {Classification of Actions, or Inheritance also for Methods},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {98--107},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B{\'e}zivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@incollection{Kris93a,
  author = {Bent Buun Kristensen},
  title = {Transverse Activities: Abstractions in Object-Oriented Programming},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {279--296},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {A \fItransverse activity\fR is an activity executed
by several objects in some combination. The activity
is described as a single unit, separately from the
descriptions of the participating objects. A
transverse activity is described and executed by
using the usual object-centric actions, i.e. the
methods of the objects, and is seen as a natural
supplement to the description of the cooperation of
active objects. Transverse activities support the
modeling of our conceptual understanding of combined
activities. Our conceptual understanding not only
includes the recognition of usual components but
also the recognition of activities combined from the
individual actions of such components. We are used
to recognize components as phenomena, but transverse
activities are phenomena also and these activities
may be classified, specialized, and aggregated, i.e.
abstraction in this sense is possible also for such
activities. The description of a transverse activity
must at least include a listing of the components
participating in the activity and a listing of the
sequence of actions making up the combined directive
of the activity. In the specialization or
aggregation of activities by means of other
activities both the participants and the directive
can be included in these forms of abstraction to
support the underlying intention of transverse
activities. Usual language mechanisms such as class,
object etc. in various forms are used to model
phenomena and concepts. A ongoing revision and
extension of such usual object-oriented language
mechanisms is necessary to be able to model,
directly and naturally, additional differentiating
elements of conceptual understanding, such as e.g.
transverse activities. Transverse activities are
illustrated and motivated by means of several minor
fragments of a complex example and an conceptual
understanding of transverse activities is outlined.
Language mechanisms supporting the classification,
specialization, and aggregation of transverse
activities is defined by means of special
activity-classes and -objects. Various possibilities
for adding new and powerful features as part of such
mechanisms are discussed. The meaning of the
execution of activity-objects in relation to the
execution of the components involved in the activity
is defined in terms of interleaved execution.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Kris95,
  author = {"Bent Bruun Kristensen"},
  title = {"Object-Oriented Modeling with Roles"},
  booktitle = {"Proceedings of the 2nd International Conference on Object-Oriented Information Systems"},
  pages = {"57--71"},
  publisher = {"Springer-Verlag"},
  year = {"1996"},
  confacronym = {"OOIS'95"},
  confday = {"18"},
  confendday = {"20"},
  conflocation = {"Dublin, Ireland"},
  confmonth = {dec},
  confname = {"Second International Conference on Object-Oriented Information Systems"},
  confyear = {"1995"},
  editor = {"John Murphy and Brian Stone"},
  publaddr = {"London , UK"},
  referencedby = {"\cite{1998:oois:kristensen}"}}

@inproceedings{Kris96a,
  author = {Bent Bruun Kristensen and Daniel C. M. May},
  title = {Activities: Abstractions for Collective Behavior},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {472--501},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Kris98a,
  author = {Bent Bruun Kristensen},
  title = {Subjective Method Interpretation in Object-Oriented Modeling},
  booktitle = {International Conference on Object-Oriented Information Systems},
  publisher = {Springer-Verlag},
  year = {1998},
  abstract = {In object-oriented modeling an object reacts objectively to an invocation of one of its methods in
 the sense that it is given which description for the method is interpreted. Subjective behavior of an object
 means that [it] is not objectively given which description is interpreted---the choice depends on
 other factors than the invocation such as the invoking object, the context of the objects, and the state of
 the objects. The notion of subjectivity is defined, and the support of subjectivity by means of object-oriented
 language mechanisms is investigated.}}

@inproceedings{Krist94a,
  author = {Bent Brunn Kristensen},
  title = {Complex Associations: Abstractions in Object-Oriented Modeling},
  booktitle = {Proceedings of OOPSLA '94},
  volume = {29},
  pages = {272--286},
  year = {1994},
  address = {Portland},
  editor = {ACM},
  month = oct,
  number = {10},
  organization = {ACM},
  series = {ACM Sigplan Notices}}

@inproceedings{Krog85a,
  author = {Stein Krogdahl},
  title = {Multiple Inheritance in {Simula-like} Languages},
  booktitle = {BIT 25},
  pages = {318--326},
  year = {1985}}

@inproceedings{Krone94a,
  author = {Maren Krone and Gregor Snelting},
  title = {On the {Inference} of {Configuration} {Structures} from {Source} {Code}},
  booktitle = {Proceedings of ICSE '94 (16th International Conference on Software Engineering)},
  pages = {49--57},
  publisher = {IEEE Computer Society / ACM Press},
  year = {1994},
  location = {Sorrento, Italy}}

@book{Kruc04a,
  author = {Philippe Kruchten},
  title = {The Rational Unified Process},
  publisher = {Addison-Wesley},
  year = {2004},
  edition = {Third},
  isbn = {0321197704}}

@article{Kruc06a,
  author = {Philippe Kruchten and Henk Obbink and Judith Stafford},
  title = {The Past, Present, and Future for Software Architecture},
  journal = {IEEE Software},
  volume = {23},
  pages = {22--30},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/MS.2006.59},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  number = {2}}

@inproceedings{Kruc16a,
  author = {Kruck, Bastian and Lehmann, Stefan and Ke\ss{}ler, Christoph and Reschke, Jakob and Felgentreff, Tim and Lincke, Jens and Hirschfeld, Robert},
  title = {Multi-Level Debugging for Interpreter Developers},
  booktitle = {Companion to Proceedings of the international conference on Modularity},
  pages = {91-93},
  publisher = {ACM},
  year = {2016},
  url = {https://doi.org/10.1145/2892664.2892679},
  doi = {10.1145/2892664.2892679},
  abstract = {Conventional debuggers require programmers to work on multiple levels of abstraction at once when inspecting call stacks or data. This demands considerable cognitive overhead and deep system knowledge of all implementation technologies involved. When developing an interpreter, programmers often create a dedicated debugger to have a higher-level perspective on the client-language; the resulting use of multiple debuggers at once leads to mental context switches and needs an elaborated method. We present an integrated debugging tool in which interpreter developers define and select the levels of abstraction on which they focus. Our debugger provides them with an abstraction-specialized view. We consider both host-language and guest-language levels, since either may be levels of interest in a debugging session. We show how this separation into host-language levels can ease the debugging of applications through filtering call stacks and specializing call stack representation on levels.},
  isbn = {9781450340335},
  keywords = {IDE, Language-oriented Programming, Inter-language Debugging, Squeak, Language Workbenches, DSL},
  location = {M\'{a}laga, Spain},
  numpages = {3}}

@article{Kruc95a,
  author = {Philippe B. Kruchten},
  title = {The 4+1 View Model of Architecture},
  journal = {IEEE Software},
  volume = {12},
  pages = {42--50},
  year = {1995},
  month = nov,
  number = {6}}

@article{Kruch10a,
  author = {Kruchten, Philippe and Nord, Robert L and Ozkaya, Ipek},
  title = {Technical debt: From metaphor to theory and practice},
  journal = {Ieee software},
  volume = {29},
  pages = {18--21},
  publisher = {IEEE},
  year = {2012},
  number = {6}}

@article{Krue92a,
  author = {Krueger, Charles W.},
  title = {{Software Reuse}},
  journal = {ACM Computing Surveys},
  volume = {24},
  pages = {131--183},
  year = {1992},
  number = {2}}

@inproceedings{Krue93a,
  author = {Keith Krueger and David Loftesness and Amin Vahdat and Thomas Anderson},
  title = {Tools for the Development of Application-Specific Virtual Memory Management},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {48--64},
  year = {1993},
  doi = {10.1145/165854.165867},
  month = oct}

@book{Krug00a,
  author = {Steve Krug},
  title = {Don't make me think! A Common Sense Approach to Web Usability},
  publisher = {New Riders Publishing},
  year = {2000},
  address = {Indiana, United States},
  isbn = {0-7897-2310-7}}

@article{Krug20,
  author = {Kr{\"u}ger, Jacob and Lausberger, Christian and von Nostitz-Wallwitz, Ivonne and Saake, Gunter and Leich, Thomas},
  title = {Search. Review. Repeat? An empirical study of threats to replicating SLR searches},
  journal = {Empirical Software Engineering},
  volume = {25},
  pages = {627--677},
  publisher = {Springer},
  year = {2020},
  number = {1}}

@book{Krug97a,
  author = {David J. Kruglinski},
  title = {Inside Visual {C++}},
  publisher = {Microsoft Press},
  year = {1997}}

@article{Krup15a,
  author = {Krupitzer, Christian and Roth, Felix Maximilian and VanSyckel, Sebastian and Schiele, Gregor and Becker, Christian},
  title = {A survey on engineering approaches for self-adaptive systems},
  journal = {Pervasive and Mobile Computing},
  volume = {17},
  publisher = {Elsevier},
  year = {2015},
  doit = {10.1016/j.pmcj.2014.09.009}}

@article{Krus78a,
  author = {Joseph B. Kruskal and Myron Wish},
  title = {Multidimensional Scaling},
  journal = {Paper series on Quantitative Application in the Social Science},
  pages = {7--11},
  year = {1978},
  location = {Beverly Hills and London}}

@inproceedings{Kube14a,
  author = {Kubelka, Juraj and Bergel, Alexandre and Robbes, Romain},
  title = {Asking and Answering Questions During a Programming Change Task in the {Pharo} Language},
  booktitle = {Proceedings of the 5th Workshop on Evaluation and Usability of Programming Languages and Tools},
  pages = {1--11},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2688204.2688212},
  doi = {10.1145/2688204.2688212},
  acmid = {2688212},
  address = {New York, NY, USA},
  isbn = {978-1-4503-2277-5},
  keywords = {change task, development environments, program comprehension, programming tools, user study, dev-questions},
  location = {Portland, Oregon, USA},
  numpages = {11},
  series = {PLATEAU '14}}

@inproceedings{Kube15a,
  author = {Kubelka, Juraj and Bergel, Alexandre and Chi\c{s}, Andrei and G\^irba, Tudor and Reichhart, Stefan and Robbes, Romain and Syrel, Aliaksei},
  title = {On Understanding How Developers Use the {Spotter} Search Tool},
  booktitle = {Proceedings of 3rd IEEE Working Conference on Software Visualization - New Ideas and Emerging Results},
  pages = {145--149},
  publisher = {{IEEE}},
  year = {2015},
  url = {http://scg.unibe.ch/archive/papers/Kube15a-OnUnderstandingHowDevelopersUseTheSpotterSearchTool.pdf},
  doi = {10.1109/VISSOFT.2015.7332426},
  abstract = {Analyzing how software engineers use the Integrated Development Environment (IDE) is essential to better understanding how engineers carry out their daily tasks. Spotter is a code search engine for the Pharo programming language. Since its inception, Spotter has been r{API}dly and broadly adopted within the Pharo community. However, little is known about how practitioners employ Spotter to search and navigate within the Pharo code base. This paper evaluates how software engineers use Spotter in practice. To achieve this, we remotely gather user actions called events. These events are then visually rendered using an adequate navigation tool chain. Sequences of events are represented using a visual alphabet. We found a number of usage patterns and identified underused Spotter features. Such findings are essential for improving Spotter.},
  medium = {2},
  month = sep,
  series = {VISSOFT-NIER'15}}

@inproceedings{Kube18a,
  author = {Kubelka, Juraj and Robbes, Romain and Bergel, Alexandre},
  title = {The Road to Live Programming: Insights from the Practice},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering},
  pages = {1090--1101},
  publisher = {ACM},
  year = {2018},
  url = {http://doi.acm.org/10.1145/3180155.3180200},
  doi = {10.1145/3180155.3180200},
  acmid = {3180200},
  address = {New York, NY, USA},
  isbn = {978-1-4503-5638-1},
  keywords = {exploratory study, live programming, software evolution},
  location = {Gothenburg, Sweden},
  numpages = {12},
  series = {ICSE '18}}

@inproceedings{Kube19a,
  author = {Juraj Kubelka and Romain Robbes and Alexandre Bergel},
  title = {Live Programming and Software Evolution: Questions During a Programming Change Task},
  booktitle = {2019 IEEE/ACM 27th International Conference on Program Comprehension ({ICPC})},
  pages = {30-41},
  year = {2019}}

@misc{Kuce79,
  author = {Kucera, H and Francis, W},
  title = {A standard corpus of present-day edited american english, for use with digital computers (revised and amplified from 1967 version)},
  publisher = {Providence, RI: Brown University Press},
  year = {1979}}

@techreport{Kuch06,
  author = {Andrew M. Kuchling},
  title = {What's New in {Python} 2.5},
  year = {2007},
  url = http://docs.python.org/whatsnew/whatsnew25.html,
  institution = {Python Software Foundation}}

@inproceedings{Kuch15a,
  author = {Kucher, Kostiantyn and Kerren, Andreas},
  title = {Text visualization techniques: Taxonomy, visual survey, and community insights},
  booktitle = {2015 IEEE Pacific visualization symposium (pacificVis)},
  pages = {117--121},
  year = {2015},
  organization = {IEEE}}

@mastersthesis{Kueh98a,
  author = {Daniel K{\"u}hni},
  title = {{APROCO}: {A} Programmable Coordination Medium},
  year = {1998},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Kueh98a/aproco.html http://scg.unibe.ch/archive/masters/Kueh98a/Kueh98a.pdf},
  abstract = {To keep up with r{API}dly changing requirements
applications are increasingly built out of software
components. A new trend is now to give those
software components control over their own actions,
to turn them into concurrently running software
agents. These software agents have to be relatively
independent to keep them exchangeable. Although
independent, they still need to interact in order to
achieve the application's overall goal. This results
in the need to coordinate their interactions. A
number of coordination models were created to
express common coordination solutions. Linda is one
of the most prominent representatives of such
coordination models. Linda is widely used because it
offers simple means to separate coordination code
from computational code within a single agent. Linda
also offers a high degree of decoupling of agents
through its generative communication style. However,
Linda offers no direct support for the concentration
of the coordination aspects of a whole application
in a single location. Furthermore, Linda only offers
a set of primitive operations and leaves the user
with the task to construct realistic coordination
abstractions out of them. Coordination abstractions
are often hard-coded into the participant agents'
protocols and therefore neither flexible nor
reusable. They are typically spread all over the
application and it is almost impossible to identify
them. It is not easy to encapsulate coordination
abstractions because coordination typically affects
multiple agents, and in open systems other
requirements, such as flexibility and security, must
also be dealt with. We propose an open, flexible and
extensible architecture for explicit coordination
abstractions in open systems, called APROCO. Our
solution is based on the insight that separation of
concerns (coordination and computation) is a
necessary precondition for building reusable parts.
The client agents of APROCO communicate through
shared data spaces known from Linda using its
generative communication style. The coordination
between the participating agents is managed through
special coordination agents that implement the used
coordination abstractions. We present a list of
coordination abstractions in open systems and show
the applicability of the approach with some
examples.},
  month = oct,
  type = {Diploma thesis}}

@inproceedings{Kueh99a,
  author = {Thomas Kuehne},
  title = {Internal Iteration Externalized},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {329--350},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Although it is acknowledged that internal iterators
are easier and safer to use than conventional
external iterators, it is commonly assumed that they
are not applicable in languages without builtin
support for closures and that they are less flexible
than external iterators. We present an iteration
framework that uses objects to emulate closures,
separates structure exploration and data
consumption, and generalizes on folding, thereby
invalidating both the above statements. Our proposed
"transfold" scheme allows processing one or more
data structures simultaneously without exposing
structure representations and without writing
explicit loops. We show that the use of two
functional concepts (function parameterization and
lazy evaluation) within an object-oriented language
allows combining the safety and economic usage of
internal iteration with the flexibility and client
control of external iteration. Sample code is
provided using the statically typed Eiffel
language.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@book{Kueh99b,
  author = {Thomas Kuehne},
  title = {A Functional Pattern System for Object-Oriented Design},
  publisher = {Verlag Dr. Kovac},
  year = {1999}}

@mastersthesis{Kuhn03a,
  author = {Adrian Kuhn},
  title = {Using Local Slant Correction to Normalize Handwritten Text Samples},
  year = {2003},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/projects/Kuhn03a.pdf},
  abstract = {In this paper we propose to use variable slant
correction instead of an global correction, since
the slant of handwritten text is not constant over a
line of text. We present an algorithm that computes
local slant, based on generalized projection and
dynamic programming, and introduce a technique
called slant map propagation. We apply it on a case
study and report the results: local slant correction
improves the word recognition rate from 37.3\% to
42.24\% and the word level accuracy from -14.99\% to
-3.18\%, compared to global slant correction.},
  month = dec,
  type = {Informatikprojekt}}

@inproceedings{Kuhn05b,
  author = {Adrian Kuhn and Orla Greevy and Tudor G\^irba},
  title = {Applying Semantic Analysis to Feature Execution Traces},
  booktitle = {Proceedings IEEE Workshop on Program Comprehension through Dynamic Analysis (PCODA 2005)},
  pages = {48--53},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  url = {http://scg.unibe.ch/archive/papers/Kuhn05bHapaxPCODA2005.pdf},
  abstract = {Recently there has been a revival of interest in
feature analysis of software systems. Approaches to
feature location have used a wide range of
techniques such as dynamic analysis, static
analysis, information retrieval and formal concept
analysis. In this paper we introduce a novel
approach to analyze the execution traces of features
using Latent Semantic Indexing (LSI). Our goal is
twofold. On the one hand we detect similarities
between features based on the content of their
traces, and on the other hand we categorize classes
based on the frequency of the outgoing invocations
involved in the traces. We apply our approach on two
case studies and we discuss its benefits and
drawbacks.},
  address = {Los Alamitos CA},
  location = {Pittsburgh, PA},
  month = nov}

@mastersthesis{Kuhn06a,
  author = {Adrian Kuhn},
  title = {Semantic Clustering: Making Use of Linguistic Information to Reveal Concepts in Source Code},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Kuhn06a.pdf},
  abstract = {Many approaches have been developed to comprehend
software source code, most of them focusing on
program structural information. However, in doing so
we are missing a crucial information, namely, the
domain semantics information contained in the text
or symbols of the source code. When we are to
understand software as a whole, we need to enrich
these approaches with conceptual insights gained
from the domain semantics. This paper proposes the
use of information retrieval techniques to exploit
linguistic information, such as identifier names and
comments in source code, to gain insights into how
the domain is mapped to the code. We introduce
Semantic Clustering, an algorithm to group source
artifacts based on how they use similar terms. The
algorithm uses Latent Semantic Indexing. After
detecting the clusters, we provide an automatic
labeling and then we visually explore how the
clusters are spread over the system. Our approach
works at the source code textual level which makes
it language independent. Nevertheless, we correlate
the semantics with structural information and we
apply it at different levels of abstraction (for
example packages, classes, methods). To validate our
approach we applied it on several case studies.},
  month = mar,
  type = {Master's thesis}}

@inproceedings{Kuhn06c,
  author = {Adrian Kuhn and Orla Greevy},
  title = {Exploiting the Analogy Between Traces and Signal Processing},
  booktitle = {Proceedings IEEE International Conference on Software Maintainance ({ICSM} 2006)},
  pages = {320--329},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Kuhn06cTraceSignal{ICSM}2006.pdf},
  doi = {10.1109/ICSM.2006.29},
  abstract = {The main challenge of dynamic analysis is the huge
volume of data, making it difficult to extract high
level views. Most techniques developed so far adopt
a fine-grained approach to address this issue. In
this paper we introduce a novel approach
representing entire traces as signals in time.
Drawing this analogy between dynamic analysis and
signal processing, we are able to access a rich
toolkit of well-established and ready-to-use
analysis techniques. As an application of this
analogy, we show how to fit a visualization of the
complete feature space of a system on one page only:
our approach visualizes feature traces as time
plots, summarizes the trace signals and uses dynamic
time warping to group them by similar features. We
apply the approach on a case study, and discuss both
common and unique patterns as observed on the
visualization.},
  address = {Los Alamitos CA},
  medium = {2},
  month = sep}

@inproceedings{Kuhn06d,
  author = {Adrian Kuhn and Orla Greevy},
  title = {Summarizing Traces as Signals in Time},
  booktitle = {Proceedings IEEE Workshop on Program Comprehension through Dynamic Analysis (PCODA 2006)},
  pages = {01--06},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Kuhn06dTimePlot.pdf http://www.lore.ua.ac.be/Events/PCODA2006/index.html},
  abstract = {One of the key challenges of dynamic analysis
approaches is that they imply a huge volume of data,
thus making it difficult to extract high level
views. In this paper we describe a novel approach to
trace summarization by visually representing entire
traces as signals in time. Our technique produces a
visualization of the complete feature space of a
system that fits on one page. The focus of our work
is to visually represent individual traces feature
behavior. We assume a one-to-one mapping between
features and traces. We apply the approach on a case
study, and discuss how our visualization supports
the reverse engineer to identify patterns in traces
of features. Moreover, we show how the visual
analysis of our trace signals reveals that assumed
one-to-one mappings between features and traces may
be flawed.},
  address = {Los Alamitos CA},
  location = {Benevento, Italy},
  medium = {2},
  month = oct}

@inproceedings{Kuhn07b,
  author = {Adrian Kuhn},
  title = {Collective Behavior},
  booktitle = {Proceedings of 3rd ECOOP Workshop on Dynamic Languages and Applications (DYLA 2007)},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Kuhn07bCollectiveBehavior.pdf},
  abstract = {When modelling a system, often there are properties
and operations related to a group of objects rather
than to a single object only. For example, given a
person object with an income property, the average
income applies to a group of persons as a whole
rather than to a single person. In this paper we
propose to extend programming languages with the
notion of collective behavior. Collective behavior
associates custom behavior with collection
instances, based on the type of its elements.
However, collective behavior is modeled as part of
the element's rather than the collection's class. We
present a proof-of-concept implementation of
collective behavior using Smalltalk, and validate
the usefulness of collective behavior considering a
real-life case study: 20\% of the case-study's domain
logic is subject to collective behavior.},
  location = {Berlin, Germany},
  medium = {2},
  month = aug}

@misc{Kuhn07c,
  author = {Adrian Kuhn},
  title = {RBCrawler --- a Visual Navigation System for {Smalltalk}'s {Refactoring} {Browser}},
  year = {2007},
  url = {http://scg.unibe.ch/archive/reports/Kuhn07cRBCrawler.pdf},
  abstract = {RBCrawler is a software visualization tool for the
Refactory Browser, implement in Cincom Smalltalk. It
extends both the editor pane and the navigation pane
with software visualization views. RBCrawler
features static, dynamic, and lexical analysis.
Currently in implementation are: Lanza's System
Complexity View and Class Blueprint, customizable
Polymetric Views and Distribution Maps, as well as
Traceplots of dynamic execution traces. Semantic
Clustering, polysemy-aware search and Wordclouds are
planned as well, but might not be ready in time for
presentation at ESUG 2007. RBCrawler improves
software understanding and reduces the time for
software navigation. An empirical study based on the
present implementation is planned for this fall's
Smalltalk lecture at University of Bern.},
  howpublished = {European Smalltalk User Group Innovation Technology Award},
  month = aug}

@inproceedings{Kuhn08a,
  author = {Adrian Kuhn and Bart Van Rompaey and Lea H\"ansenberger and Oscar Nierstrasz and Serge Demeyer and Markus Gaelli and Koenraad Van Leemput},
  title = {{JExample}: Exploiting Dependencies Between Tests to Improve Defect Localization},
  booktitle = {Extreme Programming and Agile Processes in Software Engineering, 9th International Conference, XP 2008},
  pages = {73--82},
  publisher = {Springer},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Kuhn08aJExample.pdf},
  doi = {10.1007/978-3-540-68255-4_8},
  abstract = {To quickly localize defects, we want our attention
to be focussed on relevant failing tests. We propose
to improve defect localization by exploiting
dependencies between tests, using a JUnit extension
called JExample. In a case study, a monolithic
white-box test suite for a complex algorithm is
refactored into two traditional JUnit style tests
and to JExample. Of the three refactorings, JExample
reports five times fewer defect locations and
slightly better performance (-8-12\%), while having
similar maintenance characteristics. Compared to the
original implementation, JExample greatly improves
maintainability due the improved factorization
following the accepted test quality guidelines. As
such, JExample combines the benefits of test chains
with test quality aspects of JUnit style testing.},
  editor = {P. Abrahamsson},
  isbn = {978-3-540-68254-7},
  medium = {2},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Kuhn08b,
  author = {Adrian Kuhn and Peter Loretan and Oscar Nierstrasz},
  title = {Consistent Layout for Thematic Software Maps},
  booktitle = {Proceedings of 15th Working Conference on Reverse Engineering ({WCRE}'08)},
  pages = {209--218},
  publisher = {IEEE Computer Society Press},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Kuhn08bSoftwareMap.pdf},
  doi = {10.1109/{WCRE}.2008.45},
  abstract = {Software visualizations can provide a concise
overview of a complex software system.
Unfortunately, since software has no physical shape,
there is no ``natural'' mapping of software to a
two-dimensional space. As a consequence most
visualizations tend to use a layout in which
position and distance have no meaning, and
consequently layout typical diverges from one
visualization to another. We propose a consistent
layout for software maps in which the position of a
software artifact reflects its \emph{vocabulary},
and distance corresponds to similarity of
vocabulary. We use Latent Semantic Indexing (LSI) to
map software artifacts to a vector space, and then
use Multidimensional Scaling (MDS) to map this
vector space down to two dimensions. The resulting
consistent layout allows us to develop a variety of
thematic software maps that express very different
aspects of software while making it easy to compare
them. The approach is especially suitable for
comparing views of evolving software, since the
vocabulary of software artifacts tends to be stable
over time.},
  address = {Los Alamitos CA},
  isbn = {978-0-7695-3429-9},
  location = {Pittsburgh, PA},
  medium = {2},
  month = oct}

@inproceedings{Kuhn08c,
  author = {Adrian Kuhn and Toon Verwaest},
  title = {{FAME}, A Polyglot Library for Metamodeling at Runtime},
  booktitle = {Workshop on Models at Runtime},
  pages = {57--66},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Kuhn08cFame.pdf http://www.comp.lancs.ac.uk/~bencomo/MRT/MRT2008Proceedings.pdf},
  abstract = {Tomorrow's eternal software system will co-evolve
with their context: their metamodels must adapt at
runtime to ever-changing external requirements. In
this paper we present FAME, a polyglot library that
keeps metamodels accessible and adaptable at
runtime. Special care is taken to establish causal
connection between fame-classes and host-classes. As
some host-languages offer limited reflection
features only, not all implementations feature the
same degree of causal connection. We present and
discuss three scenarios: 1) full causal connection,
2) no causal connection, and 3) emulated causal
connection. Of which, both Scenario 1 and 3 are
suitable to deploy fully metamodel-driven
applications.},
  medium = {2}}

@inproceedings{Kuhn08d,
  author = {Adrian Kuhn and Oscar Nierstrasz},
  title = {Composing New Abstractions From Object Fragments},
  booktitle = {Proceedings of the 2nd Workshop on Virtual Machines and Intermediate Languages for Emerging Modularization Mechanisms (VMIL 2008), Nashville, Tennessee, Oct. 19, 2008},
  pages = {1--12},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Kuhn08dCells.pdf},
  doi = {10.1145/1507504.1507505},
  abstract = {As object-oriented languages are extended with novel
modularization mechanisms, better underlying models
are required to implement these high-level features.
This paper describes CELL, a language model that
builds on delegation-based chains of object
fragments. Composition of groups of cells is used:
1) to represent objects, 2) to realize various forms
of method lookup, and 3) to keep track of method
references. A running prototype of CELL is provided
and used to realize the basic kernel of a Smalltalk
system. The paper shows, using several examples, how
higher-level features such as traits can be
supported by the lower-level model.},
  editor = {Hridesh Rajan},
  isbn = {978-1-60558-384-6},
  medium = {2}}

@inproceedings{Kuhn09a,
  author = {Adrian Kuhn},
  title = {Automatic Labeling of Software Components and their Evolution using Log-Likelihood Ratio of Word Frequencies in Source Code},
  booktitle = {MSR '09: Proceedings of the 2009 6th IEEE International Working Conference on Mining Software Repositories},
  pages = {175--178},
  publisher = {IEEE},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Kuhn09aLogLikelihoodRatio.pdf},
  doi = {10.1109/MSR.2009.5069499},
  abstract = {As more and more open-source software components
become available on the internet we need automatic
ways to label and compare them. For example, a
developer who searches for reusable software must be
able to quickly gain an understanding of retrieved
components. This understanding cannot be gained at
the level of source code due to the semantic gap
between source code and the domain model. In this
paper we present a lexical approach that uses the
log-likelihood ratios of word frequencies to
automatically provide labels for software
components. We present a prototype implementation of
our labeling/comparison algorithm and provide
examples of its application. In particular, we apply
the approach to detect trends in the evolution of a
software system.},
  location = {Vancouver, Canada},
  medium = {2}}

@inproceedings{Kuhn09b,
  author = {Bajracharya, Sushil and Kuhn, Adrian and Ye, Yunwen},
  title = {SUITE 2009: First international workshop on search-driven development - users, infrastructure, tools and evaluation},
  journal = {Software Engineering - Companion Volume, 2009. ICSE-Companion 2009. 31st International Conference on},
  booktitle = {Software Engineering - Companion Volume, 2009. ICSE-Companion 2009. 31st International Conference on},
  pages = {445--446},
  year = {2009},
  url = {http://dx.doi.org/10.1109/ICSE-COMPANION.2009.5071054},
  doi = {10.1109/ICSE-COMPANION.2009.5071054},
  abstract = {SUITE is a new workshop series that specifically
focuses on exploring the notion of search as a
fundamental activity during software development.
The goal of the workshop is to bring researchers and
practitioners with special interest on search
technology for software developers together.
Participants will have broad range of expertise in
topics ranging from building software tools and
infrastructure, Information Retrieval, user studies
and Human-computer interaction, benchmarking and
evaluation. The first edition of SUITE is held in
conjunction with the 31st International Conference
in Software Engineering (May 16th, 2009. Vancouver,
Canada).}}

@inproceedings{Kuhn10a,
  author = {Adrian Kuhn},
  title = {Immediate Search in the IDE as an Example of Socio-Technical Congruence in Search-Driven Development},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2010. SUITE '10. ICSE Workshop on},
  pages = {0--0},
  year = {2010},
  url = {http://scg.unibe.ch/archive/papers/Kuhn10a-codesearch.pdf},
  doi = {10.1145/1809175.1809182},
  abstract = {Search-driven development is mainly concerned with
code reuse but also with code navigation and
debugging. In this essay we look at search-driven
navigation in the IDE. We consider Smalltalk-80 as
an example of a programming system with
search-driven navigation capabilities and explore
its human factors. We present how immediate search
results lead to a user experience of code browsing
rather than one of waiting for and clicking through
search results. We explore the socio-technical
congruence of immediate search, ie unification of
tasks and breakpoints with method calls, which leads
to simpler and more extensible development tools.
Eventually we conclude with remarks on the
socio-technical congruence of search-driven
development.}}

@article{Kuhn10b,
  author = {Adrian Kuhn and David Erni and Peter Loretan and Oscar Nierstrasz},
  title = {Software Cartography: Thematic Software Visualization with Consistent Layout},
  journal = {Journal of Software Maintenance and Evolution (JSME)},
  volume = 22,
  pages = {191--210},
  year = {2010},
  url = {http://scg.unibe.ch/archive/papers/Kuhn10bSoftwareMaps.pdf},
  doi = {10.1002/smr.414},
  abstract = {Software visualizations can provide a concise overview of a complex software
system. Unfortunately, as software has no physical shape, there is no `natural' mapping
of software to a two-dimensional space. As a consequence most visualizations tend to
use a layout in which position and distance have no meaning, and consequently layout
typically diverges from one visualization to another. We propose an approach to
consistent layout for software visualization, called Software Cartography, in which the
position of a software artifact reflects its vocabulary, and distance corresponds to
similarity of vocabulary. We use Latent Semantic Indexing (LSI) to map software
artifacts to a vector space, and then use Multidimensional Scaling (MDS) to map this
vector space down to two dimensions. The resulting consistent layout allows us to
develop a variety of thematic software maps that express very different aspects of
software while making it easy to compare them. The approach is especially suitable for
comparing views of evolving software, as the vocabulary of software artifacts tends to
be stable over time. We present a prototype implementation of Software Cartography, and
illustrate its use with practical examples from numerous open-source case studies.},
  month = apr,
  number = 3}

@misc{Kuhn10x,
  author = {Adrian Kuhn and David Erni and Oscar Nierstrasz},
  title = {Towards Improving the Mental Model of Software Developers through Cartographic Visualization},
  year = {2010},
  url = {http://arxiv.org/abs/1001.2386},
  note = {To appear, ACM SOFTVIS 2010}}

@techreport{Kuip00a,
  author = {Tobias Kuipers and Leon Moonen},
  title = {Types and {Concept} {Analysis} for {Legacy} {Systems}},
  year = {2000},
  institution = {Centrum voor Wiskunde en Informatica},
  month = jul,
  number = {SEN-R0017}}

@inproceedings{Kuk13a,
  author = {Kukreja, Nupul and Halfond, William G. J. and Tambe, Milind},
  title = {Randomizing Regression Tests Using Game Theory},
  booktitle = {Proceedings {ASE2013} (the 28th IEEE/ACM International Conference on Automated Software Engineering)},
  pages = {616--621},
  publisher = {IEEE Press},
  year = {2013},
  doi = {10.1109/ASE.2013.6693122},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4799-0215-6},
  location = {Silicon Valley, CA, USA},
  numpages = {6}}

@article{Kula18a,
  author = {Raula Gaikovina Kula and Daniel M German and Ali Ouni andTakashi Ishio andKatsuro Inoue},
  title = {Do developers update their library dependencies?},
  journal = {Empirical Software Engineering},
  volume = {23},
  pages = {384-417},
  year = {2018}}

@article{Kula18b,
  author = {Kula, Raula Gaikovina and Ouni, Ali and German, Daniel M and Inoue, Katsuro},
  title = {An empirical study on the impact of refactoring activities on evolving client-used APIs},
  journal = {Information and Software Technology},
  volume = {93},
  pages = {186--199},
  publisher = {Elsevier},
  year = {2018}}

@inproceedings{Kulb98a,
  author = {B. Kulbach and A. Winter and P. Dahm and J. Ebert},
  title = {Program Comprehension in Multi-Language Systems},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {135--145},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Kulk02a,
  author = {Vinay Kulkarni and R. Venkatesh and Sreedhar Reddy},
  title = {Generating Enterprise Applications from Models},
  booktitle = {OOIS '02: Proceedings of the Workshops on Advances in Object-Oriented Information Systems},
  pages = {270--279},
  publisher = {Springer-Verlag},
  year = {2002},
  url = {http://www.softmetaware.com/oopsla2005/kulkarni.pdf},
  doi = {10.1007/3-540-46105-1_31},
  address = {London, UK},
  isbn = {3-540-44088-7}}

@article{Kulk03a,
  author = {Vinay Kulkarni and Sreedhar Reddy},
  title = {Separation of Concerns in Model-Driven Development},
  journal = {IEEE Software},
  volume = {20},
  pages = {64--69},
  publisher = {IEEE Computer Society},
  year = {2003},
  doi = {10.1109/MS.2003.1231154},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  number = {5}}

@article{Kulk05,
  author = {Kulkarni, Prasad A and Hines, Stephen R and Whalley, David B and Hiser, Jason D and Davidson, Jack W and Jones, Douglas L},
  title = {Fast and efficient searches for effective optimization-phase sequences},
  journal = {ACM Transactions on Architecture and Code Optimization (TACO)},
  volume = {2},
  pages = {165--198},
  publisher = {ACM New York, NY, USA},
  year = {2005},
  number = {2}}

@article{Kulk10a,
  author = {Devdatta Kulkarni and Anand Tripathi},
  title = {A Framework for Programming Robust Context-Aware Applications},
  journal = {IEEE Transactions on Software Engineering},
  volume = {99},
  pages = {184-197},
  publisher = {IEEE Computer Society},
  year = {2010},
  doi = {10.1109/TSE.2010.11},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  number = {R{API}dPosts}}

@inproceedings{Kulk12,
  author = {Kulkarni, Sameer and Cavazos, John},
  title = {Mitigating the Compiler Optimization Phase-Ordering Problem Using Machine Learning},
  booktitle = {Proceedings of the ACM International Conference on Object Oriented Programming Systems Languages and Applications},
  pages = {147--162},
  publisher = {Association for Computing Machinery},
  year = {2012},
  url = {https://doi.org/10.1145/2384616.2384628},
  doi = {10.1145/2384616.2384628},
  isbn = {9781450315616},
  address = {New York, NY, USA},
  abstract = {Today's compilers have a plethora of optimizations to choose from, and the correct choice of optimizations can have a significant impact on the performance of the code being optimized. Furthermore, choosing the correct order in which to apply those optimizations has been a long standing problem in compilation research. Each of these optimizations interacts with the code and in turn with all other optimizations in complicated ways. Traditional compilers typically apply the same set of optimization in a fixed order to all functions in a program, without regard the code being optimized.Understanding the interactions of optimizations is very important in determining a good solution to the phase-ordering problem. This paper develops a new approach that automatically selects good optimization orderings on a per method basis within a dynamic compiler. Our approach formulates the phase-ordering problem as a Markov process and uses a characterization of the current state of the code being optimized to creating a better solution to the phase ordering problem. Our technique uses neuro-evolution to construct an artificial neural network that is capable of predicting beneficial optimization ordering for a piece of code that is being optimized. We implemented our technique in Jikes RVM and achieved significant improvements on a set of standard Java benchmarks over a well-engineered fixed order.},
  numpages = {16},
  keywords = {machine learning, jikes rvm, compiler optimization, phase ordering, java, source code feature generation, neural networks},
  location = {Tucson, Arizona, USA},
  series = {OOPSLA '12}}

@article{Kuma14a,
  author = {Kumar, Manoj and Sharma, Arun and Kumar, Rajesh},
  title = {An empirical evaluation of a three-tier conduit framework for multifaceted test case classification and selection using fuzzy-ant colony optimisation approach},
  journal = {Software: Practice and Experience},
  volume = {45},
  pages = {949--971},
  year = {2015},
  url = {http://dx.doi.org/10.1002/spe.2263},
  doi = {10.1002/spe.2263},
  issn = {1097-024X},
  keywords = {ambiguity, fuzzy entropy, fitness evaluation index, multidimensional fitness search space, multifaceted classification, test cases, test case fitness},
  number = {7}}

@inproceedings{Kuma92a,
  author = {V. Kumar},
  title = {Algorithms for constraint satisfaction problems: a Survey},
  booktitle = {AI Magazine},
  volume = {13},
  pages = {32--44},
  year = {1992},
  number = {1}}

@inproceedings{Kume19a,
  author = {Kume, Izuru and Shibayama, Etsuya and Nakamura, Masahide and Nitta, Naoya},
  title = {Cutting Java Expressions into Lines for Detecting Their Evaluation at Runtime},
  booktitle = {Proceedings of the 2019 2Nd International Conference on Geoinformatics and Data Analysis},
  pages = {37--46},
  publisher = {ACM},
  year = {2019},
  url = {http://doi.acm.org/10.1145/3318236.3318259},
  doi = {10.1145/3318236.3318259},
  acmid = {3318259},
  address = {New York, NY, USA},
  isbn = {978-1-4503-6245-0},
  keywords = {Compiler, Debugger, Java Language, Software Engineering, Source Code Transformation},
  location = {Prague, Czech Republic},
  numpages = {10},
  series = {ICGDA 2019}}

@article{Kung81a,
  author = {Hsiang-Tsung Kung and John T. Robinson},
  title = {On Optimistic Methods for Concurrency Control},
  journal = {ACM TODS},
  volume = {6},
  pages = {213--226},
  year = {1981},
  month = jun,
  number = {2}}

@inproceedings{Kung94a,
  author = {D. Kung and J. Gao and P. Hsia and F. Wen and Y. Toyoshima, Y. and C. Chen},
  title = {Change impact identification in object oriented software maintenance},
  booktitle = {Proceedings of the International Conference on Software Maintenance},
  pages = {202--211},
  year = {1994}}

@article{Kung95a,
  author = {David Kung and Jerry Gao and Pei Hsia and Yasufumi Toyoshima and Chris Chen and Young-Si Kim and Young-Kee Song},
  title = {Developing and Oject-Oriented Software Testing and Maintenance Environment},
  journal = {Communications of the ACM},
  volume = {38},
  pages = {75--86},
  year = {1995},
  month = oct,
  number = {10}}

@inproceedings{Kupe10a,
  author = {Kuperberg, Michael AND Omri, Fouad AND Reussner, Ralf},
  title = {Automated benchmarking of Java APIs},
  booktitle = {Software Engineering 2010},
  pages = {57-68},
  publisher = {Gesellschaft fur Informatik e.V.},
  year = {2010},
  address = {Bonn},
  editor = {Engels, Gregor AND Luckey, Markus AND Schafer, Wilhelm}}

@incollection{Kurs13a,
  author = {Jan Kur\v{s} and Guillaume Larcheveque and Lukas Renggli},
  title = {{PetitParser}: Building Modular Parsers},
  booktitle = {Deep Into Pharo},
  pages = 36,
  publisher = {Square Bracket Associates},
  year = {2013},
  url = {http://scg.unibe.ch/archive/papers/Kurs13a-PetitParser.pdf},
  isbn = {978-3-9523341-6-4},
  keywords = {skip-abstract skip-doi scg-pub scg13 snf-asa1 jb14 kursjan},
  medium = {2},
  month = sep,
  peerreview = {no}}

@phdthesis{Kurs16c,
  author = {Jan Kur\v{s}},
  title = {Parsing For Agile Modeling},
  year = {2016},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/kurs-phd.pdf},
  abstract = {Agile modeling refers to a set of methods that allow for a quick initial development of an importer and its further refinement. These requirements are not met simultaneously by the current parsing technology. Problems with parsing became a bottleneck in our research of agile modeling.In this thesis we introduce a novel approach to specify and build parsers. Our approach allows for expressive, tolerant and composable parsers without sacrificing performance. The approach is based on a context-sensitive extension of parsing expression grammars that allows a grammar engineer to specify complex language restrictions. To insure high parsing performance we automatically analyze a grammar definition and choose different parsing strategies for different parts of the grammar.We show that context-sensitive parsing expression grammars allow for highly composable, tolerant and variable-grained parsers that can be easily refined. Different parsing strategies significantly insure high-performance of parsers without sacrificing expressiveness of the underlying grammars.},
  keywords = {scg-phd, snf-none, scg16, jb17, kursjan},
  month = oct,
  type = {{PhD} thesis}}

@techreport{Kurt99a,
  author = {Eveline Kurt},
  title = {Entwicklung einer Datenbank-Applikation zur Verwaltung von Tagesstreckenkarten},
  year = {1999},
  url = {http://scg.unibe.ch/archive/projects/Kurt99a.pdf},
  abstract = {Die SBB verkauft den Bundesbetrieben
Tagesstreckenkarten zu einem bestimmten Preis. Diese
Karten dienen als Billette, \"ahnlich wie die
Tageskarten, welche man zu einem Pauschalpreis
kaufen kann, wenn man ein Halbtax --- Abo besitzt.
Mit diesen Karten kann man an einem Tag soweit
fahren wie man will. Die Eidg. Alkoholverwaltung
besch\"aftigt viele Aussendienstmitarbeiter, welche
mit dem Zug reisen, und wie alle Bundesangestellte
benutzen sie Tagesstreckenkarten als Billette. Der
Gebrauch der Tagesstreckenkarten (TSK) muss
kontrolliert werden, da die SBB erstens wissen will,
welche Karten wann gebraucht wurden und zweitens die
gebrauchten Karten zur\"uck will. Das erfordert
einen gewissen administrativen Aufwand der
Verwaltung, welche zu diesem Zweck seit etwa zehn
Jahren eine von der eigenen EDV- Abteilung
entwickelte Datenbank-Applikation (SDB-Datenbank)
benutzt. Nun ist es an der Zeit, diese Applikation
durch eine neue zu ersetzen, denn diese Applikation
ist einerseits zu langsam, anderseits funktioniert
die Berechnung der neuen Kartennummer nicht mehr
richtig. Die Entwicklung dieser neuen Applikation
ist das Projekt, welches hier dokumentiert wird.},
  institution = {University of Bern},
  type = {Informatikprojekt}}

@misc{Kurt99z,
  author = {N. Kurt},
  title = {Using Lisp as a markup language: the {LAML} approach},
  year = {1999},
  note = {European Lisp User Group Meeting}}

@inproceedings{Kuse13a,
  author = {Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Langer, Philip and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
  title = {A survey on incremental model transformation approaches},
  booktitle = {ME 2013--Models and Evolution Workshop Proceedings},
  volume = {1090},
  pages = {4--13},
  year = {2013},
  organization = {CEUR Workshop Proceedings}}

@inproceedings{Kuzn01a,
  author = {Sergei Kuznetsov and Sergei Ob{\"e}dkov},
  title = {Comparing {Performance} of {Algorithms} for {Generating} {Concept} {Lattices}},
  booktitle = {Proceedings of International Workshop on Concept Lattice-based Theory, Methods and Tools for Knowledge Discovery in Databases},
  year = {2001},
  location = {California, USA}}

@misc{Kwon18a,
  author = {Kwon, Jae andBuchman, Ethan},
  title = {Cosmos - a network of distributed ledgers (Cosmos white paper)},
  year = {2018},
  note = {https://github.com/cosmos/cosmos/blob/master/}}

@misc{LINQ,
  title = {{Language Integrated Queries}},
  key = {Language Integrated Queries},
  note = {http://plone.org/products/archgenxml}}

@misc{LPM,
  title = {{Lazy pattern matching}},
  key = {LPM},
  note = {http://moscova.inria.fr/~maranget/papers/warn/warn005.html}}

@book{LaL90,
  author = {LaLonde, Wilf R. and Pugh, John R.},
  title = {Inside Smalltalk: vol. 1},
  publisher = {Prentice-Hall, Inc.},
  year = {1990},
  address = {Upper Saddle River, NJ, USA},
  isbn = {0-13-468414-1}}

@inproceedings{LaLo86a,
  author = {Wilf R. LaLonde and Dave A. Thomas and John R. Pugh},
  title = {An Exemplar Based {Smalltalk}},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {322--330},
  year = {1986},
  month = nov}

@inproceedings{LaLo88a,
  author = {Wilf R. LaLonde and Mark Van Gulik},
  title = {Building a Backtracking Facility in {Smalltalk} Without Kernel Support},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {105--122},
  year = {1988},
  doi = {10.1145/62083.62094},
  month = nov}

@book{LaLo90a,
  author = {Wilf LaLonde and John Pugh},
  title = {Inside {Smalltalk}: Volume 1},
  publisher = {Prentice Hall},
  year = {1990},
  isbn = {0-13-468414-1}}

@article{LaLo91a,
  author = {Wilf LaLonde and John Pugh},
  title = {{Subclassing} $\neq$ {Subtyping} $\neq$ {Is}-a},
  journal = {Journal of Object-Oriented Programming},
  volume = {3},
  pages = {57--62},
  year = {1991},
  url = {http://scgresources.unibe.ch/~scg/Literature/PL/LaLo91a-JOOP0305.pdf},
  month = jan,
  number = {5}}

@book{LaLo91b,
  author = {Wilf LaLonde and John Pugh},
  title = {Inside {Smalltalk}: Volume 2},
  publisher = {Prentice Hall},
  year = {1991},
  isbn = {0-13-465964-3}}

@book{LaLo94a,
  author = {Wilf LaLonde},
  title = {Discovering {Smalltalk}},
  publisher = {The Benjamin Cummings Publishing Co. Inc.},
  year = {1994},
  isbn = {0-8053-2720-7}}

@mastersthesis{LaTo04a,
  author = {Thomas LaToza},
  title = {The Understanding and Modification of Procedural and Object-OrientedPrograms - Wnen does Knowledge Help?},
  year = {2004},
  school = {University of Illinois},
  type = {Diploma {Thesis}}}

@article{Laab19a,
  author = {Laaber, Christoph and Scheuner, Joel and Leitner, Philipp},
  title = {Software microbenchmarking in the cloud. How bad is it really?},
  journal = {Empirical Software Engineering},
  volume = {24},
  pages = {2469--2508},
  year = {2019},
  url = {https://doi.org/10.1007/s10664-019-09681-1},
  doi = {10.1007/s10664-019-09681-1},
  abstract = {Rigorous performance engineering traditionally assumes measuring on bare-metal environments to control for as many confounding factors as possible. Unfortunately, some researchers and practitioners might not have access, knowledge, or funds to operate dedicated performance-testing hardware, making public clouds an attractive alternative. However, shared public cloud environments are inherently unpredictable in terms of the system performance they provide. In this study, we explore the effects of cloud environments on the variability of performance test results and to what extent slowdowns can still be reliably detected even in a public cloud. We focus on software microbenchmarks as an example of performance tests and execute extensive experiments on three different well-known public cloud services (AWS, GCE, and Azure) using three different cloud instance types per service. We also compare the results to a hosted bare-metal offering from IBM Bluemix. In total, we gathered more than 4.5 million unique microbenchmarking data points from benchmarks written in Java and Go. We find that the variability of results differs substantially between benchmarks and instance types (by a coefficient of variation from 0.03{\%} to > 100{\%}). However, executing test and control experiments on the same instances (in randomized order) allows us to detect slowdowns of 10{\%} or less with high confidence, using state-of-the-art statistical tests (i.e., Wilcoxon rank-sum and overlapping bootstrapped confidence intervals). Finally, our results indicate that Wilcoxon rank-sum manages to detect smaller slowdowns in cloud environments.},
  da = {2019/08/01},
  date-added = {2022-07-12 13:53:24 +0000},
  date-modified = {2022-07-12 13:53:53 +0000},
  id = {Laaber2019},
  isbn = {1573-7616},
  number = {4},
  read = {0},
  ty = {JOUR}}

@book{Laar87a,
  author = {P. J. M. Laarhoven and E. H. L. Aarts},
  title = {Simulated annealing: theory and applications},
  publisher = {Kluwer Academic Publishers},
  year = {1987}}

@inproceedings{Lac18a,
  author = {Lacomis, Jeremy and Jaffe, Alan and Schwartz, Edward J and Le Goues, Claire and Vasilescu, Bogdan},
  title = {Statistical Machine Translation is a Natural Fit for Automatic Identifier Renaming in Software Source Code},
  booktitle = {Workshops at the Thirty-Second AAAI Conference on Artificial Intelligence},
  year = {2018}}

@article{Lace20a,
  author = {Lacerda, Guilherme and Petrillo, Fabio and Pimenta, Marcelo and Gu{\'e}h{\'e}neuc, Yann Ga{\"e}l},
  title = {Code smells and refactoring: A tertiary systematic review of challenges and observations},
  journal = {Journal of Systems and Software},
  volume = {167},
  pages = {110610},
  publisher = {Elsevier},
  year = {2020}}

@article{Lach20a,
  author = {Lachaux, Marie-Anne and Roziere, Baptiste and Chanussot, Lowik and Lample, Guillaume},
  title = {Unsupervised {Translation} of {Programming} {Languages}},
  journal = {arXiv:2006.03511 [cs]},
  year = {2020},
  url = {http://arxiv.org/abs/2006.03511}}

@book{Lach95,
  author = {T. Lachand-Robert},
  title = {La maitrise de TeX et LaTeX},
  publisher = {Mason},
  year = {1995},
  isbn = {2-225-84832-7}}

@inproceedings{Laco91a,
  author = {Serge Lacourte},
  title = {Exceptions in Guide, an Object-Oriented Language for Distributed Applications},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {268--287},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@article{Ladd97a,
  author = {Laddaga, R. and Veitch, J.},
  title = {Dynamic Object Technology},
  journal = {Communications of the ACM},
  volume = {40},
  pages = {36--38},
  publisher = {ACM Press},
  year = {1997},
  month = may,
  number = {5}}

@article{Laem01a,
  author = {Ralf L\"ammel and Chris Verhoef},
  title = {Semi-automatic Grammar Recovery},
  journal = {Software---Practice \& Experience},
  volume = {31},
  pages = {1395--1438},
  year = {2001},
  url = {http://www.cs.vu.nl/grammars/ge.html},
  doi = {10.1002/spe.423.abs},
  month = dec,
  number = {15}}

@article{Laem01b,
  author = {Ralf L\"ammel and Chris Verhoef},
  title = {Cracking the 500-Language Problem},
  journal = {IEEE Software},
  volume = {18},
  pages = {78--88},
  year = {2001},
  url = {http://csdl2.computer.org/dl/mags/so/2001/06/s6078.htm http://csdl.computer.org/dl/mags/so/2001/06/s6078.pdf},
  doi = {10.1109/52.965809},
  month = nov,
  number = {6}}

@inproceedings{Laem05a,
  author = {Ralf L{\"a}mmel and Simon L. Peyton Jones},
  title = {Scrap your boilerplate with class: extensible generic functions},
  booktitle = {ICFP},
  pages = {204-215},
  year = {2005},
  url = {http://research.microsoft.com/~simonpj/papers/hmap/gmap3.pdf},
  doi = {10.1145/1086365.1086391}}

@inproceedings{Laen88a,
  author = {Els Laenens and Dirk Vermeir},
  title = {An Overview of {OOPS}+, An Object-Oriented Database Programming Language},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {350--373},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Laen89a,
  author = {Els Laenens and Fran\c{c}ois Staes and Dirk Vermeir},
  title = {A Customizable Window-Interface to Object-Oriented Databases},
  booktitle = {Proceedings ECOOP '89},
  pages = {367--381},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@techreport{Laff85a,
  author = {M.R. Laff and Brent Hailpern},
  title = {{SW} 2 --- An Object-based Programming Environment},
  year = {1985},
  institution = {IBM Thomas J. Watson Research Center, Yorktown Heights, New York},
  type = {Technical Report}}

@article{Laff91a,
  author = {J. van den Bos and C. Laffra},
  title = {PROCOL: a Concurrent Object-Oriented Langugae with Protocols delegation and constraints},
  journal = {Acta Informatica},
  volume = {28},
  pages = {511--538},
  year = {1991}}

@phdthesis{Laff92a,
  author = {Chris Laffra},
  title = {{PROCOL} --- {A} Concurrent Object Language with Protocols, Delegation, Persistence and Constraints},
  year = {1992},
  school = {Erasmus University of Rotterdam},
  month = may,
  type = {{Ph.D}. Thesis}}

@inproceedings{Laff94a,
  author = {C. Laffra and A. Malhotra},
  title = {HotWire --- {A} Visual Debugger for {C}++},
  booktitle = {Proceedings of USENIX C++ Technical Conference},
  pages = {109--122},
  year = {1994}}

@inproceedings{Lafo88a,
  author = {Yves Lafont},
  title = {Introduction to Linear Logic},
  booktitle = {Lecture notes for the Summer School on Constructive Logics and Category Theory},
  year = {1988},
  address = {Isle of Thorna},
  month = aug}

@article{Lafo88b,
  author = {Yves Lafont},
  title = {The Linear Abstract Machine},
  journal = {Theoretical Computer Science},
  volume = {59},
  pages = {157--180},
  publisher = {North-Holland},
  year = {1988}}

@inproceedings{Lafo90a,
  author = {Yves Lafont},
  title = {Sequent Calculus and Linear Logic},
  booktitle = {Lecture Notes for the 2nd European Summer School in Language, Logic and Information},
  year = {1990},
  misc = {July-Aug.},
  address = {Leuven},
  month = jul}

@inproceedings{Lafo90b,
  author = {Yves Lafont},
  title = {Interaction Nets},
  booktitle = {Proceedings POPL '90},
  pages = {95--108},
  year = {1990},
  misc = {Jan 17-19},
  address = {San Francisco},
  month = jan}

@inproceedings{Lagu97a,
  author = {Bruno Lagu{\"e} and Daniel Proulx and Ettore M. Merlo and Jean Mayrand and John Hudepohl},
  title = {Assessing the Benefits of Incorporating Function Clone Detection in a Development Process},
  booktitle = {Proceedings of {ICSM} (International Conference on Software Maintenance)},
  year = {1997},
  organization = {IEEE}}

@inproceedings{Lagu98a,
  author = {Bruno Lagu{\"e} and Charles Leduc and Andr{\'e} Le Bon and Ettore Merlo and Michel Dagenais},
  title = {An Analysis Framework for Understanding Layered Software Architectures},
  booktitle = {Proceedings IWPC '98},
  year = {1998}}

@inproceedings{Lahi04a,
  author = {Philippe Lahire and Gabriela Ar{\'e}valo and Hern{\'a}n Astudillo and Andrew P. Black and Erik Ernst and Marianne Huchard and T. Oplustil and Markku Sakkinen and Petko Valtchev},
  title = {MASPEGHI 2004 Mechanisms for Specialization, Generalization and Inheritance},
  booktitle = {ECOOP Workshops},
  pages = {101--117},
  year = {2004},
  url = {http://scg.unibe.ch/archive/papers/Lahi04aECOOP04MaspeghiWorkshop.pdf}}

@inproceedings{Lahi14a,
  author = {Lahiri, Shibamouli},
  title = {Complexity of Word Collocation Networks: A Preliminary Structural Analysis},
  booktitle = {Proceedings of the Student Research Workshop at the 14th Conference of the European Chapter of the Association for Computational Linguistics},
  pages = {96--105},
  publisher = {Association for Computational Linguistics},
  year = {2014},
  url = {http://www.aclweb.org/anthology/E14-3011},
  address = {Gothenburg, Sweden},
  month = {apr}}

@inproceedings{Lai91a,
  author = {K-Y. Lai and T.W. Malone},
  title = {Object Lens: {A} ``Spreadsheet'' for Cooperative Work},
  booktitle = {Proceedings CSCW '88},
  pages = {115--124},
  year = {1991},
  address = {Portland, Oregon},
  month = sep}

@inproceedings{Lakh00a,
  author = {Lakhotia and Gravley},
  title = {Toward Experimental Evaluation of Subsystem Classification Recovery Techniques},
  booktitle = {Proceedings of Working Conference on Reverse Engineering ({WCRE})},
  pages = {262--272},
  publisher = {IEEE CS},
  year = {1995},
  doi = {10.1109/{WCRE}.1995.514714}}

@inproceedings{Lakh03a,
  author = {Arun Lakhotia and Junwei Li and Andrew Walenstein and Yun Yang},
  title = {Towards a Clone detection Benchmark Suite and results Archive},
  booktitle = {Proc. of the 11th International IEEE Workshop on Program Comprehension (IWPC'03)},
  pages = {285--286},
  publisher = {IEEE},
  year = {2003},
  month = may}

@inproceedings{Lakh04a,
  author = {Arun Lakhotia and Moinuddin Mohammed},
  title = {Imposing Order on Program Statements to Assist Anti-Virus Scanners},
  booktitle = {Proceedings of Eleventh Working Conference on Reverse Engineering ({WCRE}'04)},
  pages = {161--170},
  publisher = {IEEE Computer Society},
  year = {2004},
  address = {Delft, the Netherlands},
  month = nov}

@inproceedings{Lakh93a,
  author = {A. Lakhotia},
  title = {{Rule-based approach to computing module cohesion}},
  booktitle = {Proceedings 15th ICSE},
  pages = {35--44},
  year = {1993},
  abstract = {Stevens, Myers, and Constantine introduced the
notion of cohesion, an ordinal scale of seven levels
that describes the degree to which the actions
performed by a module contribute to a unified
function [12]. They provided rules, termed as
`associative principles' to examine the
relationships between `processing elements' of a
module and designate a cohesion level to it. Stevens
et. al., however, did not give a precise definition
for the term `processing element', thereby leaving
it open for interpretations.This paper interprets
the `output variables' (not statements) of a module
as its processing elements. Stevens et. al.'s
associative principles are transformed to relate the
output variables based on their `data' and `control
dependence' relationships. What results is a
rule-based approach to computing cohesion.
Experimental results show that, but for temporal
cohesion, the cohesion associated to a module under
our reinterpretation and that due to the original
Definitions are identical for all examples.}}

@article{Lakh97a,
  author = {A. Lakhotia},
  title = {A unified framework for expressing software subsystem classification techniques},
  journal = {Journal of Systems and Software},
  pages = {211--231},
  year = {1997},
  month = mar}

@article{Lakho93a,
  author = {Lakhotia, Arun},
  title = {Understanding someone else's code: Analysis of experiences.},
  journal = {J. Syst. Softw.},
  volume = {23},
  pages = {269--275},
  year = {1993},
  number = {3}}

@book{Lako90a,
  author = {George Lakoff},
  title = {Woman, Fire, And Dangerous Things},
  publisher = {University Of Chicago Press},
  year = {1990},
  isbn = {0226468046}}

@book{Lako96a,
  author = {John Lakos},
  title = {Large Scale C++ Software Design},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63362-0}}

@article{Lalo89a,
  author = {Wilf R. LaLonde},
  title = {Designing Families of Data Types Using Exemplars},
  journal = {Transactions on Programming Languages and Systems},
  volume = {11},
  pages = {212--248},
  year = {1989},
  month = apr,
  number = {2},
  organization = {ACM}}

@article{Lalo94b,
  author = {Wilf Lalonde and John Pugh},
  title = {{Gathering} {Metric} {Information} using {Metalevel} {Facilities}},
  journal = {Journal of Object-Oriented Programming},
  pages = {33--37},
  year = {1994},
  month = mar}

@inproceedings{Lam08a,
  author = {Lam, Monica S. and Martin, Michael and Livshits, Benjamin and Whaley, John},
  title = {Securing Web Applications with Static and Dynamic Information Flow Tracking},
  booktitle = {PEPM'08},
  year = {2008},
  keywords = {security static type model checking}}

@book{Lamb97a,
  author = {Kenneth A. Lambert and Martin Osborne},
  title = {Smalltalk in Brief},
  publisher = {PWS Publishing Company},
  year = {1997}}

@inproceedings{Lamm93a,
  author = {Michael G. Lamming},
  title = {Intimate Computing and the Memory Prosthesis: {A} Challenge for Computer Systems Research?},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {1--3},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {(abstract of keynote address)},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@article{Lamp73a,
  author = {Butler W. Lampson},
  title = {A note on the confinement problem},
  journal = {Commun. ACM},
  volume = {16},
  pages = {613--615},
  publisher = {ACM},
  year = {1973},
  doi = {10.1145/362375.362389},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {10}}

@article{Lamp78a,
  author = {Leslie Lamport},
  title = {Time, Clocks, and the Ordering of Events in a Distributed System},
  journal = {CACM},
  volume = {21},
  year = {1978},
  month = jul,
  number = {7}}

@article{Lamp80a,
  author = {Butler W. Lampson and D.D. Redell},
  title = {Experience with Processes and Monitors in Mesa},
  journal = {CACM},
  volume = {23},
  pages = {105--117},
  year = {1980},
  month = feb,
  number = {2}}

@incollection{Lamp81a,
  author = {Butler W. Lampson},
  title = {Atomic Transactions},
  booktitle = {Distributed Systems --- Architecture and Implementation},
  volume = {150},
  pages = {246--265},
  publisher = {Springer-Verlag},
  year = {1981},
  editor = {B.W. Lampson and M. Paul and H.J. Siegert},
  series = {LNCS}}

@article{Lamp83a,
  author = {Leslie Lamport},
  title = {Specifying Concurrent Program Modules},
  journal = {ACM TOPLAS},
  volume = {5},
  pages = {190--222},
  year = {1983},
  month = apr,
  number = {2}}

@article{Lamp88a,
  author = {Leslie Lamport},
  title = {Control Predicates Are Better Than Dummy Variables for Reasoning About Program Control},
  journal = {ACM TOPLAS},
  volume = {10},
  pages = {267--281},
  year = {1988},
  month = apr,
  number = {2}}

@article{Lamp89a,
  author = {Leslie Lamport},
  title = {A Simple Approach to Specifying Concurrent Systems},
  journal = {CACM},
  volume = {32},
  pages = {32--45},
  year = {1989},
  month = jan,
  number = {1}}

@techreport{Lamp90a,
  author = {Leslie Lamport},
  title = {A Temporal Logic of Actions},
  year = {1990},
  address = {Palo Alto, California},
  institution = {DEC Systems Research Center},
  month = apr,
  number = {57},
  type = {Technical Report}}

@inproceedings{Lamp90b,
  author = {John Lamping},
  title = {An algorithm for optimal lambda calculus reduction},
  booktitle = {POPL '90: Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages = {16--30},
  publisher = {ACM},
  year = {1990},
  doi = {10.1145/96709.96711},
  address = {New York, NY, USA},
  isbn = {0-89791-343-4},
  location = {San Francisco, California, United States}}

@techreport{Lamp91a,
  author = {Leslie Lamport},
  title = {The Temporal Logic of Actions},
  year = {1991},
  address = {Palo Alto, California},
  institution = {DEC Systems Research Center},
  month = dec,
  number = {79},
  type = {Technical Report}}

@inproceedings{Lamp93a,
  author = {John Lamping},
  title = {Typing the Specialization Interface},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {201--214},
  year = {1993},
  month = oct}

@inproceedings{Lamp94a,
  author = {John Lamping and Mart{\'\i}n Abadi},
  title = {Methods as Assertions},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {60--80},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@book{Lamp94b,
  author = {Leslie Lamport},
  title = {Latex User's Guide and Reference Manual},
  publisher = {Addison Wesley},
  year = {1994},
  edition = {2nd},
  isbn = {0-201-52983-1}}

@inproceedings{Lamp95a,
  author = {John Lamping and Ramana Rao and Peter Pirolli},
  title = {A {Focus} + {Context} {Technique} based on {Hyperbolic} {Geometry} for {Visualising} {Large} {Hierarchies}},
  booktitle = {Proceedings of CHI '95 (International Conference on Human Factors in Computing Systems)},
  publisher = {ACM Press},
  year = {1995},
  location = {Denver, Colorado, USA}}

@book{Lams91a,
  title = {Proceedings {ESEC}'91},
  volume = {550},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Kaiserslautern, Germany},
  editor = {van Lamsweerde, A.Fugetta, A.},
  isbn = {3-540-54742-8},
  month = sep,
  series = {LNCS}}

@article{Land11a,
  author = {Tatiana von Landesberger and Arjan Kuijper and Tobias Schreck and J{\"o}rn Kohlhammer and Jarke J. van Wijk and Jean-Daniel Fekete and Dieter W. Fellner},
  title = {Visual Analysis of Large Graphs: State-of-the-Art and Future Research Challenges},
  journal = {Comput. Graph. Forum},
  volume = {30},
  pages = {1719-1749},
  year = {2011},
  ee = {http://dx.doi.org/10.1111/j.1467-8659.2011.01898.x},
  number = {6}}

@inproceedings{Land17a,
  author={Landman, Davy and Serebrenik, Alexander and Vinju, Jurgen J.},
  booktitle={2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE)},
  title={Challenges for Static Analysis of Java Reflection - Literature Review and Empirical Study},
  year={2017},
  volume={},
  number={},
  pages={507-518},
  keywords={Java;Tools;Bibliographies;Grammar;Software;Systematics;Semantics;Java;Reflection;Static Analysis;Systematic Literature Review;Empirical Study},
  doi={10.1109/ICSE.2017.53}}

@article{Land66a,
  author = {P.J. Landin},
  title = {The Next 700 Programming Languages},
  journal = {Communications of the ACM},
  volume = {9},
  pages = {157--166},
  year = {1966},
  url = {http://www.cs.utah.edu/~eeide/compilers/old/papers/p157-landin.pdf},
  doi = {10.1145/365230.365257},
  issn = {0001-0782},
  month = mar,
  number = {3}}

@article{Land81a,
  author = {C.E. Landwehr},
  title = {Formal Models for Computer Security},
  journal = {ACM Computing Surveys},
  volume = {13},
  pages = {247--278},
  year = {1981},
  month = sep,
  number = {3}}

@inproceedings{Land90a,
  author = {T. Landauer and M. Littmann},
  title = {Fully automatic cross-language document retrieval using latent semantic indexing},
  booktitle = {In Proceedings of the 6th Conference of the UW Centre for the New Oxford English Dictionary and Text Research},
  pages = {31--38},
  year = {1990}}

@inproceedings{Land97a,
  author = {T. Landauer and S. Dumais},
  title = {The Latent Semantic Analysis Theory of Acquisition, Induction, and Representation of Knowledge},
  booktitle = {Psychological Review},
  volume = {104/2},
  pages = {211--240},
  year = {1991}}

@inproceedings{Lane18a,
  author = {Lanese, Ivan},
  title = {From reversible semantics to reversible debugging},
  booktitle = {Reversible Computation: 10th International Conference, RC 2018, Leicester, UK, September 12-14, 2018, Proceedings 10},
  pages = {34--46},
  year = {2018},
  organization = {Springer}}

@techreport{Lane90a,
  author = {Thomas G. Lane},
  title = {A Design Space and Design Rules for User Interface Software Architecture},
  year = {1990},
  institution = {Carnegie Mellon University, Software Engineering Institute},
  month = nov,
  type = {{CMU/SEI-90-TR-22, ESD-90-TR-223}}}

@book{Lane92a,
  author = {Cosimo Laneve and Ugo Montanari},
  title = {Mobility in the {CC}-Paradigm},
  volume = {629},
  pages = {336--345},
  publisher = {Springer-Verlag},
  year = {1992},
  series = {LNCS}}

@inproceedings{Lang05a,
  author = {Guillaume Langelier and Houari A. Sahraoui and Pierre Poulin},
  title = {Visualization-based analysis of quality for large-scale software systems},
  booktitle = {ASE '05: Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
  pages = {214--223},
  publisher = {ACM},
  year = {2005},
  url = {http://dx.doi.org/10.1145/1101908.1101941},
  doi = {10.1145/1101908.1101941},
  address = {New York, NY, USA},
  isbn = {1-59593-993-4},
  location = {Long Beach, CA, USA}}

@inproceedings{Lang07a,
  author = {Christian F.J. Lange and Michel Chaudron},
  title = {Interactive Views to Improve the Comprehension of UML Models - An Experimental Validation},
  booktitle = {Proceedings of {ICPC} 2007 (15th IEEE International Conference on Program Comprehension)},
  pages = {221 - 230},
  publisher = {IEEE CS Press},
  year = {2007}}

@inproceedings{Lang08a,
  author = {Daniel Langone and Toon Verwaest},
  title = {Extracting models from {IDEs}},
  booktitle = {2nd Workshop on FAMIX and Moose in Software Reengineering (FAMOOSr 2008)},
  pages = {32--35},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Lang08aModelExtraction.pdf},
  abstract = {Systems must co-evolve with their context. Reverse
engineering tools are a great help in this process
of required adaption. In order for these tools to be
flexible, they work with models, abstract
representations of the source code. The extraction
of such information from source code can be done
using a parser. However, it is fairly tedious to
build new parsers. And this is made worse by the
fact that it has to be done over and over again for
every language we want to analyze. In this paper we
propose a novel approach which minimizes the
knowledge required of a certain language for the
extraction of models implemented in that language by
reflecting on the implementation of preparsed ASTs
provided by an IDE. In a second phase we use a
technique referred to as Model Mapping by Example to
map platform dependent models onto domain specific
model.},
  medium = {2},
  month = oct}

@techreport{Lang09a,
  author = {Daniel Langone},
  title = {Recycling Trees: Mapping {Eclipse} {ASTs} to {Moose} Models},
  year = {2009},
  url = {http://scg.unibe.ch/archive/projects/Lang09a.pdf},
  abstract = {Reverse engineering tools are a great help in the
process of adapting an existing software system to
novel contexts. Current implementations use models
of software systems to keep themselves language
independent. This also implies that the models have
to be built before a software system can be analyzed
by such a tool. A common approach is to build
language specific parsers to extract the information
from the source-code. But: Manually building parsers
is tedious work. This calls for a new approach. In
our approach we rely on the fact that there are
already pre-parsed ASTs of software systems. Such
parsing applications can be found in applications
which host software systems of several languages.
These ASTs are needed by the host application to
provide auto-completion or syntax highlighting for
example. In order to minimize the required knowledge
about a certain language when extracting models we
recycle those ASTs. We hook into a specific host
application, Eclipse, and the ASTs generated by such
parsing applications, namely language plugins. Such
a language plugin is responsible for building the
AST from a software system written in that language
and thus provides support for that language to
Eclipse. The basic idea relies on extracting the
information of such an AST to build a model which
can be used by reverse engineering applications.},
  institution = {University of Bern},
  month = jan,
  type = {Bachelor's thesis}}

@article{Lang19a,
  author = {Lang, Michel and Binder, Martin and Richter, Jakob and Schratz, Patrick and Pfisterer, Florian and Coors, Stefan and Au, Quay and Casalicchio, Giuseppe and Kotthoff, Lars and Bischl, Bernd},
  title = {mlr3: A modern object-oriented machine learning framework in R},
  journal = {Journal of Open Source Software},
  volume = {4},
  pages = {1903},
  year = {2019},
  number = {44}}

@inproceedings{Lang86a,
  author = {Kevin J. Lang and Barak A. Pearlmutter},
  title = {Oaklisp: an Object-Oriented Scheme with First Class Types},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {30--37},
  year = {1986},
  month = nov}

@article{Lang88a,
  author = {Kevin J. Lang and Barak A. Pearlmutter},
  title = {Oaklisp: an Object-Oriented Dialect of Scheme},
  journal = {Lisp and Symbolic Computation: An International Journal},
  volume = {1},
  pages = {39--51},
  publisher = {Kluwer Academic Publishers},
  year = {1988},
  abstract = {This paper contains a description of Oaklisp, a
dialect of Lisp incorporating lexical scoping,
multiple inheritance, and first-class types. This
description is followed by a revisionist history of
the Oaklisp design, in which a crude map of the
space of object-oriented Lisps is drawn and some
advantages of first-class types are explored.
Scoping issues are discussed, with a particular
emphasis on instance variables and top-level
namespaces. The question of which should come first,
the lambda or the object is addressed, with Oaklisp
providing support for the latter approach.},
  month = may,
  number = {1}}

@book{Lang89a,
  author = {Christopher G. Langton},
  title = {Artificial Life},
  publisher = {Addison-Wesley},
  year = {1989},
  address = {Redwood City, CA}}

@inproceedings{Lang95a,
  author = {Danny Lange and Yuichi Nakamura},
  title = {Interactive Visualization of Design Patterns can help in Framework Understanding},
  booktitle = {Proceedings ACM International Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA'95)},
  pages = {342--357},
  publisher = {ACM Press},
  year = {1995},
  address = {New York NY}}

@inproceedings{Lang95b,
  author = {D.B. Lange and Y. Nakamura},
  title = {Program Explorer: {A} Program Visualizer for {C}++},
  booktitle = {Proceedings of Usenix Conference on Object-Oriented Technologies},
  pages = {39--54},
  year = {1995}}

@techreport{Lang95c,
  author = {D.B. Lange and Y. Nakamura},
  title = {Object-Oriented Program Tracing and Visualization},
  year = {1995},
  institution = {IBM Research, Tokyo Research Laboratory},
  number = {RT0111},
  type = {Research Report}}

@article{Lang97a,
  author = {Danny B. Lange and Yuichi Nakamura},
  title = {Object-Oriented Program Tracing and Visualization},
  journal = {Computer},
  volume = {30},
  pages = {63-70},
  publisher = {IEEE Computer Society},
  year = {1997},
  doi = {10.1109/2.589912},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {5}}

@article{Lang98a,
  author = {Danny B. Lange and Mitsuru Oshima},
  title = {Mobile Agents with {Java}: The Aglet {API}},
  journal = {World Wide Web Journal},
  year = {1998}}

@inproceedings{Lano13a,
  author = {Lano, Kevin and Rahimi, Shekoufeh Kolahdouz},
  title = {Optimising Model-transformations using Design Patterns.},
  booktitle = {1st International Conference on Model-Driven Engineering and Software Development},
  pages = {77--82},
  year = {2013}}

@article{Lano14a,
  author = {Kevin Lano and Shekoufeh Kolahdouz Rahimi},
  title = {Model-Transformation Design Patterns},
  journal = {{IEEE} Transactions on Software Engineering},
  volume = {40},
  pages = {1224--1259},
  year = {2014},
  number = {12}}

@inproceedings{Lano92a,
  author = {K.C. Lano and H. Haughton},
  title = {Reasoning and Refinement in Object-Oriented Specification Languages},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {78--97},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{Lanz01c,
  author = {Michele Lanza},
  title = {The Evolution Matrix: Recovering Software Evolution using Software Visualization Techniques},
  booktitle = {Proceedings of the International Workshop on Principles of Software Evolution},
  pages = {37--42},
  year = {2001},
  url = {http://scg.unibe.ch/archive/papers/Lanz01cEvolutionMatrix.pdf},
  doi = {10.1145/602461.602467},
  abstract = {One of the major problems in software evolution is
coping with the complexity which stems from the huge
amount of data that must be considered. The current
approaches to deal with that problem all aim at a
reduction of complexity and a filtering of the
relevant information. In this paper we propose an
approach based on a com- bination of software
visualization and software metrics which we have
already successfully applied in the field of
software reverse engineering. Using this approach we
discuss a simple and effective way to visualize the
evolution of software systems which helps to recover
the evolution of object oriented software systems.},
  series = {IWPSE'01}}

@inproceedings{Lanz03a,
  author = {Michele Lanza},
  title = {{CodeCrawler} --- Lessons Learned in Building a Software Visualization Tool},
  booktitle = {European {C}onference on {S}oftware {M}aintenance and {R}eengineering ({CSMR})},
  pages = {409--418},
  publisher = {IEEE Press},
  year = {2003},
  misc = {acceptance rate: 40/118 = 34\%},
  url = {http://scg.unibe.ch/archive/papers/Lanz03aLessonsLearned.pdf},
  doi = {10.1109/CSMR.2003.1192450},
  abstract = {Software visualization tools face many challenges in
terms of their implementation, including
scalability, usability, adaptability, and
durability. Such tools, like many other research
tools, tend to have a short life cycle and are
vulnerble to software evolution processes because of
the complex problem domain and the constantly
changing requirements which are dictated by research
goals. In this paper we discuss the implementation
of the software visualization tool CodeCrawler
according to five criteria, namely the overall
architecture, the internal architecture, the
visualization engine, the metamodel and the
interactive facilities. This discussion generates
implementation recommendations and design guidelines
that hold for our tool and the class of tools its
stands for. We then also extract common design
guidelines and recommendations that apply for other
software visualization and general reverse
engineering tools as well, and hope that these
insights can be used fruitfully by other researchers
in this field.},
  acceptnum = {40},
  accepttotal = {118}}

@phdthesis{Lanz03b,
  author = {Michele Lanza},
  title = {Object-Oriented Reverse Engineering --- Coarse-grained, Fine-grained, and Evolutionary Software Visualization},
  year = {2003},
  school = {University of Bern},
  misc = {Recipient of the Denert-Stiftung Software Engineering Prize 2003},
  url = {http://scg.unibe.ch/archive/phd/lanza-phd.pdf},
  abstract = {The maintenance, reengineering, and evolution of
object-oriented software systems has become a vital
matter in today's software industry. Although most
systems start off in a clean and well-designed
state, with time they tend to gradually decay in
quality, unless the systems are reengineered and
adapted to the evolving requirements. However,
before such legacy software systems can be
reengineered and evolved, they must be reverse
engineered, i.e., their structure and inner working
must b e understood. This is difficult because of
several factors, such as the sheer size of the
systems, their complexity, their domain specificity,
and in general the bad state legacy software systems
are in. In this thesis we propose a visual approach
to the reverse engineering of object-oriented
software systems by means of polymetric views,
lightweight visualizations of software enriched with
metrics and other types of semantic information
about the software, e.g., its age, version,
abstractness, location, structure, function, etc. We
present and discuss several polymetric views which
allow us to understand three different aspects of
object-oriented software, namely (1) coarse-grained
aspects which allow for the understanding of very
large systems, (2) fine -grained aspects which allow
for the understanding of classes and class
hierarchies, and (3) evolutionary aspects, which
enable us to recover and understand the evolution of
a software system. The combination of these three
types of information can greatly reduce the time
needed to gain an understanding of an
object-oriented software system. Based on the
application of our polymetric views, we present our
reverse engineering methodology which we validated
and refined on several occasions in industrial set
tings. It allows us to explore and combine these
three approaches into one single visual approach to
understand software.},
  month = may}

@inproceedings{Lanz03c,
  author = {Michele Lanza},
  title = {Program Visualization Support for Highly Iterative Development Environments},
  booktitle = {Proceedings of VisSoft 2003 (2nd International Workshop on Visualizing Software for Understanding and Analysis)},
  pages = {62--67},
  publisher = {IEEE CS Press},
  year = {2003},
  url = {http://scg.unibe.ch/archive/papers/Lanz03cVisSoft.pdf},
  abstract = {Software Visualization is, despite the many
publications and advances in this research field,
still not being considered by mainstream software
industry: currently very few integrated development
environments offer (if at all) only limited
visualization support, and in general it can be said
that software visualization is being ignored at a
professional level by the average software
developer. Moreover, even relatively successful
software visualization tools (such as Rigi, Shrimp,
JInsight, etc.) are seldom being used except by
their developers themselves. In this position paper,
based on our own experience and an analysis of the
current state and possible future trends of
integrated development environments, we put up a
non-exhaustive list of features that software
visualization tools should possess in the future to
have more consideration by mainstream development.}}

@inproceedings{Lanz03e,
  author = {Michele Lanza},
  title = {{CodeCrawler} --- A Lightweight Software Visualization Tool},
  booktitle = {Proceedings of VisSoft 2003 (2nd International Workshop on Visualizing Software for Understanding and Analysis)},
  pages = {51--52},
  publisher = {IEEE CS Press},
  year = {2003},
  url = {http://scg.unibe.ch/archive/papers/Lanz03eVisSoft.pdf},
  abstract = {CodeCrawler is a language independent software visu-
alization tool. It is mainly targeted at visualizing
object- oriented software, and in its newest
implementation it has become a general information
visualization tool. It has been validated in several
industrial case studies over the past few years. It
strongly adheres to lightweight princi- ples:
CodeCrawler implements and visualizes polymetric
views, lightweight visualizations of software
enriched with semantic information such as software
metrics and source code information.}}

@inproceedings{Lanz04b,
  author = {Michele Lanza},
  title = {{CodeCrawler} --- Polymetric Views in Action},
  booktitle = {Proceedings of the 19th IEEE International Conference on Automated Software Engineering},
  pages = {394--395},
  publisher = {IEEE CS Press},
  year = {2004},
  series = {ASE'04}}

@book{Lanz06a,
  author = {Michele Lanza and Radu Marinescu},
  title = {Object-Oriented Metrics in Practice},
  publisher = {Springer-Verlag},
  year = {2006},
  url = {http://www.springer.com/alert/urltracking.do?id=5907042},
  isbn = {3-540-24429-8}}

@mastersthesis{Lanz99a,
  author = {Michele Lanza},
  title = {Combining {Metrics} and {Graphs} for {Object} {Oriented} {Reverse} {Engineering}},
  year = {1999},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Lanz99a.pdf},
  abstract = {A software system may become very large during its
evolution, getting less maintain-able while its
complexity rises. Since replacing the system with a
new one is often out of question because of economic
considerations, reengineering techniques are being
developed to change the system into a form which
makes it easier to maintain and to further develop.
However, before a system can be reengineered, it has
to be reverse engineered in order to understand its
nature and inner logic. This work deals with a
lightweight approach to software reverse engineering
com-bining simple graphs with simple object oriented
metrics. Our goal is to obtain a simple and scalable
graphical display of a system and its parts through
which we succeed to visually extract information,
which is useful to the understanding of the system
and the detection of its design problems. The
primary goal of this work is to put up a repository
of combinations of graphs and metrics which are
useful to reverse engineer an object oriented
system. To validate our approach we implemented a
tool called CodeCrawler, which can graphically
dis-play source code while providing a layer of
interactivity to the user: we use the term
navigating the code. We ran CodeCrawler on two
Smalltalk case studies and one large industrial case
study written in C++. The positive experiences and
reactions which we obtained are a proof of the
usefulness of our idea.},
  month = oct,
  type = {Diploma {Thesis}}}

@incollection{Laor93a,
  author = {Amarit Laorakpong and Motoshi Saeki},
  title = {Object-Oriented Formal Specification Development using {VDM}},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {529--543},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {This paper introduces the Object-Oriented
Specification Language, a language based on Formal
Description Technique (FDT) in the style of Vienna
Development Method (VDM) so called OOVDM,
additionally includes its denotational semantics and
implementation. Our research contributes to the
extension of VDM by an Object-Oriented concept which
supports incremental and subtyping inheritance.
OOVDM has two types of modules, which are class
modules and type modules. Class modules define
objects having their internal states. Their states
can be changed states, i.e. values, and denote the
domains of the values. OOVDM has two kinds of
inheritance mechanisms---incremental inheritance and
subtyping inheritance. Both concepts are useful for
overloading existing descriptions and for
hierarchical classification of the objects.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Lapi00a,
  author = {S\'ebastien Lapierre and Bruno Lagu{\"e} and Charles Leduc},
  title = {Datrix(TM) Source Code Model and its Interchange Format: Lessons Learned and Considerations for Future Work},
  booktitle = {Proceedings of the ICSE 2000 Workshop on Standard Exchange Format (WoSEF 2000)},
  year = {2000},
  month = jun}

@article{Larm03a,
  author = {C. {Larman} and V. R. {Basili}},
  title = {Iterative and incremental developments. a brief history},
  journal = {Computer},
  volume = {36},
  pages = {47-56},
  year = {2003},
  doi = {10.1109/MC.2003.1204375},
  number = {6}}

@book{Larm98a,
  author = {Craig Larman},
  title = {Applying {UML} and Patterns, An Introduction to Object-Oriented Analysis and Design},
  publisher = {Prentice-Hall},
  year = {1998}}

@inproceedings{Laro03a,
  author = {David Larochelle and Karl Scheidt and Kevin Sullivan},
  title = {Join Point Encapsulation},
  booktitle = {Proceedings of the Workshop on Software Engineering Properties of Languages for Aspect Technologies (SPLAT)},
  year = {2003},
  url = {http://www.cs.virginia.edu/~eos/Publications.htm http://www.daimi.au.dk/~eernst/splat03/index.html},
  month = mar,
  note = {held in conjunction with AOSD 2003, Boston, MA}}

@inproceedings{Lars87a,
  author = {Kim G. Larsen and Robin Milner},
  title = {Verifying a Protocol Using Relativized Bisimulation},
  booktitle = {Proceedings ICALP '87},
  volume = {267},
  pages = {126--135},
  publisher = {Springer-Verlag},
  year = {1987},
  address = {Karlsruhe},
  editor = {Th. Ottmann},
  month = jul,
  series = {LNCS}}

@inproceedings{Lars88a,
  author = {Kim G. Larsen},
  title = {Proof Systems for Hennessy-Milner Logic with Recursion},
  booktitle = {Proceedings CAAP '88},
  volume = {299},
  pages = {215--230},
  publisher = {Springer-Verlag},
  year = {1988},
  address = {Nancy},
  editor = {M. Dauchet and M. Nivat},
  month = mar,
  series = {LNCS}}

@inproceedings{Lars88b,
  author = {Kim G. Larsen and Bent Thomsen},
  title = {A Modal Process Logic},
  booktitle = {Proceedings 3d Annual Symposium on Logic in Computer Science},
  year = {1988},
  address = {Edinburgh}}

@inproceedings{Lars89a,
  author = {Kim G. Larsen},
  title = {Modal Specifications},
  booktitle = {Automatic Verification Methods for Finite State Systems: Proceedings},
  volume = {407},
  pages = {232--246},
  publisher = {Springer-Verlag},
  year = {1989},
  editor = {Joseph Sifakis},
  series = {LNCS}}

@inproceedings{Lars89b,
  author = {Kim G. Larsen and Arne Skou},
  title = {Bisimulation Through Probabilistic Testing},
  booktitle = {Proceedings POPL '89},
  pages = {344--352},
  year = {1989},
  misc = {Jan 11-13},
  address = {Austin, Texas},
  month = jan}

@inproceedings{Lars90a,
  author = {Kim G. Larsen and Liu Xinxin},
  title = {Compositionality Through an Operational Semantics of Contexts},
  booktitle = {Proceedings ICALP '90},
  volume = {443},
  pages = {526--539},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Warwick U.},
  editor = {M.S. Paterson},
  month = jul,
  series = {LNCS}}

@book{Lars93a,
  author = {Gary Larson},
  title = {The Far Side Gallery 5},
  publisher = {Andrews McMeel Publishing},
  year = {1993}}

@inproceedings{Lars96a,
  author = {L. Larsen and M.J. Harrold},
  title = {Slicing Object-Oriented Software},
  booktitle = {Proceedings ICSE '96},
  pages = {495--505},
  year = {1996},
  organization = {IEEE}}

@techreport{Lasz93a,
  author = {Gregor von Laszewski},
  title = {A {Collection} of {Graph} {Partitioning} {Algorithms}: {Simulated} {Annealing}, {Simulated} {Tempering}, {Kernighan} {Lin}, {Two} {Optimal}, {Graph} {Reduction}, {Bisection}},
  year = {1993},
  address = {Syracuse, New York},
  institution = {Northeast Parallel Architectures Center, Syracuse University},
  number = {SCCS 477}}

@inproceedings{Late03a,
  author = {Mario Latendresse},
  title = {{RegReg}: a Lightweight Generator of Robust Parsers for Irregular Languages},
  booktitle = {Proceedings Tenth Working Conference on Reverse Engineering ({WCRE} 2003)},
  pages = {206--215},
  publisher = {IEEE Computer Society},
  year = {2003},
  doi = {10.1109/{WCRE}.2003.1287251},
  month = nov}

@inproceedings{Late03b,
  author = {Latendresse, Mario and Feeley, Marc},
  title = {Generation of Fast Interpreters for Huffman Compressed Bytecode},
  booktitle = {Workshop on Interpreters, Virtual Machines and Emulators},
  pages = {32--40},
  year = {2003},
  address = {New York, NY, USA},
  isbn = {1-58113-655-2},
  keywords = {Java, canonical Huffman code, code compression, decoder},
  location = {San Diego, California},
  numpages = {9},
  series = {IVME '03}}

@inproceedings{Lato06a,
  author = {LaToza, Thomas D and Venolia, Gina and DeLine, Robert},
  title = {Maintaining mental models: a study of developer work habits},
  booktitle = {Proceedings of the 28th international conference on Software engineering},
  pages = {492--501},
  year = {2006}}

@inproceedings{Lato10a,
  author = {LaToza, Thomas D. and Myers, Brad A.},
  title = {Hard-to-answer questions about code},
  booktitle = {Evaluation and Usability of Programming Languages and Tools},
  pages = {8:1--8:6},
  publisher = {ACM},
  year = {2010},
  articleno = {8},
  isbn = {978-1-4503-0547-1},
  series = {PLATEAU 10}}

@inproceedings{Latt04a,
  author = {C. {Lattner} and V. {Adve}},
  title = {LLVM: a compilation framework for lifelong program analysis and transformation},
  booktitle = {International Symposium on Code Generation and Optimization, 2004. CGO 2004.},
  pages = {75-86},
  year = {2004},
  doi = {10.1109/CGO.2004.1281665}}

@misc{Latt11a,
  author = {Craig Latta},
  title = {Spoon},
  note = {http://netjam.org/projects/spoon/}}

@inproceedings{Lau92a,
  author = {Wing-cheong Lau and Vineet Singh},
  title = {An Object-Oriented Class Library for Scalable Parallel Heuristic Search},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {252--267},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@book{Lau94a,
  author = {Christina Lau},
  title = {Object-Oriented Programming Using {SOM} and {DSOM}},
  publisher = {Van Nostrand Reinhold},
  year = {1994},
  isbn = {0-442-01948-3},
  month = mar}

@inproceedings{Laud12a,
  author = {Lauder, Marius and Anjorin, Anthony and Varr{\'o}, Gergely and Sch{\"u}rr, Andy},
  title = {Efficient model synchronization with precedence triple graph grammars},
  booktitle = {Graph Transformations: 6th International Conference, ICGT 2012, Bremen, Germany, September 24-29, 2012. Proceedings 6},
  pages = {401--415},
  year = {2012},
  organization = {Springer}}

@article{Laue98a,
  author = {S\/oren Lauesen},
  title = {Real Life Object-Oriented Systems},
  journal = {IEEE Software},
  pages = {76--83},
  publisher = {IEEE Computer Society Press},
  year = {1998},
  month = mar}

@inproceedings{Laur87a,
  author = {Jane Laursen and Robert Atkinson},
  title = {Opus: {A} {Smalltalk} Production System},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {377--387},
  year = {1987},
  month = dec}

@book{Laus96a,
  author = {G. Lausen and G. Vossen},
  title = {Objekt-orientierte Datenbanken: Modelle und Sprachen},
  publisher = {R. Oldenbourg Verlag},
  year = {1996},
  isbn = {3-486-22370-4}}

@inproceedings{Lauw23a,
  author = {Lauwaerts, Tom and Rojas Castillo, Carlos and Gonzalez Boix, Elisa and Scholliers, Christophe},
  title = {Out-of-Place Debugging on Constraint Devices with the EDWARD Debugger},
  booktitle = {Proceedings of the 1st ACM International Workshop on Future Debugging Techniques},
  pages = {3--4},
  year = {2023}}

@article{Lave95a,
  author = {R. Greg Lavender and Douglas C. Schmidt},
  title = {Active Object: an Object Behavioral Pattern for Concurrent Programming},
  journal = {Proc.Pattern Languages of Programs},
  year = {1995},
  url = {http://www.cs.wustl.edu/~schmidt/Active-Objects.ps.Z},
  month = sep}

@inproceedings{Law03a,
  author = {James Law and Gregg Rothermel},
  title = {Whole Program Path-Based Dynamic Impact Analysis},
  booktitle = {Proceedings of the 25th International Conference on Software Engineering},
  pages = {308--318},
  publisher = {IEEE Computer Society},
  year = {2003},
  series = {ICSE'03}}

@inproceedings{Lawa05a,
  author = {Lawall, Julia L and Muller, Gilles and Urunuela, Richard},
  title = {Tarantula: Killing driver bugs before they hatch},
  booktitle = {The 4th AOSD Workshop on Aspects, Components, and Patterns for Infrastructure Software (ACP4IS)},
  pages = {13--18},
  year = {2005}}

@inproceedings{Lawa09a,
  author = {Julia~L. Lawall and Julien Brunel and Nicolas Palix and Ren{\'e} Rydhof Hansen and Henrik Stuart and Gilles Muller},
  title = {{WYSIWIB}: A Declarative Approach to Finding {{API}} Protocols and Bugs in Linux Code},
  booktitle = {Proceeding of the International Conference on Dependable Systems and Networks},
  pages = {43--52},
  year = {2009},
  address = {Estoril (Lisbon), Portugal},
  date-added = {2009-10-20 14:54:13 +0200},
  date-modified = {2009-10-20 15:05:13 +0200},
  month = jun}

@inproceedings{Lawa10a,
  author = {Lawall, J. and Laurie, B. and Hansen, R.R. and Palix, N. and Muller, G.},
  title = {Finding Error Handling Bugs in OpenSSL Using Coccinelle},
  booktitle = {8th European Dependable Computing Conference},
  pages = {191--196},
  year = {2010}}

@book{Lawl89a,
  author = {Jo A. Lawless and Molly M. Milner},
  title = {Understanding Clos the {Common} {Lisp} {Object} {System}},
  publisher = {Digital Press},
  year = {1989}}

@inproceedings{Lawr06a,
  author = {D. Lawrie and C. Morrell and H. Feild and D. Binkley},
  title = {What's in a Name? A Study of Identifiers},
  booktitle = {14th IEEE International Conference on Program Comprehension ({ICPC}'06)},
  pages = {3-12},
  year = {2006},
  doi = {10.1109/{ICPC}.2006.51},
  issn = {1092-8138},
  month = jun}

@article{Lawr07a,
  author = {Lawrie, Dawn and Feild, Henry and Binkley, David},
  title = {Quantifying identifier quality: an analysis of trends},
  journal = {Empirical Software Engineering},
  volume = {12},
  pages = {359--388},
  year = {2007},
  url = {https://doi.org/10.1007/s10664-006-9032-2},
  doi = {10.1007/s10664-006-9032-2},
  abstract = {Identifiers, which represent the defined concepts in a program, account for, by some measures, almost three quarters of source code. The makeup of identifiers plays a key role in how well they communicate these defined concepts. An empirical study of identifier quality based on almost 50 million lines of code, covering thirty years, four programming languages, and both open and proprietary source is presented. For the purposes of the study, identifier quality is conservatively defined as the possibility of constructing the identifier out of dictionary words or known abbreviations. Four hypotheses related to identifier quality are considered using linear mixed effect regression models. For example, the first hypothesis is that modern programs include higher quality identifiers than older ones. In this case, the results show that better programming practices are producing higher quality identifies. Results also confirm some commonly held beliefs, such as proprietary code having more acronyms than open source code.},
  issn = {1573-7616},
  month = aug,
  number = {4}}

@inproceedings{Le14a,
  author = {Le, Vu and Afshari, Mehrdad and Su, Zhendong},
  title = {Compiler Validation via Equivalence Modulo Inputs},
  booktitle = {Programming Language Design and Implementation},
  year = {2014},
  doi = {10.1145/2594291.2594334},
  keywords = {automated testing, compiler testing, equivalent program variants, miscompilation},
  location = {Edinburgh, United Kingdom},
  numpages = {11},
  series = {PLDI '14}}

@article{Le15a,
  author = {Le, Vu and Sun, Chengnian and Su, Zhendong},
  title = {Finding deep compiler bugs via guided stochastic program mutation},
  journal = {ACM SIGPLAN Notices},
  volume = {50},
  pages = {386--399},
  year = {2015},
  url = {https://doi.org/10.1145/2858965.2814319},
  abstract = {Compiler testing is important and challenging. Equivalence Modulo Inputs (EMI) is a recent promising approach for compiler validation. It is based on mutating the unexecuted statements of an existing program under some inputs to produce new equivalent test programs w.r.t. these inputs. Orion is a simple realization of EMI by only randomly deleting unexecuted statements. Despite its success in finding many bugs in production compilers, Orion's effectiveness is still limited by its simple, blind mutation strategy. To more effectively realize EMI, this paper introduces a guided, advanced mutation strategy based on Bayesian optimization. Our goal is to generate diverse programs to more thoroughly exercise compilers. We achieve this with two techniques: (1) the support of both code deletions and insertions in the unexecuted regions, leading to a much larger test program space; and (2) the use of an objective function that promotes control-flow-diverse programs for guiding Markov Chain Monte Carlo (MCMC) optimization to explore the search space. Our technique helps discover deep bugs that require elaborate mutations. Our realization, Athena, targets C compilers. In 19 months, Athena has found 72 new bugs - many of which are deep and important bugs - in GCC and LLVM. Developers have confirmed all 72 bugs and fixed 68 of them.},
  keywords = {automated testing, Compiler testing, equivalent program variants, Markov Chain Monte Carlo},
  month = oct,
  urldate = {2021-09-03}}

@unpublished{Lea94a,
  author = {Doug Lea},
  title = {Objects in Groups},
  year = {1994},
  note = {submitted ECOOP '94SUNY at Oswego / NY Case Center},
  type = {Draft}}

@inproceedings{Lea95a,
  author = {Doug Lea and Jos Marlowe},
  title = {Interface-Based Protocol Specification of Open Systems using {PSL}},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {374--398},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@book{Lea96a,
  author = {Doug Lea},
  title = {Concurrent Programming in {Java}, Design Principles and Patterns},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-69581-2},
  series = {The {Java} Series}}

@inproceedings{Lea97a,
  author = {Doug Lea},
  title = {Design for Open Systems in {Java}},
  booktitle = {Proceedings COORDINATION '97},
  volume = 1282,
  pages = {32--45},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Berlin, Germany},
  editor = {David Garlan and Daniel Le M{\`e}tayer},
  month = sep,
  series = {LNCS}}

@book{Lea99a,
  author = {Doug Lea},
  title = {Concurrent Programming in {Java}, Second Edition: Design principles and Patterns},
  publisher = {Addison Wesley},
  year = {1999},
  edition = {2nd},
  isbn = {0-201-31009-0},
  series = {The {Java} Series}}

@inproceedings{Leav90a,
  author = {Gary T. Leavens and William E. Weihl},
  title = {Reasoning about Object-Oriented Programs that Use Subtypes},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {212--223},
  year = {1990},
  month = oct}

@phdthesis{Lebl00a,
  author = {Herv{\'e} Leblanc},
  title = {Sous-hi\'{e}rarchies de {Galois}: un {Mod}\`{e}le pour la {Construction} et {L}'\'{e}volution des {Hi}\'{e}rarchies d'objets ({Galois} {Sub}-hierarchies: a {Model} for {Construction} and {Evolution} of {Object} {Hierarchies})},
  year = {2000},
  school = {Universit\'{e} Montpellier 2}}

@article{Lebl84a,
  author = {Leblang, David B. and Chase, Robert P.},
  title = {Computer-Aided Software Engineering in a distributed workstation environment},
  journal = {SIGSOFT Software Engineering Notes},
  volume = {9},
  pages = {104--112},
  publisher = {ACM},
  year = {1984},
  doi = {/10.1145/390010.808255},
  address = {New York, NY, USA},
  issn = {0163-5948},
  month = apr,
  number = {3}}

@inproceedings{Lebl88a,
  author = {Leblang, David B. and Chase, Robert P. and Spilke, Howard},
  title = {Increasing Productivity with a Parallel Configuration Manager},
  booktitle = {Proceedings of the International Workshop on Software Version and Configuration Control},
  pages = {21-38},
  year = {1988}}

@inproceedings{Lebl99a,
  author = {Herv{\'e} Leblanc and Christoph Dony and Marianne Huchard and Th{\'e}rese Libourel},
  title = {An environment for building and maintaining class hierarchies},
  booktitle = {ECOOP'99: Workshop ``Object-Oriented Architectural Evolution''},
  volume = {1743},
  publisher = {Springer-Verlag},
  year = {1999},
  editor = {A. Moreira and S. Demeyer},
  series = {LNCS}}

@inproceedings{Lech96a,
  author = {Ulrike Lechner and Christian Lengauer and Friederike Nickl and Martin Wirsing},
  title = {(Objects + Concurrency) \& Reusability --- {A} Proposal to Circumvent the Inheritance Anomaly},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {232--247},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@incollection{Led02,
  author = {David, Pierre-Charles and Ledoux, Thomas},
  title = {An Infrastructure for Adaptable Middleware},
  booktitle = {On the Move to Meaningful Internet Systems 2002: CoopIS, DOA, and ODBASE},
  volume = {2519},
  pages = {773-790},
  publisher = {Springer Berlin Heidelberg},
  year = {2002},
  isbn = {978-3-540-00106-5},
  series = {Lecture Notes in Computer Science}}

@article{Ledg77a,
  author = {H.F. Ledgard and R.W. Taylor},
  title = {Two Views of Data Abstraction},
  journal = {CACM},
  volume = {20},
  pages = {382--384},
  year = {1977},
  month = jun,
  number = {6}}

@inproceedings{Ledo96a,
  author = {T. Ledoux and P. Cointe},
  title = {Explicit Metaclasses as a Tool for Improving the Design of Class Libraries},
  booktitle = {Proceedings of ISOTAS '96, LNCS 1049},
  pages = {38--55},
  year = {1996},
  month = mar,
  organization = {JSSST-JAIST}}

@article{Ledu20a,
  author = {Manuel Leduc and Gwendal Jouneaux and Thomas Degueule and Le Guernic, Gurvan and Olivier Barais and Benoit Combemale},
  title = {Automatic generation of {Truffle}-based interpreters for Domain-Specific Languages},
  journal = {Journal of Object Technology},
  year = {2020}}

@phdthesis{Leduc18a,
  author = {Le, Duc Minh},
  title = {Architectural evolution and decay in software systems},
  year = {2018},
  school = {University of Southern California}}

@techreport{Lee03a,
  author = {Lee, K. and Jeon, J. and Lee, W. and Park, S.W.},
  title = {Qos for web services: Requirements and possible approaches},
  journal = {W3C Working Group Note 25},
  year = {2003},
  institution = {W3C},
  month = nov}

@inproceedings{Lee06a,
  author = {Keunwoo Lee and Craig Chambers},
  title = {Parameterized Modules for Classes and Extensible Functions},
  booktitle = {Proceedings of the 20th European Conference on Object-Oriented Programming (ECOOP '06)},
  volume = {4067},
  pages = {353--378},
  publisher = {Springer-Verlag},
  year = {2006},
  editor = {Dave Thomas}}

@article{Lee06b,
  author = {Lee, Sang-Won and Ahn, Jung-Ho and Kim, Hyoung-Joo},
  title = {A schema version model for complex objects in object-oriented databases},
  journal = {Journal of Systems Architecture},
  volume = {52},
  year = {2006},
  doi = {10.1016/j.sysarc.2006.04.001}}

@article{Lee06c,
  author = {E. A. {Lee}},
  title = {The problem with threads},
  journal = {Computer},
  volume = {39},
  pages = {33-42},
  year = {2006},
  doi = {10.1109/MC.2006.180},
  number = {5}}

@inproceedings{Lee11a,
  author = {Lee, Taek and Nam, Jaechang and Han, DongGyun and Kim, Sunghun and In, Hoh Peter},
  title = {Micro Interaction Metrics for Defect Prediction},
  booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
  pages = {311--321},
  publisher = {ACM},
  year = {2011},
  url = {http://doi.acm.org/10.1145/2025113.2025156},
  doi = {10.1145/2025113.2025156},
  acmid = {2025156},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0443-6},
  keywords = {defect prediction, micro interaction metrics, mylyn},
  location = {Szeged, Hungary},
  numpages = {11},
  series = {ESEC/FSE '11}}

@inproceedings{Lee22a,
  author = {Lee, Yunhyeok and Liu, Yi},
  title = {Using Refactoring to Migrate {REST} Applications to {gRPC}},
  booktitle = {Proceedings of the 2022 ACM Southeast Conference},
  pages = {219-223},
  publisher = {Association for Computing Machinery},
  year = {2022},
  url = {https://doi.org/10.1145/3476883.3520220},
  doi = {10.1145/3476883.3520220},
  abstract = {The Google Remote Procedure Call (gRPC), a variant of the Remote Procedure Call (RPC) architecture, performs better than the widely used REpresentational State Transfer (REST) architecture in some types of Web applications, such as microservices. Being able to transform applications using the REST application programming interface (API) to the gRPC API can potentially improve the communication performance. In this paper, we propose an approach to refactoring REST applications to obtain equivalent gRPC applications and demonstrate the approach using a small microservice-oriented application. This refactoring approach is sufficiently general to apply to any Web application.},
  address = {New York, NY, USA},
  isbn = {9781450386975},
  keywords = {code refactoring, REST, web application, gRPC},
  location = {Virtual Event},
  numpages = {5},
  series = {ACM SE '22}}

@article{Lee72a,
  author = {E.T. Lee},
  title = {Proximity Measures for the Classification of Geometric Figures},
  journal = {Journal of Cybernetics},
  volume = {2},
  pages = {43--59},
  year = {1972},
  number = {4}}

@article{Lee83a,
  author = {D.L. Lee and Frederick H. Lochovsky},
  title = {Voice Response Systems},
  journal = {ACM Computing Surveys},
  volume = {15},
  year = {1983},
  month = dec,
  number = {4}}

@inproceedings{Lee84a,
  author = {Allison Lee and Carson Woo and Frederick H. Lochovsky},
  title = {Officeaid: An Integrated Document Management System},
  booktitle = {Proceedings of ACM SIGOA Conference},
  pages = {170--180},
  year = {1984},
  month = jun}

@incollection{Lee85a,
  author = {Allison Lee and Frederick H. Lochovsky},
  title = {User Interface Design},
  booktitle = {Office Automation: Concepts and Tools},
  pages = {3--20},
  publisher = {Springer-Verlag},
  year = {1985},
  address = {Heidelberg},
  editor = {D. Tsichritzis}}

@incollection{Lee93a,
  author = {Sai Peck Lee and Colette Rolland},
  title = {Integration of the Tool({AWB}) Supporting the {O}* Method in the {PCTE}-Based Software Engineering Environment},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {408--423},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Most existing object-oriented analysis and design
tools supporting various methods are stand-alone and
are not agreed on a common standard. This results in
the issues of tool integration in software
engineering environments. Our main aim in this paper
is to illustrate the integration of the analysis
tool named Analyst WorkBench(AWB) supporting the O*
object-oriented method in the PCTE Emeraude-based
software engineering environment. The integration is
achieved through data sharing and the reuse of
types. The O* method and the AWB have been developed
within the framework of the ESPRIT II project named
Business Class.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@book{Lee95a,
  title = {Proceedings {CONCUR}'95},
  volume = {962},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Philadelphia, PA, USA},
  editor = {Insup Lee and Scott A. Smolka},
  isbn = {3-540-60218-6},
  month = aug,
  series = {LNCS}}

@inproceedings{Lee95b,
  author = {Y. S. Lee and B. S. Liang},
  title = {Measuring the coupling and cohesion of an object-oriented program based on information flow},
  booktitle = {In Proceedings of the International Conference on Software Quality (ICSQ)},
  pages = {47--57},
  year = {1995}}

@book{Lee97a,
  author = {Richard C. Lee and William M. Tepfenhart},
  title = {{UML} and {C}++ {A} Practical Guide to Object-Oriented Development},
  publisher = {Prentice-Hall},
  year = {1997},
  isbn = {0-13-619719-1}}

@article{Lefe94a,
  author = {Christophe Lef\`evre and Joh-E. Ikeda},
  title = {A fast word search algorithm for the representation of sequence similarity in genomic {DNA}},
  journal = {Nucleic Acids Research},
  volume = {22},
  pages = {404--411},
  year = {1994},
  number = {3}}

@article{Lege23a,
  title={Benefits, challenges, and usability evaluation of DeloreanJS: a back-in-time debugger for JavaScript},
  author={Leger, Paul and Ruiz, Felipe and Fukuda, Hiroaki and Cardozo, Nicol{\'a}s},
  journal={PeerJ Computer Science},
  volume={9},
  pages={e1238},
  year={2023},
  publisher={PeerJ Inc.}
}

@inproceedings{Legu16a,
  author = {Legunsen, Owolabi and Hariri, Farah and Shi, August and Lu, Yafeng and Zhang, Lingming and Marinov, Darko},
  title = {An extensive study of static regression test selection in modern software evolution},
  booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {583--594},
  year = {2016},
  organization = {ACM}}

@inproceedings{Lehm01a,
  author = {Manny Lehman and Juan Ramil},
  title = {Evolution in Software and Related Areas},
  booktitle = {International Conference on Software Engineering ({ICSE})},
  pages = {1--16},
  year = {2001}}

@article{Lehm01b,
  author = {Lehman, Meir M and Ramil, Juan F},
  title = {Rules and tools for software evolution planning and management},
  journal = {Annals of software engineering},
  volume = {11},
  pages = {15--44},
  publisher = {Springer},
  year = {2001}}

@inproceedings{Lehm16a,
  author = {Lehmann, Stefan and Felgentreff, Tim and Lincke, Jens and Rein, Patrick and Hirschfeld, Robert},
  title = {Reactive object queries},
  booktitle = {Constrained and Reactive Objects Workshop (CROW)},
  year = {2016}}

@article{Lehm80a,
  author = {Manny Lehman},
  title = {Programs, Life Cycles, and Laws of Software Evolution},
  journal = {Proceedings of the IEEE},
  volume = {68},
  pages = {1060--1076},
  year = {1980},
  abstract = {By classifying programs according to their
relationship to the environment in which they are
executed, the paper identifies the sources of
evolutionary pressure on computer applications and
programs and shows why this results in a process of
never ending maintenance activity. The resultant
life cycle processes are then briefly discussed. The
paper then introduces laws of Program Evolution that
have been formulated following quantitative studies
of the evolution of a number of different systems.
Finally an example is provided of the application of
Evolution Dynamics models to program release
planning.},
  month = sep,
  number = {9}}

@book{Lehm85a,
  author = {Manny Lehman and Les Belady},
  title = {Program Evolution: Processes of Software Change},
  pages = {538},
  publisher = {London Academic Press},
  year = {1985},
  address = {London},
  isbn = {0-12-442440-6}}

@inproceedings{Lehm96a,
  author = {Manny Lehman},
  title = {Laws of Software Evolution Revisited},
  booktitle = {European Workshop on Software Process Technology},
  pages = {108--124},
  publisher = {Springer},
  year = {1996},
  address = {Berlin}}

@inproceedings{Lehm97a,
  author = {Manny Lehman and Dewayne Perry and Juan Ramil and Wladyslaw Turski and Paul Wernick},
  title = {Metrics and Laws of Software Evolution--The Nineties View},
  booktitle = {Proceedings IEEE International Software Metrics Symposium (METRICS'97)},
  pages = {20--32},
  publisher = {IEEE Computer Society Press},
  year = {1997},
  doi = {10.1109/METRIC.1997.637156},
  address = {Los Alamitos CA}}

@inproceedings{Lehm98a,
  author = {Manny Lehman and Dewayne Perry and Juan Ramil},
  title = {Implications of Evolution Metrics on Software Maintenance},
  booktitle = {Proceedings IEEE International Conference on Software Maintenance ({ICSM}'98)},
  pages = {208--217},
  publisher = {IEEE Computer Society Press},
  year = {1998},
  address = {Los Alamitos CA}}

@article{Lehn11a,
  author = {Lehnert, Steffen},
  title = {A review of software change impact analysis},
  journal = {Ilmenau University of Technology},
  pages = {39},
  year = {2011},
  language = {en}}

@article{Lei02a,
  author = {Lei, Hui and Sow, Daby M. and Davis,II, John S. and Banavar, Guruduth and Ebling, Maria R.},
  title = {The design and applications of a context service},
  journal = {ACM SIGMOBILE Mobile Computing and Communications Review},
  volume = {6},
  pages = {45--55},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/643550.643554},
  number = {4}}

@inproceedings{Lei16a,
  author = {Leiding, Benjamin and Memarmoshrefi, Parisa and Hogrefe, Dieter},
  title = {Self-managed and Blockchain-based Vehicular Ad-hoc Networks},
  booktitle = {2016 ACM International Joint Conference on Pervasive and Ubiquitous Computing: Adjunct},
  pages = {137--140},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2968219.2971409},
  doi = {10.1145/2968219.2971409},
  acmid = {2971409},
  address = {New York, NY, USA},
  isbn = {978-1-4503-4462-3},
  keywords = {blockchain, ethereum, self-managed VANET},
  location = {Heidelberg, Germany},
  numpages = {4},
  series = {UbiComp '16}}

@misc{Leif06a,
  author = {Frenzel, Leif},
  title = {The Language Toolkit: An {API} for Automated Refactorings in Eclipse-based IDEs.},
  year = {2006},
  url = {http://www.eclipse.org/articles/Article-LTK/ltk.html}}

@misc{Leij01a,
  author = {D. Leijen and E. Meijer},
  title = {Parsec: Direct style monadic parser combinators for the real world},
  year = {2001},
  url = {citeseer.ist.psu.edu/article/leijen01parsec.html http://research.microsoft.com/users/daan/download/papers/parsec-paper.pdf},
  text = {Daan Leijen and Erik Meijer. Parsec: Direct style monadic parser combinators for the real world. Technical Report UU-CS-2001-35, Utrecht University, 2001.}}

@inproceedings{Lein08a,
  author = {Leino, K Rustan M and M\"{u}ller, Peter and Wallenburg, Angela},
  title = {Flexible Immutability with Frozen Objects},
  booktitle = {Flexible Immutability with Frozen Objects},
  volume = {5295},
  pages = {192 208},
  year = {2008},
  isbn = {978-3-540-87872-8},
  month = {oct}}

@inproceedings{Leit02a,
  author = {Leitdo, A.M.},
  title = {A formal pattern language for refactoring of Lisp programs},
  booktitle = {Proceedings of the Sixth European Conference on Software Maintenance and Reengineering},
  pages = {186-192},
  year = {2002},
  doi = {10.1109/CSMR.2002.995803}}

@inproceedings{Leit03a,
  author = {Ant\'onio M. Leit{\~{a}}o},
  title = {Detection of Redundant Code using {R2D2}},
  booktitle = {Proc. Third IEEE International Workshop on Source Code Analysis and Manipulation (SCAM)},
  pages = {183--192},
  publisher = {IEEE},
  year = {2003},
  month = sep}

@inproceedings{Leit07a,
  author = {Andreas Leitner and Ilinca Ciupa and Manuel Oriol and Bertrand Meyer and Arno Fiva},
  title = {Contract driven development = test driven development - writing test cases},
  booktitle = {ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  pages = {425--434},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1287624.1287685},
  address = {New York, NY, USA},
  isbn = {978-1-59593-811-4},
  location = {Dubrovnik, Croatia}}

@inproceedings{Leit16a,
  author = {Leitner, Philipp and Bezemer, Cor-Paul},
  title = {An Exploratory Study of the State of Practice of Performance Testing in Java-Based Open Source Projects},
  booktitle = {Proceedings of the 8th ACM/SPEC on International Conference on Performance Engineering},
  pages = {373-384},
  publisher = {Association for Computing Machinery},
  year = {2017},
  url = {https://doi.org/10.1145/3030207.3030213},
  doi = {10.1145/3030207.3030213},
  isbn = {9781450344043},
  address = {New York, NY, USA},
  abstract = {The usage of open source (OS) software is wide-spread across many industries. While the functional quality of OS projects is considered to be similar to closed-source software, much is unknown about the quality in terms of performance. One challenge for OS developers is that, unlike for functional testing, there is a lack of accepted best practices for performance testing. To reveal the state of practice of performance testing in OS projects, we conduct an exploratory study on 111 Java-based OS projects from GitHub. We study the performance tests of these projects from five perspectives: (1) developers, (2) size, (3) test organization, (4) types of performance tests and (5) used tooling. We show that writing performance tests is not a popular task in OS projects: performance tests form only a small portion of the test suite, are rarely updated, and are usually maintained by a small group of core project developers. Further, even though many projects are aware that they need performance tests, developers appear to struggle implementing them. We argue that future performance testing frameworks should provider better support for low-friction testing, for instance via non-parameterized methods or performance test generation, as well as focus on a tight integration with standard continuous integration tooling.},
  numpages = {12},
  keywords = {performance testing, open source, mining software repositories, performance engineering, empirical software engineering},
  location = {L'Aquila, Italy},
  series = {ICPE '17}}

@article{Lejt92a,
  author = {Moises Lejter and Scott Meyers and Steven P. Reiss},
  title = {Support for Maintaining Object-Oriented Programs},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-18},
  pages = {1045--1052},
  year = {1992},
  month = dec,
  number = {12}}

@article{Lell16a,
  author = {Lelli, Val\'eria and Blouin, Arnaud and Baudry, Benoit and Coulon, Fabien and Beaudoux, Olivier},
  title = {Automatic Detection of {GUI} Design Smells: The Case of Blob Listener},
  journal = {{EICS} '16 Proceedings of the 8th {ACM} {SIGCHI} Symposium on Engineering Interactive Computing Systems},
  pages = {12},
  year = {2016},
  abstract = {Graphical User Interfaces ({GUIs}) intensively rely on eventdriven programming: widgets send {GUI} events, which capture users' interactions, to dedicated objects called controllers. Controllers implement several {GUI} listeners that handle these events to produce {GUI} commands. In this work, we conducted an empirical study on 13 large Java Swing open-source software systems. We study to what extent the number of {GUI} commands that a {GUI} listener can produce has an impact on the change- and fault-proneness of the {GUI} listener code. We identify a new type of design smell, called Blob listener that characterizes {GUI} listeners that can produce more than two {GUI} commands. We show that 21 \% of the analyzed {GUI} controllers are Blob listeners. We propose a systematic static code analysis procedure that searches for Blob listener that we implement in {InspectorGuidget}. We conducted experiments on six software systems for which we manually identified 37 instances of Blob listener. {InspectorGuidget} successfully detected 36 Blob listeners out of 37. The results exhibit a precision of 97.37 \% and a recall of 97.59 \%. Finally, we propose coding practices to avoid the use of Blob listeners.},
  langid = {english}}

@inproceedings{Lemi18a,
  author = {Lemieux, Caroline and Padhye, Rohan and Sen, Koushik and Song, Dawn},
  title = {Perffuzz: Automatically generating pathological inputs},
  booktitle = {Proceedings of the 27th ACM SIGSOFT International Symposium on Software Testing and Analysis},
  pages = {254--265},
  year = {2018}}

@book{Lenc00,
  author = {Raimondas Lencevicius},
  title = {Advanced Debugging Methods},
  publisher = {Kluwer Academic Publishers},
  year = {2000}}

@article{Lenc00a,
  author = {Lencevicius, Raimondas},
  title = {On-the-fly query-based debugging with examples},
  journal = {arXiv preprint cs/0011021},
  year = {2000}}

@article{Lenc03a,
  author = {Lencevicius, Raimondas and H{\"o}lzle, Urs and Singh, Ambuj K},
  title = {Dynamic query-based debugging of object-oriented programs},
  journal = {Automated Software Engineering},
  volume = {10},
  pages = {39--74},
  publisher = {Springer},
  year = {2003}}

@inproceedings{Lenc97a,
  author = {Raimondas Lencevicius and Urs H{\"o}lzle and Ambuj K. Singh},
  title = {Query-Based Debugging of Object-Oriented Programs},
  booktitle = {Proceedings of International Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'97)},
  pages = {304--317},
  publisher = {ACM},
  year = {1997},
  doi = {10.1145/263698.263752},
  address = {New York, NY, USA},
  isbn = {0-89791-908-4},
  location = {Atlanta, Georgia, United States}}

@inproceedings{Lenc99a,
  author = {Raimondas Lencevicius and Urs H{\"o}lzle and Ambuj Kumar Singh},
  title = {Dynamic Query-Based Debugging},
  booktitle = {Proceedings of European Conference on Object-Oriented Programming (ECOOP'99)},
  volume = 1628,
  pages = {135--160},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Program errors are hard to find because of the
cause-effect gap between the time when an error
occurs and the time when the error becomes apparent
to the programmer. Although debugging techniques
such as condi tional and data breakpoints help to
find error causes in simple cases, they fail to
effectively bridge the cause-effect gap in many
situations. Dynamic query- based debuggers offer
programmers an effective tool that provides instant
error alert by continuously checking inter-object
relationships while the debugged program is running.
To speed up dynamic query evaluation, our debugger
(implemented in portable {Java}) uses a combination
of program instrumentation, load-time code
generation, query optimization, and incre mental
reevaluation. Experiments and a query cost model
show that selection queries are efficient in most
cases, while more costly join queries are practical
when query evaluations are infrequent or query
domains are small.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Leng14a,
  author = {Lengauer, Philipp and M{\"o}ssenb{\"o}ck, Hanspeter},
  title = {The taming of the shrew: Increasing performance by automatic parameter tuning for java garbage collectors},
  booktitle = {Proceedings of the 5th ACM/SPEC international conference on Performance engineering},
  pages = {111--122},
  year = {2014}}

@article{Lenn10a,
  author = {Kats, Lennart C.L. and Visser, Eelco},
  title = {The spoofax language workbench: rules for declarative specification of languages and IDEs},
  journal = {SIGPLAN Not.},
  volume = {45},
  pages = {444--463},
  publisher = {ACM},
  year = {2010},
  url = {10.1145/1932682.1869497},
  doi = {10.1145/1932682.1869497},
  address = {New York, NY, USA},
  keywords = {IDE, domain-specific language, dsl, eclipse, language workbench, meta-tooling, sdf, sglr, spoofax, stratego},
  month = {oct}}

@article{Leot18a,
  author = {Leotta, Maurizio and Stocco, Andrea and Ricca, Filippo and Tonella, Paolo},
  title = {Pesto: Automated migration of DOM-based Web tests towards the visual approach},
  journal = {Software Testing, Verification and Reliability},
  volume = {28},
  year = {2018},
  abstract = {Test automation tools are widely adopted for testing complex Web applications. Three generations of tools exist: first, based on screen coordinates; second, based on DOM-based commands; and third, based on visual image recognition. In our previous work, we proposed P, a tool able to migrate second-generation Selenium WebDriver test suites towards third-generation Sikuli ones. In this work, we extend P to manage Web elements having (1) complex visual interactions and (2) multiple visual appearances. P relies on aspect-oriented programming, computer vision, and code transformations. Our new improved tool has been evaluated on two Web test suites developed by an independent tester. Experimental results show that P manages and transforms correctly test suites with Web elements having complex visual interactions and multistate elements. By using P, the migration of existing DOM-based test suites to the visual approach requires a low manual effort, since our approach proved to be very accurate. In this work, we proposed and experimented with a novel approach and its implementation, a tool called PESTO, able to transform DOM-based Web test suites developed using Selenium WebDriver into visual test suites relying on the usage of Sikuli {API}. Experimental results show that PESTO manages and transforms correctly test suites with Web elements having complex visual interactions and multistate elements.},
  issn = {0960-0833},
  keywords = {Dom-Based Testing ; Selenium Webdriver ; Sikuli ; Test Automation ; Visual Testing ; Web Testing},
  number = {4}}

@article{Lepa12a,
  author = {Le Page, Christophe and Becu, Nicolas and Bommel, Pierre and Bousquet, Fran{\c{c}}ois},
  title = {Participatory agent-based simulation for renewable resource management: the role of the cormas simulation platform to nurture a community of practice},
  journal = {Journal of Artificial Societies and Social Simulation},
  volume = {15(1)},
  pages = {16},
  year = {2012}}

@inproceedings{Lern90a,
  author = {Barbara Staudt Lerner and A. Nico Habermann},
  title = {Beyond Schema Evolution to Database Reorganization},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {67--76},
  year = {1990},
  month = oct}

@article{Lero00a,
  author = {Xavier Leroy},
  title = {A modular module system},
  journal = {Journal of Functional Programming},
  volume = {10},
  pages = {269--303},
  year = {2000},
  number = {3}}

@inproceedings{Lero03a,
  author = {Xavier Leroy},
  title = {Computer Security from a Programming Language and Static Analysis Perspective},
  booktitle = {Programming Languages and Systems: 12th European Symposium on Programming, ESOP 2003},
  volume = {2618},
  pages = {1--9},
  publisher = {Springer},
  year = {2003},
  url = {http://gallium.inria.fr/~xleroy/publi/language-security-etaps03.pdf},
  abstract = {Extended abstract of invited lecture.},
  editor = {P. Degano},
  series = {Lecture Notes in Computer Science},
  urlpublisher = {http://www.springerlink.com/openurl.asp?genre=article&issn=0302-9743&volume=2618&spage=1}}

@article{Lero03b,
  author = {Xavier Leroy},
  title = {{Java} bytecode verification: algorithms and formalizations},
  journal = {Journal of Automated Reasoning},
  volume = {30},
  pages = {235--269},
  year = {2003},
  url = {http://gallium.inria.fr/~xleroy/publi/bytecode-verification-JAR.pdf},
  abstract = {Bytecode verification is a crucial security
component for Java applets, on the Web and on
embedded devices such as smart cards. This paper
reviews the various bytecode verification algorithms
that have been proposed, recasts them in a common
framework of dataflow analysis, and surveys the use
of proof assistants to specify bytecode verification
and prove its correctness.},
  number = {3--4},
  urlpublisher = {http://www.springerlink.com/openurl.asp?genre=article&id=doi:10.1023/A:1025055424017}}

@inproceedings{Lero06a,
  author = {Xavier Leroy},
  title = {Formal certification of a compiler back-end, or: programming a compiler with a proof assistant},
  booktitle = {Principles of Programming Languages},
  pages = {42--54},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1111037.1111042},
  series = {POPL'06}}

@book{Leru06a,
  author = {Ierusalimschy, R},
  title = {programming in Lua},
  publisher = {lua.org},
  year = {2006}}

@phdthesis{Lesc92a,
  author = {Lo\"ic Lescaudron},
  title = {Prototypage d'environnements de programmation pours les langages \`a objets concurrents: une r\'ealisation en Smalltak-80 pour Actalk},
  year = {1992},
  school = {Universit\'e Paris VI},
  type = {{Ph.D}. Thesis}}

@book{Lesk14a,
  author = {Leskovec, Jure and Rajaraman, Anand and Ullman, Jeffrey David},
  title = {Mining of massive datasets},
  publisher = {Cambridge university press},
  year = {2014}}

@inproceedings{Lesk16a,
 author = {Leske, Max and Chi\c{s}, Andrei and Nierstrasz, Oscar},
 title = {A Promising Approach for Debugging Remote Promises},
 booktitle = {Proceedings of the 11th Edition of the International Workshop on Smalltalk Technologies},
 series = {IWST'16},
 year = {2016},
 isbn = {978-1-4503-4524-8},
 location = {Prague, Czech Republic},
 pages = {18:1--18:9},
 articleno = {18},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/2991041.2991059},
 doi = {10.1145/2991041.2991059},
 acmid = {2991059},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {debuggers, remote debugging, remote promises}
}

@techreport{Lesk75a,
  author = {M.E. Lesk and E. Schmidt},
  title = {Lex --- {A} Lexical Analyzer Generator},
  year = {1975},
  address = {Murray Hill, NJ},
  institution = {Bell Laboratories},
  number = {39},
  type = {Computer Science Technical Report}}

@inproceedings{Leth04a,
  author = {Timothy Lethbridge and Sander Tichelaar and Erhard Pl\"odereder},
  title = {The Dagstuhl Middle Metamodel: A Schema For Reverse Engineering},
  booktitle = {Electronic Notes in Theoretical Computer Science},
  volume = {94},
  pages = {7--18},
  year = {2004}}

@article{Leth05a,
  author = {Timothy C. Lethbridge and Susan Elliot Sim and Janice Singer},
  title = {Studying Software Engineers: Data Collection Techniques for Software Field Studies},
  journal = {Empirical Software Engineering, Springer Science and Business Media, Inc., The Netherlands},
  volume = {10},
  pages = {311--341},
  year = {2005},
  month = jul,
  number = {3}}

@phdthesis{Leth91a,
  author = {Lone Leth},
  title = {Functional Programs as Reconfigurable Networks of Communicating Processes},
  year = {1991},
  school = {Imperial College, University of London},
  type = {{Ph.D}. Thesis}}

@techreport{Leth92a,
  author = {Lone Leth},
  title = {A New Direction in Functions as Processes},
  year = {1992},
  institution = {European Computer-Industry Research Centre, Munich},
  type = {ECRC-92-5}}

@techreport{Leth98z,
  author = {Timothy C. Lethbridge},
  title = {Requirements and Proposal for a {Software} {Information} {Exchange} {Format} ({SIEF}) Standard},
  year = {1998},
  url = {http://www.site.uottawa.ca/~tcl/papers/sief/standardProposalv1.html},
  institution = {University of Ottawa},
  month = nov,
  note = {http://www.site.uottawa.ca/\~{}tcl/papers/sief/ standardProposalv1.html}}

@article{Leto86a,
  author = {S. Letovsky and E. Soloway},
  title = {Delocalized Plans and Program Comprehension},
  journal = {IEEE Software},
  volume = {3},
  pages = {41-49},
  publisher = {IEEE Computer Society},
  year = {1986},
  doi = {10.1109/MS.1986.233414},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  number = {3}}

@book{Leuf01a,
  author = {Bo Leuf and Ward Cunningham},
  title = {The Wiki Way: Collaboration and Sharing on the Internet},
  publisher = {Addison-Wesley},
  year = {2001}}

@inproceedings{Leun89a,
  author = {Leung, Hareton KN and White, Lee},
  title = {{Insights} into regression testing},
  booktitle = {Software {Maintenance}, 1989., {Proceedings}., {Conference} on},
  pages = {60--69},
  publisher = {IEEE},
  year = {1989},
  urldate = {2016-02-15}}

@article{Leve09a,
  author = {L{\'e}vesque, Martin},
  title = {A metamodel of unit testing for object-oriented programming languages},
  journal = {arXiv preprint arXiv:0912.3583},
  year = {2009}}

@article{Leve93a,
  author = {Leveson, Nancy G and Turner, Clark S},
  title = {An investigation of the Therac-25 accidents},
  journal = {Computer},
  volume = {26},
  pages = {18--41},
  publisher = {IEEE},
  year = {1993},
  number = {7}}

@book{Leve95a,
  author = {Robert Levey},
  title = {Reengineering Cobol With Objects},
  publisher = {McGraw-Hill},
  year = {1995}}

@inproceedings{Levi02a,
  author = {Philip Levis and David Culler},
  title = {Mat\'e: a tiny virtual machine for sensor networks},
  booktitle = {ASPLOS-X: Proceedings of the 10th international conference on Architectural support for programming languages and operating systems},
  pages = {85--95},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/605397.605407},
  address = {New York, NY, USA},
  isbn = {1-58113-574-2},
  location = {San Jose, California}}

@inproceedings{Levin08a,
  author = {R. Levin and I. Newman and G. Haber},
  title = {Complementing missing and inaccurate profiling using a minimum cost circulation algorithm},
  booktitle = {International Conference on High-Performance Embedded Architectures and Compilers},
  pages = {291-304},
  year = {2008}}

@article{Levy82,
  author = {H. Levy and P. H. Lipman},
  title = {Virtual Memory Management in the {VAX/VMS} Operating System},
  journal = {IEEE Computer},
  volume = {16},
  pages = {35},
  year = {1982},
  doi = {10.1109/MC.1982.1653971},
  month = mar,
  number = {3}}

@book{Levy84a,
  author = {Levy, Henry M.},
  title = {Capability-Based Computer Systems},
  publisher = {Butterworth-Heinemann},
  year = {1984},
  address = {Newton, MA, USA},
  isbn = {0932376223}}

@phdthesis{Levy94a,
  author = {Juan Pablo Levy Urquidi},
  title = {Groupes Multipartenaires par Projection d'interface},
  year = {1994},
  school = {EPFL Laussane},
  number = {1294},
  type = {{Ph.D}. Thesis}}

@techreport{Levy97a,
  author = {Levy, Jacob Y. and Ousterhout, John K. and Welch, Brent B.},
  title = {The Safe-Tcl Security Model},
  publisher = {Sun Microsystems, Inc.},
  year = {1997},
  address = {Mountain View, CA, USA},
  institution = {Sun Microsystems, Inc.}}

@article{Lewa98a,
  author = {Lewandowski, Scott M},
  title = {Frameworks for component-based client/server computing},
  journal = {ACM Computing Surveys (CSUR)},
  volume = {30},
  pages = {3--27},
  publisher = {ACM New York, NY, USA},
  year = {1998},
  number = {1}}

@inproceedings{Lewe98a,
  author = {Claus Lewerentz and Frank Simon},
  title = {{A} {Product} {Metrics} {Tool} {Integrated} into a {Software} {Development} {Environment}},
  booktitle = {Object-Oriented Technology Ecoop '98 Workshop Reader},
  volume = {1543},
  pages = {256--257},
  year = {1998},
  series = {LNCS}}

@inproceedings{Lewi03a,
  author = {Bill Lewis and Mireille Ducass\'e},
  title = {Using events to debug {Java} programs backwards in time},
  booktitle = {OOPSLA Companion 2003},
  pages = {96--97},
  year = {2003}}

@inproceedings{Lewi03b,
  author = {Bill Lewis},
  title = {Debugging Backwards in Time},
  booktitle = {Proceedings of the Fifth International Workshop on Automated Debugging (AADEBUG'03)},
  year = {2003},
  url = {http://arxiv.org/abs/cs/0310016v1},
  month = oct}

@article{Lewi04a,
  author = {J. Lewis and Ruth Rosenholtz and Nickson Fong and Ulrich Neumann},
  title = {{VisualIDs}: automatic distinctive icons for desktop interfaces},
  journal = {ACM Transactions on Graphics},
  volume = 23,
  pages = {416--423},
  year = {2004},
  month = aug,
  number = 3}

@inproceedings{Lewi86a,
  author = {David M. Lewis and David R. Galloway and Robert J. Francis and Brian W. Thomson},
  title = {Swamp: {A} Fast Processor for {Smalltalk}-80},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {131--139},
  year = {1986},
  month = nov}

@inproceedings{Lewi91a,
  author = {John A. Lewis and Sallie M. Henry and Dennis G. Kafura and Robert S. Schulman},
  title = {An Empirical Study of the Object-Oriented Paradigm and Software Reuse},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {184--196},
  year = {1991},
  month = nov}

@book{Lewi95a,
  author = {Ted Lewis and Larry Rosentein and Wolfgang Pree and Andre Weinand and Erich Gamma and Paul Calder and Glenn Andert and John Vlissides and Kurt Schmucker},
  title = {Object Oriented Application Frameworks},
  publisher = {Manning Publications Co.},
  year = {1995},
  isbn = {0-13-213984-7}}

@book{Lewi98a,
  author = {John Lewis and William Loftus},
  title = {Java Software Solutions},
  publisher = {Addison Wesley},
  year = {1998},
  isbn = {0-201-57164-1}}

@inproceedings{Lhot03a,
  author = {Ond\v{r}ej Lhot\'ak and Laurie Hendren},
  title = {Scaling {Java} Points-to Analysis Using {Spark}},
  booktitle = {Compiler Construction, 12th International Conference},
  volume = {2622},
  pages = {153--169},
  publisher = {Springer},
  year = {2003},
  address = {Warsaw, Poland},
  editor = {G. Hedin},
  month = apr,
  series = {LNCS}}

@inproceedings{Li03a,
  author = {Junwei Li and Yun Yang and Andrew Walenstein},
  title = {Clone Detector Benchmark Suite and Results Archive},
  booktitle = {Proceedings IWPC 2003},
  year = {2003},
  address = {Portland, Oregon},
  month = may}

@inproceedings{Li05a,
  author = {Qingshan Li and Hua Chu and Shengming Hu and Ping Chen and Zhao Yun},
  title = {Architecture Recovery and Abstraction from the Perspective of Processes},
  booktitle = {Working Conference on Reverse Engineering ({WCRE})},
  pages = {57--66},
  year = {2005}}

@inproceedings{Li05b,
  author = {Qingshan Li},
  title = {Dynamic Model Design Recovery and Architecture Abstraction of Object Oriented Software.},
  booktitle = {Conference on Software Maintenance and Reengineering (CSMR)},
  pages = {284--287},
  year = {2005}}

@article{Li05c,
  author = {Li, Huiqing and Thompson, Simon and Reinke, Claus},
  title = {The Haskell Refactorer, HaRe, and its API},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {141},
  pages = {29-34},
  year = {2005},
  url = {https://www.sciencedirect.com/science/article/pii/S157106610505173X},
  doi = {https://doi.org/10.1016/j.entcs.2005.02.053},
  number = {4},
  note = {Proceedings of the Fifth Workshop on Language Descriptions, Tools, and Applications (LDTA 2005)},
  issn = {1571-0661},
  keywords = {Haskell, refactoring, HaRe, program transformation API, source code, layout preservation, strategic programming, Strafunski, Programatica},
  abstract = {We demonstrate the Haskell Refactorer, HaRe, both as an example of a fully-functional tool for a complete (functional) programming language, and to show the API which HaRe provides for building source-level program transformations for Haskell. We comment on the challenges presented by the construction of this and similar tools for language frameworks and processors.}}

@inproceedings{Li06a,
  author = {Li, Zhenmin and Tan, Lin and Wang, Xuanhui and Lu, Shan and Zhou, Yuanyuan and Zhai, Chengxiang},
  title = {{Have Things Changed Now? An Empirical Study of Bug Characteristics in Modern Open Source Software}},
  booktitle = {Proceedings of the 1st workshop on Architectural and system support for improving software dependability},
  pages = {25--33},
  year = {2006}}

@inproceedings{Li06b,
  title={Refactoring erlang programs},
  author={Li, Huiqing and Thompson, Simon and L{\"o}vei, L{\'a}szl{\'o} and Horv{\'a}th, Zolt{\'a}n and Kozsik, Tam{\'a}s and V{\'\i}g, Anik{\'o} and Nagy, Tam{\'a}s},
  booktitle={The Proceedings of 12th International Erlang/OTP User Conference},
  year={2006}
}

@inproceedings{Li08a,
  author = {Li, Huiqing and Thompson, Simon and Orosz, Gy\"{o}rgy and T\'{o}th, Melinda},
  title = {Refactoring with Wrangler, Updated: Data and Process Refactorings, and Integration with Eclipse},
  booktitle = {Workshop on ERLANG},
  pages = {61-72},
  publisher = {Association for Computing Machinery},
  year = {2008},
  url = {https://doi.org/10.1145/1411273.1411283},
  doi = {10.1145/1411273.1411283},
  isbn = {9781605580654},
  address = {New York, NY, USA},
  numpages = {12}}

@techreport{Li11a,
  author = {Li, Huiqing and Thompson, Simon},
  title = {A User-extensible Refactoring Tool for Erlang Programs},
  pages = {182--196},
  year = {2011},
  url = {https://kar.kent.ac.uk/30720/},
  month = oct,
  type = {Technical report},
  institution = {University of Kent},
  keywords = {determinacy analysis, Craig interpolants},
  abstract = {Refactoring is the process of changing the design of a program without changing what it does. While it is possible to refactor a program by hand, tool support is considered invaluable as it allows large-scale refactorings to be performed easily. However, most refactoring tools are black boxes, supporting a fixed set of `core' refactorings. This paper reports the framework built into Wrangler {\^a}?? a refactoring and code inspection tool for Erlang programs}}

@article{Li12,
  author = {Li, Bixin and Sun, Xiaobing and Leung, Hareton and Zhang, Sai},
  title = {A survey of code-based change impact analysis techniques},
  journal = {Software Testing, Verification and Reliability},
  volume = {23},
  pages = {613--646},
  year = {2013},
  url = {http://dx.doi.org/10.1002/stvr.1475},
  doi = {10.1002/stvr.1475},
  issn = {1099-1689},
  keywords = {change impact analysis, survey, source code, application},
  number = {8}}

@inproceedings{Li12a,
  author = {Li, Huiqing and Thompson, Simon},
  title = {A Domain-Specific Language for Scripting Refactorings in Erlang},
  booktitle = {FASE},
  year = {2012}}

@inproceedings{Li12b,
  title={Let's make refactoring tools user-extensible!},
  author={Li, Huiqing and Thompson, Simon},
  booktitle={Proceedings of the fifth workshop on refactoring tools},
  pages={32-39},
  year={2012}
}

@article{Li17a,
  author = {Li, Jian and Wang, Yue and Lyu, Michael R and King, Irwin},
  title = {Code completion with neural attention and pointer networks},
  journal = {arXiv preprint arXiv:1711.09573},
  year = {2017}}

@article{Li20a,
  author = {Li, Guangjie and Liu, Hui and Nyamawe, Ally S},
  title = {A Survey on Renamings of Software Entities},
  journal = {ACM Computing Surveys (CSUR)},
  volume = {53},
  pages = {1--38},
  publisher = {ACM New York, NY, USA},
  year = {2020},
  number = {2}}

@inproceedings{Li21a,
  author = {Li, Yi and Wang, Shaohua and Nguyen, Tien N},
  title = {A Context-based Automated Approach for Method Name Consistency Checking and Suggestion},
  booktitle = {2021 IEEE/ACM 43rd International Conference on Software Engineering ({ICSE})},
  pages = {574--586},
  year = {2021},
  organization = {IEEE}}

@article{Li93a,
  author = {Li, W. and Henry, S.},
  title = {Object Oriented Metrics that predict maintainability},
  journal = {Journal of System Software},
  volume = {23},
  pages = {111--122},
  year = {1993},
  number = {2}}

@article{Li93b,
  author = {W. Li and S. Henry},
  title = {Maintenance Metrics for the Object Oriented Paradigm},
  journal = {Proceedings of the First International Software Metrics Symposium.},
  pages = {52--60},
  year = {1993},
  month = may}

@book{Li98a,
  author = {Liwu Li},
  title = {The {Visual}{Age} for {Smalltalk} Primer},
  publisher = {Cambridge University Press},
  year = {1998}}

@article{Li98b,
  author = {Wei Li},
  title = {Another Metric Suite for Object-Oriented Programming},
  journal = {Journal of Systems and Software},
  volume = {44},
  pages = {155--162},
  year = {1998}}

@inproceedings{Lian95a,
  author = {Sheng Liang and Paul Hudak and Mark P. Jones},
  title = {Monad Transformers and Modular Interpreters},
  booktitle = {Conference Record of {POPL}~'95},
  pages = {333--343},
  year = {1995},
  address = {San Francisco, California}}

@inproceedings{Lian98a,
  author = {Sheng Liang and Gilad Bracha},
  title = {Dynamic Class Loading in the {Java} Virtual Machine},
  booktitle = {Proceedings of OOPSLA '98},
  pages = {36--44},
  year = {1998}}

@inproceedings{Libl05a,
  author = {Ben Liblit and Mayur Naik and Alice X. Zheng and Alex Aiken and Michael I. Jordan},
  title = {Scalable statistical bug isolation},
  booktitle = {Proceedings of the 2005 ACM SIGPLAN conference on Programming language design and implementation (PLDI'05)},
  pages = {15--26},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1065010.1065014},
  address = {New York, NY, USA},
  isbn = {1-59593-056-6},
  location = {Chicago, IL, USA}}

@inproceedings{Libl06b,
  author = {B. Liblit and A.Begel and E. Sweetser},
  title = {Cognitive perspectives on the role of naming in computer programs},
  booktitle = {Annual Psychology of Programming Workshop},
  year = {2006}}

@inproceedings{Lica03a,
  author = {D. Licata and C.D. Harris and S. Krishnamurthi},
  title = {The Feature Signatures of Evolving Programs},
  booktitle = {Proceedings IEEE International Conference on Automated Software Engineering},
  pages = {281--285},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  address = {Los Alamitos CA},
  month = oct}

@inproceedings{Lidd94a,
  author = {S. W. Liddle and D. W. Embley and S. N. Woodfield},
  title = {A Seamless Model for Object-Oriented Systems Development},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {123--141},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@mastersthesis{Lie04a,
  author = {Sean Lie},
  title = {Hardware Support for Unbounded Transactional Memory},
  year = {2004},
  school = {Massachusetts Institute of Technology},
  pdf = {http://www.cag.csail.mit.edu/scale/papers/slie-meng.pdf},
  month = may}

@inproceedings{Lie89a,
  author = {Lie, A. and Conradi, R. and Didriksen, T. M. and Karlsson, E.-A.},
  title = {Change oriented versioning in a software engineering database},
  booktitle = {Proceedings of the 2nd International Workshop on Software configuration management},
  pages = {56--65},
  publisher = {ACM},
  year = {1989},
  doi = {/10.1145/72910.73348},
  address = {New York, NY, USA},
  isbn = {0-89791-334-5},
  location = {Princeton, New Jersey, United States}}

@book{Lieb01a,
  author = {Henry Lieberman},
  title = {Your Wish Is My Command --- Programming by Example},
  publisher = {Morgan Kaufmann},
  year = {2001}}

@techreport{Lieb01b,
  author = {Karl Lieberherr and Johan Ovlinger and Mira Mezini and David Lorenz},
  title = {Modular Programming with Aspectual Collaborations},
  pages = {1--12},
  year = {2001},
  address = {Boston, MA},
  institution = {College of Computer Science, Northeastern University},
  month = mar,
  number = {NU-CCS-2001-04}}

@article{Lieb01c,
  author = {Henry Liebermann and Christopher Fry and Louis Weitzmann},
  title = {Exploring the Web with Reconnaissance Agents},
  journal = {Communications of the ACM},
  volume = {44},
  pages = {69--75},
  year = {2001},
  month = {aug},
  number = {8}}

@inproceedings{Lieb14a,
  author = {Lieber, Tom and Brandt, Joel R and Miller, Rob C},
  title = {Addressing misconceptions about code with always-on programming visualizations},
  booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
  pages = {2481--2490},
  year = {2014}}

@inproceedings{Lieb80a,
  author = {Henry Lieberman and Carl Hewitt},
  title = {A Session with {T}inker: Interleaving Program Testing with Program Writing},
  booktitle = {LISP Conference},
  pages = {80--99},
  year = {1980}}

@techreport{Lieb81a,
  author = {Henry Lieberman and Carl Hewitt},
  title = {A Real Time Garbage Collector Based on the Lifetimes of Objects},
  year = {1981},
  institution = {MIT},
  number = {569},
  type = {AI memo no}}

@article{Lieb82a,
  author = {Henry Lieberman},
  title = {Machine Tongues {IX}: Object-Oriented Programming},
  journal = {Computer Music Journal},
  volume = {6},
  year = {1982},
  number = {3}}

@article{Lieb84a,
  author = {Lieberman, Henry},
  title = {Steps towards better debugging tools for lisp},
  journal = {ACM Symposium on Lisp and Functional Programming},
  year = {1984}}

@inproceedings{Lieb86a,
  author = {Henry Lieberman},
  title = {Using Prototypical Objects to Implement Shared Behavior in Object Oriented Systems},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {214--223},
  year = {1986},
  doi = {10.1145/960112.28718},
  month = nov}

@article{Lieb86b,
  author = {H. Lieberman},
  title = {Delegation and Inheritance: Two mechanisms for sharing Knowledge in Object-Oriented Systems},
  journal = {Bigre + Globule},
  volume = {48},
  pages = {79--89},
  year = {1986}}

@inproceedings{Lieb87a,
  author = {Henry Lieberman},
  title = {Reversible Object-Oriented Interpreters},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {11--19},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@incollection{Lieb87b,
  author = {Henry Lieberman},
  title = {Concurrent Object-Oriented Programming in Act 1},
  booktitle = {Object-Oriented Concurrent Programming},
  pages = {9--36},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  editor = {A. Yonezawa and M. Tokoro}}

@inproceedings{Lieb88a,
  author = {Karl J. Lieberherr and Ian M. Holland and Arthur Riel},
  title = {Object-Oriented Programming: An Objective Sense of Style},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {323--334},
  year = {1988},
  url = {http://www.ccs.neu.edu/research/demeter/papers/law-of-demeter/oopsla88-law-of-demeter.pdf},
  doi = {10.1145/62083.62113},
  month = nov}

@inproceedings{Lieb89a,
  author = {Karl J. Lieberherr and Arthur J. Riel},
  title = {Contributions to Teaching Object Oriented Design and Programming},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {11--22},
  year = {1989},
  month = oct}

@article{Lieb89b,
  author = {Karl J. Lieberherr},
  title = {Formulations and Benefits of the {Law of Demeter}},
  journal = {ACM SIGPLAN Notices},
  volume = {24},
  pages = {67--78},
  publisher = {ACM New York, NY, USA},
  year = {1989},
  number = {3}}

@incollection{Lieb93a,
  author = {Karl J. Lieberherr and Cun Xiao},
  title = {Minimizing Dependency on Class Structures with Adaptive Programs},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {424--441},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Adaptive software is a new kind of generic software
which attempts to minimize and localize dependency
on the context in which the software will be used.
An Adaptive program is written in terms of
constraints on the customizing context in which the
program may be used. The constraints are written so
that the only encode necessary dependencies and at
the same time they localize information on groups of
collaborating classes. Adaptive software is usually
written for a given context in mind and therefore it
is important that the adaptive program does not use
too much information from the current context.
Therefore, we introduce in this paper a dependency
metric which measures context dependency between an
adaptive program and a customizer. The paper also
discusses how constraints on customizing contexts
can be written so that information loss is
eliminated.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@unpublished{Lieb94a,
  author = {Karl J. Lieberherr and Jens Palsberg and Cun Xiao},
  title = {Checking Adaptive Software},
  year = {1994},
  url = {ftp://ftp.ccs.neu.edu//pub/people/lieber/check-adaptive.ps},
  abstract = {A succinct presentation of adaptive software.
Introduces a ``lambda calculus'' for patterns.},
  note = {draft manuscript}}

@article{Lieb94b,
  author = {Lieberherr, K. J. and Silva-Lepe, I. and Xaio, C.},
  title = {Adaptive Object-Oriented Programming Using Graph-Based Customizations.},
  journal = {Communications of the ACM},
  volume = {37},
  pages = {94--101},
  publisher = {ACM Press},
  year = {1994},
  month = may,
  number = {5}}

@book{Lieb96a,
  author = {Karl J. Lieberherr},
  title = {Adaptative Object-Oriented Software: The Demeter Method},
  publisher = {PWS Publishing},
  year = {1996},
  isbn = {053494602-X}}

@article{Lieb97a,
  author = {Lieberman, Henry},
  title = {Introduction},
  journal = {Commun. ACM},
  volume = {40},
  pages = {26--29},
  publisher = {ACM},
  year = {1997},
  url = {http://doi.acm.org/10.1145/248448.248455},
  doi = {10.1145/248448.248455},
  acmid = {248455},
  address = {New York, NY, USA},
  issn = {0001-0782},
  month = apr,
  number = {4},
  numpages = {4}}

@article{Lieb97b,
  author = {Lieberman, Henry},
  title = {The Debugging Scandal and What to Do About It},
  journal = {Communications of the ACM},
  volume = {40},
  year = {1997},
  doi = {10.1145/248448.248455},
  month = {apr}}

@inproceedings{Lieb98a,
  author = {Henry Lieberman and Christoper Fry},
  title = {{ZS}tep 95: {A} reversible, animated source code stepper},
  booktitle = {Software Visualization --- Programming as a Multimedia Experience},
  pages = {277--292},
  publisher = {The MIT Press},
  year = {1998},
  address = {Cambridge, MA-London},
  editor = {John Stasko and John Domingue and Marc H. Brown and Blaine A. Price}}

@techreport{Lieb99a,
  author = {Karl Lieberherr and David~H. Lorenz and Mira Mezini},
  title = {Programming with Aspectual Components},
  year = {1999},
  url = {http://www.ccs.neu.edu/home/lorenz/papers/reports/NU-CCS-99-01.html},
  address = {Boston, MA 02115},
  institution = {College of Computer Science, Northeastern University},
  month = mar,
  number = {NU-CCS-99-01}}

@article{Liebe88a,
  author = {K. Lieberherr},
  title = {Object-oriented programmnig with class dictionaries},
  journal = {Journal on Lisp and Symbolic Computation},
  volume = {1},
  pages = {185--212},
  year = {1988},
  number = {2}}

@article{Liebe89b,
  author = {K. Lieberherr and I. Holland},
  title = {Assuring a Good Style for Object-Oriented Programs},
  journal = {IEEE Software},
  pages = {38--48},
  year = {1989},
  month = sep}

@inproceedings{Lied95a,
  author = {Jochen Liedtke},
  title = {On micro-Kernel Construction},
  booktitle = {15th ACM symposium On operating System principle},
  pages = {237--250},
  year = {1995}}

@inproceedings{Lied97a,
  author = {Liedtke, J. and Elphinstone, K. and Schiinberg, S. and Hartig, H. and Heiser, G. and Islam, N. and Jaeger, T},
  title = {Achieved IPC Performance},
  booktitle = {Proceedings of the 6th Workshop on Hot Topics in Operating Systems (HotOS-VI)},
  pages = {28--},
  publisher = {IEEE Computer Society},
  year = {1997},
  url = {http://dl.acm.org/citation.cfm?id=822075.822414},
  acmid = {822414},
  address = {Washington, DC, USA},
  isbn = {0-8186-7834-8},
  keywords = {performance evaluation, interprocess communication, achieved IPC performance, extensibility, cross-address-space communication, application-specific modules, operating system, L4 microkernel, Intel Pentium, Mips R4600, DEC Alpha, microprocessors, direct costs, L1 cache, average indirect costs},
  series = {HOTOS '97}}

@techreport{Lien03a,
  author = {Adrian Lienhard},
  title = {Mewa: Meta-level Architecture for Generic Web-Application Construction},
  year = {2003},
  url = {http://scg.unibe.ch/archive/projects/Lien03a.pdf},
  abstract = {Web-applications are very popular, lightweight
applications that entirely run in web-browsers over
the internet. In today's business, web-applications
become more and more complex but they still need to
be fast developed, flexible for changes and easy to
maintain --- conventional techniques often lack
these properties. High-level, cleanly layered
solutions open promising possibilities to overcome
these difficulties. This paper presents a
lightweight, object-oriented, metadata-driven
approach to build better engineered and easier
evolvable and maintainable web-applications.},
  institution = {University of Bern},
  month = nov,
  type = {Informatikprojekt}}

@mastersthesis{Lien04a,
  author = {Adrian Lienhard},
  title = {Bootstrapping {Traits}},
  year = {2004},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Lien04a.pdf},
  abstract = {This thesis discusses the implementation of traits.
The result it presents is a new Smalltalk kernel
bootstrapped with traits. The implementation is
fully done in Squeak, an open-source dialect of
Smalltalk. It is planned that the next generation of
Squeak will include traits. Because traits are
simple and completely backward compatible with
single inheritance, implementing traits in a
reflective single inheritance language like Squeak
is unproblematic. However, an implementation with a
sophisticated and clean design, with the robustness
to be used in production and the flexibility to be
used as a vehicle for future research, is not
trivial. Furthermore our work is aimed at serving as
a reference implementation for the introduction of
traits in other languages. Hence, we focused on
building a simple but powerful system for the
future. Consequently following the fundamental idea
of a reflective language --- using the features of
the language to define the behavior of the language
itself --- we bootstrapped the new kernel which,
eventually, allowed us to fully express the system
itself with traits. The refactoring of the core of
the Smalltalk language as a composition of traits
not only improved its quality but also enhanced its
understandability. This has the advantage that it is
easier maintainable and it facilitates
experimentation with the language because the
different aspects of the kernel are now available as
traits and can therefore be recomposed to create new
kernel classes with different properties.},
  month = nov}

@misc{Lien05b,
  author = {Adrian Lienhard and Lukas Renggli},
  title = {SqueakSource --- Smart Monticello Repository},
  year = {2005},
  url = {http://scg.unibe.ch/archive/reports/Lien05b.pdf},
  abstract = {SqueakSource is a web-based Monticello
code-repository for Squeak. By providing a
web-browser based frontend it facilitates simple
means to set up and to use Monticello repository.
Not only it makes Monti- cello conveniently usable
for collaborative development, SqueakSource also
provides features such as configurable access
rights, a wiki, statistics, and rss-feeds.},
  howpublished = {European Smalltalk User Group Innovation Technology Award},
  month = aug,
  note = {Won the 2nd prize}}

@inproceedings{Lien07a,
  author = {Adrian Lienhard and Orla Greevy and Oscar Nierstrasz},
  title = {Tracking Objects to detect Feature Dependencies},
  booktitle = {Proceedings of the International Conference on Program Comprehension ({ICPC}'07)},
  pages = {59--68},
  publisher = {IEEE Computer Society},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Lien07aFeatureDependencies.pdf},
  doi = {10.1109/{ICPC}.2007.38},
  abstract = {The domain-specific ontology of a software system
includes a set of features and their relationships.
While the problem of locating features in
object-oriented programs has been widely studied,
runtime dependencies between features are less well
understood. Features cannot be understood in
isolation, since their behavior often depends on
objects created and referenced in previously
exercised features. It is difficult to spot runtime
dependencies between features just by browsing
source code. Hence, code modifications intended for
one feature, often inadvertently affect other
features. In this paper, we propose an approach to
precisely identify dependencies between features
based on a fine-grained dynamic analysis which
captures details about how objects are referenced at
runtime. The results of two case studies indicate
that our approach helps software maintainers in
understanding critical feature dependencies.},
  address = {Washington, DC, USA},
  isbn = {0-7695-2860-0},
  issn = {1063-6897},
  medium = {2},
  month = jun}

@inproceedings{Lien07b,
  author = {Adrian Lienhard and Adrian Kuhn and Orla Greevy},
  title = {R{API}d Prototyping of Visualizations using Mondrian},
  booktitle = {Proceedings IEEE International Workshop on Visualizing Software for Understanding},
  pages = {67--70},
  publisher = {IEEE Computer Society},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Lien07bMondrian.pdf},
  doi = {10.1109/VISSOF.2007.4290702},
  abstract = {Science requires tools, and computer science is no
different. In a typical research context however, it
is not known upfront how a tool should work.
Researching the tool's design is part of the
investigation process. Various designs have to be
prototyped and experimented with. This paper focuses
on the research process of interactive visualization
tools. We present how to improve development, so
that a novel tool can be tested and modified at
(almost) the same time. We present the Mondrian
framework, which supports on-the-fly prototyping of
interactive visualizations. As an example, we
present the research process of the Feature
Dependency Browser, a visualization tool which we
developed to allow software engineers inspect
runtime dependencies between features.},
  address = {Los Alamitos, CA, USA},
  isbn = {1-4244-0600-5},
  medium = {2},
  month = jun,
  series = {Vissoft'07}}

@inproceedings{Lien07d,
  author = {Adrian Lienhard and Tudor G\^irba and Orla Greevy and Oscar Nierstrasz},
  title = {Exposing Side Effects in Execution Traces},
  booktitle = {Proceedings of the 3rd International Workshop on Program Comprehension through Dynamic Analysis (PCODA'07)},
  pages = {11--17},
  publisher = {Technische Universiteit Delft},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Lien07dSideEffectsPCODA.pdf http://swerl.tudelft.nl/twiki/pub/Main/PCODA2007/PCODA2007proceedings.pdf},
  abstract = {We need to understand the impact of side effects
whenever changing complex object-oriented software
systems. This can be difficult as side effects are
at best implicit in static views of the software,
and typically execution traces do not capture data
flow between parts of the system. To solve this
problem, we complement execution traces with dynamic
object flow information. In our previous work we
analyzed object flows between features and classes.
In this paper, we use object flow information to
analyze side effects in execution traces and to
detect how future behavior in the trace is affected
by it. Using a visualization, the developer can
study how a selected part of the program accessed
program state and what side effect its execution
produced. Like this, the developer can investigate
how a particular part of the program works without
needing to understand the source code in detail. To
illustrate our approach, we use a running example of
writing unit tests for a legacy system.},
  editor = {Andy Zaidman and Abdelwahab Hamou-Lhadj and Orla Greevy},
  isbn = {978-0-7695-3034-5},
  issn = {1872-5392},
  medium = {2}}

@inproceedings{Lien07f,
  author = {M. Lienhardt and A. Schmitt and J.B. Stefani},
  title = {Oz/K: A Kernel Language for Component-Based Open Programming},
  booktitle = {6th ACM International Conference on Generative Programming and Component Engineering (GPCE)},
  publisher = {ACM Press},
  year = {2007}}

@inproceedings{Lien08a,
  author = {Adrian Lienhard and Tudor G\^irba and Orla Greevy and Oscar Nierstrasz},
  title = {Test Blueprints --- Exposing Side Effects in Execution Traces to Support Writing Unit Tests},
  booktitle = {Proceedings of the 12th European Conference on Software Maintenance and Reengineering (CSMR'08)},
  pages = {83--92},
  publisher = {IEEE Computer Society Press},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Lien08a-TestBlueprint.pdf},
  doi = {10.1109/CSMR.2008.4493303},
  abstract = {Writing unit tests for legacy systems is a key
maintenance task. When writing tests for
object-oriented programs, objects need to be set up
and the expected effects of executing the unit under
test need to be verified. If developers lack
internal knowledge of a system, the task of writing
tests is non-trivial. To address this problem, we
propose an approach that exposes side effects
detected in example runs of the system and uses
these side effects to guide the developer when
writing tests. We introduce a visualization called
Test Blueprint, through which we identify what the
required fixture is and what assertions are needed
to verify the correct behavior of a unit under test.
The dynamic analysis technique that underlies our
approach is based on both tracing method executions
and on tracking the flow of objects at runtime. To
demonstrate the usefulness of our approach we
present results from two case studies.},
  medium = {2}}

@inproceedings{Lien08b,
  author = {Adrian Lienhard and Tudor G\^irba and Oscar Nierstrasz},
  title = {Practical Object-Oriented Back-in-Time Debugging},
  booktitle = {Proceedings of the 22nd European Conference on Object-Oriented Programming (ECOOP'08)},
  volume = {5142},
  pages = {592--615},
  publisher = {Springer},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Lien08bBackInTimeDebugging.pdf},
  abstract = {Back-in-time debuggers are extremely useful tools
for identifying the causes of bugs, as they allow us
to inspect the past states of objects no longer
present in the current execution stack.
Unfortunately the "omniscient" approaches that try
to remember all previous states are impractical
because they either consume too much space or they
are far too slow. Several approaches rely on
heuristics to limit these penalties, but they
ultimately end up throwing out too much relevant
information. In this paper we propose a practical
approach to back-in-time debugging that attempts to
keep track of only the relevant past data. In
contrast to other approaches, we keep object history
information together with the regular objects in the
application memory. Although seemingly
counter-intuitive, this approach has the effect that
past data that is not reachable from current
application objects (and hence, no longer relevant)
is automatically garbage collected. In this paper we
describe the technical details of our approach, and
we present benchmarks that demonstrate that memory
consumption stays within practical bounds.
Furthermore since our approach works at the virtual
machine level, the performance penalty is
significantly better than with other approaches.},
  isbn = {978-3-540-70591-8},
  medium = {2},
  note = {{ECOOP} distinguished paper award},
  series = {LNCS}}

@phdthesis{Lien08d,
  author = {Adrian Lienhard},
  title = {Dynamic Object Flow Analysis},
  year = {2008},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/lienhard-phd.pdf},
  abstract = {The behavior of an object-oriented software system
is notoriously hard to understand from the source
code alone. The main reason is the large gap between
the program's static structure and its actual
runtime behavior. Features inherent to
object-orientation, like object aliasing and late
binding, - while providing a high degree of
expressiveness to model an application domain - make
programs hard to understand, maintain, and analyze.
Complementary to static analysis, dynamic analysis
can help to close this gap by investigating the
properties of a running program. The state of the
art in dynamic analysis focuses on investigating
runtime control flow and structures of object
graphs, but a thorough analysis of how objects are
passed through a system is missing. Tracking how
object references are transferred, however, is
essential to analyze the dependencies introduced by
object aliasing. In this dissertation we propose
Object Flow Analysis, our approach to track object
flow by explicitly representing object references
and reference transfer. Object Flow Analysis
provides an effective and original way of analyzing
and runtime monitoring dependencies introduced by
object aliasing. To validate Object Flow Analysis,
we propose three different reverse engineering
applications that, based on Object Flow Analysis,
reason about aliasing dependencies in
object-oriented programs. Yet Object Flow Analysis
extends beyond traditional reverse engineering
applications. A key contribution of our work is that
we advance the state of the art in back-in-time
debugging by proposing and providing an
implementation of the concept of Object Flow
Analysis in a high-level language virtual machine.},
  month = dec,
  type = {PhD thesis}}

@inproceedings{Lien09a,
  author = {Adrian Lienhard and Julien Fierz and Oscar Nierstrasz},
  title = {Flow-Centric, Back-In-Time Debugging},
  booktitle = {Objects, Components, Models and Patterns, Proceedings of TOOLS Europe 2009},
  volume = {33},
  pages = {272--288},
  publisher = {Springer-Verlag},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Lien09aCompass.pdf},
  abstract = {Conventional debugging tools present developers with
means to explore the run-time context in which an
error has occurred. In many cases this is enough to
help the developer discover the faulty source code
and correct it. However, rather often errors occur
due to code that has executed in the past, leaving
certain objects in an inconsistent state. The actual
run-time error only occurs when these inconsistent
objects are used later in the program. So-called
back-in-time debuggers help developers step back
through earlier states of the program and explore
execution contexts not available to conventional
debuggers. Nevertheless, even back-in-time debuggers
do not help answer the question, ``Where did this
object come from?'' The Object-Flow Virtual Machine,
which we have proposed in previous work, tracks the
flow of objects to answer precisely such questions,
but this VM does not provide dedicated debugging
support to explore faulty programs. In this paper we
present a novel debugger, called Compass, to
navigate between conventional run-time
stack-oriented control flow views and object flows.
Compass enables a developer to effectively navigate
from an object contributing to an error back-in-time
through all the code that has touched the object. We
present the design and implementation of Compass,
and we demonstrate how flow-centric, back-in-time
debugging can be used to effectively locate the
source of hard-to-find bugs.},
  medium = {2},
  series = {LNBIP}}

@book{Lien80a,
  author = {Bennett Lientz and Burton Swanson},
  title = {Software Maintenance Management},
  publisher = {Addison Wesley},
  year = {1980},
  address = {Boston, MA}}

@article{Lien81a,
  author = {Bennet P. Lientz and E. Burton Swanson},
  title = {Problems in application software maintenance},
  journal = {Commun. ACM},
  volume = {24},
  pages = {763--769},
  publisher = {ACM},
  year = {1981},
  doi = {10.1145/358790.358796},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {11}}

@article{Lier03a,
  author = {Robert van Liere and Wim de Leeuw},
  title = {GraphSplatting: Visualizing Graphs as Continuous Fields},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {9},
  pages = {206-212},
  publisher = {IEEE Computer Society},
  year = {2003},
  doi = {10.1109/TVCG.2003.10011},
  address = {Los Alamitos, CA, USA},
  issn = {1077-2626},
  number = {2}}

@article{Like32a,
  author = {Rensis Likert},
  title = {A technique for the measurement of attitudes},
  journal = {Archives of Psychology},
  volume = {22},
  pages = {1--55},
  year = {1932},
  address = {New York, NY, USA},
  number = {140}}

@inproceedings{Lili96a,
  author = {Li Li and A. Jefferson Offutt},
  title = {Algorithmic Analysis of the Impact of Changes to Object-Oriented Software},
  booktitle = {{ICSM} '96: Proceedings of the 1996 International Conference on Software Maintenance},
  pages = {171--184},
  publisher = {IEEE Computer Society},
  year = {1996},
  address = {Washington, DC, USA},
  isbn = {0-8186-7677-9}}

@phdthesis{Lili98a,
  author = {Michelle Li Lee},
  title = {Change impact analysis of object-oriented software},
  publisher = {George Mason University},
  year = {1998},
  school = {George Mason University},
  address = {Fairfax, VA, USA},
  isbn = {0-599-17351-3},
  note = {Director-Jeff Offutt}}

@inproceedings{Lim06,
  author = {Junghee Lim and Thomas W. Reps and Ben Liblit},
  title = {Extracting Output Formats from Executables},
  booktitle = {13th Working Conference on Reverse Engineering {({WCRE}} 2006), 23-27 October 2006, Benevento, Italy},
  pages = {167--178},
  year = {2006},
  url = {https://doi.org/10.1109/{WCRE}.2006.29},
  doi = {10.1109/{WCRE}.2006.29}}

@inproceedings{Lim14a,
  author = {Lim, Meng-Hui and Lou, Jian-Guang and Zhang, Hongyu and Fu, Qiang and Teoh, Andrew Beng Jin and Lin, Qingwei and Ding, Rui and Zhang, Dongmei},
  title = {Identifying Recurrent and Unknown Performance Issues},
  booktitle = {2014 IEEE International Conference on Data Mining},
  pages = {320-329},
  year = {2014},
  doi = {10.1109/ICDM.2014.96}}

@article{Lim14b,
author = {Lim, Jason},
year = {2014},
month = {aug},
pages = {},
title = {Live programming for robotic fabrication},
volume = {3},
journal = {Journal of Professional Communication},
doi = {10.15173/jpc.v3i2.164}
}

@article{Lima20a,
  author = {Lima, Igor and Silva, Jefferson and Miranda, Breno and Pinto, Gustavo and d'Amorim, Marcelo},
  title = {Exposing {Bugs} in {JavaScript} {Engines} through {Test} {Transplantation} and {Differential} {Testing}},
  journal = {arXiv:2012.03759 [cs]},
  year = {2020},
  url = {http://arxiv.org/abs/2012.03759}}

@inproceedings{Lin04a,
  author = {Lin, Chin-Yew},
  title = {ROUGE: A Package for Automatic Evaluation of Summaries},
  booktitle = {Text Summarization Branches Out: Proceedings of the ACL-04 Workshop},
  pages = {74--81},
  publisher = {Association for Computational Linguistics},
  year = {2004},
  address = {Barcelona, Spain},
  editor = {Marie-Francine Moens and Stan Szpakowicz},
  month = {jul}}

@article{Lin12a,
  author = {Lin, Yi and Blackburn, Stephen M. and Frampton, Daniel},
  title = {Unpicking the Knot: Teasing Apart VM/Application Interdependencies},
  journal = {SIGPLAN Not.},
  volume = {47},
  pages = {181--190},
  publisher = {ACM},
  year = {2012},
  url = {http://doi.acm.org/10.1145/2365864.2151048},
  doi = {10.1145/2365864.2151048},
  acmid = {2151048},
  address = {New York, NY, USA},
  issn = {0362-1340},
  keywords = {dependency, isolation, metacircular, virtual machine},
  month = mar,
  number = {7},
  numpages = {10}}

@inproceedings{Lin98a,
  author = {Cross II, James H. and T. Dean Hendrix and Larry A. Barowsky and Karl S. Mathias},
  title = {Scalable Visualizations to Support Reverse Engineering: A Framework for Evaluation},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {201--210},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Lin98b,
  author = {Dekang Lin},
  title = {An Information-Theoretic Definition of Similarity},
  booktitle = {Proceedings of the 15th ICML},
  pages = {296--304},
  year = {1998},
  address = {Madison WI}}

@inproceedings{Linc12a,
  author = {Lincke, Jens and Hirschfeld, Robert},
  title = {Scoping changes in self-supporting development environments using context-oriented programming},
  booktitle = {Proceedings of the International Workshop on Context-Oriented Programming},
  pages = {2},
  year = {2012},
  organization = {ACM}}

@inproceedings{Lind00a,
  author = {Christian Lindig},
  title = {Fast Concept Analysis},
  booktitle = {Working with Conceptual Structures --- Contributions to ICCS 2000},
  pages = {152--161},
  publisher = {Shaker Verlag},
  year = {2000},
  editor = {Gerhard Stumme},
  note = {ISBN: 3-8265-7669-1}}

@mastersthesis{Lind01a,
  author = {Tancred Lindhom},
  title = {A 3-way Merging Algorithm for Synchronizing Ordered Trees - the {3DM} merging and differencing tool for {XML}},
  year = {2001},
  school = {Helsinki University of Technology},
  numpages = {205}}

@article{Lind05a,
  author = {Lindig, Christian},
  title = {Find a {Compiler} {Bug} in 5 {Minutes}},
  journal = {Symposium on Automated Analysis-Driven Debugging},
  year = {2005},
  abstract = {In a C compiler, function calls are difficult to implement correctly because they must respect a platform-specific call-ing convention. But they are governed by a simple invariant: parameters passed to a function must be received unaltered. A violation of this invariant signals an inconsistency in a compiler. We automatically test the consistency of C com-pilers using randomly generated programs. An inconsistency manifests itself as an assertion failure when compiling and running the generated code. The generation of programs is type-directed and can be controlled by the user with com-posable random generators in about 100 lines of Lua. Lua is a scripting language built into our testing tool that drives program generation. Random testing is fully automatic, re-quires no specification, yet is comparable in effectiveness with specification-based testing from prior work. Using this method, we uncovered 13 new bugs in mature open-source and commercial C compilers.},
  month = jan}

@book{Lind14a,
  author = {Lindholm, Tim and Yellin, Frank and Bracha, Gilad and Buckley, Alex},
  title = {The Java virtual machine specification},
  publisher = {Pearson Education},
  year = {2014}}

@inproceedings{Lind95a,
  author = {Christian Lindig},
  title = {Concept-{Based} {Component} {Retrieval}},
  booktitle = {Working Notes of the IJCAI-95 Workshop: Formal Approaches to the Reuse of Plans, Proofs, and Programs},
  pages = {21--25},
  year = {1995},
  editor = {J. K\"{o}hler and F. Giunchiglia and C. Green and C. Walther},
  month = aug}

@book{Lind97a,
  author = {Tim Lindholm and Frank Yellin},
  title = {The {Java} Virtual Machine Specification},
  publisher = {Addison Wesley},
  year = {1997},
  isbn = {0-201-63452-X}}

@inproceedings{Lind97b,
  author = {C. Lindig and G. Snelting},
  title = {Assessing Modular Structure of Legacy Code Based on Mathematical Concept Analysis},
  booktitle = {Proceedings of the International Conference on Software Engineering (ICSE 97)},
  pages = {349--359},
  year = {1997},
  address = {Boston}}

@book{Lind99a,
  author = {Lindholm, Tim and Yellin, Frank},
  title = {Java Virtual Machine Specification},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {1999},
  address = {Boston, MA, USA},
  edition = {2nd},
  isbn = {0201432943}}

@inproceedings{Ling07a,
  author = {Lingampally, R. and Gupta, A. and Jalote, P.},
  title = {A Multipurpose Code Coverage Tool for Java},
  booktitle = {System Sciences, 2007. HICSS 2007. 40th Annual Hawaii International Conference on},
  pages = {261b-261b},
  year = {2007},
  doi = {10.1109/HICSS.2007.24},
  issn = {1530-1605},
  keywords = {Java;program testing;Java;branch coverage;multipurpose code coverage tool;open source database;regression testing;software testing;test case prioritization;test coverage reporting;test-suite augmentation;test-suite minimization;Binary codes;Costs;Fault detection;Information analysis;Java;Performance evaluation;Software testing;System testing;Visual databases;Visualization; Jacoco},
  month = {jan}}

@article{Ling73a,
  author = {Robert L. Ling},
  title = {A computer generated aid for cluster analysis},
  journal = {Communications of ACM},
  volume = {16},
  pages = {355--361},
  publisher = {ACM Press},
  year = {1973},
  doi = {10.1145/362248.362263},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {6}}

@book{Ling95a,
  title = {Proceedings {DOOD}'95},
  volume = {1013},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Singapore},
  editor = {Tok Wang Ling and Alberto O. Mendelzon},
  isbn = {3-540-60608-4},
  month = dec,
  series = {LNCS}}

@inproceedings{Lino99a,
  author = {Panagiotis K. Linos and Stephen R. Schach},
  title = {Comprehending Multilanguage and Multiparadigm Software},
  booktitle = {Proceedings of the short papers of {ICSM} '99},
  pages = {25--28},
  year = {1999},
  month = aug}

@inproceedings{Lins07a,
  author = {Linstead, Erik and Rigor, Paul and Bajracharya, Sushil and Lopes, Cristina and Baldi, Pierre},
  title = {Mining {Eclipse} Developer Contributions via Author-Topic Models},
  booktitle = {MSR '07: Proceedings of the Fourth International Workshop on Mining Software Repositories},
  pages = {30},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MSR.2007.20},
  address = {Washington, DC, USA},
  isbn = {0-7695-2950-X}}

@inproceedings{Lins09a,
  author = {Linstead, E. and Hughes, L. and Lopes, C. and Baldi, P.},
  title = {Exploring Java software vocabulary: A search and mining perspective},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {29--32},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070017},
  doi = {10.1109/SUITE.2009.5070017},
  abstract = {We conduct a large-scale analysis of Java source
code vocabulary for 12,151 open source projects from
Source-Forge and Apache, a corpus substantially
larger than considered previously. Simple
statistical analysis demonstrates robust power-law
behavior for word count distributions across
multiple program entities. We then identify salient
vocabulary trends for classes, interfaces, methods,
and fields. Our results provide low-level insight
into the vocabulary space governing Java software
development, with direct application to program
comprehension and software search. Supplementary
material may be found at:
http://sourcerer.ics.uci.edu/suite2009/suite.html.}}

@inproceedings{Lins88a,
  author = {Yngve Linsj\/orn and Dag Sj\/oberg},
  title = {Database Concepts Discussed in Object-Oriented Perspective},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {300--318},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@article{Lint89a,
  author = {M. Linton and John Vlissides and P. Calder},
  title = {Composing User Interfaces with InterViews},
  journal = {IEEE Computer},
  volume = {22},
  pages = {8--22},
  year = {1989},
  month = feb,
  number = {2}}

@inproceedings{Lipp91a,
  author = {Ernst Lippe and Gert Florijn},
  title = {Implementation Techniques for Integral Version Management},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {342--359},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@book{Lipp91b,
  author = {Stanley Lippman},
  title = {The {C}++ Primer},
  publisher = {Addison Wesley},
  year = {1991},
  edition = {Second},
  isbn = {0-201-54848-8},
  note = {(3)}}

@inproceedings{Lipp92a,
  author = {Ernst Lippe and Norbert van Oosterom},
  title = {Operation-based merging},
  booktitle = {Proceedings of the 5th ACM SIGSOFT symposium on Software Development Environments},
  pages = {78--87},
  publisher = {ACM Press},
  year = {1992},
  doi = {10.1145/142868.143753},
  address = {New York, NY, USA},
  isbn = {0-89791-554-2},
  location = {Tyson's Corner, Virginia, United States},
  series = {SDE'92}}

@techreport{Lipp99a,
  author = {Martin Lippert and Cristina V. Lopes},
  title = {A Study on Exception Detection and Handling Using Aspect-Oriented Programming},
  year = {1999},
  institution = {Xerox Parc Palo Alto},
  month = dec,
  number = {CSL-99-1},
  type = {Technical Report P9910229}}

@book{Lippe06a,
  author = {Lippert, Martin and Roock, Stephen},
  title = {Refactoring in large software projects: performing complex restructurings successfully},
  publisher = {John Wiley \& Sons},
  year = {2006}}

@article{Lippe92a,
  author = {Lippe, Ernst and van Oosterom, Norbert},
  title = {Operation-based merging},
  journal = {SIGSOFT Software Engineering Notes},
  volume = {17},
  pages = {78--87},
  publisher = {ACM},
  year = {1992},
  doi = {/10.1145/142882.143753},
  address = {New York, NY, USA},
  date-added = {2009-10-21 13:02:53 +0200},
  date-modified = {2009-10-21 13:03:05 +0200},
  issn = {0163-5948},
  number = {5}}

@misc{Lipt99a,
  author = {Paul Lipton},
  title = {Java Proxies for Database Objects},
  year = {1999},
  url = {http://www.drdobbs.com/windows/184410934},
  howpublished = {\url{http://www.drdobbs.com/windows/184410934}},
  key = {proxiesDatabase}}

@unpublished{Liqu04a,
  author = {Luigi Liquori and Arnaud Spiwack},
  title = {Adding Multiple Inheritance to {Featherweight {Java}}},
  year = {2004},
  url = {http://www-sop.inria.fr/mirho/Luigi.Liquori/PAPERS/ftj.pdf},
  note = {INRIA Sophia Antipolis \& ENS Cachan},
  type = {Manuscript}}

@article{Liqu07b,
  author = {Luigi Liquori and Arnaud Spiwack},
  title = {Extending {FeatherTrait Java} with Interfaces},
  journal = {TCS, Theoretical Computer Science},
  publisher = {Elsevier},
  year = {2007},
  url = {http://www-sop.inria.fr/mascotte/Luigi.Liquori/PAPERS/tcs-07.pdf},
  note = {Mario Coppo, Mariangiola Dezani and Simona Ronchi della Rocca Festschrift}}

@article{Liqu08a,
  author = {Luigi Liquori and Arnaud Spiwack},
  title = {{FeatherTrait}: A Modest Extension of {Featherweight Java}},
  journal = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume = {30},
  pages = {1--32},
  publisher = {ACM},
  year = {2008},
  url = {http://www-sop.inria.fr/members/Luigi.Liquori/PAPERS/toplas-07.pdf},
  doi = {10.1145/1330017.1330022},
  address = {New York, NY, USA},
  issn = {0164-0925},
  number = {2}}

@book{Lisc96a,
  author = {Ray Lischner},
  title = {Secrets of Delphi 2},
  publisher = {Waite Group Press},
  year = {1996}}

@article{Lisk77a,
  author = {Barbara Liskov and Alan Snyder and Robert Atkinson and Craig Schaffert},
  title = {Abstraction Mechanisms in {CLU}},
  journal = {CACM},
  volume = {20},
  pages = {564--576},
  year = {1977},
  month = aug,
  number = {8}}

@article{Lisk79a,
  author = {Barbara Liskov and Alan Snyder},
  title = {Exception Handling in {CLU}},
  journal = {IEEE Transactions on Software Engineering},
  volume = {5},
  pages = {546--558},
  year = {1979},
  month = nov,
  number = {6}}

@article{Lisk83a,
  author = {Barbara Liskov and R. Scheifler},
  title = {Guardians and Actions: Linguistic Support for Robust, Distributed Programs},
  journal = {ACM TOPLAS},
  volume = {5},
  pages = {381--404},
  year = {1983},
  month = jul,
  number = {3}}

@inproceedings{Lisk86a,
  author = {Barbara Liskov and Maurice Herlihy and L. Gilbert},
  title = {Limitations of Synchronous Communication with Static Process Structure in Languages for Distributed Computing},
  booktitle = {Proceedings of the 13th ACM SIGACT-SIGPLAN symposium on Principles of programming languages (POPL'86)},
  pages = {150--159},
  publisher = {ACM},
  year = {1986},
  misc = {Jan 13-15},
  doi = {10.1145/512644.512658},
  address = {St. Petersburg Beach, Florida},
  location = {St. Petersburg Beach, Florida},
  month = jan}

@book{Lisk86b,
  author = {Barbara Liskov and John Guttag},
  title = {Abstraction and Specification in Program Development},
  publisher = {MIT Press/McGraw-Hill},
  year = {1986},
  address = {Cambridge, Mass., USA},
  isbn = {0-262-12112-3}}

@inproceedings{Lisk87a,
  author = {Barbara Liskov},
  title = {{Data Abstraction and Hierarchy}},
  booktitle = {Proceedings OOPSLA '87},
  pages = {addendum},
  year = {1987},
  month = dec}

@inproceedings{Lisk93a,
  author = {Barbara Liskov and Jeannette M. Wing},
  title = {A New Definition of the Subtype Relation},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {118--141},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {The use of hierarchy is an important component of
object-oriented design. Hierarchy allows the use of
type families, in which higher level supertypes
capture the behavior that all of their subtypes have
in common. For this methodology to be effective, it
is necessary to have a clear understanding of how
subtypes and supertypes are related. This paper
presents a new definition of the subtype relation
that ensures that any property proved about
supertype objects also holds for subtype objects. It
also discusses the ramifications of the definition
on the design of type families. (superseded by
Lisk93c)},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Lisk93b,
  author = {Barbara Liskov and Jeannette M. Wing},
  title = {Specifications and Their Use in Defining Subtypes},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {16--28},
  year = {1993},
  month = oct}

@techreport{Lisk93c,
  author = {Barbara Liskov and Jeannette M. Wing},
  title = {Family Values: {A} Behavioral Notion of Subtyping},
  year = {1993},
  url = {ftp://reports.adm.cs.cmu.edu/usr/anon/1993/CMU-CS-93-187.ps},
  institution = {Carnegie Mellon University},
  month = jul,
  type = {{CMU-CS-93-187}}}

@article{Lisk94a,
  author = {Barbara H. Liskov and Jeannette M. Wing},
  title = {A behavioral notion of subtyping},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume = {16},
  pages = {1811--1841},
  publisher = {ACM},
  year = {1994},
  url = {http://www.cs.cmu.edu/~wing/publications/LiskovWing94.pdf},
  doi = {10.1145/197320.197383},
  address = {New York, NY, USA},
  issn = {0164-0925},
  number = {6}}

@inproceedings{Lisk99a,
  author = {Barbara Liskov and Miguel Castro and Liuba Shrira and Atul Adya},
  title = {Providing Persistent Objects in Distributed Systems},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {230--257},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {THOR is a persistent object store that provides a
powerful programming model. THOR ensures that
persistent objects are accessed only by calling
their methods and it supports atomic transactions.
The result is a system that allows applications to
share objects safely across both space and time. The
paper describes how the THOR implementation is able
to support this pow-erful model and yet achieve good
performance, even in a wide-area, large-scale
distributed environment. It describes the techniques
used in THOR to meet the challenge of providing good
performance in spite of the need to manage very
large numbers of very small objects. In addition,
the paper puts the performance of THOR in
perspective by showing that it substantially
outperforms a system based on memory mapped files,
even though that system provides much less
functionality than THOR.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Litt96a,
  author = {David Littman and Jeannine Pinto and Stan Letovsky and Elliot Soloway},
  title = {Mental {Models} and {Software} {Maintenance}},
  booktitle = {Empirical Studies of Programmers, First Workshop},
  pages = {80--98},
  publisher = {Ablex Publishing Corporation},
  year = {1996},
  editor = {Soloway and Iyengar}}

@article{Litt98a,
  author = {Littman, David C and Pinto, Jeannine and Letovsky, Stanley and Soloway, Elliot},
  title = {Mental models and software maintenance},
  journal = {Journal of Systems and Software},
  volume = {7},
  pages = {341--355},
  publisher = {Elsevier},
  year = {1987},
  number = {4}}

@inproceedings{Liu03a,
  author = {Liu, Jed and Myers, Andrew C.},
  title = {JMatch: Iterable Abstract Pattern Matching for Java},
  booktitle = {5th International Symposium on Practical Aspects of Declarative Languages},
  pages = {110--127},
  year = {2003}}

@inproceedings{Liu04a,
  author = {Liu, Y. and Ngu, A. H. and Zeng, L. Z.},
  title = {Qos computation and policing in dynamic web service selection},
  booktitle = {Proceedings of the 13th international World Wide Web conference on Alternate track papers and posters. New York, USA},
  pages = {66-73},
  publisher = {ACM},
  year = {2004}}

@inproceedings{Liu05a,
  author = {Yanhong A. Liu and Scott D. Stoller and Michael Gorbovitski and Tom Rothamel and Yanni Ellen Liu},
  title = {Incrementalization across object abstraction},
  booktitle = {OOPSLA '05: Proceedings of the 20th annual ACM SIGPLAN conference on Object oriented programming systems languages and applications},
  pages = {473--486},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1094811.1094848},
  address = {New York, NY, USA},
  isbn = {1-59593-031-0},
  location = {San Diego, CA, USA}}

@inproceedings{Liu06,
  author = {Jing Liu and Robyn Lutz and Hridesh Rajan},
  title = {The Role of Aspects in Modeling Product Line Variabilities},
  booktitle = {Proceedings of the 1st Workshop on Aspect-oriented Product Line Engineering (AOPLE' 06)},
  year = {2006},
  address = {Portland, OR, USA},
  note = {In conjunction with GPCE'06}}

@inproceedings{Liu11a,
  author = {Liu, Kaiping and Tan, Hee Beng Kuan and Chen, Xu},
  title = {Extraction of attribute dependency graph from database applications},
  booktitle = {Software Engineering Conference (APSEC), 2011 18th Asia Pacific},
  pages = {138--145},
  publisher = {IEEE},
  year = {2011}}

@article{Liu13a,
  author = {Hui Liu and Xue Guoand Weizhong Shao},
  title = {Monitor-Based Instant Software Refactoring},
  journal = {Transactions on Software Engineering},
  volume = {39},
  year = {2013},
  number = {8}}

@article{Liu13b,
  author = {Liu, Kaiping and Tan, Hee Beng Kuan and Chen, Xu},
  title = {Aiding maintenance of database applications through extracting attribute dependency graph},
  journal = {Journal of Database Management},
  volume = {24},
  pages = {20--35},
  year = {2013},
  number = {1}}

@inproceedings{Liu17a,
  author={Liu, Jie and Li, Yue and Tan, Tian and Xue, Jingling},
  booktitle={2017 IEEE 28th International Symposium on Software Reliability Engineering (ISSRE)},
  title={Reflection Analysis for Java: Uncovering More Reflective Targets Precisely},
  year={2017},
  volume={},
  number={},
  pages={12-23},
  keywords={Mirrors;Java;Security;Scalability;Computer bugs;Performance analysis;Java Reflection;Slicing;Static Analysis;Dynamic Analysis},
  doi={10.1109/ISSRE.2017.36}}

@inproceedings{Liu18a,
  author = {Kui Liu and Dongsun Kim and Tegawende F. Bissyande andTaeyoung Kim and Kisub Kim and Anil Koyuncu andSuntae Kim and Yves Le Traon},
  title = {Learning to Spot and Refactor Inconsistent Method Names},
  booktitle = {Proceedings of ICSE'19},
  year = {2019}}

@inproceedings{Liu18b,
  author = {Liu, Zhongxin and Huang, Qiao and Xia, Xin and Shihab, Emad and Lo, David and Li, Shanping},
  title = {SATD Detector: A Text-Mining-Based Self-Admitted Technical Debt Detection Tool},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
  pages = {9--12},
  publisher = {Association for Computing Machinery},
  year = {2018},
  url = {https://doi.org/10.1145/3183440.3183478},
  doi = {10.1145/3183440.3183478},
  address = {New York, NY, USA},
  isbn = {9781450356633},
  keywords = {eclipse plug-in, SATD detection, self-admitted technical debt},
  location = {Gothenburg, Sweden},
  numpages = {4},
  series = {ICSE '18}}

@inproceedings{Liu92a,
  author = {Chamond Liu and Stephen Goetze and Bill Glynn},
  title = {What Contributes to Successful Object-Oriented Learning?},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {77--86},
  year = {1992},
  month = oct}

@inproceedings{Liu92b,
  author = {Ling Liu and Robert Meersman},
  title = {Activity Model: {A} Declarative Approach for Capturing Communication Behaviour in Object-Oriented Database},
  booktitle = {Proceedings of the 18th VLDB Conference},
  year = {1992},
  address = {Vancouver, BC}}

@incollection{Liu93a,
  author = {Ling Liu},
  title = {An Object-Centered Approach for Manipulating Hierarchically Complex Objects},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {194--219},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {We present an object-centered approach for
manipulating hierarchically complex objects, which
covers an extended object model and an
object-centered query algebra. Extensions of the
object model are mainly based on a separation of
structural and semantic elements in modeling complex
objects, including a general distinction between
aggregation reference and association reference, and
introduction of type inheritance into aggregation
hierarchies and a support for combination of
aggregation inheritance with subtype inheritance.
Based on the extensions, we develop a query algebra
as an integral part of the model. Unlike most of
existing algebra-based query languages, our object
algebra takes complex object collectively as a unit
of high level queries and allows complex objects to
be accessed at all levels of aggregation hierarchies
without having resort to any king of path
expressions. Features of aggregation hierarchies,
such as acyclicity and aggregation inheritance, have
played important roles in such a development. We
have also formally described the output type of each
operator in order for dynamic classification of
query results in the IsA type/class lattice.
Although the design is based on the chosen
object-oriented model, other object-oriented
databases are possible. We feel that the proposal
largely covers the query requirements for complex
objects, and meanwhile provides users with an
opportunity to remain within the framework of the
model of complex objects while querying database. As
a consequence, the flexibility and adaptability of
the object-oriented model against schema changes are
increased.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@book{Liu96a,
  author = {Chamond Liu},
  title = {Smalltalk, objects, and design},
  publisher = {Prentice-Hall, Inc.},
  year = {1996},
  address = {Upper Saddle River, NJ, USA},
  isbn = {0-13-268335-0}}

@inproceedings{Livs05a,
  author = {Livshits, Benjamin and Whaley, John and Lam, Monica S.},
  title = {Reflection Analysis for Java},
  booktitle = {Proceedings of Asian Symposium on Programming Languages and Systems},
  year = {2005},
  keywords = {reflection security}}

@article{Livs05b,
  author = {Livshits, Benjamin and Zimmermann, Thomas},
  title = {Dyna{M}ine: finding common error patterns by mining software revision histories},
  journal = {SIGSOFT Software Engineering Notes},
  volume = {30},
  pages = {296-305},
  publisher = {ACM},
  year = {2005},
  abstract = {A great deal of attention has lately been given to addressing software
	bugs such as errors in operating system drivers or security bugs.
	However, there are many other lesser known errors specific to individual
	applications or {API}s and these violations of application specific
	coding rules are responsible for a multitude of errors. In this paper
	we propose DynaMine, a tool that analyzes source code check-ins to
	find highly correlated method calls as well as common bug fixes in
	order to automatically discover application-specific coding patterns.
	Potential patterns discovered through mining are passed to a dynamic
	analysis tool for validation; finally, the results of dynamic analysis
	are presented to the user.
	The combination of revision history mining and dynamic analysis techniques
	leveraged in DynaMine proves effective for both discovering new application-specific
	patterns and for finding errors when applied to very large applications
	with many man-years of development and debugging effort behind them.
	We have analyzed Eclipse and jEdit, two widely-used, mature, highly
	extensible applications consisting of more than 3,600,000 lines of
	code combined. By mining revision histories, we have discovered 56
	previously unknown, highly application-specific patterns. Out of
	these, 21 were dynamically confirmed as very likely valid patterns
	and a total of 263 pattern violations were found.},
  issn = {0163-5948},
  month = sep,
  number = {5}}

@book{Lloy78a,
  author = {Sam Lloyd and Martin Gardner},
  title = {Mathematische {R}\"atsel und {Spiele}},
  publisher = {Dumont},
  year = {1978},
  isbn = {3-7701-1049-8}}

@article{Lloy82a,
  author = {Sam P. LLoyd},
  title = {Least Squares Quantization in PCM},
  journal = {IEEE Transactions on Information Theory},
  volume = {28},
  pages = {129--137},
  year = {1982}}

@article{Loch83a,
  author = {Frederick H. Lochovsky},
  title = {A Knowledge-Based Approach to Supporting Office Work},
  journal = {IEEE Database Engineering},
  volume = {6},
  pages = {43--51},
  year = {1983},
  month = sep,
  number = {3}}

@proceedings{Loch85a,
  title = {Special Issue on Object-Oriented Systems},
  journal = {IEEE Database Engineering},
  volume = {8},
  year = {1985},
  editor = {Fred H. Lochovsky},
  month = dec}

@book{Lock15a,
  title={Modern PHP: New features and good practices},
  author={Lockhart, Josh},
  year={2015},
  publisher={O'Reilly Media, Inc}
}

@inproceedings{Loeh92a,
  author = {Klaus-Peter L{\"o}hr},
  title = {Concurrency Annotations},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {327--340},
  year = {1992},
  month = oct}

@mastersthesis{Loer97a,
  author = {Georg L{\"o}rincze},
  title = {Modellierung, Analyse und Simulation von Regeln in der aktiven Schicht {ALFRED}},
  year = {1997},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Loer97a.pdf http://scg.unibe.ch/archive/masters/Loer97a.ps.gz},
  abstract = {In vielen Unternehmen werden Datenbanksysteme
eingesetzt, um wichtige Unternehmensdaten zu
speichern und zu verwalten. Das Bed{\"u}rfnis,
Ablaufe automatisieren zu k{\"o}nnen, hat dazu
gef{\"u}hrt, dass Datenbanksysteme, die nur zur
Speicherung von Daten eingesetzt werden, nicht mehr
den Anforderungen gen{\"u}gen. Aus diesem Grund
werden seit einigen Jahren auf dem Gebiet der Daten-
banken Losungen gesucht, um den neuen Anforderungen
gerecht zu werden. Eine m{\"o}gliche Losung bieten
aktive Datenbanksysteme. Diese besitzen die
Eigenschaft, dass sie auf bestimmte Situationen
automatisch reagieren k{\"o}nnen. Ein solches
Verhalten wird als aktiv bezeichnet und kann mit
Hilfe von Regeln beschrieben werden. In diesen
werden die Situationen spezi ziert, die erkannt
werden mussen, und Aktionen festgelegt, die beim
Eintreten dieser Situationen ausgef{\"u}hrt werden.
In diesem Zusammenhang ergeben sich neue Aufgaben,
die eine Losung erfordern. So muss festgelegt
werden, wie aktives Verhalten mit Hilfe von Regeln
realisiert werden kann. Dazu muss spezi ziert
werden, wie Regeln in einem ADBS modelliert und
verarbeitet werden k{\"o}nnen. Diese Diplomarbeit
befasst sich mit der Modellierung, der Analyse sowie
der Simulation von Regeln in der aktiven Schicht
ALFRED (Active Layer For Rule Execution in Database
Systems). Diese Schicht kann auf prinzipiell
beliebige konventionelle (passive) Datenbanksysteme
aufgesetzt werden und erweitert diese um
Funktionalit{\"a}t en, mit denen aktives Verhalten
realisierbar ist. In dieser Schicht werden Regeln
mit all ihren Komponenten gesamthaft in einem
einzigen Modell dargestellt.},
  month = apr,
  type = {Diploma thesis}}

@inproceedings{Logo10a,
  author = {Logozzo, Francesco and Venter, Herman},
  title = {RATA: R{API}d Atomic Type Analysis by Abstract Interpretation. Application to Javascript Optimization.},
  booktitle = {European Conference on Theory and Practice of Software, International Conference on Compiler Construction (ETAPS'10/CC'10)},
  year = {2010},
  doi = {10.1007/978-3-642-11970-5_5},
  location = {Paphos, Cyprus}}

@article{Logr88a,
  author = {L. Logrippo and A. Obaid and J.P. Briand and M.C. Fehri},
  title = {An Interpreter for {LOTOS}, {A} Specification Language for Distributed Systems},
  journal = {Software --- Practice and Experience},
  volume = {18},
  pages = {365--385},
  year = {1988},
  month = apr,
  number = {4}}

@article{Lohr93a,
  author = {Klaus-Peter Lohr},
  title = {Concurrency Annotations for Reusable Software},
  journal = {Communications of the ACM},
  volume = {36},
  pages = {81--89},
  year = {1993},
  month = sep,
  number = {9}}

@inproceedings{Lohr94a,
  author = {Klaus-Peter L{\"o}hr},
  title = {Towards an Object-Oriented Design Methodoly for Concurrent Systems},
  booktitle = {Proceedings of TOOLS '94},
  pages = {???},
  publisher = {???},
  year = {1994}}

@article{Lohr94b,
  author = {Klaus-Peter L{\"o}hr and Irina Piens and Thomas Wolff},
  title = {Verteilungstransparenz bei der objektorientierten Entwicklung verteilter Appplikationen},
  journal = {OBJECT spektrum},
  volume = {??},
  pages = {8--14},
  year = {1994},
  month = may,
  number = {??}}

@techreport{Lohr95a,
  author = {Klaus-Peter L{\"o}hr},
  title = {Verteilungstransparenz bei der objektorientierten Spezifikation verteilter Appplikationen},
  year = {1995},
  institution = {Universit{\"a}t Berlin},
  month = jan,
  number = {95-X},
  type = {Report B}}

@inproceedings{Lois17a,
  author={Loise, Thomas and Devroey, Xavier and Perrouin, Gilles and Papadakis, Mike and Heymans, Patrick},
  booktitle={2017 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
  title={Towards Security-Aware Mutation Testing},
  year={2017},
  volume={},
  number={},
  pages={97-102},
  keywords={XML;Testing;Context;Computer bugs;Encryption;Standards;Mutation analysis;Mutation operators;Security Testing;PIT;FindBugs},
  doi={10.1109/ICSTW.2017.24}}

@article{Lok01a,
  author = {Lok, Simon and Feiner, Steven},
  title = {A survey of automated layout techniques for information presentations},
  journal = {Proceedings of SmartGraphics},
  volume = {2001},
  pages = {61--68},
  year = {2001}}

@incollection{Long01a,
  author = {Andy Longshaw},
  title = {Choosing Between {COM+}, {EJB}, and {CCM}},
  booktitle = {Component-Based Software Engeneering},
  pages = {621--640},
  publisher = {Addison Wesley},
  year = {2001}}

@manual{Look96a,
  author = {Objective Software Technology},
  title = {Manual of Look},
  year = {1996},
  url = {http://www.objectivesoft.com},
  address = {1 Michaelson Square, Livingston, Scotland},
  organization = {Objective Software Technology}}

@inproceedings{Loom87a,
  author = {M.E.S. Loomis and Ashwin V. Shah and James E. Rumbaugh},
  title = {An Object Modelling Technique for Conceptual Design},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {192--202},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Lope01a,
  author = {Roberto E. Lopez-Herrejon and Don Batory},
  title = {A Standard Problem for Evaluating Product-Line Methodologies},
  booktitle = {Proceedings GCSE '2001},
  volume = 2186,
  publisher = {Springer-Verlag},
  year = {2001},
  editor = {Jan Bosch},
  series = {LNCS}}

@inproceedings{Lope05a,
  author = {Roberto E. Lopez-Herrejon and Don Batory and William Cook},
  title = {Evaluating Support for Features in Advanced Modularization Technologies},
  booktitle = {Proceedings ECOOP 2005},
  year = {2005}}

@inproceedings{Lope05b,
  author = {Ant{\'o}nia Lopes and Jos{\'e} Luiz Fiadeiro},
  title = {Context-Awareness in Software Architectures},
  booktitle = {Proceeding of the 2nd European Workshop on Software Architecture ({EWSA})},
  volume = {3527},
  pages = {146--161},
  publisher = {Springer},
  year = {2005},
  doi = {10.1007/11494713_10},
  isbn = {3-540-26275-X},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Lope05c,
  author = {Cristina Videira Lopes and Sushil Krishna Bajracharya},
  title = {An analysis of modularity in aspect oriented design},
  booktitle = {AOSD '05: Proceedings of the 4th international conference on Aspect-oriented software development},
  pages = {15--26},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1052898.1052900},
  address = {New York, NY, USA},
  isbn = {1-59593-042-6},
  location = {Chicago, Illinois}}

@inproceedings{Lope06a,
  author = {Roberto Lopez-Herrejon and Don Batory and Christian Lengauer},
  title = {A disciplined approach to aspect composition},
  booktitle = {PEPM '06: Proceedings of the 2006 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation},
  pages = {68--77},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1111542.1111554},
  address = {New York, NY, USA},
  isbn = {1-59593-196-1},
  location = {Charleston, South Carolina}}

@article{Lope18a,
  author = {Orlenys Lopez-Pintado and Luciano Garcia-Banuelos and Marlon Dumas and Ingo Weber and Alex Ponomarev},
  title = {CATERPILLAR: A Business Process Execution Engine on the Ethereum Blockchain},
  journal = {Software: Practice and Experience},
  pages = {1 -- 45},
  year = {2018},
  keywords = {Blockchain bpmn execution}}

@inproceedings{Lope94a,
  author = {Cristina Videira Lopes and Karl J. Lieberherr},
  title = {Abstracting Process-to-Function Relations in Concurrent Object-Oriented Applications},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {81--99},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Lope94b,
  author = {Gus Lopez and Bj\/orn Freeman-Benson and Alan Borning},
  title = {Constraints and Object Identity},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {260--279},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Lope96a,
  author = {Cristina Videira Lopes},
  title = {Adaptive Parameter Passing},
  booktitle = {Proceedings of ISOTAS '96, LNCS 1049},
  pages = {118--136},
  year = {1996},
  month = mar,
  organization = {JSSST-JAIST}}

@techreport{Lope97a,
  author = {C.V.Lopez and Gregor Kiczales},
  title = {"{D}: {A} Language Framework for Distributed Programming"},
  year = {1997},
  institution = {Xerox Parc.},
  number = {SPL97-010P9710047},
  type = {Tech. Rep. TR}}

@misc{Lope97b,
  author = {Cristina Isabel Videira Lopes},
  title = {D: A LANGUAGE FRAMEWORK FOR DISTRIBUTED PROGRAMMING},
  year = {1997}}

@inproceedings{Lore03a,
  author = {David H. Lorenz and John Vlissides},
  title = {Pluggable reflection: decoupling meta-interface and implementation},
  booktitle = {ICSE '03: Proceedings of the 25th International Conference on Software Engineering},
  pages = {3--13},
  publisher = {IEEE Computer Society},
  year = {2003},
  address = {Washington, DC, USA},
  isbn = {0-7695-1877-X},
  location = {Portland, Oregon}}

@inproceedings{Lore07a,
  author = {Bettini, Lorenzo and Capecchi, Sara and Venneri, Betti},
  title = {Featherweight Java with Multi-Methods},
  booktitle = {Proc. of PPPJ, Principles and Practice of Programming in Java},
  volume = {272},
  pages = {83-92},
  publisher = {ACM Press},
  year = {2007},
  url = {http://rap.dsi.unifi.it/~bettini/bibliography/files/multifj.pdf}}

@book{Lore94a,
  author = {Mark Lorenz and Jeff Kidd},
  title = {Object-Oriented Software Metrics: {A} Practical Guide},
  publisher = {Prentice-Hall},
  year = {1994},
  isbn = {13-179292-X}}

@book{Lore95a,
  author = {Mark Lorenz},
  title = {R{API}d Software Development with Smalltalk},
  publisher = {SIGS Books},
  year = {1995}}

@inproceedings{Lore97a,
  author = {David H. Lorenz},
  title = {Tiling design patterns\ a case study using the interpreter pattern},
  booktitle = {OOPSLA '97: Proceedings of the 12th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages = {206--217},
  publisher = {ACM Press},
  year = {1997},
  doi = {10.1145/263698.263737},
  address = {New York, NY, USA},
  isbn = {0-89791-908-4},
  location = {Atlanta, Georgia, United States}}

@incollection{Lorh77a,
  author = {Bernard Lorho},
  title = {Semantic Attributes Processing in the System {DELTA}},
  booktitle = {Methods of Algorithmic Language Implementation},
  volume = {47},
  pages = {21--40},
  publisher = {Springer-Verlag},
  year = {1977},
  editor = {A. Ershov and C.H.A. Koster},
  series = {LNCS}}

@inproceedings{Lori07a,
  author = {Loriant, Nicolas and Menaud, Jean-Marc},
  title = {Generalized Dynamic Probes for the Linux Kernel and Applications with Arachne},
  booktitle = {2007 IADIS Conference on Applied Computing},
  year = {2007},
  url = {http://hal.inria.fr/inria-00441367},
  month = feb}

@inproceedings{Lorm06a,
  author = {M. Lormans and van Deursen, A.},
  title = {Can LSI help Reconstructing Requirements Traceability in Design and Test?},
  booktitle = {Proceedings of the 10th European Conference on Software Maintenance and Reengineering (CSMR'06)},
  publisher = {IEEE Computer Society},
  year = {2006}}

@inproceedings{Lort94a,
  author = {Victor B. Lortz and Kang G. Shin},
  title = {Combining Contracts and Exemplar-Based Programming for Class Hiding and Customization},
  booktitle = {Proceedings of OOPSLA '94},
  volume = {29},
  pages = {453--467},
  year = {1994},
  address = {Portland},
  editor = {ACM},
  month = oct,
  number = {10},
  organization = {ACM},
  series = {ACM Sigplan Notices}}

@mastersthesis{Lose98a,
  author = {Roland Loser},
  title = {Objekt-orientierter Compilerentwurf},
  year = {1998},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Lose98a.pdf http://scg.unibe.ch/archive/masters/Lose98a.ps.gz},
  abstract = {Bei Entwicklung von Compilerern und Interpretern
f{\"u}r Programmiersprachen kommen h{\"a}ufig
Werkzeugen wie lex und yacc zur Anwendung. Wenn
gleichzeitig objekt-orientierte Methoden in der
Entwicklung zum Einsatz kommen, kann dies zu
Paradigmen-Konflikte f{\"u}hren. In dieser Arbeit
wird ein objekt-orientierter Compilerentwurf in C++
vorgestellt, welcher auf lex und yacc verzichtet,
und den objekt-orientierten Ansatz auf alle
Komponenten eines Compilers anwendet.},
  month = jan,
  type = {Diploma thesis}}

@book{Loud93a,
  author = {Kenneth C. Louden},
  title = {Programming Languages: Principles and Practice},
  publisher = {PWS Publishing (Boston)},
  year = {1993},
  isbn = {0-534-93277-0}}

@book{Louk86a,
  title = {Unix in a Nutshell System},
  publisher = {O'Reilly \& Associates, Inc},
  year = {1986},
  edition = {V},
  editor = {Mike Loukides},
  isbn = {1-56592-001-5}}

@article{Loun98,
  author = {H. Lounis and H. A. Sahraoui and W. L. Melo},
  title = {Vers un mod\`ele de pr\'ediction de la qualit\'e du logiciel pour les syst\`emes \`a objets},
  journal = {L'Objet, Num\'ero sp\'ecial M\'etrologie et Objets},
  volume = 4,
  year = {1998},
  month = dec,
  number = 4}

@article{Lour08a,
  author = {Louridas, Panagiotis and Spinellis, Diomidis and Vlachos, Vasileios},
  title = {Power Laws in Software},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {18},
  pages = {2:1--2:26},
  year = {2008},
  date-added = {2014-07-08 13:58:36 +0000},
  date-modified = {2014-07-08 13:59:11 +0000},
  number = {1}}

@book{Love93a,
  author = {Tom Love},
  title = {Object Lessons --- Lessons Learned in Object-Oriented Development Projects},
  publisher = {SIGS Books},
  year = {1993},
  address = {New York},
  isbn = {0-9627477-3-4}}

@inproceedings{Low88a,
  author = {Colin Low},
  title = {A Shared, Persistent Object Store},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {390--410},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Lowe01a,
  author = {Welf L{\"o}we and Andreas Ludwig and Andreas Schwind},
  title = {Understanding Software -- Static and Dynamic Aspects},
  booktitle = {17th International Conference on Advanced Science and Technology},
  pages = {52--57},
  year = {2001}}

@inproceedings{Lowe02a,
  author = {Welf L{\"o}we and Morgan Ericsson and Jonas Lundberg and Thomas Panas},
  title = {Software Comprehension - Integrating Program Analysis and Software Visualization},
  booktitle = {Software Engineering Research and Practice in Sweden (SERPS)},
  year = {2002},
  address = {Karlskrona, Sweden}}

@inproceedings{Lowe03a,
  author = {Welf L{\"o}we and Jonas Lundberg},
  title = {A Low-Level Analysis Library for Architecture Recovery},
  booktitle = {ETAPS SC'03 Workshop on Software Composition},
  year = {2003}}

@inproceedings{Lowe05a,
  author = {W. Lowe and T. Panas},
  title = {R{API}d Construction of Software Comprehension Tools},
  booktitle = {International Journal of Software Engineering and Knowledge Engineering},
  year = {2005}}

@article{Lowr92a,
  author = {Andy Lowry},
  title = {The Hermes Language in Outline Form},
  journal = {ACM SIGPLAN Notices},
  volume = {27},
  pages = {51--70},
  year = {1992},
  month = aug,
  number = {8}}

@inproceedings{Lu05a,
  author = {Shan Lu and Zhenmin Li and Feng Qin and Lin Tan and Pin Zhou and Yuanyuan Zhou},
  title = {Bugbench: Benchmarks for evaluating bug detection tools},
  booktitle = {Workshop on the Evaluation of Software Defect Detection Tools},
  year = {2005}}

@inproceedings{Lu09a,
  author = {Lu, Caroline and Fabre, Jean-Charles and Killijian, Marc-Olivier},
  title = {An approach for improving Fault-Tolerance in Automotive Modular Embedded Software},
  booktitle = {RTNS'09: Proceedings of the 17th International Conference on Real-Time and Network Systems},
  pages = {132--147},
  year = {2009},
  address = {Paris, France},
  collaboration = {Design Optimization},
  editor = {Laurent George and Maryline Chetto and Mikael Sjodin}}

@inproceedings{Lu19a,
  author = {Lu, Nhiem and Glatz, Gert and Peuser, Dennis},
  title = {Moving mountains practical approaches for moving monolithic applications to microservices},
  booktitle = {International Conference on Microservices (Microservices 2019)},
  year = {2019}}

@unpublished{Lu92a,
  author = {Gang Lu and Martin Ader},
  title = {First Experience of WoorRKS*},
  year = {1992},
  note = {Bull Worldwide Information Systems},
  type = {Draft}}

@inproceedings{Lubk91a,
  author = {Lubkin, David},
  title = {Heterogeneous configuration management with DSEE},
  booktitle = {Proceedings of the 3rd International Workshop on Software Configuration Management},
  pages = {153--160},
  publisher = {ACM},
  year = {1991},
  doi = {/10.1145/111062.111082},
  isbn = {0-897914-429-5},
  location = {Trondheim, Norway}}

@incollection{Luca78a,
  author = {P. Lucas},
  title = {On the Formalization of Programming Languages: Early History and Main Approaches},
  booktitle = {The Vienna Development Method: The Meta-Language},
  volume = {61},
  pages = {1--23},
  publisher = {Springer-Verlag},
  year = {1978},
  address = {Heidelberg},
  editor = {D. Bj\/orner and C.B. Jones},
  series = {LNCS}}

@inproceedings{Luca88a,
  author = {John M. Lucassen and David K. Gifford},
  title = {Polymorphic Effect Systems},
  booktitle = {Proceedings POPL '88},
  pages = {47--57},
  year = {1988},
  misc = {Jan 13-15},
  address = {San Diego},
  month = jan}

@techreport{Luca94a,
  author = {Carine Lucas and Patrick Steyaert},
  title = {Modular Inheritance of Objets Through Mixin-Methods},
  year = {1994},
  institution = {Vrije Universiteit Brussel, Brussels, Belgium},
  note = {vub-prog-tr-94-07},
  number = {07}}

@phdthesis{Luca97a,
  author = {Carine Lucas},
  title = {Documenting Reuse and Evolution with Reuse Contracts},
  year = {1997},
  school = {Programming Technology Lab},
  url = {ftp://progftp.vub.ac.be/dissertation/1997/vub-prog-phd-97-01/},
  address = {Vrije Universiteit Brussel, Brussels, Belgium}}

@inproceedings{Lucc02b,
  author = {Giuseppe A. {Di Lucca} and Massimiliano {Di Penta} and Sara Gradara},
  title = {An Approach to Classify Software Maintenance Requests},
  booktitle = {Processings of 18th IEEE International Conference on Software Maintenance ({ICSM} 2002)},
  pages = {93--102},
  year = {2002}}

@inproceedings{Lucc87a,
  author = {Steven E. Lucco},
  title = {Parallel Programming in a Virtual Object Space},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {26--34},
  year = {1987},
  month = dec}

@inproceedings{Lucc97a,
  author = {Giuseppe A. Di Lucca and Anna Rita Fasolino and Patrizia Guerra and Silvia Petruzzelli},
  title = {Migrating Legacy Systems towards Object-Oriented Platforms},
  booktitle = {{ICSM} '97: Proceedings of the International Conference on Software Maintenance},
  pages = {122--129},
  publisher = {IEEE Computer Society},
  year = {1997},
  address = {Washington, DC, USA},
  isbn = {0-8186-8013-X}}

@article{Lucca04,
  author = {Lucca, Giuseppe Antonio Di and Fasolino, Anna Rita and Tramontana, Porfirio},
  title = {{WARE}: a tool for the reverse engineering of Web applications},
  journal = {J. Softw. Maint. Evol.: Res. Pract.},
  volume = {16},
  pages = {71--101},
  year = {2004},
  url = {https://pdfs.semanticscholar.org/cb4c/e4e83b344bcda91bd0a3f3f5bb31fbd8088c.pdf},
  doi = {0.1002/smr.281},
  abstract = {The r{API}d, progressive diffusion of Web applications in several productive contexts of our modern society is laying the foundations of a renewed scenario of software development, where one of the emerging problems is that of defining and validating cost-effective approaches for maintaining and evolving these software
systems.
Due to several factors, the solution to this problem is not straightforward. The heterogeneous and dynamic nature of components making up a Web application, the lack of effective programming mechanisms for implementing basic software engineering principles in it, and undisciplined development
processes induced by the high pressure of a very short time-to-market, make Web application maintenance a challenging problem. A relevant issue consists of reusing the methodological and technological experience in the sector of traditional software maintenance, and exploring the opportunity of using reverse engineering to support effective Web application maintenance.
This paper presents an approach for defining reverse engineering processes involving Web applications. The approach has been used to implement a process, including reverse engineering methods and a supporting software tool, that helps to understand existing undocumented Web applications to be maintained or evolved, through the reconstruction of {UML} diagrams. The proposed reverse engineering process has been submitted to a validation experiment, the results of which showed the usability of the process for reverse engineering Web applications with different characteristics, and highlighted possible areas for improvement of its effectiveness. The experiment and the lessons learned from it are presented in the paper.},
  date = {2004},
  urldate = {2018-08-07}}

@inproceedings{Luci04a,
  author = {Andrea {De Lucia} and Fausto Fasano and Rocco Oliveto and Genoveffa Tortora},
  title = {Enhancing an Artefact Management System with Traceability Recovery Features},
  booktitle = {Proceedings of 20th IEEE International Conference on Software Maintainance ({ICSM} 2004)},
  pages = {306--315},
  year = {2004}}

@article{Luck95a,
  author = {David C. Luckham and John L. Kenney and Larry M. Augustin and James Vera and Doug Bryan and Walter Mann},
  title = {Specification and Analysis of System Architecture Using {R{API}de}},
  journal = {IEEE Transactions on Software Engineering},
  volume = {21},
  pages = {336--355},
  year = {1995},
  number = {4}}

@article{Luck95b,
  author = {David C. Luckham and James Vera},
  title = {An Event-Based Architecture Definition Language},
  journal = {IEEE Transactions on Software Engineering},
  volume = {21},
  pages = {717--734},
  year = {1995},
  doi = {10.1109/32.464548},
  number = {9}}

@inproceedings{Luck96a,
  author = {David C. Luckham},
  title = {R{API}de: A Language and Toolset for Simulation of Distributed Systems by Partial Ordering of Events},
  booktitle = {DIMACS Partial Order Methods Workshop IV},
  publisher = {Princeton University},
  year = {1996},
  month = jul}

@article{Lude03,
  author = {Ludewig, Jochen},
  title = {Models in software engineering--an introduction},
  journal = {Software and Systems Modeling},
  volume = {2},
  pages = {5--14},
  publisher = {Springer},
  year = {2003},
  number = {1}}

@article{Luhn58a,
  author = {H. P. Luhn},
  title = {The automatic creation of literature abstracts},
  journal = {IBM Journal of Research and Development},
  volume = {2},
  pages = {159--165},
  year = {1958}}

@incollection{Lump00a,
  author = {Markus Lumpe and Franz Achermann and Oscar Nierstrasz},
  title = {{A Formal Language for Composition}},
  booktitle = {Foundations of Component Based Systems},
  pages = {69--90},
  publisher = {Cambridge University Press},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/Lump00aFormalLanguage.pdf},
  abstract = {A composition language based on a formal semantic
foundation will facilitate precise specification of
glue abstractions and compositions, and will support
reasoning about their behaviour. The semantic
foundation, however, must address a set of
requirements like encapsulation, objects as
processes, components as abstractions, plug
compatibility, a formal object model, and
scalability. In this work, we propose the
piL-calculus, an extension of the pi-calculus, as a
formal foundation for software composition, define a
language in terms of it, and illustrate how this
language can be used to plug components together.},
  editor = {Gary Leavens and Murali Sitaraman}}

@unpublished{Lump00b,
  author = {Markus Lumpe},
  title = {Forms --- A Flexible Notion for Composition},
  year = {2000},
  abstract = {We have been working on the definition of a general
purpose composition language based on a variant of
the Pi-calculus as formal semantics. More precisely,
we have developed the PiL-calculus, a process
calculus in which agents communicate by passing
immutable extensible records, called forms, rather
than tuples. Using this approach, we are able to
model compositional abstractions in a more natural
and robust way. In this position paper, we will
extend the notion of forms and will show that forms
may serve as a unifying concept in
component-oriented software development.},
  month = mar,
  note = {ECOOP 2000 Workshop on Component-Oriented Programming}}

@inproceedings{Lump05a,
  author = {Lumpe, Markus and Schneider, Jean-Guy},
  title = {Classboxes --- An Experiment in Modeling Compositional Abstractions using Explicit Contexts},
  booktitle = {Proceedings of ESEC '05 Workshop on Specification and Verification of Component-Based Systems (SAVCBS '05)},
  pages = {47--54},
  year = {2005},
  url = {http://www.it.swin.edu.au/personal/jschneider/Pub/savcbs05.pdf},
  abstract = {The development of flexible and reusable
abstractions for software composition has suffered
from the inherent problem that reusability and
extensibility are hampered by the dependence on
position and arity of parameters. In order to
address this issue, we have defined lambdaF, a
substitution-free variant of the lambdaF-calculus
where names are replaced with first-class namespaces
and parameter passing is modeled using explicit
contexts. We have used lambdaF to define a model for
classboxes, a dynamically typed module system for
object-oriented languages that provides support for
controlling both the visibility and composition of
class extensions. This model not only illustrates
the expressive power and flexibility of lambdaF as a
suitable formal foundation for compositional
abstractions, but also assists us in validating and
extending the concept of classboxes in a
language-neutral way.},
  address = {Lisbon, Portugal},
  editor = {Barnett, Mike and Edwards, Steve and Giannakopoulou, Dimitra and Leavens, Gary T. and Sharygina, Natasha},
  month = sep}

@article{Lump05b,
  author = {Markus Lumpe and Jean-Guy Schneider},
  title = {A Form-based Metamodel for Software Composition},
  journal = {Journal of Science of Computer Programming},
  volume = {56},
  pages = {59--78},
  publisher = {Elsevier},
  year = {2005},
  url = {http://www.it.swin.edu.au/personal/jschneider/Pub/jscp04.pdf},
  doi = {10.1016/j.scico.2004.11.005},
  abstract = {In recent years considerable progress has been made
to facilitate the specification and implementation
of software components. However, it is far less
clear what kind of language support is needed to
enable a flexible and reliable software composition
approach. Object-oriented programming languages seem
to already offer some reasonable support for
component-based programming (e.g., encapsulation of
state and behavior, inheritance, late binding).
Unfortunately, these languages typically provide
only a fixed and restricted set of mechanisms for
constructing and composing compositional
abstractions. In this article, we will present a
generic meta-level framework for modeling both
object- and component-oriented programming
abstractions. In this framework, various features,
which are typically merged in traditional
object-oriented programming languages, are all
replaced by a single concept: the composition of
forms. Forms are first-class, immutable, extensible
records that allow for the specification of
compositional abstractions in a language-neutral and
robust way. Thus, using the meta-level framework, we
can define a compositional model that provides the
means both to bridge between different object models
and to incorporate existing software artifacts into
a unified composition system.},
  month = apr,
  number = {2}}

@inproceedings{Lump06a,
  author = {Markus Lumpe and Jean-Guy Schneider},
  title = {{On the Integration of Classboxes into C{\#}}},
  booktitle = {Proceedings of the 5th International Symposium on Software Composition (SC 2006)},
  pages = {307--322},
  publisher = {Springer},
  year = {2006},
  url = {http://www.it.swin.edu.au/personal/jschneider/Pub/sc06.pdf},
  address = {Vienna, Austria},
  editor = {L{\"o}we, Welf and S{\"u}dholt, Mario},
  month = mar}

@inproceedings{Lump96a,
  author = {Markus Lumpe and Jean-Guy Schneider and Oscar Nierstrasz},
  title = {Using Metaobjects to Model Concurrent Objects with {PICT}},
  booktitle = {Proceedings of Languages et Mod\`eles \`a Objects},
  pages = {1--12},
  year = {1996},
  url = {http://scg.unibe.ch/archive/papers/Lump96aMetaobjectsWithPict.pdf},
  abstract = {We seek to support the development of open,
distributed applications from plug-compatible
software abstractions. In order to rigorously
specify these abstractions, we are elaborating a
formal object model for software composition in
which objects and related software abstractions are
viewed as patterns of communicating processes. The
semantic foundation is Milner's pi calculus, and the
starting point for our object model is Pierce and
Turner's encoding of objects as processes in the
experimental Pict programming language. Our
experience shows that common object-oriented
programming abstractions such as dynamic binding,
inheritance, genericity, and class variables are
most easily modelled when metaobjects are explicitly
reified as first class entities (i.e., processes).
Furthermore, various roles that are typically merged
(or confused) in object-oriented languages such as
classes, implementations, and metaobjects, each show
up as strongly-typed, first class processes},
  address = {Leysin},
  month = oct}

@inproceedings{Lump97a,
  author = {Markus Lumpe and Jean-Guy Schneider and Oscar Nierstrasz and Franz Achermann},
  title = {Towards a formal composition language},
  booktitle = {Proceedings of ESEC '97 Workshop on Foundations of Component-Based Systems},
  pages = {178--187},
  year = {1997},
  url = {http://scg.unibe.ch/archive/papers/Lump97aAFormalCompLang.pdf},
  abstract = {When do we call a software development environment a
composition environment? A composition environment
must be built of three parts: i) a reusable
component library, ii) a component framework
determining the software architecture, and iii) an
open and flexible composition language. Most of the
effort in component technology was spent on the
first two parts. Now it is crucial to address the
last part and find an appropriate model to glue
existing components together. In this work, we
investigate existing component and glue models,
define a set of requirements a composition language
must fulfill, and report our first results using a
prototype implementation of a general-purpose
composition language based on the Pi-calculus.},
  address = {Zurich},
  editor = {Gary T. Leavens and Murali Sitaraman},
  month = sep}

@phdthesis{Lump99a,
  author = {Markus Lumpe},
  title = {A Pi-Calculus Based Approach to Software Composition},
  year = {1999},
  school = {University of Bern, Institute of Computer Science and Applied Mathematics},
  url = {http://scg.unibe.ch/archive/phd/lumpe-phd.pdf http://scg.unibe.ch/archive/phd/lumpe-phd.ps.gz},
  abstract = {Present-day applications are increasingly required
to be flexible, or "open" in a variety of ways. By
flexibility we mean that these applications have to
be portable (to different hardware and software
platforms), interoperable (with other applications),
extendible (to new functionality), configurable (to
individual users' or clients' needs), and
maintainable. These kinds of flexibility are
currently best supported by component-oriented
software technology: components, by means of
abstraction, support portability, interoperability,
and maintainability. Extendibility and
configurability are supported by different forms of
binding technology, or "glue": application parts, or
even whole applications can be created by composing
software components; applications stay flexible by
allowing components to be replaced or reconfigured,
possibly at runtime. This thesis develops a formal
language for software composition that is based on
the Pi-calculus. More precisely, we present the
L-calculus, a variant of the Pi-calculus in which
agents communicate by passing extensible, labeled
records, or so-called "forms", rather than tuples.
This approach makes it much easier to model
compositional abstractions than it is possible in
the plain Pi-calculus, since the contents of
communication are now independent of position,
agents are more naturally polymorphic since
communication forms can be easily extended, and
environmental arguments can be passed implicitly.
The L-calculus is developed in three stages: (i) we
analyse whether the Pi-calculus is suitable to model
composition abstractions, (ii) driven by the
insights we got using the Pi-calculus, we de ne a
new calculus that has better support for software
composition (e.g., provides support for inherently
extensible software construction), and (iii), we de
ne a first-order type system with subtype
polymorphism and sound record concatenation that
allows us to check statically an agent system in
order to prevent the occurrences of run-time errors.
We conclude with defining a first Java-based
composition system and Piccola, a prototype
composition language based on the L-calculus. The
composition system provides support for integrating
arbitrary compositional abstractions using both
Piccola and standard bridging technologies like RMI
and CORBA. Furthermore, the composition systems
maintains a composition library that provides
components in a uniform way.},
  month = jan,
  type = {{Ph.D}. Thesis}}

@misc{Lump99c,
  author = {Markus Lumpe},
  title = {Automatic Type Reconstruction for a Process Calculus with Records},
  year = {1999},
  note = {Working Paper}}

@article{Luna89a,
  author = {C. Pii Lunau},
  title = {Separation of Hierarchies in Duo-Talk},
  journal = {Journal of Object-Oriented Programming},
  volume = {2},
  pages = {20--25},
  year = {1989},
  month = jul,
  number = {2}}

@article{Lund03a,
  author = {Jonas Lundberg and Welf L{\"o}we},
  title = {Architecture Recovery by Semi-Automatic Component Identification},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {82},
  year = {2003},
  number = {5}}

@article{Lung00a,
  author = {Lung, Chung-Horng and Kalaichelvan, Kalai},
  title = {An approach to quantitative software architecture sensitivity analysis},
  journal = {International Journal of Software Engineering and Knowledge Engineering},
  volume = {10},
  pages = {97--114},
  publisher = {World Scientific},
  year = {2000},
  number = {01}}

@mastersthesis{Lung04a,
  author = {Mircea Lungu},
  title = {Conformity Strategies: Measures Of Software Design Rules},
  year = {2004},
  school = {Politehnica University of Timisoara},
  url = {http://scg.unibe.ch/archive/external/Lung04a.pdf},
  abstract = {Reengineering is a subfield of software engineering
which is concerned with maintaining and improving
existing software systems. Reengineering is also a
process, the process by which such systems get to be
understood, improved and extended. Part of this
process is another process, the so called reverse
engineering. In reverse engineering man tries to
understand the existing software system. There are
different approaches to this task. Several of these
approaches are based on metrics. One such approach
is the detection strategies, a mechanism which makes
use of compositions of metrics. The detection
strategies offer a means for detecting design flaws
in software artifacts by filtering a given set
according to its property of respecting a certain
design rule. The detection strategies have proved to
be useful in detecting flaws in software systems,
and this is an important step in the process of
reverse engineering. However their mechanism of
filtering does not make any difference between the
different degrees of conformity to the rule by which
the filtering is made. To address this, we introduce
in this work the conformity strategies, a mechanism
who's main purpose is to compute the degree of
conformity of the software artifacts to specific
design rules. As an application of the conformity
expressions we develop a visualization technique
called the Magnet View. It visually presents
information about the software artifacts by letting
them interact with their properties after laws
derived from the equivalent physical laws of
magnetism.},
  month = sep}

@inproceedings{Lung05a,
  author = {Mircea Lungu and Adrian Kuhn and Tudor G\^irba and Michele Lanza},
  title = {Interactive Exploration of Semantic Clusters},
  booktitle = {3rd International Workshop on Visualizing Software for Understanding and Analysis (VISSOFT 2005)},
  pages = {95--100},
  year = {2005},
  url = {http://scg.unibe.ch/archive/papers/Lung05aExploreSemanticClusters.pdf},
  doi = {10.1109/VISSOF.2005.1684313},
  abstract = {Using visualization and exploration tools can be of
great use for the understanding of a software system
when only its source code is available. However,
understanding a large software system by visualizing
only its lower level artifacts (e.g., classes,
methods) and the relations between them does not
scale for industrial-size systems. To address the
scalability issue, higher level hierarchical
abstractions (e.g., package structure, clustered
decompositions of the system) should be used
together with relations between them that are
usually aggregated from the lower level relations.
In this paper, we present the concepts behind
Softwarenaut, a tool aimed at exploring any kind of
hierarchical decompositions of a system, and then we
look at a specific exploration of a system. In the
experiment, the hierarchical decomposition of the
system is the result of applying a semantical
clustering to group classes that use similar terms.}}

@inproceedings{Lung06a,
  author = {Mircea Lungu and Michele Lanza and Tudor G\^irba},
  title = {Package Patterns for Visual Architecture Recovery},
  booktitle = {European {C}onference on {S}oftware {M}aintenance and {R}eengineering ({CSMR})},
  pages = {185--196},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Lung06aPackagePatterns.pdf},
  doi = {10.1109/CSMR.2006.39},
  abstract = {Recovering the architecture is the first step
towards reengineering a software system. Many
reverse engineering tools use top-down exploration
as a way of providing a visual and interactive
process for architecture recovery. During the
exploration process, the user navigates through
various views on the system by choosing from several
exploration operations. Although some sequences of
these operations lead to views which, from the
architectural point of view, are mode relevant than
others, current tools do not provide a way of
predicting which exploration paths are worth taking
and which are not. In this article we propose a set
of package patterns which are used for augmenting
the exploration process with in formation about the
worthiness of the various exploration paths. The
patterns are defined based on the internal package
structure and on the relationships between the
package and the other packages in the system. To
validate our approach, we verify the relevance of
the proposed patterns for real-world systems by
analyzing their frequency of occurrence in six
open-source software projects.},
  address = {Los Alamitos CA},
  medium = {2}}

@inproceedings{Lung06b,
  author = {Mircea Lungu and Michele Lanza},
  title = {Softwarenaut: Exploring Hierarchical System Decompositions},
  booktitle = {European {C}onference on {S}oftware {M}aintenance and {R}eengineering ({CSMR})},
  pages = {351--354},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  doi = {10.1109/CSMR.2006.52},
  address = {Los Alamitos CA}}

@inproceedings{Lung06c,
  author = {Mircea Lungu and Michele Lanza},
  title = {Softwarenaut: Cutting Edge Visualization},
  booktitle = {Proceedings of Softvis 2006 (3rd International ACM Symposium on Software Visualization)},
  pages = {179--180},
  publisher = {ACM Press},
  year = {2006}}

@inproceedings{Lung07a,
  author = {Mircea Lungu and Michele Lanza},
  title = {Exploring Inter-Module Relationships in Evolving Software Systems},
  booktitle = {European {C}onference on {S}oftware {M}aintenance and {R}eengineering ({CSMR})},
  pages = {91--100},
  publisher = {IEEE Computer Society Press},
  year = {2007},
  address = {Los Alamitos CA}}

@inproceedings{Lung07b,
  author = {Mircea Lungu and Tudor G\^irba},
  title = {A Small Observatory for Super-Repositories},
  booktitle = {Proceedings of International Workshop on Principles of Software Evolution (IWPSE 2007)},
  pages = {106--109},
  publisher = {ACM Press},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Lung07bSmallProjectObservatory.pdf},
  doi = {10.1145/1294948.1294974},
  abstract = {Software evolution research has been focused mostly
on analyzing the evolution of single software
systems. However, it is rarely the case that a
project exists as standalone, independent of others.
Rather, projects exist in parallel within larger
contexts in companies, research groups or even the
open-source communities, contexts that we call
super-repositories. In this paper, we argue that
visualization of super-repositories is useful in a
range of situations, and we describe Small Project
Observatory, a prototype tool which aims to
visualize super-repositories.},
  isbn = {978-1-59593-722-3},
  medium = {2}}

@inproceedings{Lung07c,
  author = {Mircea Lungu and Michele Lanza and Tudor G\^irba and Reinout Heeck},
  title = {Reverse Engineering Super-Repositories},
  booktitle = {Proceedings of {WCRE} 2007 (14th Working Conference on Reverse Engineering)},
  pages = {120--129},
  publisher = {IEEE Computer Society Press},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Lung07cSuperRepositories.pdf},
  doi = {10.1109/{WCRE}.2007.46},
  abstract = {Reverse engineering and software evolution research
has been focused mostly on analyzing single software
systems. However, rarely a project exists in
isolation; instead, projects exist in parallel
within a larger context given by a company, a
research group or the open-source community.
Technically, such a context manifests itself in the
form of super-repositories, containers of several
projects developed in parallel. Well-known examples
of such super-repositories include SourceForge and
CodeHaus. We present an easily accessible platform
which supports the analysis of such
super-repositories. The platform can be valuable for
reverse engineering both the projects and the
structure of the organization as reflected in the
interactions and collaborations between developers.
Throughout the paper we present various types of
analysis applied to three open-source and one
industrial Smalltalk super-repositories, containing
hundreds of projects developed by dozens of people.},
  address = {Los Alamitos CA},
  isbn = {0-7695-3034-6},
  issn = {1095-1350},
  medium = {2}}

@misc{Lung07d,
  author = {Mircea Lungu and Michele Lanza and Tudor G\^irba},
  title = {The Small Project Observatory},
  year = {2007},
  url = {http://scg.unibe.ch/archive/reports/Lung07dSPO.pdf},
  abstract = {The Small Project Observatory is an online
application which supports the interactive
exploration and visualization of Store repositories.
The application is developed in VisualWorks using
Seaside. The graphics and high level of
interactivity are obtained using SVG and
Javascript.},
  howpublished = {European Smalltalk User Group 2007 Technology Innovation Awards},
  month = aug,
  note = {It received the 1st prize}}

@article{Lung09a,
  author = {Mircea Lungu and Michele Lanza and Tudor G\^irba and Romain Robbes},
  title = {The Small Project Observatory: Visualizing Software Ecosystems},
  journal = {Science of Computer Programming, Elsevier},
  volume = {75},
  pages = {264--275},
  year = {2010},
  url = {http://scg.unibe.ch/archive/papers/Lung09aSPO.pdf},
  doi = {10.1016/j.scico.2009.09.004},
  abstract = {Software evolution research has focused mostly on
analyzing the evolution of single software systems.
However, it is rarely the case that a project exists
as standalone, independent of others. Rather,
projects exist in parallel within larger contexts in
companies, research groups or even the open-source
communities. We call these contexts software
ecosystems, and on this paper we present The Small
Project Observatory, a prototype tool which aims to
support the analysis of project ecosystems through
interactive visualization and exploration. We
present a case-study of exploring an ecosystem using
our tool, we describe about the architecture of the
tool, and we distill the lessons learned during the
tool-building experience.},
  medium = {2},
  month = apr,
  number = {4}}

@phdthesis{Lung09b,
  author = {Mircea Lungu},
  title = {Reverse Engineering Software Ecosystems},
  year = {2009},
  school = {University of Lugano},
  url = {http://www.inf.usi.ch/phd/lungu/MirceaLungu-Thesis.pdf},
  month = nov}

@inproceedings{Lung10a,
  author = {Mircea Lungu and Romain Robbes and Michele Lanza},
  title = {Recovering Inter-Project Dependencies in Software Ecosystems},
  booktitle = {ASE'10: Proceedings of the 25th IEEE/ACM International Conference on Automated Software Engineering},
  publisher = {ACM Press},
  year = {2010},
  url = {http://inf.usi.ch/phd/lungu/research/publications/resources/Lung10a.pdf},
  abstract = {In large software systems, knowing the dependencies be- tween modules or components is critical to assess the impact of changes. To recover the dependencies, fact extractors ana- lyze the system as a whole and build the dependency graph, parsing the system down to the statement level. At the level of software ecosystems, which are collections of soft- ware projects, the dependencies that need to be recovered reside not only within the individual systems, but also be- tween the libraries, frameworks, and entire software systems that make up the complete ecosystem; scaling issues arise.
		In this paper we present and evaluate several variants of a lightweight and scalable approach to recover dependencies between the software projects of an ecosystem. We evaluate our recovery algorithms on the Squeak 3.10 Universe, an ecosystem containing more than 200 software projects.},
  note = {to appear}}

@inproceedings{Lung98a,
  author = {Chung-Horng Lung},
  title = {Software Architecture Recovery and Restructuring through Clustering Techniques},
  booktitle = {Proceedings of the 3rd International Workshop on Software Architecture},
  pages = {101--104},
  publisher = {ACM Press},
  year = {1998},
  location = {Orlando, Florida, United States}}

@inproceedings{Lunn20a,
  author = {Lunnikivi, Henri and Jylkk{\"a}, Kai and H{\"a}m{\"a}l{\"a}inen, Timo},
  title = {Transpiling {Python} to {Rust} for {Optimized} {Performance}},
  booktitle = {Embedded Computer Systems: Architectures, Modeling, and Simulation},
  year = {2020}}

@inproceedings{Luqi99a,
  author = {Luqi and Guo, Jiang},
  title = {Toward Automated Retrieval for a Software Component Repository},
  booktitle = {Proceedings of Sixth IEEE International Conference and Workshop on the Engineering of Computer-Based Systems},
  pages = {99--105},
  publisher = {IEEE},
  year = {1999},
  url = {http://www.computer.org/proceedings/ecbs/0028/00280099abs.htm},
  abstract = {Retrieval methods for software component repository
are important for software reuse. Many researchers
have done a lot of work in this field in the past
fifteen years. This paper discusses the improvement
of two different aspects of retrieval methods for
software components. One is profile matching, the
other is signature matching. We show some
experimental results assessing the affect of the
improvements.},
  location = {Privat},
  month = mar}

@article{Lutt08a,
  author = {Lutteroth, Christof and Strandh, Robert and Weber, Gerald},
  title = {Domain Specific High-Level Constraints for User Interface Layout},
  journal = {Constraints},
  volume = {13},
  pages = {307-342},
  publisher = {Springer Verlag},
  year = {2008},
  url = {https://hal.archives-ouvertes.fr/hal-00345425},
  hal-id = {hal-00345425},
  number = {3}}

@book{Lutz01a,
  author = {Mark Lutz},
  title = {Programming {Python} (2nd edition)},
  publisher = {O'Reilly \& Associates, Inc.},
  year = {2001},
  isbn = {0596000855}}

@article{Lutz01b,
  author = {Rudi Lutz},
  title = {Evolving good hierarchical decompositions of complex systems},
  journal = {Journal of Systems Architecture},
  volume = {47},
  pages = {613--634},
  year = {2001},
  doi = {10.1016/S1383-7621(01)00019-4},
  address = {School of Cognitive and Computing Sciences, University of Sussex, Falmer, Brighton BN1 9QH, UK},
  number = {7}}

@book{Lutz96a,
  author = {Mark Lutz},
  title = {Programming {Python}},
  publisher = {O'Reilly \& Associates, Inc.},
  year = {1996},
  isbn = {1-56592-197-6}}

@inproceedings{Luu15a,
  author = {Luu, Loi and Teutsch, Jason and Kulkarni, Raghav and Saxena, Prateek},
  title = {Demystifying Incentives in the Consensus Computer},
  booktitle = {22nd ACM SIGSAC Conference on Computer and Communications Security},
  pages = {706--719},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2810103.2813659},
  doi = {10.1145/2810103.2813659},
  acmid = {2813659},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3832-5},
  keywords = {bitcoin, blockchain, consensus computer, cryptocurrency, ethereum, incentive compatibility, verifiable computation},
  location = {Denver, Colorado, USA},
  numpages = {14},
  series = {CCS '15}}

@inproceedings{Luu16a,
  author = {Loi Luu and Duc-Hiep Chu and Hrishi Olickel and Prateek Saxena and Aquinas Hobor},
  title = {Making Smart Contracts Smarter},
  booktitle = {CCS'2016 (ACM Conference on Computer and Communications Security)},
  year = {2016},
  keywords = {smart contracts blockchain}}

@article{Lyng84a,
  author = {P. Lyngbaek and Dennis McLeod},
  title = {Object Management in Distributed Information Systems},
  journal = {ACM TOOIS},
  volume = {2},
  pages = {96--122},
  year = {1984},
  number = {2}}

@inproceedings{Lyon17a,
  author = {Lyons, Damian M. and Bogar, Anne Marie and Baird, David},
  title = {Lightweight Multilingual Software Analysis},
  booktitle = {International Conference on Software Technologies},
  year = {2017},
  url = {https://128.84.21.199/abs/1808.01210},
  abstract = {Developer preferences, language capabilities and the persistence of older languages contribute to the trend that large software codebases are often multilingual, that is, written in more than one computer language. While developers can leverage monolingual software development tools to build software components, companies are faced with the problem of managing the resultant large, multilingual codebases to address issues with security, efficiency, and quality metrics. The key challenge is to address the opaque nature of the language interoperability interface: one language calling procedures in a second (which may call a third, or even back to the first), resulting in a potentially tangled, inefficient and insecure codebase. An architecture is proposed for lightweight static analysis of large multilingual codebases: the MLSA architecture. Its modular and table-oriented structure addresses the open-ended nature of multiple languages and language interoperability {API}s. We focus here as an application on the construction of call-graphs that capture both inter-language and intra-language calls. The algorithms for extracting multilingual call-graphs from codebases are presented, and several examples of multilingual software engineering analysis are discussed. The state of the implementation and testing of MLSA is presented, and the implications for future work are discussed.}}

@article{Lyon18a,
  author = {Lyons, Damian M. and Bogar, Anne Marie and Baird, David},
  title = {Lightweight Multilingual Software Analysis},
  journal = {Challenges and Opportunities in ICT Research Projects},
  year = {2018},
  url = {https://128.84.21.199/abs/1808.01210},
  editor = {C. Mota}}

@article{Lyon74a,
  author = {Gordon Lyon},
  title = {Syntax-directed least-errors analysis for context-free languages: a practical approach},
  journal = {Commun. ACM},
  volume = {17},
  pages = {3--14},
  publisher = {ACM Press},
  year = {1974},
  doi = {10.1145/360767.360771},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {1}}

@misc{MDA,
  title = {{OMG} Model Driven Architecture},
  key = {MDA},
  note = {http://www.omg.org/mda/}}

@techreport{MOF00a,
  author = {{Object} {Management} {Group}},
  title = {{Meta} {Object} {Facility} ({MOF}) Specification (version 1.3)},
  year = {2000},
  institution = {{Object} {Management} {Group}},
  key = {OMG},
  month = mar}

@techreport{MOF04a,
  author = {{Object} {Management} {Group}},
  title = {Meta Object Facility ({MOF}) 2.0 Core Final Adopted Specification},
  year = {2004},
  url = {http://www.omg.org/cgi-bin/doc?ptc/03-10-04},
  institution = {{Object} {Management} {Group}}}

@techreport{MOF97a,
  author = {{Object} {Management} {Group}},
  title = {Meta Object Facility ({MOF}) Specification},
  year = {1997},
  institution = {{Object} {Management} {Group}},
  key = {OMG},
  month = sep,
  number = {ad/97-08-14}}

@misc{MPS,
  author = {JetBrains},
  title = {Meta Programming System},
  url = {http://www.jetbrains.com/mps},
  note = {http://www.jetbrains.com/mps}}

@misc{MSDN,
  title = {{The} {Microsoft} {Developer} {Network}},
  key = {MSDN},
  note = {http://msdn.microsoft.com/}}

@misc{MSLinq,
  author = {Microsoft},
  title = {Language Integrated Query (LINQ)},
  year = {2023},
  howpublished = {\url{https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/}}}

@inproceedings{Maal09a,
  author = {Maalej, Walid},
  title = {Task-first or context-first? Tool integration revisited},
  booktitle = {2009 IEEE/ACM International Conference on Automated Software Engineering},
  pages = {344--355},
  year = {2009},
  organization = {IEEE}}

@incollection{Maal14a,
  author = {Walid Maalej and Thomas Fritz and Romain Robbes},
  title = {Collecting and Processing Interaction Data for Recommendation Systems},
  booktitle = {Recommendation Systems in Software Engineering},
  pages = {173--197},
  publisher = {Springer-Verlag},
  year = {2014},
  doi = {10.1007/978-3-642-45135-5_7}}

@article{Maal14b,
  author = {Maalej, Walid and Tiarks, Rebecca and Roehm, Tobias and Koschke, Rainer},
  title = {On the comprehension of program comprehension},
  journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume = {23},
  pages = {1--37},
  publisher = {ACM New York, NY, USA},
  year = {2014},
  number = {4}}

@article{Maam06a,
  author = {Zakaria Maamar and Djamal Benslimane and Nanjangud C. Narendra},
  title = {What can context do for web services?},
  journal = {Commun. ACM},
  volume = {49},
  pages = {98--103},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1183236.1183238},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {12}}

@article{Maar91a,
  author = {Yo{\"e}lle S. Maarek and Daniel M. Berry and Gail E. Kaiser},
  title = {An Information Retrieval Approach For Automatically Constructing Software Libraries},
  journal = {IEEE Transactions on Software Engineering},
  volume = {17},
  pages = {800--813},
  year = {1991},
  month = aug,
  number = {8}}

@article{MacC06a,
  author = {Alan MacCormack and John Rusnak and Carliss Y. Baldwin},
  title = {Exploring the Structure of Complex Software Designs: An Empirical Study of Open Source and Proprietary Code},
  journal = {Management Science},
  volume = {52},
  pages = {1015--1030},
  publisher = {INFORMS},
  year = {2006},
  doi = {10.1287/mnsc.1060.0552},
  address = {Institute for Operations Research and the Management Sciences (INFORMS), Linthicum, Maryland, USA},
  issn = {0025-1909},
  number = {7}}

@book{MacK03a,
  author = {David MacKenzie and Paul Eggert and Richard Stallman},
  title = {Comparing and Merging Files With Gnu Diff and Patch},
  pages = {120},
  publisher = {Network Theory Ltd.},
  year = {2003},
  isbn = {0954161750}}

@inproceedings{MacQ67a,
  author = {J. B. MacQueen},
  title = {Some Methods for Classification and Analysis of Multivariate Observations},
  booktitle = {Proceedings of the 5th Symposium on Mathematics, Statistics and Probability},
  pages = {281--297},
  publisher = {University of California Press},
  year = {1967},
  address = {Berkley}}

@inproceedings{MacQ84a,
  author = {David MacQueen},
  title = {Modules for Standard ML},
  booktitle = {Proceedings of the 1984 ACM Symposium on LISP and functional programming},
  pages = {198--207},
  publisher = {ACM Press},
  year = {1984},
  isbn = {0-89791-142-3},
  location = {Austin, Texas, United States}}

@inproceedings{MacQ88a,
  author = {David MacQueen},
  title = {An Implementation of Standard ML Modules},
  booktitle = {Proceedings of the 1988 ACM conference on LISP and functional programming},
  pages = {212--223},
  publisher = {ACM Press},
  year = {1988},
  doi = {10.1145/62678.62704},
  isbn = {0-89791-273-X},
  location = {Snowbird, Utah, United States}}

@inproceedings{MacQ93a,
  author = {David B. MacQueen},
  title = {Reflections on Standard ML.},
  booktitle = {Functional Programming, Concurrency, Simulation and Automated Reasoning},
  pages = {32--46},
  publisher = {Lecture Notes in Computer Science},
  year = {1993}}

@inproceedings{Maci12a,
  author = {Macia, Isela and Garcia, Joshua and Popescu, Daniel and Garcia, Alessandro and Medvidovic, Nenad and von Staa, Arndt},
  title = {Are automatically-detected code anomalies relevant to architectural modularity? An exploratory analysis of evolving systems},
  booktitle = {Proceedings of the 11th annual international conference on Aspect-oriented Software Development},
  pages = {167--178},
  year = {2012}}

@misc{Mack00a,
  author = {T. Mackinnon and S. Freeman and P. Craig},
  title = {EndoTesting: Unit Testing with Mock Objects},
  year = {2000},
  url = {http://www.mockobjects.com},
  text = {Mackinnon, T., Freeman, S., Craig, P. EndoTesting: Unit Testing with Mock Objects, eXtreme Programming and Flexible Processes in Software Engineering - XP2000, May 2000}}

@inbook{Mack01a,
  author = {Mackinnon, Tim and Freeman, Steve and Craig, Philip},
  title = {Endo-testing: Unit testing with mock objects},
  chapter = {17},
  pages = {287--301},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {2001},
  address = {Boston, MA, USA},
  book = {Extreme programming examined},
  numpages = {15}}

@book{Mack03,
  author = {MacKay, David JC and Mac Kay, David JC},
  title = {Information theory, inference and learning algorithms},
  publisher = {Cambridge university press},
  year = {2003}}

@inproceedings{Mada89a,
  author = {Peter W. Madany and Roy H. Campbell and Vincent F. Russo and Douglas E. Leyens},
  title = {A Class Hierarchy for Building Stream-Oriented File Systems},
  booktitle = {Proceedings ECOOP '89},
  pages = {311--328},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@article{Madd09a,
  author = {Maddeh, Mohamed and Romdhani, Mohamed and Ghedira, Khaled},
  title = {Classification of model refactoring approaches},
  journal = {The Journal of Object Technology},
  volume = {8},
  pages = {121},
  year = {2009},
  doi = {10.5381/jot.2009.8.6.a3},
  month = sep}

@book{Made08a,
  author = {Mader, Stewart},
  title = {Wikipatterns},
  publisher = {Wiley},
  year = {2008}}

@book{Madh06a,
  author = {Nazim H. Madhavji and Juan Fernandez-Ramil and Dewayne Perry},
  title = {Software Evolution and Feedback: Theory and Practice},
  publisher = {John Wiley \& Sons},
  year = {2006},
  isbn = {0470871806}}

@article{Madh85a,
  author = {Nazim H. Madhavji},
  title = {Compare: A Collusion Detector for {PASCAL}},
  journal = {Techniques et Sciences Informatiques},
  volume = {4},
  pages = {489--498},
  year = {1985},
  month = nov,
  number = {6}}

@article{Madh92a,
  author = {Madhavji, Nazim H.},
  title = {Environment Evolution: The Prism Model of Changes},
  journal = {IEEE Transaction in Software Engineering},
  volume = {18},
  pages = {380--392},
  year = {1992},
  doi = {10.1109/32.135771},
  issn = {0098-5589},
  number = {5}}

@inproceedings{Mads02a,
  author = {Per Madsen},
  title = {Unit Testing Using Design by Contract and Equivalence Partitions},
  booktitle = {Extreme Programming and Agile Processes in Software Engineering},
  pages = {425--426},
  publisher = {Springer},
  year = {2003},
  editor = {Michele Marchesi and Giancarlo Succi},
  series = {LNCS}}

@inproceedings{Mads02b,
  author = {Per Madsen},
  title = {Testing By Contract --- Combining Unit Testing and Design by Contract},
  booktitle = {The Tenth Nordic Workshop on Programming and Software Development Tools and Techniques},
  year = {2002},
  url = {http://www.itu.dk/people/kasper/NWPER2002/},
  note = {On-line proceedings: http://www.itu.dk/people/kasper/NWPER2002/}}

@incollection{Mads80a,
  author = {Ole Lehrmann Madsen},
  title = {On Defining Semantics by Means of Extended Attribute Grammars},
  booktitle = {Semantics-Directed Compiler Generation},
  volume = {94},
  pages = {259--299},
  publisher = {Springer-Verlag},
  year = {1980},
  editor = {N.D. Jones},
  series = {LNCS}}

@article{Mads86a,
  author = {Ole Lehrmann Madsen},
  title = {Block Structure and Object Oriented Languages},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {133--142},
  year = {1986},
  month = oct,
  number = {10}}

@inproceedings{Mads88a,
  author = {Ole Lehrmann Madsen and Birger M{\/o}ller-Pedersen},
  title = {What Object-Oriented Programming May Be --- and What It Does Not Have To Be},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {1--20},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Mads89a,
  author = {Ole Lehrmann Madsen and Birger M{\/o}ller-Pedersen},
  title = {Virtual Classes: {A} Powerful Mechanism in Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {397--406},
  year = {1989},
  month = oct}

@inproceedings{Mads89b,
  author = {O. L. Madsen and B. Moller-Pedersen},
  title = {Virtual classes: a powerful mechanism in object-oriented programming},
  booktitle = {Conference proceedings on Object-oriented programming systems, languages and applications},
  pages = {397--406},
  publisher = {ACM Press},
  year = {1989},
  isbn = {0-89791-333-7},
  location = {New Orleans, Louisiana, United States}}

@inproceedings{Mads90a,
  author = {Ole Lehrmann Madsen and Boris Magnusson and Birger M{\/o}ller-Pedersen},
  title = {Strong Typing of Object-Oriented Languages Revisited},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {140--150},
  year = {1990},
  month = oct}

@book{Mads92a,
  title = {Proceedings of {ECOOP}'92},
  volume = {615},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Ole Lehrmann Madsen},
  isbn = {3-540-55668-0},
  series = {LNCS}}

@misc{Mads92b,
  author = {"Ole Lehrmann Madsen and Birger Mdller-pedersen"},
  title = {Part Objects And Their Location},
  year = {1992},
  url = {http://citeseer.ist.psu.edu/559842.html http://www.daimi.au.dk/PB/406/PB-406.ps.gz},
  abstract = {"The notion of location of part objects is introduced,
		 yielding a reference to the containing object. Combined
		 with locally defined objects and classes (block
		 structure), singularly defined part objects, and
		 references to part objects, it is a powerful language
		 mechanism for defining objects with different aspects
		 or roles. The use of part objects for inheritance of
		 code is also explored."},
  month = mar}

@book{Mads93a,
  author = {Ole Lehrmann Madsen and Birger M{\/o}ller-Pedersen and Kristen Nygaard},
  title = {Object-Oriented Programming in the Beta Programming Language},
  publisher = {Addison Wesley},
  year = {1993},
  address = {Reading, Mass.},
  isbn = {0-201-62430-3}}

@article{Mads95a,
  author = {Ole Lehrmann Madsen},
  title = {Open issues in object-oriented programming---a Scandinavian perspective},
  journal = {Softw. Pract. Exper.},
  volume = {25},
  pages = {3--43},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1995},
  doi = {10.1002/spe.4380251303},
  address = {New York, NY, USA},
  issn = {0038-0644},
  number = {S4}}

@inproceedings{Maed96a,
  author = {C. Maeda},
  title = {A Metaobject Protocol For Controlling File Cache Management},
  booktitle = {Proceedings of ISOTAS '96, LNCS 1049},
  pages = {275--286},
  year = {1996},
  month = mar,
  organization = {JSSST-JAIST}}

@inproceedings{Maes87a,
  author = {Pattie Maes},
  title = {Concepts and Experiments in Computational Reflection},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {147--155},
  year = {1987},
  doi = {10.1145/38807.38821},
  month = dec}

@phdthesis{Maes87b,
  author = {Pattie Maes},
  title = {Computational {Reflection}},
  year = {1987},
  school = {Laboratory for Artificial Intelligence},
  address = {Vrije Universiteit Brussel, Belgium},
  month = jan}

@incollection{Maes88a,
  author = {Pattie Maes},
  title = {Issues in Computational Reflection},
  booktitle = {Meta-Level Architectures and Reflection},
  pages = {21--35},
  publisher = {Elsevier Science Publishers B.V. (North-Holland)},
  year = {1988},
  editor = {P. Maes, D. Nardi}}

@inproceedings{Maff08a,
  author = {Maffeis, Sergio and Mitchell, John C. and Taly, Ankur},
  title = {An Operational Semantics for JavaScript},
  booktitle = {Proceedings of the 6th Asian Symposium on Programming Languages and Systems},
  pages = {307--325},
  publisher = {Springer-Verlag},
  year = {2008},
  doi = {10.1007/978-3-540-89330-1_22},
  acmid = {1485368},
  address = {Berlin, Heidelberg},
  isbn = {978-3-540-89329-5},
  location = {Bangalore, India},
  numpages = {19},
  series = {APLAS '08}}

@inproceedings{Maff09a,
  author = {Maffeis, Sergio and Taly, Ankur},
  title = {Language-based isolation of untrusted Javascript},
  booktitle = {In CSF},
  year = {2009}}

@inproceedings{Maff94a,
  author = {Silvano Maffeis},
  title = {A Flexible System Design to Support Object-Groups and Object-Oriented Distributed Programming},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {213--224},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {Under many circumstances, the development of
distributed applications greatly benefits from
mechanisms like process groups, reliable ordered
multicast, and message passing. However, toolkits
offering these capabilities are often low-level and
therefore difficult to program. To ease the
development of distributed applications, in this
paper we propose to hide these low-level functions
behind object-oriented abstractions such as
object-groups, Remote Method Calling , and Smart
Proxies. Furthermore, we describe how the Electra
toolkit provides such object-oriented abstractions
in a portable and highly machine-independent way.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@article{Mage89a,
  author = {Jeff Magee and Jeffrey Kramer and M. Sloman},
  title = {Constructing Distributed Systems in Conic},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-15},
  pages = {663--675},
  year = {1989},
  number = {6}}

@inproceedings{Mage92a,
  author = {Jeff Magee and Naranker Dulay and Jeffrey Kramer},
  title = {Structuring Parallel and Distributed Programs},
  booktitle = {Proceedings of the International Workshop on Configurable Distributed Systems},
  year = {1992},
  url = {ftp://dse.doc.ic.ac.uk/dse-papers/darwin/iwcds.ps.gz},
  address = {London},
  month = mar}

@inproceedings{Mage95a,
  author = {Jeff Magee and Naranker Dulay and Susan Eisenbach and Jeffrey Kramer},
  title = {Specifying Distributed Software Architectures},
  booktitle = {Proceedings ESEC '95},
  volume = {989},
  pages = {137--153},
  publisher = {Springer-Verlag},
  year = {1995},
  month = sep,
  series = {LNCS}}

@inproceedings{Mage96a,
  author = {Magee, Jeff and Kramer, Jeff},
  title = {Dynamic structure in software architectures},
  booktitle = {SIGSOFT'96: Proceedings of the 4th Symposium on Foundations of software engineering},
  pages = {3--14},
  publisher = {ACM},
  year = {1996},
  doi = {10.1145/239098.239104},
  address = {San Francisco, CA, USA},
  location = {New York, NY, USA}}

@book{Mage99a,
  author = {Jeff Magee and Jeffrey Kramer},
  title = {Concurrency: State Models \& {Java} Programs},
  publisher = {Wiley},
  year = {1999},
  url = {http://www-dse.doc.ic.ac.uk/concurrency/index.html}}

@article{Magn90a,
  author = {Boris Magnusson},
  title = {{SCOOP}-Europe Report and Introducing {OOP} Research at the University of Geneva},
  journal = {Journal of Object-Oriented Programming},
  volume = {3},
  pages = {66--70},
  year = {1990},
  number = {4}}

@inproceedings{Magn93b,
  author = {M. Magnan and C. Oussalah},
  title = {Object Evolution},
  booktitle = {Proceeding of the 5th International Conference on Sotware Engineering and Knowledge Engineering},
  pages = {546--553},
  year = {1993},
  address = {San Francisco}}

@phdthesis{Magn94a,
  author = {M. Magnan},
  title = {R\'eutilisation de composants: les exceptions dans les objets composites},
  year = {1994},
  school = {Universit\'e de Montpellier II}}

@inproceedings{Maha05a,
  author = {Rupa Mahanti and P.K. Mahanti},
  title = {Software Engineering Education From Indian Perspective},
  booktitle = {Proceedings Conference on Software Engineering Education and Training (CSEET05)},
  year = {2005}}

@book{Mahe06a,
  author = {Michael Mahemoff},
  title = {Ajax Design Patterns},
  publisher = {O'Relly Media},
  year = {2006},
  isbn = {0-596-10180-5}}

@article{Maie85a,
  author = {David Maier and Allen Otis and Alan Purdy},
  title = {Object-Oriented Database Development at Servio Logic},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {58--65},
  year = {1985},
  month = dec,
  number = {4}}

@inproceedings{Maie86a,
  author = {David Maier and Jacob Stein and Allen Otis and Alan Purdy},
  title = {Development of an Object-Oriented {DBMS}},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {472--482},
  year = {1986},
  month = nov}

@incollection{Maie87a,
  author = {David Maier and Jacob Stein},
  title = {Development and Implementation of an Object-Oriented {DBMS}},
  booktitle = {Research Directions in Object-Oriented Programming},
  pages = {355--392},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  editor = {B. Shriver and P. Wegner}}

@inproceedings{Main02a,
  author = {Alan Mainwaring and David Culler and Joseph Polastre and Robert Szewczyk and John Anderson},
  title = {Wireless sensor networks for habitat monitoring},
  booktitle = {WSNA '02: Proceedings of the 1st ACM international workshop on Wireless sensor networks and applications},
  pages = {88--97},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/570738.570751},
  address = {New York, NY, USA},
  isbn = {1-58113-589-0},
  location = {Atlanta, Georgia, USA}}

@inproceedings{Maiz81a,
  author = {J.V. Maizel Jr. and R.P. Lenk},
  title = {Enhanced Graphic Matrix Analysis of Nucleic Acid and Amino Acid Sequences},
  booktitle = {Proceedings of the National Academy of Sciences, Genetics},
  volume = {78},
  pages = {7665--7669},
  year = {1981}}

@inproceedings{Mala00a,
  author = {Scott Malabarba and Raju Pandey and Jeff Gragg and Earl Barr and J. Fritz Barnes},
  title = {Runtime Support for Type-Safe Dynamic {Java} Classes},
  booktitle = {Proceedings of the 14th European Conference on Object-Oriented Programming},
  pages = {337--361},
  publisher = {Springer-Verlag},
  year = {2000},
  isbn = {3-540-67660-0}}

@inproceedings{Mala09a,
 author = {Malayeri, Donna and Aldrich, Jonathan},
 title = {CZ: Multiple Inheritance Without Diamonds},
 booktitle = {Proceedings of the 24th ACM SIGPLAN Conference on Object Oriented Programming Systems Languages and Applications},
 series = {OOPSLA '09},
 year = {2009},
 isbn = {978-1-60558-766-0},
 location = {Orlando, Florida, USA},
 pages = {21--40},
 numpages = {20},
 url = {http://doi.acm.org/10.1145/1640089.1640092},
 doi = {10.1145/1640089.1640092},
 acmid = {1640092},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {diamond problem, modularity, multimethods, multiple inheritance}
}

@inproceedings{Mala99a,
  author = {Malabarba, Scott and Devanbu, Premkumar and Stearns, Aaron},
  title = {MoHCA-Java: a tool for C++ to Java conversion support},
  booktitle = {Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No. 99CB37002)},
  pages = {650--653},
  year = {1999},
  organization = {IEEE}}

@inproceedings{Male00a,
  author = {Jonathan I. Maletic and Andrian Marcus},
  title = {Using Latent Semantic Analysis to Identify Similarities in Source Code to Support Program Understanding},
  booktitle = {Proceedings of the 12th International Conference on Tools with Artificial Intelligences (ICTAI 2000)},
  pages = {46--53},
  year = {2000},
  month = nov}

@inproceedings{Male00b,
  author = {Jonathan I. Maletic and Andrian Marcus},
  title = {Support Software Maintainance Using Latent Semantic Analysis},
  booktitle = {Proceedings fo the 4th Anunual IASTED International Conference on Software Engineering and Applications (SEA2000)},
  pages = {250--255},
  year = {2000},
  month = nov}

@inproceedings{Male01a,
  author = {Jonathan I. Maletic and Andrian Marcus},
  title = {Supporting Program Comprehension Using Semantic and Structural Information},
  booktitle = {Proceedings of the 23rd International Conference on Software Engineering (ICSE 2001)},
  pages = {103--112},
  year = {2001},
  month = may}

@inproceedings{Male02a,
  author = {Jonathan I. Maletic and Andrian Marcus and Michael Collard},
  title = {A Task Oriented View of Software Visualization},
  booktitle = {Proceedings of the 1st Workshop on Visualizing Software for Understanding and Analysis (VISSOFT 2002)},
  pages = {32--40},
  publisher = {IEEE},
  year = {2002},
  month = jun}

@inproceedings{Male02b,
  author = {Jonathan Maletic and Michael Collard and Andrian Marcus},
  title = {Source Code Files as Structured Documents},
  booktitle = {Proceedings of the 10th International Workshop on Program Comprehension (IWPC 2002)},
  pages = {289--292},
  publisher = {IEEE},
  year = {2002},
  month = jun}

@inproceedings{Male89a,
  author = {Jacques Malenfant and Guy Lapalme and Jean Vaucher},
  title = {ObjVProlog: Metaclasses in Logic},
  booktitle = {Proceedings ECOOP '89},
  pages = {257--269},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Male91a,
  author = {Jacques Malenfant and Christophe Dony and Pierre Cointe},
  title = {{Reflection in Prototype-Based Object-Oriented Programming Languages}},
  booktitle = {OOPSLA '91 Workshop on Reflection and Meta-Level Architectures in Object-Oriented Programming},
  year = {1991}}

@inproceedings{Male92a,
  author = {Jacques Malenfant and Christophe Dony and Pierre Cointe},
  title = {{Behavioral Reflection in a prototype-based language}},
  booktitle = {Proceedings of Int'l Workshop on Reflection and Meta-Level Architectures},
  pages = {143--153},
  year = {1992},
  address = {Tokyo},
  editor = {A. Yonezawa and B. Smith},
  month = nov,
  organization = {RISE and IPA(Japan) + ACM SIGPLAN}}

@inproceedings{Male95b,
  author = {J. Malenfant},
  title = {On the Semantic Diversity of Delegation-Based Programming Languages},
  booktitle = {Proceedings of OOPSLA '95},
  pages = {215--230},
  year = {1995},
  address = {Austin},
  month = oct,
  organization = {ACM}}

@inproceedings{Male96a,
  author = {J. Malenfant and M. Jacques and F.-N. Demers},
  title = {Compiling Static Behavioral Reflection},
  booktitle = {Proceedings of Reflection},
  year = {1996}}

@inproceedings{Male96b,
  author = {J. Malenfant and M. Jacques and F.-N. Demers},
  title = {A tutorial on behavioral reflection and its implementation},
  booktitle = {Proceedings of Reflection},
  pages = {1--20},
  year = {1996},
  url = {http://www2.parc.com/csl/groups/sda/projects/reflection96/docs/malenfant/malenfant.pdf http://www2.parc.com/csl/groups/sda/projects/reflection96/docs/malenfant/ref96/ref96.html}}

@inproceedings{Malh15a,
  author = {Malhotra, Ruchika and Chug, Anuradha and Khosla, Priyanka},
  title = {Prioritization of Classes for Refactoring: A Step Towards Improvement in Software Quality},
  booktitle = {Proceedings of the Third International Symposium on Women in Computing and Informatics},
  pages = {228--234},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2791405.2791463},
  doi = {10.1145/2791405.2791463},
  abstract = {Bad Smells are certain structures in the software which violates the design principles and ruin the software quality. In order to deals with the bad smells, often refactoring treatment is provided in the code which further improves the software quality. However, it's not possible to refactor each and every class of the software in maintenance phase due to certain deadlines. Prioritization of classes helps the developer to identify the software portions requiring urgent refactoring. In the current study, we propose a framework to identify the potential classes which immediately require refactoring based on the bad smells as well as design characteristics. We evaluate our approach on medium sized open-source systems ORDrumbox. Four types of code-smells Feature Envy, Long Method, God Class and Type Checking were identified and well known Chidamber and Kemerer metric suite is used to evaluate the object oriented characteristics. Both are combined in certain ratio to calculate new proposed metric Quality Depreciation Index Rule (QDIR) for each class. Classes are further arranged as per their QDIR values to identify the severely affected classes requiring immediate refactoring treatment. This study works on 80:20 principles conveying 80\% of the code quality can be improved by just providing refactoring treatment to 20\% of the severely affected classes. Results reflects that the bad smells and design metrics can be used as an important source of information to quantify the flaws in the classes, thus helpful to maintainers in performing their task under strict time constraints while maintaining the overall software quality.},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3361-0},
  keywords = {Refactoring, Bad Smell, Object Oriented Metrics, Software Maintenance, Software Quality},
  note = {event-place: Kochi, India},
  series = {{WCI} '15},
  shorttitle = {Prioritization of {Classes} for {Refactoring}},
  urldate = {2019-03-22}}

@incollection{Malh93a,
  author = {Jawahar Malhotra},
  title = {Dynamic Extensibility in a Statically-compiled Object-oriented Language},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {297--314},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Statically-typed object-oriented compiled languages,
like Simula, Beta, Eiffel, are desirable because of
the safety and efficiency of the resulting code.
Dynamically-typed, interpreted languages, like
Smalltalk, are useful as they provide the
possibility of dynamically extending a program. In
this paper, we reconcile the safety and efficiency
goals of compiled languages with the benefits of
interpreted languages by presenting an embeddable
interpreter for a compiled language, namely Beta.
The interpreter is designed to be embedded into any
compiled Beta application, thus enabling it to
accept dynamic extensions. This paper examines the
Application Programmer's Interface to the
interpreter and illustrate some aspects of our
implementation.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@article{Mall82a,
  author = {W.R. Mallgren},
  title = {Formal Specifications of Graphic Data Types},
  journal = {ACM TOPLAS},
  volume = {4},
  pages = {687--710},
  year = {1982},
  month = oct,
  number = {4}}

@mastersthesis{Mall95a,
  author = {Willen C. Mallon},
  title = {Contraction based proof methods for a delay-insensitive algebra},
  year = {1995},
  school = {Rijksuniversiteit Gronigen, NL},
  misc = {29, August},
  month = aug,
  type = {M.Sc. thesis}}

@inproceedings{Malo04a,
  author = {John Maloney and Leo Burd and Yasmin Kafai and Natalie Rusk and Brian Silverman and Mitchel Resnick},
  title = {Scratch: A Sneak Preview},
  booktitle = {International Conference on Creating, Connecting and Collaborating through Computing},
  pages = {104--109},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/C5.2004.1314376},
  adress = {Los Alamitos, CA, USA}}

@misc{Malo11a,
  author = {John Maloney},
  title = {MicroSqueak},
  note = {http://web.media.mit.edu/~jmaloney/microsqueak/}}

@inproceedings{Malo89a,
  author = {John Maloney and Alan Borning and Bjorn N. Freeman-Benson},
  title = {Constraint Technology fur User-Interface Construction in ThingLab {II}},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {381--388},
  year = {1989},
  month = oct}

@inproceedings{Malo90a,
  author = {Thomas W. Malone and Kevin Crowston},
  title = {What is coordination Theory and How Can it Help Cooperative Work Systems},
  booktitle = {Proceedings of CSCW '90},
  pages = {357--370},
  year = {1990},
  month = oct}

@article{Malo91a,
  author = {Allen D. Maloney and David H. Hammerslag and David J. Jablonowski},
  title = {Traceview: A Trace Visualization Tool},
  journal = {IEEE Software},
  year = {1991},
  month = sep}

@article{Malo94a,
  author = {Thomas W. Malone and Kevin Crowston},
  title = {The Interdisciplinary Study of Coordination},
  journal = {ACM Computing Surveys},
  volume = {26},
  year = {1994},
  url = {http://pound.mit.edu/ccswp/CCSWP157.ps},
  month = mar,
  number = {1}}

@techreport{Malor99a,
  author = {Pietro Malorgio},
  title = {An Information Mural Visualization for Duploc},
  year = {1999},
  url = {http://scg.unibe.ch/archive/projects/Malor99a.pdf},
  abstract = {Duploc is a tool written in Smalltalk, which is
currently under continuous development inside the
Software Composition Group at the University of
Bern. It is designed for representing graphically
the comparison results of found duplicated lines of
code out of a set of loaded source code files.
Duploc supports different programming languages
(C++, C, Java, Smalltalk etc.). The loaded files are
compared line-by-line using a simple string-match
comparison function--the comparison results are
stored in a two dimensional comparison matrix. The
previous Graphical User Interface (GUI) represents
the obtained comparison matrix as a dotplot
diagram---in this two dimensional grid of black
painted dots, each dot stands for two identical
found lines of code in two different files. This GUI
uses a scrollbar to provide some navigation facility
over the comparison matrix. It is therefore only
suitable for visualising comparison matrixes up to
some hundred elements per matrix side (e.g.
800x800). The project goal was to integrate into the
Duploc application a technique named Information
Mural in order to visualise a large comparison
matrix. Figure 2 shows the Information Mural
overview image of a comparison matrix with
24278x24278 elements. This image was produced with
the new developed GUI. Each dot stands for the
'match density' inside a correspondent region in the
underlying comparison matrix. Darker dots indicates
a region of the comparison matrix with more matches
then lighter dots. This new developed GUI is
typically capable to visualise a comparison matrix
with up to two million elements per side. It also
provides navigation facilities for exploring parts
of the comparison matrix in a dotplot like display
mode.},
  institution = {University of Bern},
  month = jul,
  type = {Informatikprojekt}}

@inproceedings{Malt01a,
  author = {Malton, Andrew J},
  title = {The software migration barbell},
  booktitle = {ASERC Workshop on Software Architecture},
  year = {2001}}

@inproceedings{Mama05a,
  author = {Marco Mamei and Franco Zambonelli},
  title = {Programming stigmergic coordination with the {TOTA} middleware},
  booktitle = {4rd International Joint Conference on Autonomous Agents and Multiagent Systems ({AAMAS} 2005)},
  pages = {415--422},
  publisher = {ACM},
  year = {2005},
  isbn = {1-59593-094-9}}

@inproceedings{Man03a,
  author = {Mantyla, Mika and Vanhanen, Jari and Lassenius, Casper},
  title = {A taxonomy and an initial empirical study of bad smells in code},
  booktitle = {International Conference on Software Maintenance, 2003. ICSM 2003. Proceedings.},
  pages = {381--384},
  year = {2003},
  organization = {IEEE}}

@inproceedings{Manb90a,
  author = {Udi Manber and Gene Myers},
  title = {Suffix Arrays: A New Method for On-line String Searches},
  booktitle = {1st ACM SIAM Symposium on Discrete Algorithms},
  pages = {319--327},
  year = {1990},
  address = {San Francisco},
  month = jan}

@inproceedings{Manb94a,
  author = {Udi Manber},
  title = {Finding Similar Files in a Large File System},
  booktitle = {Proceedings of the Winter Usenix Technical Conference},
  pages = {1--10},
  year = {1994}}

@article{Manc08a,
  author = {Blanca Mancilla and John Plaice},
  title = {Possible Worlds Versioning},
  journal = {Mathematics in Computer Science},
  volume = {788},
  pages = {63-83},
  publisher = {Birkh\"auser Basel},
  year = {2008},
  doi = {10.1007/s11786-008-0044-8},
  month = nov}

@inproceedings{Manc98a,
  author = {Spiros Mancoridis and Brian S. Mitchell},
  title = {Using Automatic Clustering to produce High-Level System Organizations of Source Code},
  booktitle = {Proceedings of IWPC '98 (International Workshop on Program Comprehension)},
  publisher = {IEEE Computer Society Press},
  year = {1998}}

@inproceedings{Manc99a,
  author = {Spiros Mancoridis and Brian S. Mitchell and Y. Chen and E. R. Gansner},
  title = {Bunch: A Clustering Tool for the Recovery and Maintenance of Software System Structures},
  booktitle = {Proceedings of {ICSM} '99 (International Conference on Software Maintenance)},
  publisher = {IEEE Computer Society Press},
  year = {1999},
  address = {Oxford, England}}

@inproceedings{Mand03a,
  author = {Yitzhak Mandelbaum and David Walker and Robert Harper},
  title = {An effective theory of type refinements},
  booktitle = {ICFP '03: Proceedings of the eighth ACM SIGPLAN international conference on Functional programming},
  pages = {213--225},
  publisher = {ACM Press},
  year = {2003},
  url = {http://www.cs.princeton.edu/sip/pub/effective-type-refinements03.pdf},
  doi = {10.1145/944705.944725},
  address = {New York, NY, USA},
  isbn = {1-58113-756-7},
  location = {Uppsala, Sweden}}

@inproceedings{Mand05a,
  author = {Mandel, Louis and Pouzet, Marc},
  title = {{ReactiveML}, a Reactive Extension to {ML}},
  booktitle = {PPDP'05: Proceedings of the 7th International conference on Principles and Practice of Declarative Programming},
  year = {2005},
  isbn = {1-59593-090-6}}

@book{Mann05a,
  author = {Mary L. Manns and Linda Rising},
  title = {Fearless Change},
  publisher = {Addison Wesley},
  year = {2005},
  isbn = {0-201-74157-1}}

@inproceedings{Mann81a,
  author = {Zohar Manna and Amir Pnueli},
  title = {Verification of Concurrent Programs: Temporal Proof Principle},
  booktitle = {Logics of Programs (Proceedings 1981)},
  volume = {131},
  pages = {200--252},
  publisher = {Springer-Verlag},
  year = {1981},
  editor = {D. Kozen},
  series = {LNCS}}

@incollection{Mann81b,
  author = {Zohar Manna and Amir Pnueli},
  title = {Verification of Concurrent Programs: the Temporal Framework},
  booktitle = {The Correctness Problem in Computer Science},
  pages = {215--273},
  publisher = {Academic Press},
  year = {1981},
  editor = {R.S. Boyer and J.S. Moore}}

@article{Mann84a,
  author = {Zohar Manna and Pierre Wolper},
  title = {Synthesis of Communicating Processes from Temporal Logic Specifications},
  journal = {ACM TOPLAS},
  volume = {6},
  pages = {68--93},
  year = {1984},
  month = jan,
  number = {1}}

@inproceedings{Mann87a,
  author = {Carl Manning},
  title = {Traveler: The {API}ary Observatory},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {89--97},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@phdthesis{Mano00a,
  author = {Dragos Manolescu},
  title = {Micro-workflow: a workflow architecture supporting compositional object-oriented software development},
  year = {2000},
  school = {University of Urbana-Champaign}}

@inproceedings{Mant13,
  author = {Mika M\"{a}ntyl\"{a} and Foutse Khomh and Bram Adams and Emelie Engstr\"{o}m and Kai Petersen},
  title = {On R{API}d Releases and Software Testing},
  booktitle = {2013 IEEE International Conference on Software Maintenance},
  pages = {20-29},
  publisher = {IEEE Press},
  year = {2013},
  doi = {10.1109/ICSM.2013.13},
  address = {Piscataway, NJ, USA},
  issn = {1063-6773},
  month = {sep}}

@misc{Mantis,
  title = {Mantis},
  key = {Mantis},
  note = {http://www.mantisbt.org/}}

@book{Manu06a,
  author = {Manulescu},
  title = {Patterns languages of programm design 5},
  publisher = {Wiley},
  year = {2006}}

@article{Mao80a,
  author = {T.W. Mao and R.T. Yeh},
  title = {Communication Port: a Language Concept for Concurrent Programming},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-6},
  pages = {194--204},
  year = {1980},
  month = mar,
  number = {2}}

@inproceedings{Maqb04a,
  author = {O. Maqbool and H.A. Babri},
  title = {The Weighted Combined Algorithm: A Linkage Algorithm for Software Clustering},
  booktitle = {Proceedings of the Eighth European Conference on Software Maintenance and Reengineering},
  year = {2004},
  location = {Tampere, Finland},
  month = mar,
  page = {15-24}}

@article{Maqb07a,
  author = {Maqbool, Onaiza and Babri, Haroon},
  title = {Hierarchical Clustering for Software Architecture Recovery},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {33},
  pages = {759--780},
  publisher = {IEEE Press},
  year = {2007},
  doi = {10.1109/TSE.2007.70732},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {11}}

@inproceedings{Marc01a,
  author = {Andrian Marcus and Jonathan I. Maletic},
  title = {Identification of High-Level Concept Clones in Source Code},
  booktitle = {Proceedings of the 16th International Conference on Automated Software Engineering (ASE 2001)},
  pages = {107--114},
  year = {2001},
  month = nov}

@book{Marc02a,
  author = {Michele Marchesi and Giancarlo Succi and Don Wells and Laurie Williams},
  title = {Extreme Programming Perspectives},
  publisher = {Addison Wesley},
  year = {2002},
  isbn = {0-201-77005-9}}

@book{Marc03a,
  title = {Extreme Programming and Agile Processes in Software Engineering},
  publisher = {Springer},
  year = {2003},
  editor = {Michele Marchesi and Giancarlo Succi}}

@inproceedings{Marc03b,
  author = {Andrian Marcus and Jonathan Maletic},
  title = {Recovering Documentation-to-Source-Code Traceability Links using Latent Semantic Indexing},
  booktitle = {Proceedings of the 25th International Conference on Software Engineering (ICSE 2003)},
  pages = {125--135},
  year = {2003},
  month = may}

@inproceedings{Marc03c,
  author = {Andrian Marcus and Louis Feng and Jonathan I. Maletic},
  title = {{3D} Representations for Software Visualization},
  booktitle = {Proceedings of the ACM Symposium on Software Visualization},
  pages = {27-ff},
  publisher = {IEEE},
  year = {2003}}

@inproceedings{Marc03d,
  author = {Marcus, Andrian and Maletic, Jonathan I},
  title = {Recovering documentation-to-source-code traceability links using latent semantic indexing},
  booktitle = {Proceedings. 25th International Conference on Software Engineering},
  pages = {125--135},
  year = {2003},
  organization = {IEEE}}

@inproceedings{Marc04a,
  author = {Andrian Marcus and Andrey Sergeyev and Vaclav Rajlich and Jonathan Maletic},
  title = {An Information Retrieval Approach to Concept Location in Source Code},
  booktitle = {Proceedings of the 11th Working Conference on Reverse Engineering ({WCRE} 2004)},
  pages = {214--223},
  year = {2004},
  month = nov}

@inproceedings{Marc04b,
  author = {Guillaume Marceau and Gregory H. Cooper and Shriram Krishnamurthi and Steven P. Reiss},
  title = {A Dataflow Language for Scriptable Debugging},
  booktitle = {Proceedings of the 19th IEEE International Conference on Automated Software Engineering(ASE 2004)},
  year = {2004}}

@inproceedings{Marc05a,
  author = {Andrian Marcus and Denys Poshyvanyk},
  title = {The Conceptual Cohesion of Classes},
  booktitle = {Proceedings International Conference on Software Maintenance ({ICSM} 2005)},
  pages = {133--142},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  address = {Los Alamitos CA}}

@inproceedings{Marc05b,
  author = {Marcus, Andrian and Rajlich, V\'aclav and Buchta, Joseph and Petrenko, Maksym and Sergeyev, Andrey},
  title = {Static Techniques for Concept Location in Object-Oriented Code},
  booktitle = {Proceedings of the 13th International Workshop on Program Comprehension (IWPC'05)},
  year = {2005}}

@inproceedings{Marc05c,
  author = {Marcus, Andrian and Rajlich, V\'aclav},
  title = {Panel: Identification of Concepts, Features, and Concerns in Srource Code},
  booktitle = {Proceedings of the 21st International Conference on Software Maintenance ({ICSM}'05)},
  year = {2005}}

@article{Marc06a,
  author = {Guillaume Marceau and Gregory H. Cooper and Jonathan P. Spiro and Shriram Krishnamurthi and Steven P. Reiss},
  title = {The Design and Implementation of a Dataflow Language for Scriptable Debugging},
  journal = {Automated Software Engineering Journal},
  year = {2006}}

@article{Marc08a,
  author = {Andrian Marcus and Denys Poshyvanyk and Rudolf Ferenc},
  title = {Using the Conceptual Cohesion of Classes for Fault Prediction in Object-Oriented Systems},
  journal = {IEEE Transactions on Software Engineering},
  volume = {34},
  pages = {287--300},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {10.1109/TSE.2007.70768},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  number = {2}}

@article{Marc19a,
  author = {Marcozzi, Micha\"{e}l and Tang, Qiyi and Donaldson, Alastair F. and Cadar, Cristian},
  title = {Compiler fuzzing: how much does it matter?},
  journal = {Proceedings of the ACM on Programming Languages},
  pages = {155:1--155:29},
  year = {2019},
  url = {https://doi.org/10.1145/3360581},
  abstract = {Despite much recent interest in randomised testing (fuzzing) of compilers, the practical impact of fuzzer-found compiler bugs on real-world applications has barely been assessed. We present the first quantitative and qualitative study of the tangible impact of miscompilation bugs in a mature compiler. We follow a rigorous methodology where the bug impact over the compiled application is evaluated based on (1) whether the bug appears to trigger during compilation; (2) the extent to which generated assembly code changes syntactically due to triggering of the bug; and (3) whether such changes cause regression test suite failures, or whether we can manually find application inputs that trigger execution divergence due to such changes. The study is conducted with respect to the compilation of more than 10 million lines of C/C++ code from 309 Debian packages, using 12\% of the historical and now fixed miscompilation bugs found by four state-of-the-art fuzzers in the Clang/LLVM compiler, as well as 18 bugs found by human users compiling real code or as a by-product of formal verification efforts. The results show that almost half of the fuzzer-found bugs propagate to the generated binaries for at least one package, in which case only a very small part of the binary is typically affected, yet causing two failures when running the test suites of all the impacted packages. User-reported and formal verification bugs do not exhibit a higher impact, with a lower rate of triggered bugs and one test failure. The manual analysis of a selection of the syntactic changes caused by some of our bugs (fuzzer-found and non fuzzer-found) in package assembly code, shows that either these changes have no semantic impact or that they would require very specific runtime circumstances to trigger execution divergence.},
  keywords = {bug impact, Clang, compilers, fuzzing, LLVM, software testing},
  month = oct,
  number = {OOPSLA},
  urldate = {2021-06-25}}

@inproceedings{Mare12a,
  author = {Marek, Luk\'{a}\v{s} and Villaz\'{o}n, Alex and Zheng, Yudi and Ansaloni, Danilo and Binder, Walter and Qi, Zhengwei},
  title = {DiSL: A Domain-specific Language for Bytecode Instrumentation},
  booktitle = {Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development},
  pages = {239--250},
  publisher = {ACM},
  year = {2012},
  doi = {10.1145/2162049.2162077},
  acmid = {2162077},
  address = {New York, NY, USA},
  isbn = {978-1-4503-1092-5},
  keywords = {JVM, aspect-oriented programming, bytecode instrumentation, dynamic program analysis},
  location = {Potsdam, Germany},
  numpages = {12},
  series = {AOSD '12}}

@article{Mare13a,
  author = {Marek, Luk{\'a}{\v{s}} and Kell, Stephen and Zheng, Yudi and Bulej, Lubom{\'\i}r and Binder, Walter and T\u{u}ma, Petr and Ansaloni, Danilo and Sarimbekov, Aibek and Sewe, Andreas},
  title = {ShadowVM: Robust and comprehensive dynamic program analysis for the Java platform},
  journal = {ACM SIGPLAN Notices},
  volume = {49},
  pages = {105--114},
  publisher = {ACM New York, NY, USA},
  year = {2013},
  doi = {10.1145/2637365.2517219},
  number = {3}}

@inproceedings{Mari01a,
  author = {Radu Marinescu},
  title = {Detecting Design Flaws via Metrics in Object-Oriented Systems},
  booktitle = {Proceedings of TOOLS},
  pages = {173--182},
  year = {2001}}

@phdthesis{Mari02a,
  author = {Radu Marinescu},
  title = {Measurement and Quality in Object-Oriented Design},
  pages = {155},
  year = {2002},
  school = {Department of Computer Science, Politehnica University of Timi\c{s}oara}}

@book{Mari02b,
  author = {Marinescu, Floyd},
  title = {Ejb Design Patterns: Advanced Patterns, Processes, and Idioms with Poster},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2002},
  address = {New York, NY, USA},
  isbn = {0-471-20831-0}}

@inproceedings{Mari04a,
  author = {Radu Marinescu},
  title = {Detection Strategies: Metrics-Based Rules for Detecting Design Flaws},
  booktitle = {20th IEEE International Conference on Software Maintenance ({ICSM}'04)},
  pages = {350--359},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA},
  location = {Illinois, USA}}

@inproceedings{Mari04b,
  author = {Radu Marinescu and Daniel Ra\c{t}iu},
  title = {Quantifying the Quality of Object-Oriented Design: the Factor-Strategy Model},
  booktitle = {Proceedings 11th Working Conference on Reverse Engineering ({WCRE}'04)},
  pages = {192--201},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA}}

@inproceedings{Mari05a,
  author = {Cristina Marinescu and Radu Marinescu and Tudor G\^irba},
  title = {Towards a Simplified Implementation of Object-Oriented Design Metrics},
  booktitle = {METRICS 2005},
  pages = {110--119},
  year = {2005},
  url = {http://scg.unibe.ch/archive/papers/Mari05aSAIL.pdf},
  abstract = {To automatically analyze the code, the analyses must
be implemented as software programs. As analyses
become increasingly complex, implementing them using
imperative and interrogative programming is
oftentimes cumbersome. Consequently, the
understanding, testing and reuse of analyses is
severely hampered. In this paper we identify a set
of key mechanisms that are involved in the
implementation of any static analysis: navigation,
selection, set arithmetics, filtering and property
aggregation. We show that neither of the
aforementioned approaches offers a simple support
for these mechanisms and, as a result, an
undesirable overhead of complexity is added to the
implementation of most analyses. The paper
introduces SAIL, a language designed to offer a
proper support to a simplify writing of analyses. In
order to validate the expressiveness of SAIL the
paper provides a comprehensive comparison with the
other two approaches.}}

@inproceedings{Mari05b,
  author = {Cristina Marinescu and Radu Marinescu and Petru Mihancea and Daniel Ratiu and Richard Wettel},
  title = {{iPlasma}: An Integrated Platform for Quality Assessment of Object-Oriented Design},
  booktitle = {Proceedings of the 21st IEEE International Conference on Software Maintenance ({ICSM} 2005)},
  pages = {77-80},
  year = {2005},
  note = {Tool demo}}

@inproceedings{Mari06a,
  author = {Cristina Marinescu},
  title = {Identification of Design Roles for the Assessment of Design Quality in Enterprise Applications},
  booktitle = {Proceedings of International Conference on Program Comprehension ({ICPC} 2006)},
  pages = {169--180},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  doi = {10.1109/{ICPC}.2006.27},
  address = {Los Alamitos CA}}

@inproceedings{Mari06b,
  author = {Cristina Marinescu and Ioan Jurca},
  title = {A Meta-Model for Enterprise Applications},
  booktitle = {SYNASC '06: Proceedings of the Eighth International Symposium on Symbolic and Numeric Algorithms for Scientific Computing},
  pages = {187--194},
  publisher = {IEEE Computer Society},
  year = {2006},
  abstract = {In the last years, as object-oriented software
systems became more and more complex, the need of
performing automatically reverse engineering upon
these systems has increased significantly. This
applies also to enterprise applications, a novel
category of software systems. As it is well known,
one step toward a research infrastructure
accelerating the progress of reverse engineering is
the creation of an intermediate representation of
software systems. This paper shows why existing
intermediate representations of object-oriented
software are not suitable for performing reverse
engineering upon enterprise applications and
proposes an intermediate representation (a model)
for enterprise applications which facilitates the
process of reverse engineering upon this type of
applications. Based on an experimental study
conducted on three enterprise applications, we prove
the reliability of the introduced approach, discuss
its benefits and touch the issues that need to be
addressed in the future.},
  address = {Washington, DC, USA},
  isbn = {0-7695-2740-X}}

@article{Mari07a,
  author = {Marius Marin and Deursen, Arie van and Leon Moonen},
  title = {Identifying crosscutting concerns using fan-in analysis},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {17},
  pages = {1--37},
  year = {2007},
  issn = {1049-331X},
  number = {1}}

@inproceedings{Mari07b,
  author = {Cristina Marinescu},
  title = {{Identification of Relational Discrepancies between Database Schemas and Source-Code in Enterprise Applications}},
  booktitle = {Symbolic and Numeric Algorithms for Scientific Computing, 2007. SYNASC. International Symposium on},
  pages = {93-100},
  year = {2007},
  doi = {10.1109/SYNASC.2007.9},
  month = sep}

@article{Mari07c,
  author = {Cristina Marinescu},
  title = {Discovering the Objectual Meaning of Foreign Key Constraints in Enterprise Applications},
  journal = {Reverse Engineering, Working Conference on},
  volume = {0},
  pages = {100-109},
  publisher = {IEEE Computer Society},
  year = {2007},
  address = {Los Alamitos, CA, USA},
  issn = {1095-1350}}

@mastersthesis{Mari97a,
  author = {Radu Marinescu},
  title = {The Use of Software Metrics in the Design of Object-Oriented Systems},
  year = {1997},
  school = {University Politehnica Timi\c{s}oara --- Fakultat fur Informatik},
  month = oct,
  type = {Diploma thesis}}

@inproceedings{Mari98a,
  author = {Radu Marinescu},
  title = {Using Object-Oriented Metrics for Automatic Design Flaws in Large Scale Systems},
  booktitle = {Object-Oriented Technology (ECOOP '98 Workshop Reader)},
  volume = {1543},
  pages = {252--253},
  publisher = {Springer-Verlag},
  year = {1998},
  editor = {Serge Demeyer and Jan Bosch},
  series = {LNCS}}

@misc{Mari99a,
  author = {Brian Marick and John Smith and Mark Jones},
  title = {How to Misuse Code Coverage},
  year = {1999},
  url = {citeseer.ist.psu.edu/marick99how.html},
  date-added = {2007-02-01 10:03:07 +0100},
  date-modified = {2007-02-01 11:44:31 +0100},
  howpublished = {International Conference and International Conference and Exposition on Testing Computer Software},
  institution = {Reliable Software Technologies},
  month = {jun}}

@article{Mark05a,
  author = {Markovic, Slavisa and Baar, Thomas},
  title = {Refactoring {OCL} annotated {UML} class diagrams},
  journal = {Software and System Modeling},
  volume = {7},
  pages = {25--47},
  year = {2008},
  number = {1}}

@inproceedings{Mark06a,
  author = {Aiken, Mark and F\"{a}hndrich, Manuel and Hawblitzel, Chris and Hunt, Galen and Larus, James},
  title = {Deconstructing process isolation},
  booktitle = {MSPC '06: Proceedings of the 2006 workshop on Memory system performance and correctness},
  pages = {1--10},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1178597.1178599},
  address = {New York, NY, USA},
  isbn = {1-59593-578-9},
  location = {San Jose, California}}

@inproceedings{Mark07a,
  author = {Mark Harman},
  title = {The Current State and Future of Search Based Software Engineering},
  booktitle = {FOSE '07: 2007 Future of Software Engineering},
  pages = {342--357},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/FOSE.2007.29},
  address = {Washington, DC, USA},
  isbn = {0-7695-2829-5}}

@phdthesis{Mark88a,
  author = {K. Van Marke},
  title = {The Use and Implementation of the Representation Language KRS},
  year = {1988},
  school = {Vrije Universiteit Brussel},
  month = apr,
  type = {{PhD} thesis}}

@inproceedings{Marl04a,
  author = {Marlow, Simon and Jones, Simon Peyton and Thaller, Wolfgang},
  title = {Extending the Haskell Foreign Function Interface with Concurrency},
  booktitle = {Proceedings of the 2004 ACM SIGPLAN Workshop on Haskell},
  publisher = {ACM},
  year = {2004},
  doi = {10.1145/1017472.1017479},
  isbn = {1581138504}}

@inproceedings{Marl96a,
  author = {Chris Marlin},
  title = {Multiple views based on unparsing canonical representations---the {MultiView} architecture},
  booktitle = {Joint proceedings of the second international software architecture workshop (ISAW-2) and international workshop on multiple perspectives in software development (Viewpoints '96)},
  pages = {222--226},
  publisher = {ACM Press},
  year = {1996},
  doi = {10.1145/243327.243668},
  address = {New York, NY, USA},
  isbn = {0-89791-867-3},
  location = {San Francisco, California, United States}}

@inproceedings{Maro08a,
  author = {Antoine Marot and Roel Wuyts},
  title = {Composability of aspects},
  booktitle = {SPLAT '08: Proceedings of the 2008 AOSD workshop on Software engineering properties of languages and aspect technologies},
  pages = {1--6},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1408647.1408652},
  address = {New York, NY, USA},
  isbn = {978-1-60558-144-6},
  location = {Brussels, Belgium}}

@inproceedings{Marq00a,
  author = {Alonso Marquez and Stephen M Blackburn and Gavin Mercer and John Zigman},
  title = {Implementing Orthogonally Persistent {Java}},
  booktitle = {In Proceedings of the Workshop on Persistent Object Systems (POS},
  pages = {218--232},
  year = {2000}}

@inproceedings{Marq05a,
  author = {Marquet, Kevin and Courbot, Alexandre and Grimaud, Gilles},
  title = {Ahead of Time Deployment in ROM of a Java-OS},
  booktitle = {Proceedings of the Second International Conference on Embedded Software and Systems},
  pages = {63--70},
  publisher = {Springer-Verlag},
  year = {2005},
  doi = {10.1007/11599555_9},
  acmid = {2113450},
  address = {Berlin, Heidelberg},
  isbn = {3-540-30881-4, 978-3-540-30881-2},
  location = {Xi'an, China},
  numpages = {8},
  series = {ICESS'05}}

@inproceedings{Marq89a,
  author = {Jos\'e Alves Marques and Paulo Guedes},
  title = {Extending the Operating System to Support an Object-Oriented Environment},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {113--122},
  year = {1989},
  month = oct}

@mastersthesis{Marr08a,
  author = {Marr, Stefan},
  title = {Modularisierung Virtueller Maschinen},
  year = {2008},
  school = {Hasso Plattner Institute},
  pdf = {http://stefan-marr.de/downloads/Masterarbeit-Modularisierung-virtueller-Maschinen.pdf},
  address = {Germany},
  series = {Master Thesis}}

@inproceedings{Marr09a,
  author = {Marri, M. R. and Thummalapenta, S. and Xie, Tao},
  title = {Improving software quality via code searching and mining},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {33--36},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070018},
  doi = {10.1109/SUITE.2009.5070018},
  abstract = {Enormous amount of open source code is available on
the Internet and various code search engines (CSE)
are available to serve as a means for searching in
open source code. However, usage of CSEs is often
limited to simple tasks such as searching for
relevant code examples. In this paper, we present a
generic life-cycle model that can be used to improve
software quality by exploiting CSEs. We present
three example software development tasks that can be
assisted by our life-cycle model and show how these
three tasks can contribute to improve the software
quality. We also show the application of our
life-cycle model with a preliminary evaluation.}}

@inproceedings{Marr11a,
  author = {Marr, Stefan and De Wael, Mattias and Haupt, Michael and D'Hondt, Theo},
  title = {Which Problems Does a Multi-Language Virtual Machine Need to Solve in the Multicore/Manycore Era?},
  booktitle = {Proceedings of the 5th Workshop on Virtual Machines and Intermediate Languages},
  pages = {341--348},
  publisher = {ACM},
  year = {2011},
  url = {http://www.stefan-marr.de/2011/09/which-problems-does-a-multi-language-virtual-machine-need-to-solve-in-the-multicoremanycore-era/},
  doi = {10.1145/2095050.2095104},
  pdf = {http://www.stefan-marr.de/downloads/vmil11-smarr-et-al-which-problems-does-a-multi-language-virtual-machine-need-to-solve-in-the-multicore-manycore-era.pdf},
  blog = {http://stefan-marr.de/2011/09/which-problems-does-a-multi-language-virtual-machine-need-to-solve-in-the-multicoremanycore-era/},
  isbn = {978-1-4503-1183-0},
  keywords = {Concurrency Encapsulation ManyCore MeMyPublication MultiCore PositionPaper Scheduling Survey VMIL VMs myown},
  location = {Portland, Oregon, USA},
  month = oct,
  series = {VMIL '11}}

@phdthesis{Marr13a,
  author = {Marr, Stefan},
  title = {Supporting Concurrency Abstractions in High-level Language Virtual Machines},
  publisher = {VUBPress},
  year = {2013},
  school = {Software Languages Lab, Vrije Universiteit Brussel},
  pdf = {http://www.stefan-marr.de/downloads/marr-phd-2013-supporting-concurrency-abstractions-in-high-level-language-virtual-machines.pdf},
  address = {Pleinlaan 2, B-1050 Brussels, Belgium},
  blog = {http://stefan-marr.de/2013/01/supporting-concurrency-abstractions-in-high-level-language-virtual-machines/},
  isbn = {978-90-5718-256-3},
  keywords = {Concurrency Domains MOP MeMyPublication MetaObjectProtocol OMOP Ownership VMs VirtualMachine myown},
  month = jan,
  series = {SOFT PhD}}

@inproceedings{Marr16a,
  author = {Marr, Stefan and Daloze, Benoit and M\"{o}ssenb\"{o}ck, Hanspeter},
  title = {Cross-Language Compiler Benchmarking: Are We Fast Yet?},
  booktitle = {Proceedings of the 12th Symposium on Dynamic Languages},
  pages = {120-131},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {https://doi.org/10.1145/2989225.2989232},
  doi = {10.1145/2989225.2989232},
  abstract = {Comparing the performance of programming languages is difficult because they differ in many aspects including preferred programming abstractions, available frameworks, and their runtime systems. Nonetheless, the question about relative performance comes up repeatedly in the research community, industry, and wider audience of enthusiasts. This paper presents 14 benchmarks and a novel methodology to assess the compiler effectiveness across language implementations. Using a set of common language abstractions, the benchmarks are implemented in Java, JavaScript, Ruby, Crystal, Newspeak, and Smalltalk. We show that the benchmarks exhibit a wide range of characteristics using language-agnostic metrics. Using four different languages on top of the same compiler, we show that the benchmarks perform similarly and therefore allow for a comparison of compiler effectiveness across languages. Based on anecdotes, we argue that these benchmarks help language implementers to identify performance bugs and optimization potential by comparing to other language implementations.},
  address = {New York, NY, USA},
  isbn = {9781450344456},
  keywords = {Languages, Benchmarking, Virtual Machines},
  location = {Amsterdam, Netherlands},
  numpages = {12},
  series = {DLS 2016}}

@inproceedings{Marr17a,
  author = {Marr, Stefan and Lopez, Carmen and Aumayr, Dominik and Gonzalez Boix, Elisa and Mossenbock, Hanspeter},
  title = {Kompos: A Platform for Debugging Complex Concurrent Applications},
  booktitle = {Programming'17},
  pages = {1-2},
  year = {2017},
  doi = {10.1145/3079368.3079378},
  month = {apr}}

@book{Marr98a,
  author = {Kim Marriot and Peter J. Stuckey},
  title = {Programming with constraints},
  publisher = {The Microsoft Press},
  year = {1998}}

@misc{MarrS18a,
  author = {Marr, Stefan},
  doi = {10.5281/zenodo.1311762},
  month = {aug},
  note = {Version 1.0},
  publisher = {GitHub},
  title = {ReBench: Execute and Document Benchmarks Reproducibly},
  year = {2018}
}

@techreport{Mars05a,
  author = {Philippe Marschall},
  title = {Detecting the Methods under Test in {Java}},
  year = {2005},
  url = {http://scg.unibe.ch/archive/projects/Mars05a.pdf},
  abstract = {Unit tests are a well accepted part of software
engineering. JUnit is the de facto standard for unit
testing in Java. It collects, organizes and runs
tests. Each test focuses on one or several methods.
These are called the methods under test. They can be
used for a variety of tasks including test
navigation, test coverage and test analysis in
general. There are no rules for determining on which
methods a test focuses. Sometimes it is obvious, but
there are cases where we cannot say on which methods
a test focuses. Among others we observed two test
patterns that look similar but are the inverse of
each other. The first consists of an initial setup
method and then focuses on one or several methods.
The second one invokes the focused method first and
then uses accessors to test the side effects. As a
result there are no established and foolproof ways
to detect the methods under test automatically. In
the following we discuss several different,
automated ways of detecting the methods under test.
Because there are no rules to determine the methods
under test, automatically detecting them can never
be fully accurate. But we search for different
approaches and try to find out how effective they
are. First we present several different ways to
annotate a test with its methods under test and
choose one of them to annotate the tests of some
case studies. We also build a tool that allows us to
query these methods and their annotations. Afterward
we describe ways to automatically detect the methods
under test. The first one called NameAnalyzer looks
at the names of tests and test cases and uses naming
conventions to determine the methods under test. We
also parse the source code of a test and try to
extract all methods the test directly invokes.
Because this results in a lot of false positives we
build a heuristic extension to reduce this noise. We
run each of these approaches for analysis on some
case studies and validate their output against the
annotations described in the first section. Finally
we discuss these results, judge the approaches by
how effective they are in detecting the methods
under test, and conclude.},
  institution = {University of Bern},
  month = apr,
  type = {Informatikprojekt}}

@mastersthesis{Mars06a,
  author = {Philippe Marschall},
  title = {{Persephone}: Taking {Smalltalk} Reflection to the sub-method Level},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Mars06a.pdf},
  abstract = {Smalltalk traditionally has good support for
structural reflection. This comes from the fact that
classes are first class, high level objects. This
reflection support has allowed Smalltalk
implementations to build tools decades ago that
surpass those of many other languages today. These
tools are basically a user interface for
introspection and intercession. The reflective
facilities of Smalltalk are not only used by tools
but also by Smalltalk developers for
metaprogramming. However the Smalltalk reflection
support stops at the method border. The only first
class models for reflection at the sub-method level
Smalltalk supports are collections of bytes or
characters. This prevents tools from truly looking
into the method and makes it hard to create a new
generation of tools that go beyond the five pane
browser and work at the sub-method level. It also
prevents Smalltalk developers from doing
metaprogramming at a sub-method level. We present
reflective methods: a first class, high level
abstraction of a method that supports rich
structural reflection at the sub-method level and
show how it eases metaprogramming and the creation
of tools at the sub-method level such as a pluggable
type checker.},
  month = dec,
  type = {Master's Thesis}}

@techreport{Mars98a,
  author = {P. Marsura and D. Riehle},
  title = {Design and Implementation of the {Java} Any Framework},
  year = {1998},
  institution = {Union Bank of Switzerland},
  number = {98.5.1},
  type = {Ubilab technical report}}

@book{Mart00a,
  author = {Didier Martin, Mark Birbeck, et al.},
  title = {Professional XML},
  publisher = {Wrox Press Ltd.},
  year = {2000}}

@misc{Mart00b,
  author = {Robert C. Martin},
  title = {Design Principles and Design Patterns},
  year = {2000},
  abstract = {"What goes wrong with software?" A brief explanation
of the ten Principles of OOD with supporting
patterns.},
  note = {www.objectmentor.com}}

@inproceedings{Mart01a,
  author = {Ludger Martin},
  title = {HotAgent Component Assembly Editor},
  booktitle = {Workshop on Composition Languages, WCL '01},
  pages = {25--32},
  year = {2001},
  url = {http://www.cs.iastate.edu/~lumpe/WCL2001/},
  address = {Vienna, Austria},
  month = sep}

@inproceedings{Mart02,
  author = {Martin, Johannes and Muller, Hausi A},
  title = {C to java migration experiences},
  booktitle = {Proceedings of the Sixth European Conference on Software Maintenance and Reengineering},
  pages = {143--153},
  year = {2002},
  organization = {IEEE}}

@inproceedings{Mart02a,
  author = {Ludger Martin and Anke Giesl and Johannes Martin},
  title = {Dynamic Component Program Visualization},
  booktitle = {Proceedings of {WCRE} 2002 (Working Conference on Reverse Engineering)},
  year = {2002}}

@book{Mart02b,
  author = {Robert Cecil Martin},
  title = {Agile Software Development. Principles, Patterns, and Practices},
  publisher = {Prentice-Hall},
  year = {2002},
  isbn = {0-13-914556-7}}

@misc{Mart02c,
  author = {Robert C. Martin},
  title = {SRP: The Single Responsibility Principle},
  year = {2002},
  url = {http://www.objectmentor.com/resources/articles/srp.pdf},
  note = {www.objectmentor.com}}

@inproceedings{Mart02d,
  author = {Martin, Johannes and Muller, Hausi A},
  title = {C to java migration experiences},
  booktitle = {Proceedings of the Sixth European Conference on Software Maintenance and Reengineering},
  pages = {143--153},
  year = {2002},
  organization = {IEEE}}

@book{Mart03a,
  author = {Robert C. Martin},
  title = {Agile Software Development: principles, patterns and practices},
  publisher = {Prentice-Hall},
  year = {2003}}

@misc{Mart03b,
  author = {Robert C. Martin},
  title = {Are Dynamic Languages Going to Replace Static Languages?},
  year = {2003},
  url = {http://www.artima.com/weblogs/viewpost.jsp?thread=4639},
  key = {Mart03b},
  note = {http://www.artima.com/weblogs/viewpost.jsp?thread=4639}}

@inproceedings{Mart05a,
  author = {Mickael Martin and Benjamin Livshits and Monica S. Lam},
  title = {Finding application errors and security flaws using PQL: a program query language},
  booktitle = {Proceedings of Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'05)},
  pages = {363--385},
  publisher = {ACM Press},
  year = {2005},
  address = {New York, NY, USA}}

@inproceedings{Mart05b,
  author = {Marticorena, Ra{\'u}l},
  title = {Analysis and Definition of a Language Independent Refactoring Catalog},
  booktitle = {Conference on Advanced Information Systems Engineering. Doctoral Consortium},
  pages = {8--16},
  year = {2005},
  url = {https://api.semanticscholar.org/CorpusID:11068299},
  month = jan}

@misc{Mart05c,
  author = {Robert C. Martin},
  title = {The Tipping Point: Stability and Instability in OO Design},
  year = {2005},
  url = {http://www.ddj.com/architect/184415285},
  note = {Software Development}}

@inproceedings{Mart06a,
  author = {Martin, Miquel and Nurmi, Petteri},
  title = {A Generic Large Scale Simulator for Ubiquitous Computing (poster)},
  booktitle = {MobiQuitous'06: Proceedings of the 3rd International Conference on Mobile and Ubiquitous Systems: Networking \& Services},
  pages = {1--3},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/MOBIQ.2006.340388},
  address = {San Jose, CA, USA},
  owner = {Miquel Martin}}

@misc{Mart09a,
  author = {Robert Martin},
  title = {What Killed {Smalltalk} Could Kill {Ruby}, Too},
  url = {http://blip.tv/file/2089545},
  note = {(RailsConf 09 -- http://blip.tv/file/2089545)}}

@book{Mart09b,
  author = {Martin, Robert C},
  title = {Clean code: a handbook of agile software craftsmanship},
  publisher = {Pearson Education},
  year = {2009}}

@inproceedings{Mart10c,
  author = {Martignoni, Lorenzo and Paleari, Roberto and Fresi Roglia, Giampaolo and Bruschi, Danilo},
  title = {Testing System Virtual Machines},
  booktitle = {International Symposium on Software Testing and Analysis},
  year = {2010},
  keywords = {automatic test generation, emulation, fuzzing, software testing, virtualization}}

@article{Mart13z,
  author = {Martinez, Matias and Monperrus, Martin},
  title = {Mining software repair models for reasoning on the search space of automated program fixing},
  journal = {Empirical Software Engineering},
  pages = {1-30},
  publisher = {Springer},
  year = {2013},
  url = {http://dx.doi.org/10.1007/s10664-013-9282-8},
  doi = {10.1007/s10664-013-9282-8},
  issn = {1382-3256}}

@article{Mart14,
  author = {Martins, Luiz G.A. and Nobre, Ricardo and Delbem, Alexandre C.B. and Marques, Eduardo and Cardoso, Jo\~{a}o M.P.},
  title = {Exploration of Compiler Optimization Sequences Using Clustering-Based Selection},
  journal = {SIGPLAN Not.},
  volume = {49},
  pages = {63–72},
  publisher = {Association for Computing Machinery},
  year = {2014},
  url = {https://doi.org/10.1145/2666357.2597821},
  doi = {10.1145/2666357.2597821},
  issue_date = {May 2014},
  address = {New York, NY, USA},
  number = {5},
  issn = {0362-1340},
  abstract = {Due to the large number of optimizations provided in modern compilers and to compiler optimization specific opportunities, a Design Space Exploration (DSE) is necessary to search for the best sequence of compiler optimizations for a given code fragment (e.g., function). As this exploration is a complex and time consuming task, in this paper we present DSE strategies to select optimization sequences to both improve the performance of each function and reduce the exploration time. The DSE is based on a clustering approach which groups functions with similarities and then explore the reduced search space provided by the optimizations previously suggested for the functions in each group. The identification of similarities between functions uses a data mining method which is applied to a symbolic code representation of the source code. The DSE process uses the reduced set identified by clustering in two ways: as the design space or as the initial configuration. In both ways, the adoption of a pre-selection based on clustering allows the use of simple and fast DSE algorithms. Our experiments for evaluating the effectiveness of the proposed approach address the exploration of compiler optimization sequences considering 49 compilation passes and targeting a Xilinx MicroBlaze processor, and were performed aiming performance improvements for 41 functions. Experimental results reveal that the use of our new clustering-based DSE approach achieved a significant reduction on the total exploration time of the search space (18x over a Genetic Algorithm approach for DSE) at the same time that important performance speedups (43% over the baseline) were obtained by the optimized codes.},
  month = {jun},
  numpages = {10},
  keywords = {compilers, phase-ordering problem, design space exploration, clustering}}

@article{Mart14a,
  author = {Matias Martinez and Westley Weimer and Martin Monperrus},
  title = {Do the Fix Ingredients Already Exist? An Empirical Inquiry into the Redundancy Assumptions of Program Repair Approaches},
  journal = {CoRR},
  volume = {abs/1403.6322},
  year = {2014},
  url = {http://arxiv.org/abs/1403.6322},
  timestamp = {Tue, 01 Apr 2014 11:56:46 +0200}}

@inproceedings{Mart15a,
  author = {Martinez, S{\'e}bastien and DAGNAT, Fabien and Buisson, J{\'e}r{\'e}my},
  title = {Pymoult : On-Line Updates for Python Programs},
  booktitle = {{ICSEA 2015 : 10th International Conference on Software Engineering Advances}},
  pages = {80 - 85},
  year = {2015},
  url = {https://hal.archives-ouvertes.fr/hal-01247603},
  address = {Barcelone, Spain},
  hal-id = {hal-01247603},
  keywords = {On-line updates ; Python ; Software maintenance},
  month = nov}

@inproceedings{Mart18a,
  author = {Martens, Daniel and Maalej, Walid},
  title = {ReviewChain: Untampered Product Reviews on the Blockchain},
  booktitle = {1st International Workshop on Emerging Trends in Software Engineering for Blockchain (WETSEB)},
  year = {2018},
  month = {may}}

@article{Mart18b,
  author = {M{\'a}rton, G{\'a}bor and Porkol{\'a}b, Zolt{\'a}n},
  title = {Selective friends in C++},
  journal = {Software: Practice and Experience},
  volume = {48},
  pages = {1493-1519},
  year = {2018},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2587},
  doi = {https://doi.org/10.1002/spe.2587},
  keywords = {C++ programming language, encapsulation, friend, selective friend},
  number = {8}}

@techreport{Mart82a,
  author = {Pat Martin and Dennis Tsichritzis},
  title = {A Message Management Model},
  pages = {63--77},
  year = {1982},
  institution = {University of Toronto},
  month = may,
  number = {CSRG-143},
  type = {Alpha-Beta, Technical Report}}

@phdthesis{Mart84a,
  author = {T. Patrick Martin},
  title = {A Communication Model for Message Management Systems},
  year = {1984},
  school = {Department of Computer Science, University of Toronto},
  type = {{Ph.D}. Thesis}}

@inproceedings{Mart89a,
  author = {N. Mart\'i-Oliet and Jos\'e Meseguer},
  title = {From Petri Nets to Linear Logic},
  booktitle = {Proceedings, Category Theory and Computer Science},
  volume = {389},
  pages = {313--340},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Manchester},
  editor = {D. Pitt et al.},
  month = sep,
  series = {LNCS}}

@techreport{Mart91a,
  author = {Pat Martin and Simon Gibbs},
  title = {Software Clearinghouses --- Form and Function},
  pages = {239--254},
  year = {1991},
  abstract = {Software clearinghouses are repositories of software
and software-related information. A software
clearinghouse is accessible by members of an
associated software community and serves to
facilitate the exchange and dissemination of
information within the community. This paper
describes a variety of both existing and possible
clearinghouses and establishes a set of criteria by
which these clearinghouses can be evaluated.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@incollection{Mart91b,
  author = {A. Martelli and P-L. Ianchini},
  title = {RobinHOOD (Reuse Objects in {HOOD})},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@inproceedings{Mart94c,
  author = {Robert C. Martin},
  title = {OO Design Quality Metrics -- An Analysis of Dependencies},
  booktitle = {Workshop on Pragmatic and Theoretical Directions in Object-Oriented Software Metrics, OOPSLA?94},
  year = {1994},
  url = {http://www.objectmentor.com/resources/articles/oodmetrc.pdf},
  month = oct}

@misc{Mart96a,
  author = {Robert C. Martin},
  title = {Granularity},
  year = {1996},
  url = {http://www.objectmentor.com/resources/articles/granularity.PDF},
  abstract = {release equivalency, common closure, common reuse,
and acylclic dependencies principles.},
  note = {www.objectmentor.com}}

@book{Mart98a,
  title = {Pattern Languages of Program Design 3},
  publisher = {Addison Wesley},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann},
  isbn = {0-201-31011-2}}

@inproceedings{Maru03a,
  author = {Kazutaka Maruyama and Minoru Terada},
  title = {Debugging with Reverse Watchpoint},
  booktitle = {Proceedings of the Third International Conference on Quality Software (QSIC'03)},
  pages = {116},
  publisher = {IEEE Computer Society},
  year = {2003},
  address = {Washington, DC, USA},
  isbn = {0-7695-2015-4}}

@inproceedings{Maru87a,
  author = {Takeo Maruichi and Tetsuya Uchiki and Mario Tokoro},
  title = {Behavioral Simulation Based on Knowledge Objects},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {213--222},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@techreport{Masi89a,
  author = {{Centre de Recherche en Informatique de Nancy, Vandoeuvre-l\`es-Nancy}},
  title = {Les Mardis Objets du {CRIN}, 20 Oct. 1987 --- 31 Mai 1988},
  year = {1989},
  editor = {G. Masini and Amedeo Napoli and D. Colnet D. L\'eonard and Karl Tombre},
  institution = {Centre de Recherche en Informatique de Nancy, Vandoeuvre-l\`es-Nancy},
  number = {89-R-072)},
  type = {(CRIN}}

@article{Maso01a,
  author = {Mason John H., Watson Anne},
  title = {Getting Students To Create Boundary Examples},
  journal = {MSOR Connections},
  volume = {1},
  pages = {9--11},
  year = {2001},
  url = {http://ltsn.mathstore.ac.uk/newsletter/feb2001/pdf/boundary.pdf},
  number = {1}}

@article{Maso83a,
  author = {R.E.A. Mason and T.T. Carey},
  title = {Prototyping Interactive Information Systems},
  journal = {CACM},
  volume = {26},
  pages = {347--354},
  year = {1983}}

@book{Mass05a,
  author = {Vincent Massol and Timothy M. O'Brien},
  title = {Maven: A developer's Notebook},
  publisher = {O'Reilly},
  year = {2005},
  isbn = {0-596-00750-7}}

@incollection{Masu03a,
  author = {Masuhara, H. and Kiczales, G. and Dutchyn, C.},
  title = {A Compilation and Optimization Model for Aspect-Oriented Programs},
  booktitle = {Compiler Construction},
  volume = {2622},
  pages = {46-60},
  publisher = {Springer Berlin / Heidelberg},
  year = {2003},
  affiliation = {University of Tokyo Graduate School of Arts and Sciences Tokyo},
  editor = {Hedin, G\"orel},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Masu92a,
  author = {Hidehiko Masuhara and Satoshi Matsuoka and Takuo Watanabe and Akinori Yonezawa},
  title = {Object-Oriented Concurrent Reflective Languages can be Implemented Efficiently},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {127--144},
  year = {1992},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/papers/oopsla92-abclr2.ps.gz},
  month = oct}

@inproceedings{Masu95a,
  author = {Hidehiko Masuhara and Satoshi Matsuoka Kenichi Asai and Akinori Yonezawa},
  title = {{Compiling Away the Meta-Level in Object-Oriented Concurrent Reflective Languages Using Partial Evaluation }},
  booktitle = {Proceedings of OOPSLA '95},
  pages = {300--315},
  year = {1995},
  address = {Austin},
  month = oct,
  organization = {ACM}}

@misc{Mate21,
  author = {Bruno Gois Mateus and Matias Martinez and Christophe Kolski},
  title = {An experience-based recommendation system to support migrations of Android applications from Java to Kotlin},
  year = {2021},
  archiveprefix = {arXiv},
  eprint = {2103.09728},
  primaryclass = {cs.SE}}

@inproceedings{Math05a,
  author = {Kirsten Matheus and Rolf Morich and Cornelius Menig and Andreas L\"{u}bke and Bernd Rech and Will Specks},
  title = {Car-to-Car Communication - Market Introduction and Success Factors},
  booktitle = {In the Proceedings of the 5th European Congress and Exhibition on Intelligent Transport Systems and Services (ITS'05)},
  year = {2005}}

@inproceedings{Math94a,
  author = {L. Mathiassen and A. Munk-Madsen and P. A. Nielsen and J. Stage},
  title = {Combining two Approaches to Object-Oriented Analysis},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {158--170},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@book{Mats01a,
  author = {Yukihiro Matsumoto},
  title = {Ruby in a Nutshell},
  publisher = {O'Reilly},
  year = {2001},
  isbn = {0596002149}}

@inproceedings{Mats14a,
  author = {Matsakis, Nicholas D and Klock II, Felix S},
  title = {The Rust Language},
  booktitle = {ACM SIGAda Ada Letters},
  volume = {34},
  pages = {103--104},
  year = {2014},
  organization = {ACM}}

@inproceedings{Mats88a,
  author = {Satoshi Matsuoka and Satoru Kawai},
  title = {Using Tuple Space Communication in Distributed Object-Oriented Languages},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {276--284},
  year = {1988},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/papers/oopsla88-tuplespace.ps.gz},
  month = nov}

@unpublished{Mats90a,
  author = {Satoshi Matsuoka and Ken Wakita and Akinori Yonezawa},
  title = {Analysis of Inheritance Anomaly in Concurrent Object-Oriented Languages},
  year = {1990},
  note = {Submitted to ECOOP/OOPSLA 90 workshop on Object-Based Concurrent Systems}}

@inproceedings{Mats91a,
  author = {Satoshi Matsuoka and Takuo Watanabe and Akinori Yonezawa},
  title = {Hybrid Group Reflective Architecture for Object-Oriented Concurrent Reflective Programming},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {231--250},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/papers/ecoop91-abclr2.ps.gz},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Mats91b,
  author = {Satoshi Matsuoka and Ken Wakita and Akinori Yonezawa},
  title = {On Inheritance in Concurrent Object-Oriented Languages},
  booktitle = {Proceedings of 7th Annual Conference of Japan Society for Software Science and Technology (JSSST)},
  volume = {742},
  pages = {65--68},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Tokyo, Japan},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Mats92a,
  author = {Satoshi Matsuoka and Takuo Watanabe and Yuuji Ichisugi and Akinori Yonezawa},
  title = {Object-Oriented Concurrent Reflective Architectures},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {211--226},
  publisher = {Springer-Verlag},
  year = {1992},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/papers/obcp91-reflective.ps.gz},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@inproceedings{Mats93a,
  author = {Satoshi Matsuoka and Kenjiro Taura and Akinori Yonezawa},
  title = {Highly Efficient and Encapsulated Re-use of Synchronization Code in Concurrent Object-Oriented Languages},
  booktitle = {Proceedings OOPSLA '93},
  volume = {28},
  pages = {109--126},
  year = {1993},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/papers/oopsla93-concurrency-reuse.ps.gz},
  month = oct,
  series = {ACM SIGPLAN Notices}}

@incollection{Mats93b,
  author = {Satoshi Matsuoka and Akinori Yonezawa},
  title = {Analysis of Inheritance Anomaly in Object-Oriented Concurrent Programming Languages},
  booktitle = {Research Directions in Concurrent Object-Oriented Programming},
  pages = {107--150},
  publisher = {MIT Press},
  year = {1993},
  editor = {G. Agha and P. Wegner and A. Yonezawa}}

@incollection{Matt00a,
  author = {F. Mattern and P. Hasselmeyer and J. Smith and P. Cianciarini and D. Milojicic},
  title = {Agent Technology and Active Networking},
  booktitle = {Seminaire de printemps du 3eme cycle romand d'informatique},
  publisher = {3\`eme cycle romand d'informatique},
  year = {2000}}

@article{Matt02a,
  author = {Friedemann Mattern},
  title = {Zur Evaluation der Informatik mittels bibliometrischer Analyse},
  journal = {Informatik-Spektrum},
  volume = {25},
  pages = {22--32},
  year = {2002},
  url = {http://www.vs.inf.ethz.ch/publ/papers/bibliometro.pdf},
  number = {1}}

@article{Matt03a,
  author = {Jacob Matthews and Robert Bruce Findler and Paul Graunke and Shriram Krishnamurthi and Matthias Felleisen},
  title = {Automatically Restructuring Programs for the Web},
  journal = {Automated Software Engineering: An International Journal},
  year = {2003}}

@inproceedings{Matt04a,
  author = {Jacob Matthews and Robert Bruce Findler and Matthew Flatt and Matthias Felleisen},
  title = {A Visual Environment for Developing Context-Sensitive Term Rewriting Systems},
  booktitle = {In Proceedings of the International Conference on Rewriting Techniques and Applications (RTA) 2004},
  year = {2004},
  url = {http://people.cs.uchicago.edu/~robby/pubs/papers/rta2004-mfff.pdf}}

@inproceedings{Matt05a,
  author = {Julio C. B. Mattos and Emilena Specht and Bruno Neves and Luigi Carro},
  title = {Making object oriented efficient for embedded system applications},
  booktitle = {SBCCI '05: Proceedings of the 18th annual symposium on Integrated circuits and system design},
  pages = {104--109},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1081081.1081111},
  address = {New York, NY, USA},
  isbn = {1-59593-174-0},
  location = {Florianolpolis, Brazil}}

@article{Matt07a,
  author = {Jacob Matthews and Robert Bruce Findler},
  title = {Operational semantics for multi-language programs},
  journal = {SIGPLAN Not.},
  volume = {42},
  pages = {3--10},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1190215.1190220},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {1}}

@inproceedings{Matt09a,
  author = {Dominique Matter and Adrian Kuhn and Oscar Nierstrasz},
  title = {Assigning Bug Reports using a Vocabulary-Based Expertise Model of Developers},
  booktitle = {MSR '09: Proceedings of the 2009 6th IEEE International Working Conference on Mining Software Repositories},
  pages = {131--140},
  publisher = {IEEE},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Matt09aAssigningBugreports.pdf},
  doi = {10.1109/MSR.2009.5069491},
  abstract = {For popular software systems, the number of daily
submitted bug reports is high. Triaging these
incoming reports is a time consuming task. Part of
the bug triage is the assignment of a report to a
developer with the appropriate expertise. In this
paper, we present an approach to automatically
suggest developers who have the appropriate
expertise for handling a bug report. We model
developer expertise using the vocabulary found in
their source code contributions and compare this
vocabulary to the vocabulary of bug reports. We
evaluate our approach by comparing the suggested
experts to the persons who eventually worked on the
bug. Using eight years of Eclipse development as a
case study, we achieve 33.6\% top-1 precision and
71.0\% top-10 recall.},
  location = {Vancouver, Canada},
  medium = {2}}

@mastersthesis{Matt09b,
  author = {Dominique Matter},
  title = {Who Knows about That Bug? --- Automatic Bug Report Assignment with a Vocabulary-Based Developer Expertise Model},
  year = {2009},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Matt09b.pdf},
  abstract = {For popular software systems, the number of daily
submitted bug reports is high. Triaging these
incoming reports is a time consuming task. Part of
the bug triage is the assignment of a report to a
developer with the appropriate expertise. In this
thesis, we present an approach to automatically
suggest developers who have the appropriate
expertise for handling a bug report. We model
developer expertise using the vocabulary found in
their source code contributions and compare this
vocabulary to the vocabulary of bug reports. We
evaluate our approach by comparing the suggested
experts to the persons who eventually worked on the
bug. Using eight years of Eclipse development as a
case study, we achieve 33.6\% top-1 precision and
71.0\% top-10 recall. Validating these results with
a case study on four years of Gnome/Evolution
development, we achieve 19.2\% top-1 precision and
64.7\% top-10 recall.},
  month = jun,
  type = {Master's Thesis}}

@inproceedings{Matt15a,
  author = {Mattis, Toni and Henning, Johannes and Rein, Patrick and Hirschfeld, Robert and Appeltauer, Malte},
  title = {Columnar Objects: Improving the Performance of Analytical Applications},
  booktitle = {2015 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software (Onward!)},
  pages = {197-210},
  publisher = {Association for Computing Machinery},
  year = {2015},
  url = {https://doi.org/10.1145/2814228.2814230},
  doi = {10.1145/2814228.2814230},
  address = {New York, NY, USA},
  isbn = {9781450336888},
  keywords = {Just-in-Time Compilation, Column-oriented Object Layout, Dynamic Languages, Data Science},
  location = {Pittsburgh, PA, USA},
  numpages = {14},
  series = {Onward! 2015}}

@article{Matt17a,
  author = {Toni Mattis and Patrick Reinand Robert Hirschfeld},
  title = {Edit Transactions: Dynamically Scoped Change Sets for Controlled Updates in Live Programming},
  journal = {Journal on The Art, Science, and Engineering of Programming},
  volume = {1},
  year = {2017},
  number = {2}}

@inproceedings{Matt97a,
  author = {Michael Mattsson and Jan Bosch},
  title = {Framework Composition: Problems, Causes and Solutions},
  booktitle = {Proceedings of TOOLS USA '97},
  year = {1997},
  month = jul}

@techreport{Matu03a,
  author = {Martin Matula},
  title = {NetBeans Metadata Repository},
  year = {2003},
  url = {http://mdr.netbeans.org/MDR-whitepaper.pdf},
  institution = {NetBeans},
  month = mar}

@article{Matw85a,
  author = {Stan Matwin and Tomasz Pietrzykowski},
  title = {PROGRAPH: a preliminary report},
  journal = {Comput. Lang.},
  volume = {10},
  pages = {91--126},
  publisher = {Pergamon Press, Inc.},
  year = {1985},
  doi = {10.1016/0096-0551(85)90002-5},
  address = {Tarrytown, NY, USA},
  issn = {0096-0551},
  number = {2}}

@inproceedings{Maul08a,
  author = {Maule, Andy and Emmerich, Wolfgang and Rosenblum, David},
  title = {Impact analysis of database schema changes},
  booktitle = {Software Engineering, 2008. ICSE'08. ACM/IEEE 30th International Conference on},
  pages = {451--460},
  publisher = {IEEE},
  year = {2008}}

@techreport{Maur07a,
  author = {Hermann Maurer and Tilo Balke and Frank Kappe and Narayanan Kulathuramaiyer and Stefan Weber and Bilal Zaka},
  title = {Report on dangers and opportunities posed by large search engines, particularly Google},
  year = {2007},
  institution = {Graz University of Technology}}

@inproceedings{Mauw87a,
  author = {S. Mauw},
  title = {A Constructive Version of the Approximation Induction Principle},
  booktitle = {Proceedings SION Conference (CSN 87)},
  pages = {235--252},
  publisher = {CWI},
  year = {1987},
  address = {Amsterdam}}

@misc{Maven,
  title = {{Maven}},
  url = {http://maven.apache.org},
  key = {Maven},
  note = {http://maven.apache.org}}

@incollection{May89a,
  author = {David May and Roger Shephard},
  title = {Occam and the Transputer},
  booktitle = {Advances in Petri Nets 1989},
  volume = {424},
  pages = {329--353},
  publisher = {Springer-Verlag},
  year = {1989},
  editor = {G. Rozenberg},
  series = {LNCS}}

@inproceedings{Maye12a,
  author = {Mayer, Philip and Schroeder, Andreas and Welf L\"{o}we},
  title = {Cross-Language Code Analysis and Refactoring},
  booktitle = {In Proceedings of the International Workshop on Source Code Analysis and Manipulation},
  year = {2012},
  doi = {10.1109/SCAM.2012.11},
  abstract = {Software composed of artifacts written in multiple (programming) languages is pervasive in today's enterprise, desktop, and mobile applications. Since they form one system, artifacts from different languages reference one another, thus creating what we call semantic cross-language links. By their very nature, such links are out of scope of the individual programming language, they are ignored by most language-specific tools and are often only established -- and checked for errors -- at runtime. This is unfortunate since it requires additional testing, leads to brittle code, and lessens maintainability. In this paper, we advocate a generic approach to understanding, analyzing and refactoring cross-language code by explicitly specifying and exploiting semantic links with the aim of giving developers the same amount of control over and confidence in multi-language programs they have for single-language code today.}}

@inproceedings{Maye14a,
  title={Automated multi-language artifact binding and rename refactoring between Java and DSLs used by Java frameworks},
  author={Mayer, Philip and Schroeder, Andreas},
  booktitle={ECOOP 2014--Object-Oriented Programming: 28th European Conference, Uppsala, Sweden, July 28--August 1, 2014. Proceedings 28},
  pages={437--462},
  year={2014},
  organization={Springer}
}

@incollection{Mayo91a,
  author = {Guillermo Mayobre},
  title = {Reuse-Oriented {SW} Development at Hewlett Packard},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@book{Mayr95a,
  title = {Proceedings {STACS}'95},
  volume = {900},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Munich, Germany},
  editor = {Ernst W. Mayr and Claude Puech},
  isbn = {3-540-59042-0},
  month = mar,
  series = {LNCS}}

@article{Mayr95b,
  author = {Anneliese von Mayrhauser and A. Marie Vans},
  title = {Program Comprehension During Software Maintenance and Evolution},
  journal = {IEEE Computer},
  volume = 28,
  pages = {44--55},
  year = {1995},
  number = 8}

@inproceedings{Mayr96a,
  author = {Jean Mayrand and Claude Leblanc and Ettore M. Merlo},
  title = {Experiment on the Automatic Detection of Function Clones in a Software System Using Metrics},
  booktitle = {International Conference on Software Maintenance ({ICSM})},
  pages = {244--253},
  year = {1996},
  url = {http://www.computer.org/proceedings/ICSM/7677/76770244abs.htm}}

@inproceedings{Mayr96b,
  author = {Jean Mayrand and Claude Leblanc and Ettore M. Merlo},
  title = {Automatic detection of Function Clones in a Software System using Metrics},
  booktitle = {Proceedings of {ICSM} (International Conference on Software Maintenance)},
  year = {1996}}

@inproceedings{Mayr96c,
  author = {Jean Mayrand and Bruno Lagu{\"e} and John Hudepohl},
  title = {Evaluating the Benefits of Clone Detection in the Software Maintenance Activities in Large Scale Systems},
  booktitle = {Workshop on Empirical Software Studies, Monterey, California, USA},
  year = {1996},
  month = nov}

@article{Mayr96d,
  author = {von Mayrhauser, A. and A.M. Vans},
  title = {Identification of Dynamic Comprehension Processes During Large Scale Maintenance},
  journal = {IEEE Transactions on Software Engineering},
  volume = {22},
  pages = {424--437},
  year = {1996},
  month = jun,
  number = {6}}

@article{Maze84a,
  author = {Murray S. Mazer and Frederick H. Lochovsky},
  title = {Logical Routing Specification in Office Information Systems},
  journal = {ACM TOOIS},
  volume = {2},
  pages = {303--330},
  year = {1984},
  month = oct,
  number = {4}}

@techreport{Maze86a,
  author = {Murray S. Mazer},
  title = {Exploring the link between office support systems and distributed problem solving systems},
  year = {1986},
  address = {Toronto},
  editor = {F.H. Lochovsky},
  institution = {Computer Systems Research Institute, University of Toronto},
  month = jul,
  number = {CSRI-183},
  type = {Office and Data Base Systems Research 86', Technical Report}}

@proceedings{Mazu97a,
  title = {Concurrency Theory},
  booktitle = {Proceedings of the 8th International, CONCUR '97},
  volume = {1234},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Warsaw, Poland},
  editor = {Antoni Mazurkiewicz and Jozef Winkowski},
  isbn = {3-540-63141-0},
  month = jul,
  series = {LNCS}}

@book{Mazz94a,
  author = {C. Mazza and J. Fairclough and B. Meltron and D. de Pablo and A. Scheffer and R. Stevens},
  title = {Software Engineering Standards},
  publisher = {Prentice Hall},
  year = {1994},
  address = {Hertfordshire}}

@inproceedings{McAf95a,
  author = {Jeff McAffer},
  title = {Meta-level Programming with CodA},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {190--214},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  isbn = {978-3-540-49538-3},
  month = aug,
  series = {LNCS}}

@phdthesis{McAf95b,
  author = {Jeff McAffer},
  title = {A Meta-level Architecture for Prototyping Object Systems},
  year = {1995},
  school = {University of Tokyo},
  url = {http://www.laputan.org/pub/mcaffer/mcaffer-phd.pdf},
  month = sep,
  type = {{Ph.D}. Thesis}}

@inproceedings{McAf96a,
  author = {Jeff McAffer},
  title = {Engineering the Meta Level},
  booktitle = {Proceedings of the 1st International Conference on Metalevel Architectures and Reflection (Reflection 96)},
  year = {1996},
  address = {San Francisco, USA},
  editor = {Gregor Kiczales},
  month = apr}

@inproceedings{McAl86a,
  author = {David McAllester and Ramin Zabih},
  title = {Boolean Classes},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {417--423},
  year = {1986},
  month = nov}

@inproceedings{McCa06a,
  author = {S. McCamant and G. Morrisett},
  title = {{Evaluating SFI for a CISC Architecture}},
  booktitle = {15th USENIX Security Symposium},
  year = {2006}}

@article{McCa60a,
  author = {John McCarthy},
  title = {Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part {I}},
  journal = {CACM},
  volume = {3},
  pages = {184--195},
  year = {1960},
  month = apr,
  number = {4}}

@article{McCa76a,
  author = {Thomas J. McCabe},
  title = {A Measure of Complexity},
  journal = {IEEE Transactions on Software Engineering},
  volume = {2},
  pages = {308--320},
  year = {1976},
  month = dec,
  number = {4}}

@article{McCa90a,
  author = {T.J. McCabe},
  title = {Reverse Engineering, Reusability, Redundancy: The Conncetion},
  journal = {American Programmer},
  volume = {3},
  pages = {8--13},
  year = {1990},
  month = oct,
  number = {10}}

@incollection{McCa92a,
  author = {Gordon McCalla and Jim Greer and Bryce Barrie and Paul Pospisel},
  title = {Granularity Hierarchies},
  booktitle = {Semantic Networks in Artificial Intelligence},
  pages = {363--375},
  publisher = {Pergamon Press},
  year = {1992},
  address = {Oxford},
  editor = {Fritz Lehmann}}

@inproceedings{McCab76a,
  author = {McCabe, Thomas J.},
  title = {A complexity measure},
  booktitle = {ICSE'76: Proceedings of the 2nd International Conference on Software engineering},
  pages = {407},
  publisher = {IEEE Computer Society},
  year = {1976},
  address = {Los Alamitos, CA, USA},
  location = {San Francisco, California, United States}}

@article{McCab89a,
  author = {McCabe, Thomas J. and Butler, Charles W.},
  title = {Design complexity measurement and testing},
  journal = {Commun. ACM},
  volume = {32},
  pages = {1415--1425},
  publisher = {ACM},
  year = {1989},
  address = {New York, NY, USA},
  number = {12}}

@book{McCl97a,
  author = {Carma McClure},
  title = {Software Reuse Techniques},
  publisher = {Prentice-Hall},
  year = {1997},
  isbn = {0-13-661000-5}}

@article{McCr76a,
  author = {Edward M. McCreight},
  title = {A Space-Economical Suffix Tree Construction Algorithm},
  journal = {JACM},
  volume = {23},
  pages = {262--272},
  year = {1976},
  month = apr,
  number = {2}}

@inproceedings{McCu87a,
  author = {Paul L. McCullough},
  title = {Transparent Forwarding: First Steps},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {331--341},
  year = {1987},
  month = dec}

@inproceedings{McCu92a,
  author = {Daniel L. McCue},
  title = {Developing a Class Hierarchy for Object-Oriented Transaction Processing},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {413--426},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@inproceedings{McDi01a,
  author = {Sean McDirmid and Matthew Flatt and Wilson Hsieh},
  title = {Jiazzi: New Age Components for Old Fashioned {Java}},
  booktitle = {Proceedings OOPSLA 2001, ACM SIGPLAN Notices},
  pages = {211--222},
  year = {2001},
  url = {http://www.cs.utah.edu/plt/jiazzi/publications.html},
  month = oct}

@inproceedings{McDi03a,
  author = {Sean McDirmid and Wilson C. Hsieh},
  title = {Aspect-oriented programming with Jiazzi},
  booktitle = {AOSD '03: Proceedings of the 2nd international conference on Aspect-oriented software development},
  pages = {70--79},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/643603.643611},
  address = {New York, NY, USA},
  isbn = {1-58113-660-9},
  location = {Boston, Massachusetts}}

@article{McDi07a,
author = {McDirmid, Sean},
title = {Living It up with a Live Programming Language},
year = {2007},
issue_date = {October 2007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {42},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/1297105.1297073},
doi = {10.1145/1297105.1297073},
abstract = {A dynamic language promotes ease of use through flexible typing, a focus on high-level programming, and by streamlining the edit-compile-debug cycle. Live languages go beyond dynamic languages with more ease of use features. A live language supports live programming that provides programmers with responsive and continuous feedback about how their edits affect program execution. A live language is also based on high-level constructs such as declarative rules so that programmers can write less code. A live language could also provide programmers with responsive semantic feedback to enable time-saving services such as code completion. This paper describes the design of a textual live language that is based on reactive data-flow values known as signals and dynamic inheritance. Our language, SuperGlue, supports live programming with responsive semantic feedback, which we demonstrate with a working prototype.},
journal = {SIGPLAN Not.},
month = {oct},
pages = {623-638},
numpages = {16},
keywords = {live programming}
}

@inproceedings{McDo89a,
  author = {John Alan McDonald},
  title = {Object-Oriented Programming for Linear Algebra},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {175--184},
  year = {1989},
  month = oct}

@article{McDo89b,
  author = {Charles E. McDowell and David P. Helmbold},
  title = {Debugging Concurrent Programs},
  journal = {ACM Computing Surveys},
  volume = {21},
  pages = {593--622},
  year = {1989},
  month = dec,
  number = {4}}

@inproceedings{McDo90a,
  author = {John Alan McDonald and Werner Stuetzle and Andreas Buja},
  title = {Painting Multiple Views of Complex Objects},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {245--257},
  year = {1990},
  month = oct}

@inproceedings{McEw14a,
  author = {Alistair A. McEwan and Peter Welch and Wilson Ifill and England.},
  title = {Communicating Scala Objects ( 2016 Revision )},
  booktitle = {None},
  year = {2014}}

@inproceedings{McFad05a,
  author = {McFadden, Ted and Henricksen, Karen and Indulska, Jadwiga and Mascaro, Peter},
  title = {Applying a Disciplined Approach to the Development of a Context-Aware Communication Application},
  booktitle = {PerCom'05: Proceedings of the 3rd International Conference on Pervasive Computing and Communications},
  pages = {300--306},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/PERCOM.2005.10}}

@inproceedings{McFar91a,
  author = {S. McFarling},
  title = {Procedure Merging with Instruction Caches},
  booktitle = {Conference on Programming Language Design and Implementation},
  pages = {71-79},
  year = {1991}}

@article{McGa01a,
  author = {McGarry, J.},
  title = {When it comes to measuring software, every project is unique},
  journal = {IEEE Software},
  volume = {18},
  pages = {19},
  year = {2001},
  number = {5}}

@book{McGi92a,
  author = {Henry McGilton and Mary Campione},
  title = {PostScript by Example},
  publisher = {Addison Wesley},
  year = {1992},
  isbn = {0-201-63228-4}}

@techreport{McGr01a,
  author = {John D. McGregor},
  title = {Testing a Software Product Line},
  year = {2001},
  url = {http://www.sei.cmu.edu/pub/documents/01.reports/pdf/01tr022.pdf},
  institution = {Carnegie Mellon University}}

@book{McGr97a,
  author = {Gary McGraw and Edward W. Felten},
  title = {Java Security},
  publisher = {Wiley},
  year = {1997},
  isbn = {0-471-17842-X}}

@inproceedings{McHa92a,
  author = {Ciaran McHale and Bridget Walsh and Se\'an Baker and Alexis Donnelly},
  title = {Scheduling Predicates},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {177--193},
  publisher = {Springer-Verlag},
  year = {1992},
  url = {http://www.dsg.cs.tod.ie/cgi-bin/TCD-CS-91-24.ps.gz},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@unpublished{McHa92b,
  author = {Ciaran McHale and Bridget Walsh and Se\'an Baker and Alexis Donnelly},
  title = {Evaluating Synchronisation Mechanisms: The Inheritance Matrix},
  year = {1992},
  url = {http://www.dsg.cs.tod.ie/cgi-bin/TCD-CS-92-18.ps.gz},
  note = {Submitted to ECOOP '92 workshop on Object-Based Concurrency and Reuse}}

@techreport{McHa94a,
  author = {Ciaran McHale and Se\'an Baker and Bridget Walsh and Alexis Donnelly},
  title = {Synchronistaion Variables},
  year = {1994},
  url = {http://www.dsg.cs.tod.ie/cgi-bin/TCD-CS-94-01.ps.gz},
  abstract = {It is commonly believed that access to the instance
variables of an object by its synchronisation code
is needed in order to implement many synchronisation
policies. This introduces an obvious difficulty. The
synchronisation code must not read an instance
variable while that variable is being updated by an
operation, otherwise the synchronisation code might
see the variable in an inconsistent state. In this
paper, we study this problem in depth and solve it
by defining a framework to guide the design of
synchronisation mechanisms. In solving the problem,
our framework illustrates that, contrary to popular
belief, access to instance variables by
synchronisation mechanisms is {\em not\/} required
in order to implement synchronisation policies that
apparently rely on the state of the object---such
state can be maintained by the synchronisation code
itself. Our framework offers additional benefits.
Synchronisation mechanisms designed within the
guidelines of the framework can possess considerable
expressive power. (The example synchronisation
mechanism we present subsumes the power of numerous
other synchronisation mechanisms.) Also, we show
that most of the concepts of our framework can be
implemented in terms of existing language
constructs, thus minimising complexity that needs to
be added to a sequential language in order to
support concurrency.},
  institution = {Department of Computer Science, Trinity College},
  month = jan,
  type = {TCD-CS-94-01}}

@phdthesis{McHa94b,
  author = {Ciaran McHale},
  title = {Synchronisation in Concurrent, Object-oriented Languages: Expressive Power, Genericity and Inheritance},
  year = {1994},
  school = {Department of Computer Science, Trinity College, Dublin},
  url = {ftp://ftp.dsg.cs.tcd.ie/pub/doc/dsg-86.ps.gz},
  type = {{Ph.D}. Thesis}}

@article{McIl01a,
  author = {S. McIlraith and T. Son and H. Zeng},
  title = {Semantic Web services},
  journal = {IEEE Intelligent Systems (Special Issue on the Semantic Web)},
  volume = {16},
  pages = {46--53},
  year = {2001},
  month = mar,
  number = {2}}

@article{McIl60a,
  author = {M. Douglas McIlroy},
  title = {Macro instruction extensions of compiler languages},
  journal = {Communications of the {ACM}},
  volume = 3,
  pages = {214--220},
  year = {1960},
  number = 4}

@incollection{McIl69a,
  author = {M. Douglas McIlroy},
  title = {Mass Produced Software Components},
  booktitle = {Software Engineering},
  pages = {138--150},
  publisher = {NATO Science Committee},
  year = {1969},
  pdf = {http://www.dcs.gla.ac.uk/courses/teaching/mscweb/rrcs/papers/SE/McIlroy.pdf},
  editor = {P. Naur and B. Randell},
  month = jan}

@inproceedings{McIn10a,
  author = {McIntosh Shane and Adams Bram and Hassan E. Ahmed},
  title = {The evolution of ANT build systems},
  booktitle = {7th IEEE Working Conference on Mining Software Repositories (MSR'10)},
  pages = {42--51},
  year = {2010},
  doi = {10.1109/MSR.2010.5463341}}

@inproceedings{McKe84a,
  author = {J. R. McKee},
  title = {Maintenance as a Function of Design},
  booktitle = {Proceedings of AFIPS National Computer Conference},
  pages = {187--193},
  year = {1984}}

@article{McKe98a,
  author = {McKeeman, William M},
  title = {Differential {Testing} for {Software}},
  journal = {DIGITAL TECHNICAL JOURNAL},
  year = {1998}}

@article{McLa71a,
  author = {A.D. McLachlan},
  title = {Tests for Comparing Related Amino-acid Sequences. Cytochrome $c$ and Cytochrome $c_{551}$},
  journal = {J. Mol. Biol.},
  volume = {61},
  pages = {409--424},
  year = {1971}}

@article{McLe81a,
  author = {I.A. McLeod},
  title = {A Data Base Management System for Document Retrieval Applications},
  journal = {Information Systems},
  volume = {6},
  pages = {131--137},
  year = {1981},
  number = {2}}

@article{McLe85a,
  author = {Dennis McLeod and S. Widjojo},
  title = {Object Management and Sharing in Autonomous, Distributed Data/Knowledge Bases},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {83--89},
  year = {1985},
  month = dec,
  number = {4}}

@inproceedings{McMu97a,
  author = {B. McMullin and F.J. Varela},
  title = {Rediscovering computational Autopoiesis},
  booktitle = {Fourth European Conference on Artifical Life (ECAL97)},
  pages = {38--47},
  year = {1997}}

@inproceedings{Mcaf95,
  author = {Jeff McAffer},
  title = {Meta-Level Architecture Support for distributed Objects},
  booktitle = {Proceedings of the Fourth International Workshop on Object-Orientation in Operating Systems, 1995.},
  pages = {232--241},
  year = {1995}}

@article{Mcbu16,
  author = {McBurney, Paul W and McMillan, Collin},
  title = {Automatic source code summarization of context for java methods},
  journal = {IEEE Transactions on Software Engineering},
  volume = {42},
  pages = {103--119},
  publisher = {IEEE},
  year = {2016},
  number = {2}}

@book{Mcca77a,
  author = {Jim McCall and Paul Richards and Gene Walters},
  title = {Factors in Software Quality},
  publisher = {NTIS Springfield},
  year = {1976}}

@article{Mccl05a,
  author = {McCloskey, Bill and Brewer, Eric},
  title = {ASTEC: a new approach to refactoring C},
  journal = {ACM SIGSOFT Software Engineering Notes},
  volume = {30},
  pages = {21--30},
  year = {2005},
  organization = {ACM}}

@book{Mcco04a,
  author = {McConnell, Steve},
  title = {Code Complete},
  publisher = {Pearson Education},
  year = {2004}}

@inproceedings{Mcpe04a,
  author = {McPeak, Scott and Necula, George C.},
  title = {Elkhound: A fast, practical {GLR} parser generator},
  booktitle = {International Conference on Compiler Construction},
  pages = {73--88},
  year = {2004},
  organization = {Springer}}

@inproceedings{Mede91a,
  author = {Claudia Bauzer Medeiros and Patrick Pfeffer},
  title = {Object Integrity Using Rules},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {219--230},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@unpublished{Medi98a,
  author = {MediaGenix},
  title = {Understanding Applications Dependencies},
  note = {Poster Presentation at OOPSLA '98}}

@article{Medj03a,
  author = {Brahim Medjahed and Athman Bouguettaya and Ahmed K. Elmagarmid},
  title = {Composing Web services on the Semantic Web},
  journal = {The VLDB Journal},
  volume = {12},
  pages = {333--351},
  publisher = {Springer-Verlag New York, Inc.},
  year = {2003},
  doi = {10.1007/s00778-003-0101-5},
  address = {Secaucus, NJ, USA},
  issn = {1066-8888},
  number = {4}}

@article{Medv00a,
  author = {Medvidovic, Nenad and Taylor, Richard N.},
  title = {A Classification and Comparison Framework for Software Architecture Description Languages},
  journal = {IEEE Transactions on Software Engineering},
  volume = 26,
  pages = {70--93},
  publisher = {IEEE Computer Society},
  year = {2000},
  doi = {10.1109/32.825767},
  address = {Piscataway, NJ, USA},
  number = 1}

@inproceedings{Medv03a,
  author = {Nenad Medvidovic and Alexander Egyed and Paul Gruenbacher},
  title = {Stemming Architectural Erosion by Architectural Discovery and Recovery},
  booktitle = {Proceedings of the 2nd Second International Workshop from Software Requirements to Architectures (STRAW)},
  year = {2003}}

@article{Medv06a,
  author = {Nenad Medvidovic and Vladimir Jakobac},
  title = {Using software evolution to focus architectural recovery},
  journal = {Automated Software Engineering},
  volume = {13},
  pages = {225--256},
  publisher = {Kluwer Academic Publishers},
  year = {2006},
  doi = {10.1007/s10515-006-7737-5},
  address = {Hingham, MA, USA},
  issn = {0928-8910},
  number = {2}}

@article{Medv07a,
  author = {Medvidovic, Nenad and Dashofy, Eric M. and Taylor, Richard N.},
  title = {Moving architectural description from under the technology lamppost},
  journal = {Information and Software Technology},
  volume = {49},
  pages = {12--31},
  publisher = {Butterworth-Heinemann},
  year = {2007},
  doi = {10.1016/j.infsof.2006.08.006},
  address = {Newton, MA, USA},
  issue = {1},
  numpages = {20}}

@inproceedings{Medv96a,
  author = {Nenad Medvidovic and Peyman Oreizy and Jason E. Robbins and Richard N. Taylor},
  title = {Using Object-Oriented Typing to Support Architectural Design in the {C2} Style},
  booktitle = {Proceedings of the Fourth ACM SIGSOFT FSE Symposium (FSE4)},
  pages = {24--32},
  year = {1996},
  url = {ftp://liege.ics.uci.edu/pub/arcadia/c2/C2-FSE96.fm.ps},
  address = {San Francisco, CA},
  month = oct}

@inproceedings{Medv97a,
  author = {Nenad Medvidovic and Richard N. Taylor},
  title = {A Framework for Classifying and Comparing Architecture Description Languages},
  booktitle = {Proceedings of ESEC/FSE '97},
  pages = {60--76},
  year = {1997},
  address = {Z{\"u}rich, Switzerland},
  month = sep}

@inproceedings{Medv97c,
  author = {Nenad Medvidovic and David S. Rosenblum},
  title = {Domains of Concern in Software Architectures and Architecture Description Languages},
  booktitle = {Proceedings of the 1997 USENIX Conference on Domain-Specific Languages},
  year = {1997},
  month = oct}

@inproceedings{Medv99a,
  author = {Nenad, Medvidovic and Rosenblum, David S. and Taylor, Richard N.},
  title = {A language and environment for architecture-based software development and evolution},
  booktitle = {ICSE'99: Proceedings of the 21st International Conference on Software engineering},
  pages = {44--53},
  publisher = {IEEE Computer Society},
  year = {1999},
  address = {Los Alamitos, CA, USA},
  location = {Los Angeles, California, United States}}

@techreport{Meer05a,
  author = {Michael Meer},
  title = {A Generic Clustering Framework for Moose},
  year = {2005},
  url = {http://scg.unibe.ch/archive/projects/Meer05a.pdf},
  abstract = {Clustering helps with reengineering by gathering the
software entities into meaningful and independent
groups. The entities here can be any FAMIX entities,
be it classes, methods, attributes etc. The affinity
between two entities is calculated through the
absolute difference of their properties and
properties of the dependencies between the two
entities; all the properties also have assigned
weights. The clustering can be done by a range of
clustering algorithms, including hierarchical and
partitional algorithms. The result are groups of
clusters, that can be examined through their quality
metrics and if necessarily improved upon through
another clustering run with adapted parameters. This
paper describes generic clustering framework for the
Ob ject Oriented Reengineering Environmnet Moose,
developed in the Software Composition Group at the
University of Bern.},
  institution = {University of Bern},
  month = aug,
  type = {Informatikprojekt}}

@inproceedings{Mehl04a,
  author = {Michael Mehlich},
  title = {Transformation Systems for Real Programming Languages. Preprocessing Directives Everywhere},
  booktitle = {Proceedings of the First International Workshop on Software Evolution Transformations (SET)},
  pages = {25--28},
  year = {2004},
  address = {Delft, the Netherlands},
  editor = {Ying Zou and James R. Cordy},
  month = nov}

@inproceedings{Mehn00a,
  author = {Katharina Mehner and Annika Wagner},
  title = {Visualizing the Synchronization of {Java}-Threads with UML},
  booktitle = {Proceedings of VL 2000 (Symposium on Visual Languages)},
  pages = {199--206},
  publisher = {IEEE Press},
  year = {2000}}

@inproceedings{Mehn06a,
  author = {Katharina Mehner and Mark-Oliver Reiser and Matthias Weber},
  title = {Applying Aspect-Orientation Techniques in Automotive Software Product-Line Engineering},
  booktitle = {In Proceedings of the Automotive Requirements Engineering Workshop (AURE'06},
  year = {2006}}

@inproceedings{Meht00a,
  author = {Nikunj R. Mehta and Nenad Medvidovic and Sandeep Phadke},
  title = {Towards a Taxonomy of Software Connectors},
  booktitle = {Proceedings of ICSE '00},
  pages = {178--187},
  year = {2000},
  address = {Limerick, Ireland},
  month = jun}

@inproceedings{Meht02a,
  author = {Alok Mehta and George Heineman},
  title = {Evolving legacy systems features using regression test cases and components},
  booktitle = {Proceedings ACM International Workshop on Principles of Software Evolution},
  pages = {190--193},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/602461.602507},
  address = {New York NY},
  isbn = {1-58113-508-4},
  location = {Vienna, Austria}}

@article{Meie18a,
  author = {Meier, Remigius and Rigo, Armin and R. Gross, Thomas},
  title = {Virtual machine design for parallel dynamic programming languages},
  journal = {Proceedings of the ACM on Programming Languages},
  volume = {2},
  pages = {1-25},
  year = {2018},
  doi = {10.1145/3276479},
  month = oct}

@inproceedings{Meier16a,
  author = {Meier, Remigius and Rigo, Armin and Gross, Thomas R.},
  title = {Parallel Virtual Machines with RPython},
  booktitle = {Proceedings of the 12th Symposium on Dynamic Languages},
  pages = {48--59},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2989225.2989233},
  doi = {10.1145/2989225.2989233},
  acmid = {2989233},
  address = {New York, NY, USA},
  isbn = {978-1-4503-4445-6},
  keywords = {Python, RPython, dynamic language, global interpreter lock, parallelism, transactional memory, virtual machine},
  location = {Amsterdam, Netherlands},
  numpages = {12},
  series = {DLS 2016}}

@inproceedings{Meij04a,
  author = {Erik Meijer and Peter Drayton},
  title = {Static typing where possible, dynamic typing when needed: The end of the cold war between programming languages},
  booktitle = {Proceedings OOPSLA Workshop On The Revival Of Dynamic Languages},
  year = {2004}}

@inproceedings{Meij06a,
  author = {Erik Meijer and Brian Beckman and Gavin Bierman},
  title = {{LINQ}: reconciling object, relations and {XML} in the {.NET} framework},
  booktitle = {SIGMOD '06: Proceedings of the 2006 ACM SIGMOD international conference on Management of data},
  pages = {706--706},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1142473.1142552},
  address = {New York, NY, USA},
  isbn = {1-59593-434-0},
  location = {Chicago, IL, USA}}

@phdthesis{Meij93a,
  author = {Theo Dirk Meijler},
  title = {User-level Integration of Data and Operation Resources by means of a Self-descriptive Data Model},
  year = {1993},
  school = {Erasmus University Rotterdam},
  month = sep,
  type = {{Ph.D}. Thesis}}

@inproceedings{Meij96a,
  author = {Theo Dirk Meijler and Robert Engel},
  title = {Making Design Patterns Explicit in {FACE}, a Framework Adaptive Composition Environment},
  booktitle = {EuroPLoP preliminary Conference Proceedings},
  year = {1996},
  url = {http://scg.unibe.ch/archive/papers/Meij96aFACE.pdf},
  abstract = {Creating applications using object-oriented
frameworks is done at a rela- tively low abstraction
level, leaving a large gap with the high abstraction
level of a de- sign. This makes the use of a
framework difficult, and allows design and
realization to diverge. Design patterns are more
specific elements of design, and thus reduce this
gap. We even bridge this gap by making design
patterns and the classes that play a role within
them into special purpose software components.
System realization becomes a matter of composing
special purpose class-components. We also introduce
a system, FACE, which supports the visual
composition of such specifications.},
  month = jul}

@inproceedings{Meij96d,
  author = {Theo Dirk Meijler},
  title = {Formalizing Patterns for Software Understanding and Problem Detection},
  booktitle = {FAMOOS workshop},
  year = {1996},
  organization = {Uni-Bern}}

@inproceedings{Meij96m,
  author = {Theo Dirk Meijler and Serge Demeyer and Robert Engel},
  title = {Class Composition in {FACE}, a Framework Adaptive Composition Environment},
  booktitle = {Special Issues in Object-Oriented Programming (ECOOP '96 Workshop Reader)},
  publisher = {dpunkt.verlag},
  year = {1996},
  url = {http://scg.unibe.ch/archive/papers/Meij96mClassComposition.pdf},
  abstract = {An object-oriented framework represents variations
in the application do-main via so-called hot spots.
Maturing the right set of hot spots requires an
iterative de-velopment process which gives rise to
incomplete framework documentation. This paper shows
that by measuring the changes between different
releases of the framework, it is possible to detect
undocumented hot spots. We expect that our work will
result in better documented and consequently more
reusable frameworks.},
  editor = {Max M{\"u}hlh{\"a}user},
  isbn = {3-920993-67-51},
  month = jul}

@inproceedings{Meij97a,
  author = {Theo Dirk Meijler and Serge Demeyer and Robert Engel},
  title = {Making Design Patterns Explicit in {FACE}, a Framework Adaptive Composition Environment},
  booktitle = {Proceedings ESEC/FSE '97},
  volume = {1301},
  pages = {94--110},
  publisher = {Springer-Verlag},
  year = {1997},
  url = {http://scg.unibe.ch/archive/papers/Meij97aExplicitDesignPatterns.pdf},
  doi = {10.1007/3-540-63531-9_9},
  abstract = {Tools incorporating design patterns combine the
advantage of having a high-abstraction level of
describing a system and the possibility of coupling
these abstractions to some underlying
implementation. Still, all cur-rent tools are based
on generating source code in which the design
patterns become implicit. After that, further
extension and adaptation of the software is needed
but this can no longer be supported at the same
level of abstraction. This paper presents FACE, an
environment based on an explicit representa-tion of
design patterns, sustaining an incremental
development style without abandoning the
higher-level design pattern abstraction. A visual
composition tool for FACE has been developed in the
Self programming language.},
  editor = {M. Jazayeri and H. Schauer},
  isbn = {978-3-540-63531-4},
  month = sep,
  series = {LNCS}}

@incollection{Meij97b,
  author = {Theo Dirk Meijler and Oscar Nierstrasz},
  title = {Beyond Objects: Components},
  booktitle = {Cooperative Information Systems: Current Trends and Directions},
  pages = {49--78},
  publisher = {Academic Press},
  year = {1997},
  url = {http://scg.unibe.ch/archive/papers/Meij97bBeyondObjects.pdf},
  abstract = {Traditional software development approaches do not
cope well with the evolving requirements of open
systems. We argue that such systems are best viewed
as flexible compositions of "software components"
designed to work together as part of a component
framework that formalizes a class of applications
with a common software architecture. To enable such
a view of software systems, we need appropriate
support from programming language technology,
software tools, and methods. We will briefly review
the current state of object-oriented technology,
insofar as it supports component-oriented
development, and propose a research agenda of topics
for further investigation.},
  editor = {M.P. Papazoglou and G. Schlageter},
  month = nov}

@inproceedings{Mein18a,
  author = {Meinicke, Jens and Wong, Chu-Pan and Kastner, Christian and Saake, Gunter},
  title = {Understanding Differences among Executions with Variational Traces},
  booktitle = {arXiv},
  year = {2018},
  url = {https://export.arxiv.org/pdf/1807.03837},
  keywords = {Debugging, Program Comprehension, Feature Interaction, Configurable Software, Variational Execution.}}

@incollection{Mela96a,
  author = {I. Dan Melamed},
  title = {A Geometric Approach to Mapping Bitext Correspondence},
  booktitle = {Proceedings of the Conference on Empirical Methods in Natural Language Processing},
  pages = {1--12},
  publisher = {Association for Computational Linguistics},
  year = {1996},
  url = {citeseer.ist.psu.edu/182431.html},
  address = {Somerset, New Jersey},
  editor = {Eric Brill and Kenneth Church}}

@inproceedings{Mela96b,
  author = {I. Dan Melamed},
  title = {Automatic Detection of Omissions in Translations},
  booktitle = {Proceedings of the 16th International Conference on Computational Linguistics (COLING'96)},
  year = {1996},
  url = {citeseer.ist.psu.edu/149949.html},
  address = {Copenhagen, Denmark}}

@article{Mela99a,
  author = {I. Dan Melamed},
  title = {Bitext Maps and Alignment via Pattern Recognition},
  journal = {Computational Linguistics},
  volume = {25},
  pages = {107--130},
  year = {1999},
  url = {citeseer.ist.psu.edu/melamed96bitext.html},
  number = {1}}

@inproceedings{Meli08a,
  author = {Meli{\'a}, Santiago and G{\'o}mez, Jaime and P{\'e}rez, Sandy and D{\'\i}az, Oscar},
  title = {A model-driven development for GWT-based rich internet applications with OOH4RIA},
  booktitle = {2008 Eighth international conference on Web engineering},
  pages = {13--23},
  year = {2008},
  organization = {IEEE}}

@book{Mell02a,
  author = {Stephen J. Mellor and Marc J. Balcer},
  title = {Executable UML: A Foundation for Model-Driven Architecture},
  publisher = {Addison-Wesley Professional},
  year = {2002},
  url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201748045},
  isbn = {0201748045},
  month = may}

@inproceedings{Mell87a,
  author = {Paola Mello and Antonio Natali},
  title = {Objects as Communicating Prolog Units},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {181--191},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Mell98a,
  author = {Stephen J. Mellor and Steve Tockey and Rodolphe Arthaud and Philippe LeBlanc},
  title = {Software-platform-independent, Precise Action Specifications for {UML}},
  booktitle = {The Unified Modeling Language, UML'98 - Beyond the Notation. First International Workshop, Mulhouse, France, June 1998},
  pages = {281--286},
  year = {1998},
  editor = {Jean B{\'e}zivin and Pierre-Alain Muller},
  number = {1618},
  series = {LNCS}}

@article{Melt07a,
  author = {Hayden Melton and Ewan Tempero},
  title = {An empirical study of cycles among classes in Java},
  journal = {Empirical Software Engineering},
  volume = {12},
  pages = {389--415},
  publisher = {Kluwer Academic Publishers},
  year = {2007},
  doi = {10.1007/s10664-006-9033-1},
  address = {Hingham, MA, USA},
  issn = {1382-3256},
  number = {4}}

@inproceedings{Melt07b,
  author = {Hayden Melton and Ewan D. Tempero},
  title = {Jooj: Real-Time Support For Avoiding Cyclic Dependencies},
  booktitle = {APSEC 2007 - 14th Asia-Pacific Software Engineering Conference},
  pages = {87--95},
  publisher = {IEEE Computer Society},
  year = {2007},
  url = {http://crpit.com/abstracts/CRPITV62Melton1.html}}

@misc{MemSafeChromium,
  author = {The Chromium Projects},
  title = {Memory Safety -- consulted on 27 September 2022},
  note = {https://www.chromium.org/Home/chromium-security/memory-safety/}}

@article{Memo01a,
  author = {Atif M. Memon and Martha E. Pollack and Mary Lou Soffa},
  title = {Hierarchical {GUI} Test Case Generation Using Automated Planning},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {27},
  pages = {144--155},
  publisher = {IEEE Press},
  year = {2001},
  doi = {10.1109/32.908959},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {2}}

@inproceedings{Memo03a,
  author = {Atif Memon and Ishan Banerjee and Adithya Nagarajan},
  title = {{GUI} Ripping: Reverse Engineering of Graphical User Interfaces for Testing},
  booktitle = {Proceedings IEEE Working Conference on Reverse Engineering ({WCRE} 2003)},
  pages = {260--269},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  address = {Los Alamitos CA},
  month = nov}

@inproceedings{Memo03b,
  author = {Memon, Atif and Banerjee, Ishan and Nagarajan, Adithya},
  title = {{GUI} ripping: reverse engineering of graphical user interfaces for testing},
  booktitle = {Reverse Engineering, 2003. {{WCRE}} 2003. Proceedings. 10th Working Conference on},
  pages = {260--269},
  publisher = {{IEEE}},
  year = {2003},
  url = {http://ieeexplore.ieee.org/document/1287256/},
  doi = {10.1109/{WCRE}.2003.1287256},
  abstract = {Graphical user interfaces ({GUIs}) are important parts of today's software and their correct execution is required to ensure the correctness of the overall software. A popular technique to detect defects in {GUIs} is to test them by executing test cases and checking the execution results. Test cases may either be created manually or generated automatically from a model of the {GUI}. While manual testing is unacceptably slow for many applications, our experience with {GUI} testing has shown that creating a model that can be used for automated test case generation is difficult.},
  date = {2003},
  isbn = {978-0-7695-2027-8},
  keywords = {{GUI} testing},
  langid = {english},
  shorttitle = {{GUI} ripping},
  urldate = {2018-04-20}}

@inproceedings{Memo04a,
  author = {Memon,Atif. M. and Xie, Qing},
  title = {Empirical Evaluation of the Fault-Detection Effectiveness of Smoke Regression Test Cases for GUI-Based Software},
  booktitle = {IEEE International Conference on Software Maintenance},
  pages = {8-17},
  year = {2004}}

@article{Memo07a,
  author = {Memon, Atif M.},
  title = {An event-flow model of {GUI}-based applications for testing},
  journal = {Software Testing, Verification and Reliability},
  volume = {17},
  pages = {137--157},
  year = {2007},
  url = {http://doi.wiley.com/10.1002/stvr.364},
  doi = {10.1002/stvr.364},
  abstract = {Graphical user interfaces ({GUIs}) are by far the most popular means used to interact with today's software. The functional correctness of a {GUI} is required to ensure the safety, robustness and usability of an entire software system. {GUI} testing techniques used in practice are resource intensive; model-based automated techniques are rarely employed. A key reason for the reluctance in the adoption of model-based solutions proposed by researchers is their limited applicability; moreover, the models are expensive to create. Over the past few years, the present author has been developing different models for various aspects of {GUI} testing. This paper consolidates all of the models into one scalable event-flow model and outlines algorithms to semi-automatically reverse-engineer the model from an implementation. Earlier work on model-based test-case generation, test-oracle creation, coverage evaluation, and regression testing is recast in terms of this model by defining event-space exploration strategies ({ESESs}) and creating an end-to-end {GUI} testing process. Three such {ESESs} are described: for checking the event-flow model, test-case generation, and testoracle creation. Two demonstrational scenarios show the application of the model and the three {ESESs} for experimentation and application in {GUI} testing. Copyright c 2007 John Wiley \& Sons, Ltd.},
  date = {2007-09},
  issn = {09600833, 10991689},
  langid = {english},
  number = {3},
  urldate = {2018-07-04}}

@inproceedings{Memo17,
  author = {Memon, Atif and Gao, Zebao and Nguyen, Bao and Dhanda, Sanjeev and Nickell, Eric and Siemborski, Rob and Micco, John},
  title = {Taming Google-scale Continuous Testing},
  booktitle = {Proceedings {ICSE-SEIP '17} (the 39th International Conference on Software Engineering: Software Engineering in Practice Track)},
  pages = {233--242},
  publisher = {IEEE Press},
  year = {2017},
  doi = {10.1109/ICSE-SEIP.2017.16},
  address = {Piscataway, NJ, USA},
  location = {Buenos Aires, Argentina},
  numpages = {10}}

@article{Mend01a,
  author = {Nabor C. Mendon\c{c}a and Jeff Kramer},
  title = {An Approach for Recovering Distributed System Architectures},
  journal = {Automated Software Engineering},
  volume = {8},
  pages = {311--354},
  publisher = {Kluwer Academic Publishers},
  year = {2001},
  address = {Hingham, MA, USA},
  issn = {0928-8910},
  number = {3-4}}

@article{Mend95a,
  author = {Alberto Mendelzon and Johannes Sametinger},
  title = {Reverse Engineering by Visualizing and Querying},
  journal = {Software --- Concepts and Tools},
  volume = {16},
  pages = {170--182},
  year = {1995}}

@inproceedings{Mend96a,
  author = {Nabor C. Mendon\c{c}a and Jeff Kramer},
  title = {Requirements for an effective architecture recovery framework},
  booktitle = {Joint proceedings of the second international software architecture workshop (ISAW-2) and international workshop on multiple perspectives in software development (Viewpoints '96) on SIGSOFT '96 workshops},
  pages = {101--105},
  publisher = {ACM Press},
  year = {1996},
  doi = {10.1145/243327.243620},
  isbn = {0-89791-867-3},
  location = {San Francisco, California, United States}}

@inproceedings{Meng08a,
  author = {Meng, Na and Wang, Qianxiang and Wu, Qian and Mei, Hong},
  title = {An Approach to Merge Results of Multiple Static Analysis Tools (Short Paper)},
  booktitle = {International Conference on Quality Software},
  pages = {169--174},
  year = {2008}}

@inproceedings{Meng11a,
  author = {Meng, Na and Kim, Miryung and McKinley, Kathryn S.},
  title = {Systematic Editing: Generating Program Transformations from an Example},
  booktitle = {Conference on {P}rogramming {L}anguage {D}esign and {I}mplementation ({PLDI})},
  pages = {329--342},
  year = {2011}}

@inproceedings{Meng12a,
  author = {Meng, Sichen and Wang, Xiaoyin and Zhang, Lu and Mei, Hong},
  title = {A history-based matching approach to identification of framework evolution},
  booktitle = {International {C}onference on {S}oftware {E}ngineering ({ICSE})},
  pages = {353--363},
  year = {2012},
  organization = {IEEE}}

@inproceedings{Meng13a,
  author = {Meng, Na and Kim, Miryung and McKinley, Kathryn S.},
  title = {{LASE}: Locating and Applying Systematic Edits by Learning from Examples},
  booktitle = {International {C}onference on {S}oftware {E}ngineering ({ICSE})},
  pages = {502--511},
  year = {2013}}

@inproceedings{Mens00a,
  author = {Mens, Tom},
  title = {Conditional Graph Rewriting as a Domain-Independent Formalism for Software Evolution},
  booktitle = {Proceedings of the International Workshop on Applications of Graph Transformations with Industrial Relevance},
  pages = {127--143},
  publisher = {Springer-Verlag},
  year = {2000},
  isbn = {3-540-67658-9},
  series = {AGTIVE'99}}

@inproceedings{Mens00b,
  author = {Mens, Tom and Mens, Kim and Wuyts, Roel},
  title = {On the Use of Declarative Meta Programming for Managing Architectural Software Evolution},
  booktitle = {Proceedings of the ECOOP 2000 Workshop on Object-Oriented Architectural Evolution},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/DHon99a.pdf},
  month = jun}

@phdthesis{Mens00c,
  author = {Mens, Kim},
  title = {Automating Architectural Conformance Checking by means of Logic Meta Programming},
  year = {2000},
  school = {Vrije Universiteit Brussel}}

@inproceedings{Mens01a,
  author = {Kim Mens and Isabel Michiels and Roel Wuyts},
  title = {Supporting Software Development through Declaratively Codified Programming Patterns},
  booktitle = {SEKE 2001 Proceedings},
  pages = {236--243},
  publisher = {Knowledge Systems Institute},
  year = {2001},
  misc = {SCI impact factor 0.321},
  url = {http://scg.unibe.ch/archive/papers/Mens01a.pdf},
  doi = {10.1016/S0957-4174(02)00076-3},
  abstract = {In current-day software development, programmers
often use programming patterns to clarify their
intents and to increase the understandability of
their programs. Unfortunately, most software
development environments do not adequately support
the declaration and use of such patterns. To
explicitly codify these patterns, we adopt a
declarative meta programming approach. In this
approach, we reify the structure of an
(object-oriented) program in terms of logic clauses.
We declare programming patterns as logic rules on
top of these clauses. By querying the logic system,
these rules allow us to check, enforce and search
for occurrences of certain patterns in the software.
As such, the programming patterns become an active
part of the software development and maintenance
environment.},
  note = {International conference on Software Engineering and Knowledge Engineering, Buenos Aires, Argentina, June 13-15, 2001}}

@article{Mens01b,
  author = {Kim Mens and Isabel Michiels and Roel Wuyts},
  title = {Supporting Software Development through Declaratively Codified Programming Patterns},
  journal = {SEKE 2001 Special Issue of Elsevier Journal on Expert Systems with Applications},
  year = {2001},
  misc = {Extended version of \cite{Mens01a}},
  url = {http://scg.unibe.ch/archive/papers/Mens01b.pdf},
  doi = {10.1016/S0957-4174(02)00076-3},
  abstract = {In current-day software development, programmers
often use programming patterns to clarify their
intents and to increase the understandability of
their programs. Unfortunately, most software
development environments do not adequately support
the declaration and use of such patterns. To
explicitly codify these patterns, we adopt a
declarative meta programming approach. In this
approach, we reify the structure of an
(object-oriented) program in terms of logic clauses.
We declare programming patterns as logic rules on
top of these clauses. By querying the logic system,
these rules allow us to check, enforce and search
for occurrences of certain patterns in the software.
As such, the programming patterns become an active
part of the software development and maintenance
environment.},
  institution = {Programming Technology Lab, Vrije Universiteit Brussel, Belgium}}

@inproceedings{Mens01c,
  author = {Tom Mens and Tom Tourw\'e},
  title = {A Declarative Evolution Framework for Object-Oriented Design Patterns},
  booktitle = {International {C}onference on {S}oftware {M}aintenance ({ICSM})},
  pages = {570--579},
  publisher = {IEEE Computer Society Press},
  year = {2001}}

@phdthesis{Mens01d,
  author = {Tom Mens},
  title = {A Formal Foundation for Object-Oriented Software Evolution},
  year = {2001},
  school = {Vrije Universiteit Brussel},
  date-added = {2009-10-21 13:04:25 +0200},
  date-modified = {2009-10-21 13:05:48 +0200}}

@article{Mens02a,
  author = {Tom Mens and Michele Lanza},
  title = {A Graph-Based Metamodel for Object-Oriented Software Metrics},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {72},
  publisher = {Elsevier Science},
  year = {2002},
  url = {http://scg.unibe.ch/archive/papers/Mens02a.pdf},
  doi = {10.1016/S1571-0661(05)80529-8},
  abstract = {Metrics are essential in object-oriented software
engineering for several reasons, among which quality
assessment and improvement of development team
productivity. While the mathematical nature of
metrics calls for clear definitions, frequently
there exist many contradicting definitions of the
same metric depending on the implementation
language. We suggest to express and define metrics
using a language-independent metamodel based on
graphs. This graph-based approach allows for an
unambiguous definition of generic object-oriented
metrics and higher-order metrics. We also report on
some prototype tools that implement these ideas.},
  number = {2}}

@inproceedings{Mens02b,
  author = {Kim Mens and Tom Mens and Michel Wermelinger},
  title = {Maintaining software through intentional source-code views},
  booktitle = {Proceedings of SEKE 2002},
  pages = {289--296},
  publisher = {ACM Press},
  year = {2002}}

@inproceedings{Mens02c,
  author = {Tom Mens and Serge Demeyer},
  title = {Future Trends in Software Evolution Metrics},
  booktitle = {Proceedings IWPSE2001 (4th International Workshop on Principles of Software Evolution)},
  pages = {83--86},
  year = {2001},
  misc = {Deme01a}}

@article{Mens02d,
  author = {T. Mens},
  title = {A State-of-the-Art Survey on Software Merging},
  journal = {IEEE Transactions on Software Engineering},
  volume = {28},
  pages = {449-462},
  publisher = {IEEE Computer Society},
  year = {2002},
  doi = {10.1109/TSE.2002.1000449},
  address = {Los Alamitos, CA, USA},
  date-added = {2009-10-21 13:20:25 +0200},
  date-modified = {2009-10-21 13:21:11 +0200},
  issn = {0098-5589},
  number = {5}}

@inproceedings{Mens02e,
  author = {Mens, Tom and Demeyer, Serge and Janssens, Dirk},
  title = {Formalising Behaviour Preserving Program Transformations},
  booktitle = {International Conference on Graph Transformation},
  year = {2002},
  url = {https://api.semanticscholar.org/CorpusID:5705592}}

@article{Mens03a,
  author = {Tom Mens and Roel Wuyts and Kris De Volder and Kim Mens},
  title = {Workshop Proceedings --- Declarative Meta Programming to Support Software Development},
  journal = {ACM SIGSOFT Software Engineering Notes},
  volume = {28},
  year = {2003},
  url = {http://scg.unibe.ch/archive/papers/Mens03a.pdf},
  doi = {10.1145/638750.638770},
  abstract = {This paper reports on the results of the workshop on
Declarative Meta Programming to Support Software
Development in Edinburgh on September 23, 2002. It
enumerates the presentations made, classifies the
contributions and lists the main results of the
discussions held at the workshop. As such it
provides the context for future workshops around
this topic.},
  month = jan,
  number = {2}}

@inproceedings{Mens03b,
  author = {Tom Mens and Tom Tourw\'{e} and Francisca Munoz},
  title = {Content-Based Software Classification by Self-Organization},
  booktitle = {Proc. International Workshop Principles of Software Evolution},
  pages = {39--44},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  isbn = {0-7695-1903-2}}

@inproceedings{Mens03c,
  author = {Kim Mens and Bernard Poll and Sebastian Gonzalez},
  title = {Using intentional source-code views to aid software maintenance},
  booktitle = {Software Maintenance, 2003. {ICSM} 2003. Proceedings. International Conference on},
  pages = {169-178},
  year = {2003},
  doi = {10.1109/ICSM.2003.1235419},
  issn = {1063-6773},
  month = sep}

@inproceedings{Mens03d,
  author = {Mens, Tom and Demeyer, Serge and Du Bois, Bart and Stenten, Hans and Van Gorp, Pieter},
  title = {Refactoring: Current Research and Future Trends},
  booktitle = {LDTA@ETAPS},
  year = {2003},
  url = {https://api.semanticscholar.org/CorpusID:9433418}}

@article{Mens04a,
  author = {Tom Mens and Juan F. Ramil and Michael W. Godfrey},
  title = {Analyzing the Evolution of Large-Scale Software: Issue Overview},
  journal = {Journal of Software Maintenance and Evolution: Research and Practice},
  volume = {16},
  pages = {363--365},
  publisher = {Wiley},
  year = {2004},
  issn = {1532-060X},
  month = nov,
  number = {6}}

@article{Mens04b,
  author = {Mens, Tom and Tourw\'{e}, Tom},
  title = {A Survey of Software Refactoring},
  journal = {IEEE Transaction on Software Engineering},
  volume = {30},
  pages = {126--139},
  publisher = {IEEE Press},
  year = {2004},
  doi = {10.1109/TSE.2004.1265817},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {2}}

@article{Mens05b,
  author = {Tom Mens and Amnon H. Eden},
  title = {On the Evolution Complexity of Design Patterns},
  journal = {Electr. Notes Theor. Comput. Sci.},
  volume = {127},
  pages = {147-163},
  year = {2005},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {10.1016/j.entcs.2004.08.041},
  number = {3}}

@article{Mens05c,
  author = {Tom Mens and Gabriele Taentzer and Olga Runge},
  title = {Detecting Structural Refactoring Conflicts Using Critical Pair Analysis},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {127},
  pages = {113-128},
  year = {2005},
  url = {https://www.sciencedirect.com/science/article/pii/S157106610500143X},
  doi = {https://doi.org/10.1016/j.entcs.2004.08.038},
  abstract = {Refactorings are program transformations that improve the software structure while preserving the external behaviour. In spite of this very useful property, refactorings can still give rise to structural conflicts when parallel evolutions to the same software are made by different developers. This paper explores this problem of structural evolution conflicts in a formal way by using graph transformation and critical pair analysis. Based on experiments carried out in the graph transformation tool AGG, we show how this formalism can be exploited to detect and resolve refactoring conflicts.},
  issn = {1571-0661},
  keywords = {refactoring, restructuring, graph transformation, critical pair analysis, evolution conflicts, parallel changes},
  note = {Proceedings of the Workshop on Software Evolution through Transformations: Model-based vs. Implementation-level Solutions (SETra 2004)},
  number = {3}}

@article{Mens06a,
  author = {Kim Mens and Andy Kellens and Fr\'{e}d\'{e}ric Pluquet and Roel Wuyts},
  title = {Co-evolving Code and Design with Intensional Views --- A Case Study},
  journal = {Journal of Computer Languages, Systems and Structures},
  volume = {32},
  pages = {140--156},
  publisher = {Elsevier Science},
  year = {2006},
  url = {http://prog.vub.ac.be/Publications/2005/vub-prog-tr-05-26.pdf},
  number = {2}}

@article{Mens06b,
  author = {Tom Mens and Pieter Van Gorp},
  title = {A Taxonomy of Model Transformation},
  journal = {Electr. Notes Theor. Comput. Sci.},
  volume = {152},
  pages = {125-142},
  year = {2006},
  doi = {10.1016/j.entcs.2005.10.021},
  bibsource = {DBLP, http://dblp.uni-trier.de}}

@article{Mens07a,
  author = {Tom Mens and Gabriele Taentzer and Olga Runge},
  title = {Analysing Refactoring Dependencies Using Graph Transformation},
  journal = {Software and Systems Modeling},
  volume = {6},
  pages = {269--285},
  year = {2007},
  number = {3}}

@inbook{Mens08a,
  author = {van Deursen, A. and L. Moonen and A. Zaidman},
  title = {Software Evolution},
  chapter = {8: On the Interplay Between Software Testing and Evolution and its Effect on Program Comprehension},
  publisher = {Springer},
  year = {2008}}

@article{Mens13a,
  author = {Menzies, Tim and Zimmermann, Thomas},
  title = {Software analytics: So what?},
  journal = {IEEE Software},
  year = {2013},
  month = jul}

@techreport{Mens94a,
  author = {Tom Mens},
  title = {A survey on formal models for {OO}},
  year = {1994},
  institution = {Department of Computer Science, Vrije Universiteit Brussel, Belgium},
  number = {vub-tinf-tr-94-03},
  type = {Technical Report Technical Report}}

@techreport{Mens94b,
  author = {Tom Mens and Kim Mens and Patrick Steyaert},
  title = {{OPUS}: a Calculus for Modelling Object-Oriented Concepts},
  year = {1994},
  institution = {Department of Computer Science, Vrije Universiteit Brussel, Belgium},
  number = {vub-tinf-tr-94-04},
  type = {Technical Report}}

@article{Mens96a,
  author = {Tom Mens and Marc van Limberghen},
  title = {Encapsulation and Composition as Orthogonal Operators on Mixins: {A} Solution to Multiple Inheritance Problems},
  journal = {Object Oriented Systems},
  volume = {3},
  pages = {1--30},
  year = {1996},
  number = {1}}

@inproceedings{Mens98a,
  author = {Kim Mens and Roel Wuyts and Dirk Bontridder and Alain Grijseels},
  title = {{ECOOP} '98 Workshop Report: Tools and Environments for Business Rules},
  booktitle = {ECOOP '98 Workshop Reader},
  publisher = {Springer},
  year = {1998},
  url = {http://scg.unibe.ch/archive/papers/MensAl98.pdf},
  abstract = {This workshop focussed on the requirements for tools
and environments that support business rules in an
object-oriented setting and attempted to provide an
overview of possible techniques and tools for the
handling, definition and checking of these rules and
the constraints expressed by them during analysis,
design and development of object-oriented software.},
  editor = {Demeyer, Serge and Bosch, Jan}}

@inproceedings{Mens99a,
  author = {Kim Mens and Roel Wuyts and Theo D'Hondt},
  title = {Declaratively Codifying Software Architectures using Virtual Software Classifications},
  booktitle = {Proceedings of TOOLS-Europe 99},
  pages = {33--45},
  year = {1999},
  url = {http://scg.unibe.ch/archive/papers/Mens99a.pdf},
  month = jun}

@inproceedings{Mens99b,
  author = {Mens, Kim and Mens, Tom and Wouters, Bart and Wuyts, Roel},
  title = {Managing Unanticipated Evolution of Software Architectures},
  booktitle = {Proceedings of ECOOP '99 Workshop on Architectural Evolution},
  year = {1999},
  url = {http://scg.unibe.ch/archive/papers/Mens99b.pdf}}

@phdthesis{Mens99c,
  author = {Tom Mens},
  title = {A formal foundation for object-oriented software evolution},
  year = {1999},
  school = {Vrije Universiteit Brussel},
  month = sep}

@article{Menz13a,
  author = {Menzies, T. and Zimmermann, T.},
  title = {Software Analytics: So What?},
  journal = {Software, IEEE},
  volume = {30},
  pages = {31-37},
  year = {2013},
  doi = {10.1109/MS.2013.86},
  issn = {0740-7459},
  keywords = {program diagnostics,software engineering,IEEE Software,explosive software growth,software analytics,Data analysis,Data models,Decision making,Software algorithms,Software development,Software engineering,Special issues and sections,analysis,big data,measurement,metrics,software analytics},
  month = jul,
  number = {4}}

@inproceedings{Merc08a,
  author = {Mercadal, Julien and Palix, Nicolas and Consel, Charles and Lawall, Julia},
  title = {Pantaxou: A Domain-Specific Language for Developing Safe Coordination Services},
  booktitle = {GPCE'08: Proceedings of the 7th International Conference on Generative Programming and Component Engineering},
  pages = {149--160},
  publisher = {Acm Press},
  year = {2008},
  doi = {10.1145/1449913.1449936},
  address = {Nashville, TN, USA}}

@inproceedings{Merc10a,
  author = {Mercadal, Julien and Enard, Quentin and Consel, Charles and Loriant, Nicolas},
  title = {A Domain-Specific Approach to Architecturing Error Handling in Pervasive Computing},
  booktitle = {OOPSLA'10: Proceedings of the 25th International Conference on Object Oriented Programming Systems Languages and Applications (To appear)},
  year = {2010},
  address = {Reno, NV, USA}}

@inproceedings{Meri17a,
  author = {Merino, Leonel and Ghafari, Mohammad and Anslow, Craig and Nierstrasz, Oscar},
  title = {CityVR: Gameful software visualization},
  booktitle = {2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  pages = {633--637},
  year = {2017},
  organization = {IEEE}}

@article{Meri18a,
  author = {Meriem, Atifi and Abdelaziz, Marzak},
  title = {A Meta-Model for Model-Based Testing Technique: A Review},
  journal = {Journal of Software Engineering},
  volume = {12},
  pages = {1--11},
  year = {2018},
  url = {https://scialert.net/fulltext/?doi=jse.2018.1.11},
  doi = {10.3923/jse.2018.1.11},
  keywords = {metamodel, review, software testing},
  language = {en-gb},
  month = mar,
  number = {1},
  shorttitle = {A Meta-Model for Model-Based Testing Technique},
  urldate = {2023-03-09}}

@inproceedings{Meri19b,
  author = {Leonel Merino and Ekaterina Kozlova and Oscar Nierstrasz and Daniel Weiskopf},
  title = {{VISON}: An Ontology-Based Approach for Software Visualization Tool Discoverability},
  booktitle = {{VISSOFT}'19: Proceedings of the 7th IEEE Working Conference on Software Visualization},
  publisher = {IEEE},
  year = {2019},
  url = {http://scg.unibe.ch/archive/papers/Meri19b-vison.pdf},
  doi = {10.1109/VISSOFT.2019.00014},
  abstract = {Although many tools have been presented in the research
		literature of software visualization, there is little
		evidence of their adoption. To choose a suitable
		visualization tool, practitioners need to analyze various
		characteristics of tools such as their supported software
		concerns and level of maturity. Indeed, some of such
		tools can be prototypes for which the lifespan is
		expected to be short, whereas some other tools can be
		fairly mature products that are maintained for a longer
		time. Although such characteristics are often described
		in papers, we conjecture that practitioners willing to
		adopt software visualizations require additional support
		to discover suitable visualization tools. In this paper,
		we elaborate on our efforts to provide such support. To
		this end, we systematically analyzed research papers in
		the literature of software visualization and curated a
		catalog of 70 available tools that employ various
		visualization techniques to support the analysis of
		multiple software concerns. We further encapsulate these
		characteristics in an ontology. VISON, our software
		visualization ontology, captures these semantics as
		concepts and relationships. We report on early results of
		usage scenarios that demonstrate how the ontology can
		support (i) developers to find suitable tools for
		particular development concerns, and (ii) researchers who
		propose new software visualization tools to identify a
		baseline tool for a controlled experiment.},
  annote = {internationalconference},
  keywords = {scg-pub snf-asa3 scg19 jb20},
  medium = {2},
  peerreview = {yes}}

@inproceedings{Merk95a,
  author = {Dieter Merkl},
  title = {Content-Based Software Classification by Self-Organization},
  booktitle = {Proceedings of International Conference on Neural Networks (ICNN'95)},
  volume = {II},
  pages = {1086--1091},
  year = {1995}}

@inproceedings{Merl02a,
  author = {E. Merlo and M. Dagenais and P. Bachand and J. S. Sormani and G. Antoniol},
  title = {Investigating Large Software System Evolution: the Linux Kernel},
  booktitle = {Proc. Computer Software and Applications Conference (COMPSAC)},
  year = {2002}}

@inproceedings{Merl03a,
  author = {Ettore Merlo and Giuliano Antoniol and Massimiliano {Di Penta}},
  title = {Complexity and Feasibility Issues in Object Oriented Clone detection},
  booktitle = {Proceedings of 2nd International Workshop on Software Clones (IWDSC'2003)},
  year = {2003},
  url = {http://www.bauhaus-stuttgart.de/iwdsc2003/},
  address = {Victoria, British Columbia, Canada},
  month = nov}

@unpublished{Merl04a,
  author = {Ettore Merlo and Giulio Antoniol and Jens Krinke},
  title = {Identifying Similar Code with Metrics and Program Dependence Graphs},
  note = {To appear}}

@inproceedings{Merl04b,
  author = {Merlo, E. and Antoniol, G. and Di Penta, M. and Rollo, VF},
  title = {Linear complexity object-oriented similarity for clone detection and software evolution analyses},
  booktitle = {Proceedings of 20th IEEE International Conference on Sofware Maintenance ({ICSM} '04)},
  pages = {412--416},
  publisher = {IEEE Computer Society Press},
  year = {2004}}

@inproceedings{Merl93a,
  author = {P. Merlo and I. {McAdam} and R. {De~Mori}},
  title = {Source Code Informal Information Analysis Using Connectionist Models},
  booktitle = {Proceedings of International Joint Conference on Artificial Intelligence (IJCAI'93)},
  volume = {1},
  pages = {1339--1345},
  year = {1993}}

@article{Merlo95,
  author = {E. Merlo and L. Hendren and J. Girard and P. Gagn\'e and R. De Mori and P. Panangaden and K. Kontogiannis},
  title = {Reengineering User Interfaces},
  journal = {IEEE Software},
  volume = {12},
  pages = {64-73},
  year = {1995},
  url = {doi.ieeecomputersociety.org/10.1109/52.363164},
  doi = {10.1109/52.363164},
  issn = {0740-7459},
  keywords = {Reverse engineering; user interfaces; flow analysis; process algebra; specifications abstraction},
  month = {jan}}

@article{Mern05a,
  author = {Marjan Mernik and Jan Heering and Anthony M. Sloane},
  title = {When and how to develop domain-specific languages},
  journal = {ACM Comput. Surv.},
  volume = {37},
  pages = {316--344},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1118890.1118892},
  address = {New York, NY, USA},
  issn = {0360-0300},
  number = {4}}

@phdthesis{Merr00a,
  author = {Massimo Merro},
  title = {Locality in the $\pi$-calculus and applications to distributed object},
  year = {2000},
  school = {Ecole de Mines de Paris},
  month = oct}

@inproceedings{Merr00b,
  author = {Massimo Merro and Josva Kleist and Uwe Nestmann},
  title = {Local $\pi$-Calculus at Work: Mobile Objects as Mobile Processes},
  booktitle = {Proceedings of TCS 2000},
  publisher = {Springer-Verlag},
  year = {2000},
  month = aug,
  series = {LNCS}}

@inproceedings{Merr03,
  author = {Merrill, Jason},
  title = {Generic and gimple: A new tree representation for entire functions},
  booktitle = {Proceedings of the 2003 GCC Developers Summit},
  pages = {171--179},
  year = {2003}}

@inproceedings{Merr87a,
  author = {Thomas Merrow and Jane Laursen},
  title = {A Pragmatic System for Shared Persistent Objects},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {103--110},
  year = {1987},
  month = dec}

@inproceedings{Merr98a,
  author = {Massimo Merro and Davide Sangiorgi},
  title = {On Asynchrony in Name-Passing Calculi},
  booktitle = {25th Colloquium on Automata, Languages and Programming ({ICALP}) (Aalborg, Denmark)},
  volume = {1443},
  pages = {856--867},
  publisher = {Springer-Verlag},
  year = {1998},
  editor = {Kim G. Larsen and Sven Skyum and Glynn Winskel},
  month = jul,
  series = {LNCS}}

@article{Mertz18a,
  author = {Mertz, Jhonny and Nunes, Ingrid},
  title = {Understanding Application-Level Caching in Web Applications: A Comprehensive Introduction and Survey of State-of-the-Art Approaches},
  journal = {ACM Computer Survey},
  volume = {50},
  publisher = {ACM},
  year = {2017},
  url = {https://doi.org/10.1145/3145813},
  doi = {10.1145/3145813},
  address = {New York, NY, USA},
  articleno = {98},
  issn = {0360-0300},
  keywords = {self-adaptive systems, adaptation, Application-level caching, web application, web caching},
  month = nov,
  number = {6},
  numpages = {34}}

@inproceedings{Merz12a,
  author = {Merz, Florian and Falke, Stephan and Sinz, Carsten},
  title = {L{LBMC}: Bounded {M}odel {C}hecking of {C} and {C++}; {P}rograms {U}sing a {C}ompiler {IR}},
  booktitle = {Verified Software: Theories, Tools, Experiments},
  year = {2012},
  doi = {10.1007/978-3-642-27705-4_12},
  series = {VSTTE'12}}

@inproceedings{Mesb07a,
  author = {Mesbah, Ali and van Deursen, Arie},
  title = {Migrating Multi-page Web Applications to Single-page AJAX Interfaces},
  booktitle = {Proceedings of the 11th European Conference on Software Maintenance and Reengineering},
  pages = {181--190},
  publisher = {IEEE Computer Society},
  year = {2007},
  url = {http://dx.doi.org/10.1109/CSMR.2007.33},
  doi = {10.1109/CSMR.2007.33},
  acmid = {1252784},
  address = {Washington, DC, USA},
  isbn = {0-7695-2802-3},
  numpages = {10},
  series = {CSMR '07}}

@article{Mesb12a,
  author = {Mesbah, Ali and van Deursen, Arie and Lenselink, Stefan},
  title = {Crawling Ajax-Based Web Applications through Dynamic Analysis of User Interface State Changes},
  journal = {{ACM} Transactions on the Web},
  volume = {6},
  pages = {1--30},
  year = {2012},
  url = {http://dl.acm.org/citation.cfm?doid=2109205.2109208},
  doi = {10.1145/2109205.2109208},
  abstract = {Categories and Subject Descriptors: H.5.4 [Information Interfaces and Presentation]: Hypertext/Hypermedia-Navigation; H.3.3 [Information Search and Retrieval]: Search process; D.2.2 [Software Engineering]: Design Tools and Techniques General Terms: Design, Algorithms, Experimentation.},
  date = {2012-03-01},
  issn = {15591131},
  langid = {english},
  number = {1},
  urldate = {2018-06-22}}

@techreport{Mese90a,
  author = {Jos\'e Meseguer},
  title = {Rewriting as a Unified Model of Concurrency},
  year = {1990},
  institution = {SRI International},
  month = jun,
  type = {SRI-CSL-90-02R}}

@inproceedings{Mese90b,
  author = {Jos\'e Meseguer},
  title = {A Logical Theory of Concurrent Objects},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {101--115},
  year = {1990},
  month = oct}

@techreport{Mese92a,
  author = {Jos\'e Meseguer},
  title = {A Logical Theory of Concurrent Objects and its Realization in the Maude Language},
  year = {1992},
  institution = {SRI International},
  month = jul,
  type = {SRI-CSL-92-08}}

@inproceedings{Mese93a,
  author = {Jos\'e Meseguer},
  title = {Solving the Inheritance Anomaly in Concurrent Object-Oriented Programming},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {220--246},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {The inheritance anomaly refers to the serious
difficulty in combining inheritance and concurrency
in a simple and satisfactory way within a concurrent
object-oriented language. The problem is closely
connected with the need to impose synchronization
constraints on the acceptance of a message by an
object. In most concurrent object-oriented languages
this synchronization is achieved by synchronization
code controlling the acceptance of messages by
objects. Synchronization code is often hard to
inherit and tends to require extensive
redefinitions. The solutions that have appeared so
far in the literature to alleviate this problem seem
to implicitly assume that better, more reusable,
mechanisms are needed to create and structure
synchronization code. The approach taken in this
paper is to consider the inheritance anomaly as a
problem caused by the very presence of
synchronization code. The goal is then to completely
eliminate synchronization code. This is achieved by
using order-sorted rewriting logic, an abstract
model of concurrent computation that is
machine-independent and extremely fine grain, and
that can be used directly to program concurrent
object-oriented systems. Our proposed solution
involves a distinction between two different notions
of inheritance, a type-theoretic one called class
inheritance, and a notion called module inheritance
that supports reuse and modification of code. These
two different notions address two different ways in
which the inheritance anomaly can appear; for each
of them we propose declarative solutions in which no
explicit synchronization code is ever used.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@mastersthesis{Mesn05a,
  author = {C{\'e}dric Mesnage},
  title = {Interactive and Cooperative Visual Data Mining of Evolving Software},
  year = {2005},
  school = {University of Caen and University of Lugano},
  month = sep,
  type = {Master {Thesis}}}

@article{Mesn05b,
  author = {C{\'e}dric Mesnage and Michele Lanza},
  title = {{White Coats}: Web-Visualization of Evolving Software in {3D}},
  journal = {VISSOFT 2005. 3rd IEEE International Workshop on Visualizing Software for Understanding and Analysis},
  volume = {0},
  pages = {40--45},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/VISSOF.2005.1684302},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7803-9540-9}}

@inproceedings{Mess20a,
  author = {Messe, Nan andChiprianov, Vanea and Belloir, Nicolas and El-Hachem, Jamal and Fleurquin R\'egis and Sadou, Salah},
  title = {Asset-Oriented Threat Modeling},
  booktitle = {International Conference on Trust, Security and Privacy in Computing and Communications, TrustCom'20},
  pages = {1--11},
  year = {2020}}

@inproceedings{Mesz03a,
  author = {G. Meszaros and S.M. Smith and J. Andrea},
  title = {The Test Automation Manifesto},
  booktitle = {Proceedings of the Third XP and Second Agile Universe Conference},
  pages = {73--81},
  year = {2003},
  editors = {F. Maurer and D. Wells},
  location = {New Orleans, LA, USA},
  month = aug}

@book{Mesz07a,
  author = {Gerard Meszaros},
  title = {XUnit Test Patterns -- Refactoring Test Code},
  publisher = {Addison Wesley},
  year = {2007},
  date-added = {2007-01-31 10:27:08 +0100},
  date-modified = {2007-01-31 10:27:08 +0100},
  month = jun}

@inproceedings{Meta96a,
  author = {Daniel Le M{\'e}tayer},
  title = {Software architecture styles as graph grammars},
  booktitle = {{SIGSOFT}'96: Proceedings of the Fourth {ACM} {SIGSOFT} Symposium on the Foundations of Software Engineering},
  pages = {15--23},
  publisher = {ACM Press},
  year = {1996},
  editor = {David Garlan}}

@article{Meta98a,
  author = {Daniel Le M{\'e}tayer},
  title = {Describing Software Architecture Styles Using Graph Grammars},
  journal = {IEEE Transactions on Software Engineering},
  volume = {24},
  pages = {521--533},
  year = {1998},
  month = jul,
  number = {7}}

@article{Metc76a,
  author = {R.M. Metcalfe and D.R. Boggs},
  title = {Ethernet: Distributed Packet Switching for Local Computer Networks},
  journal = {CACM},
  volume = {19},
  pages = {395--404},
  year = {1976},
  month = jul,
  number = {7}}

@inproceedings{Mett10a,
  author = {Mettler, Adrian and Wagner, David and Close, Tyler},
  title = {Joe-E: A Security-Oriented Subset of Java},
  booktitle = {Proceedings of Annual Network and Distributed System Security Symposium (ISOC NSSS)},
  pages = {375--388},
  year = {2010},
  keywords = {security static type}}

@inproceedings{Mett92a,
  author = {LTC Erik Mettala and Marc H. Graham},
  title = {The Domain Specific Software Architecture Program},
  booktitle = {Proceedings of the DARPA Software Technology Conference},
  year = {1992},
  url = {ftp://ftp.sei.cmu.edu/pub/documents/92.reports/ps/sr09.92.ps},
  month = apr}

@inproceedings{Metz91a,
  author = {Igor Metz and Hanspeter Bieri},
  title = {A Bintree Representation of Generalized Binary Images},
  booktitle = {Proceedings of the 5th Workshop on Geometrical Problems of Image Processing},
  year = {1991},
  misc = {March 11-15},
  address = {Georgenthal},
  month = mar}

@article{Metz91b,
  author = {Igor Metz and Hanspeter Bieri},
  title = {Algorithms for generalizes Digital Images Represented by Bintrees},
  journal = {Technical Report IAM-91-001},
  publisher = {Institut f{\"u}r Informatik und agewandte Mathematik, Universit{\"a}t Bern},
  year = {1991},
  abstract = {Generalized digital images, subsequently called
hyperimages, represent a variation of the
conventional digital images which implies pixels of
different dimensions within the same image. The
extent of a hyperimage is the disjoint union of all
pixel extents it contains, which are relatively open
unit cubes with respect to the euclidean topology of
the underlying space. This approach is independent
of any specific dimension of image and space,
respectively, and allows strict partitioning of
images into subimages, not just subdividing. Since
the storage required by a $d$-dimensional hyperimage
of resolution $n^d$ is $\approx 2^{d}n^{d}$ when
using a binary matrix representation, a more space
efficient bintree representation is investigated.
Algorithms for the Boolean operations, the
computation of elementary topological properties and
the computation of some important measures of
$d$-dimensional hyperimages (volume, surface, Euler
characteristic) are presented. Because of the nature
of bintrees, the implementation of these algorithms,
too, can be performed independently of any specific
dimension of image and space.}}

@article{Metz93a,
  author = {Igor Metz and Hermann H{\"u}ni and Raphael Bischof},
  title = {Umstellung auf objektorientierte Technologie: Die erste Klippe Schulung},
  journal = {Output Spezial},
  year = {1993},
  misc = {22 November},
  abstract = {Die Umstellung der Softwarentwicklung auf ein neues
Paradigma ist kein einfaches Unterfangen. Es muss in
diesem Rahmen nicht nur eine neue
Programmiersprache, sondern vor allem ein neuer
Denkansatz eingef{\"u}hrt werden. Wir beschreiben in
diesem Artikel unser Konzept f{\"u}r die Schulung
ganzer Entwicklungsteams, die mit objektorientierter
Technologie arbeiten wollen. Wir werden auch die
Erfahrungen darstellen, die ein Gesch{\"a}ftsbereich
der Ascom mit dieser Umschulung gemacht hat.},
  month = nov}

@article{Metz93b,
  author = {Igor Metz and Hermann H{\"u}ni},
  title = {Teaching Object-Oriented Software Architecture by Example: The Games Factory},
  journal = {ACM OOPS Messenger},
  volume = {4},
  pages = {261--267},
  year = {1993},
  abstract = {This paper describes the outline of our lecture and
the experience we have had when introducing
object--oriented programming, design, and software
architecture to students of different educational
and vocational backgrounds. While other courses on
object--oriented programming only show how to
implement things in an object--oriented way, we
emphasize on the production of reusable class
libraries and frameworks.},
  month = apr,
  number = {2}}

@article{Metz93c,
  author = {Igor Metz and Hermann H{\"u}ni},
  title = {Teaching Object-Oriented Software Engineering by Example: The Games Factory},
  journal = {Computer Science Education},
  volume = {4},
  pages = {111--121},
  year = {1993},
  abstract = {Object-oriented analysis, design, and programming is
a software development technology which has
attracted universal attention in the past few year.
We do not think that object-oriented technology is a
completely new approach to software construction, it
is merely the consequent continuation of software
engineering principles which evolved since 1968, the
year of birth of software engineering. This paper
describes a course on software engineering with
objects which tracks the evolution of this
discipline. We work through the history of these
concepts using a single application domain,
demonstrating how the relevant analysis and design
methods evolved over time, culminating in
object-oriented techniques.}}

@inproceedings{Metz94a,
  author = {Igor Metz},
  title = {Finding Neighbours in d-dimensional Binary Digital Images Represented by Bintrees},
  booktitle = {Proceedings of the Fourth Conference on Discrete Geometry for Computer Imagery},
  year = {1994},
  abstract = {An algorithm for moving between adjacent regions in
a binary digital image representated by a bintree is
presented. This algorithm differs from other
neighbour-finding algorithms in hierarchical image
representations, as it exploits the nature of
bintrees and thus can perform independently of any
specific dimension of image or space. The algorithm
is hybrid in its nature, as it uses a linear tree
notation (locational codes) to find its way in a
tree implemented with pointers.},
  address = {Grenoble},
  month = sep}

@phdthesis{Metz95a,
  author = {Igor Metz},
  title = {Bintree Lab: Ein Framework von Datenstrukturen und Algorithmen f\"ur Bintrees},
  year = {1995},
  school = {University of Bern},
  month = oct,
  type = {{Ph.D}. Thesis}}

@inproceedings{Meul87a,
  author = {Pieter S. van der Meulen},
  title = {{INSIST}: Interactive Simulation in {Smalltalk}},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {366--376},
  year = {1987},
  month = dec}

@inproceedings{Meur16a,
  author = {Meurice, Loup and Nagy, Csaba and Cleve, Anthony},
  title = {Detecting and preventing program inconsistencies under database schema evolution},
  booktitle = {Software {Quality}, {Reliability} and {Security} ({QRS}), 2016 {IEEE} {International} {Conference} on},
  pages = {262--273},
  publisher = {IEEE},
  year = {2016}}

@techreport{Mey91a,
  author = {Vicki de Mey},
  title = {Flexible Graphic Design Systems},
  pages = {145--155},
  year = {1991},
  abstract = {Today's graphic design systems do not sufficiently
support the designer. Advances have been made and
there is no doubt that the computer is here to stay
in the design community but not with out further
modifications. This paper discusses the current
situation and attempts to highlight some of the key
areas where computer support is needed. A flexible
graphic design system is proposed and some useful
technologies for its conception are presented.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  note = {A version of the following was presented as a position paper at the Second Eurographics Workshop on Object-Oriented Graphics, Texel, the Netherlands, June 4-7, 1991.},
  type = {Object Composition}}

@techreport{Mey91b,
  author = {Vicki de Mey and Betty Junod and Serge Renfer and Marc Stadelmann and Ino Simitsek},
  title = {The Implementation of Vista --- {A} Visual Scripting Tool},
  pages = {31--56},
  year = {1991},
  abstract = {This paper describes the implementation of a visual
scripting tool called Vista. Vista is being
developed within the scope of ITHACA, an Esprit II
project. Major implementation issues are
highlighted, implementation experience is discussed
and code examples are included.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@article{Mey92c,
  author = {Vicki de Mey and Simon Gibbs},
  title = {Working with Multimedia},
  journal = {OUTPUT, special issue on Informatik-Szene Schweiz 1993},
  pages = {54--56},
  year = {1992},
  misc = {Dec. 11},
  month = dec}

@inproceedings{Mey92e,
  author = {Vicki de Mey and Christian Breiteneder and Laurent Dami and Simon Gibbs and Dennis Tsichritzis},
  title = {Visual Composition and Multimedia},
  booktitle = {Proceedings of Eurographics 1992, Computer Graphics Forum},
  volume = {11},
  pages = {9--22},
  publisher = {Blackwell Publishers},
  year = {1992}}

@techreport{Mey92f,
  author = {Vicki de Mey},
  title = {Experimenting with Component-Oriented Software Development},
  pages = {221--241},
  year = {1992},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@inproceedings{Mey93a,
  author = {Vicki de Mey and Simon Gibbs},
  title = {A Multimedia Component Kit},
  booktitle = {Proceedings ACM Multimedia '93},
  year = {1993},
  misc = {Aug 4-6},
  abstract = {In this paper we present an object-oriented
perspective to multimedia and discuss a testbed for
prototyping distributed multimedia applications. We
describe the implementation of the testbed which
includes a driver application, called a virtual
museum, and a visual composition tool. The tool
allows interactive construction of multimedia
applications from generic software components by
direct manipulation and graphical editing. A
videotape of the virtual museum and the visual
composition tool is used for the presentation of the
testbed.},
  address = {Annaheim, CA},
  month = aug,
  note = {To appear}}

@techreport{Mey93b,
  author = {Vicki de Mey and Oscar Nierstrasz},
  title = {The {ITHACA} Application Development Environment},
  pages = {267--280},
  year = {1993},
  url = {http://scg.unibe.ch/archive/osg/Mey93bIthacaADE.pdf},
  abstract = {The goal of ITHACA is to produce a complete
object-oriented application development environment.
This paper reports on the status of ITHACA in
relation to this ambitious goal concentrating on the
tools comprising the application development
environment. Some general observations and
recommendations are made concerning the integration
of the tools. Future directions of the project are
also outlined.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Visual Objects}}

@phdthesis{Mey94a,
  author = {Vicki de Mey},
  title = {Visual Composition of Software Applications},
  year = {1994},
  school = {Dept. of Computer Science, University of Geneva},
  number = {no. 2660)},
  type = {{Ph.D}. Thesis}}

@incollection{Mey95a,
  author = {Vicki de Mey},
  title = {Visual Composition of Software Applications},
  booktitle = {Object-Oriented Software Composition},
  pages = {275--303},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {Open applications can be viewed as compositions of
reusable and configurable components. We introduce
visual composition as a way of constructing
applications from plug-compatible software
components. After presenting related work, we
describe an object-oriented framework for visual
composition that supports open system development
through the notion of domain-specific composition
models. We illustrate the use of the framework
through the application of a prototype
implementation to a number of very different
domains. In each case, a specialized visual
composition tool was realized by developing a
domain-specific composition model. We conclude with
some remarks and observations concerning component
engineering and application composition in a context
where visual composition is an essential part of the
development process.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@techreport{Meye05a,
  author = {Michael Meyer},
  title = {Merlin: A Continuous Integration Tool for {VisualWorks}},
  year = {2005},
  url = {http://scg.unibe.ch/archive/projects/Meye05aMerlin.pdf},
  abstract = {A common problem in Software development is that
changes made by one person break the code of an
other. These bugs are difficult to find because the
problem doesn't belong to one persons area, it's in
the interaction of the two components. These kind of
bugs can stay undetected for weeks or months and the
later they are detected the more difficult it
becomes to fix them. With Continuous Integration
these kind of bugs can often be detected on the same
day that they manifest. This makes fixing the bug a
lot easier since the developers know where to look
for the bug and they still know why they introduced
the changes that lead to the bug. The target of
Merlin is to provide a slim Continuous Integration
tool for Smal ltalk. Merlin was designed to be
extendable with custom plugins. The author is of the
opinion that a Continous Integration tool only
offers a real surplus if all repetitive and mostly
cumbersome tasks of the development process can be
handled by the tool.},
  institution = {University of Bern},
  month = dec,
  type = {Informatikprojekt}}

@inproceedings{Meye06a,
  author = {Michael Meyer and Tudor G\^irba and Mircea Lungu},
  title = {Mondrian: An Agile Visualization Framework},
  booktitle = {ACM Symposium on Software Visualization},
  pages = {135--144},
  publisher = {ACM Press},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Meye06aMondrian.pdf},
  doi = {10.1145/1148493.1148513},
  abstract = {Data visualization is the process of representing
data as pictures to support reasoning about the
underlying data. For the interpretation to be as
easy as possible, we need to be as close as possible
to the original data. As most visualization tools
have an internal meta-model, which is different from
the one for the presented data, they usually need to
duplicate the original data to conform to their
meta-model. This leads to an increase in the
resources needed, increase which is not always
justified. In this work we argue for the need of
having an engine that is as close as possible to the
data and we present our solution of moving the
visualization tool to the data, instead of moving
the data to the visualization tool. Our solution
also emphasizes the necessity of reusing basic
blocks to express complex visualizations and
allowing the programmer to script the visualization
using his preferred tools, rather than a third party
format. As a validation of the expressiveness of our
framework, we show how we express several already
published visualizations and describe the pros and
cons of the approach.},
  address = {New York, NY, USA},
  medium = {2},
  series = {SoftVis'06}}

@mastersthesis{Meye06b,
  author = {Michael Meyer},
  title = {Scripting Interactive Visualizations},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Meye06b.pdf},
  abstract = {Data visualization is an important tool in reverse
engineering. With a good visualization the
interesting parts of the underlying data can be
detected faster than by merely inspecting the raw
data. One peculiarity of the existing visualization
tools is the fact that they implement a finite set
of specific visualizations. These specialized tools
are not flexible enough to support the user when a
slightly or sometimes even drastically different
visualization is needed. Often the user needs to be
familiar with several visualization tools with each
tool expecting a different input format. Usually a
large amount of time is being invested into
converting the data into the format that is expected
by the visualization tool. We propose a new
visualization model that is designed to minimize the
time-to-solution. We achieve this by working
directly on the underlying data, by making nesting
an integral part of the model and by defining a
powerful scripting language that can be used to
define visualizations. We support exploring data in
an interactive way by providing hooks for various
events. Users can register actions for these events
in the visualization script. As a validation of our
model we implemented the framework Mondrian and used
it to implement several established visualizations.},
  month = nov}

@misc{Meye06c,
  author = {Michael Meyer and Tudor G\^irba},
  title = {Mondrian: Scripting Visualizations},
  year = {2006},
  url = {http://scg.unibe.ch/archive/reports/Meye06cMondrian.pdf},
  abstract = {Visualization is representing data into pictures for
supporting reasoning. For the interpretation to be
as easy as possible, we need to be as close as
possible to the original data. The primary focus of
our approach is to offer the programmer the
possibility of visualizing his data model while
using his preferred environment and tools. That is
why, we have built Mondrian, an engine that puts all
the emphasis on providing the needed basic pieces
and that places the control in the hand of the
programmer.},
  howpublished = {European Smalltalk User Group 2006 Technology Innovation Awards},
  month = aug,
  note = {It received the 2nd prize}}

@inproceedings{Meye06d,
  author = {Meyer, M.},
  title = {Pattern-based {Reengineering} of {Software} {Systems}},
  booktitle = {2006 13th {Working} {Conference} on {Reverse} {Engineering}},
  pages = {305--306},
  year = {2006},
  doi = {10.1109/{WCRE}.2006.42},
  abstract = {The described approach supports the detection of anti pattern implementations in source code. Thus, it can be used for the evaluation of existing software in the planning stage of reengineering activities. In addition, the approach supports the actual reengineering by facilitating the improvement of anti pattern instances by transformations and the verification of those transformations},
  keywords = {Application software, Software maintenance, Software systems, Maintenance engineering, Testing, program verification, object-oriented programming, Software engineering, antipattern implementation detection, Computer science, Documentation, Formal specifications, Pattern recognition, pattern-based reengineering, software systems, systems re-engineering},
  month = oct}

@article{Meye09a,
  author = {Bertrand Meyer and Christine Choppy and J\/orgen Staunstrup and Jan van Leeuwen},
  title = {Viewpoint Research evaluation for computer science},
  journal = {Commun. ACM},
  volume = {52},
  pages = {31--34},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1498765.1498780},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {4}}

@inproceedings{Meye10a,
  author = {Meyers, Bart and Ebraert, Peter and Janssens, Dirk},
  title = {Intensional changes avoid co-evolution!},
  booktitle = {Proceedings of the 7th Workshop on Reflection, AOP and Meta-Data for Software Evolution},
  pages = {4:1--4:6},
  publisher = {ACM},
  year = {2010},
  articleno = {4},
  isbn = {978-1-4503-0536-5},
  series = {RAM-SE'10}}

@article{Meye85a,
  author = {J.-J.Ch. Meyer},
  title = {Merging Regular Processes by Means of Fixed Point Theory},
  journal = {Theoretical Computer Science},
  volume = {45},
  pages = {193--260},
  publisher = {North-Holland},
  year = {1985}}

@inproceedings{Meye86a,
  author = {Bertrand Meyer},
  title = {Genericity versus Inheritance},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {391--405},
  year = {1986},
  month = nov}

@techreport{Meye88a,
  author = {Bertrand Meyer},
  title = {Disciplined Exceptions},
  year = {1988},
  address = {Goleta, CA},
  institution = {Interactive Software Engineering},
  type = {TR-EI-22/EX}}

@book{Meye88b,
  author = {Bertrand Meyer},
  title = {Object-oriented Software Construction},
  publisher = {Prentice-Hall},
  year = {1988}}

@book{Meye88c,
  author = {Bertrand Meyer},
  title = {Objektorientierte Softwareentwicklung},
  publisher = {Prentice-Hall},
  year = {1988},
  isbn = {3-446-15773-5}}

@inproceedings{Meye89a,
  author = {Bertrand Meyer},
  title = {The New Culture of Software Development: Reflections on the Practice of Object-Oriented Design},
  booktitle = {Proceedings TOOLS '89},
  pages = {13--23},
  year = {1989},
  month = nov}

@article{Meye91a,
  author = {Scott Meyers},
  title = {Difficulties in Integrating Multiview Development Systems},
  journal = {IEEE Softw.},
  volume = {8},
  pages = {49--57},
  publisher = {IEEE Computer Society Press},
  year = {1991},
  doi = {10.1109/52.62932},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  number = {1}}

@inproceedings{Meye91b,
  author = {Scott Meyers and Steven P. Reiss},
  title = {A system for multiparadigm development of software systems},
  booktitle = {IWSSD '91: Proceedings of the 6th international workshop on Software specification and design},
  pages = {202--209},
  publisher = {IEEE Computer Society Press},
  year = {1991},
  address = {Los Alamitos, CA, USA},
  isbn = {0-8186-2320-9 (PAPER)},
  location = {Como, Italy}}

@book{Meye92a,
  author = {Bertrand Meyer},
  title = {Eiffel: The Language},
  publisher = {Prentice-Hall},
  year = {1992}}

@article{Meye92b,
  author = {Bertrand Meyer},
  title = {Applying Design by Contract},
  journal = {IEEE Computer (Special Issue on Inheritance \& Classification)},
  volume = {25},
  pages = {40--52},
  year = {1992},
  url = {http://se.ethz.ch/~meyer/publications/computer/contract.pdf},
  doi = {10.1109/2.161279},
  month = oct,
  number = {10}}

@book{Meye92c,
  author = {Scott Meyers},
  title = {Effective {C}++},
  publisher = {Addison Wesley},
  year = {1992},
  isbn = {0-201-56364-9}}

@inproceedings{Meye92d,
  author = {Scott Meyers and Steven P. Reiss},
  title = {An empirical study of multiple-view software development},
  booktitle = {SDE 5: Proceedings of the fifth ACM SIGSOFT symposium on Software development environments},
  pages = {47--57},
  publisher = {ACM Press},
  year = {1992},
  doi = {10.1145/142868.142913},
  address = {New York, NY, USA},
  isbn = {0-89791-554-2},
  location = {Tyson's Corner, Virginia, United States}}

@techreport{Meye93a,
  author = {Bertrand Meyer},
  title = {Systematic Concurrent Object-Oriented Programming},
  year = {1993},
  institution = {ISE},
  month = jan,
  number = {TR-EI-37/SC},
  type = {ISE}}

@misc{Meye93b,
  author = {Bertrand Meyer and Jean-Marc Nerson},
  title = {Object-Oriented Applications},
  year = {1993},
  isbn = {13-013789-7}}

@article{Meye93c,
  author = {Bertrand Meyer},
  title = {Systematic Concurrent Object-Oriented Programming},
  journal = {Communications of the ACM},
  volume = {36},
  pages = {56--80},
  year = {1993},
  url = {ftp://ftp.eiffel.com/pub/doc/concurrency/concurrency.ps.Z},
  month = sep,
  number = {9}}

@techreport{Meye93d,
  author = {Scott Meyers and Carolyn K. Duby and Steven P. Reiss},
  title = {Constraining the Structure and Style of Object-Oriented Programs},
  year = {1993},
  address = {Box 1910, Providence, RI 02912},
  institution = {Department of Computer Science, Brown University},
  month = apr,
  number = {CS-93-12}}

@book{Meye94a,
  author = {Bertrand Meyer},
  title = {Reusable Software: The Base Object-Oriented Components Libraries},
  publisher = {Prentice-Hall},
  year = {1994},
  isbn = {0-13-245499-8}}

@book{Meye95a,
  author = {Bertrand Meyer},
  title = {Object Success},
  publisher = {Prentice-Hall},
  year = {1995},
  isbn = {0-13-192833-3}}

@book{Meye96a,
  author = {Scott Meyers},
  title = {More Effective {C}++},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-63371-X}}

@book{Meye97a,
  author = {Bertrand Meyer},
  title = {Object-Oriented Software Construction},
  publisher = {Prentice-Hall},
  year = {1997},
  edition = {Second}}

@book{Meye98a,
  author = {Scott Meyers},
  title = {Effective {C}++},
  publisher = {Addison Wesley},
  year = {1998},
  edition = {second},
  isbn = {0-201-92488-9}}

@book{Meyer90a,
  author = {Bertrand Meyer},
  title = {Conception et Programmation par Objets},
  publisher = {Intereditions},
  year = {1990}}

@article{Meyer90b,
  author = {B. Meyer},
  title = {Tools for a new culture: Lessons from the design of Eiffel libraries},
  journal = {Communications of the ACM},
  volume = {33},
  pages = {68--88},
  year = {1990},
  month = sep,
  number = {9}}

@article{Meyr82a,
  author = {Norman Meyrowitz and Andy van Dam},
  title = {Interactive Editing Systems (Parts {I} and {II})},
  journal = {ACM Computing Surveys},
  volume = {14},
  pages = {321--415},
  year = {1982},
  month = sep,
  number = {3}}

@proceedings{Meyr86a,
  title = {Proceedings {OOPSLA} '86},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  year = {1986},
  address = {Portland, Oregon},
  editor = {Norman Meyrowitz},
  month = nov}

@inproceedings{Meyr86b,
  author = {Norman Meyrowitz},
  title = {Intermedia: The Architecture and Construction of an Object-Oriented Hypermedia System and Applications Framework},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {186--201},
  year = {1986},
  month = nov}

@proceedings{Meyr87a,
  title = {Proceedings {OOPSLA} '87},
  journal = {ACM SIGPLAN Notices},
  volume = {22},
  year = {1987},
  address = {Orlando, Florida},
  editor = {Norman Meyrowitz},
  month = dec}

@proceedings{Meyr88a,
  title = {Proceedings {OOPSLA} '88},
  journal = {ACM SIGPLAN Notices},
  volume = {23},
  year = {1988},
  address = {San Diego, California},
  editor = {Norman Meyrowitz},
  month = nov}

@proceedings{Meyr89a,
  title = {Proceedings {OOPSLA} '89},
  journal = {ACM SIGPLAN Notices},
  volume = {24},
  year = {1989},
  address = {New Orleans, Louisiana},
  editor = {Norman Meyrowitz},
  month = oct}

@proceedings{Meyr90a,
  title = {Proceedings {OOPSLA}/{ECOOP}'90},
  journal = {ACM SIGPLAN Notices},
  volume = {25},
  year = {1990},
  address = {Ottawa, Canada},
  editor = {Norman Meyrowitz},
  isbn = {0-201-52430-X},
  month = oct}

@inproceedings{Mezi02a,
  author = {Mira Mezini and Klaus Ostermann},
  title = {Integrating Independent Components with On-Demand Remodularization},
  booktitle = {Proceedings OOPSLA 2002},
  pages = {52--67},
  year = {2002},
  month = nov}

@inproceedings{Mezi03a,
  author = {Mira Mezini and Klaus Ostermann},
  title = {Conquering aspects with {Caesar}},
  booktitle = {Proceedings of the 2nd international conference on Aspect-oriented software development},
  pages = {90--99},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/643603.643613},
  isbn = {1-58113-660-9},
  location = {Boston, Massachusetts}}

@inproceedings{Mezi03b,
  author = {Mira Mezini and Klaus Ostermann},
  title = {Modules for Crosscutting Models},
  booktitle = {8th International Conference on Reliable Software Technologies (Ada-Europe '03)},
  publisher = {svlncs},
  year = {2003},
  location = {Toulouse},
  month = jun}

@inproceedings{Mezi97a,
  author = {Mira Mezini},
  title = {Dynamic Object Evolution without Name Collisions},
  booktitle = {Proceedings ECOOP '97},
  pages = {190--219},
  publisher = {Springer-Verlag},
  year = {1997},
  url = {http://www.ifs.uni-linz.ac.at/~ecoop/cd/papers/1241/12410190.pdf},
  doi = {10.1007/BFb0053371},
  month = jun}

@inproceedings{Mezi98a,
  author = {Mira Mezini and Karl Lieberherr},
  title = {Adaptive Plug-and-Play Components for Evolutionary Software Development},
  booktitle = {Proceedings OOPSLA '98 ACM SIGPLAN Notices},
  pages = {97--116},
  year = {1998},
  month = oct}

@inproceedings{Mian08d,
  author = {Mian, Natash Ali and Hussain, Tauqeer},
  title = {Database reverse engineering tools},
  booktitle = {Proceedings of the 7th WSEAS International Conference on Software Engineering, Parallel and Distributed Systems},
  pages = {206--211},
  year = {2008},
  organization = {World Scientific and Engineering Academy and Society (WSEAS)}}

@inproceedings{Mice99a,
  author = {Thierry Miceli and Houari A. Sahraoui and Robert Godin},
  title = {A Metric Based Technique For Design Flaws Detection And Correction},
  booktitle = {Proceedings IEEE Automated Software Engineering Conference (ASE)},
  year = {1999}}

@book{Mich01a,
  author = {Alain Michard},
  title = {XML --- langage et applications},
  publisher = {Eyrolles},
  year = {2001}}

@inproceedings{Mich01b,
  author = {J. Michaud and M-A. Storey and H. Muller},
  title = {Integrating Information Sources for Visualizing {Java} Programs},
  booktitle = {Proceedings of IEEE International Conference on Software Maintenance ({ICSM}'01)},
  pages = {250--259},
  year = {2001},
  month = nov,
  organization = {IEEE}}

@misc{Mich03a,
  author = {Linda G. DeMichiel},
  title = {Enterprise {JavaBeans} specification, Version 2.1},
  year = {2003},
  month = nov,
  organization = {Sun Microsystems}}

@misc{Mich06a,
  author = {Linda DeMichiel, Michael Keith},
  title = {{JSR 220}: Enterprise {JavaBeans} specification, Version 3.0},
  year = {2006},
  month = may,
  organization = {Sun Microsystems}}

@inproceedings{Mich94a,
  author = {L. Mich and R. Garigliano},
  title = {A Linguistic Approach to the Development of Object-Oriented Systems Using the {NL} System {LOLITA}},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {371--390},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Mich99a,
  author = {Amir Michail and David Notkin},
  title = {Assessing Software Libraries by Browsing Similar Classes, Functions and Relationships},
  booktitle = {International Conference on Software Engineering},
  pages = {463--472},
  year = {1999},
  url = {citeseer.ist.psu.edu/article/michail99assessing.html}}

@misc{Micr10a,
  author = {Microsoft},
  title = {Microsoft Visual Studio},
  year = {2010},
  key = {Microsoft},
  month = mar,
  note = {http://www.microsoft.com/VisualStudio}}

@techreport{Miede12a,
  author = {Miedes, Emili and Munoz-Esco{\i}, Francesc D},
  title = {Dynamic Software Update},
  year = {2012},
  institution = {Technical Report ITI-SIDI-2012/004}}

@mastersthesis{Miha03a,
  author = {Petru Mihancea},
  title = {Optimizarea detectiei automate a carentelor de proiectare in sistemele software orientate pe obiecte},
  year = {2003},
  school = {University of Timisoara},
  type = {Diploma thesis}}

@inproceedings{Miha05a,
  author = {Petru Mihancea and Radu Marinescu},
  title = {Towards the Optimization of Automatic Detection of Design Flaws in Object-Oriented Software Systems},
  booktitle = {Proceedings of European Conference on Software Maintenance (CSMR 2005)},
  pages = {92--101},
  year = {2005}}

@inproceedings{Miha06a,
  author = {Petru Florin Mihancea},
  title = {Towards a Client Driven Characterization of Class Hierarchies},
  booktitle = {Proceedings of International Conference on Program Comprehension ({ICPC} 2006)},
  pages = {285--294},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  doi = {10.1109/{ICPC}.2006.48},
  address = {Los Alamitos CA}}

@inproceedings{Mikh98a,
  author = {Leonid Mikhajlov and Emil Sekerinski},
  title = {A {Study} of the {Fragile} {Base} {Class} {Problem}},
  booktitle = {Proceedings of the European Conference on Object-Oriented Programming},
  pages = {355--383},
  publisher = {Springer-Verlag},
  year = {1998},
  number = {1445},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Mikk98a,
  author = {Mikkonen, Tommi},
  title = {Formalizing Design Patterns},
  booktitle = {20th International Conference on Software Engineering},
  pages = {115--124},
  year = {1998}}

@inproceedings{Mila02a,
  author = {Ana Milanova and Atanas Rountev and Barbara G. Ryder},
  title = {Parameterized object sensitivity for points-to and side-effect analyses for {Java}},
  booktitle = {ISSTA '02: Proceedings of the 2002 ACM SIGSOFT international symposium on Software testing and analysis},
  pages = {1--11},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/566172.566174},
  address = {New York, NY, USA},
  isbn = {1-58113-562-9},
  location = {Roma, Italy}}

@techreport{Mila18a,
  author = {Fredrik Milani and Luciano Garcia-Banuelos},
  title = {Blockchain and Principles of Business Process Re-Engineering for Process Innovation},
  year = {2018},
  institution = {arXiv:submit/2290158}}

@book{Mile06a,
  author = {Miles},
  title = {Learning UML 2.0},
  publisher = {O'Reilly},
  year = {2006}}

@book{Mili02a,
  author = {Hafedh Mili and Ali Mili and Sherif Yacoub and Edward Andy},
  title = {Reuse-Based Software Engineering},
  publisher = {John Wiley and Sons},
  year = {2002}}

@article{Mili02b,
  author = {Hafedh Mili and Hamid Mcheick and Salah Sadou},
  title = {CorbaViews -- Distributing Objects that Support Several Functional Aspects},
  journal = {Journal of Object Technology},
  volume = {1},
  pages = {207--229},
  year = {2002},
  month = aug,
  number = {3}}

@inproceedings{Mill01a,
  author = {Mark Samuel Miller and Chip Morningstar and Bill Frantz},
  title = {Capability-based Financial Instruments},
  journal = {Lecture Notes in Computer Science},
  booktitle = {FC '00: Proceedings of the 4th International Conference on Financial Cryptography},
  volume = {1962},
  pages = {349--378},
  publisher = {Springer-Verlag},
  year = {2001},
  isbn = {3-540-42700-7}}

@inproceedings{Mill01b,
  author = {Miller, Robert C. and Myers, Brad A.},
  title = {Interactive Simultaneous Editing of Multiple Text Regions},
  booktitle = {Proceedings of the General Track: 2002 USENIX Annual Technical Conference},
  pages = {161--174},
  publisher = {USENIX Association},
  year = {2001},
  url = {http://portal.acm.org/citation.cfm?id=715910},
  address = {Berkeley, CA, USA},
  citeulike-article-id = {6710465},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=715910},
  isbn = {1-880446-09-X},
  posted-at = {2010-02-22 09:04:55},
  priority = {2}}

@inproceedings{Mill01c,
  author = {Millett, Lynette I. and Friedman, Batya and Felten, Edward},
  title = {Cookies and Web browser design: toward realizing informed consent online},
  booktitle = {Proceedings of the SIGCHI conference on Human factors in computing systems},
  pages = {46--52},
  publisher = {ACM},
  year = {2001},
  url = {http://doi.acm.org/10.1145/365024.365034},
  doi = {10.1145/365024.365034},
  acmid = {365034},
  address = {New York, NY, USA},
  isbn = {1-58113-327-8},
  keywords = {Internet Explorer, Netscape Navigator, Value-Sensitive Design, Web browsers, World Wide Web, computer ethics, cookies, e-business, e-commerce, ethics, human values, human-computer interaction, informed consent, interface design, locus of control, online interactions, personalization, privacy, security, social computing, social impact, tracking},
  location = {Seattle, Washington, United States},
  numpages = {7},
  series = {CHI '01}}

@inproceedings{Mill03a,
  author = {Todd Millstein and Mark Reay and Craig Chambers},
  title = {Relaxed MultiJava: balancing extensibility and modular typechecking},
  booktitle = {Proceedings of the 18th ACM SIGPLAN conference on Object-oriented programing, systems, languages, and applications},
  pages = {224--240},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/949305.949325},
  isbn = {1-58113-712-5},
  location = {Anaheim, California, USA}}

@inproceedings{Mill03b,
  author = {Mark S. Miller and Jonathan S. Shapiro},
  title = {Paradigm Regained: Abstraction Mechanisms for Access Control},
  booktitle = {Proceedings of the Eigth Asian Computing Science Conference},
  pages = {224--242},
  year = {2003}}

@techreport{Mill03c,
  author = {Mark Miller and Ka-Ping Yee and Jonathan Shapiro},
  title = {Capability Myths Demolished},
  year = {2003},
  institution = {Combex Inc}}

@phdthesis{Mill06a,
  author = {Mark Samuel Miller},
  title = {Robust Composition: Towards a Unified Approach to Access Control and Concurrency Control},
  year = {2006},
  school = {Johns Hopkins University},
  address = {Baltimore, Maryland, USA},
  month = may}

@techreport{Mill08a,
  author = {Mark S. Miller and Mike Samuel and Ben Laurie and Ihab Awad and Mike Stay},
  title = {Caja Safe active content in sanitized JavaScript},
  year = {2008},
  url = {http://google-caja.googlecode.com/files/caja-spec-2008-06-07.pdf},
  institution = {Google Inc.}}

@article{Mill56a,
  author = {Joan C. Miller and Clifford J. Maloney},
  title = {The Magical Number Seven, Plus or Minus Two: Some Limits on Our Capacity for Processing Information},
  journal = {Psychological Review},
  volume = {63},
  pages = {81--97},
  year = {1956},
  bibsource = {http://www.interaction-design.org/references}}

@article{Mill63a,
  author = {Joan C. Miller and Clifford J. Maloney},
  title = {Systematic mistake analysis of digital computer programs.},
  journal = {Commun. ACM},
  volume = {6},
  pages = {58--63},
  year = {1963},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {10.1145/366246.366248},
  number = {2}}

@techreport{Mill77a,
  author = {R. Miller and C.K. Yap},
  title = {Formal Specification and Analysis of Loosely Connected Processes},
  year = {1977},
  address = {N.Y.},
  institution = {Yorktown Heights},
  number = {28917},
  type = {IBM Research Report}}

@inproceedings{Mill86a,
  author = {Michael S. Miller and Howard Cunningham and Chan Lee and Steven R. Vegdahl},
  title = {The Application Accelerator Illustration System},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {294--302},
  year = {1986},
  month = nov}

@article{Mill90a,
  author = {Miller, Barton P. and Fredriksen, Lars and So, Bryan},
  title = {An Empirical Study of the Reliability of UNIX Utilities},
  journal = {Commun. ACM},
  volume = {33},
  pages = {32-44},
  publisher = {Association for Computing Machinery},
  year = {1990},
  url = {https://doi.org/10.1145/96267.96279},
  doi = {10.1145/96267.96279},
  abstract = {The following section describes the tools we built to test the utilities. These tools include the fuzz (random character) generator, ptyjig (to test interactive utilities), and scripts to automate the testing process. Next, we will describe the tests we performed, giving the types of input we presented to the utilities. Results from the tests will follow along with an analysis of the results, including identification and classification of the program bugs that caused the crashes. The final section presents concluding remarks, including suggestions for avoiding the types of problems detected by our study and some commentary on the bugs we found. We include an Appendix with the user manual pages for fuzz and ptyjig.},
  address = {New York, NY, USA},
  issn = {0001-0782},
  issue_date = {Dec. 1990},
  month = {dec},
  number = {12},
  numpages = {13}}

@article{Mill91a,
  author = {James S. Miller and Guillermo J. Rozas},
  title = {Free variables and first-class environments},
  journal = {Lisp Symb. Comput.},
  volume = {4},
  pages = {107--141},
  publisher = {Kluwer Academic Publishers},
  year = {1991},
  doi = {10.1007/BF01813016},
  address = {Hingham, MA, USA},
  issn = {0892-4635},
  number = {2}}

@inproceedings{Mill99a,
  author = {Todd Millstein and Craig Chambers},
  title = {Modular Statically Typed Multimethods},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {279--303},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Multimethods offer several well-known advantages
over the single dispatching of conventional
object-oriented languages, including a simple
solution to the "binary method" problem, cleaner
implementations of the "visitor," "strategy," and
similar design patterns, and a form of "open
objects." However, previous work on statically typed
multimethods whose arguments are treated
symmetrically has required the whole program to be
available in order to perform typechecking. We
describe Dubious, a simple core language including
first-class generic functions with symmetric
multimethods, a classless object model, and modules
that can be separately typechecked. We identify two
sets of restrictions that ensure modular type safety
for Dubious as well as an interesting intermediate
point between these two. We have proved each of
these modular type systems sound.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@misc{Mills05a,
  author = {Mills, Ashley},
  title = {ANTLR Tutorial},
  year = {2005},
  url = {http://supportweb.cs.bham.ac.uk/docs/tutorials/docsystem/build/tutorials/antlr/antlr.html},
  institution = {University of Birmingham}}

@article{Miln05a,
  author = {Milne, Iain and Rowe, Glenn},
  title = {Interpreting Computer Code in a Computer-Based Learning System for Novice Programmers: Research Articles},
  journal = {Softw. Pract. Exper.},
  volume = {35},
  pages = {1477--1493},
  publisher = {John Wiley & Sons, Inc.},
  year = {2005},
  abstract = {Although the principles of writing compilers and interpreters are well known, we have found that the ideas needed to develop an interpreter for the express purpose of allowing direct interaction with the running code do not yet appear to have been published in an academic context. We describe a programming method that can be used for the production of an interpreter for common object-oriented languages such as C++, Java and C\#. The main purpose of the interpreter is to parse short, relatively simple programs and allow direct interaction between the user and the running code. Such a system is useful for projects such as OGRE, which is an educational tool allowing students to visualize in three-dimensional graphics the state of a program as it runs. The interpreter works by first parsing the source code and building up a data structure capable of representing the program's source code in a form that can be used to both run the program and extract detailed information from the running program. This extraction allows for novel uses of the interpreter, such as forming the basis for a visualization system that must display and provide such information to the user as they watch their executing program. This paper considers the construction of such an interpreter specifically for C++, but the principles should be the same for other similar languages such as Java and C\#. We cover the main tasks required of the programmer to create and use the data structure, highlighting areas such as its design, initial construction during parsing, and techniques required to use it for interpretation. These include the ability for the data structure to intelligently clone subsets of itself when multiple copies of one of its elements are required by the running program, how it handles C++'s complicated function overloading and overriding rules, and how inheritance and polymorphism can be supported. Copyright {\copyright} 2005 John Wiley & Sons, Ltd.},
  address = {USA},
  issn = {0038-0644},
  keywords = {novices, Java, software visualization, C++, interpretation},
  month = {dec},
  number = {15},
  numpages = {17}}

@incollection{Miln75a,
  author = {Robin Milner},
  title = {Processes, a mathematical model of computing agents},
  booktitle = {Logic Colloquium, Bristol 1973},
  pages = {157--174},
  publisher = {North Holland},
  year = {1975},
  address = {Amsterdam}}

@article{Miln78a,
  author = {Robin Milner},
  title = {A Theory of Type Polymorphism in Programming},
  journal = {Journal of Computer and System Sciences},
  volume = {17},
  pages = {348--375},
  year = {1978}}

@article{Miln79a,
  author = {G. Milne and Robin Milner},
  title = {Concurrent Processes and Their Syntax},
  journal = {Journal of the ACM},
  volume = {26},
  pages = {302--321},
  year = {1979},
  month = apr,
  number = {2}}

@book{Miln80a,
  author = {Robin Milner},
  title = {A Calculus of Communicating Systems},
  volume = {92},
  publisher = {Springer-Verlag},
  year = {1980},
  series = {LNCS}}

@inproceedings{Miln81a,
  author = {Robin Milner},
  title = {A Modal Characterization of Observable Machine-Behaviour},
  booktitle = {Proceedings CAAP '81},
  volume = {112},
  pages = {25--34},
  publisher = {Springer-Verlag},
  year = {1981},
  address = {Genoa},
  editor = {E. Astesiano and C. B{\"o}hm},
  month = mar,
  series = {LNCS}}

@article{Miln83a,
  author = {Robin Milner},
  title = {Calculi for Synchrony and Asynchrony},
  journal = {Theoretical Computer Science},
  volume = {25},
  pages = {267--310},
  publisher = {North-Holland},
  year = {1983}}

@article{Miln84a,
  author = {Robin Milner},
  title = {A Complete Inference System for a Class of Regular Behaviours},
  journal = {Journal of Computer and System Sciences},
  volume = {28},
  pages = {439--466},
  publisher = {Academic Press},
  year = {1984}}

@book{Miln89a,
  author = {Robin Milner},
  title = {Communication and Concurrency},
  publisher = {Prentice-Hall},
  year = {1989},
  isbn = {0-13-115007-3}}

@techreport{Miln89b,
  author = {Robin Milner and Joachim Parrow and David Walker},
  title = {A Calculus of Mobile Processes, Parts {I} and {II}},
  year = {1989},
  institution = {Computer Science Dept., University of Edinburgh},
  month = mar,
  number = {-86},
  type = {Reports ECS-LFCS-89-85 and}}

@book{Miln89c,
  author = {Robin Milner},
  title = {Functions as Processes},
  publisher = {University of Edinburgh},
  year = {1989},
  month = jun,
  note = {Working paper}}

@book{Miln90a,
  author = {Robin Milner and M. Tofte and R. Harper},
  title = {The definition of standard {ML}.},
  publisher = {MIT Press},
  year = {1990},
  address = {Cambridge},
  isbn = {0-262-63132-6}}

@techreport{Miln90b,
  author = {Robin Milner},
  title = {Functions as Processes},
  year = {1990},
  institution = {INRIA Sofia-Antipolis},
  number = {1154},
  type = {Rapport de Recherche}}

@inproceedings{Miln90c,
  author = {Robin Milner},
  title = {Functions as Processes},
  booktitle = {Proceedings ICALP '90},
  volume = {443},
  pages = {167--180},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Warwick U.},
  editor = {M.S. Paterson},
  month = jul,
  series = {LNCS}}

@techreport{Miln90d,
  author = {Robin Milner},
  title = {Sorts and Types in the $pi$ Calculus},
  year = {1990},
  institution = {Computer Science Dept., University of Edinburgh},
  month = dec,
  number = {(RM15)},
  type = {manuscript}}

@book{Miln91a,
  author = {Robin Milner and M. Tofte},
  title = {Commentary on standard {ML}.},
  publisher = {MIT Press},
  year = {1991},
  address = {Cambridge},
  isbn = {0-262-63137-7}}

@misc{Miln91b,
  author = {Robin Milner},
  title = {Concurrency and Compositionality},
  year = {1991},
  note = {Workshop at Goslar}}

@techreport{Miln91c,
  author = {Robin Milner},
  title = {The Polyadic $\pi$ Calculus: a tutorial},
  year = {1991},
  url = {ftp://ftp.cl.cam.ac.uk/users/rm135/ppi.ps.Z},
  institution = {Computer Science Dept., University of Edinburgh},
  month = oct,
  type = {{ECS-LFCS-91-180}}}

@inproceedings{Miln91d,
  author = {Robin Milner and Joachim Parrow and David Walker},
  title = {Modal Logics for Mobile Processes},
  booktitle = {Proceedings of CONCUR '91},
  volume = {527},
  pages = {45--60},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Amsterdam},
  editor = {J.C.M. Baeten and J.F. Groote},
  month = aug,
  series = {LNCS}}

@techreport{Miln92a,
  author = {Robin Milner},
  title = {Action Structures},
  year = {1992},
  url = {ftp://ftp.doc.ic.ac.uk/ic.doc/theory/CONFER/papers/Milner/as.ps.gz ftp://ftp.cl.cam.ac.uk/users/rm135/as.ps.Z},
  institution = {Computer Science Dept., University of Edinburgh},
  month = dec,
  type = {ECS-LFCS-92-249}}

@article{Miln92b,
  author = {Robin Milner and Joachim Parrow and David Walker},
  title = {A Calculus of Mobile Processes, Part {I}/{II}},
  journal = {Information and Computation},
  volume = {100},
  pages = {1--77},
  year = {1992}}

@article{Miln92c,
  author = {Robin Milner},
  title = {Functions as Processes},
  journal = {Mathematical Structures in Computer Science},
  volume = {2},
  pages = {119--141},
  year = {1992},
  number = {2}}

@inproceedings{Miln92d,
  author = {Robin Milner and Davide Sangiorgi},
  title = {Barbed Bisimulation},
  booktitle = {Proceedings ICALP '92},
  volume = 623,
  pages = {685--695},
  publisher = {Springer-Verlag},
  year = {1992},
  url = {http://www-sop.inria.fr/meije/personnel/Davide.Sangiorgi/mypapers.html},
  address = {Vienna},
  month = jul,
  series = {LNCS}}

@inproceedings{Miln93a,
  author = {Robin Milner},
  title = {An Action Structures for the Synchronous $pi$-calculus},
  booktitle = {Proc. FCT '93},
  volume = {710},
  pages = {87--105},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {ftp://ftp.cl.cam.ac.uk/users/rm135/spas.ps.Z},
  series = {LNCS}}

@inproceedings{Miln93b,
  author = {Robin Milner},
  title = {Action Calculi and the $pi$-calculus},
  booktitle = {Proceedings of the NATO Summer School on Logic and Computation},
  publisher = {Computer Science Dept., University of Edinburgh},
  year = {1993},
  url = {ftp://ftp.cl.cam.ac.uk/users/rm135/ap.ps.Z},
  address = {Marktoberdorf},
  month = nov}

@book{Miln94b,
  author = {Robin Milner},
  title = {Pi-nets: a graphical form of Pi-calculus},
  volume = {LNCS 788},
  pages = {26--42},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Proceedings ESOP '94}}

@book{Miln99a,
  author = {Robin Milner},
  title = {Communicating and Mobile Systems: The $\pi$-calculus},
  publisher = {Cambridge University Press},
  year = {1999}}

@proceedings{Milo971a,
  title = {EDOC '97 Proceedings},
  publisher = {IEEE},
  year = {1997},
  editor = {Zoran Milosevic},
  isbn = {0-8186-8031-8}}

@inproceedings{Milo98a,
  author = {D. Milojicic and M. Breugst and I. Busse and J. Campbell and S. Covaci and B. Friedman and K. Kosaka and D. Lange and K. Ono and M. Oshima and C. Tham and S. Virdhagriswaran and J. White},
  title = {{MASIF}, The {OMG} Mobile Agent System Interoperability Facility},
  booktitle = {Proceedings of Mobile Agents '98},
  year = {1998}}

@inproceedings{Mina05a,
  author = {Minamide Y.},
  title = {Static Approximation of Dynamically Generated Web Pages},
  booktitle = {WWW},
  year = {2005},
  keywords = {security static type}}

@mastersthesis{Minj04a,
  author = {Florian Minjat},
  title = {Vers une mod\'elisation transverse et modulaire des collaborations par couplage des traits et des classboxes},
  year = {2004},
  school = {Ecole des mines de Nantes},
  url = {http://scg.unibe.ch/archive/masters/Minj04a.pdf},
  abstract = {Dans le domaine de la conception de langages, la
r\'{e}utilisation et la factorisation du code sont
deux enjeux majeurs. Dans le but de r\'{e}pondre
\`{a} ces questions, de tr\`{e}s nombreuses
solutions ont \'{e}t\'{e} propos\'{e}es, avec plus
ou moins de succ\`{e}s. Mais aucune na r\'{e}pondu
de mani\`{e}re parfaite au probl\`{e}me qui reste
ouvert. Le concept de collaboration est ainsi
tr\`{e}s int\'{e}ressant pour la r\'{e}utilisation
de fonctionnalit\'{e}s transverses, mais aucun
mod\`{e}le de ce concept ne permet de rendre compte
des probl\`{e}mes induits. Dans ce rapport nous
introduisons un mod\`{e}le original de collaboration
bas\'{e} sur les concepts de Traits et de
Classboxes, d\'{e}velopp\'{e}s par le Software
Composition Group de luniversit\'{e} de Bern, que
nous illustrons au travers de deux exemples.
Apr\`{e}s \'{e}valuation, il sav\`{e}re que ce
mod\`{e}le r\'{e}pond de mani\`{e}re simple et
explicite aux probl\'{e}matiques des
collaborations.},
  month = sep,
  type = {{DEA}}}

@inproceedings{Mino93a,
  author = {Toshimi Minoura and Shirish S. Pargaonkar and Kurt Rehfuss},
  title = {Structural Active Object Systems for Simulation},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {338--355},
  year = {1993},
  month = oct}

@inproceedings{Mins00a,
  author = {Naftaly H. Minsky and Yaron M. Minksy and Victoria Ungureanu},
  title = {Making Tuple Space Safe for Heterogeneous Distributed Systems},
  booktitle = {{S}ymposium on {A}pplied {C}omputing ({SAC}'2000)},
  pages = {218--226},
  year = {2000}}

@book{Mins67a,
  author = {M. Minsky},
  title = {Computation: Finite and Infinite Machines},
  publisher = {Prentice-Hall},
  year = {1967}}

@techreport{Mins74a,
  author = {Marvin Minsky},
  title = {A Framework for Representing Knowledge},
  publisher = {Massachusetts Institute of Technology},
  year = {1974},
  institution = {MIT}}

@inproceedings{Mins87a,
  author = {Naftaly H. Minsky and David Rozenshtein},
  title = {A Law-Based Approach to Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {482--493},
  year = {1987},
  month = dec}

@inproceedings{Mins89a,
  author = {Naftaly H. Minsky and David Rozenshtein},
  title = {Controllable Delegation: An Exercise in Law-Governed Systems},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {371--380},
  year = {1989},
  month = oct}

@article{Mins91a,
  author = {Naftaly Minsky},
  title = {The Imposition of Protocols Over Open Distributed Systems},
  journal = {IEEE Transactions on Software Engineering},
  volume = {17},
  pages = {183--195},
  year = {1991},
  month = feb,
  number = {2}}

@incollection{Mins95a,
  author = {Naftaly Minsky and Jerrold Leichter},
  title = {Law-Governed Linda as a Coordination Model},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = 924,
  pages = {125--146},
  publisher = {Springer-Verlag},
  year = {1995},
  url = {http://www.cs.rutgers.edu/~minsky/public-papers/linda-paper.ps},
  abstract = {Linda is a very high level communication model which
allows processes to communicate without knowing each
other's identities and without having to arrange for
a definite rendezvous. This high level of
abstraction would make Linda particularly suitable
for use as a coordination model for open systems, if
it were not for the fact that the Linda
communication is very unsafe. We propose to remove
this deficiency of Linda by means of the concept of
law-governed architecture previously applied to
centralized and message passing systems. We define a
model for Law-Governed Linda (LGL) communication,
and we demonstrate its efficacy by means of several
illustrative examples.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@book{Mins95b,
  author = {Naftaly Minsky},
  title = {Law-Governed Regularities in Object Systems; Part 1: An Abstract Model},
  publisher = {Rutgers University, NJ},
  year = {1995},
  url = {http://www.cs.rutgers.edu/~minsky/public-papers/LGA-paper.ps},
  month = mar}

@techreport{Mins95c,
  author = {Naftaly Minsky},
  title = {Coordination and Trust in Open Distributed Systems},
  year = {1995},
  url = {http://www.cs.rutgers.edu/~minsky/public-papers/trust-paper.ps},
  institution = {Rutgers University, NJ},
  month = mar,
  type = {Technical Report}}

@inproceedings{Mins96a,
  author = {Naftaly Minsky},
  title = {Towards Alias-Free Pointers},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {189--209},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Mins97a,
  author = {Naftaly Minsky and Victoria Ungureanu},
  title = {Regulated Coordination in Open Distributed Systems},
  booktitle = {Proceedings COORDINATION '97},
  volume = 1282,
  pages = {81--97},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Berlin, Germany},
  editor = {David Garlan and Daniel Le M{\`e}tayer},
  month = sep,
  series = {LNCS}}

@inproceedings{Mint07a,
  author = {Minto, Shawn and Murphy, Gail C.},
  title = {Recommending Emergent Teams},
  booktitle = {MSR '07: Proceedings of the Fourth International Workshop on Mining Software Repositories},
  pages = {5},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MSR.2007.27},
  address = {Washington, DC, USA},
  isbn = {0-7695-2950-X}}

@techreport{Miod04a,
  author = {Paul Miodonski and Thomas Forster and Jens Knodel and Mikael Lindvall and Dirk Muthig},
  title = {Evaluation of Software Architectures with Eclipse},
  year = {2004},
  institution = {Fraunhofer IESE},
  month = {nov}}

@techreport{Mira02c,
  author = {Miranda, Eliot and Bonzini, Paolo and Dahl, Steve and Griswold, David and H\"olzle, Urs and Piumarta, Ian and Simmons, David},
  title = {A Sketch for an Adaptive Optimizer for Smalltalk written in Smalltalk},
  year = {2002},
  url = {https://hal.inria.fr/hal-01525754/document},
  institution = {HAL}}

@article{Mira05a,
  author = {Eliot Miranda and David Leibs and Roel Wuyts},
  title = {Parcels: a Fast and Feature-Rich Binary Deployment Technology},
  journal = {Journal of Computer Languages, Systems and Structures},
  volume = {31},
  pages = {165--182},
  publisher = {Elsevier},
  year = {2005},
  misc = {SCI impact factor 0.467},
  url = {http://scg.unibe.ch/archive/papers/Mira05aParcels.pdf},
  abstract = {While development of a software system is important,
it is also very important to have suitable
mechanisms for actually deploying code. Current
state-of-the-art deployment approaches force the
developer to structure the code in such a way that
deployment is possible, thereby severely inhibiting
reuse and comprehensibility of the system. This
paper presents parcels, an atomic deployment
mechanism for objects and source code that supports
shape changing of classes, method addition, method
replacement, and partial loading. The key to making
this deployment mechanism feasible and fast is a
pickling algorithm that allows the unpickling to be
done iteratively instead of with a recursive descent
parser. Parcels were developed for VisualWorks
Smalltalk, and have been the default deployment
mechanism the past years for thousands of
customers.},
  month = may,
  number = {3-4}}

@misc{Mira08a,
  author = {Eliot Miranda},
  title = {Cog Blog. Speeding Up Croquet and Squeak with a new open-source VM from Qwaq},
  year = {2008},
  url = {http://www.mirandabanda.org/cogblog/}}

@inproceedings{Mira11a,
  author = {Eliot Miranda},
  title = {The Cog Smalltalk Virtual Machine},
  booktitle = {Proceedings of VMIL 2011},
  year = {2011}}

@inproceedings{Mira18a,
  author = {Miranda, Eliot and B{\'e}ra, Cl{\'e}ment and Boix, Elisa Gonzalez and Ingalls, Dan},
  title = {Two decades of {Smalltalk} {VM} development: live {VM} development through simulation tools},
  booktitle = {Proceedings of International Workshop on Virtual Machines and Intermediate Languages (VMIL'18)},
  pages = {57--66},
  year = {2018},
  doi = {10.1145/3281287.3281295},
  organization = {ACM}}

@inproceedings{Mira87a,
  author = {Eliot Miranda},
  title = {BrouHaHa --- {A} Portable {Smalltalk} Interpreter},
  booktitle = {Proceedings OOPSLA '87},
  volume = {22},
  pages = {354--365},
  year = {1987},
  doi = {10.1145/38765.38839},
  month = dec}

@misc{Mira99a,
  author = {Eliot Miranda},
  title = {Context Management in VisualWorks 5i},
  year = {1999}}

@book{Mirk04a,
  author = {Mirkim},
  title = {Computer security},
  publisher = {Kluwer Academic Publishers},
  year = {2004},
  note = {received, Suen}}

@inproceedings{Mish04a,
  author = {Gilad Mishne and Maarten de Rijke},
  title = {Source Code Retrieval using Conceptual Similarity},
  booktitle = {Proceedings RIAO 2004},
  pages = {539--554},
  year = {2004},
  url = {http://remote.science.uva.nl/~mdr/Publications/}}

@inproceedings{Misi01a,
  author = {Vojislav B. Mi\v{s}i\'{c}},
  title = {Cohesion is Structural, Coherence is Functional: Different Views, Different Measures},
  booktitle = {Proceedings of the Seventh International Software Metrics Symposium ({METRICS}-01)},
  publisher = {IEEE},
  year = {2001}}

@inproceedings{Misi98a,
  author = {Vojislav B. Mi\v{s}i\'{c} and Simon Moser},
  title = {From Formal Metamodels to Metrics: An Object-Oriented Approach},
  booktitle = {Proc. Technology of Object-Oriented Languages and Systems ({T}{O}{O}{L}{S}-24)},
  publisher = {IEEE Computer Society Press},
  year = {1998}}

@article{Misr88a,
  author = {S.K. Misra and P.J. Jalic},
  title = {Third-Generation versus Fourth-Generation Software Development},
  journal = {IEEE Software},
  volume = {5},
  pages = {8--14},
  year = {1988},
  month = jul,
  number = {4}}

@inproceedings{Miss89a,
  author = {Michele Missikoff and Michel Scholl},
  title = {An Algorithm for Insertion into a Lattice: Application to Type Classification},
  booktitle = {Proceedings of FODO '89 (3rd International Conference on Foundations of Data Organization and Algorithms},
  volume = {367},
  pages = {64--82},
  publisher = {Springer-Verlag},
  year = {1989},
  location = {Paris, France},
  month = jun,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Mitc01a,
  author = {Brian S. Mitchell and Spiros Mancoridis},
  title = {Comparing the {Decompositions} {Produced} by {Software} {Clustering} {Algorithms} using {Similarity} {Measurements}},
  booktitle = {Proceedings of {ICSM} '01 (International Conference on Software Maintenance)},
  publisher = {IEEE Computer Society Press},
  year = {2001},
  location = {Florence, Italy},
  month = nov}

@inproceedings{Mitc02a,
  author = {Brian S. Mitchell and Spiros Mancoridis and Martin Traverso},
  title = {Search based reverse engineering},
  booktitle = {Proceedings of the 14th international conference on Software engineering and knowledge engineering},
  pages = {431--438},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/568760.568835},
  isbn = {1-58113-556-4},
  location = {Ischia, Italy}}

@book{Mitc03a,
  author = {John C. Mitchell},
  title = {Concepts in Programming Languages},
  publisher = {Cambridge University Press},
  year = {2003},
  isbn = {0-521-78098-5}}

@inproceedings{Mitc04a,
  author = {Brian S. Mitchell and Spiros Mancoridis and Martin Traverso},
  title = {Using Interconnection Style Rules to Infer Software Architecture Relations},
  booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},
  year = {2004},
  address = {Seattle, Washington}}

@article{Mitc06a,
  author = {Brian S. Mitchell and Spiros Mancoridis},
  title = {On the Automatic Modularization of Software Systems Using the Bunch Tool},
  journal = {IEEE Transactions on Software Engineering},
  volume = {32},
  pages = {193--208},
  year = {2006},
  number = {3}}

@inproceedings{Mitc06b,
  author = {Nick Mitchell},
  title = {The Runtime Structure of Object Ownership},
  booktitle = {Proceedings of the 20th European Conference on Object-Oriented Programming (ECOOP'06)},
  volume = {4067},
  pages = {74--98},
  publisher = {Springer},
  year = {2006},
  isbn = {3-540-35726-2},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Mitc06c,
  author = {Nick Mitchell and Gary Sevitsky and Harini Srinivasan},
  title = {Modeling Runtime Behavior in Framework-Based Applications},
  booktitle = {ECOOP},
  pages = {429--451},
  year = {2006},
  doi = {10.1007/11785477_25}}

@techreport{Mitc79a,
  author = {J.G. Mitchell and W. Maybury and R. Sweet},
  title = {Mesa Language Manual, version 5.0},
  year = {1979},
  institution = {Xerox Palo Alto Research Centre},
  month = apr,
  type = {CSL-79-3}}

@inproceedings{Mitc85a,
  author = {John C. Mitchell and Gordon D. Plotkin},
  title = {Abstract Types Have Existential Type},
  booktitle = {Proceedings POPL '85},
  pages = {37--51},
  year = {1985},
  misc = {Jan. 14-16},
  address = {New Orleans},
  month = jan}

@article{Mitc88a,
  author = {John C. Mitchell and Gordon D. Plotkin},
  title = {Abstract Types Have Existential Type},
  journal = {ACM TOPLAS},
  volume = {10},
  pages = {470--502},
  year = {1988},
  month = jul,
  number = {3}}

@incollection{Mitc90a,
  author = {John C. Mitchell},
  title = {Type Systems for Programming Languages},
  booktitle = {Handbook of Theoretical Computer Science},
  pages = {367--458},
  publisher = {Elsevier},
  year = {1990},
  editor = {J. van Leeuwen}}

@techreport{Mitc94a,
  author = {Kevin Mitchell},
  title = {{Concurrency in a Natural Semantics}},
  year = {1994},
  institution = {University of Edinburgh},
  month = dec,
  type = {{ECS-LFCS-94-311}}}

@book{Mitc96a,
  author = {John C. Mitchell},
  title = {Foundations of Programming Languages},
  publisher = {MIT Press},
  year = {1996},
  isbn = {0-262-13321-0}}

@book{Mitc97a,
  author = {Thomas Mitchell},
  title = {Machine Learning},
  publisher = {McGraw Hill},
  year = {1997},
  date-added = {2014-11-14 23:46:25 +0000},
  date-modified = {2014-11-14 23:46:25 +0000},
  edition = {1nd},
  isbn = {978-0071154673}}

@incollection{Mits93a,
  author = {Kin\'ichi Mitsui and Hiroaki Nakamura and Theodore C. Law and Shahram Javey},
  title = {Design of an Integrated and Extensible {C}++ Programming Environment},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {95--109},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {This paper describes a framework and some techniques
used in the construction of integrated and
extensible programming environments. To support
programming in complex object-oriented languages
such as C++, a database that contains semantic
information on the source programs is essential.
Tools in such environments should be constructed in
a highly integrated fashion around the database. In
addition, new programming techniques and the
acquisition of knowledge through experience create a
need for extensions. Such environments have to be
designed so that extensions can be made easily. Thus
integration and extensibility are key features of
such environments.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@book{Mitt04a,
  author = {Frank Mittelbach and Michael Goossens},
  title = {The Latex Companion Second Edition},
  publisher = {Addison Wesley},
  year = {2004}}

@inproceedings{Mitt86a,
  author = {Sanja Mittal and Daniel G. Bobrow and Kenneth M. Kahn},
  title = {Virtual Copies --- At the Boundary Between Classes and Instances},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {159--166},
  year = {1986},
  month = nov}

@inproceedings{Mo15a,
  author = {Mo, Ran and Cai, Yuanfang and Kazman, Rick and Xiao, Lu},
  title = {Hotspot patterns: The formal definition and automatic detection of architecture smells},
  booktitle = {2015 12th Working IEEE/IFIP Conference on Software Architecture},
  pages = {51--60},
  year = {2015},
  organization = {IEEE}}

@article{Moad90a,
  author = {J. Moad and S. Kerr},
  title = {How customers help the new {IBM}},
  journal = {j-DATAMATION},
  volume = {36},
  pages = {20--24},
  year = {1990},
  coden = {DTMNAT},
  issn = {0011-6963},
  month = jan,
  number = {1},
  pubcountry = {USA}}

@inproceedings{Mock00a,
  author = {Audris Mockus and Lawrence Votta},
  title = {Identifying reasons for software change using historic databases},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM} 2000)},
  pages = {120--130},
  publisher = {IEEE Computer Society Press},
  year = {2000},
  location = {Los Alamitos CA},
  mon = oct}

@article{Mock00b,
  author = {Audris Mockus and David Weiss},
  title = {Predicting risk of software changes},
  journal = {Bell Labs Technical Journal},
  volume = {5},
  year = {2000},
  month = apr,
  number = {2}}

@article{Mock02a,
  author = {Audris Mockus and Roy T Fielding and James D Herbsleb},
  title = {Two case studies of open source software development: Apache and Mozilla},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  volume = {11},
  pages = {309--346},
  publisher = {ACM Press},
  year = {2002},
  address = {New York, NY, USA},
  issn = {1049-331X},
  number = {3}}

@inproceedings{Mock02b,
  author = {Mockus, Audris and Herbsleb, James D.},
  title = {Expertise browser: a quantitative approach to identifying expertise},
  booktitle = {ICSE '02: Proceedings of the 24th International Conference on Software Engineering},
  pages = {503--512},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/581339.581401},
  address = {New York, NY, USA},
  isbn = {1-58113-472-X},
  location = {Orlando, Florida}}

@inproceedings{Mock03a,
  author = {Mockus, Audris and Weiss, David M. and Zhang, Ping},
  title = {Understanding and Predicting Effort in Software Projects},
  booktitle = {International Conference on Software Engineering (ICSE 2003)},
  pages = {274--284},
  publisher = {ACM Press},
  year = {2003},
  address = {Portland, Oregon},
  month = may}

@inproceedings{Mock09a,
  author = {Mockus, Audris and Nagappan, Nachiappan and Dinh-Trong, Trung T.},
  title = {Test Coverage and Post-verification Defects: A Multiple Case Study},
  booktitle = {Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement},
  pages = {291--301},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/ESEM.2009.5315981},
  doi = {10.1109/ESEM.2009.5315981},
  acmid = {1671276},
  address = {Washington, DC, USA},
  isbn = {978-1-4244-4842-5},
  numpages = {11},
  series = {ESEM '09}}

@techreport{Mock99a,
  author = {Audris Mockus and Stephen Eick and Todd Graves and Alan Karr},
  title = {On Measurements and Analysis of Software Changes},
  year = {1999},
  institution = {National Institute of Statistical Sciences},
  type = {Technical Report}}

@inproceedings{Moer92a,
  author = {Guido Moerkotte and Andreas Zachmann},
  title = {Multiple Substitutability Without Affecting the Taxonomy},
  booktitle = {Proceedings EDBT '92},
  year = {1992}}

@article{Moer93a,
  author = {Guido Moerkotte and Andreas Zachmann},
  title = {Towards More Flexible Schema Management in Object Bases},
  journal = {IEEE Data Engineering},
  year = {1993},
  note = {To appear}}

@incollection{Mogg89a,
  author = {Eugenio Moggi},
  title = {Computational Lambda-Calculus and Monads},
  booktitle = {Proceedings 4th Annual IEEE Symp.\ on Logic in Computer Science, LICS '89},
  pages = {14--23},
  publisher = {IEEE Computer Society Press},
  year = {1989},
  address = {Washington, DC},
  month = jun}

@inproceedings{Mogu02a,
  author = {Mogul, Jeffery C.},
  title = {Clarifying the fundamentals of HTTP},
  booktitle = {Proceedings of the 11th international conference on World Wide Web},
  pages = {25--36},
  publisher = {ACM},
  year = {2002},
  url = {http://doi.acm.org/10.1145/511446.511450},
  doi = {10.1145/511446.511450},
  acmid = {511450},
  address = {New York, NY, USA},
  isbn = {1-58113-449-5},
  keywords = {HTTP, protocol design},
  location = {Honolulu, Hawaii, USA},
  numpages = {12},
  series = {WWW '02}}

@inproceedings{Moha06a,
  author = {Naouel Moha and Duc-loc Huynh and Yann-Gael Gueheneuc},
  title = {Une taxonomie et un m\'etamod\`ele pour la d\'etection des d\'efauts de conception},
  booktitle = {Langages et Mod\`eles \`a Objets},
  pages = {201--216},
  year = {2006}}

@incollection{Mohn02a,
  author = {Markus Mohnen},
  title = {Interfaces with default implementations in {Java}},
  booktitle = {Conference on the Principles and Practice of Programming in {Java}},
  pages = {35--40},
  publisher = {ACM Press},
  year = {2002},
  address = {Dublin, Ireland},
  month = {jun}}

@incollection{Moin91a,
  author = {Th. Moineau},
  title = {{ROSE}-{ADA}: An Instance of the {ESF}-{ROSE} System to Reuse Ada code.},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@inproceedings{Moli18a,
  author = {Carlos Molina-Jimenez and Ioannis Sfyrakis and Ellis Solaiman and Irene Ng and Meng Weng Wong and Alexis Chun and Jon Crowcroft},
  title = {Implementation of Smart Contracts Using Hybrid Architectures with On- and Off-Blockchain Components},
  booktitle = {Proc. 8th IEEE Int'l Symposium on Cloud and Services Computing (SC2)},
  year = {2018}}

@incollection{Moll91a,
  author = {Birger Moller-Pedersen},
  title = {Object Orientation and Reuse: The Scandinavian Way},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@book{Moll93a,
  author = {K.H. Moller and D.J. Paulish},
  title = {Software Metrics},
  publisher = {IEEE Press + Champman \& Hall},
  year = {1993},
  isbn = {0-7803-0444-6}}

@inproceedings{Mond02a,
  author = {Akito Monden and Daikai Nakae and Toshihiro Kamiya and Shin-ichi Sato and Ken-ichi. Matsumoto},
  title = {Software quality analysis by code clones in industrial legacy software},
  booktitle = {Proc. of the 8th IEEE Symposium on Software Metrics (METRICS2002)},
  pages = {87--94},
  year = {2002},
  address = {Ottawa, Canada},
  month = jun}

@incollection{Mond03a,
  author = {Monday, Paul B},
  title = {Implementing the Data Transfer Object Pattern},
  booktitle = {Web Services Patterns: Java Platform Edition},
  pages = {279--295},
  publisher = {Springer},
  year = {2003}}

@book{Mong93a,
  author = {Josep Mongui\'o},
  title = {{COP} overview},
  publisher = {TAO S.A.},
  year = {1993},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/ITHACA/cop.pdf},
  abstract = {WooRKS is a workflow package which has been
developed to prove the usefulness of the ITHACA
development environment. A workflow package is
characterised by the coordination and routing
mechanisms which allow to control the interaction
and to schedule the work to be performed by office
workers. Within this paper we describe COP, the
module implementing the coordination functionality
of WooRKS.}}

@inproceedings{Monk92a,
  author = {Simon R. Monk and Ian Sommerville},
  title = {A Model for Versioning of Classes in Object-oriented Databases},
  booktitle = {10th British National Conference on Databases},
  pages = {42--58},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Aberdeen},
  editor = {P.M.D. Gray and R.J. Lucas}}

@book{Monn93a,
  author = {Frieder Monninger},
  title = {Eiffel: Objektorientiertes Programmieren in der Praxis},
  publisher = {HEISE},
  year = {1993},
  isbn = {3-88229-028-5}}

@inproceedings{Monp10a,
  author = {Monperrus, Martin and Bruch, Marcel and Mezini, Mira},
  title = {Detecting Missing Method Calls in Object-Oriented Software},
  booktitle = {ECOOP 2010},
  volume = {6183},
  pages = {2-25},
  publisher = {Springer Berlin Heidelberg},
  year = {2010},
  doi = {10.1007/978-3-642-14107-2_2},
  isbn = {978-3-642-14106-5},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Monp14a,
  author = {Monperrus, Martin},
  title = {A Critical Review of "Automatic Patch Generation Learned from Human-written Patches": Essay on the Problem Statement and the Evaluation of Automatic Software Repair},
  booktitle = {Proceedings of the 36th International Conference on Software Engineering},
  pages = {234--242},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2568225.2568324},
  doi = {10.1145/2568225.2568324},
  isbn = {978-1-4503-2756-5},
  numpages = {9},
  series = {ICSE 2014}}

@article{Monr97a,
  author = {Robert T. Monroe and Andrew Kompanek and Ralph Melton and David Garlan},
  title = {Architectural Styles, Design Patterns, and Objects},
  journal = {IEEE Software},
  pages = {43--52},
  year = {1997},
  month = jan}

@book{Mons00a,
  author = {Richard Monson-Haefel},
  title = {Enterprise {Java}Beans},
  publisher = {O'Reilly \& Associates, Inc.},
  year = {2000},
  edition = {2nd}}

@book{Mons99a,
  author = {Richard Monson-Haefel},
  title = {Enterprise {Java}Beans},
  publisher = {O'Reilly},
  year = {1999}}

@article{Mont08a,
  author = {Montesinos, Pablo and Ceze, Luis and Torrellas, Josep},
  title = {Delorean: Recording and deterministically replaying shared-memory multiprocessor execution efficiently},
  journal = {ACM SIGARCH Computer Architecture News},
  volume = {36},
  pages = {289--300},
  publisher = {ACM New York, NY, USA},
  year = {2008},
  number = {3}}

@inproceedings{Mont94a,
  author = {D. Montesi and R. Torlone},
  title = {A Rewriting Technique for Implementing Active Object Systems},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {171--188},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@book{Mont96a,
  title = {Proceedings {CONCUR}'96},
  volume = {1119},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Pisa-Italy},
  editor = {Ugo Montarini and Vladimiro Sassone},
  isbn = {3-540-616047},
  month = aug,
  series = {LNCS}}

@inproceedings{Mont98a,
  author = {Montes de Oca, C and D.L. Carver},
  title = {A Visual Representation Model for Software Subsystem Decomposition},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {231--240},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@book{Mont99a,
  author = {Terry Montlick},
  title = {The Distributed {Smalltalk} Survival Guide},
  publisher = {Sigs},
  year = {1999},
  isbn = {0-521-64552-2}}

@misc{Monticello,
  author = {Avi Bryant},
  title = {Monticello},
  url = {http://www.wiresong.ca/Monticello},
  key = {Monticello},
  note = {http://www.wiresong.ca/Monticello}}

@inproceedings{Moon01a,
  author = {Leon Moonen},
  title = {Generating Robust Parsers using Island Grammars},
  booktitle = {Proceedings Eight Working Conference on Reverse Engineering ({WCRE} 2001)},
  pages = {13--22},
  publisher = {IEEE Computer Society},
  year = {2001},
  editor = {Elizabeth Burd and Peter Aiken and Rainer Koschke},
  month = oct}

@inproceedings{Moon03a,
  author = {Leon Moonen},
  title = {Exploring software systems},
  booktitle = {Proceedings International Conference on Software Maintenance ({ICSM} 2003)},
  pages = {276--280},
  publisher = {IEEE Computer Society},
  year = {2003}}

@book{Moon83a,
  author = {David Moon and Richard M. Stallman and Daniel Weinreb},
  title = {Lisp Machine Manual (fifth edition)},
  publisher = {MIT AI Lab},
  year = {1983},
  month = jan}

@mastersthesis{Moon84a,
  author = {John Mooney},
  title = {Oz: An Object-based System for Implementing Office Information Systems},
  year = {1984},
  school = {Department of Computer Science, University of Toronto},
  type = {M.Sc. thesis}}

@inproceedings{Moon86a,
  author = {David A. Moon},
  title = {Object-Oriented Programming with {Flavors}},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {1--8},
  year = {1986},
  month = nov}

@incollection{Moon89a,
  author = {David A. Moon},
  title = {The Common Lisp Object-Oriented Programming Language Standard},
  booktitle = {Object-Oriented Concepts, Databases and Applications},
  pages = {49--78},
  publisher = {ACM Press and Addison Wesley},
  year = {1989},
  address = {Reading, Mass.},
  editor = {W. Kim and F. Lochovsky}}

@phdthesis{Moon90a,
  author = {Carol Elizabeth Moon},
  title = {The Roles of Instructions and Examples in learning a Second Language from an Instructional Text: A Computational Model},
  year = {1990},
  school = {University of Michigan},
  abstract = {Many second language instructional texts are written
in a format in which the learner is presented with
an instruction followed by a set of examples. This
thesis discusses the roles played by both
instruction and examples in learning from such a
text and gives functional reasons of why both forms
of input are necessary. A computer model of second
language learning, called ANT, was built to
investigate these roles. Input to the system is
similar to what is found in an instructional text.
ANT's learning with this input is compared to two
alternatives: learning from only examples and
learning from only instructions. I discuss why, from
a functional or processing standpoint, learning from
a mixed input is more effective than either of the
alternatives. An empirical comparison was done of
ANT's performance on input containing instructions
and examples versus performance of the system when
given instructions only or examples only. The
results of the comparison support the hypothesis as
to the utility of mixed input. In addition, a
psychological experiment was done with human
subjects, the results of which justified the
hypotheses of the ANT model. Through the study it
was found that the roles instructions play are that
they: (1) focus the learner's attention on the
nature of the difference between the native and
second language; (2) focus the learner's attention
on features in the examples relevant to those
changes; (3) tell the learner how far the rule can
be generalized; (4) allow the learner to alter
expectations about the second language input; and
(5) tell the learner to which rules the change
applies. The roles examples play are that they: (1)
help to identify relevant previous knowledge; (2)
help to form the new rules; and (3) provide details
essential to the rule which are omitted in the
instruction. The study also discusses constraints
which language learning puts on knowledge
representation.},
  type = {{Ph.D}. Thesis}}

@inproceedings{Moor01a,
  author = {I. Moore},
  title = {Jester --- a {JUnit} test tester},
  booktitle = {Proceedings of the 2nd International Conference on Extreme Programming and Flexible Processes (XP2001)},
  publisher = {University of Cagliari},
  year = {2001},
  editor = {M. Marchesi}}

@inproceedings{Moor02a,
  author = {Moore, Shirley V.},
  title = {A Comparison of Counting and Sampling Modes of Using Performance Monitoring Hardware},
  booktitle = {Computational Science --- ICCS 2002},
  pages = {904--912},
  publisher = {Springer Berlin Heidelberg},
  year = {2002},
  doi = {10.1007/3-540-46080-2_95},
  abstract = {Performance monitoring hardware is available on most modern microprocessors in the form of hardware counters and other registers that record data about processor events. This hardware may be used in counting mode, in which aggregate events counts are accumulated, and/or in sampling mode, in which time-based or event-based sampling is used to collect profiling data. This paper discusses uses of these two modes and considers the issues of efficiency and accuracy raised by each. Implications for the P{API} cross-platform hardware counter interface are also discussed.},
  address = {Berlin, Heidelberg},
  editor = {Sloot, Peter M. A. and Hoekstra, Alfons G. and Tan, C. J. Kenneth and Dongarra, Jack J.},
  isbn = {978-3-540-46080-0}}

@incollection{Moor06a,
  author = {Kevin E. Moore and Jayaram Bobba and Michelle J. Moravan and Mark D. Hill and David A. Wood},
  title = {{LogTM}: Log-based Transactional Memory},
  booktitle = {Proceedings of the 12th International Symposium on High-Performance Computer Architecture},
  pages = {254--265},
  publisher = {IEEE Computer Society},
  year = {2006},
  month = feb}

@inproceedings{Moor08a,
  author = {Adriaan Moors and Frank Piessens and Martin Odersky},
  title = {Generics of a higher kind},
  booktitle = {OOPSLA '08: Proceedings of the 23rd ACM SIGPLAN conference on Object oriented programming systems languages and applications},
  pages = {423--438},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1449764.1449798},
  address = {New York, NY, USA},
  isbn = {978-1-60558-215-3},
  location = {Nashville, TN, USA}}

@techreport{Moor08b,
  author = {Adriaan Moors and Frank Piessens and Martin Odersky},
  title = {Parser combinators in {Scala}},
  year = {2008},
  pdf = {http://www.cs.kuleuven.be/publicaties/rapporten/cw/CW491.pdf},
  institution = {Department of Computer Science, K.U. Leuven},
  month = feb}

@inproceedings{Moor94,
  author = {Moore, Melody M and Rugaber, Spencer and Seaver, Phil},
  title = {Knowledge-Based User Interface Migration.},
  booktitle = {{ICSM}},
  volume = {94},
  pages = {72--79},
  year = {1994}}

@inproceedings{Moor94a,
  author = {{Moore} and {Rugaber} and {Seaver}},
  title = {Knowledge-based user interface migration},
  booktitle = {Proceedings 1994 International Conference on Software Maintenance},
  pages = {72--79},
  publisher = {{IEEE} Comput. Soc. Press},
  year = {1994},
  url = {http://ieeexplore.ieee.org/document/336788/},
  doi = {10.1109/ICSM.1994.336788},
  abstract = {A significant problem in reengineering large systems is adapting the user interface to a new environment. Often, drastic changes in the user interface are inevitable, as in migrating a text-based system to a workstation with Graphical User Interface capabilities. This experience report chronicles a study of user interface migration issues, examining and evaluating current tools and techniques. It also describes a case study undertaken to explore the use of knowledge engineering to aid in migrating interfaces across platforms.},
  date = {1994},
  isbn = {978-0-8186-6330-7},
  langid = {english},
  urldate = {2018-06-22}}

@inproceedings{Moor96a,
  author = {Ivan Moore},
  title = {Automatic {Inheritance} {Hierarchy} {Restructuring} and {Method} {Refactoring}},
  booktitle = {Proceedings of OOPSLA '96 (11th Annual Conference on Object-Oriented Programming Systems, Languages, and Applications)},
  pages = {235--250},
  publisher = {ACM Press},
  year = {1996},
  location = {San Jose, California, USA}}

@inproceedings{Moor96b,
  author = {Moore, Melody M},
  title = {Rule-based detection for reverse engineering user interfaces},
  booktitle = {Proceedings of {WCRE}'96: 4rd Working Conference on Reverse Engineering},
  pages = {42--48},
  year = {1996},
  organization = {IEEE}}

@book{Moor99a,
  author = {Geoffrey A. Moore},
  title = {Crossing The Chasm},
  publisher = {HarperBusiness},
  year = {1999}}

@article{Moore96,
  author = {Moore, Melody M},
  title = {Rule-{Based} {Detection} for {Reverse} {Engineering} {User} {Interfaces}},
  journal = {Proceedings of {WCRE} '96: 4rd Working Conference on Reverse Engineering},
  pages = {7},
  year = {1996},
  abstract = {Abstract - Reengineering the user interface can be a critical part of the migration of any large information system. This paper details experiences with manually reverse engineering legacy applications to build a model of the user interface functionality, and to develop a technique for partially automating this process. The results show that a language-independentset of rules can be used to detect user interface components from legacy code, and also illustrate problems that require dynamic analysis to solve.},
  language = {en}}

@techreport{Moos07a,
  author = {Marc Mooser},
  title = {Parsing the {Ada} Programming Language},
  year = {2007},
  url = {http://scg.unibe.ch/archive/projects/Moos07a.pdf},
  abstract = {In this technical report we show how to produce a
parser for the Ada 83 programming language. It
features general ideas about parsing and the parser
definitions for main parts of Ada 83. Using SmaCC
(Smalltalk Compiler Compiler), a
LR-parser-generator, we produce different parsers
which are able to parse different parts or also the
full language. Our SmaCC-version runs in VisualWorks
Smalltalk and we show how our parsers are compiled
there, how one can use Smalltalk programming to
produce a syntax tree out of the source code and
also fetch and process the structure of these codes.
The structure and corresponding contents is imported
as models into Moose - a tool to measure, analyze,
visualize and reengineer legacy applications written
in different programming languages in a abstracted
way using their concrete model. And there is a
discussion about problems one encounters when trying
to find exact machine-directives to parse texts in
general, how one may fix them and what specific
problems arised while this project.},
  institution = {University of Bern},
  month = feb,
  type = {Bachelor's thesis}}

@article{Mora18a,
  author = {Moran, Kevin and Watson, Cody and Hoskins, John and Purnell, George and Poshyvanyk, Denys},
  title = {Detecting and {Summarizing} {GUI} {Changes} in {Evolving} {Mobile} {Apps}},
  journal = {arXiv:1807.09440 [cs]},
  year = {2018},
  url = {http://arxiv.org/abs/1807.09440},
  keywords = {Android, {GUI} changes, Mobile Apps, Software Evolution},
  language = {en},
  month = jul,
  note = {arXiv: 1807.09440},
  urldate = {2018-09-06}}

@incollection{Mora99a,
  author = {A. K. Moran and D. Sands and M. Carlsson},
  title = {Erratic {Fudgets}: {A} semantic theory for an embedded coordination language},
  booktitle = {Coordination '99},
  volume = 1594,
  publisher = {Springer-Verlag},
  year = {1999},
  month = apr,
  series = {{LNCS}}}

@inproceedings{More05a,
  author = {A. Moreira and A. Rashid and J. Ara\'{u}jo},
  title = {Multi-Dimensional Separation of Conserns in Requirements Engineering},
  booktitle = {Proceedings of the 13th IEEE International Requirements Engineering Conference (RE 2005)},
  publisher = {IEEE Computer Society},
  year = {2005},
  address = {Paris, France},
  month = aug}

@inproceedings{More06a,
  author = {A. Moreira and J. Ara\'{u}jo and J. Whittle},
  title = {Modeling Volatile Concerns as Aspects},
  booktitle = {Proceedings of the 18th Conference on Advanced Information Systems Engineering (CAiSE 2006)},
  publisher = {Springer-Verlag},
  year = {2006},
  address = {Luxembourg},
  month = jun,
  series = {LNCS}}

@article{More09a,
  author = {Morel, Jean-Michel and Yu, Guoshen},
  title = {ASIFT: A new framework for fully affine invariant image comparison},
  journal = {SIAM journal on imaging sciences},
  volume = {2},
  pages = {438--469},
  publisher = {SIAM},
  year = {2009},
  number = {2}}

@inproceedings{More11a,
  author = {Moret, Philippe and Binder, Walter and Tanter, \'{E}ric},
  title = {Polymorphic bytecode instrumentation},
  booktitle = {Proceedings of the tenth international conference on Aspect-oriented software development},
  pages = {129--140},
  publisher = {ACM},
  year = {2011},
  url = {http://doi.acm.org/10.1145/1960275.1960292},
  doi = {10.1145/1960275.1960292},
  acmid = {1960292},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0605-8},
  keywords = {aspect-oriented programming, bytecode instrumentation, dynamic program analysis, java virtual machine, mixin layers, modularity constructs},
  location = {Porto de Galinhas, Brazil},
  numpages = {12},
  series = {AOSD '11}}

@inproceedings{More13a,
  author = {Moreno, L. and Bandara, W. and Haiduc, S. and Marcus, A.},
  title = {On the {Vocabulary} {Relationship} {Between} {Bug} {Reports} and {Source} {Code}},
  booktitle = {IEEE International Conference on Software Maintenance ({{ICSM}}'13), Early Research Achievement Track ({ERA})},
  pages = {452-455},
  year = {2013},
  doi = {10.1109/ICSM.2013.70},
  address = {Eindhoven, The Netherlands},
  issn = {1063-6773},
  month = sep}

@article{More79a,
  author = {E. Morel and C. Renvoise},
  title = {Global Optimization by Suppression of Partial Redundancies},
  journal = {CACM},
  volume = {22},
  pages = {96--103},
  year = {1979},
  month = feb,
  number = {2}}

@inproceedings{More94a,
  author = {Ana M.D. Moreira and Robert G. Clark},
  title = {Combining Object-Oriented Analysis and Formal Description Techniques},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {344--364},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{More94b,
  author = {A. Moreira and R. Clark},
  title = {Rigorous Object-Oriented Analysis},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {65--78},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@book{More99a,
  title = {Object-Oriented Technology ({ECOOP}'99 Workshop Reader)},
  publisher = {Springer-Verlag},
  year = {1999},
  address = {Kaiserslautern, Germany},
  editor = {Ana Moreira and Serge Demeyer},
  month = dec,
  number = 1743,
  series = {LNCS}}

@book{More99b,
  author = {L. Moreau and C. Queinnec and D. Ribbens and M. Serrano},
  title = {Recueil de petits Problemes en Scheme},
  publisher = {Springer-Verlag},
  year = {1999},
  isbn = {3-540-66043-7}}

@inproceedings{Morg07a,
  author = {Morgan, Clint and De Volder, Kris and Wohlstadter, Eric},
  title = {A static aspect language for checking design rules},
  booktitle = {Proceedings of the 6th international conference on Aspect-oriented software development},
  pages = {63--72},
  year = {2007},
  address = {New York, NY, USA},
  isbn = {1-59593-615-7},
  location = {Vancouver, British Columbia, Canada},
  numpages = {10},
  series = {AOSD '07}}

@inproceedings{Morg11a,
  author = {Morgado, I Coimbra and Paiva, Ana and Faria, J Pascoal},
  title = {Reverse engineering of graphical user interfaces},
  booktitle = {{ICSEA} 2011 : The Sixth International Conference on Software Engineering Advances},
  year = {2011},
  abstract = {This paper describes a dynamic reverse engineering
approach and the correspondent tool, {ReGUI}, developed to
reduce the effort of obtaining visual and formal models of
both the structure and the behaviour of a software application's
graphical user interface.
This paper describes the tool's architecture, the exploration
process it follows, the outputs it generates and the rules used
to generate a Spec\# model, which can be used in the context of
Model-Based Graphical User Interface Testing. The case study
presents the results obtained by applying the tool to the Microsoft
Notepad application.},
  keywords = {{GUI} testing, dynamic analysis, Reverse Engineering, {ReGUI}}}

@article{Mori86a,
  author = {M. Moriconi and D. Hare},
  title = {The PegaSys System: Pictures as Formal Documentation of Large Programs},
  journal = {ACM TOPLAS},
  volume = {8},
  pages = {419--490},
  year = {1986},
  month = oct,
  number = {4}}

@article{Mori90a,
  author = {R. Mori and M. Kawahara},
  title = {Superdistribution: The Concept and the Architecture},
  journal = {Transactions of the IEICE},
  volume = {E 73},
  pages = {1133--1146},
  year = {1990},
  month = jul,
  number = {7}}

@inproceedings{Mori94a,
  author = {Mark Moriconi and Xiaolei Qian},
  title = {Correctness and Composition of Software Architectures},
  booktitle = {Proceedings of ACM SIGSOFT '94: Symposium on Foundations of Software Engineering},
  pages = {164-174.},
  year = {1994},
  url = {http://www.csl.sri.com/~moriconi/fswe94.ps.gz},
  abstract = {This paper presents the first formal criterion
developed specifically for determining the relative
correctness of two architectures. The criterion is
stonger than the usual criterion for reasoning about
behavioral properties. The paper shows how to define
a formal mapping between architectures that is
decomposed into generic and architecture-specific
parts. The semantics of architectural connections is
defined in terms of Lamport's temporal logic of
actions, and proofs of both safety and fairness are
given. Two useful architecture composition operators
are defined that preserve correctness.},
  address = {New Orleans, Louisiana},
  month = dec}

@article{Mori95a,
  author = {Mark Moriconi and Xiaolei Qian and R. A. Riemenschneider},
  title = {Correct Architecture Refinement},
  journal = {IEEE Transactions on Software Engineering},
  volume = {21},
  pages = {356--372},
  year = {1995},
  doi = {10.1109/32.385972},
  number = {4}}

@techreport{Mori97a,
  author = {Moriconi, Mark and Riemenschneider, Robert A.},
  title = {Introduction to {SADL} 1.0: A Language for Specifying Software Architecture Hierarchies},
  year = {1997},
  institution = {SRI International},
  type = {SRI-CSL-97-01}}

@phdthesis{Mori99a,
  author = {Jean-Henry Morin},
  title = {Commercial Electronic Publishing over Open Networks: {A} Global Approach Based on Mobile Objects (Agents)},
  year = {1999},
  school = {University of Geneva},
  type = {{Ph.D}. Thesis}}

@inproceedings{Moria18a,
  author = {S. Morishima and H. Matsutani},
  title = {Accelerating Blockchain Search of Full Nodes Using GPUs},
  booktitle = {26th Euromicro International Conference on Parallel, Distributed and Network-based Processing (PDP)},
  pages = {244-248},
  year = {2018},
  doi = {10.1109/PDP2018.2018.00041},
  issn = {2377-5750},
  keywords = {cryptography;database indexing;financial data processing;graphics processing units;peer-to-peer computing;query processing;tree data structures;key-value search;CPU search;distributed ledger system;crypto currency system;transaction contents;transaction histories;search throughput;GPU;blockchain system;blockchain key search;blockchain search queries;blockchain user nodes;CPU-based search;array-based Patricia tree structure;Peer-to-peer computing;Graphics processing units;Acceleration;Bitcoin;Arrays;Blockchain;GPU;KVS},
  month = {mar}}

@article{Morl04a,
  author = {Morla, Ricardo and Davies, Nigel},
  title = {Evaluating a Location-Based Application: A Hybrid Test and Simulation Environment},
  journal = {IEEE Pervasive Computing},
  volume = {3},
  pages = {48--56},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/MPRV.2004.1321028},
  address = {Los Alamitos, CA, USA},
  number = {3}}

@inproceedings{Morm93a,
  author = {MORmSETT, J. G.},
  title = {Generalizing first-class stores},
  booktitle = {ACM SIGPLAN Workshop on State of Programing Language},
  pages = {73-87},
  publisher = {ACM},
  year = {1993},
  address = {New York}}

@article{Morr03a,
  author = {Steven Morris and Benyam Asnake and Gary Yen},
  title = {Dendrogram seriation using simulated annealing},
  journal = {Information Visualization},
  volume = {2},
  pages = {95--104},
  publisher = {Palgrave Macmillan},
  year = {2003},
  issn = {1473-8716},
  number = {2}}

@inproceedings{Morr15a,
  author = {Patrick Morrison and Kim Herzig andBrendan Murphy and Laurie Williams},
  title = {Challenges with applying vulnerability prediction models},
  booktitle = {Symposium and Bootcamp on the Science of Security, HotSoS '15},
  pages = {1--9},
  year = {2015}}

@article{Morr74a,
  author = {Michael F. Morris},
  title = {Kiviat graphs: conventions and "figure of merit"},
  journal = {ACM SIGMetrics Performance Evaluation review},
  volume = {3},
  pages = {2-8},
  year = {1974},
  number = {3}}

@mastersthesis{Morr89a,
  author = {Kenneth Morris},
  title = {Metrics for Object-Oriented Software Development Environments},
  year = {1989},
  school = {Sloan School of Management. MIT}}

@book{Morr97a,
  author = {Michael Morrison},
  title = {Presenting {Java} Beans},
  publisher = {Sams net},
  year = {1997},
  isbn = {1-57521-286-0}}

@proceedings{Morv98a,
  title = {Theoretical aspects of Computer Science},
  booktitle = {STACS '98},
  volume = {1373},
  publisher = {Springer-Verlag},
  year = {1998},
  address = {Paris, France},
  editor = {Michel Morvan and Cristoph Meine and Daniel Krob},
  isbn = {3-540-64230-7},
  month = feb,
  series = {LNCS}}

@inproceedings{Morz91a,
  author = {Angelo Morzenti and Pierluigi San Pietro},
  title = {An Object-Oriented Logic Language for Modular System Specification},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {39--58},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@article{Mos09,
  author = {Mostinckx, Stijn and Van Cutsem, Tom and Timbermont, Stijn and Gonzalez Boix, Elisa and Tanter, \'{E}ric and De Meuter, Wolfgang},
  title = {Mirror-based reflection in AmbientTalk},
  journal = {Softw. Pract. Exper.},
  volume = {39},
  pages = {661--699},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2009},
  url = {\url{http://dx.doi.org/10.1002/spe.v39:7}},
  doi = {10.1002/spe.v39:7},
  acmid = {1526249},
  address = {New York, NY, USA},
  issn = {0038-0644},
  keywords = {AmbientTalk, actors, metaprogramming, mirages, mirrors, reflection},
  month = may,
  number = {7},
  numpages = {39}}

@inproceedings{Mose07a,
  author = {Moseley, Tipp and Shye, Alex and Reddi, Vijay Janapa and Grunwald, Dirk and Peri, Ramesh},
  title = {Shadow Profiling: Hiding Instrumentation Costs with Parallelism},
  booktitle = {International Symposium on Code Generation and Optimization (CGO'07)},
  pages = {198-208},
  year = {2007},
  doi = {10.1109/CGO.2007.35}}

@inproceedings{Mose07b,
  author = {Moser, Raimund and Abrahamsson, Pekka and Pedrycz, Witold and Sillitti, Alberto and Succi, Giancarlo},
  title = {A Case Study on the Impact of Refactoring on Quality and Productivity in an Agile Team},
  booktitle = {Balancing Agility and Formalism in Software Engineering},
  pages = {252-266},
  publisher = {Springer Berlin Heidelberg},
  year = {2008},
  doi = {10.1007/978-3-540-85279-7_20},
  isbn = {978-3-540-85278-0}}

@inproceedings{Mose20a,
  title={Visual Breakpoint Debugging for Sum and Product Formulae},
  author={Moseler, Oliver and Wolz, Michael and Diehl, Stephan},
  booktitle={2020 Working Conference on Software Visualization (VISSOFT)},
  pages={133--137},
  year={2020},
  organization={IEEE}
}

@incollection{Mose93a,
  author = {Simon Moser and Robert Siegenthaler},
  title = {Sind phasenstrukturierte Projekte notwendig?},
  booktitle = {OUTPUT Sonderausgabe "Objektorientierte Systeme"},
  publisher = {?},
  year = {1993},
  month = nov}

@inbook{Mose94a,
  author = {Simon Moser},
  title = {Ein {QS}-System fuer objektorientierte Software-Entwicklung},
  booktitle = {INFORMATIK, SVI/FSI, Zuerich},
  pages = {?},
  publisher = {SI},
  year = {1994},
  month = dec}

@incollection{Mose95a,
  author = {Simon Moser},
  title = {Metamodels for {Object}-{Oriented} {Systems}},
  booktitle = {Software --- Concepts and Tools},
  volume = {16},
  pages = {63--80},
  publisher = {Springer Intl.},
  year = {1995},
  issn = {0945-8115},
  month = jul}

@article{Mose96a,
  author = {Simon Moser and Oscar Nierstrasz},
  title = {The Effect of Object-Oriented Frameworks on Developer Productivity},
  journal = {IEEE Computer},
  pages = {45--51},
  year = {1996},
  url = {http://scg.unibe.ch/archive/papers/Mose96aOOMetrics.pdf},
  doi = {10.1109/2.536783},
  abstract = {A field study of over thirty projects using Object
Technology has shown that the availability (or
absence) of reusable frameworks has substantial
productivity impacts. This can make it more
difficult to reliably estimate the size and cost of
such projects early in the software process. The
newly proposed System Meter method tackles this
problem by distinguishing functionality to be
implemented from functionality supported by reusable
components. It therefore yields more uniform and
predictable productivity measures. Moreover, it can
also be applied already after a preliminary analysis
phase, in contrast to the more traditional Function
Points approach.},
  month = sep}

@phdthesis{Mose96b,
  author = {Simon Moser},
  title = {Measurement and Estimation of Software and Software Processes},
  year = {1996},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/moser-phd.pdf},
  month = dec,
  type = {{Ph.D}. Thesis}}

@inproceedings{Moss03,
  author = {Mossienko, Maxim},
  title = {Automated COBOL to Java recycling},
  booktitle = {Seventh European Conference onSoftware Maintenance and Reengineering, 2003. Proceedings.},
  pages = {40--50},
  year = {2003},
  organization = {IEEE}}

@phdthesis{Moss81a,
  author = {J. Eliot B. Moss},
  title = {Nested Transactions: An Approach to Reliable Distributed Computing},
  year = {1981},
  school = {MIT Dept EE and CS},
  month = apr,
  number = {MIT/LCS/TR-260},
  type = {{Ph.D}. Thesis}}

@inproceedings{Moss82a,
  author = {J. Eliot B. Moss},
  title = {Nested Transactions and Reliable Distributed Computing},
  booktitle = {Proceedings 2nd Symposium on Reliability in Distributed Software and Database Systems},
  pages = {33--39},
  year = {1982},
  address = {Pittsburgh, PA},
  month = jul}

@inproceedings{Moss83a,
  author = {J. Eliot B. Moss},
  title = {Checkpoint and Restart in Distributed Transaction Systems},
  booktitle = {Proceedings 3rd Symposium on Reliability in Distributed Software and Database Systems},
  year = {1983}}

@inproceedings{Moss87a,
  author = {J. Eliot B. Moss and Walter H. Kohler},
  title = {Concurrency Features for the Trellis/Owl Language},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {171--180},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Moss87b,
  author = {Moss, J. E. B.},
  title = {Managing Stack Frames in Smalltalk},
  booktitle = {Papers of the Symposium on Interpreters and Interpretive Techniques},
  pages = {229--240},
  year = {1987},
  address = {New York, NY, USA},
  numpages = {12},
  series = {SIGPLAN '87}}

@inproceedings{Moss89a,
  author = {Peter D. Mosses},
  title = {Unified Algebras and Action Semantics},
  booktitle = {Proceedings of the 6th Annual Symposium on Theoretical Aspects of Computer Science, STACS '89},
  volume = {349},
  pages = {17--35},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Paderborn},
  month = feb,
  series = {LNCS}}

@article{Moss90a,
  author = {Moss, J. Eliot B.},
  title = {Design of the Mneme persistent object store},
  journal = {ACM Trans. Inf. Syst.},
  volume = {8},
  pages = {103--139},
  publisher = {ACM},
  year = {1990},
  url = {http://doi.acm.org/10.1145/96105.96109},
  doi = {10.1145/96105.96109},
  acmid = {96109},
  address = {New York, NY, USA},
  issn = {1046-8188},
  month = apr,
  number = {2},
  numpages = {37}}

@article{Moss92a,
  author = {J. Eliot B. Moss},
  title = {Working with Persistent Objects: To Swizzle or Not to Swizzle},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-18},
  pages = {657--673},
  year = {1992},
  month = aug,
  number = {8}}

@book{Moss93a,
  author = {Hanspeter M{\"o}ssenb{\"o}ck},
  title = {Object-Oriented Programming in Oberon-2},
  publisher = {Springer-Verlag},
  year = {1993},
  isbn = {3-540-56411-X}}

@techreport{Moss95a,
  author = {Hanspeter M{\"o}ssenb{\"o}ck},
  title = {Active Text for Structuring and Understanding Source Code},
  year = {1995},
  institution = {Institut f{\"u}r Informatik, Johannes Kepler Universit{\"a}t Linz},
  month = aug,
  number = {3},
  type = {Report}}

@techreport{Moss95b,
  author = {Hanspeter M{\"o}ssenb{\"o}ck},
  title = {Scenario-Based Browsing of Object-Oriented Systems with Scene},
  year = {1995},
  institution = {Institut f{\"u}r Informatik, Johannes Kepler Universit{\"a}t Linz},
  month = aug,
  number = {4},
  type = {Report}}

@book{Moss95c,
  title = {Proceedings {TAPSOFT}'95},
  volume = {915},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {Peter D. Moses and Mogens Nielsen},
  isbn = {3-540-59293-8},
  month = may,
  series = {LNCS}}

@inproceedings{Most07a,
  author = {Stijn Mostinckx and Tom Van Cutsem and Stijn Timbermont and Eric Tanter},
  title = {Mirages: Behavioral Intercession in a Mirror-based Architecture},
  booktitle = {Proceedings the ACM Dynamic Languages Symposium (DLS 2007)},
  year = {2007},
  location = {Montreal, Canada},
  month = oct}

@inproceedings{Mott06,
  author = {Jean-Marie Mottu and Benoit Baudry and Yves Le Traon},
  title = {Mutation Analysis Testing for Model Transformations},
  booktitle = {ECMDA-FA},
  volume = {4066/2006},
  pages = {376--390},
  year = {2006},
  doi = {10.1007/11787044_28},
  address = {Bilbao, Spain},
  date-added = {2007-01-31 10:27:08 +0100},
  date-modified = {2007-01-31 10:36:47 +0100},
  month = {jul},
  organization = {IRISA, Campus Universitaire de Beaulieu}}

@inproceedings{Moue07a,
  title={Mutation analysis for security tests qualification},
  author={Mouelhi, Tejeddine and Le Traon, Yves and Baudry, Benoit},
  booktitle={Testing: Academic and Industrial Conference Practice and Research Techniques-MUTATION (TAICPART-MUTATION 2007)},
  pages={233--242},
  year={2007},
  organization={IEEE}}

@phdthesis{Mour03a,
  author = {Paolo Moura},
  title = {Logtalk},
  year = {2003},
  school = {Universidade da Beira Interior}}

@inproceedings{Mous05a,
  author = {Mousa, H. and Krintz, C.},
  title = {HPS: hybrid profiling support},
  booktitle = {14th International Conference on Parallel Architectures and Compilation Techniques (PACT'05)},
  pages = {38-47},
  year = {2005},
  doi = {10.1109/PACT.2005.24}}

@book{Mowb97a,
  author = {Thomas J. Mowbray and Raphael C. Malveau},
  title = {Corba Design Patterns},
  publisher = {Wiley Computer Publishing},
  year = {1997},
  isbn = {0-471-15882-8}}

@article{Moyn91a,
  author = {Moynihan, Vincent D and Wallis, Peter JL},
  title = {The design and implementation of a high-level language converter},
  journal = {Software: Practice and Experience},
  volume = {21},
  pages = {391--400},
  publisher = {Wiley Online Library},
  year = {1991},
  number = {4}}

@misc{Mpyt,
  title = {MicroPython},
  url = {https://micropython.org/},
  howpublished = {\url{https://micropython.org/}},
  key = {MicroPython}}

@misc{Mrdp,
  title = {How to Debug mRuby},
  url = {https://es.slideshare.net/yamanekko/rubyconftw2014},
  howpublished = {\url{https://es.slideshare.net/yamanekko/rubyconftw2014}},
  key = {mRubyHowToDebug}}

@misc{Mrdr,
  title = {mRuby Debugger Github},
  url = {https://github.com/mruby/mruby/blob/master/doc/guides/debugger.md},
  howpublished = {\url{https://github.com/mruby/mruby/blob/master/doc/guides/debugger.md}},
  key = {mRubyDebuggerRep}}

@misc{Mrub,
  title = {mRuby},
  url = {https://mruby.org/},
  howpublished = {\url{https://mruby.org/}},
  key = {mRuby}}

@misc{Msdn12a,
  author = {Microsoft},
  title = {How to: Set Up Remote Debugging, Visual Studio 2012},
  year = {2012},
  howpublished = {\url{http://msdn.microsoft.com/en-us/library/bt727f1t.aspx}}}

@misc{Msdn12b,
  author = {Microsoft},
  title = {Debugger Security, Visual Studio 2012},
  year = {2012},
  howpublished = {\url{http://msdn.microsoft.com/en-us/library/vstudio/ms242231.aspx}}}

@misc{Msdn12c,
  author = {Microsoft},
  title = {Supported Code Changes (C\#), Visual Studio 2012},
  year = {2012},
  howpublished = {\url{http://msdn.microsoft.com/en-us/library/ms164927.aspx}}}

@misc{Msdn13d,
  author = {Microsoft},
  title = {Setting Up Remote Debugging, Visual Studio 2013},
  year = {2013},
  howpublished = {\url{http://msdn.microsoft.com/en-us/library/bt727f1t\%28v=vs.71\%29.aspx}}}

@inproceedings{Muel00a,
  author = {Hausi A. M{\"{u}}ller and Jens H. Jahnke and Dennis B. Smith and Margaret-Anne Storey and Scott R. Tilley and Kenny Wong},
  title = {Reverse engineering: a roadmap},
  booktitle = {Proceedings of the conference on The future of Software engineering},
  pages = {47--60},
  publisher = {ACM Press},
  year = {2000},
  doi = {10.1145/336512.336526},
  isbn = {1-58113-253-0},
  location = {Limerick, Ireland}}

@techreport{Muel01a,
  author = {Peter M{\"u}ller and Arnd Poetzsch-Heffter},
  title = {Universes: A Type System for Alias and Dependency Control},
  year = {2001},
  url = {www.informatik.fernuni-hagen.de/pi5/publications.html},
  institution = {Fernuniversit\"at Hagen},
  key = {M{\"u}ller \& Poetzsch-Heffter},
  number = {279}}

@inproceedings{Muel88a,
  author = {H. A. M{\"u}ller and K. Klashinsky},
  title = {Rigi --- A system for programming-in-the-large},
  booktitle = {ICSE '88: Proceedings of the 10th international conference on Software engineering},
  pages = {80--86},
  publisher = {IEEE Computer Society Press},
  year = {1988},
  url = {http://portal.acm.org/citation.cfm?id=55832},
  isbn = {0-89791-258-6},
  location = {Singapore}}

@inproceedings{Muel89a,
  author = {Gerhard M{\"u}ller and Anna-Kristin Pr{\"o}frock},
  title = {Four Steps and a Rest in Putting an Object-Oriented Programming Environment to Practical Use},
  booktitle = {Proceedings ECOOP '89},
  pages = {271--282},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Muel99a,
  author = {M{\"u}ller, P. and Poetzsch-Heffter, A.},
  title = {Universes: A Type System for Controlling Representation Exposure},
  booktitle = {Programming Languages and Fundamentals of Programming},
  year = {1999},
  editor = {Poetzsch-Heffter, A. and Meyer, J.},
  organization = {Fernuniversit\"at Hagen}}

@book{Mugr05a,
  author = {Rick Mugridge and Ward Cunningham},
  title = {Fit for Developing Software: Framework for Integrated Tests (Robert C. Martin)},
  publisher = {Prentice Hall PTR},
  year = {2005},
  address = {Upper Saddle River, NJ, USA},
  isbn = {0321269349}}

@inproceedings{Mugr05b,
  author = {Rick Mugridge and Ward Cunningham},
  title = {Agile Test Composition},
  booktitle = {Extreme Programming and Agile Processes in Software Engineering, 6th International Conference, XP 2005},
  volume = {3556},
  pages = {137--144},
  publisher = {Springer},
  year = {2005},
  editor = {Hubert Baumeister and Michele Marchesi and Mike Holcombe},
  isbn = {3-540-26277-6},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Mugr91a,
  author = {Warwick B. Mugridge and John Hamer and John G. Hosking},
  title = {Multi-Methods in a Statically-Typed Programming Language},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {307--324},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@book{Muhl96a,
  title = {Special Issues in Object-Oriented Programming ({ECOOP}'96 Workshop Reader)},
  publisher = {dpunkt.verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {Max M{\"u}hlh{\"a}user},
  isbn = {3-920993-67-51},
  month = jul}

@book{Mukh17a,
  author = {Sudipta Mukherjee},
  title = {Source Code Analytics With Roslyn and JavaScript Data Visualization},
  publisher = {Apress},
  year = {2017}}

@book{Mukh95a,
  author = {Manibrata Mukherji and Dennis Kafura},
  title = {Specification of Multi-Object Coordination Schemes Using Coordinating Environments {R} Draft},
  publisher = {Virgina Tech},
  year = {1995},
  misc = {February 28},
  url = {ftp://actor.cs.vt.edu/pub/kafura/ce.ps},
  month = feb}

@article{Mukhe11,
  author = {Mukherjee, Suvam and Chakrabarti, Tamal},
  title = {Automatic algorithm specification to source code translation},
  journal = {Indian Journal of Computer Science and Engineering (IJCSE)},
  volume = {2},
  pages = {146--159},
  year = {2011},
  abstract = {Computers have become all-pervasive, and are being used in a variety of areas like Microbiology, Astronomy, Social Sciences and many
others. In almost all these areas, algorithmic solutions to problems are common. However, most programming languages have certain
idiosyncrasies. This is why people who don't have a good background in computer programming have difficulty in writing good, efficient
programs. Moreover, there are many programming languages which allow coding in a variety of paradigms. Though it is easy for someone
trained in Computer Science to convert a program from one language to another, it is less so for people in other fields. In this paper, we
describe a translation program that can create a piece of executable code, given the code's algorithmic specification. This program allows
the user to specify his/her code using an easy-to-understand, simple-to-write and more or less immutable pseudo code specification. The
program will then check the pseudo code for errors, and convert it to a specified language (be it C, Java, or any other language). The
program may easily be extended to accommodate different languages. Our program allows the user to focus on just the algorithm, and not
on issues related to implementation.},
  keywords = {Code Generation, Hash Tables, Pattern Matching, Pseudo code implementation, Regular Expressions, XML to C, Java}}

@incollection{Mule93a,
  author = {Philippe Mulet and Pierre Cointe},
  title = {Definition of a Reflective Kernel for a Prototype-Based Language},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {128--144},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {We present the implementation of Moostrap, a
reflective prototype-based language, the interpreter
of which is written in Scheme. Moostrap is based on
a reduced number of primitives, according to a
previous work for defining a taxonomy for
prototype-based languages. Our purpose is to reify
the behavior of any object through two steps: the
slot lookup and its application. The first phase is
reified thanks to \fIbehavioral metaobjects\fR, and
the second is managed by special objects, called
\fIslot-executants\fR. This kernel does not handle
any implicit delegation at first. However, we
introduce it, as s first extension of the basic
language using a new behavioral meta-object.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Mule93b,
  author = {Philippe Mulet and Pierre Cointe},
  title = {D\'efinition d'un noyau r\'eflexif pour un langage \`a prototypes},
  booktitle = {Repr\'esentation par objets},
  pages = {101--115},
  year = {1993},
  address = {La grande motte},
  month = jun,
  organization = {Ec2}}

@inproceedings{Mule94a,
  author = {Philippe Mulet and Marco Jacques},
  title = {De la parent\'e entre les environnements de {MIT} {Scheme} et les prototypes de {Self}},
  booktitle = {Langages et {Mod}\`ele \`a {Objets}},
  pages = {167--181},
  year = {1994},
  address = {Grenoble},
  month = oct}

@inproceedings{Mule94b,
  author = {Philippe Mulet and Jacques Malenfant and Pierre Cointe},
  title = {Towards a Methodology for Explicit Composition of MetaObjects},
  booktitle = {Proceedings of OOPSLA '95},
  pages = {316--330},
  year = {1995},
  doi = {10.1145/217839.217870},
  address = {Austin},
  month = oct}

@phdthesis{Mule95a,
  author = {P. Mulet},
  title = {R\'eflexion et langage \`a prototypes},
  year = {1995},
  school = {\'Ecole des Mines de Nantes}}

@incollection{Mull00a,
  author = {Hausi A. M\"{u}ller and Jens H. Janhke and Dennis B. Smith and Margaret-Anne Storey and Scott R. Tilley and Kenny Wong},
  title = {Reverse Engineering: A Roadmap},
  booktitle = {The Future of Software Engineering 2000},
  publisher = {ACM Press},
  year = {2000},
  editor = {A. Finkelstein}}

@inproceedings{Mull05a,
  author = {Muller, Pierre-Alain and Fleurey, Franck and J\'ez\'equel, Jean-Marc},
  title = {Weaving Executability into Object-Oriented Meta-Languages},
  booktitle = {Proceedings of {MODELS/UML}'2005},
  volume = {3713},
  pages = {264--278},
  publisher = {Springer},
  year = {2005},
  url = {http://www.irisa.fr/triskell/publis/2005/Muller05a.pdf},
  abstract = {Nowadays, object-oriented meta-languages such as MOF
(Meta- Object Facility) are increasingly used to
specify domain-specific languages in the
model-driven engineering community. However, these
meta-languages focus on structural specifications
and have no built-in support for specifications of
operational semantics. In this paper we explore the
idea of using aspectoriented modeling to add precise
action specifications with static type checking and
genericity at the meta level, and examine related
issues and possible solutions. We believe that such
a combination would bring significant benefits to
the community, such as the specification, simulation
and testing of operational semantics of metamodels.
We present requirements for such statically-typed
meta-languages and rationales for the aforementioned
benefits.},
  address = {Montego Bay, Jamaica},
  editor = {L. Briand, S. Kent},
  month = oct,
  series = {LNCS}}

@article{Mull05b,
  author = {Muller, Pierre-Alain and Studer, Philippe and Fondement, Fr\'ed\'erick and B\'ezivin, Jean},
  title = {Independent Web Application Modeling and Development with Netsilon},
  journal = {Software and System Modeling},
  volume = {4},
  pages = {424--442},
  year = {2005},
  month = nov,
  number = {4}}

@inproceedings{Mull10a,
  author = {M\"{u}ller, Christoph and Reina, Guido and Burch, Michael and Weiskopf, Daniel},
  title = {Subversion statistics sifter},
  booktitle = {Proceedings of the 6th international conference on Advances in visual computing - Volume Part III},
  pages = {447--457},
  publisher = {Springer-Verlag},
  year = {2010},
  acmid = {1940139},
  address = {Berlin, Heidelberg},
  isbn = {3-642-17276-8, 978-3-642-17276-2},
  location = {Las Vegas, NV, USA},
  numpages = {11},
  series = {ISVC'10}}

@inproceedings{Mull19a,
author = {Muller, Michael and Lange, Ingrid and Wang, Dakuo and Piorkowski, David and Tsay, Jason and Liao, Q. Vera and Dugan, Casey and Erickson, Thomas},
title = {How Data Science Workers Work with Data: Discovery, Capture, Curation, Design, Creation},
year = {2019},
isbn = {9781450359702},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
doi = {10.1145/3290605.3300356},
booktitle = {Proc. of the 2019 CHI Conf. on Human Factors in Computing Systems},
pages = {1-15},
numpages = {15},
keywords = {data science, data curation, work-practices, data creation, data discovery, data design, grounded theory, data capture},
location = {Glasgow, Scotland Uk},
series = {CHI'19}
}

@phdthesis{Mull86a,
  author = {Hausi A. M{\"u}ller},
  title = {Rigi --- A Model for Software System Construction, Integration, and Evaluation based on Module Interface Specifications},
  year = {1986},
  school = {Rice University}}

@inproceedings{Mull90a,
  author = {Hausi A. M{\"u}ller and James S. Uhl},
  title = {Composing {Subsystem} {Structures} using (k,2)-partite graphs},
  booktitle = {Proceedings of {ICSM} '90 (International Conference on Software Maintenance)},
  pages = {12--19},
  publisher = {IEEE Computer Society Press},
  year = {1990},
  month = nov}

@article{Mull92a,
  author = {R. Muller},
  title = {M-LISP: A representation-independent dialect of LISP with reduction semantics},
  journal = {ACM Transactions on Programming Languages and Systems},
  volume = {14},
  pages = {589--616},
  year = {1992},
  month = oct,
  number = {4}}

@inproceedings{Mull93a,
  author = {Hausi A. M{\"u}ller},
  title = {Software {Engineering} {Education} should concentrate on {Software} {Evolution}},
  booktitle = {Proceedings of National Workshop on Software Engineering Education},
  pages = {102--104},
  year = {1993},
  location = {Toronto, Canada},
  month = may,
  note = {University of Victoria (Canada)}}

@book{Mull93b,
  author = {Sape Mullender},
  title = {Distributed Systems:},
  publisher = {Addison Wesley},
  year = {1993},
  edition = {Second}}

@article{Mull93c,
  author = {Hausi A. M\"uller and M. A. Orgun and S. R. Tilley and J. S. Uhl},
  title = {A reverse engineering approach to subsystem structure identification},
  journal = {International Journal of Software Engineering and Knowledge Engineering},
  volume = {5},
  pages = {181--204},
  year = {1993},
  month = dec,
  number = {4}}

@unpublished{Mull95a,
  author = {Hausi M{\"u}ller and Kenny Wong and Scott R. Tilley},
  title = {Dimensions of Software Architecture for Program Understanding},
  year = {1995},
  note = {University of Victoria \& Carnegie Mellon University},
  type = {Draft}}

@incollection{Mull95b,
  author = {Hausi A. M\"{u}ller and Kenny Wong and Scott R. Tilley},
  title = {Understanding Software Systems Using Reverse Engineering Technology},
  booktitle = {Object-Oriented Technology for Database and Software Systems},
  pages = {240--252},
  publisher = {World Scientific},
  year = {1995},
  editor = {V.S. Alagar and R. Missaoui}}

@book{Mull95c,
  author = {Kevin Mullet and Darrell Sano},
  title = {Designing Visual Interfaces},
  publisher = {Prentice Hall},
  year = {1995}}

@unpublished{Mull97a,
  author = {Martin M{\"u}ller and Joachim Niehren and Gert Smolka},
  title = {Typed Concurrent Programming with Logic Variables},
  year = {1997},
  note = {Programming Systems Lab, Universit{\"a}t des Saarlandes and DFKI},
  type = {Draft}}

@book{Mull97b,
  author = {Pierre-Alain Muller},
  title = {Modelisation Object avec UML},
  publisher = {Eyrolles},
  year = {1997},
  isbn = {2-212-08966-X}}

@inproceedings{Mull97c,
  author = {M\"{u}ller, Hausi A.},
  title = {Reverse Engineering Strategies for Software Migration (Tutorial)},
  booktitle = {Proceedings of the 19th International Conference on Software Engineering},
  pages = {659 to 660},
  publisher = {Association for Computing Machinery},
  year = {1997},
  url = {https://doi.org/10.1145/253228.253799},
  doi = {10.1145/253228.253799},
  address = {New York, NY, USA},
  isbn = {0897919149},
  keywords = {software reengineering, software migration, legacy systems, reverse engineering, software evolution},
  location = {Boston, Massachusetts, USA},
  numpages = {2},
  series = {ICSE '97}}

@inproceedings{Munn07a,
  author = {Munnelly, Jennifer and Fritsch, Serena and Clarke, Siobhan},
  title = {An Aspect-Oriented Approach to the Modularisation of Context},
  booktitle = {PERCOM '07: Proceedings of the Fifth IEEE International Conference on Pervasive Computing and Communications},
  pages = {114--124},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/PERCOM.2007.7},
  address = {Washington, DC, USA},
  isbn = {0-7695-2787-6}}

@inproceedings{Muns94a,
  author = {Munson, Jonathan P. and Dewan, Prasun},
  title = {A Flexible Object Merging Framework},
  booktitle = {CSCW '94: Proceedings of the 1994 ACM conference on Computer supported cooperative work},
  pages = {231--242},
  publisher = {ACM},
  year = {1994},
  doi = {/10.1145/192844.193016},
  address = {New York, NY, USA},
  date-added = {2009-10-21 13:10:40 +0200},
  date-modified = {2009-10-21 13:10:53 +0200},
  isbn = {0-89791-689-1},
  location = {Chapel Hill, North Carolina, United States}}

@inproceedings{Muns98a,
  author = {J.C. Munson and S.G. Elbaum},
  title = {Code Churn: A Measure for Estimating the Impact of Code Change},
  booktitle = {{ICSM}'98},
  pages = {24-34},
  year = {1998}}

@techreport{Mura87a,
  author = {M. Murata and K. Kusumoto},
  title = {Daemon: A Mediator that Keeps Wholes Consistent with their parts},
  year = {1987},
  institution = {Fuji Xerox}}

@article{Mura89a,
  author = {Makoto Murata and Koji Kusumoto},
  title = {Daemon: {Another} {Way} of {Invoking} {Methods}},
  journal = {JOOP},
  volume = {2},
  pages = {8--12},
  year = {1989},
  month = jul,
  number = {2}}

@article{Mura91a,
  author = {Hisashi Natatsuyama and Makoto Murata and Koji Kusumoto},
  title = {A new framework for separating user interfaces from application programs},
  journal = {S.I.G.C.H.I},
  volume = {23},
  pages = {88--92},
  year = {1991},
  month = jan,
  number = {1}}

@article{Mure96a,
  author = {Stephan Murer and Stephen Omohundro and David Stoutamire and Clemens Szyperski},
  title = {Iteration abstraction in Sather},
  journal = {{ACM} Transactions on Programming Languages and Systems},
  volume = {18},
  pages = {1--15},
  year = {1996},
  doi = {10.1145/225540.225541},
  month = jan,
  number = {1}}

@article{Murg19a,
  author = {Imanol Mugarza and Andoni Amurrio and Ekain Azketa and Eduardo Jacob},
  title = {Dynamic Software Updates to Enhance Security and Privacy in High Availability Energy Management Applications in Smart Cities},
  journal = {IEEE Access},
  volume = {7},
  year = {2019},
  doi = {10.1109/ACCESS.2019.2905925}}

@article{Murp01a,
  author = {Gail C. Murphy and Robert J. Walker and Elisa L. A. Baniassad and Martin P. Robillard and Albert Lai and Mik A. Kersten},
  title = {Does aspect-oriented programming work?},
  journal = {Commun. ACM},
  volume = {44},
  pages = {75--77},
  publisher = {ACM},
  year = {2001},
  doi = {10.1145/383845.383862},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {10}}

@article{Murp06a,
  author = {Gail C. Murphy and Mik Kersten and Leah Findlater},
  title = {How are {Java} software developers using the {Eclipse} {IDE}?},
  journal = {IEEE Software},
  year = {2006},
  month = {jul}}

@inproceedings{Murp08a,
  author = {Murphy-Hill, Emerson and Black, Andrew P.},
  title = {Breaking the barriers to successful refactoring: observations and tools for extract method},
  year = {2008},
  isbn = {9781605580791},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1368088.1368146},
  doi = {10.1145/1368088.1368146},
  booktitle = {Proceedings of the 30th International Conference on Software Engineering},
  pages = {421-430},
  numpages = {10},
  keywords = {environments, refactoring, tools, usability},
  location = {Leipzig, Germany},
  series = {ICSE '08}
}

@inproceedings{Murp09a,
  author = {Gail C. Murphy and Petcharat Viriyakattiyaporn and David Shepherd},
  title = {Using activity traces to characterize programming behaviour beyond the lab},
  booktitle = {Proceedings of {ICPC} 2009 (17th IEEE International Conference on Program Comprehension},
  pages = {90-94},
  year = {2009}}

@inproceedings{Murp09b,
  author = {Murphy-Hill, Emerson and Parnin, Chris and Black, Andrew P.},
  title = {How We Refactor, and How We Know It},
  booktitle = {International {C}onference on {S}oftware {E}ngineering ({ICSE})},
  pages = {287--297},
  year = {2009}}

@article{Murp11a,
  author = {Murphy-Hill, Emerson and Parnin, Chris and Black, Andrew P},
  title = {How we refactor, and how we know it},
  journal = {{IEEE} Transactions on {S}oftware {E}ngineering},
  volume = {38},
  pages = {5--18},
  publisher = {IEEE},
  year = {2011},
  number = {1}}

@book{Murp13a,
  author = {Murphy, Kevin P.},
  title = {Machine learning: a probabilistic perspective},
  publisher = {MIT Press},
  year = {2013}}

@book{Murp85a,
  author = {Raymond Murphy},
  title = {English Grammar in Use},
  publisher = {Cambridge University Press},
  year = {1985},
  isbn = {0-521-28723}}

@incollection{Murp90a,
  author = {D. Murphy},
  title = {Approaching a Real-Timed Concurrency Theory},
  booktitle = {Semantics for Concurrency},
  pages = {294--310},
  publisher = {Springer-Verlag},
  year = {1990},
  editor = {M.Z. Kwiatkowska and M.W. Shields and R.M. Thomas},
  series = {Workshops in Computing}}

@inproceedings{Murp95a,
  author = {Gail Murphy and David Notkin and Kevin Sullivan},
  title = {Software Reflexion Models: Bridging the gap between Source and High-Level Models},
  booktitle = {Proceedings of SIGSOFT '95, Third ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  pages = {18--28},
  publisher = {ACM Press},
  year = {1995}}

@phdthesis{Murp96a,
  author = {Gail C. Murphy},
  title = {Lightweight Structural Summarization as an Aid to Software Evolution},
  year = {1996},
  school = {University of Washington}}

@inproceedings{Murp96b,
  author = {Gail C. Murphy and David Notkin and Erica S.-C. Lan},
  title = {An Emperical Study of Static Call Graph Extractors},
  booktitle = {Proceedings of the ICSE-18},
  pages = {90--99},
  year = {1996},
  month = mar,
  organization = {IEEE Computer Society Press}}

@article{Murp96c,
  author = {Gail C. Murphy and David Notkin},
  title = {Lightweight Lexical Source Model Extraction},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {5},
  pages = {262--292},
  year = {1996},
  month = jul,
  number = {3}}

@article{Murp97a,
  author = {Gail C. Murphy and David Notkin},
  title = {Reengineering with Reflexion Models: {A} Case Study},
  journal = {IEEE Computer},
  volume = {8},
  pages = {29--36},
  year = {1997},
  url = {http://www.cs.ubc.ca/spider/murphy/}}

@article{Murp98a,
  author = {Gail C. Murphy and David Notkin and William G. Griswold and Erica S. Lan},
  title = {An Emperical Study of Static Call Graph Extractors},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {7},
  pages = {158--191},
  year = {1998},
  month = apr,
  number = {2}}

@inproceedings{Musc08a,
  author = {Radu Muschevici and Alex Potanin and Ewan Tempero and James Noble},
  title = {Multiple dispatch in practice},
  booktitle = {OOPSLA '08: Proceedings of the 23rd ACM SIGPLAN conference on Object oriented programming systems languages and applications},
  pages = {563--582},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1449764.1449808},
  address = {New York, NY, USA},
  isbn = {978-1-60558-215-3},
  location = {Nashville, TN, USA}}

@article{Mush17a,
  title={Multilingual source code analysis: A systematic literature review},
  author={Mushtaq, Zaigham and Rasool, Ghulam and Shehzad, Balawal},
  journal={IEEE Access},
  volume={5},
  pages={11307--11336},
  year={2017},
  publisher={IEEE}
}

@book{Muss96a,
  author = {David R. Musser and Atul Saini},
  title = {{STL} Tutorial and Reference Guide},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-6339-8-1}}

@techreport{Muth95a,
  author = {Jeyakumar Muthukumarasamy and John T. Stasko},
  title = {Visualizing Program Executions on Large Data Sets Using Semantic Zooming},
  year = {1995},
  institution = {Georgia Institute of Technology},
  number = {GIT-GVU-95-02}}

@inproceedings{Muyl18a,
  author = {Ward Muylaert and Coen De Roover},
  title = {Untangling Composite Commits Using Program Slicing},
  booktitle = {Proceedings of the 18th {IEEE} International Working Conference on Source Code Analysis and Manipulation (SCAM2018)},
  pages = {193--202},
  year = {2018},
  url = {https://doi.org/10.1109/SCAM.2018.00030}}

@article{Myer04a,
  author = {Brad A. Myers and John F. Pane and Andy Ko},
  title = {Natural Programming Languages and Environments},
  journal = {Commun. ACM},
  volume = {47},
  pages = {47--52},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/1015864.1015888},
  address = {New York, NY, USA},
  number = {9}}

@inproceedings{Myer06a,
  author = {Brad A. Myers and David A. Weitzman and Andrew J. Ko and Duen H. Chau},
  title = {Answering why and why not questions in user interfaces},
  booktitle = {CHI '06: Proceedings of the SIGCHI conference on Human Factors in computing systems},
  pages = {397--406},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1124772.1124832},
  address = {New York, NY, USA}}

@book{Myer11a,
  author = {Myers, Glenford J and Sandler, Corey and Badgett, Tom},
  title = {The art of software testing},
  publisher = {John Wiley \& Sons},
  year = {2011},
  edition = {Third}}

@book{Myer75a,
  author = {G. J. Myers},
  title = {Reliable Software Through Composite Design},
  publisher = {Petrocelli/Charter},
  year = {1975},
  address = {New York}}

@book{Myer78a,
  author = {G. J. Myers},
  title = {Composite/Structured Design},
  publisher = {Van Nostrand Reinhold},
  year = {1978}}

@article{Myer86a,
  author = {Brad A. Myers},
  title = {Visual programming, programming by example, and program visualization: a taxonomy},
  journal = {SIGCHI Bull.},
  volume = {17},
  pages = {59--66},
  publisher = {ACM},
  year = {1986},
  doi = {10.1145/22339.22349},
  address = {New York, NY, USA},
  issn = {0736-6906},
  number = {4}}

@phdthesis{Myer87a,
  author = {Brad Myers},
  title = {Creating User Interfaces by Demonstration},
  year = {1987},
  school = {Department of Computer Science, University of Toronto},
  month = may}

@article{Myer90a,
  author = {B.A. Myers and D. Giuse and R.B. Dannenberg and Vander Zanden, B. and D. Kosbie and E. Pervin and A. Mickish and P. Marchal},
  title = {Garnet: Comprehensive Support for Graphical Highly-Interactive User Interfaces},
  journal = {IEEE Computer},
  volume = {23},
  pages = {71--85},
  year = {1990},
  number = {11}}

@inproceedings{Myer92a,
  author = {Brad A. Myers and Dario A. Giuse and Brad Vander Zanden},
  title = {Declarative Programming in a Prototype-Instance System: Object-Oriented Programming Without Writing Methods},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {184--200},
  year = {1992},
  month = oct}

@article{Myer92b,
  author = {Brad A. Myers},
  title = {Demonstrational Interfaces: A Step Beyond Direct Manipulation},
  journal = {IEEE Computer},
  volume = {25},
  pages = {61--73},
  publisher = {IEEE Computer Society},
  year = {1982},
  doi = {10.1109/2.153286},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {8}}

@article{Myer97a,
  author = {Brad A. Myers and Richard G. McDaniel and Robert C. Miller and Alan S. Ferrency and Andrew Faulring and Bruce D. Kyle and Andrew Mickish and Alex Klimovitski and Patrick Doane},
  title = {The Amulet Environment: New Models for Effective User Interface Software Development},
  journal = {IEEE Transactions on Software Engineering},
  volume = {23},
  pages = {347--365},
  year = {1997},
  month = jun,
  number = {6}}

@article{Mylo80a,
  author = {John Mylopoulos and Philip A. Bernstein and H.K.T. Wong},
  title = {{TAXIS}: {A} Language Facility for Designing Database-Intensive Applications},
  journal = {ACM TODS},
  volume = {5},
  pages = {185--207},
  year = {1980},
  month = jun,
  number = {2}}

@incollection{Mylo83a,
  author = {John Mylopoulos and H. Levesque},
  title = {An Overview of Knowledge Representation},
  booktitle = {On Conceptual Modelling: Perspectives from Artificial Intelligence, Databases and Programming Languages},
  pages = {3--17},
  publisher = {Springer-Verlag},
  year = {1983},
  address = {New York},
  editor = {M. Brodie and J. Mylopoulos}}

@inproceedings{Myre10b,
  author = {Myreen, Magnus O.},
  title = {Verified Just-in-time Compiler on x86},
  booktitle = {Principles of Programming Languages},
  year = {2010},
  doi = {10.1145/1706299.1706313},
  keywords = {compiler verification, just in time, self-modifying code},
  series = {POPL '10}}

@article{Mytk08a,
  author = {Mytkowicz, Todd and Sweeney, Peter F and Hauswirth, Matthias and Diwan, Amer},
  title = {Observer effect and measurement bias in performance analysis},
  journal = {Computer Science Technical Reports CU-CS-1042-08, University of Colorado, Boulder},
  year = {2008},
  url = {https://core.ac.uk/download/pdf/54846997.pdf}}

@article{Mytk10a,
  author = {Mytkowicz, Todd and Diwan, Amer and Hauswirth, Matthias and Sweeney, Peter F},
  title = {Evaluating the accuracy of Java profilers},
  journal = {ACM Sigplan Notices},
  volume = {45},
  pages = {187--197},
  publisher = {ACM New York, NY, USA},
  year = {2010},
  url = {https://plv.colorado.edu/papers/mytkowicz-pldi10.pdf},
  number = {6}}

@misc{NET,
  title = {{ASP.NET}},
  key = {NET},
  note = {http://www.microsoft.com/net/}}

@misc{NVDB,
  author = {NIST},
  title = {National Vulnerability Database},
  note = {https://nvd.nist.gov/}}

@mastersthesis{Naab05a,
  author = {Matthias Naab},
  title = {Evaluation of Graphical Elements and their Adequacy for the Visualization of Software Architectures},
  year = {2005},
  school = {Fraunhofer IESE}}

@phdthesis{Nadd17a,
  author = {Naddeo, Marco},
  title = {{A Modular Approach to Object Initialization for Pharo}},
  year = {2017},
  school = {{Dipartimento di Informatica, Universit{\`a} degli Studi di Torino ; Inria Lille Nord Europe - Laboratoire CRIStAL - Universit{\'e} de Lille}},
  url = {https://hal.inria.fr/tel-01651738},
  pdf = {https://hal.inria.fr/tel-01651738/file/NaddeoPhDthesis_revised.pdf},
  abtract = {Code modularity is important for code reuse. Language designers mainly focused on method code modularity. On the contrary, initialization code modularity has usually been neglected. The initialization code of many class-based object-oriented languages becomes cumbersome in different situations: for example, when some fields have multiple initialization options (e.g., a rectangle can be positioned by providing Cartesian or polar coordinates), have optional initialization (e.g., a rectangle can be positioned in the origin (0,0) if no other coordinates are provided), or have superclass initialization (e.g., a colored rectangle must redefine all the constructors of its rectangle superclass to add the notion of color). In such cases, the number of constructors increases exponentially in the size of the initialization options, since the initialization approach lacks modularity. We propose a novel approach to field initialization, inspired by the prototypical language Magda. This approach is based on easy-to-compose initialization modules, which result to be smaller compared to classical constructors. Moreover, their number grows linearly in the size of the initialization options. We apply such approach to Pharo, a dynamically-typed object-oriented programming language inspired by Smalltalk. The adaptation to Pharo of Magda's initialization approach implies solving some new challenges related to moving from a statically typed context to a dynamically typed one.},
  hal-id = {tel-01651738},
  keywords = {Object-oriented programming ; Dynamic typing ; Modularity ; Reuse ; Instance variables ; Initialization ; Constructor ; Variables d'instances ; R{\'e}utilisation ; Modularit{\'e} ; Programmation orient{\'e} objet ; Smalltalk-Pharo ; Typage dynamique ; Initialisation ; Constructeur ; lse-pub},
  month = nov,
  type = {Theses}}

@book{Naeg98a,
  author = {Hans-Heinrich N\"ageli},
  title = {Math\'ematiques discr\`etes},
  publisher = {Presses Polytechniques et universitaires romandes},
  year = {1998}}

@inproceedings{Naff81a,
  author = {Najah Naffah},
  title = {Editing Multitype Documents},
  booktitle = {Proceedings of the International Workshop on Office Information Systems},
  year = {1981},
  month = oct}

@inproceedings{Naga03a,
  author = {Nagarajan, Adithya and Memon, Atif},
  title = {Refactoring using event-based profiling},
  booktitle = {Proceedings of the 1st International Workshop on Refactoring: Achievements, Challenges, Effects (REFACE)},
  year = {2003}}

@inproceedings{Naga05a,
  author = {Nagappan, Nachiappan and Ball, Thomas},
  title = {Static Analysis Tools as Early Indicators of Pre-release Defect Density},
  booktitle = {International Conference on Software Engineering},
  pages = {580--586},
  year = {2005}}

@inproceedings{Naga05b,
  author = {Nagappan, Nachiappan and Ball, Thomas},
  title = {Use of Relative Code Churn Measures to Predict System Defect Density},
  booktitle = {Proceedings of the 27th International Conference on Software Engineering},
  pages = {284--292},
  publisher = {ACM},
  year = {2005},
  url = {http://doi.acm.org/10.1145/1062455.1062514},
  doi = {10.1145/1062455.1062514},
  acmid = {1062514},
  address = {New York, NY, USA},
  isbn = {1-58113-963-2},
  keywords = {defect density, fault-proneness, multiple regression, principal component analysis, relative code churn},
  location = {St. Louis, MO, USA},
  numpages = {9},
  series = {ICSE '05}}

@inproceedings{Naga06a,
  author = {Nagappan, Nachiappan and Ball, Thomas and Zeller, Andreas},
  title = {Mining Metrics to Predict Component Failures},
  booktitle = {Proceedings of the 28th International Conference on Software Engineering},
  pages = {452--461},
  publisher = {ACM},
  year = {2006},
  url = {http://doi.acm.org/10.1145/1134285.1134349},
  doi = {10.1145/1134285.1134349},
  acmid = {1134349},
  address = {New York, NY, USA},
  isbn = {1-59593-375-1},
  keywords = {bug database, complexity metrics, empirical study, principal component analysis, regression model},
  location = {Shanghai, China},
  numpages = {10},
  series = {ICSE '06}}

@inproceedings{Nagk06a,
  author = {Priya Nagpurkar and Chandra Krintz},
  title = {Phase-Based Visualization and Analysis of Java Programs},
  booktitle = {Elsevier Science of Computer Programming, Special issue on Princples of programming in Java},
  volume = {59,Number 1-2},
  pages = {131--164},
  year = {2006},
  month = jan}

@inproceedings{Nagy05a,
  author = {Istvan Nagy and Lodewijk Bergmans and Mehmet Aksit},
  title = {Composing Aspects at Shared Join Points},
  booktitle = {Proceedings of International Conference NetObjectDays, NODe2005},
  volume = {P-69},
  year = {2005},
  url = {http://trese.cs.utwente.nl/publications/files/0365NagyBerAks2005.pdf},
  address = {Erfurt, Germany},
  editor = {Robert Hirschfeld, Ryszard Kowalczyk, Andreas Polze and Mathias Weske},
  month = sep,
  organization = {Gesellschaft f{\"u}r Informatik (GI)},
  series = {Lecture Notes in Informatics}}

@inproceedings{Nagy10a,
  author = {Nagy, Csaba and Pantos, Janos and Gergely, Tam'as and Besz'edes, 'Arp'ad},
  title = {Towards a safe method for computing dependencies in database-intensive systems},
  booktitle = {Software Maintenance and Reengineering (CSMR), 2010 14th European Conference on},
  pages = {166--175},
  publisher = {IEEE},
  year = {2010}}

@inproceedings{Nagy11a,
  author = {Nagy, C. and Vidacs, L. and Ferenc, R. and Gyimothy, T. and Kocsis, F. and Kovacs, I.},
  title = {Solutions for Reverse Engineering 4GL Applications, Recovering the Design of a Logistical Wholesale System},
  booktitle = {2011 15th European Conference on Software Maintenance and Reengineering},
  pages = {343--346},
  year = {2011},
  url = {http://publicatio.bibl.u-szeged.hu/1712/1/Nagy-MAGISTER-ARCH.pdf},
  doi = {10.1109/CSMR.2011.66},
  abstract = {Re-engineering a legacy software system to support new, modern technologies instead of old ones is not an easy task, especially for large systems with a complex architecture. The use of reverse engineering tools is crucial for different subtasks of the full process, such as re-documenting the old code or recovering its design. There are many tools available to assist developers, but most of these tools were designed to deal with third generation languages (e.g. Java, C, C++, C\#). However, many large systems are developed in higher level languages (e.g. Magic, Informix, {ABAP}) and current tools are not able to support all the arising problems during re-engineering systems written in fourth generation languages. In this paper we present a project whose main goal is the development of a technologically and functionally renewed medicinal wholesale system. This system is developed in Magic 4GL, and its development is based on re-engineering an old Magic (version 5) system to {uniPaaS}, which is the current release version of Magic. In the early phases of this project we developed a reverse engineering toolset for Magic 4GL to support reverse engineering, recovering the design of the old system, and to support some forward engineering tasks too. Here we present a report on this project that was carried out in cooperation with {SZEGED} Software Zrt and the Department of Software Engineering at the University of Szeged. The project was partly funded by the Economic Development Operational Programme, New Hungary Development Plan.},
  date = {2011-03},
  eventtitle = {2011 15th European Conference on Software Maintenance and Reengineering},
  file = {IEEE Xplore Abstract Record:/home/anquetil/Zotero/storage/2YG8K5BC/5741335.html:text/html}}

@inproceedings{Najm91a,
  author = {Elle Najm and Jean-Bernard Stefani},
  title = {Object-Based Concurrency: {A} Process Calculus Analysis},
  booktitle = {Proceedings TAPSOFT '91},
  volume = {493},
  pages = {359--380},
  publisher = {Springer-Verlag},
  year = {1991},
  editor = {S. Abramsky and T. Maibaum},
  series = {LNCS}}

@book{Najm97a,
  title = {Formal Methods for Open Object-based Distributed Systems},
  publisher = {Chapman and Hall},
  year = {1997},
  editor = {Elie Najim and Jean-Bernard Stefani}}

@inproceedings{Naka15a,
  author = {Ryotaro Nakamura and Yu Negishi and Shinpei Hayashi and Motoshi Saeki},
  title = {Terminology matching of requirements specification documents and regulations for compliance checking},
  booktitle = {{IEEE} International Workshop on Requirements Engineering and Law, {RELAW}},
  pages = {10--18},
  publisher = {{IEEE} Computer Society},
  year = {2015},
  url = {https://doi.org/10.1109/RELAW.2015.7330206},
  doi = {10.1109/RELAW.2015.7330206}}

@inproceedings{Nako01a,
  author = {Preslav Nakov},
  title = {Latent Semantic Analysis for German Literature Investigation},
  booktitle = {Proceedings of the International Conference, 7th Fuzzy Days on Computational Intelligence, Theory and Applications},
  pages = {834--841},
  publisher = {Springer-Verlag},
  year = {2001},
  address = {London, UK},
  isbn = {3-540-42732-5}}

@article{Nako01b,
  author = {P. Nakov and A. Popova and P. Mateev},
  title = {Weight functions impact on LSA performance},
  journal = {Proceedings of the EuroConference Recent Advances in Natural Language Processing (RANLP 2001)},
  pages = {187--193},
  year = {2001}}

@inproceedings{Nam18a,
  author = {Nam, Daye and Lee, Youn Kyu and Medvidovic, Nenad},
  title = {Eva: A tool for visualizing software architectural evolution},
  booktitle = {Proceedings of the 40th international conference on software engineering: companion proceeedings},
  pages = {53--56},
  year = {2018}}

@inproceedings{Nanc14a,
  author = {Mathieur Nancel and Andy Cockburn},
  title = {Causality - a conceptual model fo interaction history},
  booktitle = {CHI'2014},
  year = {2014},
  doi = {10.1145/2556288.2556990},
  keywords = {undo HCI}}

@book{Nanc92a,
  author = {D. Nanci and B. Espinasse and B. Cohen and H. Heckenroth},
  title = {Ingenierie des systemes d'information avec Merise},
  publisher = {Sybex},
  year = {1992}}

@inproceedings{Nand10a,
  author = {Nanda, M.G. and Gupta, M. and Sinha, S. and Chandra, S. and Schmidt, D. and Balachandran, P.},
  title = {Making defect-finding tools work for you},
  booktitle = {Software Engineering, 2010 ACM/IEEE 32nd International Conference on},
  volume = {2},
  pages = {99 -108},
  year = {2010},
  month = {may}}

@inproceedings{Nand11a,
  author = {Nanda, A. and Mani, S. and Sinha, S. and Harrold, M.J. and Orso, A.},
  title = {Regression testing in the presence of non-code changes},
  booktitle = {Software Testing, Verification and Validation (ICST), 2011 IEEE Fourth International Conference on},
  pages = {21-30},
  year = {2011},
  doi = {10.1109/ICST.2011.60},
  keywords = {program testing;program verification;regression analysis;RTS techniques;modified software validation;noncode changes;regression test selection;traceability computation;Analytical models;Computational modeling;Databases;Protocols;Software;Testing;Unified modeling language},
  month = {mar}}

@article{Nand99a,
  author = {J. Nandigam and A. Lakhotia and C. Cech},
  title = {Experimental evaluation of agreement between programmers in applying the rules of cohesion},
  journal = {Journal of Software Maintenance: Research and Practice},
  year = {1999}}

@proceedings{Napo95a,
  title = {Languages et Mod\`eles \`a Objets},
  booktitle = {Actes LMO '95},
  year = {1995},
  misc = {12-13 Octobre},
  address = {France},
  editor = {Inria},
  month = oct}

@inproceedings{Nara02a,
  author = {Srini Narayanan and Sheila A. McIlraith},
  title = {Simulation, verification and automated composition of web services},
  booktitle = {WWW '02: Proceedings of the 11th international conference on World Wide Web},
  pages = {77--88},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/511446.511457},
  address = {New York, NY, USA},
  isbn = {1-58113-449-5},
  location = {Honolulu, Hawaii, USA}}

@inproceedings{Nasc20a,
  author = {Nascimento, Romulo and Brito, Aline and Hora, Andre and Figueiredo, Eduardo},
  title = {{JavaScript} {API} deprecation in the wild: A first assessment},
  booktitle = {International Conference on {S}oftware {A}nalysis, {E}volution and {R}eengineering ({SANER})},
  pages = {567--571},
  year = {2020},
  organization = {IEEE}}

@article{Nash91a,
  author = {C. Nash and William Haebich},
  title = {An accidental translator from Smalltalk to {ANSI} {C}},
  journal = {{OOPS} Messenger},
  volume = {2},
  pages = {12--23},
  year = {1991},
  url = {https://doi.org/10.1145/122242.122244},
  doi = {10.1145/122242.122244},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl = {https://dblp.org/rec/bib/journals/oopsm/NashH91},
  number = {3},
  timestamp = {Tue, 06 Nov 2018 12:51:23 +0100}}

@inproceedings{Nasl09a,
  author = {Naslavsky, L. and Ziv, H. and Richardson, D.J.},
  title = {A model-based regression test selection technique},
  booktitle = {Software Maintenance, 2009. {ICSM} 2009. IEEE International Conference on},
  pages = {515-518},
  year = {2009},
  doi = {10.1109/ICSM.2009.5306338},
  issn = {1063-6773},
  keywords = {program testing;regression analysis;code-based regression test selection technique;model-based regression test selection;model-based testing;selective regression testing;software artifacts;software testing;test case generation;Analytical models;Automatic testing;Drives;Information analysis;Life testing;Prototypes;Software quality;Software systems;Software testing;Unified modeling language},
  month = {sep}}

@inproceedings{Nass05a,
  author = {Nidal Nasser},
  title = {Real-time service adaptability in multimedia wireless networks},
  booktitle = {Q2SWinet '05: Proceedings of the 1st ACM international workshop on Quality of service \& security in wireless and mobile networks},
  pages = {144--149},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1089761.1089785},
  address = {New York, NY, USA},
  isbn = {1-59593-241-0},
  location = {Montreal, Quebec, Canada}}

@article{Nass73a,
  author = {I. Nassi and B. Shneiderman},
  title = {Flowchart Techniques for Structured Programming},
  journal = {SIGPLAN Notices},
  volume = {8},
  year = {1973},
  month = aug,
  number = {8}}

@misc{NaturalSmalltalk,
  key = {Natural Smalltalk},
  note = {A toolkit for analyzing Smalltalk and English text in the way of Natural Language Processing. http://map.squeak.org/package/624ed871-4e89-4343-8652-af38a873d0b4}}

@inproceedings{Nava00a,
  author = {Gonzalo Navarro and Erkki Sutinen and Jani Tanninen and Jorma Tarhio},
  title = {Indexing Text with Approximate q-Grams},
  booktitle = {Proceedings of the 11th Annual Symposium on Combinatorial Pattern Matching},
  pages = {350--363},
  publisher = {Springer Verlag, London},
  year = {2000},
  number = {1848},
  series = {LNCS}}

@article{Nava01a,
  author = {Gonzalo Navarro},
  title = {A guided tour to approximate string matching},
  journal = {ACM Computing Surveys},
  volume = {33},
  pages = {31--88},
  year = {2001},
  url = {citeseer.ist.psu.edu/navarro99guided.html},
  number = {1}}

@inproceedings{Naye94a,
  author = {Farshad Nayeri and Ben Hurwitz and Frank Manola},
  title = {Generalizing Dispatching in a Distributed Object System},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {450--473},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@techreport{Ndja93a,
  author = {Gilbert Ndjatou},
  title = {Modelling Objects, Knowledge and Learning in Distributed Object-Based Systems},
  year = {1993},
  institution = {The City University of new York},
  type = {TR-93-04-02}}

@inproceedings{Neam06a,
  author = {Iulian Neamtiu and Michael W. Hicks and Gareth Stoyle and Manuel Oriol},
  title = {Practical dynamic software updating for {C}},
  booktitle = {Programming Language Design and Implementation ({PLDI})},
  pages = {72-83},
  year = {2006},
  doi = {10.1145/1133255.1133991}}

@article{Neam08,
  author = {Neamtiu, Iulian and Hicks, Michael and Foster, Jeffrey S. and Pratikakis, Polyvios},
  title = {Contextual effects for version-consistent dynamic software updating and safe concurrent programming},
  journal = {SIGPLAN Not.},
  volume = {43},
  pages = {37--49},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1328897.1328447},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {1}}

@inproceedings{Neam09a,
 author = {Neamtiu, Iulian and Hicks, Michael},
 title = {Safe and Timely Updates to Multi-threaded Programs},
 booktitle = {Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '09},
 year = {2009},
 isbn = {978-1-60558-392-1},
 location = {Dublin, Ireland},
 pages = {13--24},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1542476.1542479},
 doi = {10.1145/1542476.1542479},
 acmid = {1542479},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dynamic software updating, multi-threading, update safety, update timeliness}
}

@inproceedings{Nebb98m,
  author = {Robb Nebbe},
  title = {Semantic Structure: a Basis for Software Architecture},
  booktitle = {Object-Oriented Technology (ECOOP '98 Workshop Reader)},
  volume = {1543},
  publisher = {Springer-Verlag},
  year = {1998},
  editor = {Serge Demeyer and Jan Bosch},
  series = {LNCS}}

@inproceedings{Nebb98n,
  author = {Robb Nebbe},
  title = {Composition and Coordination: the Two Paradigms Underlying {AOP}?},
  booktitle = {Object-Oriented Technology (ECOOP '98 Workshop Reader)},
  volume = {1543},
  publisher = {Springer-Verlag},
  year = {1998},
  abstract = {This position paper is based on work recovering
architectures from object-oriented systems in the
context of the FAMOOS Esprit project. Our experience
corroborates the existence of aspects that cross-cut
the functionality of a software system. However,
when examining how the problems arising from such a
situation are dealt with in Ada where the language
has built-in support for concurrency and C++ where
no such support exists suggests the possibility of a
more general approach to aspect-oriented programming
based on the following hypothesis about software
structure that so far has proven to be correct. "A
software system can be structured as a set of
independent semantic domains consisting of a core
problem domain and a set of coordinated supporting
domains." I will use the term semantics to refer to
an axiomatic or denotational notions of semantics
where only the result is considered as semantically
relevant as opposed to an operational notion of
semantics where how the result was obtained is
equally important. I will also use the term
coordination to mean the linking of actions or
instances from different semantic domains. This is a
very general notion of coordination of which the
more traditional use of coordination in relation to
concurrency is an example.},
  editor = {Serge Demeyer and Jan Bosch},
  series = {LNCS}}

@techreport{Nebb99z,
  author = {Robb Nebbe},
  title = {{FAMIX} {Ada} language plug-in 2.2},
  year = {1999},
  url = {http://scg.unibe.ch/archive/famoos/FAMIX/Plugins/AdaPlugin2.2.html http://scg.unibe.ch/archive/famoos/FAMIX/Plugins/AdaPlugin2.2.pdf},
  abstract = {This document defines a language plug-in for FAMIX,
the FAMOOS information exchange model. It extends
and interprets the FAMIX core model to cover the
essential entities from the Ada programming
language.},
  institution = {University of Bern},
  month = aug}

@inproceedings{Necu00a,
  author = {Necula, George C.},
  title = {Translation Validation for an Optimizing Compiler},
  booktitle = {Programming Language Design and Implementation},
  year = {2000},
  doi = {10.1145/349299.349314},
  isbn = {1-58113-199-2},
  location = {Vancouver, British Columbia, Canada},
  numpages = {12},
  series = {PLDI '00}}

@article{Need70a,
  author = {Saul B. Needleman and Christian D. Wunsch},
  title = {A General Method Applicable to the Search for Similarity in the Amino Acid Sequences of Two Proteins},
  journal = {J. Mol. Biol.},
  volume = {48},
  pages = {443--453},
  year = {1970}}

@inproceedings{Nega12a,
  author = {Stas Negara and Mohsen Vakilian and Nicholas Chen and Ralph E. Johnson and Danny Dig},
  title = {Is It Dangerous to Use Version Control Histories to Study Source Code Evolution?},
  booktitle = {Proceedings of the 26th European Conference on Object-Oriented Programming ({ECOOP})},
  year = {2012},
  abstract = {Researchers use file-based Version Control System (VCS) as the primary source of code evolution data. VCSs are widely used by developers, thus, researchers get easy access to historical data of many projects. Although it is convenient, research based on VCS data is incomplete and imprecise. Moreover, answering questions that correlate code changes with other activities (e.g., test runs, refactoring) is impossible. Our tool, CodingTracker, non-intrusively records fine-grained and diverse data during code development. CodingTracker collected data from 24 de- velopers: 1,652 hours of development, 23,002 committed files, and 314,085 testcase runs.
This allows us to answer: How much code evolution data is not stored in VCS? How much do developers intersperse refactorings and edits in the same commit? How frequently do developers fix failing tests by changing the test itself? How many changes are committed to VCS without being tested? What is the temporal and spacial locality of changes?},
  annote = {inproceedings},
  date-added = {2014-09-18 08:53:32 +0000},
  date-modified = {2014-09-18 08:58:58 +0000}}

@inproceedings{Nega13a,
  author = {Negara, Stas and Chen, Nicholas and Vakilian, Mohsen and Johnson, Ralph E. and Dig, Danny},
  title = {A Comparative Study of Manual and Automated Refactorings},
  booktitle = {27th European Conference on Object-Oriented Programming},
  pages = {552--576},
  year = {2013}}

@inproceedings{Nega14a,
  author = {Negara, Stas and Codoban, Mihai and Dig, Danny and Johnson, Ralph E.},
  title = {Mining Fine-grained Code Changes to Detect Unknown Change Patterns},
  booktitle = {Proceedings of the 36th International Conference on Software Engineering},
  pages = {803--813},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2568225.2568317},
  doi = {10.1145/2568225.2568317},
  acmid = {2568317},
  address = {New York, NY, USA},
  isbn = {978-1-4503-2756-5},
  keywords = {Code Changes, Data Mining, Program Transformation},
  location = {Hyderabad, India},
  numpages = {11},
  series = {ICSE 2014}}

@inproceedings{Neha00a,
  author = {Chrystopher L. Nehaniv},
  title = {Evolvability in Biology, Artifacts, and Software Systems},
  booktitle = {Artificial Life 7 Workshop Proceedings},
  year = {2000},
  url = {http://homepages.feis.herts.ac.uk/~nehaniv/pubs.html},
  editor = {Carlo C. Maley and Eilis Boudreau},
  page = {17--21}}

@article{Neig84a,
  author = {Neighbors, James M.},
  title = {The Draco Approach to Constructing Software from Reusable Components},
  journal = {IEEE Transactions on Software Engineering},
  volume = {10},
  pages = {564--574},
  year = {1984},
  number = {5}}

@inproceedings{Neig96a,
  author = {James M. Neighbors},
  title = {Finding {Reusable} {Software} {Components} in {Large} {Systems}},
  booktitle = {Proceedings of {WCRE} '96 (3rd Working Conference on Reverse Engineering)},
  pages = {2--10},
  publisher = {IEEE Computer Society Press},
  year = {1996},
  month = nov}

@inproceedings{Nels08a,
  author = {Stephen Nelson and David J. Pearce and James Noble},
  title = {First Class Relationships for {OO} Languages},
  booktitle = {Proceedings of the 6th International Workshop on Multiparadigm Programming with Object-Oriented Languages (MPOOL 2008)},
  year = {2008},
  url = {http://homepages.fh-regensburg.de/~mpool/mpool08/programme.html http://homepages.fh-regensburg.de/~mpool/mpool08/submissions/Noble.pdf}}

@inproceedings{Nels85a,
  author = {G. Nelson},
  title = {A constraint-based graphics system},
  booktitle = {Proceedings of SIGGRAPH '85},
  pages = {235--243},
  year = {1985}}

@book{Nels91a,
  author = {Greg Nelson},
  title = {Systems Programming With Modula-3},
  publisher = {Prentice Hall Series in Innovative Technology},
  year = {1991}}

@book{Nels99a,
  author = {Jeff Nelson},
  title = {Programming Mobile Object with {Java}},
  publisher = {Wiley},
  year = {1999},
  isbn = {0-471-25406-1}}

@techreport{Neme00a,
  author = {Bernhard Nemec},
  title = {Evolution 200},
  year = {2000},
  url = {http://scg.unibe.ch/archive/projects/Neme00a.pdf},
  institution = {University of Bern},
  month = jan,
  type = {Informatikprojekt}}

@article{Neme21,
author = {N\'emeth, D\'avid and Horp\'acsi, D\'aniel and Tejfel, M\'at\'e},
year = {2021},
month = mar,
title = {Adaptation of a Refactoring DSL for the Object-Oriented Paradigm},
volume = {25},
journal = {Acta Cybernetica},
doi = {10.14232/actacyb.284280}
}

@inproceedings{Nent07a,
  author = {Nentwich, Florian and Jovanovic, Nenad and Kirda, Engin and Kruegel, Christopher and Vigna, Giovanni},
  title = {{Cross-Site Scripting Prevention with Dynamic Data Tainting and Static Analysis}},
  booktitle = {In Proceeding of the Network and Distributed System Security Symposium (NDSS'07},
  year = {2007},
  abstract = {{Cross-site scripting (XSS) is an attack against web applications in which scripting code is injected into the output of an application that is then sent to a user's web browser. In the browser, this scripting code is executed and used to transfer sensitive data to a third party (i.e., the attacker). Currently, most approaches attempt to prevent XSS on the server side by inspecting and modifying the data that is exchanged between the web application and the user. Unfortunately, it is often the case that vulnerable applications are not fixed for a considerable amount of time, leaving the users vulnerable to attacks. The solution presented in this paper stops XSS attacks on the client side by tracking the flow of sensitive information inside the web browser. If sensitive information is about to be transferred to a third party, the user can decide if this should be permitted or not. As a result, the user has an additional protection layer when surfing the web, without solely depending on the security of the web application}},
  annote = {Therefore, to guaran- tee that no information can be leaked using indirect control dependencies (that is, to provide a noninterference [8] guar- antee), static analysis is necessary. The static analysis must ensure that all variables that could receive a new value on any program path within the tainted scope are tainted.},
  citeulike-article-id = {8790179},
  date-added = {2011-02-18 13:04:36 +0100},
  date-modified = {2011-02-18 13:04:41 +0100},
  posted-at = {2011-02-09 11:20:17},
  priority = {2},
  read = {1}}

@misc{NesC,
  author = {Eric Brewer and David Culler and David Gay and Phil Levis and Rob von Behren and Matt Welsh},
  title = {{nesC}: A Programming Language for Deeply Networked Systems},
  note = {http://nescc.sourceforge.net}}

@article{Nesi98a,
  author = {Paolo Nesi},
  title = {Managing {OO} Project Better},
  journal = {IEEE Software},
  year = {1988},
  month = jul}

@techreport{Nest92a,
  author = {Uwe Nestmann and L\'aszl\'o Teleki},
  title = {A Chemical Abstract Machine for a Calculus of Communicating Functions},
  year = {1992},
  institution = {Univ. Erlangen-N{\"u}rnberg},
  month = dec,
  note = {submitted for publication},
  type = {IMMD7-14/92}}

@techreport{Nest92b,
  author = {Uwe Nestmann and L\'aszl\'o Teleki},
  title = {Towards a Calculus of Communicating Functions},
  year = {1992},
  institution = {Univ. Erlangen-N{\"u}rnberg},
  month = dec,
  note = {submitted for publication},
  type = {IMMD7-13/92}}

@inproceedings{Nest96a,
  author = {Uwe Nestmann and Benjamin C. Pierce},
  title = {Decoding Choice Encodings},
  booktitle = {CONCUR~'96: Concurrency Theory, 7th International Conference},
  volume = 1119,
  pages = {179--194},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Pisa, Italy},
  editor = {Ugo Montanari and Vladimiro Sassone},
  month = aug,
  series = {LNCS}}

@misc{NetBeans,
  author = {NetBeans},
  title = {NetBeans IDE},
  year = {2010},
  url = {http://www.netbeans.org},
  howpublished = {http://www.netbeans.org, archived at http://www.webcitation.org/5p1qB6hNt},
  key = {NetBeans}}

@phdthesis{Neu14,
  author = {Neu, Nicolas},
  title = {Automatic application performance improvements through VM parameter modification after runtime behavior analysis},
  year = {2014},
  school = {University of New Brunswick}}

@inproceedings{Neub05a,
  title={From sequential programs to multi-tier applications by program transformation},
  author={Neubauer, Matthias and Thiemann, Peter},
  booktitle={Proceedings of the 32nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages={221--232},
  year={2005}
}

@book{Neum58a,
  author = {John von Neumann},
  title = {The Computer and the Brain},
  publisher = {Yale University Press},
  year = {1958},
  address = {New Haven}}

@book{Neum66a,
  author = {John von Neumann},
  title = {Theory of Self-Reproducing Automata},
  publisher = {University of Illinois Press},
  year = {1966},
  address = {Urbana, Illinois},
  note = {Edited and completed by Arthur W. Burks.}}

@inproceedings{Neus91a,
  author = {Christian Neusius},
  title = {Synchronizing Actions},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {118--132},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Newc05,
  author = {P. {Newcomb}},
  title = {Architecture-Driven Modernization (ADM)},
  booktitle = {12th Working Conference on Reverse Engineering ({WCRE}'05)},
  pages = {237-237},
  year = {2005}}

@inproceedings{Newc95a,
  author = {Philipp Newcomb and Paul Martens},
  title = {Reengineering procedural into data flow program},
  booktitle = {Proceedings of {WCRE} (Working Conference on Reverse Engineering)},
  pages = {32--39},
  publisher = {IEEE CS},
  year = {1995}}

@inproceedings{Newc95b,
  author = {Philipp Newcomb and Gordon Kotik},
  title = {Reengineering procedural into object-oriented systems},
  booktitle = {Proceedings of {WCRE} (Working Conference on Reverse Engineering)},
  pages = {237--250},
  publisher = {IEEE CS},
  year = {1995}}

@article{Newe20a,
  author = {Newell, Andy and Pupyrev, Sergey},
  title = {Improved Basic Block Reordering},
  journal = {IEEE Transactions on Computers},
  volume = {69},
  pages = {1784-1794},
  year = {2020},
  doi = {10.1109/TC.2020.2982888},
  number = {12}}

@inproceedings{Newm17a,
  author = {Newman, Christian D. and AlSuhaibani, Reem S. and Collard, Michael L. and Maletic, Jonathan I.},
  title = {Lexical Categories for Source Code Identifiers},
  booktitle = {Proceedings of SANER},
  pages = {228--239},
  publisher = {IEEE},
  year = {2017},
  keywords = {symbol name identifiers}}

@article{Newm17b,
  author = {Newman, Christian D. Newman and Brian Bartman and Michael L. Collard and Jonathan I. Maletic},
  title = {Simplifying the construction of source code transformations via automatic syntactic restructurings: {Simplifying} the construction of source code transformations via automatic syntactic restructurings},
  journal = {Journal of Software: Evolution and Process},
  volume = {29},
  pages = {e1831},
  year = {2017},
  url = {http://doi.wiley.com/10.1002/smr.1831},
  doi = {10.1002/smr.1831},
  abstract = {A set of restructurings to systematically normalize selective syntax in C++ is presented. The objective is to convert variations in syntax of specific portions of code into a single form to simplify the construction of large, complex program transformation rules. Current approaches to constructing transformations require developers to account for a large number of syntactic cases, many of which are syntactically different but semantically equivalent. The work identifies classes of such syntactic variations and presents normalizing restructurings to simplify each variation to a single, consistent syntactic form. The normalizing restructurings for C++ are presented and applied to two open source systems for evaluation. The evaluation uses the system's test cases to validate that the normalizing restructurings do not affect the systems' tested behavior. In addition, a set of example transformations that benefit from the prior application of normalizing restructurings are presented along with a small survey to assess the effect of the readability of the resultant code.},
  issn = {20477473},
  language = {en},
  month = apr,
  number = {4},
  shorttitle = {Simplifying the construction of source code transformations via automatic syntactic restructurings},
  urldate = {2018-04-19}}

@article{Newm20a,
  author = {Newman, Christian and AlSuhaibani, Reem and Decker, Michael and Peruma, Anthony and Kaushik, Dishant and Mkaouer, Mohamed Wiem and Hill, Emily},
  title = {On the generation, structure, and semantics of grammar patterns in source code identifiers},
  journal = {Journal of Systems and Software},
  volume = {170},
  year = {2020},
  doi = {10.1016/j.jss.2020.110740},
  month = jul}

@book{Newm79a,
  author = {W.M. Newman and R.F. Sproull},
  title = {Principles of Interactive Computer Graphics},
  publisher = {McGraw-Hill},
  year = {1979},
  edition = {Second},
  series = {Computer Science Series}}

@book{Ng93a,
  title = {Proceeding of {ISAAC} '93 4th International Symposium on Algorithms and Computation},
  volume = {762},
  publisher = {Springer-Verlag},
  year = {1993},
  editor = {K.W. Ng and P. Raghavan and N.V. Balasubramanian and F.Y.L. Chin},
  isbn = {3-540-57568-5},
  series = {LNCS}}

@article{Nget19a,
  author = {Ngetich, Moses Kibet Yegon and Otieno, Collins and Kimwele, Michael W.},
  title = {A Model for Code Restructuring, A Tool for Improving Systems Quality In Compliance With Object Oriented Coding Practice},
  journal = {International Journal of Computer Applications Technology and Research},
  year = {2019},
  url = {https://api.semanticscholar.org/CorpusID:182093928}}

@inproceedings{Nguy05a,
  author = {Tien Nguyen and Ethan Munson and John Boyland},
  title = {An Infrastructure for Development of Object-Oriented, Multi-level Configuration Management Services},
  booktitle = {Internationl Conference on Software Engineering (ICSE 2005)},
  pages = {215--224},
  publisher = {ACM Press},
  year = {2005}}

@inproceedings{Nguy05b,
  author = {Nguyen, Tien N. and Munson, Ethan V. and Thao, Cheng},
  title = {Managing the Evolution of Web-Based Applications with WebSCM},
  booktitle = {{ICSM} '05: Proceedings of the 21st IEEE International Conference on Software Maintenance},
  pages = {577--586},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/ICSM.2005.62},
  address = {Washington, DC, USA},
  isbn = {0-7695-2368-4}}

@inproceedings{Nguy10a,
  author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson, Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N},
  title = {A graph-based approach to {API} usage adaptation},
  booktitle = {Conference on {O}bject-{O}riented {P}rogramming, {S}ystems and {A}pplications ({OOPSLA}'10)},
  pages = {302 -- 321},
  year = {2010}}

@inproceedings{Nguy12a,
  title={BabelRef: detection and renaming tool for cross-language program entities in dynamic web applications},
  author={Nguyen, Hung Viet and Nguyen, Hoan Anh and Nguyen, Tung Thanh and Nguyen, Tien N},
  booktitle={2012 34th International Conference on Software Engineering (ICSE)},
  pages={1391--1394},
  year={2012},
  organization={IEEE}
}

@inproceedings{Nguy13a,
  author = {Nguyen, Tung Thanh and Nguyen, Anh Tuan and Nguyen, Hoan Anh and Nguyen, Tien N},
  title = {A statistical semantic language model for source code},
  booktitle = {Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
  pages = {532--542},
  year = {2013}}

@inproceedings{Nguy14a,
  author = {Nguyen, Anh Tuan and Nguyen, Hoan Anh and Nguyen, Tung Thanh and Nguyen, Tien N},
  title = {Statistical learning approach for mining {API} usage mappings for code migration},
  booktitle = {Proceedings of the 29th ACM/IEEE international conference on Automated software engineering},
  pages = {457--468},
  year = {2014}}

@inproceedings{Nguy15a,
  author = {Nguyen, Anh Tuan and Nguyen, Tung Thanh and Nguyen, Tien N},
  title = {Divide-and-conquer approach for multi-phase statistical migration for source code (t)},
  booktitle = {2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  pages = {585--596},
  year = {2015},
  organization = {IEEE}}

@inproceedings{Nguy20a,
  author = {Nguyen, Son and Phan, Hung and Le, Trinh and Nguyen, Tien N},
  title = {Suggesting natural method names to check name consistencies},
  booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
  pages = {1372--1384},
  year = {2020}}

@article{Nguy86a,
  author = {V. Nguyen and Brent Hailpern},
  title = {A Generalized Object Model},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {78--87},
  year = {1986},
  month = oct,
  number = {10}}

@inproceedings{Nguy89a,
  author = {G.A. Nguyen and D. Rieu},
  title = {Schema Change Propagation in Object-oriented Databases},
  booktitle = {IFIP 11th World Computer Conference},
  pages = {815--820},
  publisher = {North-Holland},
  year = {1989},
  address = {San Francisco, CA},
  editor = {G.X. Ritter}}

@incollection{Nguy89b,
  author = {G.T Nguyen and D. Rieu},
  title = {Schema Evolution in Object-oriented Database Systems},
  booktitle = {Data and Knowledge Engineering},
  volume = {4},
  pages = {43--67},
  publisher = {?},
  year = {1989}}

@inproceedings{Nguy92a,
  author = {G.T. Nguyen and D. Rieu and J. Escamilla},
  title = {An Object Model for Engineering Design},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {233--251},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@article{Ni05a,
  author = {Yang Ni and Ulrich Kremer and Adrian Stere and Liviu Iftode},
  title = {Programming ad-hoc networks of mobile and resource-constrained devices},
  journal = {SIGPLAN Notice},
  volume = {40},
  pages = {249--260},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1064978.1065040},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {6}}

@book{Nico02a,
  author = {Jill Nicola and Mark Mayfield and Mike Abney},
  title = {Streamlined Object Modeling},
  publisher = {Prentice Hall},
  year = {2002}}

@inproceedings{Nico17a,
  author = {Atzei, Nicola and Bartoletti, Massimo and Cimoli, Tiziana},
  title = {A survey of attacks on Ethereum smart contracts},
  booktitle = {Proceedings of International Conference on Principles of Security and Trust},
  volume = {10204},
  pages = {164-186},
  publisher = {Springer},
  year = {2017},
  annote = {wrong ref}}

@article{Nico84a,
  author = {Rocco de Nicola and Matthew Hennessy},
  title = {Testing Equivalences for Processes},
  journal = {Theoretical Computer Science},
  volume = {34},
  pages = {83--133},
  publisher = {North-Holland},
  year = {1984}}

@article{Nico85a,
  author = {Rocco de Nicola},
  title = {Two Complete Axiom Systems for a Theory of Communicating Sequential Processes},
  journal = {Information and Control},
  volume = {64},
  pages = {136--172},
  year = {1985}}

@article{Nico87a,
  author = {Rocco De Nicola},
  title = {Extensional Equivalences for Transition Systems},
  journal = {Acta Informatica},
  volume = {24},
  pages = {211--237},
  year = {1987}}

@article{Nico98a,
  author = {Rocco de Nicola and Gian Luigi Ferrari and R. Pugliese},
  title = {Klaim: a Kernel Language for Agents Interaction and Mobility},
  journal = {IEEE Transactions on Software Engineering (Special Issue on Mobility and Network Aware Computing)},
  year = {1998},
  editor = {Catalin Roman and Ghezzi}}

@inproceedings{Nie20a,
  author = {Nie, Pengyu and Palmskog, Karl and Li, Junyi Jessy and Gligoric, Milos},
  title = {Deep generation of Coq lemma names using elaborated terms},
  booktitle = {International Joint Conference on Automated Reasoning},
  pages = {97--118},
  year = {2020},
  organization = {Springer}}

@inproceedings{Nied16a,
  author = {R. Niedermayr and E. Juergens and S. Wagne},
  title = {Will my tests tell me if I break this code?},
  booktitle = {International Workshop on Continuous Software Evolution and Delivery},
  pages = {23--29},
  publisher = {ACM Press},
  year = {2016}}

@book{Niel00a,
  author = {Jakob Nielsen},
  title = {Designing Web Usability},
  publisher = {New Riders},
  year = {2000}}

@book{Niel02a,
  author = {Jacob Nielsen and Marie Tahir},
  title = {Homepage Usability 50 Websites Deconstructed},
  publisher = {New Riders},
  year = {2002},
  month = sep}

@book{Niel03a,
  author = {Nielsen, Jakob},
  title = {Usability Engineering},
  publisher = {Morgan Kaufmann},
  year = {1993},
  url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0125184069},
  citeulike-article-id = {634897},
  day = {23},
  edition = {1st},
  howpublished = {Paperback},
  isbn = {0125184069},
  month = sep,
  posted-at = {2010-02-01 09:15:47},
  priority = {0}}

@book{Niel05a,
  author = {Flemming Nielson and Hanne Riis Nielson and Chris Hankin},
  title = {Principles of Program Analysis},
  publisher = {Springer-Verlag},
  year = {2005},
  address = {Berlin, Germany},
  edition = {Second Edition},
  isbn = {3-540-65410-0}}

@inproceedings{Niel89a,
  author = {Flemming Nielson},
  title = {The Typed Lambda-Calculus with First-Class Processes},
  booktitle = {Proceedings PARLE '89, Vol II},
  volume = {366},
  pages = {357--373},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Eindhoven},
  editor = {E. Odijk and J-C. Syre},
  month = jun,
  series = {LNCS}}

@article{Niel89b,
  author = {Jakob Nielsen and John T. Richards},
  title = {The {Experience} of {Learning} and {Using} {Smalltalk}},
  journal = {IEEE Software},
  volume = {6},
  pages = {73--77},
  publisher = {IEEE Computer Society Press},
  year = {1989},
  number = {3}}

@inproceedings{Niel93a,
  author = {Flemming Nielson and Hanne Riis Nielsen},
  title = {From {CML} to Process Algebra},
  booktitle = {Proceedings of CONCUR '93},
  volume = {715},
  pages = {493--508},
  publisher = {Springer-Verlag},
  year = {1993},
  editor = {E. Best},
  series = {LNCS}}

@book{Niel93b,
  author = {Jakob Nielsen},
  title = {Usability Engineering},
  publisher = {Morgan Kaufmann},
  year = {1999}}

@book{Niel96a,
  title = {Proceedings {ESOP}'96},
  volume = {1058},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linkoping, Sweden},
  editor = {Hanne Riis Nielson},
  isbn = {3-540-61055-3},
  month = apr,
  series = {LNCS}}

@article{Niep18a,
  author = {Fabio Niephaus and Tim Felgentreff and Tobias Pape and Robert Hirschfeld and Marcel Taeumel},
  title = {Live Multi-language Development and Runtime Environments},
  journal = {Journal on The Art, Science, and Engineering of Programming},
  volume = 2,
  year = {2018},
  number = 3}

@inproceedings{Niep19a,
  author = {Niephaus, Fabio and Felgentreff, Tim and Hirschfeld, Robert},
  title = {GraalSqueak: Toward a Smalltalk-Based Tooling Platform for Polyglot Programming},
  booktitle = {Proceedings of the 16th ACM SIGPLAN International Conference on Managed Programming Languages and Runtimes (MPLR'19)},
  pages = {14-26},
  publisher = {ACM},
  year = {2019},
  url = {https://doi.org/10.1145/3357390.3361024},
  doi = {10.1145/3357390.3361024},
  abstract = {Polyglot programming provides software developers with a broader choice in terms of software libraries and frameworks available for building applications. Previous research and engineering activities have focused on language interoperability and the design and implementation of fast polyglot runtimes. To make polyglot programming more approachable for developers, novel software development tools are needed that help them build polyglot applications. We believe a suitable prototyping platform helps to more quickly evaluate new ideas for such tools. In this paper we present GraalSqueak, a Squeak/Smalltalk virtual machine implementation for the GraalVM. We report our experience implementing GraalSqueak, evaluate the performance of the language and the programming environment, and discuss how the system can be used as a tooling platform for polyglot programming.},
  address = {New York, NY, USA},
  isbn = {9781450369770},
  keywords = {tools, GraalVM, live development, virtual machines, Squeak/Smalltalk, polyglot programming, Truffle},
  location = {Athens, Greece},
  numpages = {13}}

@inproceedings{Nier00a,
  author = {Oscar Nierstrasz},
  title = {Identify the Champion},
  booktitle = {Pattern Languages of Program Design},
  volume = {4},
  pages = {539--556},
  publisher = {Addison Wesley},
  year = {2000},
  url = {http://scg.unibe.ch/download/champion/champion.pdf http://scg.unibe.ch/archive/papers/Nier00aIdentifyTheChampion.pdf http://scg.unibe.ch/download/champion/index.html},
  abstract = {The peer review process for technical contributions
to conferences in computing sciences is very
thorough, and can be as stringent as the review
process for journal publications in other domains.
The programme committee for such a conference will
typically convene at a meeting, where submitted
papers are discussed, and accepted or rejected for
presentation at the conference. Experience shows
that discussions are more focussed, and the entire
process runs more smoothly if most of the time is
devoted to those papers that are actually
"championed" by some committee member. In order to
make this work effectively, however, the notion of
"championing" must be introduced early in the review
process. This paper presents a set of process
patterns that help to achieve this goal.},
  editor = {N. Harrison and B. Foote and H. Rohnert}}

@inproceedings{Nier00b,
  author = {Oscar Nierstrasz and Franz Achermann},
  title = {{Supporting Compositional Styles for Software Evolution}},
  booktitle = {Proceedings International Symposium on Principles of Software Evolution (ISPSE 2000)},
  pages = {11--19},
  publisher = {IEEE},
  year = {2000},
  misc = {Nov 1-2},
  url = {http://scg.unibe.ch/archive/papers/Nier00bSCS.pdf},
  doi = {10.1109/ISPSE.2000.913216},
  abstract = {Software is not just difficult to develop, but it is
even more difficult to maintain in the face of
changing requirements. The complexity of software
evolution can, however, be significantly reduced if
we manage to separate the stable artifacts (the
components) from their configuration (the scripts).
We have proposed a simple, unifying framework of
forms, agents, and channels for modelling components
and scripts, and we have developed an experimental
composition language, called Piccola, based on this
framework, that supports the specification of
applications as flexible compositions of stable
components. In this paper we show how Piccola can be
used to reduce the complexity of software evolution
through the specification and use of an appropriate
compositional style, and we illustrate the approach
through a non-trivial example of mixin layer
composition.},
  address = {Kanazawa, Japan},
  month = nov}

@inproceedings{Nier00c,
  author = {Oscar Nierstrasz and Jean-Guy Schneider and Franz Achermann},
  title = {Agents Everywhere, All the Time},
  booktitle = {ECOOP 2000 Workshop on Component-Oriented Programming},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/Nier00cAgentsEverywhere.pdf},
  abstract = {Moore's Law is pushing us inevitably towards a world
of pervasive, wireless, spontaneously networked
computing devices. Whatever these devices do, they
will have to talk to and negotiate with one another,
and so software agents will have to represent them.
Whereas conventional services on intranets will
continue to be distributed using established
middleware standards, internet services are being
built on top of http, wap or other protocols, and
exchange information in HTML, XML and just about
anything that can be wrapped as a MIME type or
streamed. This situation leads us to three software
problems: (i) How can we simplify the task of
programming these agents? (i.e., {Java} is not
enough), (ii) How can agents interact and
interoperate in an open, evolving network
environment? (i.e., XML is not enough), (iii) How
can we reason about the services that agents provide
and use? (i.e., IDL is not enough). We discuss these
questions in the context of our work on Piccola, a
small composition language, and outline ongoing and
further research.}}

@inproceedings{Nier00d,
  author = {Oscar Nierstrasz and Franz Achermann},
  title = {Separation of Concerns through Unification of Concepts},
  booktitle = {ECOOP 2000 Workshop on Aspects \& Dimensions of Concerns},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/Nier00dSeparationOfConcerns.pdf http://trese.cs.utwente.nl/Workshops/adc2000/},
  abstract = {Separation of concerns is a principle we apply to
reduce complexity. This principle is especially
important when it is used to separate stable from
flexible parts of software systems to reduce the
complexity of software evolution. We encapsulate the
stable parts as components and the flexible parts as
scripts. But there is a large range of requirements
and consequent techniques available to achieve this
separation. We propose a simple, unifying framework
of forms, agents, and channels for modelling
components and scripts. We have also developed an
experimental composition language, called Piccola,
based on this framework, that supports the
specification of applications as flexible
compositions of stable components.}}

@techreport{Nier01a,
  author = {J\"org Niere and J\"org P. Wadsack and Lothar Wendehals},
  title = {Design pattern recovery based on source code analysis with fuzzy logic},
  year = {2001},
  institution = {Software Engineering Group, Department of Mathematics and Computer Science, University of Paderborn, Paderborn, Germany},
  type = {tr-ri-01-222}}

@inproceedings{Nier02b,
  author = {Oscar Nierstrasz},
  title = {Software Evolution as the Key to Productivity},
  booktitle = {Proceedings Radical Innovations of Software and Systems Engineering in the Future},
  year = {2002},
  url = {http://scg.unibe.ch/archive/papers/Nier02bEvolution.pdf},
  abstract = {Despite the existence of a seemingly continuous
stream of new ``silver bullet'' technologies and
methods, software productivity remains universally
unimpressive. We argue that, as long as industry
remains focused on short-term goals, and maintains a
technology-centric view of software development, no
progress will be made. A clear symptom of this
problem is the fact that the metaphors we apply to
software development are largely obsolete. Instead
of thinking about software as we do about bridges,
buildings or hardware components, we should
encourage a view of software as a living and
evolving entity that is developed and maintained by
{\it people}. We begin with some assertions that are
intended as food for thought. We continue by
reviewing what we consider to be some of the key
difficulties with software development today. We
conclude with a few recommendations for research
into software practices that take evolution into
account.},
  address = {Venice, Italy},
  month = oct,
  note = {preprint}}

@inproceedings{Nier02c,
  author = {J{\"{o}}rg Niere and Wilhelm Sch{\"{a}}fer and J\"urg P. Wadsack and Lothar Wendehals and Jim Welsh},
  title = {Towards pattern-based design recovery},
  booktitle = {Proceedings of ICSE '02 (24th International Conference on Software Engineering)},
  pages = {338--348},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/581339.581382},
  isbn = {1-58113-472-X},
  location = {Orlando, Florida}}

@techreport{Nier03a,
  author = {Oscar Nierstrasz and Franz Achermann and Stefan Kneub\"uhl},
  title = {A Guide to {JP}iccola},
  year = {2003},
  url = {http://scg.unibe.ch/research/piccola http://scg.unibe.ch/archive/papers/Nier03aJPiccolaGuide.pdf},
  abstract = {Piccola is small, experimental \emph{composition
language} --- a language for building applications
from software components implemented in another,
host programming language. This document describes
JPiccola, the implementation of Piccola for the
{Java} host language.},
  address = {Universit\"at Bern, Switzerland},
  cvs = {jpiccola/PiccolaGuide},
  institution = {Institut f\"ur Informatik},
  month = jun,
  number = {IAM-03-003},
  type = {Technical Report}}

@techreport{Nier03b,
  author = {Oscar Nierstrasz},
  title = {Contractual Types},
  year = {2003},
  url = {http://scg.unibe.ch/archive/papers/Nier03bcontractualTypes.pdf},
  abstract = {Real software systems are open and evolving. It is a
constant challenge in such environments to ensure
that software components are safely composed in the
face of changing dependencies and incomplete
knowledge. To address this problem, we propose a new
kind of type system which allows us to infer not
only the type provided by a software component in an
open system, but also the type it requires of its
environment, subject to certain constraints. The
contractual type we infer for components can then be
statically checked when components are composed. To
illustrate our approach, we introduce the form
calculus, a calculus of explicit environments, and
we present a type system that infers types for form
expressions.},
  address = {University of Bern, Switzerland},
  institution = {Institute of Computer Science},
  number = {IAM-03-004},
  type = {Technical Report}}

@inproceedings{Nier03c,
  author = {Oscar Nierstrasz and Franz Achermann},
  title = {A Calculus for Modeling Software Components},
  booktitle = {FMCO 2002 Proceedings},
  volume = {2852},
  pages = {339--360},
  publisher = {Springer-Verlag},
  year = {2003},
  url = {http://scg.unibe.ch/archive/papers/Nier03cPiccolaCalculus.pdf},
  doi = {10.1007/b14033},
  abstract = {Many competing definitions of software components
have been proposed over the years, but still today
there is only partial agreement over such basic
issues as granularity (are components bigger or
smaller than objects, packages, or application?),
instantiation (do components exist at run-time or
only at compile-time?), and state (should we
distinguish between components and ``instances" of
components?). We adopt a minimalist view in which
components can be distinguished by \emph{composable
interfaces}. We have identified a number of key
features and mechanisms for expressing composable
software, and propose a calculus for modeling
components, based on the asynchronous pi calculus
extended with explicit namespaces, or ``forms". This
calculus serves as a semantic foundation and an
executable abstract machine for Piccola, an
experimental composition language. The calculus also
enables reasoning about compositional styles and
evaluation strategies for Piccola. We present the
design rationale for the Piccola calculus, and
briefly outline some of the results obtained.},
  cvs = {PiccolaFMCO},
  editor = {F. S. De Boer, M. M. Bonsangue, S. Graf and W-P. de Roever},
  isbn = {978-3-540-20303-2},
  series = {LNCS}}

@inproceedings{Nier04a,
  author = {Oscar Nierstrasz},
  title = {Software Evolution as the Key to Productivity},
  booktitle = {Radical Innovations of Software and Systems Engineering in the Future},
  volume = {2941},
  pages = {274--282},
  publisher = {Springer-Verlag},
  year = {2004},
  url = {http://scg.unibe.ch/archive/papers/Nier04aEvolution.pdf},
  doi = {10.1007/b96009},
  abstract = {Despite the existence of a seemingly continuous
stream of new technologies and methods, software
productivity remains universally unimpressive. We
argue that, as long as industry remains focused on
short-term goals, and maintains a technology-centric
view of software development, no progress will be
made. A clear symptom of this problem is the fact
that the metaphors we apply to software development
are largely obsolete. Instead of thinking about
software as we do about bridges, buildings or
hardware components, we should encourage a view of
software as a living and evolving entity that is
developed and maintained by {\it people}. We begin
with some assertions that are intended as food for
thought. We continue by reviewing what we consider
to be some of the key difficulties with software
development today. We conclude with a few
recommendations for research into software practices
that take evolution into account.},
  cvs = {RadicalInnovation},
  editor = {M. Wirsing, A. Knapp and S. Balsamo},
  isbn = {978-3-540-21179-2},
  series = {LNCS}}

@inproceedings{Nier04b,
  author = {Oscar Nierstrasz},
  title = {Putting Change at the Center of the Software Process},
  booktitle = {International Symposium on Component-Based Software Engineering (CBSE) 2004},
  volume = {3054},
  pages = {1--4},
  publisher = {Springer-Verlag},
  year = {2004},
  url = {http://scg.unibe.ch/archive/papers/Nier04bChange.pdf},
  doi = {10.1007/b97813},
  abstract = {We know that successful software systems are doomed
to change. But our programming languages and tools
continue to focus on developing static, unchanging
models of software. We propose that change should be
at the center of our software process. To that end,
we are exploring programming language mechanisms to
support both fine-grained composition and
coarse-grained extensibility, and we are developing
tools and techniques to analyse and facilitate
change in complex systems. In this talk we review
problems and limitations with object-oriented and
component-based development approaches, and we
explore both technological and methodological ways
in which change can be better accommodated.},
  cvs = {SCG-CBSE7Abstract},
  editor = {I. Crnkovic and J.A. Stafford and H.W. Schmidt and K. Wallnau},
  isbn = {978-3-540-21998-9},
  note = {Extended abstract of an invited talk},
  series = {LNCS}}

@incollection{Nier05a,
  author = {Oscar Nierstrasz and Franz Achermann},
  title = {Separating Concerns with First-Class Namespaces},
  booktitle = {Aspect-Oriented Software Development},
  pages = {243--259},
  publisher = {Addison-Wesley},
  year = {2005},
  url = {http://scg.unibe.ch/archive/papers/Nier05aNamespaces.pdf},
  abstract = {As applications evolve, it becomes harder and harder
to separate independent concerns. Small changes to a
software system increasingly affect different parts
of the source code. AOP and related approaches offer
various ways to separate concerns into concrete
software artifacts, but what is the \emph{essence}
of this process? We claim that first-class
namespaces ---which we refer to as \emph{forms}---
offer a suitable foundation for separating concerns,
by offering simple, yet expressive mechanisms for
defining composable abstractions. We demonstrate how
forms help a programmer to separate concerns by
means of practical examples in Piccola, an
experimental composition language.},
  cvs = {PiccolaAOSDbook},
  editor = {Robert E. Filman and Tzilla Elrad and Siobh\'an Clarke and Mehmet Aksit},
  isbn = {0-321-21976-7}}

@book{Nier06c,
  title = {Proceedings {MoDELS} 2006},
  volume = {4199},
  publisher = {Springer-Verlag},
  year = {2006},
  url = {http://www.springeronline.com/3-540-45772-0 http://www.springerlink.com/openurl.asp?genre=issue&issn=0302-9743&volume=4199&issue=preprint},
  doi = {10.1007/11880240},
  address = {Genoa, Italy},
  editor = {Oscar Nierstrasz and Jon Whittle and David Harel and Gianna Reggio},
  isbn = {0302-9743},
  month = oct,
  series = {LNCS}}

@inproceedings{Nier07a,
  author = {Oscar Nierstrasz and Markus Kobel and Tudor G\^irba and Michele Lanza and Horst Bunke},
  title = {Example-Driven Reconstruction of Software Models},
  booktitle = {Proceedings of Conference on Software Maintenance and Reengineering (CSMR 2007)},
  pages = {275--286},
  publisher = {IEEE Computer Society Press},
  year = {2007},
  misc = {acceptance rate: 33/62 = 52\%},
  url = {http://scg.unibe.ch/archive/papers/Nier07aExampleDrivenMR.pdf},
  doi = {10.1109/CSMR.2007.23},
  abstract = {As software systems evolve, they become more complex
and harder to understand and maintain. Certain
reverse engineering techniques attempt to
reconstruct software models from source code with
the help of a parser for the source language.
Unfortunately a great deal of effort may be required
to build a specialized parser for a legacy
programming language or dialect. On the other hand,
(i) we typically do not need a complete parser that
recognizes all language constructs, and (ii) we have
a rich supply of (legacy) examples. We present an
approach to use these facts to r{API}dly and
incrementally develop parsers as follows: we specify
mappings from source code examples to model
elements; we use the mappings to generate a parser;
we parse as much code as we can; we use the
exceptional cases to develop new example mappings;
and we iterate. Experiments with Java and Ruby, two
very different languages, suggest that our approach
can be a very efficient and effective way to r{API}dly
construct software models from legacy code.},
  acceptnum = {33},
  accepttotal = {62},
  address = {Los Alamitos CA},
  medium = {2}}

@inproceedings{Nier07b,
  author = {Oscar Nierstrasz},
  title = {Modeling Change as a First-Class Entity},
  booktitle = {ASWEC '07: Proceedings of the 2007 Australian Software Engineering Conference},
  pages = {3},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/ASWEC.2007.32},
  abstract = {Software systems must change to remain useful.
Current programming languages and support
environments, however, treat software systems as
though they were static, unchanging, and globally
consistent. We argue in favour of a more dynamic
approach in which complex software systems can seen
as a set of overlapping and constantly changing
contexts. We report on some initial research
activities pointing in this direction, and we lay
out our vision for modeling and managing change as a
first-class entity.},
  address = {Washington, DC, USA},
  isbn = {0-7695-2778-7},
  note = {abstract of invited talk}}

@proceedings{Nier09b,
  title = {{CASTA} '09: Proceedings of the first international workshop on {Context}-{Aware} {Software} {Technology} and {Applications}},
  publisher = {ACM},
  year = {2009},
  url = {http://portal.acm.org/toc.cfm?id=1595768 http://casta.unibe.ch},
  address = {New York, NY, USA},
  editor = {Oscar Nierstrasz},
  isbn = {978-1-60558-707-3},
  location = {Amsterdam, The Netherlands},
  medium = {1}}

@inproceedings{Nier10a,
  author = {Oscar Nierstrasz and Tudor G\^irba},
  title = {Lessons in Software Evolution Learned by Listening to {Smalltalk}},
  booktitle = {SOFSEM 2010},
  volume = {5901},
  pages = {77--95},
  publisher = {Springer-Verlag},
  year = {2010},
  url = {http://scg.unibe.ch/archive/papers/Nier10aSmalltalkLessons.pdf},
  doi = {10.1007/978-3-642-11266-9_7},
  abstract = {The biggest challenge facing software developers
today is how to gracefully evolve complex software
systems in the face of changing requirements. We
clearly need software systems to be more dynamic,
compositional and model-centric, but instead we
continue to build systems that are static, baroque
and inflexible. How can we better build
change-enabled systems in the future? To
answer this question, we propose to look back to one
of the most successful systems to support change,
namely Smalltalk. We briefly introduce Smalltalk
with a few simple examples, and draw some lessons
for software evolution. Smalltalk's simplicity, its
reflective design, and its highly dynamic nature all
go a long way towards enabling change in Smalltalk
applications. We then illustrate how these lessons
work in practice by reviewing a number of research
projects that support software evolution by
exploiting Smalltalk's design. We conclude by
summarizing open issues and challenges for
change-enabled systems of the future.},
  editor = {J. van Leeuwen et al.},
  series = {LNCS}}

@mastersthesis{Nier81a,
  author = {Oscar Nierstrasz},
  title = {Automatic Coordination and Processing of Electronic Forms in {TLA}},
  year = {1981},
  school = {Department of Computer Science, University of Toronto},
  url = {http://scg.unibe.ch/archive/uoft/Nier81aMSc.pdf},
  abstract = {Many procedures for processing paper forms in
offices are well-defined, regular and mundane. This
thesis discusses the design and implementation of a
facility for specifying automatic procedures in an
electronic office forms system, called TLA. A
high-level description of a "working set of forms"
is used to trigger the automatic procedures. The
algorithm which establishes the triggering is
presented in detail.},
  type = {M.Sc. thesis}}

@techreport{Nier82a,
  author = {Oscar Nierstrasz and Dennis Tsichritzis},
  title = {Message Flow Modeling},
  pages = {78--95},
  year = {1982},
  url = {http://scg.unibe.ch/archive/uoft/Nier82aMessageFlowModeling.pdf},
  abstract = {A message management system provides users with a
facility for automatically handling messages. This
paper describes a technique for characterizing the
behaviour of such a system in terms of message flow.
Messages may be conveniently classed according to
what \fIpath\fR or sequences of stations they visit.
Complicated or unpredictable behaviour may be
modeled non-deterministically, and the resulting
message paths are shown to be regular expressions.},
  institution = {Computer Systems Research Group, University of Toronto},
  number = {143},
  type = {Alpha Beta, Technical Report}}

@techreport{Nier83a,
  author = {Oscar Nierstrasz and Dennis Tsichritzis},
  title = {Office Object Flow},
  year = {1983},
  url = {http://scg.unibe.ch/archive/uoft/Nier83aOfficeObjectFlow.pdf},
  abstract = {Office information systems provide facilities for
automatically triggering procedures when certain
conditions become true or particular events take
place such as receipt of mail. When these procedures
operate concurrently and independently in a common
environment, the overall behaviour of the system may
be unexpected. ``Firing expressions'' are proposed
as a tool for describing global behaviour and for
detecting unusual properties of the system.},
  institution = {Computer Systems Research Group, University of Toronto},
  number = {150},
  type = {Beta Gamma, Technical Report}}

@inproceedings{Nier83b,
  author = {Oscar Nierstrasz and John Mooney and Kenneth J. Twaites},
  title = {Using Objects to Implement Office Procedures},
  booktitle = {Proceedings of the Canadian Information Processing Society Conference},
  pages = {65--73},
  year = {1983},
  url = {http://scg.unibe.ch/archive/uoft/Nier83bOz.pdf},
  abstract = {Office information systems (OISs) provide facilities
for automatically triggering procedures when certain
conditions become true or particular events take
place such as receipt of mail. Such systems are
characterized by a high degree of parallel activity
that cooperates with but may run independently of
user processes. Traditional high-level programming
languages do not readily capture this sort of
behaviour. This makes building a customized OIS a
painful process. "Objects" are entities with
contents and a set of rules describing their use. We
believe that objects are a useful primitive for
designing and building such systems quickly.},
  address = {Ottawa},
  month = may}

@phdthesis{Nier84a,
  author = {Oscar Nierstrasz},
  title = {Message Flow Analysis},
  year = {1984},
  school = {Department of Computer Science, University of Toronto},
  url = {http://scg.unibe.ch/archive/uoft/Nier84aPhD.pdf},
  abstract = {A message management system enables its users to
automatically process messages. Procedures
associated with a workstation may scan incoming
mail, perform some routine processing and possibly
forward the mail. The global properties of such
systems may be far from obvious when large numbers
of procedures are present. We attempt to gain
insight into global behaviour by studying "message
flow". We do so by partitioning message domains into
state-spaces, and analyzing the state transitions
effected by procedures. Message flow for messages of
a given type can thus be represented by a finite
automaton whose states are the message states. The
finite automata for the various message types can be
"welded together" to form a Petri net that
accurately captures both the message flow for
individual message types and the coordination by
procedures of messages of different types. The model
is useful for obtaining a descriptive analysis of
behaviour, and for analyzing interesting behaviour
such as blocking, deadlock, "message loops" and
"procedure loops". In addition we present some
techniques useful for detecting message loops and
procedure loops at run time.},
  type = {{Ph.D}. Thesis}}

@incollection{Nier85a,
  author = {Oscar Nierstrasz},
  title = {Message Flow Analysis},
  booktitle = {Office Automation: Concepts and Tools},
  pages = {283--314},
  publisher = {Springer-Verlag},
  year = {1985},
  url = {http://scg.unibe.ch/archive/uoft/Nier85aMessageFlowAnalysis.pdf},
  abstract = {Message management systems with facilities for the
automatic processing of messages can exhibit
anomalous behaviour such as infinite loops and
deadlock. In this paper we present some methods for
analyzing the behaviour of these systems by
generating expressions of message flow from the
procedure specifications. Message domains are
partitioned into state spaces, and procedures can be
interpreted as automata effecting state changes.
Blocking of procedures and procedure loops can then
be detected by studying the resulting finite
automaton and Petri net representations of message
flow.},
  address = {Heidelberg},
  editor = {D. Tsichritzis}}

@article{Nier85b,
  author = {Oscar Nierstrasz},
  title = {Hybrid: {A} Unified Object-Oriented System},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {49--57},
  year = {1985},
  url = {http://scg.unibe.ch/archive/osg/Nier85bHybridUnified.pdf},
  abstract = {Hybrid is a data abstraction language that attempts
to unify a number of object-oriented concepts into a
single, coherent system. In this paper we give an
overview of our object model, describe a number of
the language constructs, and briefly discuss the
issue of object management.},
  month = dec,
  number = {4}}

@inproceedings{Nier85c,
  author = {Oscar Nierstrasz and Dennis Tsichritzis},
  title = {An Object-Oriented Environment for {OIS} Applications},
  booktitle = {Proceedings, Conference on Very Large Data Bases},
  pages = {335--345},
  year = {1985},
  url = {http://scg.unibe.ch/archive/osg/Nier85cOOEforOIS.pdf},
  abstract = {Object-oriented programming environments are
increasingly needed for programming OIS
applications. A prototype object-oriented language
has been implemented, and we are refining the
language and its implementation. The environment
integrates a number of database and operating system
concepts, in particular, abstract data types,
database constraints, atomic transactions, data
persistency, triggering of events, reliability and
crash recovery, and a large virtual memory. We
outline the object model, discuss a number of
implementation issues, and give some examples of
objects useful in an OIS application environment.},
  address = {Stockholm},
  month = aug}

@incollection{Nier85d,
  author = {Oscar Nierstrasz},
  title = {An Object-Oriented System},
  booktitle = {Office Automation: Concepts and Tools},
  pages = {167--190},
  publisher = {Springer-Verlag},
  year = {1985},
  url = {http://scg.unibe.ch/archive/uoft/Nier85dOz.pdf},
  abstract = {Applications in Office Information Systems are often
very difficult to implement and prototype, largely
because of the lack of appropriate programming
tools. We argue here that "objects" have many of the
primitives that we need for building OIS systems,
and we describe an object-oriented programming
system that we have developed.},
  address = {Heidelberg},
  editor = {D. Tsichritzis}}

@inproceedings{Nier86a,
  author = {Oscar Nierstrasz},
  title = {What is the `Object' in Object-oriented Programming?},
  booktitle = {Proceedings of the CERN School of Computing},
  volume = {CERN 87-04},
  pages = {43--53},
  year = {1986},
  url = {http://scg.unibe.ch/archive/osg/Nier86aWhatIsTheObject.pdf},
  abstract = {Object-oriented programming has become quite
widespread in recent years, although there are few
guidelines to help us distinguish when a system is
``truly'' object-oriented or not. In this paper we
discuss what have emerged as the main concepts in
the object-oriented approach, and we attempt to
motivate these concepts in terms of how they aid in
software development.},
  address = {Renesse, the Netherlands},
  month = sep}

@techreport{Nier87a,
  author = {Oscar Nierstrasz},
  title = {Object-oriented Issues: {A} Literature Review},
  pages = {183--206},
  year = {1987},
  url = {http://scg.unibe.ch/archive/osg/Nier87aOOIssuesLitReview.pdf},
  abstract = {Papers dealing with object-oriented issues are
grouped according to whether they are concerned with
languages and systems or applications. Papers
dealing with related issues are also listed. An
alphabetical bibliography is given at the end. Some
effort has been made to discard obsolete or
hard-to-find papers.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = mar,
  type = {Objects and Things}}

@techreport{Nier87b,
  author = {Oscar Nierstrasz},
  title = {Triggering Active Objects},
  pages = {43--78},
  year = {1987},
  url = {http://scg.unibe.ch/archive/osg/Nier87bTriggeringObjects.pdf},
  abstract = {Active objects are concurrent, active entities based
on the object-oriented paradigm. We present a model
for understanding active objects based on the remote
procedure call, and on the notion of activities,
which capture a single-thread flow of control
between objects. We also present simple mechanisms
for creating activities, interleaving and delaying
activities, and for constructing atomic actions and
concurrent subactivities. We show how these
mechanisms can be used to capture very general forms
of triggering. Our model for active objects, and the
mechanisms for manipulating activities are embedded
in Hybrid, a concurrent, object-oriented language.
The model is also useful for understanding and
dealing with deadlock in such systems.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = mar,
  type = {Objects and Things}}

@inproceedings{Nier87c,
  author = {Oscar Nierstrasz},
  title = {Active Objects in Hybrid},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {243--253},
  year = {1987},
  url = {http://scg.unibe.ch/archive/osg/Nier87cActiveObjects.pdf},
  doi = {10.1145/38765.38829},
  abstract = {Most object-oriented languages are strong on
reusability or on strong-typing, but weak on
concurrency. In response to this gap, we are
developing Hybrid, an object-oriented language in
which objects are the active entities. Objects in
Hybrid are organized into domains, and concurrent
executions into activities. All object
communications are based on remote procedure-calls.
Unstructured sends and accepts are forbidden. To
this the mechanisms of delegation and delay queues
are added to enable switching and triggering of
activities. Concurrent subactivities and atomic
actions are provided for compactness and simplicity.
We show how solutions to many important concurrent
problems, such a pipelining, constraint management
and ``administration'' can be compactly expressed
using these mechanisms.},
  month = dec}

@techreport{Nier87d,
  author = {Oscar Nierstrasz},
  title = {Hybrid --- {A} Language for Programming with Active Objects},
  pages = {15--42},
  year = {1987},
  url = {http://scg.unibe.ch/archive/osg/Nier87dHybrid.pdf},
  abstract = {Hybrid is an object-oriented programming language in
which objects are the active entities. Active
objects in Hybrid are both concurrent and
persistent, thus unifying the notion of an "object"
with that of processes and files. Hybrid introduces
the concept of an activity as a means for
controlling the interactions between active objects.
The language provides constructs that allow one to
restrict or relax this control in a fairly simple
way. In particular, mechanisms for delaying and
"delegating" activities are provided. Furthermore,
Hybrid is designed so as to provide powerful
constructs for reusing code in a way that is
consistent with strong-typing.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = mar,
  type = {Objects and Things}}

@techreport{Nier88a,
  author = {Oscar Nierstrasz},
  title = {Mapping Object Descriptions to Behaviours},
  pages = {106--113},
  year = {1988},
  url = {http://scg.unibe.ch/archive/osg/Nier88aMappingObjects.pdf},
  abstract = {There is a lack of good formalisms and tools for
describing the semantics of object-oriented and
concurrent programming languages. We propose a
computational model for objects in which {\it
events} are synchronous communications between
concurrent agents, {\it computations} are partial
orderings of events, and {\it behaviours} are the
possible event unfoldings in which an agent, or a
system of concurrent agents, may participate.
Furthermore, we introduce a language called {\it
Abacus} for defining executable behaviour
expressions, and we speculate how this language may
be used as part of a practical system for defining
the formal semantics of programming languages.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Active Object Environments}}

@incollection{Nier89a,
  author = {Oscar Nierstrasz},
  title = {A Survey of Object-Oriented Concepts},
  booktitle = {Object-Oriented Concepts, Databases and Applications},
  pages = {3--21},
  publisher = {ACM Press and Addison Wesley},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Nier89aSurveyOfOOConcepts.pdf},
  abstract = {The object-oriented paradigm has gained popularity
in various guises not only in programming languages,
but in user interfaces, operating systems,
databases, and other areas. We argue that the
fundamental object-oriented concept is {\it
encapsulation}, and that all object-oriented
mechanisms and approaches exploit this idea to
various ends. We introduce the most important of
these mechanisms as they are manifested in existing
object-oriented systems, and we discuss their
relevance in the context of modern application
development.},
  address = {Reading, Mass.},
  editor = {W. Kim and F. Lochovsky}}

@incollection{Nier89b,
  author = {Oscar Nierstrasz and Dennis Tsichritzis},
  title = {Integrated Office Systems},
  booktitle = {Object-Oriented Concepts, Databases and Applications},
  pages = {199--215},
  publisher = {ACM Press and Addison Wesley},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Nier89bIntegOfficeSystems.pdf},
  abstract = {New techniques are sorely needed to aid in the
development and maintenance of large application
systems. The problem with traditional approaches to
software engineering is well in evidence in the
field of office information systems: it is costly
and difficult to extend existing applications, and
to get unrelated applications to ``talk'' to each
other. The object-oriented approach is already being
tentatively applied in the modeling of ``office
objects'' and in the presentation of these entities
to users as such in ``desktop'' interfaces to office
software. In order to fully exploit the approach to
achieve integrated office systems, we need to use
object-oriented programming languages,
object-oriented run-time support, and
object-oriented software engineering environments.},
  address = {Reading, Mass.},
  editor = {W. Kim and F. Lochovsky}}

@inproceedings{Nier89c,
  author = {Oscar Nierstrasz},
  title = {Two Models of Concurrent Objects},
  booktitle = {ACM SIGPLAN Notices, Proceedings Workshop on Object-Based Concurrent Programming (San Diego, Sept 26-27, 1988)},
  volume = {24},
  pages = {174--176},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Nier89cTwoModels.pdf},
  doi = {10.1145/67386.67436},
  abstract = {We propose two models of concurrent objects that
address, respectively, methodological and semantic
issues of object-oriented programming languages. The
first is a conceptual model to aid in the design of
object-oriented languages for concurrent and
distributed applications, and the second is a
computational model that can be used to define the
semantics of such languages. The second model has
evolved, in a sense, from the first, though it is
intended to be both more neutral and more general.},
  month = apr}

@incollection{Nier89d,
  author = {Oscar Nierstrasz},
  title = {A Tour of Hybrid},
  booktitle = {Les Mardis Objets du CRIN, CRIN 89-R-072},
  pages = {237--248},
  publisher = {Centre de Recherche en Informatique de Nancy, Vandoeuvre-l\`es-Nancy},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Nier89dCRINTourOfHybrid.pdf},
  abstract = {Hybrid is a strongly-typed, concurrent,
object-oriented programming language in which
objects are active entities. In this paper we
provide an overview of the language constructs,
paying particular attention to the mechanisms for
programming concurrent applications, and we describe
our experiences in developing a prototype
implementation of the language and its run-time
environment.},
  editor = {G. Masini and A. Napoli and D. Colnet and D. L\'eonard and K. Tombre}}

@techreport{Nier89e,
  author = {Oscar Nierstrasz},
  title = {Abacus: a Notation for Describing Concurrent Computations},
  pages = {247--275},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Nier89eAbacusNotation.pdf},
  abstract = {Abacus is an experimental notation for specifying
concurrent computations, to be used as a semantic
target for defining and prototyping concurrent
language constructs. We present the current
implementation and its underlying computational
model, and we illustrate its computational power and
expressiveness through examples and by demonstrating
equivalence with other models.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@techreport{Nier90a,
  author = {Oscar Nierstrasz and Laurent Dami and Vicki de Mey and Marc Stadelmann and Dennis Tsichritzis and Jan Vitek},
  title = {Visual Scripting --- Towards Interactive Construction of Object-Oriented Applications},
  pages = {315--331},
  year = {1990},
  url = {http://scg.unibe.ch/archive/osg/Nier90aVisualScripting.pdf},
  abstract = {Object-oriented programming techniques are known to
improve the flexibility and reusability of certain
kinds of software. Libraries of object classes,
however, continue to be difficult both to develop
and to reuse. We present an approach to
object-oriented application development in which
applications are constructed by interactively
"scripting" cooperating, reusable software objects.
A visual scripting tool is being developed within
ITHACA, an Esprit II project which seeks to produce
an integrated environment for the r{API}d and flexible
development of object-oriented applications for
selected application domains.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@inproceedings{Nier90b,
  author = {Oscar Nierstrasz and Michael Papathomas},
  title = {Viewing Objects as Patterns of Communicating Agents},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {38--43},
  year = {1990},
  url = {http://scg.unibe.ch/archive/osg/Nier90bObjectsAsPatterns.pdf},
  doi = {10.1145/97945.97952},
  abstract = {Following our own experience developing a concurrent
object-oriented language as well of that of other
researchers, we have identified several key problems
in the design of a obc model compatible with the
mechanisms of object-oriented programming. We
propose an approach to language design in which an
executable notation describing the behaviour of
communicating agents is extended by syntactic
patterns that encapsulate language constructs. We
indicate how various language models can be
accommodated, and how mechanisms such as inheritance
can be modeled. Finally, we introduce a new notion
of types that characterizes concurrent objects in
terms of their externally visible behaviour.},
  month = oct}

@techreport{Nier90c,
  author = {Oscar Nierstrasz},
  title = {A Guide to Specifying Concurrent Behaviour with Abacus},
  pages = {267--293},
  year = {1990},
  url = {http://scg.unibe.ch/archive/osg/Nier90cAbacusGuide.pdf},
  abstract = {We present the syntax, semantics and usage of
Abacus, an executable notation for specifying
concurrent computations that extends CCS with label
prefixing and filtering operators for encapsulating
systems of communicating agents and a pattern
mechanism for parameterizing behaviour expressions.
Abacus is intended to be used as a semantic target
and a prototyping tool for the specification of
concurrent object-based languages and systems. We
illustrate the use of Abacus through a series of
standard obc examples, concluding with an executable
specification of SAL, a Simple Actor Language.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@inproceedings{Nier91b,
  author = {Oscar Nierstrasz and Dennis Tsichritzis and Vicki de Mey and Marc Stadelmann},
  title = {Objects + Scripts = Applications},
  booktitle = {Proceedings, Esprit 1991 Conference},
  pages = {534--552},
  publisher = {Kluwer Academic Publishers},
  year = {1991},
  url = {http://scg.unibe.ch/archive/osg/Nier91bObjectsPlusScripts.pdf},
  abstract = {We argue that object-oriented programming is only
half of the story. Flexible, configurable
applications can be viewed as collections of
reusable objects conforming to standard interfaces
together with scripts that bind these objects
together to perform certain tasks. Scripting
encourages a component-oriented approach to
application development in which frameworks of
reusable components (objects and scripts) are
carefully engineered in an evolutionary software
life-cycle, with the ultimate goal of supporting
application construction largely from these
interchangeable, prefabricated components. The
activity of constructing the running application is
supported by a visual scripting tool that replaces
the textual paradigm of programming with a visual
paradigm of direct manipulation and editing of both
application and user interface components. We
present scripting by means of some simple examples,
and we describe a prototype of a visual scripting
tool, called Vista. We conclude with some
observations on the environmental support needed to
support a component-oriented software life-cycle,
using as a specific example the application de
velopment environment of ITHACA, a large European
project of which Vista is a part.},
  address = {Dordrecht, NL}}

@techreport{Nier91c,
  author = {Oscar Nierstrasz},
  title = {The Next 700 Concurrent Object-Oriented Languages --- Reflections on the Future of Object-Based Concurrency},
  pages = {165--187},
  year = {1991},
  url = {http://scg.unibe.ch/archive/osg/Nier93eCompActiveObjects.pdf},
  abstract = {There has been a flurry of activity in recent years
to extend existing languages with object-oriented
features, and to extend object-oriented concepts and
languages with seemingly orthogonal features, such
as obc and persistence, to improve their expressive
power and potential as a solution to the "software
crisis". In many cases these integration efforts
have uncovered various forms of semantic
interference between features. We claim that the
majority of these difficulties are concerned with
the very aspect of object-orientation that we seek
most urgently to exploit, namely software
compositionality. We shall review the problems of
integrating obc and object-oriented features from
this viewpoint and discuss some of the more
important requirements to be met. Finally, we
propose a view of objects as patterns of
communicating agents that suggests the development
of a class of concurrent object-oriented languages
parameterized by patterns that address the needs of
particular application domains.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@inproceedings{Nier91d,
  author = {Oscar Nierstrasz and Michael Papathomas},
  title = {Towards a Type Theory for Active Objects},
  booktitle = {ACM OOPS Messenger, Proceedings OOPSLA/ECOOP 90 Workshop on Object-Based Concurrent Systems},
  volume = {2},
  pages = {89--93},
  year = {1991},
  url = {http://scg.unibe.ch/archive/osg/Nier91dTypedActiveObjects.pdf},
  doi = {10.1145/127056.127092},
  abstract = {Currently popular notions of types, such as
signature compatibility, fail to express essential
properties of concurrent active objects that are
necessary for their correct use in new contexts. We
propose and explore a new notion of compatibility
called interaction conformance defined in terms of
the possible interactions between an object and its
clients. We relate interaction conformance to known
equivalence relations between communicating
concurrent agents, and we show that, by viewing
types as certain kinds of indeterminate agents,
interaction conformance gives us a subtype
relationship. We briefly explore the potential for
applying these ideas to concurrent object-oriented
languages.},
  month = apr}

@inproceedings{Nier92a,
  author = {Oscar Nierstrasz},
  title = {Towards an Object Calculus},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {1--20},
  publisher = {Springer-Verlag},
  year = {1992},
  url = {http://scg.unibe.ch/archive/osg/Nier92aAnObjectCalculus.pdf},
  doi = {10.1007/3-540-55613-3_1},
  abstract = {The development of concurrent object-based
programming languages has suffered from the lack of
any generally accepted formal foundations for
defining their semantics. Furthermore, the delicate
relationship between object-oriented features
supporting reuse and operational features concerning
interaction and state change is poorly understood in
a concurrent setting. To address this problem, we
propose the development of an object calculus,
borrowing heavily from relevant work in the area of
process calculi. To this end, we briefly review some
of this work, we pose some informal requirements for
an object calculus, and we present the syntax,
operational semantics and use through examples of a
proposed object calculus, called OC.},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  isbn = {3-540-55613-3},
  series = {LNCS}}

@article{Nier92b,
  author = {Oscar Nierstrasz and Simon Gibbs and Dennis Tsichritzis},
  title = {Component-Oriented Software Development},
  journal = {Communications of the ACM},
  volume = {35},
  pages = {160--165},
  year = {1992},
  url = {http://scg.unibe.ch/archive/osg/Nier92bCOSD.pdf},
  doi = {10.1145/130994.131005},
  abstract = {Object-oriented programming techniques promote a new
approach to software engineering in which reliable,
open applications can be largely constructed, rather
than programmed, by reusing "frameworks" of
plug-compatible software components. We outline a
series of ongoing research projects at the
University of Geneva that address component-oriented
software development at the levels of languages,
tools and frameworks, in particular, (1) the
integration of object-oriented language features
that support software composition with features
concerned with other issues, like obc, (2)
application development tools to support composition
and reuse, and (3) the development of reusable
application frameworks, specifically in the domain
of multimedia applications.},
  month = sep,
  number = {9}}

@incollection{Nier92c,
  author = {Oscar Nierstrasz},
  title = {A Tour of Hybrid --- {A} Language for Programming with Active Objects},
  booktitle = {Advances in Object-Oriented Software Engineering},
  pages = {167--182},
  publisher = {Prentice-Hall},
  year = {1992},
  url = {http://scg.unibe.ch/archive/osg/Nier92cTourOfHybrid.pdf},
  abstract = {Object-oriented programming is a powerful paradigm
for organizing software into reusable components.
There have been several attempts to adapt and extend
this paradigm to the programming of concurrent and
distributed applications. Hybrid is a language whose
design attempts to retain multiple inheritance,
genericity and strong-typing, and incorporate a
notion of active objects. Objects in Hybrid are
potentially active entities that communicate with
one another through a message-passing protocol
loosely based on remote procedure calls.
Non-blocking calls and delay queues are the two
basic mechanisms for interleaving and scheduling
activities. A prototype implementation of a compiler
and run-time system for Hybrid have been completed.
We shall review aspects of the language design and
attempt to evaluate its shortcomings. We conclude
with a list of requirements that we pose as a
challenge for the design of future concurrent
object-oriented languages.},
  editor = {D. Mandrioli and B. Meyer}}

@inproceedings{Nier93a,
  author = {Oscar Nierstrasz and Dimitri Konstantas and Klaus Dittrich and Dirk Jonscher},
  title = {{CHASSIS} --- Une Plate-forme pour la Construction de Syst\`emes d'Information Ouverts},
  booktitle = {Proceedings, AFCET '93 --- Vers des Syst\`emes d'Information Flexibles},
  pages = {153--161},
  year = {1993},
  misc = {June 8-10},
  url = {http://scg.unibe.ch/archive/osg/Nier93aChassis.pdf},
  abstract = {Les syst\`emes d'information d'aujourd'hui ont de
plus en plus la n\'ecessit\'e d'\^etre ouverts. Ceci
implique qu'ils doivent r\'epondre aux besoins de
r\'eseaux ouverts, de logiciel et de mat\'eriel
h\'et\'erog\`enes et "inter-op\'erables," et,
surtout, \`a des besoins \'evolutifs et changeants.
Le projet CHASSIS vise le d\'eveloppement d'un cadre
informatique et m\'ethodologique pour (i) la
conception et la construction de syst\`emes
d'information h\'et\'erog\`enes, s\^urs et fiables
\`a partir de composants de logiciel et bases de
donn\'ees soit d\'ej\`a existants soit
d\'evelopp\'es pour l'occasion, et (ii) leur
int\'egration s\^ure et fiable. Dans CHASSIS,
l'orientation-objet est la technologie cl\'e pour la
construction d'un tel syst\`eme, car son interface
uniforme est r\'ealis\'ee par un mod\`ele de
donn\'ees orient\'e-objet, et la couche
d'int\'egration est r\'ealis\'ee par du logiciel
orient\'e-objet. CHASSIS consiste en des mod\`eles
objets pour l'int\'egration de base de donn\'ees et
langages de programmation, du logiciel
orient\'e-objet pour l'int\'egration des syst\`emes,
des m\'ethodes de sp\'ecification pour soutenir le
processus de conception, et des m\'ecanismes de
s\'ecurit\'e avanc\'es qui permettent d'assurer un
haut degr\'e de s\'ecurit\'e pour le syst\`eme
d'information r\'esultant. CHASSIS est un projet de
collaboration Suisse entre l'Universit\'e de
Z{\"u}rich, l'Universit\'e de Gen\`eve, et le centre
de recherche d'Asea Brown Boveri (Baden).},
  address = {Versailles},
  month = jun,
  note = {In French}}

@techreport{Nier93b,
  author = {Oscar Nierstrasz and Dimitri Konstantas and Klaus Dittrich and Dirk Jonscher},
  title = {{CHASSIS} --- {A} Platform for Constructing Open Information Systems},
  pages = {237--247},
  year = {1993},
  url = {http://scg.unibe.ch/archive/osg/Nier93bChassis.pdf},
  abstract = {Present-day computer-based information systems are
increasingly required to be open systems. This means
that they must cope with open networks,
heterogeneous interoperable hardware and software
systems, and, above all, evolving and changing
requirements. The CHASSIS project aims to develop a
software and methodology framework for (i) the
security- and reliability-oriented systematic design
and construction of heterogeneous information
systems from individual existing and newly developed
application software components and database
systems, and (ii) their secure and reliable
interoperation. In CHASSIS, object-orientation is
the key technology for the construction of such a
system as its uniform interface is realized by an
object-oriented data model and the homogenization
layer is realized by object-oriented software.
CHASSIS includes object models for database and
language integration, software to support system
integration, specification methods to support the
design process and advanced security mechanisms to
provide the resulting information system with a high
degree of security. CHASSIS is a joint Swiss project
between the University of Zurich, the University of
Geneva, and the Asea Brown Boveri Research Centre
(Baden).},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  note = {English version of "CHASSIS --- Une Plate-forme pour la Construction de Syst\`emes d'Information Ouverts"},
  type = {Visual Objects}}

@book{Nier93c,
  title = {Proceedings {ECOOP}'93},
  volume = {707},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  isbn = {3-540-57120-5},
  month = jul,
  series = {LNCS}}

@inproceedings{Nier93d,
  author = {Oscar Nierstrasz},
  title = {Regular Types for Active Objects},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {1--15},
  year = {1993},
  url = {http://scg.unibe.ch/archive/osg/Nier95dRegularTypes.pdf},
  doi = {10.1145/165854.167976},
  abstract = {Previous work on type-theoretic foundations for
object-oriented programming languages has mostly
focussed on applying or extending functional type
theory to functional "objects." This approach, while
benefitting from a vast body of existing literature,
has the disadvantage of dealing with state change
either in a roundabout way or not at all, and
completely side-stepping issues of concurrency. In
particular, dynamic issues of non-uniform service
availability and conformance to protocols are not
addressed by functional types. We propose a new type
framework that characterizes objects as regular
(finite state) processes that provide guarantees of
service along public channels. We also propose an
original notion of subtyping for regular types that
extends Wegner and Zdonik's "principle of
substitutability" to non-uniform service
availability, and we relate it to known process
equivalences. Finally, we formalize what it means to
"satisfy a client's expectations," and we show how
regular types can be used to tell when sequential or
concurrent clients are satisfied. [NB: a revised
version is available by ftp.]},
  month = oct}

@incollection{Nier93e,
  author = {Oscar Nierstrasz},
  title = {Composing Active Objects --- The Next 700 Concurrent Object-Oriented Languages},
  booktitle = {Research Directions in Concurrent Object-Oriented Programming},
  pages = {151--171},
  publisher = {MIT Press},
  year = {1993},
  url = {http://scg.unibe.ch/archive/osg/Nier93eCompActiveObjects.pdf},
  abstract = {Many of the shortcomings of present-day
object-oriented programming languages can be traced
to two phenomena: (i) the lack of general support
for software composition, and (ii) the semantic
interference between language features addressing
operational and compositional aspects of
object-oriented programming. To remedy this
situation, we propose the development of a "pattern
language" for active objects in which objects and,
more generally, applications, are constructed by
composing software patterns. A "pattern" can be any
reusable software abstraction, including functions,
objects, classes and generics. In this paper we seek
to establish both informal requirements for a
pattern language and a formal basis for defining the
semantics of patterns. First, we identify some basic
requirements for supporting object composition and
we review the principal language design choices with
respect to these requirements. We then survey the
various problems of semantic interference in
existing languages. Next, we present a formal
"object calculus" and show how it can be used to
define the semantics of patterns in much the same
way that the lambda calculus can be used to give
meaning to constructs of functional programming
languages. We conclude by summarizing the principle
open problems that remain to define a practical
pattern language for active objects.},
  editor = {G. Agha and P. Wegner and A. Yonezawa}}

@incollection{Nier95a,
  author = {Oscar Nierstrasz and Theo Dirk Meijler},
  title = {Requirements for a Composition Language},
  booktitle = {Object-Based Models and Langages for Concurrent Systems},
  volume = 924,
  pages = {147--161},
  publisher = {Springer-Verlag},
  year = {1995},
  url = {http://scg.unibe.ch/archive/papers/Nier95aReqtsForaCompLang.pdf},
  doi = {10.1007/3-540-59450-7_9},
  abstract = {The key requirement for open systems is that they be
flexible, or recomposable. This suggests that they
must first of all be composable. Object-oriented
techniques help by allowing applications to be
viewed as compositions of collaborating objects, but
are limited in supporting other kinds of
abstractions that may have finer or coarser
granularity than objects. A composition language
supports the technical requirements of a
component-oriented development approach by shifting
emphasis from programming and inheritance of classes
to specification and composition of components.
Objects are viewed as processes, and components are
abstractions over the object space. An application
is viewed as an explicit composition of software
components. By making software architectures
explicit and manipulable, we expect to better
support application evolution and flexibility. In
this position paper we will elaborate our
requirements and outline a strategy for the design
and implementation of a composition language for the
development of open systems.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  isbn = {978-3-540-59450-5},
  series = {LNCS}}

@book{Nier95b,
  title = {Object-Oriented Software Composition},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {Object-Oriented Software Composition represents the
results of about ten years of collective research by
the authors on various aspects of object-oriented
technology. The message of the book is that the
technology is not merely about ``object-oriented
programming,'' but that it provides the key to
component-oriented software development. Within this
view, one can see applications not only as
collections of collaborating and communicating
objects, but as compositions of plug-compatible
software components. The work presented in this book
was carried out either by members of the Object
Systems Group at the University of Geneva in
Switzerland, or by partners in collaborative
research projects.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis},
  isbn = {0-13-220674-9}}

@incollection{Nier95c,
  author = {Oscar Nierstrasz and Laurent Dami},
  title = {Component-Oriented Software Technology},
  booktitle = {Object-Oriented Software Composition},
  pages = {3--28},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {Modern software systems are increasingly required to
be open and distributed. Such systems are open not
only in terms of network connections and
interoperability support for heterogeneous hardware
and software platforms, but, above all, in terms of
evolving and changing requirements. Although
object-oriented technology offers some relief, to a
large extent the languages, methods and tools fail
to address the needs of open systems because they do
not escape from traditional models of software
development that assume system requirements to be
closed and stable. We argue that open systems
requirements can only be adequately addressed by
adopting a component-oriented as opposed to a purely
object-oriented software development approach, by
shifting emphasis away from programming and towards
generalized software composition.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@incollection{Nier95d,
  author = {Oscar Nierstrasz},
  title = {Regular Types for Active Objects},
  booktitle = {Object-Oriented Software Composition},
  pages = {99--121},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {Previous work on type-theoretic foundations for
object-oriented programming languages has mostly
focused on applying or extending functional type
theory to functional "objects." This approach, while
benefiting from a vast body of existing literature,
has the disadvantage of dealing with state change
either in a roundabout way or not at all, and
completely sidestepping issues of concurrency. In
particular, dynamic issues of non-uniform service
availability and conformance to protocols are not
addressed by functional types. We propose a new type
framework that characterizes objects as regular
(finite state) processes that provide guarantees of
service along public channels. We also propose a new
notion of subtyping for active objects, based on
Brinksma's notion of extension, that extends Wegner
and Zdonik's "principle of substitutability" to
non-uniform service availability. Finally, we
formalize what it means to "satisfy a client's
expectations," and we show how regular types can be
used to tell when sequential or concurrent clients
are satisfied.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@article{Nier95e,
  author = {Oscar Nierstrasz and Theo Dirk Meijler},
  title = {Research Directions in Software Composition},
  journal = {ACM Computing Surveys},
  volume = {27},
  pages = {262--264},
  year = {1995},
  url = {http://scg.unibe.ch/archive/papers/Nier95eResearchDirections.pdf},
  doi = {10.1145/210376.210389},
  abstract = {{\it Software composition} refers to the
construction of software applications from
components that implement abstractions pertaining to
a particular problem domain. Raising the level of
abstraction is a time-honored way of dealing with
complexity, but the real benefit of composable
software systems lies in their increased {\it
flexibility}: a system built from components should
be easy to recompose to address new requirements. A
certain amount of success has been achieved in some
well-understood application domains, as witnessed by
the popularity of user-interface toolkits, fourth
generation languages and application generators. But
how can we generalize this?},
  month = jun,
  number = {2}}

@inproceedings{Nier95f,
  author = {Oscar Nierstrasz},
  title = {Research Topics in Software Composition},
  booktitle = {Proceedings, Langages et Mod\`eles \`a Objets},
  pages = {193--204},
  year = {1995},
  url = {http://scg.unibe.ch/archive/papers/Nier95fResearchTopics.pdf},
  abstract = {Traditional software development approaches do not
cope well with the evolving requirements of open
systems. We argue that such systems are best viewed
as flexible compositions of "software components"
designed to work together as part of a component
framework that formalizes a class of applications
with a common software architecture. To enable such
a view of software systems, we need appropriate
support from programming language technology,
software tools, and methods. We will briefly review
the current state of object-oriented technology,
insofar as it supports componentoriented
development, and propose a research agenda of topics
for further investigation.},
  address = {Nancy},
  month = oct}

@inproceedings{Nier96a,
  author = {Oscar Nierstrasz and Jean-Guy Schneider and Markus Lumpe},
  title = {Formalizing Composable Software Systems --- {A} Research Agenda},
  booktitle = {Proceedings 1st IFIP Workshop on Formal Methods for Open Object-based Distributed Systems FMOODS '96},
  pages = {271--282},
  publisher = {Chapmann \& Hall},
  year = {1996},
  url = {http://scg.unibe.ch/archive/papers/Nier96aCompositionResearch.pdf},
  abstract = {Flexibility is achieved in open systems by adopting
software architectures that allow software
components to be easily plugged in, adapted and
exchanged. But open systems are generally con
current, distributed and heterogeneous in addition
to being adaptable. Ad hoc approaches to specifying
component frameworks can lead to unexpected semantic
conflicts. We propose, instead, to develop a
rigorous foundation for composable software systems
by a series of experiments in modelling concurrent
and object-based software abstractions as
composable, communicating processes. Eventually we
hope to identify and realize the most useful
compositional idioms as a composition language for
open systems specification.}}

@article{Nier97a,
  author = {Oscar Nierstrasz and Markus Lumpe},
  title = {Komponenten, Komponentenframeworks und Gluing},
  journal = {HMD --- Theorie und Praxis der Wirtschaftsinformatik},
  pages = {8--23},
  year = {1997},
  url = {http://scg.unibe.ch/archive/papers/Nier97aKomponentenUndGluing.pdf},
  abstract = {In der letzten Zeit wird immer h\"{a}ufiger von
komponentenorientierter Softwareentwicklung
gesprochen, wobei meistens nicht klar ist, was
darunter eigentlich zu verstehen ist. Was macht ein
St\"{u}ck Software zur Komponente? Wir sagen,
da{\ss} Softwarekomponenten in einer speziellen Art
und Weise konstruiert werden m\"{u}ssen, um mit
anderen Komponenten zu einer Applikation
zusammengef\"{u}gt werden zu k\"{o}nnen. Mit anderen
Worten, eine Softwarekomponente ist Teil eines
Komponentenframeworks, da{\ss} (i) eine Bibliothek
von Black-Box-Komponenten zu Verf\"{u}gung stellt,
(ii) eine wiederverwendbare Softwarearchitektur
definiert, in der die Komponenten geeignet
integriert sind und (iii) eine bestimmte Art von
Glue, die es uns erlaubt, Komponenten miteinander zu
verbinden. In diesem Artikel versuchen wir, den
Ist-Zustand der Komponententechnologie wiederzugeben
und behaupten, da{\ss} nur eine bessere
Unterst\"{u}tzung im Bereich Frameworks und Gluing
die Komponententechnologie vorw\"{a}rts bringen
kann.},
  month = sep}

@techreport{Nier98a,
  author = {Oscar Nierstrasz},
  title = {Identify the Champion},
  year = {1998},
  url = {http://scg.unibe.ch/download/champion/champion.pdf http://scg.unibe.ch/download/champion/index.html},
  abstract = {The peer review process for technical contributions
to conferences in computing sciences is very
thorough, and can be as stringent as the review
process for journal publications in other domains.
The programme committee for such a conference will
typically convene at a meeting, where submitted
papers are discussed, and accepted or rejected for
presentation at the conference. Experience shows
that discussions are more focussed, and the entire
process runs more smoothly if most of the time is
devoted to those papers that are actually
"championed" by some committee member. In order to
make this work effectively, however, the notion of
"championing" must be introduced early in the review
process. This paper presents a set of process
patterns that help to achieve this goal.},
  institution = {Washington University},
  number = {WUCS-98-25},
  type = {Proceedings of PLoP 98, TR}}

@inproceedings{Nier98b,
  author = {Oscar Nierstrasz and Sander Tichelaar and Serge Demeyer},
  title = {{CDIF} as the Interchange Format between Reengineering Tools},
  booktitle = {OOPSLA '98 Workshop on Model Engineering, Methods and Tools Integration with CDIF},
  year = {1998},
  url = {http://scg.unibe.ch/archive/papers/Nier98bCDIFasReengFormat.pdf},
  abstract = {Tool support is recognised as a key issue in the
reengineering of large scale object-oriented
systems. However, due to the heterogeneity in
today's object-oriented programming languages, it is
hard to reuse reengineering tools across legacy
systems. This paper proposes a language independent
exchange model, so that tools may perform their
tasks independent of the underlying programming
language. We have adopted CDIF as the basis for the
exchange of information, using this model, between
the reengineering tool prototypes in the FAMOOS
project. The main reasons for adopting CDIF are,
that firstly it is an industry standard, and
secondly it has a standard plain text encoding which
tackles the requirements of convenient querying and
human readability. Next to that the CDIF framework
supports the extensibility we need to define our
model and language plug-ins.},
  month = oct}

@book{Nier99b,
  title = {Proceedings {ESEC}/{FSE}'99},
  volume = {1687},
  publisher = {Springer-Verlag},
  year = {1999},
  url = {http://link.springer.de/link/service/series/0558/tocs/t1687.htm},
  address = {Toulouse, France},
  editor = {Oscar Nierstrasz and Michel Lemoine},
  isbn = {3-540-66538-2},
  month = sep,
  series = {LNCS}}

@article{Niev06a,
  author = {J\"urg Nievergelt},
  title = {Die {Aussagekraft} von {Beispielen}},
  journal = {Informatik Spektrum},
  volume = {29},
  pages = {281--286},
  year = {2006},
  number = {4}}

@inproceedings{Niga91a,
  author = {L. Nigay and J. Coutaz},
  title = {Building user interfaces: organizing software agents},
  booktitle = {Esprit '91 Conference Proceedings},
  year = {1991},
  editor = {ACM}}

@inproceedings{Nika98a,
  author = {Pekka Nikander and Arto Karila},
  title = {A {Java} Beans Component Architecture for Cryptographic Protocols},
  booktitle = {Proceedings of the 7th Usenix Security Symposium},
  year = {1998},
  misc = {January 26-29},
  url = {http://www.tcm.hut.fi/~pnr/jacob/},
  address = {San Antonio, Texas},
  month = jan}

@inproceedings{Nikh89a,
  author = {R. S. Nikhil and Arvind},
  title = {Can Dataflow Subsume von Neumann Computing?},
  booktitle = {Proc. 16th IEEE Symp. on Comput. Arch. (ISCA)},
  pages = {262--272},
  year = {1989}}

@book{Nilg04a,
  author = {Edward G. Nilges},
  title = {Build Your Own .NET Language and Compiler},
  publisher = {Springer-Verlag},
  year = {2004},
  address = {New York, United States},
  isbn = {1-59059-134-8}}

@article{Ning94a,
  author = {Ning, Jim Q and Engberts, Andre and Kozaczynski, W Voytek},
  title = {Automated support for legacy code understanding},
  journal = {Communications of the ACM},
  volume = {37},
  pages = {50--57},
  publisher = {ACM},
  year = {1994},
  number = {5}}

@inproceedings{Nish00a,
  author = {Nishizaki, Shin{-}ya},
  title = {Programmable Environment Calculus as Theory of Dynamic Software Evolution},
  booktitle = {Proceedings ISPSE 2000},
  publisher = {IEEE Computer Society Press},
  year = {2000},
  doi = {10.1109/ISPSE.2000.913242}}

@article{Nish00b,
  author = {Nishizaki, Shin{-}ya},
  title = {A Polymorphic Environment Calculus and its Type-Inference Algorithm},
  journal = {Higher-Order and Symbolic Computation},
  volume = {13},
  pages = {241--280},
  year = {2000},
  doi = {10.1023/A:1010010314528},
  number = {3}}

@book{Nish93a,
  title = {Object Technologies for Advanced Software},
  volume = {742},
  publisher = {Springer-Verlag},
  year = {1993},
  editor = {Shojiro Nishio and Akiro Yonezawa},
  isbn = {3-540-57342-9},
  series = {LNCS}}

@inproceedings{Nist13a,
  author = {Nistor, Adrian and Jiang, Tian and Tan, Lin},
  title = {Discovering, reporting, and fixing performance bugs},
  booktitle = {2013 10th Working Conference on Mining Software Repositories (MSR)},
  pages = {237-246},
  year = {2013},
  doi = {10.1109/MSR.2013.6624035}}

@inproceedings{Nixo87a,
  author = {Brian Nixon and Lawrence Chung and John Mylopoulos and David Lauzon and Alex Borgida and M. Stanley},
  title = {Implementation of a compiler for a semantic data model: Experiences with taxis},
  booktitle = {SIGMOD '87: Proceedings of the 1987 ACM SIGMOD international conference on Management of data},
  pages = {118--131},
  publisher = {ACM},
  year = {1987},
  doi = {10.1145/38713.38731},
  address = {New York, NY, USA},
  isbn = {0-89791-236-5},
  location = {San Francisco, California, United States}}

@inproceedings{Noac05a,
  author = {Andreas Noack and Claus Lewerentz},
  title = {A space of layout styles for hierarchical graph models of software systems},
  booktitle = {SoftVis '05: Proceedings of the 2005 ACM symposium on Software visualization},
  pages = {155--164},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1056018.1056040},
  address = {New York, NY, USA},
  isbn = {1-59593-073-6},
  location = {St. Louis, Missouri}}

@inproceedings{Nobl00a,
  author = {James Noble},
  title = {Iterators and Encapsulation},
  booktitle = {Proceedings of TOOLS '00},
  pages = {431ff},
  year = {2000},
  month = jun}

@inproceedings{Nobl98a,
  author = {James Noble and Jan Vitek and John Potter},
  title = {Flexible Alias Protection},
  booktitle = {Proceedings of the 12th European Conference on Object-Oriented Programming (ECOOP'98)},
  volume = 1445,
  pages = {158--185},
  publisher = {Springer-Verlag},
  year = {1998},
  address = {Brussels, Belgium},
  editor = {Eric Jul},
  isbn = {3-540-64737-6},
  month = jul,
  series = {LNCS}}

@book{Nobl99a,
  author = {James Noble and Antero Taivalsaari and Ivan Moore},
  title = {Prototype-Based Programming},
  publisher = {Springer},
  year = {1999}}

@inproceedings{Nobl99b,
  author = {James Noble and David Clarke and John Potter},
  title = {Object Ownership for Dynamic Alias Protection},
  booktitle = {Proceedings TOOLS '99},
  year = {1999},
  month = nov}

@inproceedings{Nogu14a,
  author = {Nogueira, Paulo Eduardo and Matias, Rivalino and Vicente, Elder},
  title = {An Experimental Study on Execution Time Variation in Computer Experiments},
  booktitle = {Proceedings of the 29th Annual ACM Symposium on Applied Computing},
  pages = {1529-1534},
  publisher = {Association for Computing Machinery},
  year = {2014},
  url = {https://doi.org/10.1145/2554850.2555022},
  doi = {10.1145/2554850.2555022},
  abstract = {In computer experiments, many research works rely on the accuracy of measured programs' execution time. We observe that not all studies consider that repeated executions of the same program, under the same experimental conditions, may produce statistically significant different completion times. In this work, we experimentally demonstrate that several sources of OS Jitter affect the execution time of computer programs. We compare various execution time samples using three test protocols, which apply different statistical techniques. The results show that significant differences are detected in all evaluated scenarios.},
  address = {New York, NY, USA},
  isbn = {9781450324694},
  keywords = {execution time variability, experiments, OS jitter},
  location = {Gyeongju, Republic of Korea},
  numpages = {6},
  series = {SAC '14}}

@inproceedings{Noik94a,
  author = {Emanuel G. Noik},
  title = {A Space of Presentation Emphasis Techniques for Visualizing Graphs},
  booktitle = {Proceedings of Graphics Interface '94},
  pages = {225--234},
  year = {1994},
  url = {http://citeseer.nj.nec.com/noik94space.html},
  address = {Banff, Alberta, Canada},
  month = may}

@techreport{Nolt92a,
  author = {J{\"o}rg Nolte},
  title = {Language-Level Support for Remote Object Invocations},
  year = {1992},
  address = {Sankt Augustin},
  institution = {GMD},
  month = may,
  number = {654},
  type = {Working Paper}}

@book{Nona95a,
  author = {Ikujiro Nonaka and Hirotaka Takeuchi},
  title = {The Knowledge-Creating Company},
  publisher = {Oxford University Press},
  year = {1995}}

@article{Nora06a,
  author = {Bounour Nora and Ghoul Said and Atil Fadila},
  title = {A Comparative Classification of Aspect Mining Approaches},
  journal = {Journal of Computer Science},
  volume = {4},
  pages = {322--325},
  publisher = {2005 Science Publications},
  year = {2006},
  issn = {1549-3636},
  number = {2}}

@inproceedings{Nord02a,
  author = {Johan Nordlander and Mark P. Jones and Magnus Carlsson and Richard B. Kieburtz and Andrew Black},
  title = {Reactive Objects},
  booktitle = {In Proceedings of the 5th IEEE International Symposium on Object-oriented Real-time distributed computing},
  year = {2002},
  address = {Crystal City, Virginia, USA},
  month = apr}

@book{Nord90a,
  author = {B. Nordstr{\"o}m and K. Petersson and J. M. Smith},
  title = {Programming in Martin-L{\"o}fs Type Theory, An Introduction},
  publisher = {Clarendon Press},
  year = {1990},
  address = {Oxford}}

@misc{Nord95a,
  author = {Else K. Nordhagen},
  title = {An Object-Oriented Calculus},
  year = {1995},
  note = {Working Draft}}

@misc{Nord95b,
  author = {Else K. Nordhagen},
  title = {Equal observable behaviour in Object-oriented Systems},
  year = {1995},
  note = {Working Draft}}

@misc{Nord95c,
  author = {Else K. Nordhagen},
  title = {Reliable refinements of composable objects},
  year = {1995},
  note = {Working Draft}}

@inproceedings{Nord96a,
  author = {Else K. Nordhagen},
  title = {Omicron, An Object-Oriented Calculus},
  booktitle = {Proceedings FMOODS '96},
  year = {1996},
  url = {http://www.ifi.uio.no/~lc/FMOODS.ps},
  address = {Paris, France},
  editor = {IFIP WG 6.1},
  month = mar}

@phdthesis{Nord99a,
  author = {Johan Nordlander},
  title = {Reactive Objects and Functional Programming},
  year = {1999},
  school = {Chalmers University of Technology, G\"{o}tebord, Sweden},
  month = may}

@incollection{Nori81a,
  author = {K.V. Nori and U. Ammann and K. Jensen and H.H. Nageli and Ch. Jacobi},
  title = {Pascal-{P} Implementation Notes},
  booktitle = {Pascal --- The Language and its Implementation},
  pages = {125--170},
  publisher = {John Wiley \& Sons, Ltd.},
  year = {1981},
  editor = {D.W. Barron}}

@book{Norm86a,
  author = {D.A. Norman and S.W. Draper},
  title = {User Centered System Design},
  publisher = {Lawrence Erlbaum Ass. Publisher},
  year = {1986}}

@book{Norm88a,
  author = {Donald A. Norman},
  title = {The Design of Everyday Things},
  publisher = {The MIT Press},
  year = {1988}}

@techreport{Norm90a,
  author = {Kurt Normark},
  title = {Simulation of Object-Oriented Concepts and Mechanisms in Scheme},
  year = {1990},
  address = {Aalborg, Denmark},
  institution = {Aalborg University},
  month = jan,
  number = {90-01},
  type = {Institute for Electronic Systems Technical Report}}

@inproceedings{Norm92a,
  author = {Veronique Normand and Jo\"elle Coutaz},
  title = {Unifying the Design and Implementation of User Interfaces through the Object Paradigm},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {153--169},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@book{Norm93a,
  author = {Donald A. Norman},
  title = {Things that Make Us Smart},
  publisher = {Perseus Books},
  year = {1993},
  isbn = {0-201-62695-0}}

@book{Norm98a,
  author = {Donald A. Norman},
  title = {The Design of Everyday Things},
  publisher = {The MIT Press},
  year = {1998},
  isbn = {0-262-64037-6 	978-0-262-64037-4}}

@techreport{Nort06a,
  author = {L. Northrop and P. Feiler and R. P. Gabriel and J. Goodenough and R. Linger and T. Longstaff and R. Kazman and M. Klein and D. Schmidt and K. Sullivan and K. Wallnau},
  title = {{Ultra-Large-Scale Systems - The Software Challenge of the Future}},
  year = {2006},
  url = {http://www.sei.cmu.edu/uls/downloads.html},
  editor = {W. Pollak},
  institution = {Software Engineering Institute, Carnegie Mellon},
  month = {jun}}

@article{Nose90a,
  author = {J. T. Nosek and P. Palvia},
  title = {Software Maintenance Management: changes in the last decade},
  journal = {Software Maintenance: Research and Practice},
  volume = {2},
  pages = {157--174},
  year = {1990},
  number = {3}}

@inproceedings{Notk93a,
  author = {David Notkin and David Garlan and William G. Griswold and Kevin Sullivan},
  title = {Adding Implicit Invocation to Languages: Three Approaches},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {489--510},
  year = {1993},
  abstract = {Implicit invocation based on event announcement is
an increasingly important technique for integrating
systems. However, the use of this technique has
largely been confined to tool integration
systems---in which tools exist as independent
processes---and special purpose languages---in which
specialized forms of event broadcast are designed
into the language from the start. This paper
broadens the class of systems that can benefit from
this approach by showing how to augment
general-purpose programming languages with
facilities for implicit invocation. We illustrate
the approach in the context of three different
languages, Ada, C++, and Common Lisp. The intent is
to highlight the key design considerations that
arise in extending such languages with implicit
invocation.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@article{Nour02a,
  author = {Lhouari Nourine and Olivier Raynaud},
  title = {A fast incremental algorithm for building lattices.},
  journal = {Journal of Experimental and Theoretical Artificial Intelligence},
  volume = {14},
  pages = {217--227},
  year = {2002},
  number = {2-3}}

@article{Nour99a,
  author = {Lhouari Nourine and Olivier Raynaud},
  title = {A fast algorithm for building lattices},
  journal = {Information Processing Letters},
  volume = {71},
  pages = {199--204},
  publisher = {Elsevier North-Holland, Inc.},
  year = {1999},
  number = {5-6}}

@misc{Nuno02a,
  author = {Nuno Santos and Paulo Marques and Luis Silva},
  title = {A Framework for Smart Proxies and Interceptors in {RMI}},
  year = {2002},
  url = {http://citeseer.ist.psu.edu/542994.html},
  abstract = {The Java Remote Method Invocation (RMI) {API} shields
		 the developer from the details of distributed
		 programming, allowing him to concentrate on application
		 specific code. But to perform some operations that are
		 orthogonal to the application, like logging, auditing,
		 caching, QoS, fault tolerance, and security, sometimes
		 it is necessary to customize the default behavior of
		 the RMI runtime. Other middleware for distributed
		 programming, like CORBA and the Remoting framework of
		 the .NET platform, support smart proxies and
		 interceptors, which can be used for these purposes,
		 allowing the separation of application-specific code
		 from service-specific code. In RMI there is no direct
		 way of doing so. This paper presents a framework based
		 on the Dynamic Proxy {API} for using smart proxies and
		 interceptors with RMI. This framework requires no
		 changes in the client application and minimal changes
		 in the server application, giving the developer greater
		 control over the distributed application. A practical
		 example of use is also given, by using the described
		 framework to implement user authentication and
		 fine-grained access control in RMI.}}

@misc{Nutt18a,
  author = {Nutter, Charles and Enebo, Thomas and Bini, Ola and Sieger, Nick and others},
  title = {JRuby--The Ruby Programming Language on the JVM},
  publisher = {URL: http://jruby. org},
  year = {2018}}

@inproceedings{Nwok15a,
  author = {Nwokeji, Joshua Chibuike and Clark, Tony and Barn, Balbir and Kulkarni, Vinay and Anum, Sheena O.},
  title = {A Data-centric Approach to Change Management},
  booktitle = {Proceedings of International Enterprise Distributed Object Computing Conference - EDOC'15},
  pages = {185--190},
  publisher = {IEEE Computer Society},
  year = {2015},
  doi = {10.1109/EDOC.2015.34},
  isbn = {978-1-4673-9203-7},
  numpages = {6}}

@article{Nyga86a,
  author = {Kristen Nygaard},
  title = {Basic Concepts in Object Oriented Programming},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {128--132},
  year = {1986},
  month = oct,
  number = {10}}

@incollection{Nyst03a,
  author = {Nathaniel Nystrom and Michael R. Clarkson and Andrew C. Myers},
  title = {Polyglot: An Extensible Compiler Framework for {Java}},
  booktitle = {Compiler Construction},
  volume = {2622},
  pages = {138--152},
  publisher = {Springer-Verlag},
  year = {2003},
  doi = {10.1007/3-540-36579-6_11},
  isbn = {978-3-540-00904-7},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Nyst04a,
  author = {Nathaniel Nystrom and Stephen Chong and Andrew C. Myers},
  title = {Scalable extensibility via nested inheritance},
  booktitle = {OOPSLA '04: Proceedings of the 19th annual ACM SIGPLAN Conference on Object-oriented programming, systems, languages, and applications},
  pages = {99--115},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/1028976.1028986},
  isbn = {1-58113-831-9},
  location = {Vancouver, BC, Canada}}

@inproceedings{Nyst06a,
  author = {Nathaniel Nystrom and Xin Qi and Andrew C. Myers},
  title = {J\&: nested intersection for scalable software composition},
  booktitle = {OOPSLA '06: Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications},
  pages = {21--36},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1167473.1167476},
  address = {New York, NY, USA},
  isbn = {1-59593-348-4},
  location = {Portland, Oregon, USA}}

@inproceedings{Nyst08a,
  author = {Nathaniel Nystrom and Vijay Saraswat and Jens Palsberg and Christian Grothoff},
  title = {Constrained types for object-oriented languages},
  booktitle = {OOPSLA '08: Proceedings of the 23rd ACM SIGPLAN conference on Object oriented programming systems languages and applications},
  pages = {457--474},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1449764.1449800},
  address = {New York, NY, USA},
  isbn = {978-1-60558-215-3},
  location = {Nashville, TN, USA}}

@inproceedings{OBri05a,
  author = {Michael O'Brien and Jim Buckley and Chris Exton},
  title = {Empirically Studying Software Practitioners - Bridging the Gap between Theory and Practice},
  booktitle = {Proceedings of the 21st IEEE International Conference on Software Maintenance ({ICSM} 2005)},
  publisher = {IEEE Computer Society Press},
  year = {2005}}

@inproceedings{OBri87a,
  author = {Patrick D. O'Brien and Daniel C. Halbert and Michael F. Kilian},
  title = {The {Trellis} Programming Environment},
  booktitle = {Proceedings Object-Oriented Programming Systems, Languages and Applications, (OOPSLA'87), ACM SIGPLAN Notices},
  volume = 22,
  pages = {91--102},
  publisher = {ACM Press},
  year = {1987},
  doi = {10.1145/38765.38815},
  isbn = {0-89791-247-0},
  location = {Orlando, Florida, USA},
  month = oct}

@misc{OCL2,
  author = {OCL},
  title = {Object Constraint Language Specification, Version 2.0},
  year = {2006},
  url = {http://www.omg.org/cgi-bin/apps/doc?formal/06-05-01.pdf},
  key = {OCL 2.0},
  note = {http://www.omg.org/cgi-bin/apps/doc?formal/06-05-01.pdf}}

@misc{OCL20,
  title = {UML 2.0 Object Constraint Language (OCL) Specification},
  year = {2003},
  url = {http://www.omg.org/docs/ptc/03-10-14.pdf},
  key = {OCL 2.0},
  note = {http://www.omg.org/docs/ptc/03-10-14.pdf}}

@book{OCL97a,
  author = {Rational Software and Microsoft and Hewlett-Packard and Oracle and Sterling Software and MCI Systemhouse and Unisys and ICON Computing and IntelliCorp and i-Logix and IBM and ObjecTime and Platinum Technology and Ptech and Taskon and Reich Technologies and Softeam},
  title = {{Object} {Constraint} {Language} Specification (version 1.1)},
  publisher = {Rational Software Corporation},
  year = {1997},
  month = sep}

@inproceedings{OCal97a,
  author = {O'Callahan, Robert and Jackson, Daniel},
  title = {Lackwit: a program understanding tool based on type inference},
  booktitle = {ICSE '97: Proceedings of the 19th international conference on Software engineering},
  pages = {338--348},
  publisher = {ACM},
  year = {1997},
  doi = {10.1145/253228.253351},
  address = {New York, NY, USA},
  isbn = {0-89791-914-9},
  location = {Boston, Massachusetts, United States}}

@misc{OCaml,
  title = {OCaml},
  key = {OCaml},
  note = {http://caml.inria.fr/}}

@inproceedings{OCin99a,
  author = {\'O Cinn\'eide, Mel and Paddy Nixon},
  title = {A Methodology for the Automated Introduction of Design Patterns},
  booktitle = {Proceedings {ICSM} '99},
  publisher = {IEEE Computer Society Press},
  year = {1999},
  month = aug}

@techreport{OMG95a,
  author = {OMG},
  title = {The Common Object Request Broker: Architecture and Specification},
  year = {1995},
  institution = {Object Management Group},
  number = {2.0}}

@book{OMG96a,
  title = {The Common Object Request Broker: Architecture and Specification},
  publisher = {Object Management Group},
  year = {1996},
  url = {http://www.omg.org/corba/c2indx.htm},
  editor = {?},
  month = jul}

@inproceedings{ONeil05a,
  author = {O'Neill, Eleanor and Klepal, Martin and Lewis, David and O'Donnell, Tony and O'Sullivan, Declan and Pesch, Dirk},
  title = {A Testbed for Evaluating Human Interaction with Ubiquitous Computing Environments},
  booktitle = {TRIDENTCOM'05: Proceedings of the 1st International Conference on Testbeds and Research Infrastructures for the DEvelopment of NeTworks and COMmunities},
  pages = {60--69},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/TRIDNT.2005.7}}

@misc{ORCO,
  title = {Oracle Coherence},
  url = {http://coherence.oracle.com},
  howpublished = {\url{http://coherence.oracle.com}},
  key = {oracleCoherence}}

@misc{OSGI,
  title = {OSGi Alliance},
  url = {http://www.osgi.org},
  key = {OSGI}}

@misc{OSGI06,
  author = {{OSGI Alliance}},
  title = {{OSGI Service Platform -- Core Specification -- Release 4, Version 4.0.1}},
  year = {2006},
  howpublished = {Available at: \texttt{http://www.osgi.org}}}

@misc{OTI98,
  title = {{E}{N}{V}{Y}/{Manager} {User} {Manual} 4.0},
  year = {1998},
  key = {OTI98},
  note = {Object Technology International Inc.}}

@book{Oaks01a,
  author = {Scott Oaks},
  title = {Java Security},
  publisher = {O'Reilly},
  year = {2001},
  isbn = {0-59600-157-6}}

@book{Oaks97a,
  author = {Scott Oaks and Henry Wong},
  title = {Java Threads},
  publisher = {O'Reilly},
  year = {1997},
  isbn = {1-56592-216-6}}

@misc{ObjectiveC,
  title = {The {Objective}-{C} Programming Language},
  key = {objectivec},
  note = {http://developer.apple.com/documentation/Cocoa/Conceptual/ObjectiveC/index.html}}

@techreport{Obri02a,
  author = {Liam O'Brien and Christoph Stoermer and Chris Verhoef},
  title = {Software Architecture Reconstruction: Practice Needs and Current Approaches},
  year = {2002},
  institution = {Carnegie Mellon University},
  month = aug,
  number = {CMU/SEI-2002-TR-024}}

@techreport{Obri03a,
  author = {Liam O'Brien and Christoph Stoermer},
  title = {Architecture Reconstruction Case Study},
  year = {2003},
  institution = {Carnegie Mellon University, SEI},
  number = {CMU/SEI-2003-TN-008}}

@inproceedings{Obri05b,
  author = {O'Brien, Liam and Smith, Dennis and Lewis, Grace},
  title = {Supporting Migration to Services using Software Architecture Reconstruction},
  booktitle = {{STEP'05}: Proceedings of the 13th {IEEE} International Workshop on Software Technology and Engineering Practice},
  pages = {81--91},
  publisher = {IEEE Computer Society},
  year = {2005},
  url = {http://portal.acm.org/citation.cfm?id=1158338.1158738},
  doi = {10.1109/STEP.2005.29},
  abstract = {There are many good reasons why organizations should
perform software architecture reconstructions.
However, few organizations are willing to pay for
the effort. Software architecture reconstruction
must be viewed not as an effort on its own but as a
contribution in a broader technical context, such as
the streamlining of products into a product line or
the modernization of systems that hit their
architectural borders, that is require major
restructuring. In this paper we propose the use of
architecture reconstruction to support System
Modernization through the identification and reuse
of legacy components as services in a Service-
Oriented Architecture (SOA). A case study showing
how architecture reconstruction was used on a system
to support an organization's decision-making process
is presented.},
  address = {Washington, DC, USA},
  isbn = {076952639X}}

@inproceedings{Ocal00a,
  author = {Alan O'Callaghan},
  title = {Patterns for Architectural Praxis},
  booktitle = {Proceedings of EuroPLoP 2000},
  year = {2000},
  url = {http://www.coldewey.com/europlop2000/papers.html}}

@article{Ocal17a,
  author = {O'Callahan, Robert and Jones, Chris and Froyd, Nathan and Huey, Kyle and Noll, Albert and Partush, Nimrod},
  title = {Engineering record and replay for deployability: Extended technical report},
  journal = {arXiv preprint arXiv:1705.05937},
  year = {2017}}

@inproceedings{Ocal99a,
  author = {Alan O'Callaghan and Ping Dai and Ray Farmer},
  title = {Patterns for Change --- Sample Patterns from the ADAPTOR Pattern Language},
  booktitle = {Proceedings of EuroPLoP 1999},
  year = {1999},
  url = {http://www.argo.be/europlop/writers.htm}}

@inproceedings{Ocon17a,
  author = {O'Connor, Russell},
  title = {Simplicity: A New Language for Blockchains},
  booktitle = {2017 Workshop on Programming Languages and Analysis for Security},
  pages = {107--120},
  publisher = {ACM},
  year = {2017},
  url = {http://doi.acm.org/10.1145/3139337.3139340},
  doi = {10.1145/3139337.3139340},
  acmid = {3139340},
  address = {New York, NY, USA},
  isbn = {978-1-4503-5099-0},
  keywords = {blockchain, bounded computation, crypto-currency, formal semantics, smart contracts},
  location = {Dallas, Texas, USA},
  numpages = {14},
  series = {PLAS '17}}

@misc{Octane,
  author = {Stefano Cazzulani},
  title = {Octane: The JavaScript benchmark suite for the modern web},
  url = {https://blog.chromium.org/2012/08/octane-javascript-benchmark-suite-for.html},
  note = {Retrieved June 07 2022}}

@article{Odai10a,
  author = {Odaira, Rei and Ogata, Kazunori and Kawachiya, Kiyokuni and Onodera, Tamiya and Nakatani, Toshio},
  title = {Efficient runtime tracking of allocation sites in java},
  journal = {ACM Sigplan Notices},
  volume = {45},
  pages = {109--120},
  publisher = {ACM New York, NY, USA},
  year = {2010},
  number = {7}}

@inproceedings{Odeh93a,
  author = {Mohammed H. Odeh and Julian A. Padget},
  title = {Object-Oriented Execution of OPS5 Production Systems},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {178--190},
  year = {1993},
  month = oct}

@article{Odel17a,
  author = {O'Dell, Devon H},
  title = {The Debugging Mindset: Understanding the psychology of learning strategies leads to effective problem-solving skills.},
  journal = {Queue},
  volume = {15},
  pages = {71--90},
  publisher = {ACM New York, NY, USA},
  year = {2017},
  number = {1}}

@article{Odel94a,
  author = {James Odell},
  title = {Six Different Kinds of Aggregation},
  journal = {JOOP},
  year = {1994}}

@book{Odel98a,
  author = {James J. Odell},
  title = {Advanced Object-Oriented Analysis \& Design Using {UML}},
  publisher = {Cambridge University Press},
  year = {1998}}

@inproceedings{Oden97a,
  author = {Georg Odenthal and Klaus Quibeldey-Cirkel},
  title = {Using Patterns for Design and Documentation},
  booktitle = {Proceedings of ECOOP '97},
  volume = 1241,
  pages = {511--529},
  publisher = {Springer-Verlag},
  year = {1997},
  month = jun,
  series = {LNCS}}

@inproceedings{Oder00a,
  author = {Martin Odersky},
  title = {Functional Nets},
  booktitle = {Proc. European Symposium on Programming},
  volume = 1782,
  pages = {1--25},
  publisher = {Springer-Verlag},
  year = {2000},
  url = {http://lampwww.epfl.ch/fn/},
  month = mar,
  series = {LNCS}}

@techreport{Oder04a,
  author = {Martin Odersky and Philippe Altherr and Vincent Cremet and Burak Emir and Sebastian Maneth and St\'ephane Micheloud and Nikolay Mihaylov and Michel Schinz and Erik Stenman and Matthias Zenger},
  title = {An Overview of the {Scala} Programming Language},
  year = {2004},
  address = {1015 Lausanne, Switzerland},
  institution = {\'Ecole Polytechnique F\'ed\'erale de Lausanne},
  number = {64},
  type = {Technical Report}}

@inproceedings{Oder05a,
  author = {Martin Odersky and Matthias Zenger},
  title = {Independently Extensible Solutions to the Expression Problem},
  booktitle = {Proc. FOOL 12},
  year = {2005},
  month = jan}

@techreport{Oder07a,
  author = {Martin Odersky},
  title = {Scala Language Secification v. 2.4},
  year = {2007},
  address = {1015 Lausanne, Switzerland},
  institution = {\'Ecole Polytechnique F\'ed\'erale de Lausanne},
  month = mar}

@book{Oder08a,
  author = {Martin Odersky and Lex and Bill Venners},
  title = {Programming in Scala},
  publisher = {Artima Inc},
  year = {2008},
  isbn = {978-0981531601}}

@article{Oder11a,
  author = {Odersky, Martin},
  title = {Scala by example},
  journal = {Programming Methods Laboratory, EPFL},
  year = {2011}}

@inproceedings{Oder95a,
  author = {Martin Odersky},
  title = {Applying $\pi$: Towards a Basis for Concurrent Imperative Programming},
  booktitle = {Proc. 2nd {ACM} {SIGPLAN} Workshop on State in Programming Languages},
  year = {1995},
  month = jan}

@inproceedings{Oder97a,
  author = {Martin Odersky and Philip Wadler},
  title = {Pizza into {Java}: Translating theory into practice},
  booktitle = {Proceedings POPL '97},
  year = {1997},
  url = {http://www.dcs.gla.ac.uk/~wadler/topics/pizza.html},
  address = {Paris},
  month = jan}

@inproceedings{Oder98a,
  author = {Martion Odersky},
  title = {Programming with Variable Functions},
  booktitle = {Proc. International Conference on Functional Programming},
  year = {1998},
  address = {Baltimore},
  month = sep}

@misc{Odif90a,
  author = {Piergiorgio Odifreddi},
  title = {Logic and Computer Science},
  publisher = {Academic Press},
  year = {1990},
  number = {31},
  series = {{API}C Studies in Data Processing}}

@inproceedings{Ofen16a,
  author = {Ofenbeck, Georg and Rompf, Tiark and P{"}uschel, Markus},
  title = {{RandIR}: differential testing for embedded compilers},
  booktitle = {Proceedings of the 2016 7th {ACM} {SIGPLAN} {Symposium} on {Scala}},
  pages = {21--30},
  year = {2016},
  url = {https://doi.org/10.1145/2998392.2998397},
  abstract = {This paper describes RandIR, a tool for differential testing of compilers using random instances of a given intermediate representation (IR). RandIR assumes no fixed target language but instead supports extensible IR-definitions through an internal IR-independent representation of operations. This makes it particularly well suited to test embedded compilers for multi-stage programming, which is our main use case. The ideas underlying our work, however, are more generally applicable. RandIR is able to automatically simplify failing instances of a test, a technique commonly referred to as shrinking. This enables testing with large random IR samples, thus increasing the odds of detecting a buggy behavior, while still being able to simplify failing instances to human-readable code.},
  month = oct}

@inproceedings{Ogas01a,
  author = {Ogasawara, Takeshi and Komatsu, Hideaki and Nakatani, Toshio},
  title = {A {S}tudy of {E}xception {H}andling and {I}ts {D}ynamic {O}ptimization in {J}ava},
  booktitle = {Object-oriented Programming, Systems, Languages, and Applications (OOSPLA'01)},
  pages = {83--95},
  publisher = {ACM},
  year = {2001},
  doi = {10.1145/504282.504289},
  address = {New York, NY, USA},
  location = {Tampa Bay, FL, USA},
  numpages = {13},
  series = {OOPSLA '01}}

@inproceedings{Ogas14a,
  author = {Ogasawara, Takeshi},
  title = {Workload characterization of server-side JavaScript},
  booktitle = {2014 IEEE International Symposium on Workload Characterization (IISWC)},
  volume = {},
  pages = {13-21},
  year = {2014},
  doi = {10.1109/IISWC.2014.6983035},
  number = {}}

@article{Ogde94a,
  author = {William F. Ogden and Murali Sitaraman and Bruce W. Weide and Stuart H. Zweben},
  title = {Part I: the {RESOLVE} framework and discipline: a research synopsis},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {19},
  pages = {23--28},
  publisher = {ACM Press},
  year = {1994},
  doi = {10.1145/190679.190681},
  issn = {0163-5948},
  number = {4}}

@inproceedings{Ohor89a,
  author = {Atsushi Ohori and Peter Buneman},
  title = {Static Type Inference for Parametric Classes},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {445--456},
  year = {1989},
  month = oct}

@incollection{Okam93a,
  author = {Hideaki Okamura and Yutaka Ishikawa and Mario Tokoro},
  title = {Metalevel Decomposition in {AL}-1/{D}},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {110--127},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {Research has shown that metalevel architectures and
the concept of reflection are useful for modifying
programming systems dynamically in a controlled way.
To modify the system flexibly, it is necessary to
represent various abstraction levels, from the
programing language level to the OS level, as well
as user's multiple views, such as the view where the
distributed environment is transparent and the view
where that is not transparent, in a programming
system. In traditional reflective systems, it is,
however, difficult to represent these aspects of the
system because these systems are modeled by one
metalevel. To overcome this problem, we have
proposed a new reflection framework: Multi-Model
Reflection Framework (MMRF), and implemented a
programming system AL-1/D based on this framework.
This paper gives a clearer definition of MMRF than
in our previous paper. MMRF is a framework for
decomposing a metalevel into multiple conceptual
models according to the abstraction levels and
user's views. These conceptual models may overlap
each other in their functions and resources. The
decomposed models should run concurrently because
models represents system components running
concurrently in a system. The definition of MMRF
includes the conditions to enable models to run
simultaneously without violenting consistently. The
structure of a model includes information to decide
whether or not these conditions are satisfied.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Okam94a,
  author = {Hideaki Okamura and Yutaka Ishikawa},
  title = {Object Location Control Using Meta-level Programming},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {299--319},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@mastersthesis{Oki83a,
  author = {B.M. Oki},
  title = {Reliable Object Storage to Support Atomic Actions},
  year = {1983},
  school = {MIT Dept EE and CS},
  month = may,
  number = {MIT/LCS/TR-308},
  type = {M.Sc. thesis}}

@inproceedings{Oki93a,
  author = {Oki, Brian and Pfluegl, Manfred and Siegel, Alex and Skeen, Dale},
  title = {The Information Bus: An architecture for extensible distributed systems},
  booktitle = {SOSP'93: Proceedings of the 14th Symposium on Operating systems principles},
  pages = {58--68},
  publisher = {ACM Press},
  year = {1993},
  doi = {10.1145/168619.168624},
  address = {Asheville, NC, USA},
  location = {New York, NY, USA}}

@incollection{Olde85a,
  author = {Ernst-R{\"u}diger Olderog},
  title = {Process Theory: Semantics, Specification and Verification},
  booktitle = {Current Trends in Concurrency},
  volume = {224},
  pages = {442--509},
  publisher = {Springer-Verlag},
  year = {1985},
  editor = {J.W. de Bakker and W-P. de Roever and G. Rozenberg},
  series = {LNCS}}

@article{Olde86a,
  author = {Ernst-R{\"u}diger Olderog and C.A.R. Hoare},
  title = {Specification-Oriented Semantics for Communicating Processes},
  journal = {Acta Informatica},
  volume = {23},
  pages = {9--66},
  year = {1986},
  number = {1}}

@inproceedings{Olde93a,
  author = {E.-R. Olderog and S. R{\"o}ssig},
  title = {A Case Study in Transformational Design of Concurrent Systems},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {90--104},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@inproceedings{Oliv10a,
  author = {Fernando Olivero and Michele Lanza and Mircea Lungu},
  title = {Gaucho: From Integrated Development Environments to Direct Manipulation Environments},
  booktitle = {Proceedings of FlexiTools 2010 (1st International Workshop on Flexible Modeling Tools)},
  year = {2010},
  keywords = {pub-iene proj-gsync}}

@inproceedings{Oliv13a,
  author = {Augusto Oliveira and Jean-Christophe Petkovich and Thomas Reidemeister and Sebastian Fischmeister},
  title = {DataMill: Rigorous Performance Evaluation Made Easy},
  booktitle = {Proc. of the 4th ACM/SPEC International Conference on Performance Engineering (ICPE)},
  pages = {137-149},
  year = {2013},
  abstract = {Empirical systems research is facing a dilemma. Minor aspects of an experimental setup can have a significant impact on its associated performance measurements and potentially invalidate conclusions drawn from them. Examples of such influences, often called hidden factors, include binary link order, process environment size, compiler generated randomized symbol names, or group scheduler assignments. The growth in complexity and size of modern systems will further aggravate this dilemma, especially with the given time pressure of producing results. So how can one trust any reported empirical analysis of a new idea or concept in computer science?
	This paper introduces DataMill, a community-based easy-to-use services-oriented open benchmarking infrastructure for performance evaluation. DataMill facilitates producing robust, reliable, and reproducible results. The infrastructure incorporates the latest results on hidden factors and automates the variation of these factors. Multiple research groups already participate in DataMill.
	DataMill is also of interest for research on performance evaluation. The infrastructure supports identifying new hidden factors, disseminating the research results beyond mere reporting. It provides a platform for investigating interactions and composition of hidden factors.},
  address = {Prague, Czech Republic},
  keywords = {benchmarking, empirical evaluation, systems},
  month = {apr}}

@inproceedings{Oliv99a,
  author = {Alexandre Oliva and Luiz Eduardo Buzato},
  title = {The Design and Implementation of {Guarana}},
  booktitle = {Proceedings of the 5th USENIX Conference on Object-Oriented Technologies and Systems (COOTS'99)},
  pages = {203--216},
  year = {1999},
  address = {San Diego, California, USA},
  month = may}

@inproceedings{Olse91a,
  author = {M.H. Olsen and E. Oskiewicz and J.P. Warne},
  title = {A model for interface groups},
  booktitle = {Proceedings of the 10th Symposium on Reliable Distributed Systems},
  pages = {98--107},
  publisher = {IEEE Computer Society},
  year = {1991},
  doi = {10.1109/RELDIS.1991.145411},
  address = {Pisa, Italy}}

@inproceedings{Olth86a,
  author = {Walter G. Olthoff},
  title = {Augmentation of Object-Oriented Programming by Concepts of Abstract Data Type Theory: The ModPascal Experience},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {429--443},
  year = {1986},
  month = nov}

@article{Olth89a,
  author = {Walther Olthoff and James Kempf},
  title = {An Algebraic Specification of Method Combination for the Common Lisp Object System},
  journal = {Lisp and Symbolic Computation},
  volume = {2},
  pages = {115--152},
  year = {1989},
  month = jun,
  number = {2}}

@book{Olth95a,
  title = {Proceedings of the {ECOOP}'95 European Conference on Object-Oriented Programming},
  volume = {952},
  publisher = {Springer-Verlag},
  year = {1995},
  editor = {Walter Olthoff},
  isbn = {3-540-55613-3},
  series = {LNCS}}

@article{Oluw14a,
  author = {Oluwatosin, Haroon Shakirat},
  title = {Client-server model},
  journal = {IOSR Journal of Computer Engineering},
  volume = {16},
  pages = {67--71},
  year = {2014},
  number = {1}}

@misc{Ometa,
  title = {{OMeta}: an Object-Oriented Language for Pattern Matching},
  url = {http://www.cs.ucla.edu/~awarth/ometa/},
  key = {ometa},
  note = {http://www.cs.ucla.edu/~awarth/ometa/}}

@inproceedings{Omic94a,
  author = {Andrea Omicini and Antonio Natali},
  title = {Object-Oriented Computations in Logic Programming},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {194--212},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@misc{OmniBrowser,
  author = {Colin Putney},
  title = {{OmniBrowser}, an extensible browser framework for {Smalltalk}},
  url = {http://www.wiresong.ca/OmniBrowser},
  key = {OmniBrowser},
  note = {http://www.wiresong.ca/OmniBrowser}}

@inproceedings{Omor08a,
  author = {Omori, Takayuki and Maruyama, Katsuhisa},
  title = {A change-aware development environment by recording editing operations of source code},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {31--34},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370758},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@book{Onei13a,
  author = {Cathy O'Neil and Rachel Schutt},
  title = {Doing Data Science},
  publisher = {O'Reilly},
  year = {2013},
  date-added = {2014-11-12 21:54:28 +0000},
  date-modified = {2015-01-19 16:06:25 +0000}}

@phdthesis{Opdy92b,
  author = {William F. Opdyke},
  title = {Refactoring Object-Oriented Frameworks},
  year = {1992},
  school = {University of Illinois},
  type = {{Ph.D}. Thesis}}

@inproceedings{Opdy93a,
  author = {William F. Opdyke and Ralph E. Johnson},
  title = {Creating Abstract Superclasses by Refactoring},
  booktitle = {Proceedings of the 1993 ACM Conference on Computer Science},
  pages = {66--73},
  publisher = {ACM Press},
  year = {1993}}

@misc{OpenStack20a,
  author = {Open Infrastructure Foundation},
  title = {OpenStack Users in Production},
  year = {2020},
  url = {https://www.openstack.org/use-cases/}}

@article{Oppe80a,
  author = {Derek C. Oppen},
  title = {Prettyprinting},
  journal = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume = {2},
  pages = {465--483},
  year = {1980},
  month = oct,
  number = {4}}

@article{Oppe83a,
  author = {D.C. Oppen and Y.K. Dalal},
  title = {The Clearinghouse: {A} Decentralized Agent for Locating Named Objects in a Distributed Environment},
  journal = {ACM TOOIS},
  volume = {1},
  pages = {230--253},
  year = {1983},
  month = jul,
  number = {3}}

@incollection{Orav90a,
  author = {Fredrik Orava and Joachim Parrow},
  title = {Algebraic Descriptions of Mobile Networks: An Example},
  booktitle = {Protocol Specification, Testing and Verfication, X},
  pages = {275--291},
  publisher = {IFIP, North-Holland},
  year = {1990}}

@article{Orav92a,
  author = {Fredrik Orava and Joachim Parrow},
  title = {An Algebraic Verification of a Mobile Network},
  journal = {Formal Aspects of Computing},
  volume = {4},
  pages = {497--543},
  year = {1992},
  number = {6}}

@inproceedings{Orei05a,
  author = {Ciaran O'Reilly and David Bustard and Philip Morrow},
  title = {The War Room Command Console --- Shared Visualizations for Inclusive Team Coordination},
  booktitle = {Proceedings of 2005 ACM Symposium on Software Visualization (Softviz 2005)},
  pages = {57--65},
  year = {2005},
  address = {St. Louis, Missouri, USA},
  month = may}

@book{Orfa96a,
  author = {Robert Orfali and Dan Harkey and Jeri Edwards},
  title = {The Essential Distributed Objects Survival Guide},
  publisher = {John Wiley \& Sons},
  year = {1996},
  isbn = {0471-12993-3}}

@book{Orfa97a,
  author = {Robert Orfali and Dan Harkey},
  title = {Client/Server Programming with {Java} and Corba},
  publisher = {Wiley},
  year = {1997},
  url = {http://www.wiley.com/compbooks/catalog/16351-1.htm},
  isbn = {0-471-16351-1}}

@book{Orfa97b,
  author = {Robert Orfali and Dan Harkey and Jeri Edwards},
  title = {Instant Corba},
  publisher = {Wiley},
  year = {1997},
  isbn = {0-471-18333-4}}

@phdthesis{Orio04a,
  author = {Manuel Oriol},
  title = {An Approach to the Dynamic Evolution of Software Systems},
  year = {2004},
  school = {Centre Universitaire d'Informatique, University of Geneva},
  url = {http://se.ethz.ch/~moriol/www/Research/PhD/index.html http://se.ethz.ch/~moriol/www/Research/PhD/OriolPhD.pdf},
  month = apr,
  number = {no. 556)},
  type = {{Ph.D}. Thesis}}

@inproceedings{Orso02a,
  author = {Orso, Alessandro and Rao, Anup and Harrold, Mary Jean},
  title = {A technique for dynamic updating of Java software},
  booktitle = {Software Maintenance, 2002. Proceedings. International Conference on},
  pages = {649--658},
  year = {2002},
  organization = {IEEE}}

@inproceedings{Orso14a,
  author = {Orso, Alessandro and Rothermel, Gregg},
  title = {Software Testing: A Research Travelogue (2000--2014)},
  booktitle = {Proceedings of the on Future of Software Engineering},
  pages = {117--132},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2593882.2593885},
  doi = {10.1145/2593882.2593885},
  acmid = {2593885},
  address = {New York, NY, USA},
  isbn = {978-1-4503-2865-4},
  keywords = {Software testing},
  location = {Hyderabad, India},
  numpages = {16},
  series = {FOSE 2014}}

@article{Orti03a,
  author = {Ortin, Francisco and Cueva Lovelle, Juan Manuel},
  title = {Non-restrictive computational reflection},
  journal = {Computer Standards \& Interfaces},
  volume = {25},
  year = {2003},
  doi = {10.1016/S0920-5489(02)00095-8}}

@article{Orti14a,
  author = {Ortin, Francisco and Conde-Clemente, PatriciaandLanvin, Daniel Fernandez and Izquierdo Castanedo, Raul},
  title = {The Runtime Performance of invoked dynamic: An Evaluation with a Java Library},
  journal = {IEEE Software},
  volume = {31},
  year = {2014},
  month = jul}

@inproceedings{Osbo89a,
  author = {S.L. Osborn},
  title = {The Role of Polymorphism in Schema Evolution in an Object-oriented Database},
  booktitle = {IEEE Transactions on Knowledge and Data Engineering},
  volume = {1},
  pages = {310--317},
  year = {1989}}

@inproceedings{Oshi05a,
  author = {Yoshiki Ohshima},
  title = {The {Early} {Examples} of {Kedama}, {A} {Massively} {Parallel} {System} in Squeak},
  booktitle = {IEEE C5: The Third International Conference on Creating, Connecting and Collaborating through Computing},
  volume = {3},
  pages = {93--100},
  year = {2005}}

@inproceedings{Osma12a,
  author = {Osman, Hafeez and van Zadelhoff, Arjan and Stikkolorum, Dave R and Chaudron, Michel RV},
  title = {UML class diagram simplification: what is in the developer's mind?},
  booktitle = {Proceedings of the Second Edition of the International Workshop on Experiences and Empirical Studies in Software Modelling},
  pages = {5},
  year = {2012},
  organization = {ACM}}

@inproceedings{Ossh00a,
  author = {Harold Ossher and Peri Tarr},
  title = {Hyper/{J}: multi-dimensional separation of concerns for {Java}},
  booktitle = {Proceedings of the 22nd international conference on Software engineering},
  pages = {734--737},
  publisher = {ACM Press},
  year = {2000},
  doi = {10.1145/337180.337618},
  isbn = {1-58113-206-9},
  location = {Limerick, Ireland}}

@inproceedings{Ossh07a,
  author = {Harold Ossher},
  title = {A direction for research on virtual machine support for concern composition},
  booktitle = {VMIL '07: Proceedings of the 1st workshop on Virtual machines and intermediate languages for emerging modularization mechanisms},
  pages = {5},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1230136.1230141},
  address = {New York, NY, USA},
  isbn = {978-1-59593-661-5},
  location = {Vancouver, British Columbia, Canada}}

@article{Ossh09a,
  author = {Ossher, Joel and Bajracharya, Sushil and Linstead, Erik and Baldi, Pierre and Lopes, Cristina},
  title = {{SourcererDB}: An aggregated repository of statically analyzed and cross-linked open source {Java} projects},
  journal = {Mining Software Repositories, International Workshop on},
  volume = {0},
  pages = {183--186},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/MSR.2009.5069501},
  doi = {10.1109/MSR.2009.5069501},
  abstract = {The open source movement has made vast quantities of
source code available online for free, providing an
extremely large dataset for empirical study and
potential resuse. A major difficulty in exploiting
this potential fully is that the data are currently
scattered between competing source code
repositories, none of which are structured for
empirical analysis and cross-project comparison. As
a result, software researchers and developers are
left to compile their own datasets, resulting in
duplicated effort and limited results. To address
this challenge, we built SourcererDB, an aggregated
repository of statically analyzed and cross-linked
open source Java projects. SourcererDB contains
local snapshots of 2,852 Java projects taken from
Sourceforge, Apache and Java.net. These projects are
statically analyzed to extract rich structural
information, which is then stored in a relational
database. References to entities in the 16,058
external jars are resolved and grouped, allowing for
cross-project usage information to be accessed
easily. This paper describes: (a) the mechanism for
resolving and grouping these cross-project
references, (b) the structure of and the metamodel
for the SourcererDB repository, and (d) end-user
dataset access mechanisms. Our goal in building
SourcererDB is to provide a rich dataset of source
code to facilitate the sharing of extracted data and
to encourage reuse and repeatability of
experiments.},
  address = {Los Alamitos, CA, USA},
  citeulike-article-id = {5727470},
  citeulike-linkout-0 = {http://doi.ieeecomputersociety.org/10.1109/MSR.2009.5069501},
  citeulike-linkout-1 = {http://dx.doi.org/10.1109/MSR.2009.5069501},
  isbn = {978-1-4244-3493-0},
  posted-at = {2009-09-06 09:59:26},
  priority = {5}}

@article{Ossh86a,
  author = {Harold Ossher},
  title = {A Mechanism for Specifying the Structure of Large, Layered, Object-Oriented Programs},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {143--152},
  year = {1986},
  month = oct,
  number = {10}}

@inproceedings{Ossh92a,
  author = {Harold Ossher and William Harrison},
  title = {Combination of Inheritance Hierarchies},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {25--40},
  year = {1992},
  month = oct}

@inproceedings{Ossh95a,
  author = {H. Ossher and M. Kaplan and W. Harrison and A. Katz and V. Kruskal},
  title = {Subject-Oriented Composition Rules},
  booktitle = {Proceedings of OOPSLA '95},
  pages = {235--250},
  year = {1995}}

@inproceedings{Oste00a,
  author = {Klaus Ostermann and G\"{u}nter Kniesel},
  title = {Independent Extensibility --- an open challenge for AspectJ and Hyper/J},
  booktitle = {Proceedings of Aspects and Dimensions of Concern Workshop},
  year = {2000},
  location = {Cannes, France}}

@inproceedings{Oste01a,
  author = {Klaus Ostermann and Mira Mezini},
  title = {Object-oriented composition untangled},
  booktitle = {Proceedings of OOPSLA '01, ACM SIGPLAN Notices},
  volume = {36},
  pages = {283--299},
  publisher = {ACM Press},
  year = {2001},
  doi = {10.1145/504282.504303},
  isbn = {1-58113-441-X},
  location = {Tampa Bay, FL, USA}}

@inproceedings{Oste05a,
  author = {Klaus Ostermann and Mira Mezini and Christophe Bockisch},
  title = {Expressive Pointcuts for Increased Modularity},
  booktitle = {Proceedings of ECOOP 2005},
  year = {2005}}

@inproceedings{Ostr04a,
  author = {Ostrand, Thomas J. and Weyuker, Elaine J. and Bell, Robert M.},
  title = {{Where the Bugs Are}},
  booktitle = {ACM SIGSOFT International Symposium on Software Testing and Analysis},
  pages = {86--96},
  year = {2004}}

@techreport{Oswa03a,
  author = {Baltisar Oswald and Silvan Auer},
  title = {{CASYMS}},
  year = {2003},
  url = {http://scg.unibe.ch/archive/projects/Oswa03a.pdf},
  institution = {University of Bern},
  month = aug,
  type = {Informatikprojekt}}

@article{Otis91a,
  author = {Allen Otis and Paul Butterworth and Jacob Stein},
  title = {The {GemStone} Object Database Management Systems},
  journal = {Communications of the ACM},
  volume = {34},
  pages = {64--77},
  year = {1991},
  month = oct,
  number = {10}}

@article{Otte77a,
  author = {Karl J. Ottenstein},
  title = {An Algorithmic Approach to the Detection and Prevention of Plagiarism},
  journal = {SIGCSE Bulletin},
  volume = {8},
  pages = {30--41},
  year = {1977},
  number = {4}}

@inproceedings{Otto17a,
  author = {Ottoni, Guilherme and Maher, Bertrand},
  title = {Optimizing Function Placement for Large-Scale Data-Center Applications},
  booktitle = {Proceedings of the 2017 International Symposium on Code Generation and Optimization},
  pages = {233--244},
  publisher = {IEEE Press},
  year = {2017},
  abstract = {Modern data-center applications often comprise a large amount of code, with substantial working sets, making them good candidates for code-layout optimizations. Although recent work has evaluated the impact of profile-guided intra-module optimizations and some cross-module optimizations, no recent study has evaluated the benefit of function placement for such large-scale applications. In this paper, we study the impact of function placement in the context of a simple tool we created that uses sample-based profiling data. By using sample-based profiling, this methodology follows the same principle behind AutoFDO, i.e. using profiling data collected from unmodified binaries running in production, which makes it applicable to large-scale binaries. Using this tool, we first evaluate the impact of the traditional Pettis-Hansen (PH) function-placement algorithm on a set of widely deployed data-center applications. Our experiments show that using the PH algorithm improves the performance of the studied applications by an average of 2.6%. In addition to that, this paper also evaluates the impact of two improvements on top of the PH technique. The first improvement is a new algorithm, called C3, which addresses a fundamental weakness we identified in the PH algorithm. We not only qualitatively illustrate how C3 overcomes this weakness in PH, but also present experimental results confirming that C3 performs better than PH in practice, boosting the performance of our workloads by an average of 2.9% on top of PH. The second improvement we evaluate is the selective use of huge pages. Our evaluation shows that, although aggressively mapping the entire code section of a large binary onto huge pages can be detrimental to performance, judiciously using huge pages can further improve performance of our applications by 2.0% on average.},
  isbn = {9781509049318},
  location = {Austin, USA},
  numpages = {12},
  series = {CGO '17}}

@inproceedings{Otto21a,
  author = {Ottoni, Guilherme and Liu, Bin},
  title = {HHVM Jump-Start: Boosting Both Warmup and Steady-State Performance at Scale},
  booktitle = {2021 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  pages = {340-350},
  year = {2021},
  doi = {10.1109/CGO51591.2021.9370314},
  abstract = {Just-In-Time (JIT) compilation is often employed in Virtual Machines (VMs) to translate their virtual-machine languages into real-machine code. This approach not only brings portability, but it also enables aggressive compiler optimizations based on runtime behavior observed via profiling. The downside of JIT compilation, compared to Ahead-Of-Time native compilation, is that the profiling and compilation overheads are incurred during execution. To mitigate these overheads, previous work have proposed sharing either profile data or final JIT compiled code across VM executions. Unfortunately, these techniques have drawbacks, including steady-state performance degradation and difficulty of use. To address these issues, this paper presents the Jump-Start mechanism implemented inside the Hip Hop Virtual Machine (HHVM). Jump-Start is a practical approach to share VM profile data at a large scale, being used to power one of the largest websites in the world. In this paper, we argue for HHVM's Jump-Start approach, describe it in detail, and present steady-state optimizations built on top of it. Running the Facebook website, we demonstrate that Jump-Start effectively solves the warmup problem in HHVM, reducing the server capacity loss during warmup by 54.9%, while also improving steady-state performance by 5.4%.},
  month = feb}

@article{Ouni17a,
author = {Ouni, Ali and Kessentini, Marouane and \`O Cinn\'eide, Mel and Sahraoui, Houari and Deb, Kalyan and Inoue, Katsuro},
year = {2017},
month = mar,
title = {MORE: A multi-objective refactoring recommendation approach to introducing design patterns and fixing code smells},
volume = {29},
journal = {Journal of Software: Evolution and Process},
doi = {10.1002/smr.1843}
}

@inproceedings{Ourn21a,
  author = {Ournani, Zakaria and Belgaid, Mohammed Chakib and Rouvoy, Romain and Rust, Pierre and Penhoat, Joel},
  title = {{Evaluating the Impact of Java Virtual Machines on Energy Consumption}},
  booktitle = {{15th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)}},
  year = {2021},
  url = {https://hal.inria.fr/hal-03275286},
  pdf = {https://hal.inria.fr/hal-03275286/file/JVM_Comp.pdf},
  address = {Bari, Italy},
  month = {oct}}

@book{Oust94a,
  author = {John K. Ousterhout},
  title = {Tcl and the Tk Toolkit},
  publisher = {Addison Wesley},
  year = {1994},
  url = {http://cseng.aw.com/bookdetail.qry?ISBN=0-201-63337-X\&ptype=0},
  isbn = {0-201-63337-X}}

@article{Oust98a,
  author = {John K. Ousterhout},
  title = {Scripting: Higher Level Programming for the 21st Century},
  journal = {IEEE Computer},
  volume = {31},
  pages = {23--30},
  year = {1998},
  url = {http://www.cs.indiana.edu/classes/c102/read/Ousterhout.pdf},
  doi = {10.1109/2.660187},
  month = mar,
  number = {3}}

@inproceedings{Over80a,
  author = {Overgaard, Mark},
  title = {UCSD Pascal: a portable software environment for small computers},
  booktitle = {Proceedings of the May 19-22, 1980, national computer conference},
  pages = {747--754},
  year = {1980}}

@techreport{Ovli02a,
  author = {Johan Ovlinger and Karl Lieberherr and David Lorenz},
  title = {Aspects and Modules Combined},
  year = {2002},
  address = {Boston, MA},
  institution = {College of Computer Science, Northeastern University},
  month = mar,
  note = {http://www.ccs.neu.edu/research/demeter/papers/ac-aspectj-hyperj},
  number = {NU-CCS-02-03}}

@techreport{Owe88a,
  author = {Olaf Owe},
  title = {The Response Function method for Specifying Concurrent Systems},
  year = {1988},
  institution = {University of Oslo, Dept. Informatics},
  month = apr,
  number = {96},
  type = {Research Report No.}}

@inproceedings{Oxho92a,
  author = {Nicholas Oxh\/oj and Jens Palsberg and Michael I. Schwartzbach},
  title = {Making Type Inference Practical},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {329--349},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@misc{PHP,
  title = {{PHP}: Hypertext Preprocessor},
  key = {PHP},
  note = {http://www.php.net/}}

@misc{PICKL,
  title = {Pickle},
  url = {http://docs.python.org/library/pickle.html},
  howpublished = {\url{http://docs.python.org/library/pickle.html}},
  key = {picklePython}}

@article{Pach11a,
abstract = {Many modern dynamic languages lack tools for understanding complex failures.},
author = {Pacheco, David},
doi = {10.1145/2043174.2043189},
file = {:home/matteo/Desktop/pacheco11postmortem.pdf:pdf},
issn = {0001-0782},
journal = {Commun. ACM},
number = {12},
pages = {44--51},
title = {{Postmortem Debugging in Dynamic Environments}},
volume = {54},
year = {2011}
}

@inproceedings{Pach93a,
  author = {Francois Pachet and Francis Wolinski and Sylvain Giroux},
  title = {{Spying as an Object-Oriented Programming Paradigm}},
  booktitle = {Proceedings of TOOLS EUROPE '93},
  pages = {109--118},
  year = {1993}}

@inproceedings{Pach94a,
  author = {F. Pachet and F. Wolinski and S. Giroux},
  title = {{Plugglable Advisors as Epiphyte Systems}},
  booktitle = {Calisce '94 (Computer Aided Learning in Science and Engineering},
  pages = {167--174},
  year = {1994},
  address = {Paris},
  month = aug}

@inproceedings{Paci03a,
  author = {Michael Pacione and Marc Roper and Murray Wood},
  title = {{A Comparative Evaluation of Dynamic Visualization Tools}},
  booktitle = {Proceedings of {WCRE} '03},
  pages = {80--89},
  publisher = {IEEE Computer Society},
  year = {2003},
  month = nov}

@inproceedings{Paci04a,
  author = {Michael Pacione and Marc Roper and Murray Wood},
  title = {A Novel Software visualisation Model to Support Software Comprehension},
  booktitle = {Proceedings of the 11th Working Conference on Reverse Engineering},
  pages = {70--79},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/{WCRE}.2004.7},
  month = nov}

@phdthesis{Paci05a,
  author = {Michael Pacione},
  title = {A Novel Software Visualisation Model to Support Object-Oriented Program Comprehension},
  year = {2005},
  school = {Univ. Strathclyde},
  month = nov}

@article{Padi07a,
  author = {Padioleau, Yoann and Lawall, Julia L and Muller, Gilles},
  title = {SmPL: A domain-specific language for specifying collateral evolutions in Linux device drivers},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {166},
  pages = {47--62},
  publisher = {Elsevier},
  year = {2007}}

@article{Padu18a,
  author = {Paduraru, Ciprian and Melemciuc, Marius-Constantin},
  title = {Parallelism in C\texttt{++} Using Sequential Communicating Processes},
  journal = {17th International Symposium on Parallel and Distributed Computing},
  pages = {157-163},
  year = {2018},
  doi = {10.1109/ISPDC2018.2018.00030},
  month = {jun}}

@inproceedings{Paep88a,
  author = {Andreas Paepcke},
  title = {{PCLOS}: {A} Flexible Implementation of {CLOS} Persistence},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {374--389},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Paep89a,
  author = {Andreas Paepcke},
  title = {{PCLOS}: {A} Critical Review},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {221--254},
  year = {1989},
  month = oct}

@inproceedings{Paep90a,
  author = {Andreas Paepcke},
  title = {{PCLOS}: Stress Testing {CLOS} Experiencing the Metaobject protocol},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {194--211},
  year = {1990},
  month = oct}

@book{Paep91a,
  title = {Proceedings {OOPSLA} '91},
  publisher = {ACM SIGPLAN Notices},
  year = {1991},
  editor = {Andreas Paepcke},
  isbn = {0-201-554178},
  month = nov}

@proceedings{Paep92a,
  title = {Proceedings {OOPSLA} '92},
  journal = {ACM SIGPLAN Notices},
  volume = {27},
  year = {1992},
  address = {Vancouver, British Columbia},
  editor = {Andreas Paepcke},
  month = oct}

@proceedings{Paep93a,
  title = {Proceedings of {OOPSLA} '93},
  publisher = {ACM SIGPLAN Notices},
  year = {1993},
  editor = {Andreas Paepcke},
  isbn = {0-201-58895-1}}

@incollection{Paep93b,
  author = {Andreas Paepcke},
  title = {User-Level Language Crafting},
  booktitle = {Object-Oriented Programming: the CLOS perspective},
  pages = {66--99},
  publisher = {MIT Press},
  year = {1993}}

@inproceedings{Page89a,
  author = {Page, Jr., Thomas W. and Steven Berson and William Cheng and Richard R. Muntz},
  title = {An Object-Oriented Modeling Environment},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {287--296},
  year = {1989},
  month = oct}

@article{Pagh03a,
  author = {Ulrik Pagh Schultz and Kim Burgaard and Flemming Gram Christensen and Jorgen Lindskov Knudsen},
  title = {Compiling {J}ava for low-end embedded systems},
  journal = {SIGPLAN Notice},
  volume = {38},
  pages = {42--50},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/780731.780739},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {7}}

@inproceedings{Pahl01a,
  author = {Claus Pahl},
  title = {A Pi-Calculus based Framework for the Composition and Replacement of Components},
  booktitle = {Workshop on Specification and Verification of Component-Based Systems (OOPSLA 2001)},
  year = {2001},
  url = {http://www.cs.iastate.edu/~leavens/SAVCBS/2001/papers-2001/}}

@article{Paiv20a,
  author = {Paiva, Ana C. R. and Restivo, Andr{\'e} and Almeida, S{\'e}rgio},
  title = {Test case generation based on mutations over user execution traces},
  journal = {Software quality journal},
  volume = {28},
  pages = {1173-1186},
  publisher = {Springer US},
  year = {2020},
  abstract = {Automatic test case generation is usually based on models of the software under test. However, those models may not exist or may be outdated and so, the test case generation must resort to other artifacts. In a software maintenance context, test cases must adapt to software changes and should be improved continuously to test adequately the new versions of the software. Mutation testing is a fault-based testing technique that evaluates the quality of the tests by applying simple changes to the source code and checking afterwards if the tests are able to detects those changes. This paper presents a web testing approach in which test cases are generated from user execution traces as a way to deal with the absence of models. In addition, it applies mutation operators over those test cases to enrich the test suite. The mutation operators were designed so as to mimic possible real failures. The additional tests are analyzed, and those that generate different outcomes are kept because they exercise additional behavior of the web application under test. At the end, the overall approach is illustrated and validated in a case study.},
  address = {New York},
  copyright = {Springer Science+Business Media, LLC, part of Springer Nature 2020},
  issn = {0963-9314},
  keywords = {Applications programs ; Compilers ; Computer Science ; Data Structures and Information Theory ; Interpreters ; Mutation ; Operating Systems ; Operators ; Programming Languages ; Software ; Software Engineering/Programming and Operating Systems ; Software testing ; Source code ; Topical Collection on Quality Management for Information Systems},
  language = {eng},
  number = {3}}

@article{Pala04a,
  author = {Palacz, Krzysztof and Czajkowski, Grzegorz and Es, Laurent},
  title = {Incommunicado: Efficient Communication for Isolates},
  journal = {none},
  year = {2004},
  month = apr}

@inproceedings{Pala97a,
  author = {Catuscia Palamidessi},
  title = {Comparing the Expressive Power of the Synchronous and the Asynchronous {$\pi$}-calculus},
  booktitle = {Conference Record of {POPL}~'97},
  pages = {256--265},
  year = {1997},
  address = {Paris, France},
  month = jan}

@inproceedings{Pale01a,
  author = {Paleczny, Michael and Vick, Christopher and Click, Cliff},
  title = {The Java hotspot{TM} Server Compiler},
  booktitle = {Symposium on JavaTM Virtual Machine Research (JVM'01)},
  publisher = {USENIX Association},
  year = {2001},
  location = {Monterey, California},
  numpages = {1},
  series = {JVM'01}}

@inproceedings{Pali10a,
  author = {Palix, Nicolas and Lawall, Julia and Muller, Gilles},
  title = {Tracking code patterns over multiple software versions with Herodotos},
  booktitle = {Proceedings of the 9th International Conference on Aspect-Oriented Software Development},
  pages = {169--180},
  year = {2010},
  organization = {ACM}}

@inproceedings{Pali16a,
  author = {Palikareva, Hristina and Kuchta, Tomasz and Cadar, Cristian},
  title = {Shadow of a Doubt: Testing for Divergences Between Software Versions},
  booktitle = {International Conference on Software Engineering (ICSE 2016)},
  year = {2016},
  pdf = {https://srg.doc.ic.ac.uk/files/papers/shadow-icse-16.pdf}}

@techreport{Palix09b,
  author = {{P}alix, {N}icolas and {L}awall, {J}ulia and {M}uller, {G}illes},
  title = {{H}erodotos: {A} {T}ool to {E}xpose {B}ugs' {L}ives},
  pages = {16},
  year = {2009},
  url = {http://hal.inria.fr/inria-00406306/en/},
  affiliation = {{D}epartement of {C}omputer {S}cience - {DIKU} - {U}niversity of {C}openhagen - {REGAL} - {INRIA} {R}ocquencourt - {INRIA} - {CNRS} : {UMR}7606 - {U}niversit{\'e} {P}ierre et {M}arie {C}urie - {P}aris {VI}},
  date-added = {2009-10-20 14:54:55 +0200},
  date-modified = {2009-10-20 15:04:35 +0200},
  institution = {INRIA},
  number = {{RR}-6984},
  type = {Research Report}}

@inproceedings{Palix15a,
  author = {Nicolas Palix and Jean{-}R{\'{e}}my Falleri and Julia Lawall},
  title = {Improving pattern tracking with a language-aware tree differencing algorithm},
  booktitle = {{IEEE} International Conference on Software Analysis, Evolution, and Reengineering, {SANER'15}},
  pages = {43--52},
  year = {2015}}

@inproceedings{Pals90a,
  author = {Jens Palsberg and Michael I. Schwartzbach},
  title = {Type Substitution for Object-Oriented Programming},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {151--160},
  year = {1990},
  url = {http://www.cs.purdue.edu/homes/palsberg/publications.html},
  month = oct}

@inproceedings{Pals91a,
  author = {Jens Palsberg and Michael I. Schwartzbach},
  title = {What is Type-Safe Code Reuse?},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {325--341},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  url = {http://www.cs.purdue.edu/homes/palsberg/publications.html},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Pals91b,
  author = {Jens Palsberg and Michael I. Schwartzbach},
  title = {Object-Oriented Type Inference},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {146--161},
  year = {1991},
  url = {http://www.cs.purdue.edu/homes/palsberg/publications.html},
  month = nov}

@article{Pals92a,
  author = {Jens Palsberg and Michael I. Schwartzbach},
  title = {Three Discussions on Object-oriented Typing},
  journal = {ACM OOPS Messenger},
  volume = {3},
  pages = {31--38},
  year = {1992},
  url = {http://www.cs.purdue.edu/homes/palsberg/publications.html},
  number = {2}}

@book{Pals93a,
  author = {Jens Palsberg and Michael I. Schwartzbach},
  title = {Object-Oriented Type Systems},
  publisher = {Wiley},
  year = {1993}}

@inproceedings{Palt94a,
  author = {M. Paltrinieri},
  title = {Integrating Objects with Constraint-Programming Languages},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {248--265},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Palt97a,
  author = {S. Palthepu and J.E. Greer and G.I. McCalla},
  title = {{Clich}\'e {Recognition} in {Legacy} {Software}: {A} {Scalable}, {Knowlegde}-{Based} {Approach}},
  booktitle = {Proceedings Fourth Working Conference on Reverse Engineering},
  pages = {94--103},
  publisher = {IEEE Computer Society},
  year = {1997},
  editor = {Ira Baxter and Alex Quilici and Chris Verhoef}}

@article{Pan08a,
  author = {Kai Pan and Sunghun Kim and E. James Whitehead Jr.},
  title = {Toward an understanding of bug fix patterns},
  journal = {Empirical Software Engineering},
  volume = {14},
  pages = {286--315},
  year = {2009},
  number = {3}}

@inproceedings{Pana03a,
  author = {Thomas Panas and Welf L{\"o}we and Uwe A{\ss}mann},
  title = {Towards the Unified Recovery Architecture for Reverse Engineering},
  booktitle = {International Conference on Software Engineering Research and Practice (SERP'03)},
  pages = {854--860},
  publisher = {CSREA Press},
  year = {2003}}

@inproceedings{Pana05a,
  author = {Thomas Panas and R\"udiger Lincke and Welf L\"owe},
  title = {Online-configuration of software visualization with {Vizz3D}},
  booktitle = {Proceedings of ACM Symposium on Software Visualization (SOFTVIS 2005)},
  pages = {173--182},
  year = {2005}}

@phdthesis{Pana05b,
  author = {Thomas Panas},
  title = {A Framework for Reverse Engineering},
  year = {2005},
  school = {Vajjo University, Sweden}}

@inproceedings{Panc09a,
  author = {Panchenko, O.},
  title = {Hybrid storage for enabling fully-featured text search and fine-grained structural search over source code},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {37--40},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070019},
  doi = {10.1109/SUITE.2009.5070019},
  abstract = {Searching is an important activity in software
maintenance. Dedicated data structures have been
used to support either textual or structural queries
over source code. The goal of this ongoing research
is to elaborate a hybrid data storage that enables
simultaneous textual and structural search. The
naive adjacency list method has been combined with
the inverted index approach. The data model has been
enhanced with the use of data compression approaches
for column-oriented databases to allow no-loss
albeit compact storage of fine-grained structural
data. The graph indexing has enabled the proposed
data model to expeditiously answer fine-grained
structural queries. This paper describes the basics
of the proposed approach and estimates its
feasibility.}}

@inproceedings{Pand15a,
  author = {Pandita, Rahul and Jetley, Raoul Praful and Sudarsan, Sithu D and Williams, Laurie},
  title = {Discovering likely mappings between {API}s using text mining},
  booktitle = {International {W}orking {C}onference on {S}ource {C}ode {A}nalysis and {M}anipulation ({SCAM})},
  pages = {231--240},
  year = {2015},
  organization = {IEEE}}

@inproceedings{Pand99a,
  author = {Raju Pandey and Brant Hashii},
  title = {Providing Fine-Grained Access Control for {Java} Programs},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {449--473},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {There is considerable interest in programs that can
migrate from one host to another and execute. Mobile
programs are appealing because they support
efficient utilization of network resources and
extensibility of information servers. However, since
they cross administrative domains, they have the
ability to access and possibly misuse a host's
protected resources. In this paper, we present a
novel approach for controlling and protecting a
site's resources. In this approach, a site uses a
declarative policy language to specify a set of
constraints on accesses to resources. A set of code
transformation tools enforces these constraints on
mobile programs by integrating the access constraint
checking code directly into the mobile program and
resource definitions. Because our approach does not
require resources to make explicit calls to a
reference monitor, it does not depend upon a
specific runtime system implementation.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Pang99a,
  author = {Candy Pang and Wade Holst and Yuri Leontiev and Duane Szafron},
  title = {Multi-Method Dispatch Using Multiple Row Displacement},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {304--328},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Multiple Row Displacement (MRD) is a new dispatch
technique for multi-method languages. It is based on
compressing an n-dimensional table using an
extension of the single-receiver row displacement
mechanism. This paper presents the new algorithm and
provides experimental results that compare it with
implementations of existing techniques: compressed
n-dimensional tables, look-up automata and
single-receiver projection. MRD uses comparable
space to the other techniques, but has faster
dispatch performance.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Pani16a,
  author = {Panichella, Sebastiano and Panichella, Annibale and Beller, Moritz and Zaidman, Andy and Gall, Harald C.},
  title = {The Impact of Test Case Summaries on Bug Fixing Performance: An Empirical Investigation},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering},
  pages = {547--558},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2884781.2884847},
  doi = {10.1145/2884781.2884847},
  acmid = {2884847},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3900-1},
  keywords = {empirical study, est case summarization, software testing},
  location = {Austin, Texas},
  numpages = {12},
  series = {ICSE '16}}

@article{Pani20a,
  author = {Panichella, Sebastiano and Zaugg, Nik},
  title = {An empirical investigation of relevant changes and automation needs in modern code review},
  journal = {Empirical Software Engineering},
  volume = {25},
  pages = {4833--4872},
  publisher = {Springer},
  year = {2020},
  number = {6}}

@inproceedings{Pank96a,
  author = {Raymond R. Panko and Richard P. Halverson Jr},
  title = {Spreadsheets on Trial: A Survey of Research on Spreadsheet Risks},
  booktitle = {HICSS '96: Proceedings of the 29th Hawaii International Conference on System Sciences (HICSS) Volume 2: Decision Support and Knowledge-Based Systems},
  pages = {326},
  publisher = {IEEE Computer Society},
  year = {1996},
  address = {Washington, DC, USA},
  isbn = {0-8186-7327-3}}

@inproceedings{Papa08a,
  author = {Papastefanatos, George and Anagnostou, Fotini and Vassiliou, Yannis and Vassiliadis, Panos},
  title = {Hecataeus: A what-if analysis tool for database schema evolution},
  booktitle = {European {C}onference on {S}oftware {M}aintenance and {R}eengineering ({CSMR})},
  pages = {326--328},
  publisher = {IEEE},
  year = {2008}}

@inproceedings{Papa10a,
  author = {Papastefanatos, George and Vassiliadis, Panos and Simitsis, Alkis and Vassiliou, Yannis},
  title = {Hecataeus: Regulating schema evolution},
  booktitle = {Data Engineering (ICDE), 2010 IEEE 26th International Conference on},
  pages = {1181--1184},
  publisher = {IEEE},
  year = {2010}}

@inproceedings{Papa10b,
  author = {Papadakis, Mike and Malevris, Nicos},
  title = {Automatic Mutation Test Case Generation via Dynamic Symbolic Execution},
  booktitle = {2010 IEEE 21st International Symposium on Software Reliability Engineering},
  pages = {121-130},
  year = {2010},
  doi = {10.1109/ISSRE.2010.38}}

@inproceedings{Papa16a,
  author = {Papadakis, Mike and Henard, Christopher and Harman, Mark and Jia, Yue and Le Traon, Yves},
  title = {Threats to the Validity of Mutation-Based Test Assessment},
  booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
  pages = {354--365},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {https://doi.org/10.1145/2931037.2931040},
  doi = {10.1145/2931037.2931040},
  abstract = {Much research on software testing and test techniques relies on experimental studies
based on mutation testing. In this paper we reveal that such studies are vulnerable
to a potential threat to validity, leading to possible Type I errors; incorrectly
rejecting the Null Hypothesis. Our findings indicate that Type I errors occur, for
arbitrary experiments that fail to take countermeasures, approximately 62% of the
time. Clearly, a Type I error would potentially compromise any scientific conclusion.
We show that the problem derives from such studies' combined use of both subsuming
and subsumed mutants. We collected articles published in the last two years at three
leading software engineering conferences. Of those that use mutation-based test assessment,
we found that 68% are vulnerable to this threat to validity.},
  address = {New York, NY, USA},
  isbn = {9781450343909},
  keywords = {Mutation testing, test assessment, subsuming mutants},
  location = {Saarbr\"{u}cken, Germany},
  numpages = {12},
  series = {ISSTA 2016}}

@inproceedings{Papa23a,
  title={A Multifaceted Memory Analysis of Java Benchmarks},
  author={Papadakis, Orion and Andronikakis, Andreas and Foutris, Nikolaos and Papadimitriou, Michail and Stratikopoulos, Athanasios and Zakkak, Foivos and Xekalakis, Polychronis and Kotselidis, Christos-Efthymios},
  booktitle={20th International Conference on Managed Programming Languages \& Runtimes},
  year={2023}
}

@book{Papa82a,
  author = {C.H. Papadimitriou and K. Steiglitz},
  title = {Combinatorial Optimization},
  publisher = {Prentice-Hall},
  year = {1982}}

@techreport{Papa89a,
  author = {Michael Papathomas},
  title = {Concurrency Issues in Object-Oriented Programming Languages},
  pages = {207--245},
  year = {1989},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/concurrency.pdf},
  abstract = {The integration of concurrent and object-oriented
programming, although promising, presents problems
that have not yet been fully explored. In this paper
we attempt to identify issues in the design of
concurrent object-oriented languages that must be
addressed to achieve a satisfactory integration of
concurrency in the object-oriented framework. We
consider the approaches followed by object-oriented
languages for supporting concurrency and identify
six categories of concurrent object-oriented
languages. Then, we review several concurrent
object-oriented languages and examine the
interaction of their concurrency features with their
object-oriented features and with object-oriented
software construction.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@techreport{Papa90a,
  author = {Michael Papathomas and Dimitri Konstantas},
  title = {Integrating Concurrency and Object-Oriented Programming --- An Evaluation of Hybrid},
  pages = {229--244},
  year = {1990},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/Dimitri/hybridEvaluation.pdf},
  abstract = {In this paper we address the effective use of the
object-oriented programming approach for concurrent
programming from a language design viewpoint. We
present a set of requirements for the design of
concurrent object-oriented languages. We then use a
particular language, Hybrid, as a concrete example
and examine to what extent its features meet these
requirements. We identify the solutions offered by
Hybrid and its shortcomings and we underline both
the difficulties and promising directions for the
design of concurrent object-oriented languages.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@techreport{Papa91a,
  author = {Michael Papathomas and Oscar Nierstrasz},
  title = {Supporting Software Reuse in Concurrent Object-Oriented Languages: Exploring the Language Design Space},
  pages = {189--204},
  year = {1991},
  url = {http://scg.unibe.ch/archive/osg/Papa91aSWReuseinCOOLs.pdf},
  abstract = {The design of programming languages that cleanly
integrate obc constructs and object-oriented
features that promote software reuse is an open
problem. We describe a design space that
characterizes approaches to object-oriented obc in
terms of a number of language design choices
concerning the relationship between objects and obc.
We identify requirements for software reuse and,
with the help of an example that illustrates several
of these requirements, explore the design space in
order to evaluate which design choices interfere
with reuse and which appear to adequately support
it. We conclude by highlighting open research issues
which, we believe, are essential for achieving
effective reuse of concurrent software.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@techreport{Papa91b,
  author = {Michael Papathomas},
  title = {A Unifying Framework for Process Calculus Semantics of Concurrent Object-Based Languages and Features},
  pages = {205--224},
  year = {1991},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/concSemanticFrame.pdf},
  abstract = {A framework for the semantic description of
concurrent object-oriented languages based on CCS is
outlined. We discuss how the essential
object-oriented features, such as encapsulation,
object identity, classes, inheritance and obc are
captured. Then, the proposed framework is used for
defining the semantics of significantly different
versions of a toy language which supports the above
features. The ease with which the different versions
of this language are accommodated provides some
evidence for the applicability of the framework for
a wide range of languages, as well as its usefulness
for comparing different language designs and
examining the interaction of a rich set of
object-oriented features.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  note = {Working paper},
  type = {Object Composition}}

@techreport{Papa92a,
  author = {Michael Papathomas},
  title = {Behaviour Compatibility and Specification for Active Objects},
  pages = {31--40},
  year = {1992},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/behaviourCompatibility.pdf},
  abstract = {For taking advantage of object-oriented programming
features such as data-abstraction, late binding,
type polymorphism and inheritance for software
reuse, it is essential to have a precise
understanding of whether or not classes providing
similar functionality are interchangeable within
programs and to be able to determine and state what
are the behavioural constraints to be met by a class
implementation. We discuss the importance of these
issues in the context of concurrent programs where
determining substitutability of classes may be
extremely complex, and discuss the use of process
calculi for modelling object-behaviours and
investigating behaviour compatibility between
classes. We then identify some issues that should be
addressed by such models and discuss directions for
further investigation of these issues.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@inproceedings{Papa92b,
  author = {Michael Papathomas},
  title = {A Unifying Framework for Process Calculus Semantics of Concurrent Object-Oriented Languages},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {53--79},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@phdthesis{Papa92c,
  author = {Michael Papathomas},
  title = {Language Design Rationale and Semantic Framework for Concurrent Object-Oriented Programming},
  year = {1992},
  school = {Dept. of Computer Science, University of Geneva},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/papathomasThesis.pdf},
  number = {No. 2522},
  type = {{Ph.D}. Thesis}}

@incollection{Papa93a,
  author = {Michael Papathomas and Christian Breiteneder and Simon Gibbs and Vicki de Mey},
  title = {Synchronization in Virtual Worlds},
  booktitle = {Virtual Worlds and Multimedia},
  publisher = {Wiley},
  year = {1993},
  abstract = {Virtual worlds are constructed from a wide range of
equipment including various input devices, special
purpose audio and graphics hardware, and a variety
of output devices. Distributed multi-participant or
multimedia virtual worlds further expand the range
of possibilities. For easily constructing and
experimenting with different virtual world
infrastructures we use an approach based on
developing and configuring reusable components. A
key problem is the synchronization of components:
components must be designed to work in different
configurations with, possibly, different
synchronization requirements. In this paper we
discuss support for synchronization in virtual world
infrastructures constructed by configuring reusable
components.},
  editor = {N. Thalmann and D. Thalmann},
  note = {To appear}}

@inproceedings{Papa94a,
  author = {M. P. Papa and G. Ragucci and G. Corrente and M. Ferrise and S. Giurleo and D. Vitale},
  title = {The Development of an Object-Oriented Multimedia Information System},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {278--297},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@incollection{Papa95a,
  author = {Michael Papathomas},
  title = {Concurrency in Object-Oriented Programming Languages},
  booktitle = {Object-Oriented Software Composition},
  pages = {31--68},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {An essential motivation behind concurrent
object-oriented programming is to exploit the
software reuse potential of object-oriented features
in the development of concurrent systems. Early
attempts to introduce concurrency to object-oriented
languages uncovered interferences between
object-oriented and concurrency features that
limited the extent to which the benefits of
objectoriented programming could be realized for
developing concurrent systems. This has fostered
considerable research into languages and approaches
aiming at a graceful integration of object-oriented
and concurrent programming. We will examine the
issues underlying concurrent object-oriented
programming, examine and compare how different
approaches for language design address these issues.
Although it is not our intention to make an
exhaustive survey of concurrent object-oriented
languages, we provide a broad coverage of the
research in the area.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@incollection{Papa95b,
  author = {Michael Papathomas and Gordon S. Blair and Geoff Coulson},
  title = {A Model for Active Object Coordination and its Use for Distributed Multimedia Applications},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = 924,
  pages = {162--175},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {The coordination among a set of concurrent objects
is commonly expressed through language specific
synchronization mechanisms in the objects'
implementation. Unfortunately, such an approach
makes it difficult to reuse these objects in
applications with different coordination patterns.
Moreover, the algorithms used for object
coordination are inextricably linked to the original
object implementation and cannot themselves be
easily reused for the coordination of objects with
different implementations. In this paper, we propose
a model that promotes the reuse of both objects and
coordination patterns. The model allows objects to
synchronize their execution with events occurring in
other objects (e.g. state changes and method
invocations) in a way that is compatible with local
object synchronization constraints and respects
encapsulation. The model also supports the use of
class inheritance while avoiding most of the
problems of combining inheritance with
synchronization. Finally, we consider the use of the
model in the area of distributed multimedia
applications. In this area active objects
encapsulate media processing activities while a
synchronous language is used to specify their
temporal coordination.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@techreport{Papa96a,
  author = {Michael Papathomas},
  title = {{ATOM}: An Active object model for enhancing reuse in the development of concurrent software},
  year = {1996},
  institution = {Grenoble-France},
  month = nov,
  type = {RR 963-I-LSR-2, IMAG-LSR}}

@inproceedings{Papa97a,
  author = {Michael Papathomas and Juan Hernandez and Juan Manual Murillo and Fernando Sanchez},
  title = {Inheritance and Expressive power in Concurrent Object-Oriented Programming},
  booktitle = {Proceedings of Langages et Mod\`eles \`a Objets '97},
  pages = {45--60},
  publisher = {Hermes},
  year = {1997},
  address = {Roscoff, France},
  editor = {Roland Ducournau and Serge Garlatti},
  isbn = {2-86601-650-5},
  month = oct}

@proceedings{Papa98a,
  title = {Distributed Computing Systems},
  publisher = {IEEE},
  year = {1998},
  address = {Amsterdam},
  editor = {Michael Papazoglou and Makoto Takizawa and Bernd Kramer and Samuel Chanson},
  isbn = {0-8186-8292-0},
  month = may,
  note = {Proceedings of the 18th International Conference on Distributed Computing Systems}}

@incollection{Papa98b,
  author = {Papadopoulos, George A. and Arbab, Farhad},
  title = {{Coordination Models and Languages}},
  booktitle = {The Engineering of Large Systems},
  volume = {46},
  publisher = {Academic Press},
  year = {1998},
  url = {http://www.cwi.nl/ftp/manifold/AICbook.ps.Z},
  month = aug,
  series = {Advances in Computers}}

@article{Pape15a,
  author = {Pape, Tobias and Felgentreff, Tim and Hirschfeld, Robert and Gulenko, Anton and Bolz, Carl Friedrich},
  title = {Language-Independent Storage Strategies for Tracing-JIT-Based Virtual Machines},
  journal = {SIGPLAN Not.},
  volume = {51},
  pages = {104-113},
  publisher = {Association for Computing Machinery},
  year = {2015},
  url = {https://doi.org/10.1145/2936313.2816716},
  doi = {10.1145/2936313.2816716},
  abstract = {Storage strategies have been proposed as a run-time optimization for the PyPy Python implementation and have shown promising results for optimizing execution speed and memory requirements. However, it remained unclear whether the approach works equally well in other dynamic languages. Furthermore, while PyPy is based on RPython, a language to write VMs with reusable components such as a tracing just-in-time compiler and garbage collection, the strategies design itself was not generalized to be reusable across languages implemented using that same toolchain. In this paper, we present a general design and implementation for storage strategies and show how they can be reused across different RPython-based languages. We evaluate the performance of our implementation for RSqueak, an RPython-based VM for Squeak/Smalltalk and show that storage strategies may indeed offer performance benefits for certain workloads in other dynamic programming languages.We furthermore evaluate the generality of our implementation by applying it to Topaz, a Ruby VM, and Pycket, a Racket implementation.},
  address = {New York, NY, USA},
  issn = {0362-1340},
  keywords = {Implementation, collection types, dynamic typing, memory optimization},
  month = oct,
  number = {2},
  numpages = {10}}

@inproceedings{Papo02,
  author = {Papineni, Kishore and Roukos, Salim and Ward, Todd and Zhu, Wei-Jing},
  title = {BLEU: a method for automatic evaluation of machine translation},
  booktitle = {Proceedings of the 40th annual meeting on association for computational linguistics},
  pages = {311--318},
  year = {2002},
  organization = {Association for Computational Linguistics}}

@phdthesis{Papou13,
  author = {Papoulias, Nikolaos},
  title = {{Remote Debugging and Reflection in Resource Constrained Devices}},
  year = {2013},
  school = {{Universit{\'e} des Sciences et Technologie de Lille - Lille I}},
  url = {https://tel.archives-ouvertes.fr/tel-00932796},
  hal-id = {tel-00932796},
  keywords = {Remote Debugging ; Reflection ; Mirrors ; Interactiveness ; Security ; Agile Development ; D{\'e}bogage {\`a} distance ; Reflexion ; Miroirs ; Interactivit{\'e} ; Instrumentation ; Distribution ; S{\'e}curit{\'e} ; D{\'e}veloppement Agile},
  month = {dec},
  type = {Theses}}

@article{Papou15,
  author = {Nick Papoulias and Noury Bouraqadi and Luc Fabresse and St\'ephane Ducasse and Marcus Denker},
  title = {Mercury: Properties and Design of a Remote Debugging Solution using Reflection},
  journal = {Journal of Object Technology},
  volume = {14},
  pages = {1:1-36},
  year = {2015},
  doi = {10.5381/jot.2015.14.2.a1},
  issn = {1660-1769},
  month = {may},
  number = {2}}

@book{Papu95a,
  author = {David M. Papurt},
  title = {Inside the Object Model},
  publisher = {SIGS Books},
  year = {1995},
  isbn = {1-884842-05-4}}

@misc{ParcPlace89,
  title = {ParcPlace Systems, Objectworks Reference Guide, Smalltalk-80, Version 2.5, Chapter 36},
  year = {1989},
  key = {ParcPlace89},
  note = {ParcPlace Systems}}

@misc{ParcPlace95,
  title = {Visual {Smalltalk} Enterprise User's Guide},
  year = {1995},
  key = {ParcPlace95},
  note = {ParcPlace-Digitalk}}

@misc{ParcPlace98,
  title = {VisualWorks 3.0 Application Developer's Guide},
  year = {1998},
  key = {ParcPlace98},
  note = {ParcPlace Division}}

@inproceedings{Pari94a,
  author = {F. Parisi-Presicce and A. Pierantonio},
  title = {Reusing Object Oriented Design: An Algebraic Approach},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {329--345},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@inproceedings{Park20a,
  author = {Park, Taemin and Dhondt, Karel and Gens, David and Na, Yeoul and Volckaert, Stijn and Franz, Michael},
  title = {Nojitsu: Locking down javascript engines},
  booktitle = {Symposium on Network and Distributed System Security (NDSS)},
  year = {2020}}

@inproceedings{Park21a,
  author = {Park, Jihyeok and An, Seungmin and Youn, Dongjun and Kim, Gyeongwon and Ryu, Sukyoung},
  title = {{JEST: N+1-Version Differential Testing of Both JavaScript Engines and Specification}},
  booktitle = {International Conference on Software Engineering (ICSE'21)},
  pages = {13-24},
  publisher = {IEEE Press},
  year = {2021},
  url = {https://doi.org/10.1109/ICSE43902.2021.00015},
  doi = {10.1109/ICSE43902.2021.00015},
  isbn = {9781450390859},
  keywords = {conformance test generation, JavaScript, mechanized specification, differential testing},
  location = {Madrid, Spain},
  numpages = {12}}

@incollection{Park81a,
  author = {David Park},
  title = {Concurrency and Automata on Infinite Sequences},
  booktitle = {Theoretical Computer Science, 5th GI-Conf.},
  volume = {104},
  pages = {167--183},
  publisher = {Springer-Verlag},
  year = {1981},
  address = {Karlsruhe},
  month = mar,
  series = {LNCS}}

@article{Park89a,
  author = {Alan Parker and James O. Hamblen},
  title = {Computer Algorithms for Plagiarism Detection},
  journal = {IEEE Transactions on Education},
  volume = {32},
  pages = {94--99},
  year = {1989},
  month = may,
  number = {2}}

@inproceedings{Parn06a,
  author = {Chris Parnin and Carsten G{\"o}rg},
  title = {Building Usage Contexts During Program Comprehension},
  booktitle = {Proceedings of the 14th IEEE International Conference on Program Comprehension ({ICPC}'06)},
  volume = {0},
  pages = {13--22},
  publisher = {IEEE Computer Society},
  year = {2006},
  address = {Los Alamitos CA}}

@article{Parn07a,
  author = {David Lorge Parnas},
  title = {Stop the numbers game},
  journal = {Commun. ACM},
  volume = {50},
  pages = {19--21},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297797.1297815},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {11}}

@inproceedings{Parn11,
  author = {Parnin, Chris and Orso, Alessandro},
  title = {Are automated debugging techniques actually helping programmers?},
  booktitle = {Proceedings of the 2011 International Symposium on Software Testing and Analysis},
  pages = {199--209},
  publisher = {ACM},
  year = {2011},
  url = {http://doi.acm.org/10.1145/2001420.2001445},
  doi = {10.1145/2001420.2001445},
  acmid = {2001445},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0562-4},
  keywords = {statistical debugging, user studies},
  location = {Toronto, Ontario, Canada},
  numpages = {11},
  series = {ISSTA '11}}

@inproceedings{Parn11a,
  author = {Parnin, Chris and Orso, Alessandro},
  title = {Are Automated Debugging Techniques Actually Helping Programmers?},
  booktitle = {2011 International Symposium on Software Testing and Analysis, ISSTA 2011 - Proceedings},
  year = {2011},
  doi = {10.1145/2001420.2001445}}

@article{Parn72a,
  author = {David L. Parnas},
  title = {A Technique for Software Module Specification with Examples},
  journal = {CACM},
  volume = {15},
  pages = {330--336},
  year = {1972},
  doi = {10.1145/361598.361623},
  month = may,
  number = {5}}

@article{Parn72b,
  author = {David L. Parnas},
  title = {On the Criteria To Be Used in Decomposing Systems into Modules},
  journal = {CACM},
  volume = {15},
  pages = {1053--1058},
  year = {1972},
  url = {http://www.cs.umd.edu/class/spring2003/cmsc838p/Design/criteria.pdf},
  doi = {10.1145/361598.361623},
  month = dec,
  number = {12}}

@article{Parn76a,
  author = {D. L. Parnas},
  title = {On the Design and Development of Program Families},
  journal = {IEEE Transactions on Software Engineering},
  volume = {2},
  pages = {1--9},
  year = {1976},
  month = mar,
  number = {1}}

@inproceedings{Parn78a,
  author = {David Lorge Parnas},
  title = {Designing Software for Ease of Extension and Contraction},
  booktitle = {International Conference on Software Engineering (ICSE'78)},
  pages = {264--277},
  year = {1978},
  bibsource = {DBLP, http://dblp.uni-trier.de}}

@article{Parn86a,
  author = {David L. Parnas and P.C. Clements},
  title = {A Rational Design Process: How and Why to Fake It},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-12:2},
  year = {1986},
  month = feb}

@inproceedings{Parn94a,
  author = {Parnas, David Lorge},
  title = {Software Aging},
  booktitle = {Proceedings 16th International Conference on Software Engineering (ICSE '94)},
  pages = {279--287},
  publisher = {IEEE Computer Society},
  year = {1994},
  address = {Los Alamitos CA},
  location = {Sorrento, Italy}}

@article{Parn98a,
  author = {David Lodge Parnas},
  title = {Successful Software Engineering Research},
  journal = {ACM Software Engineering Notes},
  volume = {23},
  pages = {64--68},
  year = {1998},
  month = may,
  number = {3}}

@incollection{Parr01a,
  author = {Joachim Parrow},
  title = {An Introduction to the $\pi$-Calculus},
  booktitle = {Handbook of Process Algebra},
  pages = {479--543},
  publisher = {Elsevier},
  year = {2001},
  editor = {Bergstra and Ponse and Smolka}}

@incollection{Parr02a,
  author = {Allen Parrish and Joel Jones and Brandon Dixon},
  title = {Extreme Unit Testing: Ordering Test Cases To Maximize Early Testing},
  booktitle = {Extreme Programming Perspectives},
  pages = {123--140},
  publisher = {Addison-Wesley},
  year = {2002},
  editor = {Michele Marchesi and Giancarlo Succi and Don Wells and Laurie Williams}}

@book{Parr07a,
  author = {Terence Parr},
  title = {The Definitive {ANTLR} Reference: Building Domain-Specific Languages},
  publisher = {Pragmatic Programmers},
  year = {2007},
  isbn = {978-0-9787392-5-6},
  month = may}

@article{Parr09a,
  author = {P. Parrend and S. Fr{\'e}not},
  title = {Security benchmarks of OSGi platforms: toward Hardened OSGi},
  journal = {Softw., Pract. Exper.},
  volume = {39},
  year = {2009},
  number = {5}}

@inproceedings{Parr88a,
  author = {Graham D. Parrington and Santosh K. Shrivastava},
  title = {Implementing Concurrency Control in Reliable Object-Oriented Systems},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {233--249},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@unpublished{Parr93a,
  author = {Joachim Parrow and Davide Sangiorgi},
  title = {Axiomatisations for $pi$-calculus},
  year = {1993},
  note = {In preparation},
  type = {draft}}

@inproceedings{Parr94a,
  author = {Terence J. Parr and Russell W. Quong},
  title = {Adding Semantic and Syntactic Predicates To {LL(k)}: {pred-LL(k)}},
  booktitle = {CC '94: Proceedings of the 5th International Conference on Compiler Construction},
  pages = {263--277},
  publisher = {Springer-Verlag},
  year = {1994},
  url = {ftp://ftp.botik.ru/pub/lang/tools/PCCTS/1.20/predicates.ps.Z},
  doi = {10.1007/3-540-57877-3_18},
  address = {London, UK},
  isbn = {3-540-57877-3}}

@article{Parr95a,
  author = {Terence J. Parr and Russell W. Quong},
  title = {{ANTLR}: A predicated-{LL(k)} parser generator},
  journal = {Software Practice and Experience},
  volume = {25},
  pages = {789--810},
  year = {1995},
  url = {http://www.antlr.org/article/1055550346383/antlr.pdf},
  doi = {10.1002/spe.4380250705}}

@inproceedings{Parr97a,
  author = {Joachim Parrow and Bj{\"o}rn Victor},
  title = {The Update Calculus},
  booktitle = {Algebraic Methodology and Software Technology (Proceedings of {AMAST} '97)},
  volume = {1349},
  pages = {409--423},
  publisher = {Springer-Verlag},
  year = {1997},
  url = {http://www.docs.uu.se/~victor/tr/upd.html},
  address = {Sydney, Australia},
  editor = {Michael Johnson},
  month = dec,
  series = {LNCS}}

@incollection{Pars14a,
  author = {Parsai, Ali and Soetens, Quinten David and Murgia, Alessandro and Demeyer, Serge},
  title = {Considering Polymorphism in Change-Based Test Suite Reduction},
  booktitle = {Agile Methods. Large-Scale Development, Refactoring, Testing, and Estimation},
  volume = {199},
  pages = {166-181},
  publisher = {Springer International Publishing},
  year = {2014},
  doi = {10.1007/978-3-319-14358-3_14},
  editor = {Dingsoyr, Torgeir and Moe, NilsBrede and Tonelli, Roberto and Counsell, Steve and Gencel, Cigdem and Petersen, Kai},
  isbn = {978-3-319-14357-6},
  keywords = {test selection; unit-testing; change-based test selection; polymorphism; ChEOPSJ},
  language = {English},
  series = {Lecture Notes in Business Information Processing}}

@misc{Part83a,
  author = {Partsh, H and Steinbruggen, R},
  title = {Program transformation systems, ACM Cornput},
  publisher = {Surveys},
  year = {1983}}

@article{Pas19a,
  author = {Pascarella, Luca and Bruntink, Magiel and Bacchelli, Alberto},
  title = {Classifying code comments in Java software systems},
  journal = {Empirical Software Engineering},
  volume = {24},
  pages = {1499--1537},
  publisher = {Springer},
  year = {2019},
  number = {3}}

@inproceedings{Pasc86a,
  author = {Geoffrey A. Pascoe},
  title = {Encapsulators: {A} New Software Paradigm in {Smalltalk}-80},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {341--346},
  year = {1986},
  month = nov}

@inproceedings{Pash04a,
  author = {Ilian Pashov and Matthias Riebisch},
  title = {Using Feature Modelling for Program Comprehension and Software Architecture Recovery},
  booktitle = {Proceedings of the 11th IEEE International Conference and Workshop on the Engineering of Computer-Based Systems (ECBS'04)},
  year = {2004},
  month = aug}

@inproceedings{Pasq23a,
  title={Temporal breakpoints for multiverse debugging},
  author={Pasquier, Matthias and Teodorov, Ciprian and Jouault, Fr{\'e}d{\'e}ric and Brun, Matthias and Le Roux, Luka and Lagadec, Lo{\"\i}c},
  booktitle={Proceedings of the 16th ACM SIGPLAN International Conference on Software Language Engineering},
  pages={125--137},
  year={2023}
}

@inproceedings{Pasq88a,
  author = {Jacques Pasquier-Boltuck and Ed Grossman and G\'erald Collaud},
  title = {Prototyping an Interactive Electronic Book System Using an Object-Oriented Approach},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {177--190},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@article{Pass07a,
  author = {Leonardo Teixeira Passos and Mariza A. S. Bigonha and Roberto S. Bigonha},
  title = {A Methodology for Removing LALR(k) Conflicts},
  journal = {Journal of Universal Computer Science},
  volume = {13},
  pages = {737--752},
  year = {2007},
  date = {2007-06-28},
  month = {jun},
  number = {6}}

@article{Past09,
  author = {Pasternak, Benny and Tyszberowicz, Shmuel and Yehudai, Amiram},
  title = {GenUTest: a unit test and mock aspect generation tool},
  journal = {International Journal on Software Tools for Technology Transfer},
  volume = {11},
  pages = {273-290},
  publisher = {Springer-Verlag},
  year = {2009},
  url = {http://dx.doi.org/10.1007/s10009-009-0115-4},
  doi = {10.1007/s10009-009-0115-4},
  issn = {1433-2779},
  language = {English},
  number = {4}}

@inproceedings{Pate06a,
  author = {Sandipkumar Patel and Yogesh Dandawate and John Kuriakose},
  title = {Architecture Recovery as first step in System Appreciation},
  booktitle = {2nd Workshop on Empirical Studies in Reverse Engineering},
  publisher = {Politecnico di Torino},
  year = {2006},
  url = {http://softeng.polito.it/events/WESRE2006/03Dandawate.pdf},
  note = {http://softeng.polito.it/events/WESRE2006/}}

@inproceedings{Pate92a,
  author = {S. Patel, W. Chu, R. Baxter},
  title = {A measure for composite module cohesion},
  booktitle = {Proceedings of the 14th International Conference on Software Engineering},
  pages = {38--48},
  year = {1992}}

@inproceedings{Pate99a,
  author = {Jean-Francois Patenaude and Ettore Merlo and Michel Dagenais and Bruno Lagu{\"e}},
  title = {Extending Software Quality Assessment Techniques to {Java} Systems},
  booktitle = {Proceedings Seventh International Workshop on Program Comprehension},
  pages = {49},
  year = {1999},
  month = may}

@inproceedings{Patt08a,
  author = {Pattison, David S. and Bird, Christian A. and Devanbu, Premkumar T.},
  title = {Talk and work: a preliminary report},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {113--116},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370776},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@inproceedings{Patt83a,
  author = {David A. Patterson},
  title = {{Smalltalk} on {RISC}: Architectural Investigations},
  booktitle = {Proceedings of CS292R, Univ. of California},
  year = {1983},
  address = {Berkeley},
  month = apr}

@article{Paul07a,
  author = {Linda Dailey Paulson},
  title = {Developers Shift to Dynamic Programming Languages},
  journal = {Computer},
  volume = {40},
  pages = {12--15},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MC.2007.53},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {2}}

@book{Paul91a,
  author = {Lawrence Paulson},
  title = {{ML} for the Working Programmer},
  publisher = {Cambridge University Press},
  year = {1991},
  isbn = {0-521-42225-6}}

@article{Paul94a,
  author = {Santanu Paul and Atul Prakash},
  title = {A Framework for Source Code Search Using Program Patterns},
  journal = {IEEE Transactions on Software Engineering},
  volume = {20},
  pages = {463--475},
  year = {1994},
  month = jun,
  number = {6}}

@book{Paul94b,
  title = {The Capability Maturity Model: Guidelines for Improving the Software Process},
  publisher = {Addison Wesley},
  year = {1994},
  editor = {Mark C. Paulk and Charles V. Weber and Bill Curtis and Mary Beth Chrissis}}

@article{Pauw00a,
  author = {De Pauw, Wim and Gary Sevitsky},
  title = {Visualizing reference patterns for solving memory leaks in {Java}},
  journal = {Concurrency: Practice and Experience},
  volume = {12},
  pages = {1431--1454},
  year = {2000},
  number = {14}}

@inproceedings{Pauw02a,
  author = {De Pauw, Wim and Erik Jensen and Nick Mitchell and Gary Sevitsky and John M. Vlissides and Jeaha Yang},
  title = {Visualizing the Execution of Java Programs},
  booktitle = {Revised Lectures on Software Visualization, International Seminar},
  pages = {151--162},
  publisher = {Springer-Verlag},
  year = {2002},
  address = {London, UK},
  isbn = {3-540-43323-6}}

@inproceedings{Pauw06a,
  author = {De Pauw, Wim and Sophia Krasikov and John Morar},
  title = {Execution Patterns for Visualizing Web Services},
  booktitle = {Proceedings ACM International Conference on Software Visualization (SoftVis'06)},
  publisher = {ACM Press},
  year = {2006},
  address = {New York NY},
  month = sep}

@inproceedings{Pauw93a,
  author = {De Pauw, Wim and Richard Helm and Doug Kimelman and John Vlissides},
  title = {Visualizing the Behavior of Object-Oriented Systems},
  booktitle = {Proceedings of International Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'93)},
  pages = {326--337},
  year = {1993},
  doi = {10.1145/165854.165919},
  month = oct}

@inproceedings{Pauw94a,
  author = {De Pauw, Wim and Doug Kimelman and John Vlissides},
  title = {Modeling Object-Oriented Program Execution},
  booktitle = {Proceedings of the European Conference on Object-Oriented Programming (ECOOP'94)},
  volume = {821},
  pages = {163--182},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Pauw98a,
  author = {De Pauw, Wim and David Lorenz and John Vlissides and Mark Wegman},
  title = {Execution Patterns in Object-Oriented Visualization},
  booktitle = {Proceedings of Conference on Object-Oriented Technologies and Systems (COOTS'98)},
  pages = {219--234},
  publisher = {USENIX},
  year = {1998}}

@inproceedings{Pauw99a,
  author = {De Pauw, Wim and Gary Sevitsky},
  title = {Visualizing Reference Patterns for Solving Memory Leaks in {Java}},
  booktitle = {Proceedings of the European Conference on Object-Oriented Programming (ECOOP'99)},
  volume = 1628,
  pages = {116--134},
  publisher = {Springer-Verlag},
  year = {1999},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@book{Pavl77a,
  author = {T. Pavlidis},
  title = {Structural Pattern Recognition},
  publisher = {Springer-Verlag},
  year = {1977}}

@inproceedings{Pawl01a,
  author = {Renaud Pawlak and Lionel Seinturier and Laurence Duchien and Gerard Florin},
  title = {{JAC}: {A} Flexible Solution for Aspect-Oriented Programming in {Java}},
  booktitle = {MetaLevel Architectures and Separation of Crosscutting Concerns},
  volume = {2192},
  pages = {1--24},
  publisher = {Springer-Verlag},
  year = {2001},
  editor = {Yonezawa, A. and Matsuoka, S.},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Pawl05a,
  author = {Renaud Pawlak},
  title = {Spoon: annotation-driven program transformation --- the AOP case},
  booktitle = {AOMD '05: Proceedings of the 1st workshop on Aspect oriented middleware development},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1101560.1101566},
  address = {New York, NY, USA},
  isbn = {1595932658},
  location = {Grenoble, France}}

@article{Pawl15a,
  author = {Pawlak, Renaud},
  title = {JSweet: Insights on motivations and design},
  journal = {A transpiler from Java to JavaScript. EASYTRUST},
  volume = {16},
  year = {2015}}

@book{Paws02a,
  author = {Richard Pawson and Robert Matthews},
  title = {Naked Objects},
  publisher = {Wiley and Sons},
  year = {2002},
  isbn = {0-470-84420-5}}

@phdthesis{Paws04a,
  author = {Richard Pawson},
  title = {Naked Objects},
  year = {2004},
  school = {Trinity College, Dublin},
  url = {http://www.nakedobjects.org/downloads/Pawson%20thesis.pdf},
  type = {{Ph.D}. Thesis}}

@inproceedings{Paxs93a,
  author = {Vern Paxson and Chris Saltmarsh},
  title = {Glish: {A} User-Level Software Bus for Loosely-Coupled Distributed Systems},
  booktitle = {Proceedings USENIX '93},
  year = {1993},
  url = {ftp://ftp.ee.lbl.gov/glish/USENIX-93.ps.Z},
  month = jan}

@misc{Pdb,
  author = {Python},
  title = {PDB},
  year = {2023},
  howpublished = {\url{https://docs.python.org/3/library/pdb.html}}}

@article{Pear07a,
  title={Profiling with aspectj},
  author={Pearce, David J and Webster, Matthew and Berry, Robert and Kelly, Paul HJ},
  journal={Software: Practice and Experience},
  volume={37},
  number={7},
  pages={747--777},
  year={2007},
  publisher={Wiley Online Library}
}

@article{Pear88a,
  author = {William R. Pearson and David J. Lippman},
  title = {Improved tools for biological sequence comparison},
  journal = {Proc. Natl. Acad. Sci. USA},
  volume = {85},
  pages = {2444--2448},
  year = {1988},
  month = apr}

@incollection{Pear91a,
  author = {Barak A. Pearlmutter and Kevin J. Lang},
  title = {The Implementation of Oaklisp},
  booktitle = {Topics in Advanced Language Implementation},
  publisher = {The MIT Press},
  year = {1991},
  address = {Cambridge, MASS},
  editor = {Peter Lee}}

@book{Pearl88a,
  author = {Pearl, J.},
  title = {Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference},
  publisher = {Morgan Kaufmann},
  year = {1988}}

@inproceedings{Pede89a,
  author = {Claus H. Pedersen},
  title = {Extending Ordinary Inheritance Schemes to Include Generalization},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {407--418},
  year = {1989},
  month = oct}

@inproceedings{Pede91a,
  author = {Jan Pedersen and Doug Cutting and John Tukey},
  title = {Snippet Search: A Single Phrase Approach to Text Access},
  booktitle = {Proceedings of the 1991 Joint Statistical Meetings},
  publisher = {American Statistical Association},
  year = {1991},
  institution = {Xerox PARC},
  note = {Also available as Xerox PARC Technical Report SSL-91-08}}

@techreport{Pedr07a,
  author = {Samuele Pedroni, Armin Rigo},
  title = {{JIT} Compiler Architecture},
  year = {2007},
  institution = {PyPy Consortium},
  note = {http://codespeak.net/pypy/dist/pypy/doc/index-report.html}}

@article{Pedr11a,
  author = {Pedregosa, Fabian and Varoquaux, Ga{\"e}l and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and others},
  title = {Scikit-learn: Machine learning in Python},
  journal = {the Journal of machine Learning research},
  volume = {12},
  pages = {2825--2830},
  publisher = {JMLR. org},
  year = {2011}}

@book{Pedri98a,
  author = {Doug Pedrick and Jonathan Weedon and Jon Golberg and Erik Bleifield},
  title = {Programming with VisiBroker},
  publisher = {Wiley},
  year = {1998},
  isbn = {0-471-23901-1}}

@inproceedings{Pele90a,
  author = {Doron Peled and Amir Pnueli},
  title = {Proving Partial Order Liveness Properties},
  booktitle = {Proceedings ICALP '90},
  volume = {443},
  pages = {553--571},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Warwick U.},
  editor = {M.S. Paterson},
  month = jul,
  series = {LNCS}}

@book{Pelr01a,
  author = {Joseph Pelrine and Alan Knight},
  title = {Mastering ENVY/Developer},
  publisher = {Cambridge University Press},
  year = {2001}}

@inproceedings{Pelt94a,
  author = {Hannu Peltonen and Tomi M{\"a}nnist{\"o} and Kari Alho and Reijo Sulonen},
  title = {Product Configurations --- An Application for Prototype Object Approach},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {513--534},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Penn87a,
  author = {D. Jason Penney and Jacob Stein},
  title = {Class Modification in the GemStone Object-Oriented {DBMS}},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {111--117},
  year = {1987},
  month = dec}

@inproceedings{Pente98a,
  author = {R. Penteado and P.C. Masiero and A.F. do Prado and R.T.V. Braga},
  title = {Reengineering of Legacy Systems Based on Transformation Using the Object-Oriented Paradigm},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {144--155},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@book{Pepp03a,
  author = {K. Pepple and B. Down and D. Levy},
  title = {Migrating to the Solaris Operating System},
  publisher = {Prentice Hall},
  year = {2003},
  edition = {First},
  isbn = {0-13-150263-8}}

@article{Pere11a,
  author = {P{\'e}rez-Castillo, Ricardo and De Guzman, Ignacio Garcia-Rodriguez and Piattini, Mario},
  title = {Knowledge Discovery Metamodel-ISO/IEC 19506: A standard to modernize legacy systems},
  journal = {Computer Standards \& Interfaces},
  volume = {33},
  pages = {519--532},
  publisher = {Elsevier},
  year = {2011},
  number = {6}}

@inproceedings{Pere13a,
  author = {P{\'e}rez, Javier},
  title = {Refactoring Planning for Design Smell Correction: Summary, Opportunities and Lessons Learned},
  journal = {IEEE International Conference on Software Maintenance, ICSM},
  booktitle = {2013 IEEE International Conference on Software Maintenance},
  pages = {572-577},
  year = {2013},
  doi = {10.1109/ICSM.2013.98},
  month = sep}

@article{Pere14a,
  author = {P{\'e}rez-Castillo, R. and Piattini, M.},
  title = {Analyzing the {Harmful} {Effect} of {God} {Class} {Refactoring} on {Power} {Consumption}},
  journal = {IEEE Software},
  volume = {31},
  pages = {48--54},
  year = {2014},
  doi = {10.1109/MS.2014.23},
  abstract = {Energy efficiency and other sustainability issues are common concerns in the material production industries but rarely addressed in software development efforts. Instead, traditional software development life cycles and methodologies place an emphasis on maintainability and other intrinsic software quality features. One standard practice is to improve maintainability by detecting bad smells in a system's architecture and then applying refactoring transformations to deal with those smells. The refactoring research area is sufficiently mature for most techniques to achieve more maintainable system architectures, but the authors argue that they can also lead to both decreased sustainability and increased power consumption. Accordingly, this article analyzes the relationship between architecture sustainability and maintainability by providing empirical evidence of how power consumption increases after refactoring.},
  issn = {0740-7459},
  keywords = {software quality, refactoring, maintainability, Software, Computer architecture, architecture sustainability, Couplings, energy efficiency, God class refactoring, Green products, green software, harmful effect analysis, Information systems, intrinsic software quality features, material production industries, power aware computing, power consumption, Power demand, Power measurement, software development life cycles},
  month = may,
  number = {3}}

@article{Pere18a,
  author = {Oscar Vera{-}Perez and Benjamin Danglot and Martin Monperrus and Benoit Baudry},
  title = {A Comprehensive Study of Pseudo-tested Methods},
  journal = {CoRR},
  volume = {abs/1807.05030},
  year = {2018},
  url = {https://arxiv.org/abs/1807.05030},
  archiveprefix = {arXiv},
  eprint = {1807.05030}}

@article{Pere18b,
  author = {Oscar Luis Vera-P\'erez and Benjamin Danglot and Martin Monperrus and Benoit Baudry},
  title = {A Comprehensive Study of Pseudo-tested Methods},
  journal = {Empirical Software Engineering},
  pages = {1-33},
  publisher = {Springer Verlag},
  year = {2018},
  doi = {10.1007/s10664-018-9653-2}}

@inproceedings{Peri09a,
  author = {Fabrizio Perin},
  title = {Enabling the evolution of {J2EE} applications through reverse engineering and quality assurance},
  booktitle = {Proceedings of the PhD Symposium at the Working Conference on Reverse Engineering ({WCRE} 2009)},
  pages = {291-294},
  publisher = {IEEE Computer Society Press},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Peri09aEnablingevolutionOfJEAs.pdf},
  abstract = {Enterprise Applications are complex software systems
that manipulate much persistent data and interact
with the user through a vast and complex user
interface. In particular applications written for
the Java 2 Platform, Enterprise Edition (J2EE) are
composed using various technologies such as
Enterprise Java Beans (EJB) or Java Server Pages
(JSP) that in turn rely on languages other than
Java, such as XML or SQL. In this heterogeneous
context applying existing reverse engineering and
quality assurance techniques developed for
object-oriented systems is not enough. Because those
techniques have been created to measure quality or
provide information about one aspect of J2EE
applications, they cannot properly measure the
quality of the entire system. We intend to devise
techniques and metrics to measure quality in J2EE
applications considering all their aspects and to
aid their evolution. Using software visualization we
also intend to inspect to structure of J2EE
applications and all other aspects that can be
investigate through this technique. In order to do
that we also need to create a unified meta-model
including all elements composing a J2EE
application.},
  location = {Lille, France},
  medium = {2},
  month = oct}

@inproceedings{Peri09b,
  author = {Fabrizio Perin},
  title = {Driving the refactoring of {Java Enterprise} applications by evaluating the distance between application elements},
  booktitle = {Proceedings of FAMOOSr at the Working Conference on Reverse Engineering ({WCRE} 2009)},
  pages = {20-24},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Peri09bDistancesBetweenElements.pdf},
  abstract = {Java Enterprise Applications (JEAs) are complex
systems composed using various technologies that in
turn rely on languages other than Java, such as XML
or SQL. Given the complexity of these applications,
the need to reverse engineer them in order to
support further development becomes critical. In
this paper we show how it is possible to split a
system into layers and how is possible to interpret
the distance between application elements in order
to support the refactoring of JEAs. The purpose of
this paper is to explore ways to provide suggestions
about the refactoring operations to perform on the
code by evaluating the distance between layers and
elements belonging those layers. We split JEAs into
layers by considering the kinds and the purposes of
the elements composing the application. We measure
distance between elements by using the notion of the
shortest path in a graph. Also we present how to
enrich the interpretation of the distance value with
enterprise pattern detection in order to refine the
suggestion about modifications to perform on the
code.},
  location = {Lille, France},
  medium = {2},
  month = oct}

@inproceedings{Peri10a,
  author = {Fabrizio Perin and Tudor G\^{i}rba and Oscar Nierstrasz},
  title = {Recovery and Analysis of Transaction Scope from Scattered Information in Java Enterprise Applications},
  booktitle = {Proceedings of International Conference on Software Maintenance 2010},
  year = {2010},
  abstract = {Java Enterprise Applications (JEAs) are large
systems that integrate multiple technologies and
programming languages. Transactions in JEAs simplify
the development of code that deals with failure
recovery and multi-user coordination by guaranteeing
atomicity of sets of operations. The heterogeneous
nature of JEAs, however, can obfuscate conceptual
errors in the application code, and in particular
can hide incorrect declarations of transaction
scope. In this paper we present a technique to
expose and analyze the application transaction scope
in JEAs by merging and analyzing information from
multiple sources. We also present several novel
visualizations that aid in the analysis of
transaction scope by highlighting anomalies in the
specification of transactions and violations of
architectural constraints. We have validated our
approach on two versions of a large commercial case
study.},
  location = {Timi\c{s}oara, Romania},
  medium = {2},
  month = sep,
  note = {To appear}}

@inproceedings{Peri10b,
  author = {Fabrizio Perin and Lukas Renggli and Jorge Ressia},
  title = {Ranking Software Artifacts},
  booktitle = {4th Workshop on FAMIX and Moose in Reengineering (FAMOOSr 2010)},
  year = {2010},
  abstract = {Reengineering and integrated development plat- forms typically
do not list search results in a particularly useful order. PageRank is the
algorithm prominently used by the Google internet search engine to rank
the relative importance of elements in a set of hyperlinked documents. To
determine the relevance of objects, classes, attributes, and methods we
propose to apply PageRank to software artifacts and their relationship
(reference, inheritance, access, and invocation). This paper presents
various experiments that demonstrate the usefulness of the ranking
algorithm in software (re)engineering.},
  medium = {1},
  note = {To appear}}

@inproceedings{Peri10c,
  author = {Fabrizio Perin},
  title = {MooseJEE: A Moose Extension to Enable the assessment of JEAs},
  booktitle = {Proceedings of the 26th International Conference on Software Maintenance ({ICSM} 2010) (Tool Demonstration)},
  year = {2010},
  abstract = {Java Enterprise Applications (JEAs) are large systems that integrate
multiple technologies and programming languages. With the purpose to support the
analysis of JEAs we have developed MooseJEE an extension of the \emph{Moose} environment
capable to model the typical elements of JEAs.},
  location = {Timi\c{s}oara, Romania},
  medium = {2},
  month = sep,
  note = {To appear}}

@inproceedings{Peri10d,
  author = {Fabrizio Perin and Tudor G\^irba},
  title = {Evaluating Code Duplication to Identify Rich Business Objects from Data Transfer Objects},
  booktitle = {4th Workshop on FAMIX and Moose in Reengineering (FAMOOSr 2010)},
  year = {2010},
  abstract = {Java Enterprise Applications (JEAs) are complex software systems written
	using multiple technologies. Moreover they are usually distributed systems and use
	a database to deal with persistence. A particular problem that appears in the design
	of these systems is the lack of a rich business model. In this paper we propose a
	technique to support the recovery of such rich business objects starting from anemic
	Data Transfer Objects (DTOs). Exposing the code duplications in the application's
	elements using the DTOs wesuggest which business logic can be moved into the DTOs from
	the other classes.},
  location = {Timi\c{s}oara, Romania},
  medium = {1},
  month = sep,
  note = {To appear}}

@inproceedings{Perk05a,
  author = {Perkins, Jeff H.},
  title = {Automatically generating refactorings to support {API} evolution},
  booktitle = {PASTE '05: Proceedings of the 6th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering},
  pages = {111--114},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1108792.1108818},
  address = {New York, NY, USA},
  isbn = {1-59593-239-9},
  location = {Lisbon, Portugal}}

@article{Perl82a,
  author = {Alan J. Perlis},
  title = {Epigrams on Programming},
  journal = {ACM SIGPLAN Notices},
  pages = {7--13},
  year = {1982},
  month = sep}

@proceedings{Perl84a,
  title = {Special Issue on Reusability},
  journal = {IEEE Transactions on Software Engineering},
  volume = 10,
  year = {1984},
  editor = {T.J. Biggerstaff and Alan J. Perlis},
  month = sep}

@techreport{Pern89a,
  author = {Barbara Pernici},
  title = {Objects with Roles},
  pages = {75--100},
  year = {1989},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@techreport{Pern90a,
  author = {Barbara Pernici},
  title = {Class Design and Meta-Design},
  pages = {117--131},
  year = {1990},
  abstract = {We present a methodology to guide the application
developer in the design of applications based on
reusable objects. Design information is associated
with each class to guide the developer in building
applications, addressing separately the various
design aspects. The refinement process during the
construction of a given application and the problem
of inserting the necessary design support
information in a repository are discussed.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@inproceedings{Pern90b,
  author = {Barbara Pernici},
  title = {Objects with Roles},
  booktitle = {Proceedings ACM-IEEE Conference of Office Information Systems (COIS)},
  year = {1990},
  doi = {10.1145/91474.91542},
  address = {Boston},
  month = apr}

@inproceedings{Perr00,
  author = {Perry, Dewayne E. and Porter, Adam A. and Votta, Lawrence G.},
  title = {Empirical studies of software engineering: a roadmap},
  booktitle = {ICSE '00: Proceedings of the Conference on The Future of Software Engineering},
  pages = {345--355},
  publisher = {ACM},
  year = {2000},
  doi = {10.1145/336512.336586},
  address = {New York, NY, USA},
  isbn = {1-58113-253-0},
  location = {Limerick, Ireland}}

@article{Perr01a,
  author = {Perry, Dewayne E. and Siy, Harvey P. and Votta, Lawrence G.},
  title = {Parallel changes in large-scale software development: an observational case study},
  journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume = {10},
  pages = {308--337},
  publisher = {ACM},
  year = {2001},
  month = jul,
  number = {3}}

@inproceedings{Perr87a,
  author = {Dewayne E. Perry},
  title = {Software Interconnection Models},
  booktitle = {Proceedings of 9th ICSE '87},
  pages = {61--69},
  year = {1987},
  address = {Monterrey CA, USA},
  month = mar}

@book{Perr88a,
  author = {Ronald H. Perrott},
  title = {Parallel Programming},
  publisher = {Addison Wesley},
  year = {1988},
  address = {Reading, Mass. Wokingham},
  series = {International computer science series}}

@inproceedings{Perr89a,
  author = {Dewayne E. Perry},
  title = {The Inscape Environment},
  booktitle = {In Proceedings of the 11th ICSE},
  pages = {2--12},
  year = {1989}}

@phdthesis{Perr91a,
  author = {Nigel Perry},
  title = {The Implementation of Practical Functional Programming Languages},
  year = {1991},
  school = {Imperial College},
  address = {London},
  type = {{Ph.D}. Thesis}}

@unpublished{Perr91b,
  author = {Nigel Perry},
  title = {Non-Strict Fpm --- {A} High Performance Lazy Abstract Machine},
  year = {1991},
  note = {Massey University, Ngz},
  type = {Draft}}

@unpublished{Perr91c,
  author = {Nigel Perry},
  title = {Towards a Concurrent Object/Process Oriented Functional Language},
  year = {1991},
  note = {Massey University, Ngz},
  type = {Draft}}

@article{Perr92a,
  author = {Dewayne E. Perry and Alexander L. Wolf},
  title = {Foundations for the Study of Software Architecture},
  journal = {ACM SIGSOFT Software Engineering Notes},
  volume = {17},
  pages = {40--52},
  year = {1992},
  url = {http://www.bell-labs.com/user/dep/work/papers/swa-sen.ps},
  month = oct,
  number = {4}}

@inproceedings{Perry87,
  author = {Perry, D E},
  title = {Software interconnection models},
  booktitle = {ICSE '87: Proceedings of the 9th international conference on Software Engineering},
  publisher = {IEEE Computer Society Press},
  year = {1987},
  month = mar}

@book{Pers08a,
  author = {Michael Perscheid and David Tibbe and Martin beck and Stefan Berger and Peter Osburg and Jeff Eastman and Michael Haupt and Robert Hirschfeld},
  title = {An Introduction to {Seaside} --- Developing Web applications with {Squeak} and {Seaside}},
  publisher = {Hasso Plattner Institut},
  year = {2008},
  url = {http://www.hpi.uni-potsdam.de/hirschfeld/misc/seaside/index.html},
  isbn = {978-3-00-023645-7}}

@inproceedings{Pers08b,
  author = {Person, Suzette and Dwyer, Matthew B. and Elbaum, Sebastian and P\v{a}s\v{a}reanu, Corina S.},
  title = {Differential symbolic execution},
  booktitle = {Proceedings of the 16th {ACM} {SIGSOFT} {International} {Symposium} on {Foundations} of software engineering},
  pages = {226--237},
  publisher = {Association for Computing Machinery},
  year = {2008},
  url = {https://doi.org/10.1145/1453101.1453131},
  abstract = {Detecting and characterizing the effects of software changes is a fundamental component of software maintenance. Version differencing information can be used to perform version merging, infer change characteristics, produce program documentation, and guide program re-validation. Existing techniques for characterizing code changes, however, are imprecise leading to unnecessary maintenance efforts. In this paper, we introduce a novel extension and application of symbolic execution techniques that computes a precise behavioral characterization of a program change. This technique, which we call differential symbolic execution (DSE), exploits the fact that program versions are largely similar to reduce cost and improve the quality of analysis results. We define the foundational concepts of DSE, describe cost-effective tool support for DSE, and illustrate its potential benefit through an exploratory study that considers version histories of two Java code bases.},
  keywords = {program differencing, software evolution, symbolic execution},
  month = nov,
  series = {{SIGSOFT} '08/{FSE}-16},
  urldate = {2021-07-01}}

@article{Pers17a,
  author = {Perscheid, Michael and Siegmund, Benjamin and Taeumel, Marcel and Hirschfeld, Robert},
  title = {Studying the advancement in debugging practice of professional software developers},
  journal = {Software Quality Journal},
  volume = {25},
  pages = {83--110},
  year = {2017},
  url = {https://doi.org/10.1007/s11219-015-9294-2},
  doi = {10.1007/s11219-015-9294-2},
  issn = {1573-1367},
  number = {1}}

@article{Peru21a,
  author = {Peruma, Anthony and Simmons, Steven and AlOmar, Eman Abdullah and Newman, Christian D. and Mkaouer, Mohamed Wiem and Ouni, Ali},
  title = {How do i refactor this? An empirical study on refactoring trends and topics in Stack Overflow},
  journal = {Empirical Software Engineering},
  volume = {27},
  year = {2021},
  doi = {10.1007/s10664-021-10045-x},
  number = {11}}

@article{Pete13a,
  author = {Peterson, Dwight J and Berryhill, Marian E},
  title = {The Gestalt principle of similarity benefits visual working memory},
  journal = {Psychonomic bulletin \& review},
  volume = {20},
  pages = {1282--1289},
  publisher = {Springer},
  year = {2013},
  number = {6}}

@article{Pete77a,
  author = {James L. Peterson},
  title = {Petri Nets},
  journal = {ACM Computing Surveys},
  volume = {9},
  pages = {223--252},
  year = {1977},
  doi = {10.1145/356698.356702},
  month = sep,
  number = {3}}

@book{Pete83a,
  author = {James L. Peterson},
  title = {Petri Nets Theory and the Modeling of Systems},
  publisher = {Prentice-Hall},
  year = {1983}}

@inproceedings{Pete89a,
  author = {L. Peterson and N. Hutchinson and S. O'Malley and M. Abbott},
  title = {RPC in the x-Kernel: evaluating new design techniques},
  booktitle = {SOSP '89: Proceedings of the twelfth ACM symposium on Operating systems principles},
  pages = {91--101},
  publisher = {ACM Press},
  year = {1989},
  doi = {10.1145/74850.74860},
  address = {New York, NY, USA},
  isbn = {0-89791-338-8}}

@article{Pete89b,
  author = {Larry L. Peterson and Nick C. Buchholz and Richard D. Schlichting},
  title = {Preserving and using context information in interprocess communication},
  journal = {ACM Trans. Comput. Syst.},
  volume = {7},
  pages = {217--246},
  publisher = {ACM Press},
  year = {1989},
  doi = {10.1145/65000.65001},
  address = {New York, NY, USA},
  issn = {0734-2071},
  number = {3}}

@article{Pete90a,
  author = {Larry Peterson and N. Hutchinson and Sean O'Malley and Herman Rao},
  title = {The x-kernel: A Platform for Accessing Internet Resources},
  journal = {Computer},
  volume = {23},
  pages = {23--33},
  publisher = {IEEE Computer Society Press},
  year = {1990},
  doi = {10.1109/2.53352},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {5}}

@misc{PetitPetri,
  author = {Oscar Nierstrasz and Markus Gaelli},
  title = {Petit{Petri} --- A {Petri} Net Editor built with {Etoys}},
  year = {2005},
  url = {http://scg.unibe.ch/download/petitpetri},
  abstract = {Petri nets are a well-known mathematical formalism
for modeling and reasoning about concurrency. This
web page provides an overview of a Squeak Etoys
implementation of a Petri net interpreter. First
download and install Etoys and download Petit Petri.
If you unzip the Petit Petri download you will find
several Etoys project files containing examples that
you can run. Simply start Etoys and drag and drop
any of these files onto the running Etoys images.},
  month = sep,
  note = {http://scg.unibe.ch/download/petitpetri}}

@inproceedings{Petr09a,
  author = {Petrenko, Maksym and Rajlich, V\'aclav},
  title = {Variable granularity for improving precision of impact analysis},
  booktitle = {{ICPC}},
  pages = {10-19},
  publisher = {IEEE Computer Society},
  year = {2009}}

@inproceedings{Petr17a,
  author = {Stefan, Petr and Horky, Vojtech and Bulej, Lubomir and Tuma, Petr},
  title = {Unit Testing Performance in Java Projects: Are We There Yet?},
  booktitle = {Proceedings of the 8th ACM/SPEC on International Conference on Performance Engineering},
  pages = {401-412},
  publisher = {Association for Computing Machinery},
  year = {2017},
  url = {https://doi.org/10.1145/3030207.3030226},
  doi = {10.1145/3030207.3030226},
  abstract = {Although methods and tools for unit testing of performance exist for over a decade, anecdotal evidence suggests unit testing of performance is not nearly as common as unit testing of functionality. We examine this situation in a study of GitHub projects written in Java, looking for occurrences of performance evaluation code in common performance testing frameworks. We quantify the use of such frameworks, identifying the most relevant performance testing approaches, and describe how we adjust the design of our SPL performance testing framework to follow these conclusions.},
  address = {New York, NY, USA},
  isbn = {9781450344043},
  keywords = {spl, survey, jmh, performance unit testing, open source},
  location = {L'Aquila, Italy},
  numpages = {12},
  series = {ICPE '17}}

@article{Petr19a,
  title={Swarm debugging: The collective intelligence on interactive debugging},
  author={Petrillo, Fabio and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Pimenta, Marcelo and Freitas, Carla Dal Sasso and Khomh, Foutse},
  journal={Journal of Systems and Software},
  volume={153},
  pages={152--174},
  year={2019},
  publisher={Elsevier}
}

@article{Petr95a,
  author = {Marian Petre},
  title = {Why looking isn't always seeing: Readership skills and graphical programming},
  journal = {Communications of the ACM},
  volume = {38},
  pages = {33--44},
  year = {1995},
  month = jun,
  number = {6}}

@book{Pett08,
  author = {Petticrew, Mark and Roberts, Helen},
  title = {Systematic reviews in the social sciences: A practical guide},
  publisher = {John Wiley \& Sons},
  year = {2008}}

@inproceedings{Petti90a,
  author = {Pettis, Karl and Hansen, Robert C.},
  title = {Profile guided code positioning},
  booktitle = {PLDI'90},
  year = {1990},
  keywords = {VM}}

@inproceedings{Pfa20a,
  author = {Pfahler, Federico and Minelli, Roberto and Nagy, Csaba and Lanza, Michele},
  title = {Visualizing evolving software cities},
  booktitle = {2020 Working Conference on Software Visualization (VISSOFT)},
  pages = {22--26},
  year = {2020},
  organization = {IEEE}}

@book{Pfaf85a,
  title = {User Interface Management Systems},
  publisher = {Springer-Verlag},
  year = {1985},
  address = {New York},
  editor = {G. Pfaff},
  note = {Proceedings of the IFIP/EG Workshop on User Interface Management Systems, Seeheim, FRG, Oct. 1983}}

@inproceedings{Pfei06a,
  author = {Pfeiffer, J.-Hendrik and Gurd, John R.},
  title = {Visualisation-based tool support for the development of aspect-oriented programs},
  booktitle = {AOSD '06: Proceedings of the 5th international conference on Aspect-oriented software development},
  pages = {146--157},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1119655.1119676},
  address = {New York, NY, USA},
  isbn = {1-59593-300-X},
  location = {Bonn, Germany}}

@inproceedings{Pfei11a,
   author={Pfeiffer, Rolf-Helge and W{\k{a}}sowski, Andrzej},
   booktitle={European Conference on Modelling Foundations and Applications},
   title={Taming the confusion of languages},
   year={2011},
   volume={},
   number={},
   pages={312-328},
   organization={Springer}
}

@inproceedings{Pfei12a,
  title={Texmo: A multi-language development environment},
  author={Pfeiffer, Rolf-Helge and W{\k{a}}sowski, Andrzej},
  booktitle={European Conference on Modelling Foundations and Applications},
  pages={178--193},
  year={2012},
  organization={Springer}
}

@inproceedings{Pham14a,
  author = {Pham, Raphael and Kiesling, Stephan and Liskin, Olga and Singer, Leif and Schneider, Kurt},
  title = {Enablers, inhibitors, and perceptions of testing in novice software teams},
  booktitle = {Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {30--40},
  year = {2014},
  organization = {ACM}}

@inproceedings{Phan05a,
  author = {Doantam Phan and Ling Xiao and Ron B. Yeh and Pat Hanrahan and Terry Winograd},
  title = {Flow Map Layout},
  booktitle = {INFOVIS},
  pages = {29},
  year = {2005},
  doi = {10.1109/INFOVIS.2005.13},
  bibsource = {DBLP, http://dblp.uni-trier.de}}

@inproceedings{Phan13a,
  author = {K. Y. Phang and J. S. Foster and M. Hicks},
  title = {Expositor: Scriptable time-travel debugging with first-class traces},
  booktitle = {2013 35th International Conference on Software Engineering ({ICSE})},
  pages = {352-361},
  year = {2013},
  doi = {10.1109/ICSE.2013.6606581},
  abstract = {We present Expositor, a new debugging environment that combines scripting and time-travel debugging to allow programmers to automate complex debugging tasks. The fundamental abstraction provided by Expositor is the execution trace, which is a time-indexed sequence of program state snapshots. Programmers can manipulate traces as if they were simple lists with operations such as map and filter. Under the hood, Expositor efficiently implements traces as lazy, sparse interval trees whose contents are materialized on demand. Expositor also provides a novel data structure, the edit hash array mapped trie, which is a lazy implementation of sets, maps, multisets, and multimaps that enables programmers to maximize the efficiency of their debugging scripts. We have used Expositor to debug a stack overflow and to unravel a subtle data race in Firefox. We believe that Expositor represents an important step forward in improving the technology for diagnosing complex, hard-to-understand bugs.},
  issn = {0270-5257},
  keywords = {program debugging;program diagnostics;Expositor;scriptable time-travel debugging;first-class traces;time-indexed sequence;program state snapshots;diagnosing complex;hard-to-understand bugs;Debugging;Data structures;Optimized production technology;Force;Computer bugs;Writing;Programming},
  month = {may}}

@inproceedings{Phen06a,
  author = {Sokhom Pheng and Clark Verbrugge},
  title = {Dynamic Data Structure Analysis for Java Programs},
  booktitle = {Proceedings of the 14th IEEE International Conference on Program Comprehension ({ICPC}'06)},
  pages = {191--201},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/{ICPC}.2006.20},
  address = {Washington, DC, USA},
  isbn = {0-7695-2601-2}}

@inproceedings{Phil03a,
  author = {Ilka Philippow and Detlef Streitferdt and Matthias Riebisch},
  title = {Design Pattern Recovery in Architectures for Supporting Product Line Development and Application},
  booktitle = {ECOOP workshop--Modeling Variability for Object-Oriented Product Lines},
  pages = {42-57},
  publisher = {BoD GmbH},
  year = {2003}}

@inproceedings{Phil11a,
  author = {Phillips, Shaun and Sillito, Jonathan and Walker, Rob},
  title = {Branching and Merging: An Investigation into Current Version Control Practices},
  booktitle = {Proceedings of the 4th International Workshop on Cooperative and Human Aspects of Software Engineering},
  pages = {9--15},
  publisher = {ACM},
  year = {2011},
  url = {http://doi.acm.org/10.1145/1984642.1984645},
  doi = {10.1145/1984642.1984645},
  acmid = {1984645},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0576-1},
  keywords = {branching, configuration management, integration, merging, parallel development, revision control, source control, version control},
  location = {Waikiki, Honolulu, HI, USA},
  numpages = {7},
  series = {CHASE '11}}

@inproceedings{Phil12a,
  author = {Phillips, Shaun and Ruhe, Guenther and Sillito, Jonathan},
  title = {Information needs for integration decisions in the release process of large-scale parallel development},
  booktitle = {Proceedings of the ACM 2012 conference on Computer Supported Cooperative Work},
  pages = {1371--1380},
  publisher = {ACM},
  year = {2012},
  isbn = {978-1-4503-1086-4},
  series = {CSCW'12}}

@article{Phil87a,
  author = {Iain Phillips},
  title = {Refusal Testing},
  journal = {Theoretical Computer Science},
  volume = {50},
  pages = {241--284},
  publisher = {North-Holland},
  year = {1987}}

@misc{Phoen18a,
  author = {Phoenix, Evan and Shirai, Brian and Davis, Ryan and Bussink, Dirkjan and others},
  title = {Rubinius--An Implementation of Ruby Using the Smalltalk-80 VM Design},
  year = {2018}}

@inproceedings{Picc01a,
  author = {Giacomo Piccinelli and Leonid Mokrushin},
  title = {Dynamic e-Service Composition in DySCo},
  booktitle = {ICDCSW '01: Proceedings of the 21st International Conference on Distributed Computing Systems},
  pages = {88},
  publisher = {IEEE Computer Society},
  year = {2001},
  address = {Washington, DC, USA},
  isbn = {0-7695-1080-9}}

@inproceedings{Picc13a,
  author = {Marco Piccioni and Carlo Alberto Furia and Bertrand Meyer},
  title = {An Empirical Study of {{API}} Usability},
  booktitle = {{IEEE/ACM} Symposium on Empirical Software Engineering and Measurement},
  year = {2013},
  doi = {10.1109/ESEM.2013.14}}

@inproceedings{Pier00a,
  author = {Benjamin C. Pierce and David N. Turner},
  title = {Pict: {A} Programming Language Based on the Pi-Calculus},
  booktitle = {Proof, Language and Interaction: Essays in Honour of Robin Milner},
  publisher = {{MIT} {Press}},
  year = {2000},
  editor = {G. Plotkin and C. Stirling and M. Tofte},
  isbn = {ISBN 0-262-16188-5},
  month = may}

@book{Pier02a,
  author = {Benjamin Pierce},
  title = {Types and Programming Languages},
  publisher = {The MIT Press},
  year = {2002},
  url = {http://www.cis.upenn.edu/~bcpierce/tapl/index.html}}

@inproceedings{Pier86a,
  author = {Kurt W. Piersol},
  title = {Object Oriented Spreadsheets: The Analytic Spreadsheet Package},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {385--390},
  year = {1986},
  month = nov}

@techreport{Pier89a,
  author = {Benjamin C. Pierce and Scott Dietzen and Spiro Michaylov},
  title = {Programming in Higher-Order Typed Lambda-Calculi},
  year = {1989},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/leap.ps.gz},
  institution = {Carnegie Mellon University},
  month = mar,
  type = {{CMU-CS-89-111}}}

@book{Pier91a,
  author = {Benjamin C. Pierce},
  title = {Basic Category Theory for Computer Scientists},
  publisher = {MIT Press},
  year = {1991},
  address = {Cambridge, Mass.},
  isbn = {0-521-42225-6}}

@techreport{Pier92a,
  author = {Benjamin C. Pierce},
  title = {F-Omega-Sub User's Manual Version 1.0},
  year = {1992},
  institution = {Computer Science Dept., University of Edinburgh},
  month = oct,
  type = {Documentation}}

@unpublished{Pier92d,
  author = {Benjamin C. Pierce and David N. Turner},
  title = {Statically Typed Multi-Methods via Partially Abstract Types},
  year = {1992},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/friendly.ps.gz},
  month = oct,
  note = {Computer Science Dept., University of Edinburgh},
  type = {Draft manuscript}}

@techreport{Pier92e,
  author = {Benjamin C. Pierce},
  title = {Intersection Types and Bounded Polymorphism},
  year = {1992},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/fmeet-tlca.ps.gz},
  institution = {Computer Science Dept., University of Edinburgh},
  month = mar,
  type = {ECS-LFCS-92-200}}

@techreport{Pier92f,
  author = {Benjamin C. Pierce},
  title = {OOrientierungstage Exercises and Solutions},
  year = {1992},
  institution = {Computer Science Dept., University of Edinburgh},
  month = oct,
  type = {Course Notes}}

@inproceedings{Pier93b,
  author = {Benjamin C. Pierce and Davide Sangiorgi},
  title = {Typing and Subtyping for Mobile Processes},
  booktitle = {Proceedings 8th {IEEE} Logics in Computer Science},
  pages = {376--385},
  year = {1993},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/pi.ps.gz},
  address = {Montreal, Canada},
  month = jun}

@inproceedings{Pier93c,
  author = {Benjamin C. Pierce},
  title = {Intersection Types and Bounded Polymorphism},
  booktitle = {Conference on Typed Lambda Calculi and Applications},
  pages = {346--360},
  year = {1993},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/fmeet-tlca.ps.gz},
  month = mar,
  note = {To appear in MSCS}}

@incollection{Pier93d,
  author = {Benjamin C. Pierce},
  title = {Mutable Objects},
  booktitle = {Working draft},
  publisher = {University of Edinburgh},
  year = {1993},
  misc = {May 29},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/mutable.ps.gz},
  month = may}

@techreport{Pier94a,
  author = {Benjamin C. Pierce},
  title = {{PICT}: An Experiment in Concurrent Language Design},
  year = {1994},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/pict},
  institution = {University of Edinburgh},
  month = mar,
  type = {PICT Version 3.6 tutorial}}

@article{Pier94b,
  author = {Benjamin C. Pierce and David N. Turner},
  title = {Simple Type-Theoretic Foundations for Object-Oriented Programming},
  journal = {Journal of Functional Programming},
  volume = {4},
  pages = {207--247},
  year = {1994},
  url = {ftp://ftp.cl.cam.ac.uk/users/bcp1000/oop.ps.Z},
  month = apr,
  number = {2}}

@inproceedings{Pier95a,
  author = {Benjamin C. Pierce and David N. Turner},
  title = {Concurrent Objects in a Process Calculus},
  booktitle = {Proceedings Theory and Practice of Parallel Programming (TPPP 94)},
  pages = {187--215},
  publisher = {Springer LNCS 907},
  year = {1995},
  url = {http://www.cl.cam.ac.uk/users/bcp1000/ftp/copc.ps.gz},
  address = {Sendai, Japan},
  editor = {Takayasu Ito and Akinori Yonezawa}}

@book{Pier95b,
  author = {Benjamin Pierce},
  title = {{PICT} User Manual Pict 3.6a},
  publisher = {University of Glasgow},
  year = {1995}}

@book{Pier95c,
  author = {Benjamin Pierce},
  title = {Programming in the {PI}-Calculus, Tutorial Notes for PiCT Version 3.6a},
  publisher = {University of Glasgow},
  year = {1995},
  month = may}

@techreport{Pier95d,
  author = {Benjamin C. Pierce},
  title = {Programming in the Pi-Calculus: An Experiment in Concurrent Language Design},
  year = {1995},
  url = {ftp://ftp.cl.cam.ac.uk/users/bcp1000/pict},
  institution = {Computer Laboratory, University of Cambridge, UK},
  month = may,
  note = {Tutorial Notes for Pict Version 3.6a},
  type = {Technical Report}}

@article{Pier96a,
  author = {Benjamin Pierce and Davide Sangiorgi},
  title = {Typing and subtyping for mobile processes},
  journal = {Mathematical Structures in Computer Science},
  volume = {6},
  pages = {409--454},
  year = {1996},
  month = oct,
  note = {An extended abstract in {\em Proc.\ LICS 93}, {IEEE} Computer Society Press.},
  number = {5}}

@techreport{Pier97a,
  author = {Benjamin C. Pierce and David N. Turner},
  title = {Pict: {A} Programming Language based on the Pi-Calculus},
  year = {1997},
  url = {http://www.cs.indiana.edu/hyplan/pierce/pierce/ftp/pict-design.ps.gz},
  institution = {Computer Science Department, Indiana University},
  month = mar,
  number = {CSCI 476},
  type = {Technical Report}}

@misc{PierUnixSecurity,
  author = {Lukas Renggli},
  title = {{Pier} {Unix} {Security}, an {Unix} file-system based security framework for {Pier}},
  year = {2006},
  url = {http://map.squeak.org/package/1ae18f4e-086a-46e3-83ff-72ab6673c382},
  key = {PierUnixSecurity},
  note = {http://map.squeak.org/package/1ae18f4e-086a-46e3-83ff-72ab6673c382}}

@inproceedings{Piess09a,
  author = {Dam, Mads and Jacobs, Bart and Lundblad, Andreas and Piessens, Frank},
  title = {Security Monitor Inlining for Multithreaded Java},
  booktitle = {ECOOP},
  publisher = {Springer-Verlag},
  year = {2009},
  month = {jul}}

@book{Pigo97a,
  author = {T. Pigoski},
  title = {Practical Software Maintenance. Best Practices Managing your Software Investment.},
  publisher = {John Wiley and Sons},
  year = {1997}}

@unpublished{Pike12a,
  author = {Rob Pike},
  title = {Go Concurrency Patterns},
  year = {2012},
  url = {https://talks.golang.org/2012/concurrency.slide},
  note = {Google I/O}}

@book{Pilo05a,
  author = {Dan Pilone},
  title = {UML 2.0},
  publisher = {O'Reilly},
  year = {2005}}

@inproceedings{Pim14a,
  author = {Pim\'as, Javier and Burroni, Javier and Richarte, Gerardo},
  title = {Design and implementation of Bee Smalltalk Runtime},
  booktitle = {International Workshop on Smalltalk Technologies},
  year = {2014},
  series = {IWST'14}}

@techreport{Pina11a,
title = {{DuSTM - Dynamic Software Upgrades using Software Transactional Memory}},
author = {de , Lu\'is Gabriel Ganchinho and Cachopo, Joao},
month = jun,
year = {2011},
institution = {INESC-ID},
abstract = {{Upgrading a running program without stopping it is increasingly important in a world where users have grown to expect zero downtime from software services. And yet, surprisingly, no capable system exists that fulfills this promise: Developing a dynamic software upgrade system has proved to be a very challenging task.
In this paper we present the design and implementation of a practical dynamic software upgrade system for Java that tackles some of the most difficult challenges in the implementation of such a system. Namely, how to provide programmers with a simple programming model for specifying the programs data conversion logic without incurring into unacceptable pauses during an upgrade.
Our solution uses a multiversioned Software Transactional Memory to allow software upgrades that occur atomically, concurrently with the execution of the program, and that convert the programs data lazily, as data is progressively accessed by the execution of the upgraded program.
We show that our lazy approach to software upgrades is able to upgrade a system without affecting significantly the maximum response time of the systems operations, whereas an immediate approach shows values of maximum response time up to three orders of magnitude higher.}},
language = {eng},
copyright = {metadata-only-access}
}

@inproceedings{Pina12a,
  author={Pina, Lu\'is and Cachopo, Joao},
  booktitle={2012 4th International Workshop on Hot Topics in Software Upgrades (HotSWUp)},
  title={Atomic Dynamic Upgrades using software transactional memory},
  year={2012},
  volume={},
  number={},
  pages={21-25},
  doi={10.1109/HotSWUp.2012.6226612}
}

@inproceedings{Pina13a,
  author = {Pina, Luis and Hicks, Michael},
  title = {Rubah: Efficient, General-purpose Dynamic Software Updating for Java.},
  booktitle = {International {W}orkshop on {H}ot {T}opics in {S}oftware {U}pgrades ({HotSWUp})},
  year = {2013}}

@inproceedings{Pina14a,
  author = {Lu\'is Pina and Lu\'is Veiga and Mickael Hicks},
  title = {Rubah: {DSU} for {J}ava on a stock {JVM}},
  booktitle = {International Conference on Object-Oriented Programming, Systems and Applications ({OOPSLA})},
  year = {2014}}

@book{Pink97a,
  author = {Steven Pinker},
  title = {How the Mind Works},
  publisher = {W. W. Norton},
  year = {1997}}

@unpublished{Pinn92a,
  author = {G. Michele Pinna and Axel Poign\'e},
  title = {On the Nature of Events},
  year = {1992},
  misc = {March 9},
  month = mar,
  note = {Gesellschaft f{\"u}r Mathematik und Datenverarbeitung},
  type = {Draft}}

@misc{Pinocchio,
  author = {Toon Verwaest},
  title = {Pinocchio --- an open system for language experimentation},
  year = {2009},
  url = {http://scg.unibe.ch/pinocchio},
  month = jun,
  note = {http://scg.unibe.ch/pinocchio}}

@book{Pins88a,
  author = {Lewis J. Pinson and Richard S. Wiener},
  title = {An Introduction to Object-Oriented Programming and {Smalltalk}},
  publisher = {Addison Wesley},
  year = {1988}}

@book{Pins91a,
  author = {Lewis J. Pinson and Richard S. Wiener},
  title = {Objective-C},
  publisher = {Addison Wesley},
  year = {1988}}

@inproceedings{Pint12a,
  author = {Pinto, Leandro Sales and Sinha, Saurabh and Orso, Alessandro},
  title = {Understanding Myths and Realities of Test-Suite Evolution},
  booktitle = {International Conference on Software Engineering},
  year = {2012}}

@techreport{Pint88a,
  author = {Xavier Pintado and Dennis Tsichritzis},
  title = {An Affinity Browser},
  pages = {51--60},
  year = {1988},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Active Object Environments}}

@inproceedings{Pint88b,
  author = {Xavier Pintado and Eugene Fiume},
  title = {Grafields: Field-Directed Dynamic Splines for Interactive Motion Control},
  booktitle = {Proceedings of Eurographics 1988 (North-Holland)},
  pages = {43--54},
  publisher = {North-Holland},
  year = {1988},
  address = {Nice},
  editor = {Duce and Jancene},
  month = sep}

@techreport{Pint89a,
  author = {Xavier Pintado and Dennis Tsichritzis},
  title = {Satellite: {A} Navigation Tool for Hypermedia},
  pages = {61--73},
  year = {1989},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Oriented Development}}

@inproceedings{Pint90a,
  author = {Xavier Pintado and Dennis Tsichritzis},
  title = {Satellite: {A} Visualization and Navigation Tool for Hypermedia},
  booktitle = {Proceedings of the ACM Conference on Office Information Systems (COIS), SIGOIS Bulletin},
  volume = {11},
  pages = {271--280},
  year = {1990},
  misc = {April 25-27},
  abstract = {Satellite is a visualization and navigation tool for
a hypermedia system. It is based on the concept of
affinity between objects; that is, a relationship
with an associated intensity. The user is presented
with a two dimensional map that provides a view of
the hypermedia environment where objects lying close
together have a greater affinity than those lying
further apart. The system provides different views
by allowing modification of the underlying measure
of affinity. The system is also able to track
dynamically the evolution of the objects'
relationships. Based on the affinity concept, we
develop new dynamic presentation techniques that do
not depend on the explicit display of links between
the nodes of the graph. The dynamic layout algorithm
that we present at the end of the paper is based on
these techniques and it allows for the display of
r{API}dly changing relationships between objects.},
  address = {Cambridge, Mass.},
  month = apr}

@techreport{Pint90b,
  author = {Xavier Pintado},
  title = {Selection and Exploration in an Object-Oriented Environment: The Affinity Browser},
  pages = {79--88},
  year = {1990},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/affinityBrowsing.pdf},
  abstract = {Reusability is widely believed to be a key to
improving software development productivity.
However, in practice, effective reuse is more an
achievement of good development environments than a
strategy for software development. It seems natural
that a reduction of the effort needed for reuse
should have a positive impact on reuse. Among the
various lines of attack that may lead to a reduction
of the reuse effort, we address the problem of
finding and understanding reusable functionality in
an object-oriented software environment. This paper
presents the Affinity Browser, a selection and
exploration tool based on the notion of affinity
between objects. The user is presented with a two
dimensional display where the objects are displayed
in such a way that their relative positions convey
their affinity i.e., objects lying closer together
are more strongly related than objects lying farther
apart. The browser provides for different views of
the relationships among objects. Each view is based
on a different measure of affinity and thus portrays
a different relationship. We discuss the rationale
behind the Affinity Browser tool and discuss the way
users can take advantage of it to understand the
functionality provided by a set of classes. The
Affinity Browser's ability to help understanding
relationships between objects will be illustrated by
two examples of view construction.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@techreport{Pint91a,
  author = {Xavier Pintado and Dennis Tsichritzis},
  title = {Fuzzy Relationships and Affinity Links},
  pages = {273--285},
  year = {1991},
  abstract = {In this paper we present affinity links as a
mechanism which combines some of the advantages of
the different ways that are commonly used to express
relationships. We define this mechanism in terms of
fuzzy relations. We introduce affinity contexts as a
way of expressing contexts of relationships on a set
of objects and we present operations that allow for
their combination. We outline Satellite, a tool for
the visualization and exploration of affinity
contexts. Satellite promotes navigation by
context-dependent proximity. The tool allows for the
simultaneous exploration of multiple contexts and is
able to track fast evolving relationships. We
provide examples of the usefulness of our approach
in the domains of object-oriented systems
development and Hypermedia environments.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@techreport{Pint91b,
  author = {Xavier Pintado},
  title = {Gluons: Connecting Software Components},
  pages = {73--83},
  year = {1991},
  abstract = {This paper presents an approach to software
construction that relies on the connection of
reusable components. The approach is derived from
the observation that a design framework plays a
central role in the reuse process in the sense that
both the design of applications and the design of
reusable components must follow the same design
discipline. The interaction between components is
mediated by an object: the gluon. Gluons are
attached to reusable components and they represent
the rights to a service provided by the component.
Gluons can be seen as coupons: once detached they
grant a service that can be exchanged among objects.
Gluons can also encapsulate an activity performed by
a set of cooperating components. With this approach,
the construction of applications can be seen as a
market where components that ask for services can
purchase rights from other components that offer
them.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  note = {Working paper},
  type = {Object Composition}}

@techreport{Pint92a,
  author = {Xavier Pintado and Betty Junod},
  title = {Gluons: Support for Software Component Cooperation},
  pages = {311--346},
  year = {1992},
  abstract = {This paper presents gluons as objects that mediate
software component cooperation. We discuss the
advantages of encapsulating inter-component
interaction inside a set of special objects. We
present the design of a hierarchy of gluon classes
that provide the support for the application domain
independent part of component interaction protocols.
As an example, we present the design of a financial
information framework and we discuss the role that
gluons play in the definition of the framework.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@techreport{Pint93a,
  author = {Xavier Pintado},
  title = {Advances in Information Visualisation Techniques},
  year = {1993},
  abstract = {The availability of affordable fast graphics
hardware will have a strong impact on the way people
deal with information. Highly interactive interfaces
relying on fast 2-dimensional bitmap operations, and
fast 3-dimensional image synthesis will soon become
available. This paper explores some new
representation techniques based on fast graphics
primitives. The first technique relies on fast a
chanel operations to visualize multiple
representation layers simultaneously. Each layer
being translucent allows to see layers that lay
behind it. The second technique is based on fast
3-dimensional image synthesis. The idea is that a
virtual camera allows for the visualization of a
world. The camera is controlled by a fuzzy
controller to which the user can specify its
interests with fuzzy logic rules based on linguistic
variables. This technique is well suited for the
visualisation of real time financial data.},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  note = {in preparation},
  type = {working paper}}

@techreport{Pint93b,
  author = {Xavier Pintado},
  title = {New Approaches for the Visualization of Financial Information},
  pages = {111--128},
  year = {1993},
  abstract = {The availability of affordable fast graphics
hardware will have considerable impact on the way
people deal with information. Highly interactive
interfaces relying on fast 2-dimensional bitmap
operations, and fast 3-dimensional image synthesis
are becoming available. This paper explores some new
representation techniques based on fast graphics
primitives. We present first financial information
radars as a flexible data representation technique
for financial information. The concept of
information radar takes inspiration on traditional
oscilloscopes and radars. Information radars are 2D
visualization tools that display multiple
superimposed translucent data representation layers.
Each representation layer being translucent allows
the layers that lay behind it to be seen. The radar
provides multiple interaction modes so that the user
can interact with the various layers either to
modify representations, to explore data
relationships, or to access other tools. Information
radars rely on fast a-channel operations to
visualize multiple representation layers
simultaneously. The second data representation
technique is based on fast 3-dimensional image
synthesis. The idea is that a virtual camera allows
for the visualization of a virtual world composed of
objects that exhibit dynamic behaviours. The camera
is driven by a fuzzy controller to which users can
specify viewing interests expressed as rules in
terms of fuzzy logic linguistic variables. The fuzzy
controller drives the movement of the camera so that
the camera shows what the user expressed interest
in. This technique is particularly well suited for
the visualization of real time financial data.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Visual Objects}}

@incollection{Pint93c,
  author = {Xavier Pintado},
  title = {Gluons: a Supprot for Software Component Cooperation},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {43--60},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {This paper presents \fIgluons\fR as objects that
mediate software component cooperation. We discuss
the advantages of encapsulating inter-component
interaction inside a set of special objects. We
present the design of a hierarchy of \fIgluon\fR
classes that provide the support for the application
domain independent part of component interaction
protocols. As an example, we present the design of a
financial information framework and we discuss the
role that \fIgluons\fR play in the definition of the
framework.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@incollection{Pint95a,
  author = {Xavier Pintado},
  title = {The Affinity Browser},
  booktitle = {Object-Oriented Software Composition},
  pages = {245--272},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {Large numbers of classes, complex inheritance and
containment graphs, and diverse patterns of dynamic
interaction all contribute to difficulties in
understanding, reusing, debugging, and tuning large
object-oriented systems. These difficulties may have
a significant impact on the usefulness of such
systems. Tools that help in understanding the
contents and behaviour of an object-oriented
environment should play a major role in reducing
such difficulties. Such tools allow for the
exploration of different aspects of a software
environment such as inheritance structures, part-of
relationships, etc. However, object-oriented systems
differ in many respects from traditional database
systems, and in particular, conventional querying
mechanisms used in databases show poor performance
when used for the exploration of objectoriented
environments. This chapter defines the requirements
for effective exploration mechanisms in the realm of
object-oriented environments. We propose an approach
to browsing based on the notion of affinity that
satisfies such requirements. Our tool, the affinity
browser, provides a visual representation of object
relationships presented in terms of affinity.
Objects that appear closer in the visual
representation are more strongly related than
objects lying farther apart. So, the intensity of a
relationship is translated into distance in the
visual representation that provides the support for
user navigation. We provide many examples of metrics
defined over the objects of an environment to
illustrate how object relationships can be
translated in terms of affinity so that they can be
used for the exploration of an environment.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@incollection{Pint95b,
  author = {Xavier Pintado},
  title = {Gluons and the Cooperation between Software Components},
  booktitle = {Object-Oriented Software Composition},
  pages = {321--349},
  publisher = {Prentice-Hall},
  year = {1995},
  url = {http://scg.unibe.ch/archive/oosc/index.html},
  abstract = {A major problem in software engineering is how to
specify the patterns of interaction among software
components so that they can be assembled to perform
tasks in a cooperative way. Such cooperative
assembly requires that components obey rules
ensuring their interaction compatibility. The choice
of a specific approach to specifying rules depends
on various criteria such as the kind of target
environment, the nature of the software components
or the kind of programming language. This chapter
reviews major efforts to develop and promote
standards that address this issue. We present our
own approach to the construction of a development
framework for software applications that make use of
real-time financial information. For this domain,
the two main requirements are (1) to facilitate the
integration of new components into an existing
system, and (2) to allow for the run-time
composition of software components.The goal of the
development framework is to provide dynamic
interconnection capabilities. The basic idea is to
standardize and reuse interaction protocols that are
encapsulated inside special objects called gluons.
These objects mediate the cooperation of software
components. We discuss the advantages of the
approach, and provide examples of how gluons are
used in the financial framework.},
  editor = {Oscar Nierstrasz and Dennis Tsichritzis}}

@inproceedings{Pinz02a,
  author = {Martin Pinzger and Michael Fischer and Harald Gall and Mehdi Jazayeri},
  title = {Revealer: A Lexical Pattern Matcher for Architecture Recovery},
  booktitle = {Proceedings of the 9th Working Conference on Reverse Engineering ({WCRE} 2002)},
  pages = {170--178},
  year = {2002},
  doi = {10.1109/{WCRE}.2002.1173075}}

@inproceedings{Pinz02b,
  author = {Martin Pinzger and Harald Gall},
  title = {Pattern-Supported Architecture Recovery},
  booktitle = {10th International Workshop on Program Comprehension (IWPC'02)},
  pages = {53--61},
  year = {2002},
  doi = {10.1109/WPC.2002.1021318}}

@inproceedings{Pinz04a,
  author = {Martin Pinzger and Harald Gall and Jean-Francois Girard and Jens Knodel and Claudio Riva and Wim Pasman and Chris Broerse and Jan Gerben Wijnstra},
  title = {Architecture Recovery for Product Families},
  booktitle = {Proceedings of the 5th International Workshop on Product Family Engineering (PFE-5)},
  volume = {3014},
  pages = {332--351},
  publisher = {Springer-Verlag},
  year = {2004},
  series = {LNCS}}

@inproceedings{Pinz05a,
  author = {Martin Pinzger and Harald Gall and Michael Fischer and Michele Lanza},
  title = {Visualizing Multiple Evolution Metrics},
  booktitle = {Proceedings of SoftVis 2005 (2nd ACM Symposium on Software Visualization)},
  pages = {67--75},
  year = {2005},
  address = {St. Louis, Missouri, USA},
  month = may}

@phdthesis{Pinz05b,
  author = {Martin Pinzger},
  title = {ArchView --- Analyzing Evolutionary Aspects of Complex Software Systems},
  year = {2005},
  school = {Vienna University of Technology}}

@article{Pinz05c,
  author = {Martin Pinzger and Harald Gall and Michael Fischer},
  title = {Towards an Integrated View on Architecture and its Evolution},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {127},
  pages = {183--196},
  year = {2005},
  number = {3}}

@inproceedings{Pire18a,
  author = {Pires, Joao and Brito e Abreu, Fernando},
  title = {Knowledge Discovery Metamodel-Based Unit Test Cases Generation},
  booktitle = {2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)},
  pages = {432-433},
  year = {2018},
  doi = {10.1109/ICST.2018.00056},
  month = apr}

@inproceedings{Pitt80a,
  author = {Kent Pitman},
  title = {Special Forms in Lisp},
  booktitle = {Proceedings of the 1980 ACM Conference on LISP and Functional Programming},
  pages = {179--197},
  year = {1980},
  url = {http://world.std.com/~pitman/Papers/Special-Forms.html},
  month = aug}

@article{Pitt93a,
  author = {Matthew Pittman},
  title = {Lessons Learned in Managing Object-Oriented Development},
  journal = {IEEE Software (Special Issue on "Making O-O Work")},
  volume = {10},
  pages = {43--53},
  year = {1993},
  month = jan,
  number = {1}}

@techreport{Pium06a,
  author = {Ian Piumarta},
  title = {Accessible Language-Based Environments of Recursive Theories (a white paper advocating widespread unreasonable behavior)},
  year = {2006},
  institution = {Viewpoints Research Institute},
  note = {VPRI Research Note RN-2006-001-a}}

@techreport{Pium06b,
  author = {Ian Piumarta and Alessandro Warth},
  title = {Open Reusable Object Models},
  year = {2006},
  institution = {Viewpoints Research Institute},
  note = {VPRI Research Note RN-2006-003-a}}

@inproceedings{Pium98a,
  author = {Piumarta, Ian and Riccardi, Fabio},
  title = {Optimizing Direct Threaded Code by Selective Inlining},
  booktitle = {Proceedings of the ACM SIGPLAN 1998 Conference on Programming Language Design and Implementation},
  pages = {291-300},
  publisher = {Association for Computing Machinery},
  year = {1998},
  url = {https://doi.org/10.1145/277650.277743},
  doi = {10.1145/277650.277743},
  abstract = {Achieving good performance in bytecoded language interpreters is difficult without sacrificing both simplicity and portability. This is due to the complexity of dynamic translation ("just-in-time compilation") of bytecodes into native code, which is the mechanism employed universally by high-performance interpreters.We demonstrate that a few simple techniques make it possible to create highly-portable dynamic translators that can attain as much as 70% the performance of optimized C for certain numerical computations. Translators based on such techniques can offer respectable performance without sacrificing either the simplicity or portability of much slower "pure" bytecode interpreters.},
  address = {New York, NY, USA},
  isbn = {0897919874},
  keywords = {threaded code, bytecode interpretation, just-in-time compilation, inlining, dynamic translation},
  location = {Montreal, Quebec, Canada},
  numpages = {10},
  series = {PLDI '98}}

@article{Plai08a,
  author = {John Plaice and Blanca Mancilla and Gabriel Ditu},
  title = {From Lucid to TransLucid: Iteration, Dataflow, Intensional and Cartesian Programming},
  journal = {Mathematics in Computer Science},
  volume = {788},
  pages = {37-61},
  publisher = {Birkh\"auser Basel},
  year = {2008},
  doi = {10.1007/s11786-008-0043-9},
  month = nov}

@article{Plai13a,
  author = {Plaisted, David A},
  title = {Source-to-source translation and software engineering},
  journal = {Journal of Software Engineering and Applications},
  publisher = {Scientific Research Publishing},
  year = {2013}}

@inproceedings{Plai21a,
  author = {Plaisted, David A and Barnett, Lee},
  title = {A term-rewriting semantics for imperative style programming: Summary},
  booktitle = {9th International Symposium on Symbolic Computation in Software Science (SCSS 2021), short and work-in-progress papers},
  pages = {40},
  year = {2021}}

@article{Plai95a,
  author = {Catherine Plaisant and David Carr and Ben Shneiderman},
  title = {Image-Browser Taxonomy and Guidelines for Designers},
  journal = {IEEE Software},
  pages = {21--32},
  year = {1995},
  month = mar}

@book{Plet96a,
  author = {Jonathan Pletzke},
  title = {Advanced {Smalltalk}},
  publisher = {Wiley Computer Publishing},
  year = {1996},
  isbn = {0-471-16350-3}}

@inproceedings{Plev94a,
  author = {John Pleviak and Andrew A. Chien},
  title = {Precise Concrete Type Inference for Object-Oriented Languages},
  booktitle = {International {C}onference on {O}bject-{O}riented {P}rogramming, {S}ystems, {L}anguages, and {A}pplications ({OOPSLA}'94)},
  pages = {324--340},
  year = {1994}}

@inproceedings{Plos97a,
  author = {R. Plosh},
  title = {Design by Contract for Python},
  booktitle = {IEEE Proceedings of the Joint Asia Pacific Software Engineering Conference (APSEC97/ICSC97)},
  year = {1997}}

@book{Plot00a,
  title = {Proof, Language and Interaction},
  publisher = {The MIT Press},
  year = {2000},
  editor = {Gordon Plotkin, Colin Stirling and Mads Tofte}}

@techreport{Plot81a,
  author = {Gordon Plotkin},
  title = {A Structural Approach to Operational Semantics},
  year = {1981},
  institution = {University of Aarhus, Denmark}}

@inproceedings{Pluq06a,
  author = {Fr\'ed\'eric Pluquet and Roel Wuyts},
  title = {Evolution Persistence For Objects},
  booktitle = {Proceedings of the ERCIM Working Group on Software Evolution (2006)},
  year = {2006}}

@inproceedings{Pluq08a,
  author = {Fr\'ed\'eric Pluquet and Stefan Langerman and Antoine Marot and Roel Wuyts},
  title = {Implementing Partial Persistence in Object-Oriented Languages},
  booktitle = {Proceedings of the Workshop on Algorithm Engineering and Experiments, ALENEX 2008, San Francisco, California, USA, January 19, 2008},
  publisher = {ACM-SIAM},
  year = {2008}}

@inproceedings{Pluq09a,
  author = {Pluquet, Fr\'{e}d\'{e}ric and Marot, Antoine and Wuyts, Roel},
  title = {Fast type reconstruction for dynamically typed programming languages},
  booktitle = {{D}ynamic {L}anguages {S}ymposium ({DLS})},
  pages = {69--78},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1640134.1640145},
  address = {New York, NY, USA},
  isbn = {978-1-60558-769-1},
  location = {Orlando, Florida, USA}}

@inproceedings{Pluq09b,
  author = {Fr\'ed\'eric Pluquet andStefan Langerman and Roel Wuyts},
  title = {Executing Code in the Past: Efficient In-Memory Object Graph Versioning},
  booktitle = {International {C}onference on {O}bject-{O}riented {P}rogramming, {S}ystems, {L}anguages, and {A}pplications ({OOPSLA}'09)},
  pages = {391--408},
  publisher = {ACM},
  year = {2009}}

@inproceedings{Pnue85a,
  author = {Amir Pnueli},
  title = {Linear and Branching Structures in the Semantics and Logics of Reactive Systems},
  booktitle = {Proceedings ICALP '85},
  volume = {194},
  pages = {15--32},
  publisher = {Springer-Verlag},
  year = {1985},
  address = {Nafplion},
  editor = {W. Brauer},
  month = jul,
  series = {LNCS}}

@inproceedings{Pnuel98a,
  author = {Pnueli, Amir and Siegel, Michael and Singerman, Eli},
  title = {Translation Validation},
  booktitle = {Tools and Algorithms for Construction and Analysis of Systems},
  publisher = {Springer-Verlag},
  year = {1998},
  numpages = {16},
  series = {TACAS '98}}

@inproceedings{Podg03a,
  author = {Podgurski, Andy and Leon, David and Francis, Patrick and Masri, Wes and Minch, Melinda and Sun, Jiayang and Wang, Bin},
  title = {Automated support for classifying software failure reports},
  booktitle = {ICSE '03: Proceedings of the 25th International Conference on Software Engineering},
  pages = {465--475},
  publisher = {IEEE Computer Society},
  year = {2003},
  address = {Washington, DC, USA},
  isbn = {0-7695-1877-X},
  location = {Portland, Oregon}}

@inproceedings{Poep20a,
  author = {Sebastian Poeplau and Aur\'elien Francillon},
  title = {Symbolic execution with {SymCC}: Don't interpret, compile!},
  booktitle = {29th {USENIX} Security Symposium},
  pages = {181--198},
  publisher = {{USENIX} Association},
  year = {2020},
  address = {Boston, MA},
  isbn = {978-1-939133-17-5},
  month = aug}

@inproceedings{Poep21a,
  author = {Poeplau, Sebastian and Francillon, Aur\'elien},
  title = {{SymQEMU}: Compilation-based symbolic execution for binaries},
  booktitle = {Network and Distributed System Security Symposium},
  year = {2021},
  month = feb,
  organization = {Network \& Distributed System Security Symposium}}

@book{Pohl05a,
  author = {Klaus Pohl and G\"unter B\"ockle and Frank van der Linden},
  title = {Software Product Line Engineering: Foundations, Principles and Techniques},
  publisher = {Springer, Berlin Heidelberg New York},
  year = {2005},
  isbn = {3-540-24372-0}}

@inproceedings{Poli11a,
  author = {Politz, Joe Gibbs and Eliopoulos, Spiridon Aristides and Guha, Arjun and Krishnamurthi, Shriram},
  title = {ADsafety: type-based verification of JavaScript Sandboxing},
  booktitle = {Proceedings of the 20th USENIX conference on Security},
  pages = {12--12},
  publisher = {USENIX Association},
  year = {2011},
  url = {http://dl.acm.org/citation.cfm?id=2028067.2028079},
  acmid = {2028079},
  address = {Berkeley, CA, USA},
  location = {San Francisco, CA},
  numpages = {1},
  series = {SEC'11}}

@inproceedings{Polo01a,
  author = {Macario Polo and Mario Piattini and Francisco Ruiz},
  title = {Using Code Metrics to Predict Maintenance of Legacy Programs: A Case Study},
  booktitle = {{ICSM}},
  pages = {202-208},
  year = {2001},
  url = {http://computer.org/proceedings/ICSM/1189/11890202abs.htm},
  bibsource = {DBLP, http://dblp.uni-trier.de}}

@inproceedings{Poly13a,
  title={Detecting cross-language dependencies generically},
  author={Polychniatis, Theodoros and Hage, Jurriaan and Jansen, Slinger and Bouwers, Eric and Visser, Joost},
  booktitle={2013 17th European Conference on Software Maintenance and Reengineering},
  pages={349--352},
  year={2013},
  organization={IEEE}
}

@inproceedings{Pomb94a,
  author = {G. Pomberger and W. Pree},
  title = {Quantitative and Qualitative Aspects of Object-Oriented Software Development},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {96--107},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@article{Pond88a,
  author = {Ponder, Carl and Fateman, Richard J.},
  title = {Inaccuracies in program profilers},
  journal = {Software: Practice and Experience},
  volume = {18},
  pages = {459-467},
  year = {1988},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.4380180506},
  doi = {https://doi.org/10.1002/spe.4380180506},
  abstract = {Abstract Run-time program profiling is a valuable tool in understanding software efficiency. Techniques for obtaining profiles make assumptions that may result in misleading data. In the paper we illustrate flaws in two profiling systems: the Unix 'Gprof' family (including the packages 'monitor', 'prof' and 'profil'), and the TI Explorer metering package for Lisp.},
  eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.4380180506},
  keywords = {Execution profiling, Run-time performance evaluation, Timing, Call-graph, Optimization},
  number = {5}}

@inproceedings{Pong13a,
  author = {Ponge, Julien and Le Mou{\"e}l, Fr{\'e}d{\'e}ric and Stouls, Nicolas},
  title = {{Golo, a Dynamic, Light and Efficient Language for Post-Invokedynamic JVM}},
  booktitle = {{PPPJ - International Conference on Principles and Practices of Programming on the Java platform: virtual machines, lamguages and tools - 2013}},
  publisher = {{ACM}},
  year = {2013},
  url = {https://hal.inria.fr/hal-00848514},
  doi = {10.1145/2500828.2500844},
  pdf = {https://hal.inria.fr/hal-00848514/file/golo-pppj13.pdf},
  address = {Stuttgart, Germany},
  month = sep}

@inproceedings{Poni06a,
  author = {Laura Ponisio and Oscar Nierstrasz},
  title = {Using Context Information to Re-architect a System},
  booktitle = {Proceedings of the 3rd Software Measurement European Forum 2006 (SMEF'06)},
  pages = {91--103},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Poni06aSimulatedAnnealing.pdf},
  abstract = {Successful software systems cope with complexity by
organizing classes into packages. However, a
particular organization may be neither
straightforward nor obvious for a given developer.
As a consequence, classes can be misplaced, leading
to duplicated code and ripple effects with minor
changes effecting multiple packages. We claim that
contextual information is the key to rearchitecture
a system. Exploiting contextual information, we
propose a technique to detect misplaced classes by
analyzing how client packages access the classes of
a given provider package. We define locality as a
measure of the degree to which classes reused by
common clients appear in the same package. We then
use locality to guide a simulated annealing
algorithm to obtain optimal placements of classes in
packages. The result is the identification of
classes that are candidates for relocation. We apply
the technique to three applications and validate the
usefulness of our approach via developer
interviews.},
  cvs = {AlchemistSimulatedAnnealingSMEF06},
  medium = {2}}

@techreport{Poni06b,
  author = {Laura Ponisio and Oscar Nierstrasz},
  title = {Using Contextual Information to Assess Package Cohesion},
  year = {2006},
  url = {http://scg.unibe.ch/archive/papers/Poni06bAlchemistPackageCohesion.pdf},
  abstract = {Complex systems are decomposed into cohesive
packages with the goal of limiting the scope of
changes: if our packages are cohesive, we hope that
changes will be limited to the packages responsible
for the features we are changing, or at worst the
packages that are immediate clients of those
features. But how should we measure cohesion?
Traditional cohesion metrics focus on the explicit
dependencies and interactions between the classes
within the package under study. A package, however,
may be conceptually cohesive even though its classes
exhibit no explicit dependencies. We propose a group
of contextual metrics that assess the cohesion of a
package based on the degree to which its classes are
used together by common clients. We apply these
metrics to various case studies, and contrast the
degree of cohesion detected with that of traditional
cohesion metrics. In particular, we note that
object-oriented frameworks may appear not to be
cohesive with traditional metrics, whereas our
contextual metrics expose the implicit cohesion that
results from the framework's clients.},
  institution = {University of Bern, Institute of Applied Mathematics and Computer Sciences},
  number = {IAM-06-002},
  type = {Technical Report}}

@phdthesis{Poni06c,
  author = {Mar\'ia Laura Ponisio},
  title = {Exploiting Client Usage to Manage Program Modularity},
  pages = {113},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/ponisio-phd.pdf},
  abstract = {Over the last thirty years designers have tried to
cope with software complexity by organizing system
entities into modules, i.e. groups of entities.
However, the creation and organization of modules is
not straightforward. The criterion with which these
modules are built impacts in the maintainability and
development of the system. Designers have different
interests and personal views of the same system,
views that are difficult to communicate and to
extract from the code. Poor understanding of this
organization increases the complexity of the system
e.g. by favoring the addition of duplication and of
unexpected rippling effects. This, in turn, lowers
the flexibility of the system to changing
requirements and leads to a sharp increase in their
maintenance cost. To overcome these problems, we
present a methodology to manage the locality in
object-oriented systems. We develop a model that
exploits the contextual information, i.e. the way
objects are used by their clients, to understand and
improve the organization of classes in the system.
With our model we take full advantage of the
contextual information of modules to evaluate their
cohesion, find misplaced classes, detect hot spots
and find the different views that its clients have.
In our experimental validation we apply the
contextual information to understand, maintain and
describe systems. Our methodology is applied
successively together with metrics, visualization
techniques, and an optimization method named
simulated annealing to reverse-engineer
object-oriented systems. All in all, we provide a
methodology to understand and improve the
modularization of object-oriented systems, in an
effort towards simplicity.},
  address = {Bern},
  cvs = {LPonisioPhD},
  month = jun}

@incollection{Pont91a,
  author = {Lars Ponten},
  title = {Reuse in Software Engineering},
  booktitle = {REBOOT '91},
  publisher = {ESPRIT},
  year = {1991}}

@book{Pool99a,
  author = {Rob Pooley and Perdita Stevens},
  title = {Using UML, Software Engineering with Objects and Components},
  publisher = {Addison Wesley},
  year = {1999}}

@inproceedings{Pop05a,
  author = {Adrian Pop and Peter Fritzson},
  title = {Debugging natural semantics specifications},
  booktitle = {AADEBUG'05: Proceedings of the sixth international symposium on Automated analysis-driven debugging},
  pages = {77--82},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1085130.1085140},
  address = {New York, NY, USA},
  isbn = {1-59593-050-7},
  location = {Monterey, California, USA}}

@inproceedings{Popa04a,
  author = {Popa, Lucian and Raiciu, Costin and Teodorescu, Radu and Athanasiu, Irina and Pandey, Raju},
  title = {Using Code Collection to Support Large Applications on Mobile Devices},
  booktitle = {Proceedings of the 10th Annual International Conference on Mobile Computing and Networking},
  pages = {16--29},
  publisher = {ACM},
  year = {2004},
  url = {http://doi.acm.org/10.1145/1023720.1023723},
  doi = {10.1145/1023720.1023723},
  acmid = {1023723},
  address = {New York, NY, USA},
  isbn = {1-58113-868-7},
  keywords = {caching, code collection, garbage collection},
  location = {Philadelphia, PA, USA},
  numpages = {14},
  series = {MobiCom '04}}

@inproceedings{Popo01a,
  author = {Andrei Popovici and Gustavo Alonso and Thomas Gross},
  title = {Just-in-time aspects: efficient dynamic weaving for {Java}},
  booktitle = {Proceedings of the 2nd international conference on Aspect-oriented software development},
  pages = {100--109},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/643603.643614},
  isbn = {1-58113-660-9},
  location = {Boston, Massachusetts}}

@techreport{Popo01b,
  author = {Andrei Popovici and Thomas Gross and Gustavo Alonso},
  title = {Dynamic Homogenous {AOP} with {PROSE}},
  year = {2001},
  address = {Zurich},
  institution = {Department of Computer Science, Federal Institute of Technology},
  month = aug,
  type = {Technical Report}}

@inproceedings{Popo02a,
  author = {Andrei Popovici and Thomas Gross and Gustavo Alonso},
  title = {Dynamic weaving for aspect-oriented programming},
  booktitle = {Proceedings of the 1st international conference on Aspect-oriented software development},
  pages = {141--147},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/508386.508404},
  isbn = {1-58113-469-X},
  location = {Enschede, The Netherlands}}

@inproceedings{Porr03a,
  author = {Ivan Porres and Turku Centre and Computer Science},
  title = {Model Refactorings as Rule-Based Update Transformations},
  booktitle = {9th International Conference on the Unified Modeling Language},
  pages = {159--174},
  year = {2003}}

@inproceedings{Porr17a,
  author = {S. Porru and A. Pinna and M. Marchesi and R. Tonelli},
  title = {Blockchain-oriented software engineering: challenges and new directions},
  booktitle = {Proceedings of the 39th International Conference on Software Engineering Companion},
  pages = {169-171},
  year = {2017}}

@article{Port80a,
  author = {Martin F. Porter},
  title = {An algorithm for suffix stripping},
  journal = {Program},
  volume = {14},
  pages = {130--137},
  year = {1980},
  number = {3}}

@techreport{Port96a,
  author = {Nicole Portmann},
  title = {Datenbank Impfstoffnebenwirkungen},
  year = {1996},
  url = {http://scg.unibe.ch/archive/projects/Port96a.pdf},
  abstract = {Ziel des Projekts ist die Erstellung einer Datenbank
\"uber Impfstoffnebenwirkungen f\"ur das Institut
f\"ur Sozial- und Pr\"aventivmedizin (ISPM) im
Auftrag des Bundesamtes f\"ur Gesundheitswesen
(BAG). Aufgrund der neuen Verordnung vom 24. 3. 1993
\"uber immunbiologische Erzeugnisse, sind die
Hersteller von Impfstoffen k\"unftig verpflichtet
Nebenwirkungen ihrer Produkte dem BAG zu melden. Das
BAG seinerseits hat die Aufgabe die eingehenden
Meldungen von Herstellern, \"Arzten und den anderen
Meldestellen zu registrieren und Ausk\"unfte zu
erteilen. Insbesondere sollen die Sicherheit von
Impfstoffen gew\"ahrleistet werden, Risikopatienten
identifiziert werden k\"onnen und allf\"allige
Interaktionen mit andern Impfstoffen oder
Medikamenten festgestellt werden k\"onnen. Da bis
anhin nur allgemeine Arzneimittelnebenwirkungen von
der Interkantonalen Kontrollstelle (IKS) registriert
wurden, konnte nicht auf ein bereits bestehendes
System zur\"uckgegriffen werden. Die Datenbank ist
speziell auf die Eigenheiten von Impfstoffen
zugeschnitten.},
  institution = {University of Bern},
  month = aug,
  type = {Informatikprojekt}}

@inproceedings{Posh06a,
  author = {Denys Poshyvanyk and Andrian Marcus and Giuliano Antoniol and Vaclav Rajlich},
  title = {Combining Probabilistic Ranking and Latent Semantic Indexing for Feature Identification},
  booktitle = {Proceedings of the 2nd international conference on program comprehension ({ICPC})},
  publisher = {ACM Press},
  year = {2006},
  location = {Athens, Greece}}

@inproceedings{Posh07a,
  author = {Poshyvanyk, Denys and Marcus, Andrian},
  title = {Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code},
  booktitle = {{ICPC} '07: Proceedings of the 15th IEEE International Conference on Program Comprehension},
  pages = {37--48},
  publisher = {IEEE Computer Society},
  year = {2007},
  url = {http://dx.doi.org/10.1109/{ICPC}.2007.13},
  doi = {10.1109/{ICPC}.2007.13},
  address = {Washington, DC, USA},
  citeulike-article-id = {6609657},
  isbn = {0-7695-2860-0},
  posted-at = {2010-02-01 02:27:22},
  priority = {0}}

@article{Posh09a,
  author = {Poshyvanyk, Denys and Marcus, Andrian and Ferenc, Rudolf and Gyim\'{o}thy, Tibor},
  title = {Using Information Retrieval based Coupling Measures for Impact Analysis},
  journal = {Empirical Software Engineering},
  volume = 14,
  pages = {5--32},
  year = {2009},
  month = feb,
  number = 1}

@inproceedings{Pota04a,
  author = {Alex Potanin and James Noble and Robert Biddle},
  title = {Snapshot Query-Based Debugging},
  booktitle = {Proceedings of the 2004 Australian Software Engineering Conference (ASWEC'04)},
  pages = {251},
  publisher = {IEEE Computer Society},
  year = {2004},
  address = {Washington, DC, USA},
  isbn = {0-7695-2089-8}}

@article{Pota05a,
  author = {Alex Potanin and James Noble and Marcus Frean and Robert Biddle},
  title = {Scale-free Geometry in {OO} Programs},
  journal = {Communications of the ACM},
  volume = {48},
  pages = {99--103},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1060710.1060716},
  issn_isbn = {ISSN 0001-0782},
  month = may,
  number = {5}}

@inproceedings{Potd14a,
  author = {Potdar, Aniket and Shihab, Emad},
  title = {An Exploratory Study on Self-Admitted Technical Debt},
  booktitle = {2014 IEEE International Conference on Software Maintenance and Evolution},
  pages = {91-100},
  year = {2014},
  doi = {10.1109/ICSME.2014.31}}

@article{Poth07a,
  author = {Guillaume Pothier and \'Eric Tanter and Jos\'e Piquer},
  title = {Scalable Omniscient Debugging},
  journal = {Proceedings of the Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA'07)},
  volume = {42},
  pages = {535--552},
  publisher = {ACM Press},
  year = {2007},
  doi = {10.1145/1297105.1297067},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {10}}

@inproceedings{Poth08a,
  author = {Guillaume Pothier and {\'E}ric Tanter},
  title = {Extending Omniscient Debugging to Support Aspect-Oriented Programming},
  booktitle = {Proceedings of Symposium on Applied Computing (SAC'08)},
  volume = 1,
  pages = {266--270},
  year = {2008},
  url = {http://pleiad.dcc.uchile.cl/papers/2008/pothierTanter-sac2008.pdf},
  doi = {10.1145/1363686.1363753},
  address = {Fortaleza, Cear{\'a}, Brazil},
  month = mar,
  software = {tod}}

@article{Poth09a,
  author = {Guillaume Pothier and {\'E}ric Tanter},
  title = {Back to the Future: Omniscient Debugging},
  journal = {IEEE Software},
  volume = {26},
  pages = {78-85},
  publisher = {IEEE Computer Society},
  year = {2009},
  doi = {10.1109/MS.2009.169},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  number = {6}}

@inproceedings{Poth11a,
  author = {Pothier, Guillaume and Tanter, {\'E}ric},
  title = {Summarized trace indexing and querying for scalable back-in-time debugging},
  booktitle = {European Conference on Object-Oriented Programming},
  pages = {558--582},
  year = {2011},
  organization = {Springer}}

@article{Pott96a,
  author = {Colin Potts},
  title = {{Software}-{Engineering} {Research} {Revisited}},
  journal = {IEEE Software},
  volume = {10},
  pages = {19--28},
  publisher = {IEEE Computer Society},
  year = {1993},
  month = sep,
  number = {5}}

@inproceedings{Pott98a,
  author = {J. Potter and J. Noble and D. Clarke},
  title = {The Ins and Outs of Objects},
  booktitle = {Proceedings of the Australian Software Engineering Conference (ASWEC'98)},
  pages = {80},
  publisher = {IEEE Computer Society},
  year = {1998},
  address = {Washington, DC, USA},
  isbn = {0-8186-9187-5}}

@inproceedings{Poul17a,
  author = {Simon M. Poulding and Robert Feldt},
  title = {Generating Controllably Invalid and Atypical Inputs for Robustness Testing},
  booktitle = {{IEEE} International Conference on Software Testing, Verification and Validation Workshops},
  pages = {81--84},
  year = {2017},
  url = {https://doi.org/10.1109/ICSTW.2017.21},
  doi = {10.1109/ICSTW.2017.21}}

@inproceedings{Pour07a,
  author = {Frederic Pourraz and Herve Verjus},
  title = {Diapason: an Engineering Environment for Designing, Enacting and Evolving Service-Oriented Architectures},
  booktitle = {International Conference on Software Engineering Advances (ICSEA 2007)},
  publisher = {IEEE Computer Society},
  year = {2007}}

@inproceedings{Pour07b,
  author = {Frederic Pourraz and Herve Verjus},
  title = {Diapason: an Engineering Environment for Designing, Enacting and Evolving Service-Oriented Architectures},
  booktitle = {International Conference on Software Engineering Advances (ICSEA 2007)},
  pages = {23-30},
  publisher = {IEEE Computer Society},
  year = {2007}}

@inbook{Pour08a,
  author = {Frederic Pourraz and Herve Verjus},
  title = {Managing Service-Based EAI Architectures Evolution Using a Formal Architecture-Centric Approach},
  booktitle = {Enterprise Information Systems VIII},
  pages = {269-280},
  publisher = {Springer-Verlag},
  year = {2008}}

@book{Powe99a,
  author = {Bruce Powel Douglass},
  title = {Real-Time {UML}},
  publisher = {Addison Wesley},
  year = {1999},
  edition = {Second}}

@inproceedings{Pras90a,
  author = {Sanjiv Prasad and Alessandro Giacalone and Prateek Mishra},
  title = {Operational and Algebraic Semantics for Facile: {A} Symmetric Integration of Concurrent and Functional Programming},
  booktitle = {Proceedings ICALP '90},
  volume = {443},
  pages = {765--780},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Warwick U.},
  editor = {M.S. Paterson},
  month = jul,
  series = {LNCS}}

@inproceedings{Pras91a,
  author = {K.V.S. Prasad},
  title = {A Calculus of Broadcasting Systems},
  booktitle = {Proceedings TAPSOFT '91},
  volume = {493},
  pages = {338--358},
  publisher = {Springer-Verlag},
  year = {1991},
  editor = {S. Abramsky and T. Maibaum},
  series = {LNCS}}

@inproceedings{Prat04a,
  author = {Polyvios Pratikakis and Jaime Spacco and Michael Hicks},
  title = {Transparent proxies for {Java} futures},
  booktitle = {International {C}onference on {O}bject-{O}riented {P}rogramming, {S}ystems, {L}anguages, and {A}pplications ({OOPSLA}'04)},
  pages = {206--223},
  publisher = {ACM Press},
  year = {2004},
  url = {https://drum.umd.edu/dspace/bitstream/1903/1347/1/CS-TR-4574.pdf},
  doi = {10.1145/1028976.1028994},
  address = {New York, NY, USA},
  isbn = {1-58113-831-9},
  location = {Vancouver, BC, Canada}}

@techreport{Prec00a,
  author = {Lutz Prechelt and Guido Malpohl and Michael Philippsen},
  title = {{JPlag}: Finding Plagiarism Among a Set of Programs},
  year = {2000},
  url = {http://wwwipd.ira.uka.de/~prechelt/Biblio/},
  institution = {Universit{\"a}t Karlsruhe, Fakult{\"a}t f{\"u}r Informatik},
  month = mar,
  number = {2000-1}}

@misc{Prec00b,
  author = {Lutz Prechelt and Guido Malpohl and Michael Philippsen},
  title = {Finding plagiarisms among a set of programs with {JPlag}},
  year = {2000},
  url = {http://citeseer.ist.psu.edu/article/prechelt01finding.html},
  annotate = {Resubmitted to Journal of Universal Computer Science}}

@article{Prec98a,
  author = {Lutz Prechelt and Christian Kr{\"a}mer},
  title = {Functionality versus Practicality: Employing Existing Tools for Recovering Structural Design Patterns},
  journal = {Journal of Universal Computer Science},
  volume = {4},
  pages = {866--882},
  year = {1998},
  month = dec,
  number = {12}}

@inproceedings{Pree94a,
  author = {Wolfgang Pree},
  title = {Meta Patterns --- {A} Means for Capturing the Essentials of Reusable Object-Oriented Design},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {150--162},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@incollection{Pree95a,
  author = {Wolfgang Pree},
  title = {Framework Development and Reuse Support},
  booktitle = {Visual Object-Oriented Programming},
  pages = {253--268},
  publisher = {Manning Publishing Co.},
  year = {1995},
  editor = {Margaret M. Burnett and Adele Goldberg and Ted G. Lewis}}

@book{Pree95b,
  author = {Wolfgang Pree},
  title = {Design Patterns for Object-Oriented Development},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-42294-8}}

@inproceedings{Preh97a,
  author = {Christian Prehofer},
  title = {Feature-Oriented Programming: {A} Fresh Look at Objects},
  booktitle = {Proceedings ECOOP '97},
  volume = 1241,
  pages = {419--443},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Jyv{\"a}skyl{\"a}},
  editor = {Mehmet Aksit and Satoshi Matsuoka},
  isbn = {3-540-63089-9},
  month = jun,
  series = {LNCS}}

@unpublished{Prei00a,
  author = {Otto Preiss},
  title = {Fictitious Requirements of a Component Repository},
  year = {2000},
  month = apr,
  note = {ABB internal draft, SECCOS-FS-0007}}

@inproceedings{Prem11a,
  author = {Premraj, Rahul and Tang, Antony and Linssen, Nico and Geraats, Hub and van Vliet, Hans},
  title = {To branch or not to branch?},
  booktitle = {Proceedings of the 2011 International Conference on Software and Systems Process},
  pages = {81--90},
  publisher = {ACM},
  year = {2011},
  isbn = {978-1-4503-0730-7},
  series = {ICSSP'11}}

@article{Prem94a,
  author = {William J. Premerlani and Michael R. Blaha},
  title = {An Approach for Reverse Engineering of Relational Databases},
  journal = {Communications of the ACM},
  volume = {37},
  pages = {42--49},
  year = {1994},
  month = may,
  number = {5}}

@book{Pres94a,
  author = {Roger S. Pressman},
  title = {Software Engineering: A Practitioner's Approach},
  publisher = {McGraw-Hill},
  year = {1994},
  isbn = {0-07-707936-1}}

@book{Pres99a,
  author = {W. Curtis Preston},
  title = {Unix Backup and Recovery},
  publisher = {O'Reilly},
  year = {1999}}

@inproceedings{Pret10a,
  author = {Kyle Prete and Napol Rachatasumrit and Nikita Sudan and Miryung Kim},
  title = {Template-based Reconstruction of Complex Refactorings},
  booktitle = {26th International Conference on Software Maintenance},
  pages = {1--10},
  year = {2010}}

@misc{Prev,
  author = {Klaus Wuestefeld},
  title = {{Prevayler}, a prevalence layer for {Java}},
  url = {http://www.prevayler.org},
  key = {Prev},
  note = {http://www.prevayler.org}}

@techreport{Prev90a,
  author = {Vassili Prevelakis},
  title = {Versioning Issues for Hypertext Systems},
  pages = {89--105},
  year = {1990},
  abstract = {Hypertext systems have gained acceptance in a wide
range of application domains (e.g. CASE, systems
design, outline processors etc.). However, in order
to function effectively in these domains, hypertext
systems must support versioning. In this paper we
will examine the issues involved in providing
versioning facilities that not only support but
enhance the special features provided by hypertext.
We analyse the requirements that should be satisfied
by a versioning system and we examine how existing
hypertext systems cope with these requirements. We
then describe a set of mechanisms that are powerful
enough to comply with our requirements. Finally, we
present a demonstration system that will be used to
evaluate the effectiveness of our versioning
mechanisms.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@article{Pric18a,
  author = {Gregory Michael Price},
  title = {Virtual Breakpoints for x86/64},
  journal = {CoRR},
  volume = {abs/1801.09250},
  year = {2018},
  url = {http://arxiv.org/abs/1801.09250}}

@inproceedings{Pric90a,
  author = {R.T. Price and R. Girardi},
  title = {A Class Rerieval Tool for an Object-Oriented Environment},
  booktitle = {Proceedings of TOOLS '90 on Technology on O.O. Languages and Systems},
  year = {1990}}

@article{Pric93a,
  author = {Blaine A. Price and Ronald M. Baecker and Ian S. Small},
  title = {A Principled Taxonomy of Software Visualization},
  journal = {Journal of Visual Languages and Computing},
  volume = {4},
  pages = {211--266},
  year = {1993},
  number = {3}}

@article{Priet86a,
  author = {R. Prieto-Diaz and Neighbors J.M.},
  title = {Module Interconnection Languages},
  journal = {The Journal of Systems and Software},
  volume = {6},
  pages = {307--334},
  year = {1986},
  month = nov,
  number = {4}}

@article{Priet90a,
  author = {Prieto-Diaz, Rub{\'e}n},
  title = {Domain Analysis: An Introduction},
  journal = {ACM SIGSoft Enginnering Notes},
  volume = {15},
  pages = {47--54},
  year = {1990},
  month = apr,
  number = {2}}

@article{Priet91a,
  author = {Prieto-Diaz, Rub{\'e}n},
  title = {{Implementing Faceted Classification for Software Reuse}},
  journal = {Communications of the ACM},
  volume = {34},
  pages = {88--97},
  year = {1991},
  month = may,
  number = {5}}

@inproceedings{Priv05a,
  author = {Jean Privat and Roland Ducournau},
  title = {Raffinement de classes dans les languages \`a objects statiquement typ\'es},
  booktitle = {Proceedings of LMO'05},
  pages = {17--32},
  publisher = {Hermes},
  year = {2005}}

@inproceedings{Prob95a,
  author = {Proebsting, Todd A.},
  title = {Optimizing an {ANSI C} Interpreter with Superoperators},
  booktitle = {Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages = {322-332},
  publisher = {Association for Computing Machinery},
  year = {1995},
  url = {https://doi.org/10.1145/199448.199526},
  doi = {10.1145/199448.199526},
  abstract = {This paper introduces superoperators, an optimization technique for bytecoded interpreters. Superoperators are virtual machine operations automatically synthesized from smaller operations to avoid costly per-operation overheads. Superoperators decrease executable size and can double or triple the speed of interpreted programs. The paper describes a simple and effective heuristic for inferring powerful superoperators from the usage patterns of simple operators.The paper describes the design and implementation of a hybrid translator/interpreter that employs superoperators. From a specification of the superoperators (either automatically inferred or manually chosen), the system builds an efficient implementation of the virtual machine in assembly language. The system is easily retargetable and currently runs on the MIPS R3000 and the SPARC.},
  address = {New York, NY, USA},
  isbn = {0897916921},
  location = {San Francisco, California, USA},
  numpages = {11},
  series = {POPL '95}}

@inproceedings{Proe95a,
  author = {Proebsting and Todd A.},
  title = {Optimizing an ANSI C Interpreter with Superoperators},
  booktitle = {Principles of Programming Languages},
  pages = {322--332},
  year = {1995},
  address = {New York, NY, USA},
  isbn = {0-89791-692-1},
  location = {San Francisco, California, USA},
  numpages = {11},
  series = {POPL 1995}}

@article{Prog89a,
  author = {{Workshop on Object-Based Concurrent Programming}},
  title = {Workshop Proceedings},
  journal = {ACM SIGPLAN Notices},
  volume = {24},
  year = {1989},
  address = {San Diego, (Sept 26-27, 1988)},
  editor = {G. Agha and P. Wegner and A. Yonezawa},
  institution = {Workshop on Object-Based Concurrent Programming},
  month = apr,
  number = {4}}

@misc{PrographCPX,
  title = {Prograph {CPX} --- A Tutorial},
  journal = {MACTECH},
  volume = {10},
  url = {http://www.mactech.com/articles/mactech/Vol.10/10.11/PrographCPXTutorial/},
  key = {PrographCPX},
  number = {11}}

@article{Prok08a,
  author = {Prokopski, Gregory B. and Verbrugge, Clark},
  title = {Analyzing the Performance of Code-Copying Virtual Machines},
  journal = {SIGPLAN Not.},
  volume = {43},
  pages = {403-422},
  publisher = {Association for Computing Machinery},
  year = {2008},
  url = {https://doi.org/10.1145/1449955.1449796},
  doi = {10.1145/1449955.1449796},
  abstract = {Many popular programming languages use interpreter-based execution for portability, supporting dynamic or reflective properties, and ease of implementation. Code-copying is an optimization technique for interpreters that reduces the performance gap between interpretation and JIT compilation, offering significant speedups over direct-threading interpretation. Due to varying language features and virtual machine design, however, not all languages benefit from codecopying to the same extent. We consider here properties of interpreted languages, and in particular bytecode and virtual machine construction that enhance or reduce the impact of code-copying. We implemented code-copying and compared performance with the original direct-threading virtual machines for three languages, Java (SableVM), OCaml, and Ruby (Yarv), examining performance on three different architectures, ia32 (Pentium 4), x86\_64 (AMD64) and PowerPC (G5). Best speedups are achieved on ia32 by OCaml (maximum 4.88 times, 2.81 times on average), where a small and simple bytecode design facilitates improvements to branch prediction brought by code-copying. Yarv only slightly improves over direct-threading; large working sizes of bytecodes, and a relatively small fraction of time spent in the actual interpreter loop both limit the application of codecopying and its overall net effect. We are able to show that simple ahead of time analysis of VM and execution properties can help determine the suitability of code-copying for a particular VM before an implementation of code-copying is even attempted.},
  address = {New York, NY, USA},
  issn = {0362-1340},
  keywords = {compiler optimization, branch prediction, dynamic analysis, code-copying, performance, virtual machines},
  month = {oct},
  number = {10},
  numpages = {20}}

@article{Prok15a,
  author = {Proksch, Sebastian and Lerch, Johannes and Mezini, Mira},
  title = {Intelligent Code Completion with Bayesian Networks},
  journal = {Transactions on Software Engineering and Methodology (TOSEM)},
  volume = {1},
  publisher = {ACM},
  year = {2015},
  doi = {10.1145/2744200},
  number = {25}}

@inproceedings{Prok15b,
  author = {Prokopec, Aleksandar and Odersky, Martin},
  title = {Isolates, Channels, and Event Streams for Composable Distributed Programming},
  booktitle = {2015 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software (Onward!)},
  pages = {171-182},
  publisher = {Association for Computing Machinery},
  year = {2015},
  url = {https://doi.org/10.1145/2814228.2814245},
  doi = {10.1145/2814228.2814245},
  address = {New York, NY, USA},
  isbn = {9781450336888},
  keywords = {event streams, distributed, actors, isolates},
  location = {Pittsburgh, PA, USA},
  numpages = {12},
  series = {Onward! 2015}}

@inproceedings{Prok16a,
  author = {Proksch, Sebastian and Amann, Sven and Nadi, Sarah and Mezini, Mira},
  title = {Evaluating the Evaluations of Code Recommender Systems: A Reality Check},
  booktitle = {International Conference on Automated Software Engineering},
  year = {2015},
  doi = {10.1145/2970276.2970330}}

@misc{Prothon,
  title = {Prothon Home Page},
  key = {Prothon},
  note = {http://www.prothon.org/}}

@misc{Proto,
  title = {Google Protocol Buffers},
  url = {http://code.google.com/{API}s/protocolbuffers/docs/overview.html},
  howpublished = {\url{http://code.google.com/{API}s/protocolbuffers/docs/overview.html}},
  key = {protocolBuffers}}

@inproceedings{Prov07a,
  author = {N. Provos and D. McNamee and P. Mavrommatis and K. Wang and N. Modadugu},
  title = {The ghost in the browser analysis of web-based malware},
  booktitle = {HotBots},
  year = {2007}}

@article{Prvu02a,
  author = {Prvulovic, Milos and Zhang, Zheng and Torrellas, Josep},
  title = {ReVive: Cost-effective architectural support for rollback recovery in shared-memory multiprocessors},
  journal = {ACM SIGARCH Computer Architecture News},
  volume = {30},
  pages = {111--122},
  publisher = {ACM New York, NY, USA},
  year = {2002},
  number = {2}}

@inproceedings{Pueb05a,
  author = {G. Puebla, E. Albert, M. Hermenegildo},
  title = {Abstract Interpretation-based Verification/Certification in the CiaoPP System},
  booktitle = {Mobile Code Safety and Program Verification Using Computational Logic Tools},
  year = {2005},
  series = {MoveLog'05}}

@book{Puec96a,
  title = {Proceedings {STACS}'96},
  volume = {1046},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Grenoble, France},
  editor = {Claude Peuch and Rudiger Reischuk},
  isbn = {3-540-60922-9},
  month = feb,
  series = {LNCS}}

@inproceedings{Puka08a,
  author = {M Pukall and C Kastner and G Saake},
  title = {Towards unanticipated runtime adaptation of Java applications},
  booktitle = {Asian Software Engineering Conference},
  year = {2008}}

@inproceedings{Puka09a,
  author = {Pukall, Mario and Siegmund, Norbert and Cazzola, Walter},
  title = {Feature-oriented Runtime Adaptation},
  booktitle = {Proceedings of the 2009 ESEC/FSE Workshop on Software Integration and Evolution @ Runtime},
  pages = {33--36},
  publisher = {ACM},
  year = {2009},
  url = {http://doi.acm.org/10.1145/1596495.1596506},
  doi = {10.1145/1596495.1596506},
  acmid = {1596506},
  address = {New York, NY, USA},
  isbn = {978-1-60558-681-6},
  keywords = {runtime adaptation, software product lines},
  location = {Amsterdam, The Netherlands},
  numpages = {4},
  series = {SINTER '09}}

@article{Puka13a,
  title={JavAdaptor-Flexible runtime updates of Java applications},
  author={Pukall, Mario and K{\"a}stner, Christian and Cazzola, Walter and G{\"o}tz, Sebastian and Grebhahn, Alexander and Schr{\"o}ter, Reimar and Saake, Gunter},
  journal={Software: Practice and Experience},
  volume={43},
  number={2},
  pages={153--185},
  year={2013},
  publisher={Wiley Online Library}
}

@inproceedings{Pulv01a,
  author = {E.Pulverm{\"u}ller and A. Speck and J.O.Coplien and M. D'Hondt and W.DeMeuter},
  title = {Position Paper: Feature Interaction in Composed Systems},
  booktitle = {Proceedings of the European Conference on Object-Oriented Programming, ECOOP 2001},
  pages = {1--6},
  year = {2001}}

@inproceedings{Pun89a,
  author = {Winnie W.Y. Pun and Russel L. Winder},
  title = {A Design Method for Object-Oriented Programming},
  booktitle = {Proceedings ECOOP '89},
  pages = {225--240},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Punt96a,
  author = {Frank Puntigam},
  title = {Types for Active Objects Based on Trace Semantics},
  booktitle = {Proceedings FMOODS '96},
  year = {1996},
  url = {http://www.complang.tuwien.ac.at/franz/papers/fmoods96.ps.gz},
  address = {Paris, France},
  editor = {IFIP WG 6.1},
  month = mar}

@unpublished{Punt96b,
  author = {Frank Puntigam},
  title = {Synchronization Expressed in Types of Communication Channels},
  year = {1996},
  note = {Submitted to Workshoop N 5: Parallel Languages and Programming},
  type = {Draft, Technische Universitat Wien}}

@unpublished{Punt96c,
  author = {Frank Puntigam},
  title = {Process Types for Concurrent Object-Oriented Programming},
  year = {1996},
  institution = {Technische Universitat Wien},
  note = {Research Proposal}}

@inproceedings{Purc90a,
  author = {Jan A. Purchase and Russel L. Winder},
  title = {Message Pattern Specifications: {A} New Technique for Handling Errors in Parallel Object Oriented Systems},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {116--125},
  year = {1990},
  month = oct}

@article{Purd72a,
  author = {Purdom, Paul},
  title = {A sentence generator for testing parsers},
  journal = {BIT Numerical Mathematics},
  volume = {12},
  pages = {366--375},
  year = {1972},
  url = {https://doi.org/10.1007/BF01932308},
  doi = {10.1007/BF01932308},
  id = {Purdom1972},
  isbn = {1572-9125},
  number = {3}}

@article{Purd87a,
  author = {Alan Purdy and B. Schuchardt and David Maier},
  title = {Integrating an Object-Server with Other Worlds},
  journal = {ACM TOOIS},
  volume = {5},
  pages = {27--47},
  year = {1987},
  month = jan,
  number = {1}}

@article{Purv83a,
  author = {R. Purvy and J. Farrel and P. Klose},
  title = {The Design of Star's Records Processing: Data Processing for the Noncomputer Professional},
  journal = {ACM TOOIS},
  volume = {1},
  pages = {3--24},
  year = {1983},
  number = {1}}

@article{Pust82a,
  author = {J. Pustell and F. Kafatos},
  title = {A High Speed, High Capacity Homology Matrix: Zooming through {SV40} and Polyoma},
  journal = {Nucleid Acids Research},
  volume = {10},
  pages = {4765--4782},
  year = {1982},
  number = {15}}

@misc{PyPy,
  title = {{PyPy}, an implementation of {Python} in {Python}},
  url = {http://codespeak.net/pypy},
  key = {pypy}}

@misc{Python,
  title = {Python},
  key = {Python},
  note = {http://www.python.org}}

@misc{PythonPEP8,
  title = {PEP 8 -- Style Guide for Python Code -- consulted on 24 February 2022},
  key = {PythonPEP8},
  note = {https://www.python.org/dev/peps/pep-0008}}

@inproceedings{Qian96a,
  author = {Zhenyu Qian and Bernd Krieg-Br{\"u}ckner},
  title = {Typed Object-Oriented Functional Programming with Late Binding},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {48--72},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@techreport{Quad08a,
  author = {Andrea Quadri},
  title = {Sourcetalk, Smalltalk Code Repository},
  year = {2008},
  url = {http://scg.unibe.ch/archive/projects/Quad08a.pdf},
  abstract = {SqueakSource is a highly successful source code
repository for Squeak based on the distributed
source code management system Monticello. Monticello
is not designed to be cross platform. Moreover
SqueakSource is old and not up-to-date with web
technology. SqueakSource is not extensible and it
was built with an old Seaside version. It does not
use Magritte and is not Web 2.0 conform. Sourcetalk
is based on Monticello 2. It uses Seaside 2.8 for
the view, Magritte for extensibility and Pier for
the integrated wiki.},
  institution = {University of Bern},
  month = dec,
  type = {Bachelor's thesis}}

@misc{Quad08b,
  author = {Andrea Quadri},
  title = {Sourcetalk User Manual},
  year = {2008},
  url = {http://scg.unibe.ch/archive/projects/Quad08b.pdf},
  abstract = {This document is the end user manual of Sourcetalk,
the Monticello 2 distributed Smalltalk code
repository. It explains the main functionality for
users. Furthermore in an advanced section we will
help administrators to set up a Sourcetalk code
repository and present the main administration
functionality.},
  institution = {University of Bern},
  month = dec,
  type = {Setup and User Guide}}

@inproceedings{Quan06a,
  author = {Jochen Quante and Rainer Koschke},
  title = {Dynamic Object Process Graphs},
  booktitle = {Proceedings 10th European Conference on Software Maintenance and Reengineering (CSMR'06)},
  pages = {81--90},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  doi = {10.1109/CSMR.2006.24}}

@inproceedings{Quan07a,
  author = {Jochen Quante and Rainer Koschke},
  title = {Dynamic Protocol Recovery},
  booktitle = {Proceedings of the 14th Working Conference on Reverse Engineering ({WCRE}'07)},
  pages = {219--228},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/{WCRE}.2007.24},
  address = {Washington, DC, USA},
  isbn = {0-7695-3034-6}}

@article{Quan08a,
  author = {Jochen Quante and Rainer Koschke},
  title = {Dynamic object process graphs},
  journal = {Journal of Systems and Software},
  volume = {81},
  pages = {481--501},
  publisher = {Elsevier Science Inc.},
  year = {2008},
  doi = {10.1016/j.jss.2007.06.005},
  address = {New York, NY, USA},
  issn = {0164-1212},
  number = {4}}

@inproceedings{Quan08b,
  author = {Jochen Quante},
  title = {Do Dynamic Object Process Graphs Support Program Understanding? - A Controlled Experiment},
  booktitle = {Proceedings of the 16th International Conference on Program Comprehension ({ICPC}'08)},
  pages = {73--82},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {10.1109/{ICPC}.2008.15},
  address = {Washington, DC, USA},
  isbn = {978-0-7695-3176-2}}

@article{Quar85a,
  author = {J.S. Quarterman and A. Silberschatz and James L. Peterson},
  title = {4.2BSD and 4.3BSD as Examples of the {UNIX} System},
  journal = {ACM Computing Surveys},
  volume = {17},
  pages = {379--418},
  year = {1985},
  month = dec,
  number = {4}}

@book{Quat98a,
  author = {Terry Quatrani},
  title = {Visual Modeling with Rational Rose and UML},
  publisher = {Addison Wesley},
  year = {1998}}

@inproceedings{Quei00a,
  author = {Christian Queinnec},
  title = {The influence of browsers on evaluators or, continuations to program Web servers},
  booktitle = {ACM SIGPLAN International Conference on Functional Programming},
  pages = {23--33},
  year = {2000}}

@article{Quei03,
  author = {Christian Queinnec},
  title = {Inverting back the inversion of control or, continuations versus page-centric programming},
  journal = {SIGPLAN Not.},
  volume = {38},
  pages = {57--64},
  publisher = {ACM Press},
  year = {2003},
  doi = {10.1145/772970.772977},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {2}}

@article{Quei04a,
  author = {Christian Queinnec},
  title = {Continuations and web servers},
  journal = {Higher-Order and Symbolic Computation: an International Journal},
  pages = {1--16},
  year = {2004},
  volumes = {123}}

@inproceedings{Quit03a,
  author = {Philip J. Quitslund},
  title = {Beyond files: programming with multiple source views.},
  booktitle = {OOPSLA Workshop on Eclipse Technology eXchange},
  pages = {6--9},
  year = {2003},
  doi = {10.1145/965660.965662}}

@techreport{Quit04a,
  author = {Philip J. Quitslund},
  title = {Java Traits --- Improving Opportunities for Reuse},
  year = {2004},
  address = {Beaverton, Oregon, USA},
  institution = {OGI School of Science \& Engineering},
  month = sep,
  number = {CSE-04-005},
  type = {Technical Report}}

@inproceedings{Quna18a,
  author = {Mohaned Qunaibit and Stefan Brunthaler and Yeoul Na and Stijn Volckaert and Michael Franz},
  title = {Accelerating Dynamically-Typed Languages on Heterogeneous Platforms Using Guards Optimization},
  booktitle = {European Conference on Object-Oriented Programming (ECOOP 2018)},
  volume = {109},
  pages = {16:1--16:29},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  year = {2018},
  url = {http://drops.dagstuhl.de/opus/volltexte/2018/9221},
  doi = {10.4230/LIPIcs.ECOOP.2018.16},
  address = {Dagstuhl, Germany},
  annote = {Keywords: Type Specialization, Guards Optimization, Automatic Heterogeneous Computing, Automatic Parallelism},
  editor = {Todd Millstein},
  isbn = {978-3-95977-079-8},
  issn = {1868-8969},
  series = {Leibniz International Proceedings in Informatics (LIPIcs)},
  urn = {urn:nbn:de:0030-drops-92217}}

@manual{RC13a,
  author = {{R Core Team}},
  title = {R: A Language and Environment for Statistical Computing},
  year = {2013},
  url = {http://www.R-project.org/},
  address = {Vienna, Austria},
  isbn = {3-900051-07-0},
  organization = {R Foundation for Statistical Computing}}

@techreport{RDF99a,
  author = {{World} {Wide} {Web} {Consortium}},
  title = {{Resource} {Description} {Framework} ({RDF}) Model and Syntax Specification},
  year = {1999},
  institution = {{World} {Wide} {Web} {Consortium}},
  month = feb}

@proceedings{REBO91a,
  title = {Reuse},
  booktitle = {REBOOT '91 Workshop on Reuse},
  publisher = {ESPRIT},
  year = {1991},
  editor = {ESPRIT},
  month = sep}

@misc{RIFE,
  title = {{RIFE}},
  key = {RIFE},
  note = {https://rife.dev.java.net}}

@misc{RPythonTDDTyping16a,
  author = {RPythonCommunity},
  title = {RPython documentation on test translation},
  year = {2016},
  urldate = {2021-10-18}}

@misc{RUP,
  author = {IBM},
  title = {IBM - Rational Unified Process (RUP)},
  url = {http://www.ibm.com/software/awdtools/rup},
  key = {RUP}}

@misc{RWE95a,
  title = {The Rewrite Rule Editor},
  year = {1995},
  url = {http://www.refactory.com/the-rewritetool},
  key = {RRE}}

@article{Ra97a,
  author = {Ra, Young-Gook and Rundensteiner, Elke A.},
  title = {A transparent Schema-Evolution System Based on Object-Oriented View Technology},
  journal = {Transactions on Knowlegde and Data Engineering},
  volume = 9,
  year = {1997}}

@article{Rabe09a,
  author = {Damijan Rebernak and Marjan Mernik and Hui Wu and Jeff Gray},
  title = {Domain-Specific Aspect Languages for Modularizing Crosscutting Concerns in Grammars},
  journal = {IET Software (Special Issue on Domain-Specific Aspect Languages)},
  year = {2009},
  note = {to appear}}

@inproceedings{Rabi78a,
  author = {L. Rabiner and A. Rosenberg and S. Levinson},
  title = {Considerations in dynamic time warping algorithms for discrete word recognition},
  booktitle = {IEEE Transactions. Acoustics, Speech and Signal Processing},
  pages = {572--582},
  publisher = {IEEE},
  year = {1978},
  vol = {26}}

@article{Rabk13a,
 author = {Rabkin, Ariel and Katz, Randy},
 title = {How Hadoop Clusters Break},
 journal = {IEEE Softw.},
 issue_date = {July 2013},
 volume = {30},
 number = {4},
 month = jul,
 year = {2013},
 issn = {0740-7459},
 pages = {88--94},
 numpages = {7},
 url = {https://doi.org/10.1109/MS.2012.73},
 doi = {10.1109/MS.2012.73},
 acmid = {2553368},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA},
 keywords = {Cluster approximation,Information management,Data handling,Data storage systems,Software development,Software reliability,Analytical models,system administration,reliability,distributed systems,cloud computing,big data}
}

@article{Racc95a,
  author = {L. Raccoon},
  title = {The Complexity Gap},
  journal = {IEEE Computer},
  volume = {20},
  pages = {37--44},
  year = {1995},
  number = {3}}

@inproceedings{Racz99a,
  author = {Ferenc D\'{o}sa R\'{a}cz and Kai Koskimies},
  title = {Tool-Supported Compression of UML Class Diagrams},
  booktitle = {Proceedings UML '99 (The Second International Conference on The Unified Modeling Language)},
  volume = {1723},
  pages = {172--187},
  publisher = {Springer-Verlag},
  year = {1999},
  address = {Kaiserslautern, Germany},
  editor = {Bernhard Rumpe},
  month = oct,
  series = {LNCS}}

@inproceedings{Rade94a,
  author = {Matthias Radestock and Susan Eisenbach},
  title = {What Do You Get From a Pi-calculus Semantics?},
  booktitle = {Proceedings of Parallel Architectures and Languages Europe (PARLE '94)},
  volume = 817,
  pages = {635--647},
  publisher = {Springer-Verlag},
  year = {1994},
  url = {ftp://dse.doc.ic.ac.uk/dse-papers/darwin/parle94.ps.gz},
  abstract = {Darwin is a programming system for the development
of distributed and parallel programs. Darwin
programs consist of three parts. Firstly, there is a
configuration part which provides a hierarchical
structure of components with dynamic binding.
Secondly, there is the actual communication part
which provides the interaction and synchronisation
required by the system. Finally, there is the
computation part providing the component programs
written in C++. The subdivision of concurrent
programs into the three separate parts of
organisation, communication and computation leads to
programs that are easy to specify, compile and
execute. In order to specify precisely the behaviour
of Darwin programs, we translate the organisation
and communication into the Pi-calculus, a formalism
for modelling concurrent processes. The Pi-calculus
semantics enables us to deduce behavioural
properties of Darwin programs.},
  series = {LNCS}}

@inproceedings{Rade99a,
  author = {Ansgar Radermacher},
  title = {Support for Design Patterns Through Graph Transformation Tools},
  booktitle = {AGTIVE},
  pages = {111--126},
  year = {1999},
  url = {http://citeseer.nj.nec.com/radermacher98support.html}}

@inproceedings{Radp13a,
author={Radpour, Soroush
and Hendren, Laurie
and Sch{\"a}fer, Max},
title={Refactoring MATLAB},
booktitle={Compiler Construction},
year={2013},
pages={224--243},
abstract={Matlab is a very popular dynamic ``scripting'' language for numerical computations used by scientists, engineers and students world-wide. Matlab programs are often developed incrementally using a mixture of Matlab scripts and functions, and frequently build upon existing code which may use outdated features. This results in programs that could benefit from refactoring, especially if the code will be reused and/or distributed. Despite the need for refactoring, there appear to be no Matlab refactoring tools available. Furthermore, correct refactoring of Matlab is quite challenging because of its non-standard rules for binding identifiers. Even simple refactorings are non-trivial}
}

@article{Radz17a,
  author = {Radziwill, Nicole and Benton, Morgan},
  title = {Quality and Innovation with Blockchain Technology},
  journal = {Software Quality Professional Magazine},
  volume = {20},
  publisher = {ASQ},
  year = {2017},
  number = {1}}

@article{Raed85a,
  author = {G. Raeder},
  title = {A Survey of Current Graphical Programming Techniques},
  journal = {Computer},
  volume = {18},
  pages = {11--25},
  publisher = {IEEE Computer Society Press},
  year = {1985},
  doi = {10.1109/MC.1985.1662971},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {8}}

@misc{Rain99a,
  title = {RainCode},
  url = {www.raincode.com},
  key = {RC}}

@article{Raja03a,
  author = {Hridesh Rajan and Kevin Sullivan},
  title = {Eos: instance-level aspects for integrated system design},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {28},
  pages = {297--306},
  publisher = {ACM},
  year = {2003},
  doi = {10.1145/949952.940111},
  address = {New York, NY, USA},
  issn = {0163-5948},
  number = {5}}

@inproceedings{Raja05a,
  author = {Hridesh Rajan and Kevin J. Sullivan},
  title = {Classpects: Unifying Aspects- and Object-Oriented Language Design},
  booktitle = {Proceedings International Conference on Software Engineering (ICSE 2005)},
  pages = {59--68},
  year = {2005}}

@inproceedings{Raje04a,
  author = {J. Rajesh and D. Janaki Ram},
  title = {JIAD: a tool to infer design patterns in refactoring},
  booktitle = {ACM-SIGPLAN International Conference on Principles and Practice of Declarative Programming},
  year = {2004},
  url = {https://api.semanticscholar.org/CorpusID:816828}}

@inproceedings{Raje89a,
  author = {Rajendra K. Raj and Henry M. Levy},
  title = {A Compositional Model for Software Reuse},
  booktitle = {Proceedings ECOOP '89},
  pages = {3--24},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@article{Rajl00a,
  author = {Vaclav Rajlich and Keith Bennett},
  title = {A Staged Model for the Software Life Cycle},
  journal = {IEEE Computer},
  volume = {33},
  pages = {66--71},
  year = {2000},
  number = {7}}

@inproceedings{Rajl02a,
  author = {V\'{a}clav Rajlich and Prashant Gosavi},
  title = {A Case Study of Unanticipated Incremental Change},
  booktitle = {18th International Conference on Software Maintenance ({ICSM} 2002), Maintaining Distributed Heterogeneous Systems, 3-6 October 2002, Montreal, Quebec, Canada},
  publisher = {IEEE Computer Society},
  year = {2002}}

@inproceedings{Rajl02b,
  author = {Rajlich, V{\'a}clav and Wilde, Norman},
  title = {The role of concepts in program comprehension},
  booktitle = {Program Comprehension Workshop},
  pages = {271--278},
  year = {2002},
  organization = {IEEE}}

@article{Rajl97a,
  author = {Rajlich, V.},
  title = {A model for change propagation based on graph rewriting},
  journal = {Software Maintenance, 1997. Proceedings., International Conference on},
  pages = {84-91},
  year = {1997},
  doi = {10.1109/ICSM.1997.624234},
  month = {oct}}

@phdthesis{Raki15a,
  author = {Raki{\'c}, Gordana},
  title = {Extendable and adaptable framework for input language independent static analysis},
  year = {2015},
  school = {University of Novi Sad (Serbia)}}

@inproceedings{Rako94a,
  author = {Andry Rakotonirainy},
  title = {{DPL} to Express a Concurrency Control Using Transaction and Object Semantics},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {122--138},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {There is a currently considerable interest in
advanced transaction processing. Most proposals
weaken serializability. The concurrency of
transactions executing on shared objects can be
enhanced with the use of semantic information about
operations type or through user defined semantics
called transaction semantic. This paper attempts to
unify the two approaches; we present an extended
model which exploits both transaction and object
semantics to increase concurrency. The approach we
adopt is similar to the one used in
[Lynch83,Molina83,FO89]. However, our mechanism for
specifying allowable interleavings is based on
predicate over step types and synchronization
operators. It supports concurrent execution of steps
and synchronization amongst them. We will integrate
this distributed concurrency control policy into a
high level language to hide low-level details such
as locks, timestamps management and concurrent
activities synchronization inside the implementation
of the language constructs. We use ANSA
computational language DPL (Distributed Programming
Language) as a basic language construct. We propose
a few DPL extensions to support our model. This
model is suitable to express a wide range of
synchronization constraints between concurrent
activities.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@inproceedings{Rama06a,
  author = {Roshan Ramachandran and David J. Pearce and Ian Welch},
  title = {AspectJ for Multilevel Security},
  booktitle = {In Proceedings of the Workshop on Aspects, Components, and Patterns for Infrastructure Software (ACP4IS)},
  year = {2006}}

@article{Rami00a,
  author = {Juan F. Ramil and Meir M. Lehman},
  title = {Metrics of Software Evolution as Effort Predictors - A Case Study},
  journal = {Software Maintenance, IEEE International Conference on},
  volume = {0},
  pages = {163},
  publisher = {IEEE Computer Society},
  year = {2000},
  doi = {10.1109/ICSM.2000.883036},
  address = {Los Alamitos, CA, USA},
  issn = {1063-6773}}

@inproceedings{Rami01a,
  author = {Juan Ramil and Manny Lehman},
  title = {Defining and Applying Metrics in the Context of Continuing Software Evolution},
  booktitle = {Proceedings of the 7th International Symposium on Software Metrics (METRICS '01)},
  pages = {199--209},
  publisher = {IEEE Computer Society Press},
  year = {2001},
  address = {Los Alamitos CA}}

@techreport{Rami98a,
  author = {Alex Ramirez and Josep Larriba-pey and Carlos Navarro and Xavi Serrano and Josep Torrellas and Mateo Valero},
  title = {Code Reordering of Decision Support Systems for optimized Instruction Fetch},
  year = {1998},
  institution = {Universitat Politechnica de Catalunya}}

@inproceedings{Rami99a,
  author = {Alex Ramirez and Josep L. Larriba-Pey and Carlos Navarro and Josep Torrellas and Mateo Valero},
  title = {Software Trace Cache},
  booktitle = {International Conference on Supercomputing},
  year = {1999}}

@inproceedings{Ramo03a,
  author = {Ramos, Juan},
  title = {Using TF-IDF to determine word relevance in document queries},
  booktitle = {Proceedings of the first instructional conference on machine learning},
  volume = {242},
  pages = {133--142},
  year = {2003}}

@inproceedings{Ramon11,
  author = {Ramon, \'Oscar S\'anchez and Cuadrado, Jesus S\'anchez and Molina, Jesus Garcia},
  title = {Reverse Engineering of Event Handlers of {RAD}-Based Applications},
  booktitle = {2011 18th Working Conference on Reverse Engineering},
  pages = {293--302},
  publisher = {{IEEE}},
  year = {2011},
  url = {http://ieeexplore.ieee.org/document/6079854/},
  doi = {10.1109/{WCRE}.2011.43},
  abstract = {Businesses are more and more modernising the legacy systems they developed with R{API}d Application Development ({RAD}) environments, so that they can benefit from the new platforms and technologies. When facing the modernisation of applications developed with {RAD} environments, developers must deal with event handling code that typically mixes concerns such as {GUI} and business logic. In this paper we propose a model-based approach to tackle the reverse engineering of event handlers in {RAD}-based applications. Event handling code is transformed into an intermediate representation that captures the high-level behaviour of the code. From this representation, some modernisation tasks can be automated, and we propose the migration to a different architecture as an example. In particular, from {PL}/{SQL} code, a new Ajax application will be generated, where business logic, user interface and control code have been separated.},
  date = {2011-10},
  isbn = {978-1-4577-1948-6},
  langid = {english},
  urldate = {2018-06-18}}

@article{Ran03a,
  author = {Ran, S.},
  title = {A Model for Web Services Discovery With QoS},
  journal = {Newsletter ACM SIGecom Exchanges},
  volume = {4},
  pages = {1--10},
  year = {2003}}

@book{Rand04a,
  title={Perl 6 and Parrot Essentials},
  author={Randal, Allison and Sugalski, Dan and Totsch, Leopold and T{\"o}tsch, Leopold},
  year={2004},
  publisher={" O'Reilly Media, Inc."}
}

@mastersthesis{Rand20a,
  title={SecArchUnit Extending ArchUnit to support validation of security architectural constraints},
  author={Randevik, Marcus and Olson, Patrik},
  year={2020},
  school = {University OF Gothenburg},
  type = {Master thesis}}

@inproceedings{Rang02a,
  author = {Ranganathan, Anand and Campbell, Roy H.},
  title = {Advertising in a pervasive computing environment},
  booktitle = {WMC'02: Proceedings of the 2nd International workshop on Mobile commerce},
  pages = {10--14},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/570705.570708}}

@inproceedings{Rang05a,
  author = {Ranganathan, Anand and Chetan, Shiva and Al-Muhtadi, Jalal and Campbell, Roy H. and Mickunas, M. Dennis},
  title = {Olympus: A High-Level Programming Model for Pervasive Computing Environments},
  booktitle = {PerCom'05: Proceedings of the 3rd International Conference on Pervasive Computing and Communications},
  pages = {7--16},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/PERCOM.2005.26}}

@article{Rani21a,
  author = {Rani, Pooja and Panichella, Sebastiano and Leuenberger, Manuel and Ghafari, Mohammad and Nierstrasz, Oscar},
  title = {What do class comments tell us? An investigation of comment evolution and practices in Pharo Smalltalk},
  journal = {Empirical Software Engineering},
  volume = {26},
  pages = {1--49},
  publisher = {Springer},
  year = {2021},
  number = {6}}

@article{Rani21b,
  author = {Rani, Pooja and Panichella, Sebastiano and Leuenberger, Manuel and Di Sorbo, Andrea and Nierstrasz, Oscar},
  title = {How to identify class comment types? A multi-language approach for class comment classification},
  journal = {Journal of Systems and Software},
  volume = {181},
  pages = {111047},
  publisher = {Elsevier},
  year = {2021}}

@inproceedings{Rans98a,
  author = {Jan Ransom and Ian Sommerville and Ian Warren},
  title = {{A} {Method} for {Assessing} {Legacy} {Systems} for {Evolution}},
  booktitle = {Proceedings of Reengineering Forum '98},
  year = {1998},
  url = {http://tina.lancs.ac.uk/projects/renaissance/project/Documents/Papers/AssessmentPaper.html}}

@article{Rao12a,
  author = {Rao, A. Ananda and Reddy, K. Narendar},
  title = {Identifying Clusters of Concepts in a Low Cohesive Class for Extract Class Refactoring Using Metrics Supplemented Agglomerative Clustering Technique},
  journal = {arXiv:1201.1611 [cs]},
  year = {2012},
  url = {http://arxiv.org/abs/1201.1611},
  abstract = {Object oriented software with low cohesive classes can increase maintenance cost. Low cohesive classes are likely to be introduced into the software during initial design due to deviation from design principles and during evolution due to software deterioration. Low cohesive class performs operations that should be done by two or more classes. The low cohesive classes need to be identified and refactored using extract class refactoring to improve the cohesion. In this regard, two aspects are involved; the first one is to identify the low cohesive classes and the second one is to identify the clusters of concepts in the low cohesive classes for extract class refactoring. In this paper, we propose metrics supplemented agglomerative clustering technique for covering the above two aspects. The proposed metrics are validated using Weyuker's properties. The approach is applied successfully on two examples and on a case study.},
  keywords = {Computer Science - Software Engineering},
  month = jan,
  note = {arXiv: 1201.1611},
  urldate = {2019-03-27}}

@inproceedings{Rao91a,
  author = {Ramana Rao},
  title = {Implementational Reflection in {Silica}},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {251--267},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Rao94a,
  author = {Ramana Rao and Stuart K. Card},
  title = {The Table Lens: Merging Graphical Representations in an Interactive Focus+Context Visualization for Tabular Information},
  booktitle = {Proceedings CHI 94},
  pages = {318--322},
  publisher = {ACM},
  year = {1994},
  institution = {Xerox Palo Alto Research Center}}

@book{Raou92a,
  title = {Proceedings {CAAP}'92},
  volume = {581},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Rennes, France},
  editor = {J.-C.Raoult},
  isbn = {3-540-55251-0},
  month = feb,
  series = {LNCS}}

@inproceedings{Rapp82a,
  author = {Sandra Rapps and Elaine J. Weyuker},
  title = {Data flow analysis techniques for test data selection},
  booktitle = {Proceedings of the 6th international conference on Software engineering (ICSE'82)},
  pages = {272--278},
  publisher = {IEEE Computer Society Press},
  year = {1982},
  address = {Los Alamitos, CA, USA},
  location = {Tokyo, Japan}}

@inproceedings{Rash03a,
  author = {Rashid, Awais and Chitchyan, Ruzanna},
  title = {Persistence as an aspect},
  booktitle = {AOSD '03: Proceedings of the 2nd international conference on Aspect-oriented software development},
  pages = {120--129},
  publisher = {ACM},
  year = {2003},
  doi = {10.1145/643603.643616},
  address = {New York, NY, USA},
  isbn = {1-58113-660-9},
  location = {Boston, Massachusetts}}

@book{Rask00a,
  author = {Jef Raskin},
  title = {The humane interface: new directions for designing interactive systems},
  publisher = {ACM Press/Addison-Wesley Publishing Co.},
  year = {2000},
  address = {New York, NY, USA},
  isbn = {0-201-37937-6}}

@book{Rasm99a,
  author = {Daniel W. Rasmus},
  title = {Rethinking Smart Objects},
  publisher = {Cambridge University Press},
  year = {1999}}

@inproceedings{Rath08a,
  author = {R{\'a}th, Istv{\'a}n and Bergmann, G{\'a}bor and {\"O}kr{\"o}s, Andr{\'a}s and Varr{\'o}, D{\'a}niel},
  title = {Live model transformations driven by incremental pattern matching},
  booktitle = {Theory and Practice of Model Transformations: First International Conference, ICMT 2008, Z{\"u}rich, Switzerland, July 1-2, 2008 Proceedings 1},
  pages = {107--121},
  year = {2008},
  organization = {Springer}}

@inproceedings{Rath93,
  author = {Elizabeth D. Rather and Donald R. Colburn and Charles H. Moore},
  title = {The evolution of Forth},
  booktitle = {HOPL-II: The second ACM SIGPLAN conference on History of programming languages},
  pages = {177--199},
  publisher = {ACM Press},
  year = {1993},
  address = {New York, NY, USA},
  isbn = {0-89791-570-4},
  location = {Cambridge, Massachusetts, United States}}

@mastersthesis{Rati03a,
  author = {Daniel Ra\c{t}iu},
  title = {Time-Based Detection Strategies},
  year = {2003},
  school = {Faculty of Automatics and Computer Science, "Politehnica" University of Timi\c{s}oara},
  month = sep}

@inproceedings{Rati06a,
  author = {Daniel Ra\c{t}iu and Florian Deissenboeck},
  title = {How Programs Represent Reality (and how they don't)},
  booktitle = {Proceedings of the 13th Working Conference on Reverse Engineering ({WCRE}'06)},
  publisher = {IEEE Computer Society},
  year = {2006},
  address = {Los Alamitos CA}}

@inproceedings{Rati06b,
  author = {Daniel Ra\c{t}iu and Florian Deissenboeck},
  title = {Programs are Knowledge Bases},
  booktitle = {Proceedings of the 14th International Conference on Program Comprehension, ({ICPC} 2006)},
  pages = {79--83},
  publisher = {IEEE Computer Society},
  year = {2006},
  address = {Los Alamitos CA}}

@inproceedings{Rati07a,
  author = {Daniel Ra\c{t}iu and Jan Juerjens},
  title = {The Reality of Libraries},
  booktitle = {Proceedings of the 11th European Conference on Software Maintenance and Reengineering, (CSMR 2007)},
  pages = {307--318},
  publisher = {IEEE Computer Society},
  year = {2007}}

@inproceedings{Rati07b,
  author = {Daniel Ra\c{t}iu and Florian Deissenboeck},
  title = {From Reality to Programs and (Not Quite) Back Again},
  booktitle = {Proceedings of the 15th International Conference on Program Comprehension, ({ICPC} 2007)},
  pages = {91--102},
  publisher = {IEEE Computer Society},
  year = {2007},
  address = {Los Alamitos CA}}

@article{Rau00a,
  author = {Andreas Rau},
  title = {Potential and Challenges for Model-based Development in the Automotive Industry},
  journal = {``Business Briefing: Global Automotive Manufacturing and Technlogy'', World Market Research Center},
  year = {2000},
  month = oct}

@article{Raun07a,
  author = {Allan Raundahl Gregersen and Bo N\o rregaard J\o rgensen},
  title = {Extending eclipse RCP with dynamic update of active plug-ins},
  journal = {Journal of Object Technology},
  volume = {6},
  pages = {67--89},
  year = {2007},
  number = {6}}

@book{Ravi03a,
  author = {C. Ravindranath Pandian},
  title = {Software Metrics: A Guide to Planning, Analysis, and Application},
  publisher = {CRC Press, Inc.},
  year = {2003},
  address = {Boca Raton, FL, USA},
  isbn = {0849316618}}

@inproceedings{Rayc14a,
  author = {Raychev, Veselin and Vechev, Martin and Yahav, Eran},
  title = {Code completion with statistical language models},
  booktitle = {Acm Sigplan Notices},
  volume = {49},
  pages = {419--428},
  year = {2014},
  organization = {ACM}}

@inproceedings{Rayc15a,
  author = {Raychev, Veselin and Vechev, Martin and Krause, Andreas},
  title = {Predicting Program Properties from "Big Code"},
  booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages = {111--124},
  publisher = {ACM},
  year = {2015},
  url = {http://doi.acm.org/10.1145/2676726.2677009},
  doi = {10.1145/2676726.2677009},
  address = {New York, NY, USA},
  isbn = {978-1-4503-3300-9},
  location = {Mumbai, India},
  numpages = {14},
  series = {POPL '15}}

@inproceedings{Rayc15b,
  author = {Raychev, Veselin and Vechev, Martin and Krause, Andreas},
  title = {Predicting program properties from big code},
  booktitle = {ACM SIGPLAN Notices},
  pages = {111--124},
  year = {2015},
  organization = {ACM}}

@book{Raym95a,
  author = {Kerry Raymond},
  title = {Reference model of Open Distributed Processing ({RM}-{ODP}):Introduction {RM}-{ODP} Tutorial},
  publisher = {Center for Information Technology,University of Queesland, Australia},
  year = {1995},
  url = {http://www.dstc.edu.au/papers/icodp95.ps.gz}}

@book{Raym96a,
  author = {Raymond, Eric S and Steele, Guy L},
  title = {The new hacker's dictionary},
  publisher = {Mit Press},
  year = {1996}}

@article{Rays02a,
  author = {Rayside, Derek and Kontogiannis, Kostas},
  title = {Extracting Java Library Subsets for Deployment on Embedded Systems},
  journal = {Sci. Comput. Program.},
  volume = {45},
  pages = {245--270},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2002},
  url = {http://dx.doi.org/10.1016/S0167-6423(02)00059-X},
  doi = {10.1016/S0167-6423(02)00059-X},
  acmid = {781586},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {0167-6423},
  keywords = {Java, application extraction, call graph construction, embedded systems, library extraction, static dependency graph},
  month = nov,
  number = {2-3},
  numpages = {26}}

@inproceedings{Rays06a,
  author = {Derek Rayside and Lucy Mendel and Daniel Jackson},
  title = {A dynamic analysis for revealing object ownership and sharing},
  booktitle = {Proceedings of the 2006 international workshop on Dynamic systems analysis (WODA'06)},
  pages = {57--64},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1138912.1138924},
  address = {New York, NY, USA},
  isbn = {1-59593-400-6},
  location = {Shanghai, China}}

@inproceedings{Rays07a,
  author = {Derek Rayside and Lucy Mendel},
  title = {Object ownership profiling: a technique for finding and fixing memory leaks},
  booktitle = {Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering (ASE'07)},
  pages = {194--203},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1321631.1321661},
  address = {New York, NY, USA},
  isbn = {978-1-59593-882-4},
  location = {Atlanta, Georgia, USA}}

@inproceedings{Rays98a,
  author = {Derek Rayside and Scott Kerr and Kostas Kontogiannis},
  title = {Change and Adaptive Maintenance Detection in {Java} Software Systems},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {10--19},
  publisher = {IEEE Computer Society},
  year = {1998},
  url = {citeseer.ist.psu.edu/article/rayside98change.html},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Raz92a,
  author = {Yoav Raz},
  title = {The Principle of Commitment Ordering, or, Guaranteeing Serializability in a Heterogeneous Environment of Multiple Autonomous Resource Managers Using Atomic Commitment},
  booktitle = {Proceedings of the 18th VLDB Conference},
  year = {1992},
  address = {Vancouver, BC}}

@article{Raza05a,
  author = {Razavi, Reza and Bouraqadi, Noury and Yoder, Joseph and Perrot, Jean-Fran{\c{c}}ois and Johnson, Ralph},
  title = {Language support for adaptive object-models using metaclasses},
  journal = {Computer Languages, Systems \& Structures},
  volume = {31},
  pages = {199--218},
  publisher = {Elsevier},
  year = {2005},
  number = {3}}

@inproceedings{Raza12,
  author = {Razavian, Maryam and Lago, Patricia},
  title = {A Lean and Mean Strategy for Migration to Services},
  booktitle = {Proceedings of the WICSA/ECSA 2012 Companion Volume},
  pages = {61 to 68},
  publisher = {Association for Computing Machinery},
  year = {2012},
  url = {https://doi.org/10.1145/2361999.2362009},
  doi = {10.1145/2361999.2362009},
  abstract = {In industry, enterprises have many software systems to be modernized and made available as added-value services. Identification of migration strategies and practices for service engineering is critical for successful legacy migration, and SOA adoption in industrial setting. This paper presents the results of an interview survey on the migration strategies in industry. The purpose of this paper is twofold: 1) to discover the migration strategies that industrial practice adopts 2) to identify the benefits of making such strategies explicit. Results of the survey have been analyzed in terms of migration activities and the available knowledge assets. As a result, we generalize the practice of industrial migration into a Lean &amp; Mean SOA migration strategy. In addition, the uses of the strategy pinpoint promising industry-relevant research directions.},
  address = {New York, NY, USA},
  isbn = {9781450315685},
  keywords = {knowledge, interview survey, migration to services, activity},
  location = {Helsinki, Finland},
  numpages = {8},
  series = {WICSA/ECSA '12}}

@inproceedings{Raza12b,
  author = {Razavi, Ali and Kontogiannis, Kostas},
  title = {Partial evaluation of model transformations},
  booktitle = {2012 34th International Conference on Software Engineering (ICSE)},
  pages = {562--572},
  year = {2012},
  organization = {IEEE}}

@article{Rebe06a,
  author = {D. Rebernak and M. Mernik and P. R. Henriques and M. J. V. Pereira.},
  title = {AspectLISA: An aspect-oriented compiler construction system based on attribute grammars},
  journal = {Electr. Notes Theor. Comput. Sci.},
  volume = {164},
  pages = {37--53},
  year = {2006},
  number = {2}}

@article{Rech07a,
  author = {J\"{o}rg Rech and Waldemar Sch\"{a}fer},
  title = {Visual support of software engineers during development and maintenance},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {32},
  pages = {1--3},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1234741.1234766},
  number = {2}}

@inproceedings{Redd07a,
  author = {Reddi, Vijay Janapa and Connors, Dan and Cohn, Robert and Smith, Michael D.},
  title = {Persistent Code Caching: Exploiting Code Reuse Across Executions and Applications},
  booktitle = {Proceedings of the International Symposium on Code Generation and Optimization},
  pages = {74--88},
  publisher = {IEEE Computer Society},
  year = {2007},
  address = {Washington, DC, USA},
  numpages = {15},
  series = {CGO '07}}

@inproceedings{Redd88a,
  author = {Uday Reddy},
  title = {Objects as closures: abstract semantics of object-oriented languages},
  booktitle = {LFP '88: Proceedings of the 1988 ACM conference on LISP and functional programming},
  pages = {289--297},
  publisher = {ACM Press},
  year = {1988},
  doi = {10.1145/62678.62721},
  address = {New York, NY, USA},
  isbn = {0-89791-273-X},
  location = {Snowbird, Utah, United States}}

@inproceedings{Redm00a,
  author = {Barry Redmond and Vinny Cahill},
  title = {{Iguana/J}: Towards a Dynamic and Efficient Reflective Architecture for Java},
  booktitle = {Proceedings of European Conference on Object-Oriented Programming, workshop on Reflection and Meta-Level Architectures},
  year = {2000}}

@inproceedings{Redm02a,
  author = {Barry Redmond and Vinny Cahill},
  title = {Supporting Unanticipated Dynamic Adaptation of Application Behaviour},
  booktitle = {Proceedings of European Conference on Object-Oriented Programming},
  volume = {2374},
  pages = {205--230},
  publisher = {Springer-Verlag},
  year = {2002}}

@article{Redo13a,
  author = {Redondo, Jose Manuel and Ortin, Francisco},
  title = {Efficient support of dynamic inheritance for class- and prototype-based languages},
  journal = {Journal of Systems and Software},
  volume = {86},
  year = {2013},
  doi = {10.1016/j.jss.2012.08.016}}

@article{Reed88a,
  author = {J. Reed and R.T. Yeh},
  title = {Specification and Verification of Liveness Properties of Cyclic Concurrent Processes},
  journal = {ACM TOPLAS},
  volume = {10},
  pages = {156--177},
  year = {1988},
  month = jan,
  number = {1}}

@inproceedings{Reen89a,
  author = {Trygve Reenskaug and Anna Lise Skaar},
  title = {An Environment for Literate {Smalltalk} Programming},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {337--346},
  year = {1989},
  month = oct}

@book{Reen96a,
  author = {Trygve Reenskaug},
  title = {Working with Objects: The OOram Software Engineering Method},
  publisher = {Manning Publications},
  year = {1996},
  url = {http://heim.ifi.uio.no/~trygver/documents/index.html http://heim.ifi.uio.no/~trygver/documents/book11d.pdf},
  isbn = {1-884777-10-4}}

@article{Rees86a,
  author = {J. Rees and W. Clinger},
  title = {R4RS. Revised Report on the Algorithmic Language Scheme},
  journal = {ACM Sigplan Notices},
  volume = 21,
  year = {1986},
  key = {R4RS},
  month = dec,
  number = 12}

@misc{Rees94a,
  author = {Jonathan A. Rees},
  title = {Another module system for scheme},
  year = {1994},
  month = jan}

@techreport{Rees96a,
  author = {Jonathan A. Rees},
  title = {A Security Kernel Based on the Lambda-Calculus},
  publisher = {Massachusetts Institute of Technology},
  year = {1996},
  address = {Cambridge, MA, USA},
  institution = {Massachusetts Institute of Technology}}

@article{Regev21a,
  author = {Regev, Omer and Soloveitchik, Michael and Feitelson, Dror G},
  title = {Using Non-Verbal Expressions as a Tool in Naming Research},
  journal = {arXiv preprint arXiv:2103.08701},
  year = {2021}}

@inproceedings{Regh91a,
  author = {Stefano Crespi Reghizzi and Guido Galli de Paratesi and Stefano Genolini},
  title = {Definition of Reusable Concurrent Software Components},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {148--166},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@techreport{Reic05a,
  author = {Stefan Reichhart},
  title = {A Prototype of {Traits} for {C\#}},
  year = {2005},
  url = {http://scg.unibe.ch/archive/projects/Reic05a.pdf},
  abstract = {Traits are a well-known simple, but powerful
compositional model for reuse. Although traits
already implemented in dynamically typed languages,
they're not yet practically realized in statically
typed languages. Typing traits and adapting the
model to these languages is more complex to achieve.
We report on our experience and practical research
implementing traits in {C\#} 2.0, concerning
generics. We show the difficulties and possible
solutions of typing and parameterizing traits in
generally, possible enhancements for statically
typed languages as well as adapting traits to {C\#}
regarding features like overriding and hiding.},
  institution = {University of Bern},
  type = {Informatikprojekt}}

@mastersthesis{Reic07b,
  author = {Stefan Reichhart},
  title = {Assessing Test Quality --- {TestLint}},
  year = {2007},
  school = {University Bern},
  url = {http://scg.unibe.ch/archive/masters/Reic07b.pdf},
  abstract = {With the success of agile methodologies, Testing has
become a common and important activity in the
development of software projects. Large and auto-
mated test-suites ensure that the system is behaving
as expected. Moreover, tests also offer a live
documentation for the code and can be used to under-
stand foreign code. However, as the system evolves,
tests need to evolve as well to keep up with the
system, and as the test suite grows larger, the
effort invested into maintaining tests becomes a
significant activity. In this context, the quality
of tests becomes an important issue, as developers
need to assess and understand the tests they have to
maintain. While testing have grown to be popular and
well supported by today's IDEs, methodologies and
tools trying to assess the quality of tests are
still poorly or not at all integrated into the
testing process. Most important, there has been no
attempts yet to concretely measure the quality of a
test by detecting design flaws of the test code, so
called Test Smells. We contribute to the research of
testing methodologies by measuring and assessing the
quality of tests. In particular we analyze Test
Smells and define a set of criteria to determine
test quality. We evaluate our results in a large
case-study and present TestLint, an approach to
automatically detect Test Smells. We provide a
bundle of tools that tightly integrate source-code
development, automated testing and quality
assessment of tests.},
  month = apr}

@article{Reic87a,
  author = {J.G. Reich and W. Meiske},
  title = {A Simple Statistical Significance Test of Window Scores in Large Dot Matrices obtained from Protein or Nucleic Acid Sequences},
  journal = {Comput. Appl. Biosci.},
  volume = {3},
  pages = {25--30},
  year = {1987}}

@inproceedings{Reich09a,
	author={Reichenbach, Christoph and Coughlin, Devin and Diwan, Amer},
	editor={Drossopoulou, Sophia},
	title={Program Metamorphosis},
	booktitle={European conference on Object-Oriented Programming},
	year={2009},
	publisher={Springer Berlin Heidelberg},
	pages={394--418}
}

@phdthesis{Reid80a,
  author = {B.K. Reid},
  title = {Scribe: {A} Document Specification Language and its Compiler},
  year = {1980},
  school = {Department of Computer Science, Carnegie-Mellon University},
  type = {{Ph.D}. Thesis}}

@book{Reid88a,
  author = {Glenn C. Reid},
  title = {PostScript Language},
  publisher = {Addison Wesley},
  year = {1988},
  isbn = {0-201-14396-8}}

@inproceedings{Reil97a,
  author = {James Reilly and Petri Niska and Luca Deri and Dieter Gantenbein},
  title = {Enabling Mobile Network Managers},
  booktitle = {6th International WWW Conference},
  pages = {(To appear)},
  year = {1997},
  abstract = {Network and system maintenance personnel are
increasingly mobile. This creates a potential market
for a network, system and service management
terminal that is highly mobile, which would
supplement existing network and system management
solutions. This paper presents a generic
architectural solution for this problem based on a
highly scalable and network-centric approach to
development of network management applications.
Although the specific focus is on network management
solutions, the results are generally applicable to
many other types of applications as well. Some
details and experiences from an actual
implementation are described, using the Nokia 9000
Communicator and IBM Webbin' CMIP as the enabling
technologies. Areas for future research are also
explored.},
  brokenurl = {http://www.zurich.ibm.com/~lde/MobilePaper/},
  month = apr}

@article{Reim04a,
  author = {Reimer, Darrell and Schonberg, Edith and Srinivas, Kavitha and Srinivasan, Harini and Alpern, Bowen and Johnson, Robert D. and Kershenbaum, Aaron and Koved, Larry},
  title = {{SABER: Smart Analysis Based Error Reduction}},
  journal = {SIGSOFT Software Engineering Notes},
  volume = {29},
  pages = {243--251},
  publisher = {ACM},
  year = {2004},
  month = {jul},
  number = {4}}

@misc{Reim11a,
  author = {Alejandro Reimondo},
  title = {Image Gestation Project},
  note = {http://alereimondo.no-ip.org/ImageGestation}}

@article{Rein17a,
  author = {Rein, Patrick and Ramson, Stefan and Lincke, Jens and Felgentreff, Tim and Hirschfeld, Robert},
  title = {Group-based behavior adaptation mechanisms in object-oriented systems},
  journal = {IEEE Software},
  volume = {34},
  pages = {78--82},
  publisher = {IEEE},
  year = {2017},
  number = {6}}

@article{Rein18a,
  author = {Rein, Patrick and Ramson, Stefan and Lincke, Jens and Hirschfeld, Robert and Pape, Tobias},
  title = {Exploratory and live, programming and coding: a literature study comparing perspectives on liveness},
  journal = {The Art, Science, and Engineering of Programming},
  volume = {3},
  publisher = {aosa, Inc.},
  year = {2018},
  doi = {https://doi.org/10.22152/programming-journal.org/2019/3/1},
  number = {1}}

@article{Rein19a,
  author = {Reinout Stevens and Tim Molderez and Coen De Roover},
  title = {Querying distilled code changes to extract executable transformations},
  journal = {Empirical Software Engineering},
  volume = {24},
  pages = {491--535},
  year = {2019},
  keywords = {change analysis, commit querying, history querying},
  number = {1}}

@inproceedings{Reis03a,
  author = {Steven P. Reiss},
  title = {Visualizing {Java} in Action},
  booktitle = {Proceedings of SoftVis 2003 (ACM Symposium on Software Visualization)},
  pages = {57--66},
  year = {2003}}

@inproceedings{Reis03b,
  author = {Reiss, S.P.},
  title = {Event-based performance analysis},
  booktitle = {11th IEEE International Workshop on Program Comprehension, 2003.},
  pages = {74-83},
  year = {2003},
  doi = {10.1109/WPC.2003.1199191}}

@article{Reis05a,
  author = {Steven P. Reiss},
  title = {The Paradox of Software Visualization},
  journal = {VISSOFT 2005. 3rd IEEE International Workshop on Visualizing Software for Understanding and Analysis},
  pages = {19},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/VISSOF.2005.1684306},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7803-9540-9}}

@inproceedings{Reis05b,
  author = {Steven P. Reiss},
  title = {{JOVE}: {Java} as it happens},
  booktitle = {Proceedings of SoftVis 2005(ACM Symposium on Software Visualization)},
  pages = {115--124},
  year = {2005}}

@inproceedings{Reis09a,
  author = {Reiss, S. P.},
  title = {Specifying what to search for},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {41--44},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070020},
  doi = {10.1109/SUITE.2009.5070020},
  abstract = {In this position paper we look at the problem of
letting the programmer specify what they want to
search for. We discuss current approaches and their
problems. We propose a semantics-based approach and
describe the steps we have taken and the many open
questions remaining.}}

@article{Reis85a,
  author = {S.P. Reiss},
  title = {{PECAN}: Program Development Systems that Support Multiple Views},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-11},
  pages = {276--285},
  year = {1985},
  month = mar,
  number = {3}}

@inproceedings{Reis86a,
  author = {S.P. Reiss},
  title = {{GARDEN} Tools: Support for Graphical Programming},
  booktitle = {Advanced Programming Environments, Proc of an Int Workshop},
  volume = {244},
  pages = {59--72},
  publisher = {Springer-Verlag},
  year = {1986},
  address = {Trondheim},
  editor = {R. Conradi and T.M. Didriksen and D.H. Wanvik},
  month = jun,
  series = {LNCS}}

@article{Reis86b,
  author = {S.P. Reiss},
  title = {An Object-Oriented Framework for Graphical Programming},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {49--57},
  year = {1986},
  month = oct,
  number = {10}}

@article{Reis87a,
  author = {S.P. Reiss},
  title = {Working in the {Garden} Environment for Conceptual Programming},
  journal = {IEEE Software},
  volume = {4},
  pages = {16--27},
  year = {1987},
  number = {6}}

@incollection{Reis87b,
  author = {S.P. Reiss},
  title = {An Object-Oriented Framework for Conceptual Programming},
  booktitle = {Research Directions in Object-Oriented Programming},
  pages = {189--218},
  publisher = {MIT Press},
  year = {1987},
  editor = {B. Shriver and P. Wegner}}

@article{Reis88a,
  author = {A.H. Reisner and C.A. Bucholtz},
  title = {The Use of various Properties of Amino Acids in Color and Monochrome Dot-Matrix Analyses for Protein Homologies},
  journal = {Comput. Appl. Biosci.},
  volume = {4},
  pages = {395--402},
  year = {1988}}

@article{Reis90a,
  author = {Steven P. Reiss},
  title = {Interacting with the FIELD environment},
  journal = {Software --- Practice and Experience},
  volume = {20},
  pages = {89--115},
  year = {1990}}

@book{Reis91a,
  author = {Martin Reiser},
  title = {The Oberon System, User Guide and Programmer;s Manual},
  publisher = {ACM Press},
  year = {1991},
  isbn = {0-201-54422-9}}

@book{Reis92a,
  author = {Martin Reiser},
  title = {Programming in Oberon --- Steps beyond Pascal and Modula},
  publisher = {ACM Press},
  year = {1992},
  isbn = {0-201-56543-9}}

@article{Reis95a,
  author = {Steven P. Reiss},
  title = {An Engine for the {3D} Visualization of Program Information},
  journal = {J. Vis. Lang. Comput.},
  volume = {6},
  pages = {299-323},
  year = {1995},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  number = {3}}

@proceedings{Reis97a,
  title = {Theoretical aspects of Computer Science},
  booktitle = {Proceedings of the 14th Annual Symposium on Theoretical Aspects of Computer Science, STACS '97},
  volume = {1200},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Lubeck, Germany},
  editor = {Rudiger Reischuck and Michel Morvan},
  isbn = {3-540-62616-6},
  month = feb,
  series = {LNCS}}

@misc{Remi18a,
  author = {{Ethereum Foundation}},
  title = {Remix Documentation Release 1.},
  year = {2018},
  url = {https://remix.readthedocs.io/en/latest},
  note = {https://remix.readthedocs.io/en/latest}}

@inbook{Remy94a,
  author = {Didier R{\'e}my},
  title = {Typing Record Concatenation for Free},
  chapter = 10,
  booktitle = {Theoretical Aspects Of Object-Oriented Programming. Types, Semantics and Language Design},
  pages = {351--372},
  publisher = {MIT Press},
  year = {1994},
  url = {file://ftp.inria.fr/INRIA/Projects/cristal/Didier.Remy/taoop2.dvi.Z},
  month = apr}

@inproceedings{Ren04a,
  author = {Xiaoxia Ren and Fenil Shah and Frank Tip and Barbara Ryder and Ophelia Chesley},
  title = {{Chianti: A Tool for Change Impact Analysis of Java Programs}},
  booktitle = {Proceedings of the Object-Oriented Programming, Systems, Languages \& Applications},
  pages = {432--448},
  publisher = {ACM},
  year = {2004},
  address = {Vancouver, BC, Canada},
  month = {oct},
  series = {OOPSLA'04}}

@article{Ren06a,
  author = {Ren, Xiaoxia and Chesley, Ophelia C. and Ryder, Barbara G.},
  title = {Identifying Failure Causes in Java Programs: An Application of Change Impact Analysis},
  journal = {IEEE Transactions on Software Engineering},
  volume = {32},
  pages = {718--732},
  publisher = {IEEE Press},
  year = {2006},
  month = sep,
  number = {9}}

@inproceedings{Ren16a,
  author = {Brianna M. Ren and Jeffrey S. Foster},
  title = {Just-in-time Static Type Checking for Dynamic Languages},
  booktitle = {Conference on {P}rogramming {L}anguage {D}esign and {I}mplementation ({PLDI})},
  year = {2016}}

@mastersthesis{Rene01a,
  author = {N'Guiamba N'Zi\'e Simon Ren\'e},
  title = {R\'etro-Ing\'enierie d'un systeme agent de diagnostic pour op\'erateur de batiments},
  year = {2001},
  school = {Universit\'e du Qu\'ebec a Montreal},
  month = dec}

@techreport{Reng03a,
  author = {Lukas Renggli},
  title = {{SmallWiki}: Collaborative Content Management},
  year = {2003},
  url = {http://scg.unibe.ch/archive/projects/Reng03a.pdf},
  abstract = {A Wiki is a collaborative software to do content
management. Although there are a lot of different
Wiki implementations available today, they all lack
the possibility to be extended and to adapt to the
needs of their users. SmallWiki is a new and fully
object-oriented Wiki framework in Smalltalk, that
has got a lot of unit-tests included. This
documentation gives an overview how to run it, about
its design and implementation, and provides a few
examples on writing extensions},
  cvs = {SmallWiki},
  institution = {University of Bern},
  note = {http://smallwiki.unibe.ch/smallwiki},
  type = {Informatikprojekt}}

@mastersthesis{Reng06a,
  author = {Lukas Renggli},
  title = {{Magritte} --- Meta-Described Web Application Development},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Reng06a.pdf},
  abstract = {Developing applications that end users can customize
is a challenge, since end users are domain experts
but still have concrete requirements. In this master
thesis we present how we used a meta-driven approach
to support the end user customization of Web
applications. We present Magritte, a recursive
meta-data meta-model integrated into the Smalltalk
reflective meta-model. The adaptive model of
Magritte enables to not only describe existing
classes but also let end users build their own
meta-models on the fly. Further on we describe how
meta-interpreters automatically build views,
reports, validating editors and persistency
mechanisms. As a complete example of how we applied
a meta-model to a Web application we present Pier,
the second version of a fully object-oriented
implementation of a content management system and
Wiki engine. Pier is implemented with objects from
the top to the bottom and is designed to be
customizable to accommodate new needs. The
integration of a powerful meta-description layer
makes it a breeze to extend the running system with
new functionality without having to patch the core
engine. We describe the lessons learned from using
the Magritte meta-model to build applications. Both
projects described in this thesis are open source
and can be downloaded from the Web site of the
author.},
  month = jun}

@inproceedings{Reng07b,
  author = {Lukas Renggli and Oscar Nierstrasz},
  title = {Transactional Memory for {Smalltalk}},
  booktitle = {Proceedings of the 2007 International Conference on Dynamic Languages (ICDL 2007)},
  pages = {207--221},
  publisher = {ACM Digital Library},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Reng07bTransMem.pdf},
  doi = {10.1145/1352678.1352692},
  abstract = {Concurrency control in Smalltalk is based on locks
and is therefore notoriously difficult to use. Even
though some implementations provide high-level
constructs, these add complexity and potentially
hard-to-detect bugs to the application.
Transactional memory is an attractive mechanism that
does not have the drawbacks of locks, however the
underlying implementation is often difficult to
integrate into an existing language. In this paper
we show how we have introduced transactional
semantics in Smalltalk by using the reflective
facilities of the language. Our approach is based on
method annotations, incremental parse tree
transformations and an optimistic commit protocol.
We report on a practical case study, benchmarks and
further and on-going work.},
  isbn = {978-1-60558-084-5},
  medium = {2}}

@misc{Reng07c,
  author = {Lukas Renggli},
  title = {Pier --- The Meta-Described Content Management System},
  year = {2007},
  url = {http://scg.unibe.ch/archive/reports/Reng07c.pdf},
  abstract = {Pier is the second generation of an industrial
strength content management and application
framework. Pier is written with objects from top to
bottom and it is easily customized to accommodate
new requirements. Pier is based on Magritte, a
powerful meta-description framework. Pier has proven
to be very powerful in the combination with Seaside,
to enable easy composition and configuration of
interactive web sites through a convenient web
interface without having to write code.},
  howpublished = {European Smalltalk User Group Innovation Technology Award},
  month = aug,
  note = {Won the 3rd prize}}

@article{Reng09a,
  author = {Lukas Renggli and Oscar Nierstrasz},
  title = {Transactional Memory in a Dynamic Language},
  journal = {Journal of Computer Languages, Systems and Structures},
  volume = {35},
  pages = {21--30},
  publisher = {Elsevier},
  year = {2009},
  misc = {was: Reng08a},
  url = {http://scg.unibe.ch/archive/papers/Reng08aTransMemory.pdf},
  doi = {10.1016/j.cl.2008.06.001},
  abstract = {Concurrency control is mostly based on locks and is
therefore notoriously difficult to use. Even though
some programming languages provide high-level
constructs, these add complexity and potentially
hard-to-detect bugs to the application.
Transactional memory is an attractive mechanism that
does not have the drawbacks of locks, however the
underlying implementation is often difficult to
integrate into an existing language. In this paper
we show how we have introduced transactional
semantics into Smalltalk by using the reflective
facilities of the language. Our approach is based on
method annotations, incremental parse tree
transformations and an optimistic commit protocol.
The implementation does not depend on modifications
to the virtual machine and therefore can be changed
at the language level. We report on a practical case
study, benchmarks and further and on-going work.},
  medium = {2},
  month = apr,
  number = {1}}

@inproceedings{Reng09b,
  author = {Lukas Renggli and Tudor G\^irba},
  title = {Why {Smalltalk} Wins the Host Languages Shootout},
  booktitle = {Proceedings of International Workshop on Smalltalk Technologies (IWST 2009)},
  pages = {107--113},
  publisher = {ACM},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Reng09bLanguageShootout.pdf},
  doi = {10.1145/1735935.1735954},
  abstract = {Integration of multiple languages into each other
and into an existing development environment is a
difficult task. As a consequence, developers often
end up using only internal DSLs that strictly rely
on the constraints imposed by the host language.
Infrastructures do exist to mix languages, but they
often do it at the price of losing the development
tools of the host language. Instead of inventing a
completely new infrastructure, our solution is to
integrate new languages deeply into the existing
host environment and reuse the infrastructure
offered by it. In this paper we show why Smalltalk
is the best practical choice for such a host
language.},
  address = {New York, NY, USA},
  isbn = {978-1-60558-899-5},
  location = {Brest, France},
  medium = {2}}

@inproceedings{Reng10a,
  author = {Lukas Renggli and Tudor G\^irba and Oscar Nierstrasz},
  title = {Embedding Languages Without Breaking Tools},
  booktitle = {Proceedings of the 24th European Conference on Object-Oriented Programming (ECOOP'10)},
  volume = {6183},
  pages = {380--404},
  publisher = {Springer-Verlag},
  year = {2010},
  url = {http://scg.unibe.ch/archive/papers/Reng10aEmbeddingLanguages.pdf},
  doi = {10.1007/978-3-642-14107-2_19},
  abstract = {Domain-specific languages (DSLs) are increasingly
used as embedded languages within general-purpose
host languages. DSLs provide a compact, dedicated
syntax for specifying parts of an application
related to specialized domains. Unfortunately, such
language extensions typically do not integrate well
with the development tools of the host language.
Editors, compilers and debuggers are either unaware
of the extensions, or must be adapted at a
non-trivial cost. We present a novel approach to
embed DSLs into an existing host language by
leveraging the underlying representation of the host
language used by these tools. Helvetia is an
extensible system that intercepts the compilation
pipeline of the Smalltalk host language to
seamlessly integrate language extensions. We
validate our approach by case studies that
demonstrate three fundamentally different ways to
extend or adapt the host language syntax and
semantics.},
  editor = {Theo D'Hondt},
  isbn = {978-3-642-14106-5},
  medium = {2},
  ratex = {23\%},
  series = {LNCS}}

@phdthesis{Reng10d,
  author = {Lukas Renggli},
  title = {Dynamic Language Embedding With Homogeneous Tool Support},
  year = {2010},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/renggli-phd.pdf},
  abstract = {Domain-specific languages (DSLs) are increasingly
				used as embedded languages within general-purpose
				host languages. DSLs provide a compact, dedicated
				syntax for specifying parts of an application
				related to specialized domains. Unfortunately, such
				language extensions typically do not integrate well
				with existing development tools. Editors, compilers
				and debuggers are either unaware of the extensions,
				or must be adapted at a non-trivial cost.
				Furthermore, these embedded languages typically
				conflict with the grammar of the host language and
				make it difficult to write hybrid code; few
				mechanisms exist to control the scope and usage of
				multiple tightly interconnected embedded languages.
				In this dissertation we present Helvetia, a novel
				approach to embed languages into an existing host
				language by leveraging the underlying representation
				of the host language used by these tools. We
				introduce Language Boxes, an approach that offers a
				simple, modular mechanism to encapsulate (i)
				compositional changes to the host language, (ii)
				transformations to address various concerns such as
				compilation and syntax highlighting, and (iii)
				scoping rules to control visibility of fine-grained
				language changes. We describe the design and
				implementation of Helvetia and Language Boxes,
				discuss the required infrastructure of a host
				language enabling language embedding, and validate
				our approach by case studies that demonstrate
				different ways to extend or adapt the host language
				syntax and semantics.},
  keywords = {scg-phd snf10 scg10 jb11 helvetia},
  month = oct,
  type = {{PhD} thesis}}

@inproceedings{Reni11a,
  author = {Reniers, Dennie and Voinea, Lucian and Telea, Alexandru},
  title = {Visual exploration of program structure, dependencies and metrics with SolidSX},
  booktitle = {2011 6th International workshop on visualizing software for understanding and analysis (VISSOFT)},
  pages = {1--4},
  year = {2011},
  organization = {IEEE}}

@inproceedings{Repe09a,
  author = {Alexander Repenning and Andri Ioannidou},
  title = {{X-expressions} in {XMLisp}: {S-expressions} and extensible markup language unite},
  booktitle = {ILC '07: Proceedings of the 2007 International Lisp Conference},
  pages = {1--11},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1622123.1622149},
  address = {New York, NY, USA},
  isbn = {978-1-59593-618-9},
  location = {Cambridge, United Kingdom}}

@article{Repp04a,
  author = {Tracy Reppert},
  title = {Don\'t just break software. Make software.},
  journal = {Better Software},
  publisher = {Software Quality Engineering},
  year = {2004},
  url = {http://www.industriallogic.com/papers/storytest.pdf},
  month = jul}

@inproceedings{Repp06a,
  author = {John Reppy and Aaron Turon},
  title = {A Foundation for Trait-based Metaprogramming},
  booktitle = {International Workshop on Foundations and Developments of Object-Oriented Languages},
  year = {2006}}

@inproceedings{Repp07a,
  author = {John Reppy and Aaron Turon},
  title = {Metaprogramming with Traits},
  booktitle = {Proceedings of European Conference on Object-Oriented Programming (ECOOP'2007)},
  year = {2007}}

@inproceedings{Repp91a,
  author = {John H. Reppy},
  title = {{CML}: {A} Higher-Order Concurrent Language},
  booktitle = {ACM SIGPLAN '91 Conference on Programming Language Design and Implementation, SIGPLAN Notices},
  volume = {26},
  pages = {293--305},
  year = {1991},
  address = {Toronto},
  month = jun,
  number = {6}}

@book{Repp99a,
  author = {John H. Reppy},
  title = {Concurrent Programming in ML},
  publisher = {Cambridge University Press},
  year = {1999}}

@inproceedings{Reps97a,
  author = {Thomas Reps and Thomas Ball and Manuvir Das and James Larus},
  title = {The Use of Program Profiling for Software Maintenance with Applications to the Year 2000 Problem},
  booktitle = {Proceedings of ESEC/FSE '97, LNCS 1301},
  pages = {432--449},
  year = {1997}}

@phdthesis{Res12,
  author = {Jorge Ressia},
  title = {Object-Centric Reflection},
  year = {2012},
  school = {Institut fur Informatik und angewandte Mathematik}}

@book{Resc06a,
  author = {Eric Rescorla},
  title = {SSL and TLS Designing and Building Secure Systems},
  publisher = {Addison-Wesley},
  year = {2006},
  isbn = {0-201-61598-3}}

@book{Resn94a,
  author = {Mitchel Resnick},
  title = {Turtles, Termites, and Traffic Jams},
  publisher = {MIT Press},
  year = {1994}}

@inproceedings{Ress09a,
  author = {Jorge Ressia and Oscar Nierstrasz},
  title = {Dynamic Synchronization --- A Synchronization Model through Behavioral Reflection},
  booktitle = {Proceedings of International Workshop on Smalltalk Technologies (IWST 2009)},
  pages = {101--106},
  publisher = {ACM},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Ress09aDynamicSynchronization.pdf},
  doi = {10.1145/1735935.1735952},
  abstract = {In conventional software applications,
synchronization code is typically interspersed with
functional code, thereby impacting understandability
and maintainability of the code base. At the same
time, the synchronization defined statically in the
code is not capable of adapting to different runtime
situations. We propose a new approach to concurrency
control which strictly separates the functional code
from the synchronization requirements to be used and
which adapts objects to be synchronized dynamically
to their environment. First-class synchronization
specifications express safety requirements, and a
dynamic synchronization system dynamically adapts
objects to different runtime situations. We present
an overview of a prototype of our approach together
with several classical concurrency problems, and we
discuss open issues for further research.},
  address = {New York, NY, USA},
  isbn = {978-1-60558-899-5},
  location = {Brest, France},
  medium = {2}}

@inproceedings{Ress10a,
  author = {Jorge Ressia and Lukas Renggli and Tudor G\^irba and Oscar Nierstrasz},
  title = {Run-Time Evolution through Explicit Meta-Objects},
  booktitle = {Proceedings of the 5th Workshop on Models@run.time at the ACM/IEEE 13th International Conference on Model Driven Engineering Languages and Systems (MODELS 2010)},
  pages = {37--48},
  year = {2010},
  url = {http://scg.unibe.ch/archive/papers/Ress10a-RuntimeEvolution.pdf},
  abstract = {Software must be constantly adapted due to evolving
domain knowledge and unanticipated requirements
changes. To adapt a system at run-time we need to
reflect on its structure and its behavior.
Object-oriented languages introduced reflection to
deal with this issue, however, no reflective
approach up to now has tried to provide a unified
solution to both structural and behavioral
reflection. This paper describes Albedo, a unified
approach to structural and behavioral reflection.
Albedo is a model of fined-grained unanticipated
dynamic structural and behavioral adaptation.
Instead of providing reflective capabilities as an
external mechanism we integrate them deeply in the
environment. We show how explicit meta-objects allow
us to provide a range of reflective features and
thereby evolve both application models and
environments at run-time.},
  annote = {internationalworkshop},
  keywords = {snf10 jb11 scg-pub skip-doi girba scg10 bifrost},
  medium = {2},
  month = oct,
  peerreview = {yes}}

@inproceedings{Ress12a,
  author = {Ressia, Jorge and Bergel, Alexandre and Nierstrasz, Oscar},
  title = {Object-Centric Debugging},
  booktitle = {Proceeding of the 34rd international conference on Software engineering},
  year = {2012},
  url = {http://scg.unibe.ch/archive/papers/Ress12a-ObjectCentricDebugging.pdf},
  doi = {10.1109/ICSE.2012.6227167},
  abstract = {During the process of developing and maintaining a complex
	software system, developers pose detailed questions about the
	runtime behavior of the system. Source code views offer strictly
	limited insights, so developers often turn to tools like debuggers
	to inspect and interact with the running system. Unfortunately,
	traditional debuggers focus on the runtime stack as the key
	abstraction to support debugging operations, though the questions
	developers pose often have more to do with objects and their
	interactions.
	We propose object-centric debugging as an alternative approach
	to interacting with a running software system. We show how, by
	focusing on objects as the key abstraction, natural debugging
	operations can be defined to answer developer questions related
	to runtime behavior. We present a running prototype of an
	object-centric debugger, and demonstrate, with the help of a series
	of examples, how object-centric debugging offers more effective
	support for many typical developer tasks than a traditional
	stack-oriented debugger.},
  annote = {internationalconference},
  location = {Zurich, Switzerland},
  series = {ICSE '12}}

@article{Ress12b,
  author = {Jorge Ressia and Alexandre Bergel and Oscar Nierstrasz and Lukas Renggli},
  title = {Modeling Domain-Specific Profilers},
  journal = {Journal of Object Technology},
  volume = {11},
  pages = {1-21},
  year = {2012},
  doi = {10.5381/jot.2012.11.1.a5},
  abstract = {Domain-specific languages and models are increasingly used within
				general-purpose host languages. While traditional profiling tools
				perform well on host language code itself, they often fail to provide
				meaningful results if the developers start to build and use abstractions
				on top of the host language. In this paper we motivate the need for
				dedicated profiling tools with three different case studies. Furthermore,
				we present an infrastructure that enables developers to quickly prototype
				new profilers for their domain-specific languages and models.},
  issn = {1660-1769},
  medium = {2},
  month = apr,
  number = {1},
  peerreview = {yes}}

@article{Ress12e,
  author = {Ressia, Jorge and G\^irba, Tudor and Nierstrasz, Oscar and Perin, Fabrizio and Renggli, Lukas},
  title = {Talents: an environment for dynamically composing units of reuse},
  journal = {Software: Practice and Experience},
  publisher = {John Wiley & Sons, Ltd},
  year = {2012},
  url = {http://scg.unibe.ch/archive/papers/Ress12eTalentsSPE.pdf},
  doi = {10.1002/spe.2160},
  annote = {internationaljournal},
  issn = {1097-024X},
  keywords = {snf12 jb12 scg-pub scg12 bifrost talents reflection traits Mixins object-specific smalltalk girba},
  medium = {2},
  peerreview = {yes}}

@inproceedings{Rett02a,
  author = {A. Rettberg and W. Thronicke},
  title = {Embedded System Design Based On Webservices},
  booktitle = {DATE '02: Proceedings of the conference on Design, automation and test in Europe},
  pages = {232},
  publisher = {IEEE Computer Society},
  year = {2002},
  address = {Washington, DC, USA}}

@inproceedings{Reub93a,
  author = {Howard Reubenstein and Richard Piazza and Susan Roberts},
  title = {Separating Parsing and Analysis in Reverse Engineering Tools},
  booktitle = {First Working Conference on Reverse Engineering ({WCRE} 1993)},
  pages = {117--125},
  year = {1993}}

@inproceedings{Reyn85a,
  author = {John C. Reynolds},
  title = {Three Approaches to Type Structure},
  booktitle = {Proceedings TAPSOFT '85},
  volume = {185},
  pages = {97--138},
  publisher = {Springer-Verlag},
  year = {1985},
  editor = {Ehrig and Floyd, Nivat and Thatcher},
  series = {LNCS}}

@techreport{Reyn88a,
  author = {John C. Reynolds},
  title = {Preliminary Design of the Programming Language Forsythe},
  year = {1988},
  institution = {Carnegie Mellon University},
  month = jun,
  number = {CMU-CS-88-159}}

@inproceedings{Reyn91a,
  author = {John C. Reynolds},
  title = {The Coherence of Languages with Intersection Types},
  booktitle = {Proceedings Theoretical Aspects of Computer Software (TACS '91)},
  volume = {526},
  pages = {675--700},
  publisher = {Springer-Verlag},
  year = {1991},
  address = {Sendai, Japan},
  editor = {T. Ito and A.R. Meyer},
  month = sep,
  series = {LNCS}}

@article{Reyn93a,
  author = {Reynolds John C.},
  title = {The discoveries of continuations},
  journal = {Lisp Symb. Comput.},
  volume = {6},
  pages = {233--248},
  publisher = {Kluwer Academic Publishers},
  year = {1993},
  url = {http://dx.doi.org/10.1007/BF01019459},
  doi = {10.1007/BF01019459},
  acmid = {198114},
  address = {Hingham, MA, USA},
  issn = {0892-4635},
  keywords = {continuation, continuation-passing style, semantics},
  month = nov,
  number = {3-4},
  numpages = {16}}

@inproceedings{Reyn94a,
  author = {Jeffrey C. Reynar},
  title = {An Automatic Method of Finding Topic Boundaries},
  booktitle = {Proceedings of the 32. Meeting of the Association for Computational Linguistics},
  pages = {331--333},
  year = {1994},
  url = {citeseer.ist.psu.edu/reynar94automatic.html}}

@phdthesis{Reyn98a,
  author = {Jeffrey C. Reynar},
  title = {Topic Segmentation: Algorithms and Applications},
  year = {1998},
  school = {University of Pennsylvania}}

@book{Rhei85a,
  author = {Howard Rheingold},
  title = {Tools for Thought},
  publisher = {The MIT Press},
  year = {1985}}

@inproceedings{Rho98a,
  author = {Rho, Jungkyu and Wu, Chisu},
  title = {An Efficient Version Model of Software Diagrams},
  booktitle = {Proceedings of the 5th Asia Pacific Software Engineering Conference},
  pages = {236--243},
  publisher = {IEEE Computer Society},
  year = {1998},
  address = {Washington, DC, USA},
  isbn = {0-8186-9183-2},
  series = {APSEC'98}}

@inproceedings{Ricc05a,
  author = {Filippo Ricca and Paolo Tonella},
  title = {Anomaly detection in Web applications: a review of already conducted case studies},
  booktitle = {Proceedings IEEE European Conference on Software Maintenance and Reengineering (CSMR 2005)},
  pages = {385--394},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  address = {Los Alamitos CA},
  location = {Manchester, United Kingdom}}

@article{Rice94a,
  author = {M.D. Rice and S.B. Seidman},
  title = {A Formal Model for Module Interconnection Languages},
  journal = {IEEE Transactions on Software Engineering},
  volume = {20},
  pages = {88--100},
  year = {1994},
  month = jan,
  number = {1}}

@phdthesis{Rich02b,
  author = {Tamar Richner},
  title = {Recovering Behavioral Design Views: a Query-Based Approach},
  year = {2002},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/richner-phd.pdf},
  abstract = {The reality of software development is such that
engineers must often perform maintenance tasks with
missing or out-of-date documentation and without the
support of the original developers. To understand
the software as it is now, engineers use reverse
engineering tools to recover information from the
code itself. Most such tools analyze only static
information about the system and so provide
engineers with structural, rather than behavioral
models. It is, however, critical to understand the
behavioral aspect of the software system in order to
carry out certain maintenance tasks. To better
understand program behavior engineers turn to tools
which use dynamic information collected during
program execution. Such tools typically display all
the dynamic information at very fine granularity,
making it difficult to extract manageable models of
behavior. They then rely on visualization and
navigation techniques to help the engineer locate
information relevant to the change task. In this
dissertation we propose an approach to recovering
behavioral models from object-oriented software
which is based on perspectives. Our approach enables
an engineer to declaratively define perspectives
through which the dynamic information can be viewed.
It supports an iterative recovery process in which
successive views of the software system help the
engineer to answer questions related to the
maintenance task to be performed. We claim that such
an approach can overcome the difficulties of
recovering succinct and focused views of
object-oriented software from dynamic information. A
perspective is a model of the kind of information
that an engineer is interested in. Our approach
supports the construction of principally two kinds
of such models: component-connector models and
collaboration models. We first identify a meta-model
for describing object-oriented software and its
execution, then develop a simple declarative way to
express perspectives in terms of this meta-model:
component-connector perspectives express a range of
static groupings and dynamic relations;
collaboration perspectives abstract from execution
sequences to class collaborations. Using case
studies we demonstrate the validity of our approach
by showing how perspectives are used in an iterative
process to recover both high-level and low-level
succinct behavioral views.},
  month = may}

@inproceedings{Rich02c,
  author = {Debbie Richards and Kathrin B{\"o}ttger},
  title = {Assisting {Decision} {Making} in {Requirements} {Reconciliation}},
  booktitle = {Proceedings of CSCWD '02 (7th International Conference on Computer Supported Cooperative Work in Design)},
  publisher = {IEEE Computer Society Press},
  year = {2002},
  address = {Brazil},
  month = sep}

@inproceedings{Rich02d,
  author = {Debbie Richards and Kathrin B{\"o}ttger},
  title = {A {Controlled} {Language} to {Assist} {Conversion} of {Use} {Case} {Descriptions} into {Concept} {Lattices}},
  booktitle = {Proceedings of AI '02 (15th Australian Joint Conference on Artificial Intelligence)},
  pages = {579--590},
  publisher = {Springer Verlag},
  year = {2002},
  address = {Canberra, Australia},
  number = {2557},
  series = {LNAI}}

@inproceedings{Rich02e,
  author = {Debbie Richards and Kathrin B{\"o}ttger and Anne Fure},
  title = {{RECOCASE}-tool: A {CASE} {Tool} for {RECOnciling} {Requirements} {Viewpoints}},
  booktitle = {Proceedings of AWRE '02 (7th Australian Workshop on Requirements Engineering)},
  year = {2002}}

@inproceedings{Rich02f,
  author = {Debbie Richards and Kathrin B{\"o}ttger},
  title = {Representing {Requirements} in {Natural} {Language} as {Concept} {Lattices}},
  booktitle = {Proceedings of the 22nd Annual International Conference of the British Computer Society's Specialist Group on Artificial Intelligence (ES2002)},
  publisher = {Springer Verlag},
  year = {2002},
  address = {Cambridge},
  month = dec}

@inproceedings{Rich02g,
  author = {Debbie Richards and Kathrin B{\"o}ttger and Anne Fure},
  title = {Using {RECOCASE} to Compare Use Cases from Multiple Viewpoints},
  booktitle = {Proceedings of ACIS '02 (13th Australasian Conference on Information Systems)},
  year = {2002},
  address = {Melbourne, Australia},
  month = dec}

@book{Rich07a,
  author = {Leonard Richardson and Sam Ruby},
  title = {RESTful Web Services},
  pages = {446},
  publisher = {O'Reilly},
  year = {2007},
  isbn = {0-596-52926-0}}

@inproceedings{Rich11a,
  author = {Gregor Richards and Christian Hammer and Brian Burg and Jan Vitek},
  title = {The Eval that Men Do: A Large-scale Study of the Use of Eval in JavaScript Applications},
  booktitle = {Proceedings of Ecoop 2011},
  year = {2011}}

@article{Rich71a,
  author = {M. Richards},
  title = {The Portability of the {BCPL} Compiler},
  journal = {Software --- Practice and Experience},
  volume = {1},
  pages = {135--146},
  year = {1971}}

@incollection{Rich77a,
  author = {M. Richards},
  title = {The Implementation of {BCPL}},
  booktitle = {Software Portability},
  pages = {192--202},
  publisher = {Cambridge University Press},
  year = {1977},
  editor = {P.J. Brown}}

@inproceedings{Rich92a,
  author = {Joel Richardson and Peter Schwarz and Luis-Felipe Cabrera},
  title = {{CACL}: Efficient Fine-Grained Protection for Objects},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {263--275},
  year = {1992},
  month = oct}

@inproceedings{Rich97a,
  author = {Tamar Richner and Robb Nebbe},
  title = {Analyzing Dependencies to Solve Low-Level Problems},
  booktitle = {Object-Oriented Technology (ECOOP '97 Workshop Reader)},
  volume = 1357,
  pages = {266--267},
  publisher = {Springer-Verlag},
  year = {1997},
  url = {http://scg.unibe.ch/archive/papers/Rich97aLowLevel.pdf},
  abstract = {We have identified two levels of restructuring in
the re-engineering of object-oriented legacy
systems: high-level restructuring is concerned with
improving the overall architecture of the system,
whereas low-level restructuring deals with repairing
local problems which are symptoms of bad style. We
propose to characterize these low-level problems as
patterns of dependencies between classes as an aid
in detecting and resolving them. In this paper we
briefly present low-level problems and give two
examples of how these can be characterized as
specific dependency patterns.},
  editor = {Jan Bosch and Stuart Mitchell},
  month = jun,
  series = {LNCS}}

@inproceedings{Rich97b,
  author = {Richards, D. and Compton, P.},
  title = {Combining Formal Concept Analysis and Ripple Down Rules to Support Reuse},
  booktitle = {Proceedings of Software Engineering Knowledge Engineering SEKE'97},
  publisher = {Springer-Verlag},
  year = {1997},
  address = {Madrid},
  month = jun}

@inproceedings{Rich98a,
  author = {Tamar Richner},
  title = {Describing Framework Architectures: more than Design Patterns},
  booktitle = {Proceedings of the ECOOP '98 Workshop on Object-Oriented Software Architectures},
  publisher = {University of Karlskrona},
  year = {1998},
  url = {http://scg.unibe.ch/archive/papers/Rich98aFrameworkArch.pdf},
  abstract = {In this paper we argue for the necessity of an
architectural description of a framework. We then
analyze why design patterns on their own are
insufficient for such a description and propose that
a variety of complementary forms of documentation
are needed to address the requirements of an
architectural description. We claim that traditional
artifacts of domain analysis and object-oriented
design can better capture the architecture of a
framework by describing the design solutions in the
problem context at a higher level of granularity
than can design patterns.},
  editor = {Jan Bosch and Helene Bachatene and G{\"o}rel Hedin and Kai Koskimies},
  month = jul,
  series = {Research Report 13/98}}

@inproceedings{Rich99b,
  author = {Tamar Richner},
  title = {Using Recovered Views to Track Architectural Evolution},
  booktitle = {ECOOP '99 Workshop Reader},
  publisher = {Springer-Verlag},
  year = {1999},
  url = {http://scg.unibe.ch/archive/famoos/Rich99b/ecoop99.pdf},
  abstract = {Tracking the evolution of a software system through
time gives us valuable information. It suggests
which parts are likely to remain stable and which
'problem' aspects are likely to change, and it gives
us insight into some of the design choices made. In
this paper we show how recovered views of succesive
versions of the same software system can be used to
track evolution. We first briefly describe our
approach for recovering views of software
applications. We then compare views of two versions
of the HotDraw framework. Our objective is to
illustrate a number of issues concerning
architectural evolution: what is architectural
change as opposed to change in general? how can we
detect architectural drift? how can we evaluate the
relative quality of different architectural
solutions? what are guidelines for building
evolvable software?},
  month = jun,
  number = 1743,
  series = {LNCS}}

@inbook{Rieb04a,
  author = {Matthias Riebisch},
  title = {Towards a More Precise Definition of Feature Models},
  booktitle = {Modelling Variability for Object-Oriented Product lines},
  pages = {64--76},
  publisher = {BooksOnDemand Publ. Co. Norderstedt},
  year = {2003}}

@inproceedings{Rieb04b,
  author = {Matthias Riebisch},
  title = {Supporting Evolutionary Development by Feature Models and Traceability Links},
  booktitle = {Proceedings of 11th IEEE International Conference and Workshop on the Engineering of Computer-Based Systems (ECBS'04)},
  year = {2004},
  address = {Brno, Czech Republic},
  month = may}

@article{Riec02a,
  author = {Jon G. Riecke and Christopher A. Stone},
  title = {Privacy via subsumption},
  journal = {Inf. Comput.},
  volume = {172},
  pages = {2--28},
  publisher = {Academic Press, Inc.},
  year = {2002},
  doi = {10.1006/inco.2000.2925},
  address = {Duluth, MN, USA},
  issn = {0890-5401},
  number = {1}}

@inproceedings{Riec98a,
  author = {Riechmann, Thomas and Hauck, Franz J},
  title = {Meta objects for access control: extending capability-based security},
  booktitle = {Proceedings of the 1997 workshop on New security paradigms},
  pages = {17--22},
  year = {1998},
  date-added = {2015-06-12 13:38:03 +0000},
  date-modified = {2015-06-12 13:38:15 +0000},
  organization = {ACM}}

@techreport{Rieg04a,
  author = {Matthias Rieger},
  title = {Experiments on Language Independent Duplication Detection},
  year = {2004},
  url = {http://scg.unibe.ch/archive/papers/Rieg04a-IAM-04-002.pdf},
  abstract = {Duplicated code can have a severe, negative impact
on the maintainability of large software systems.
Techniques for detecting duplicated code exist but
they rely mostly on parsers, technology that is
often fragile in the face of different languages and
dialects. In this paper we show that a lightweight
approach based on simple string-matching can be
effectively used to detect a significant amount of
code duplication. The approach scales well, and can
be easily adapted to different languages and
contexts. We validate our approach by applying it to
a number of industrial and open source case studies,
involving five different implementation languages
and ranging from 256KB to 13MB of source code.
Finally, we compare our approach to a more
sophisticated one employing parameterized matching,
and demonstrate that little if anything is gained by
adopting a more heavyweight approach.},
  institution = {University of Bern, Institute of Applied Mathematics and Computer Science},
  number = {iam-04-002}}

@phdthesis{Rieg05a,
  author = {Matthias Rieger},
  title = {Effective Clone Detection Without Language Barriers},
  year = {2005},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/rieger-phd.pdf},
  abstract = {Duplication is detected by comparing features of
source fragments. The main problem for the detection
is that source code is rarely copied exactly. The
detection process must be able to ignore the
superficial differences and to concentrate on
fundamental similarities in order to find relevant
duplication. While the high level information
yielded by syntactic and semantic code analysis can
be put to effective use, the drawbacks of these deep
analysis techniques are most importantly the reduced
adaptability to different programming languages.
Because duplication is an ubiquitous problem,
however, support for duplication detection and
management is needed for every programming language
in use. In this thesis we investigate how the
premises of simplicity and adaptability influence
all phases of the clone detection process. We
analyze how line-based string matching as basic
feature comparison technique can be augmented by
minimal parsing to improve detection sensitivity. We
investigate which code normalization techniques
remove the superficial differences and reveal the
similarities. We show how clone candidates are
retrieved from the results of the basic comparison.
We propose measures to select the relevant clones
from the set of all retrieved candidates. We finally
develop a collection of quantitative visualizations
that enable the assessment of the copied code in the
context of the entire system. We experimentally
validate the proposed code normalization technique
in terms of precision and recall, show how the
proposed relevancy measures improve on simple size
metrics, and discuss scalability issues. We also
validate the line-based granularity, and perform a
comparison of our technique with related string
matching detectors.},
  cvs = {MRiegerPhD},
  month = jun}

@mastersthesis{Rieg97a,
  author = {Matthias Rieger},
  title = {Implementing the {FACE} Object Model in {C}++},
  year = {1997},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Rieg97a.pdf http://scg.unibe.ch/archive/masters/Rieg97a.html},
  abstract = {FACE is an object oriented, self-describing data
model with first-class types. FACE can be used to
model software, e.g. object oriented frameworks. We
explore techniques and mechanisms to implement the
reflective FACE data model in the statically typed,
object oriented language C++. Some comparison of
FACE with other meta level approaches like
MetaObject Protocols or Open Implementations is
done, and a short example modeling software is
described.},
  month = jun,
  type = {Master's thesis}}

@phdthesis{Rieh00a,
  author = {Dirk Riehle},
  title = {Framework Design: a Role Modelling Approach},
  year = {2000},
  school = {Swiss Federal Institute of Technology, Zurich},
  key = {Diss. ETH No. 13509}}

@inproceedings{Rieh01a,
  author = {Dirk Riehle and Steven Fraleigh and Dirk Bucka-Lassen and Nosa Omorogbe},
  title = {The Architecture of a UML Virtual Machine},
  booktitle = {Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA '01)},
  pages = {327--341},
  year = {2001}}

@incollection{Rieh05a,
  author = {Dirk Riehle and Michel Tilman and Ralph Johnson},
  title = {Dynamic Object Model},
  booktitle = {Pattern Languages of Program Design 5},
  publisher = {Addison-Wesley},
  year = {2005}}

@incollection{Rieh95,
  author = {Dirk Riehle and Heinz Z\"{u}llighoven},
  title = {A pattern language for tool construction and integration based on the tools and materials metaphor},
  booktitle = {Pattern languages of program design 1},
  pages = {9--42},
  publisher = {ACM Press/Addison-Wesley Publishing Co.},
  year = {1995},
  address = {New York, NY, USA},
  isbn = {0-201-60734-4}}

@inproceedings{Rieh95a,
  author = {Dirk Riehle},
  title = {{How and Why to Encapsulate Class Tree}},
  booktitle = {Proceedings of OOPSLA '95},
  pages = {251--264},
  year = {1995},
  address = {Austin},
  month = oct,
  organization = {ACM}}

@inproceedings{Rieh98a,
  author = {Dirk Riehle and Thomas Gross},
  title = {Role Model Based Framework Design and Integration},
  booktitle = {Proceedings OOPSLA '98, ACM SIGPLAN Notices},
  pages = {117--133},
  year = {1998},
  month = oct}

@incollection{Rieh98b,
  author = {Dirk Riehle},
  title = {Bureaucracy},
  booktitle = {Pattern Languages of Program Design 3},
  pages = {163--185},
  publisher = {Addison Wesley},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann}}

@inproceedings{Riek87a,
  author = {Wolf-Fritz Riekert},
  title = {The {ZOO} Metasystem: {A} Direct-Manipulation Interface to Object-Oriented Knowledge Bases},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {131--139},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@book{Riel96a,
  author = {Arthur Riel},
  title = {Object-Oriented Design Heuristics},
  pages = {400},
  publisher = {Addison Wesley},
  year = {1996},
  address = {Boston MA}}

@inproceedings{Rigb08a,
  author = {Rigby, Peter C. and German, Daniel M. and Storey, Margaret-Anne},
  title = {Open Source Software Peer Review Practices: A Case Study of the Apache Server},
  booktitle = {Proceedings of the 30th International Conference on Software Engineering},
  pages = {541--550},
  publisher = {ACM},
  year = {2008},
  url = {http://doi.acm.org/10.1145/1368088.1368162},
  doi = {10.1145/1368088.1368162},
  acmid = {1368162},
  address = {New York, NY, USA},
  isbn = {978-1-60558-079-1},
  keywords = {inspection, mining software repositories (email), open source software, peer review},
  location = {Leipzig, Germany},
  numpages = {10},
  series = {ICSE '08}}

@article{Rigb12a,
  author = {Rigby, Peter and Cleary, Brendan and Painchaud, Frederic and Storey, Margaret-Anne and German, Daniel},
  title = {Contemporary Peer Review in Action: Lessons from Open Source Development},
  journal = {IEEE Softw.},
  volume = {29},
  pages = {56--61},
  publisher = {IEEE Computer Society Press},
  year = {2012},
  url = {http://dx.doi.org/10.1109/MS.2012.24},
  doi = {10.1109/MS.2012.24},
  acmid = {2412837},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  keywords = {software quality, software peer review, inspection, agile development, open source software development},
  month = {nov},
  number = {6},
  numpages = {6}}

@article{Rigg96a,
  author = {Roger Riggs and Jim Waldo and Ann Wollrath and Krishna Bharat},
  title = {Pickling State in the {Java} System},
  journal = {Computing Systems},
  volume = {9},
  pages = {291--312},
  year = {1996},
  url = {http://citeseer.nj.nec.com/riggs96pickling.html},
  number = {4}}

@misc{Rigi,
  title = {Rigi Home Page},
  url = {http://www.rigi.csc.uvic.ca/},
  key = {rigi design-recovery},
  note = {http://www.rigi.csc.uvic.ca/}}

@techreport{Rigo05a,
  author = {A. Rigo and M. Hudson and S. Pedroni},
  title = {Compiling dynamic language implementations},
  year = {2005},
  institution = {PyPy consortium},
  number = {D05.1}}

@inproceedings{Rigo06a,
  author = {Armin Rigo and Samuele Pedroni},
  title = {{PyPy}'s approach to virtual machine construction},
  booktitle = {Proceedings of the 2006 conference on Dynamic languages symposium},
  pages = {944--953},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1176617.1176753},
  address = {New York, NY, USA},
  isbn = {1-59593-491-X},
  location = {Portland, Oregon, USA}}

@techreport{Rigo08a,
  author = {Armin Rigo},
  title = {{PyPy} -- Translation},
  year = {2008},
  url = {http://codespeak.net/pypy/dist/pypy/doc/translation.html},
  institution = {PyPy Consortium},
  note = {http://codespeak.net/pypy/dist/pypy/doc/translation.html}}

@book{Rijs79a,
  author = {C. v. Rijsbergen},
  title = {Information Retrieval},
  publisher = {Butterworths},
  year = {1979},
  address = {London}}

@inproceedings{Rill02a,
  author = {J\"urgen Rilling and S. P. Mudur},
  title = {On the Use of Metaballs to Visually Map Source Code Structures and Analysis Results onto 3D Space},
  booktitle = {{WCRE} 2002 Proceedings},
  pages = {299--308},
  publisher = {IEEE Computer Society},
  year = {2002},
  editor = {van Deursen, A. and Elizabeth Burd},
  organization = {IEEE}}

@article{Rill05a,
  author = {J\"urgen Rilling and Vu-Loc Nguyen},
  title = {Applying Code Analysis and 3D Design Pattern Grouping to Facilitate Program Comprehension},
  journal = {VISSOFT 2005. 3rd IEEE International Workshop on Visualizing Software for Understanding and Analysis},
  volume = {0},
  pages = {33},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/VISSOF.2005.1684320},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7803-9540-9}}

@inproceedings{Rina02a,
  author = {Ran Rinat and Scott Smith},
  title = {Modular Internet Programming with Cells},
  booktitle = {Proceedings ECOOP 2002},
  volume = 2374,
  pages = {257--280},
  publisher = {Springer Verlag},
  year = {2002},
  url = {http://www.cs.jhu.edu/labs/pll/cells/papers/ecoop02.ps},
  address = {Malaga, Spain},
  editor = {Boris Magnusson},
  month = jun,
  series = {LNCS}}

@inproceedings{Rina96a,
  author = {Ran Rinat and Menachem Magidor},
  title = {Metaphoric Polymorphism: Taking Code Reuse One Step Further},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {449--471},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Ripp04a,
  author = {Rippert, Christophe and Courbot, Alexandre and Grimaud, Gilles},
  title = {A Low-footprint Class Loading Mechanism for Embedded Java Virtual Machines},
  booktitle = {Proceedings of the 3rd International Symposium on Principles and Practice of Programming in Java},
  pages = {75--82},
  publisher = {Trinity College Dublin},
  year = {2004},
  url = {http://dl.acm.org/citation.cfm?id=1071565.1071580},
  acmid = {1071580},
  isbn = {1-59593-171-6},
  location = {Las Vegas, Nevada},
  numpages = {8},
  series = {PPPJ '04}}

@incollection{Risi00a,
  author = {Linda Rising},
  title = {Customer Interaction Patterns},
  booktitle = {Pattern Languages of Program Design 4},
  pages = {585--609},
  publisher = {Addison Wesley},
  year = {2000},
  editor = {Neil Harrison and Brian Foote and Hans Rohnert}}

@book{Risi00b,
  author = {Linda Rising},
  title = {The Pattern Almanac 2000},
  publisher = {Addison Wesley},
  year = {2000}}

@article{Risi00c,
  author = {Rising, Linda and Janoff, Norman S.},
  title = {The Scrum Software Development Process for Small Teams},
  journal = {IEEE Software},
  volume = {17},
  pages = {26--32},
  publisher = {IEEE Computer Society},
  year = {2000},
  url = {http://members.cox.net/risingl1/Articles/IEEEScrum.pdf},
  doi = {10.1109/52.854065},
  abstract = {In today's software development environment,
requirements often change during the product
development life cycle to meet shifting business
demands, creating endless headaches for development
teams. These authors from AG Communications Systems
discuss their experience in implementing the Scrum
software development process to address these
concerns. In experimenting with the Scrum software
development process, they have found that small
teams can be flexible and adaptable in defining and
applying an appropriate variant of Scrum.},
  address = {Los Alamitos, CA, USA},
  issn = {0740-7459},
  month = jul,
  number = {4}}

@article{Risi92a,
  author = {Linda Rising and Frank W. Calliss},
  title = {Problems with Determining Package Cohesion and Coupling},
  journal = {Software - Practice and Experience},
  volume = {22},
  pages = {553--571},
  year = {1992},
  number = {7}}

@incollection{Riss91a,
  author = {Edwina L. Rissland},
  title = {Example-based Reasoning},
  booktitle = {Informal Reasoning in Education},
  pages = {187--208},
  publisher = {Lawrence Erlbaum Associates},
  year = {1991},
  editors = {J. F. Voss and D. N. Parkins and J. W. Segal}}

@book{Rist95a,
  author = {Robert Rist and Robert Terwilliger},
  title = {Object-Oriented Programming in Eiffel},
  publisher = {Prentice-Hall},
  year = {1995},
  isbn = {0-13-205931-2}}

@inproceedings{Ritc93a,
  author = {Herbert Ritch and Harry M. Sneed},
  title = {Reverse Engineering Programs via Dynamic Analysis},
  booktitle = {Proceedings of {WCRE} '93},
  pages = {192--201},
  year = {1993},
  month = may,
  organization = {IEEE}}

@inproceedings{Ritz00a,
  author = {Tobias Ritzau and Jesper Andersson},
  title = {Dynamic Deployment of Java Applications},
  booktitle = {IN JAVA FOR EMBEDDED SYSTEMS WORKSHOP},
  year = {2000}}

@inproceedings{Riva00a,
  author = {Claudio Riva},
  title = {Reverse Architecting: an Industrial Experience Report},
  booktitle = {Proceedings {WCRE} 2000},
  pages = {42--50},
  publisher = {IEEE Computer Society},
  year = {2000}}

@inproceedings{Riva02a,
  author = {Claudio Riva and Jordi Vidal Rodriguez},
  title = {Combining Static and Dynamic Views for Architecture Reconstruction},
  booktitle = {Proceedings of the Conference on Software Maintenance and Reengineering (CSMR'02)},
  pages = {47},
  publisher = {IEEE Computer Society},
  year = {2002},
  address = {Washington, DC, USA}}

@phdthesis{Riva04a,
  author = {Claudio Riva},
  title = {View-based Software Architecture Reconstruction},
  year = {2004},
  school = {Technical University of Vienna},
  url = {http://www.clody.org/research/riva-dissertation-final-double.pdf}}

@inproceedings{Riva95a,
  author = {Fred\`eric Rivard},
  title = {{Extension du compilateur Smalltalk: application \`a la param\'etrisation de l'envoi de message}},
  booktitle = {JFLA95},
  year = {1995}}

@inproceedings{Riva96a,
  author = {Fred Rivard},
  title = {{Pour un lien d'instanciation dynamique dans les langages \`a classes}},
  booktitle = {JFLA96},
  publisher = {INRIA --- collection didactique},
  year = {1996},
  month = jan}

@article{Riva96b,
  author = {Fred Rivard},
  title = {{Reflective Facilities in {Smalltalk}}},
  journal = {Revue Informatik/Informatique, revue des organisations suisses d'informatique. Num\'ero 1 F\'evrier 1996},
  publisher = {Societ\'e suisse des informaticiens},
  year = {1996},
  month = feb}

@inproceedings{Riva96c,
  author = {Fred Rivard},
  title = {Smalltalk: a Reflective Language},
  booktitle = {Proceedings of {REFLECTION}'96},
  pages = {21--38},
  year = {1996},
  month = apr}

@phdthesis{Riva97a,
  author = {Fred Rivard},
  title = {{\'E}volution du comportement des objets dans les langages \`a classes r\'eflexifs},
  year = {1997},
  school = {Ecole des Mines de Nantes, Universit\'e de Nantes, France}}

@mastersthesis{Riva98a,
  author = {Claudio Riva},
  title = {Visualizing Software Release Histories: The Use of Color and Third Dimension},
  year = {1998},
  school = {Politecnico di Milano, Milan}}

@article{Rive09a,
  author = {Jos{\'e} E Rivera and Daniel Ruiz-Gonzalez and Fernando Lopez-Romero and Jos{\'e} Bautista and Antonio Vallecillo},
  title = {Orchestrating ATL model transformations},
  journal = {Proceedings of MtATL},
  volume = {9},
  pages = {34--46},
  year = {2009}}

@article{Rive76a,
  author = {Ronald L. Rivest},
  title = {Partial-Match Retrieval Algorithms},
  journal = {SIAM Journal on Computing},
  volume = {5},
  pages = {19--50},
  year = {1976},
  number = {1}}

@inproceedings{Rivi84a,
  author = {Jim des Rivi\`{e}res and Brian Cantwell Smith},
  title = {The implementation of procedurally reflective languages},
  booktitle = {LFP '84: Proceedings of the 1984 ACM Symposium on LISP and functional programming},
  pages = {331--347},
  publisher = {ACM},
  year = {1984},
  doi = {10.1145/800055.802050},
  address = {New York, NY, USA},
  isbn = {0-89791-142-3},
  location = {Austin, Texas, United States}}

@misc{Roas20a,
  author = {A. Bergel and ObjectProfile},
  title = {Roassal 3.0},
  year = {2020},
  url = {http://agilevisualization.com}}

@inproceedings{Roba00a,
  author = {S\'ebastien Robitaille and Reinhard Schauer and Rudolf K. Keller},
  title = {Bridging Program Comprehension Tools by Design Navigation},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM}'00)},
  year = {2000}}

@inproceedings{Robb05a,
  author = {Romain Robbes and Michele Lanza},
  title = {Versioning Systems for Evolution Research},
  booktitle = {Proceedings of IWPSE 2005 (8th International Workshop on Principles of Software Evolution)},
  pages = {155--164},
  publisher = {IEEE Computer Society},
  year = {2005}}

@inproceedings{Robb06a,
  author = {Romain Robbes and Michele Lanza},
  title = {Change-based software evolution},
  booktitle = {Proceedings of the 1st International ERCIM Workshop on Challenges in Software Evolution},
  pages = {159--164},
  year = {2006},
  series = {EVOL'06}}

@article{Robb07a,
  author = {Romain Robbes and Michele Lanza},
  title = {A Change-based Approach to Software Evolution},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {166},
  pages = {93--109},
  publisher = {Elsevier Science Direct},
  year = {2007},
  month = jan}

@inproceedings{Robb07b,
  author = {Romain Robbes and Michele Lanza and Mircea Lungu},
  title = {An Approach to Software Evolution Based on Semantic Change},
  booktitle = {Proceedings of FASE 2007 (10th International Conference on Fundamental Approaches to Software Engineering)},
  pages = {27--41},
  year = {2007}}

@inproceedings{Robb07c,
  author = {Romain Robbes and Michele Lanza},
  title = {Characterizing and Understanding Development Sessions},
  booktitle = {Proceedings of {ICPC} 2007 (15th International Conference on Program Comprehension)},
  pages = {to be published},
  year = {2007}}

@inproceedings{Robb07d,
  author = {Robbes, Romain},
  title = {Mining a Change-Based Software Repository},
  booktitle = {Proceedings of the Fourth International Workshop on Mining Software Repositories},
  pages = {15--},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MSR.2007.18},
  address = {Washington, DC, USA},
  isbn = {0-7695-2950-X},
  series = {MSR'07}}

@inproceedings{Robb08a,
  author = {Romain Robbes and Michele Lanza},
  title = {How Program History Can Improve Code Completion},
  booktitle = {Proceedings of ASE 2008 (23rd International Conference on Automated Software Engineering)},
  pages = {317--326},
  year = {2008}}

@inproceedings{Robb08b,
  author = {Robbes, Romain and Lanza, Michele},
  title = {Spy{W}are: a change-aware development toolset},
  booktitle = {Proceedings of the 30th International Conference on Software Engineering},
  pages = {847--850},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1368088.1368219},
  address = {New York, NY, USA},
  isbn = {978-1-60558-079-1},
  location = {Leipzig, Germany},
  series = {ICSE'08}}

@phdthesis{Robb08c,
  author = {Romain Robbes},
  title = {Of Change and Software},
  year = {2008},
  school = {University of Lugano, Switzerland},
  url = {http://www.inf.unisi.ch/phd/robbes/OfChangeAndSoftware.pdf},
  month = dec}

@inproceedings{Robb08d,
  author = {Robbes, Romain and Pollet, Damien and Lanza, Michele},
  title = {Logical Coupling Based on Fine-Grained Change Information},
  booktitle = {Reverse Engineering, 2008. {WCRE}'08. 15th Working Conference on},
  pages = {42--46},
  year = {2008},
  organization = {IEEE}}

@inproceedings{Robb09a,
  author = {Robbes, Romain},
  title = {On the evaluation of recommender systems with recorded interactions},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {45--48},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070021},
  doi = {10.1109/SUITE.2009.5070021},
  abstract = {Recommender systems are integrated development
environment (IDE) extensions which assist developers
in the task of coding. However, since they assist
specific aspects of the general activity of
programming, their impact is hard to assess. In
previous work, we used with success an evaluation
strategy using automated benchmarks to automatically
and precisely evaluate several recommender systems,
based on recording and replaying developer
interactions. In this paper, we highlight the
challenges we expect to encounter while applying
this approach to other recommender systems.}}

@inproceedings{Robb10b,
  author = {Romain Robbes and Damien Pollet and Michele Lanza},
  title = {Replaying IDE Interactions to Evaluate and Improve Change Prediction Approaches},
  booktitle = {Proceedings of MSR 2010 (7th IEEE Working Conference on Mining Software Repositories)},
  pages = {161 - 170},
  publisher = {IEEE CS Press},
  year = {2010},
  keywords = {pub-iene proj-rebase}}

@article{Robb10c,
  author = {Romain Robbes and Michele Lanza},
  title = {Improving Code Completion with Program History},
  journal = {Journal of Automated Software Engineering},
  volume = {17},
  pages = {181-212},
  publisher = {Springer},
  year = {2010},
  keywords = {pub-iene proj-rebase},
  number = {2}}

@inproceedings{Robb12a,
  author = {Robbes, Romain and R\"{o}thlisberger, David and Tanter, \'{E}ric},
  title = {Extensions during software evolution: do objects meet their promise?},
  booktitle = {{E}uropean {C}onference on {O}bject-{O}riented {P}rogramming ({ECOOP})},
  pages = {28--52},
  publisher = {Springer-Verlag},
  year = {2012},
  doi = {10.1007/978-3-642-31057-7_3},
  address = {Berlin, Heidelberg},
  isbn = {978-3-642-31056-0},
  location = {Beijing, China},
  numpages = {25}}

@inproceedings{Robb12b,
  author = {Robbes, Romain and Lungu, Mircea and R\"{o}thlisberger, David},
  title = {How Do Developers React to {API} Deprecation?: The Case of a Smalltalk Ecosystem},
  booktitle = {International Symposium on the {F}oundations of {S}oftware {E}ngineering ({FSE})},
  pages = {56:1--56:11},
  publisher = {ACM},
  year = {2012},
  doi = {10.1145/2393596.2393662},
  acmid = {2393662},
  address = {New York, NY, USA},
  articleno = {56},
  isbn = {978-1-4503-1614-9},
  keywords = {ecosystems, empirical studies, mining software repositories},
  location = {Cary, North Carolina},
  numpages = {11}}

@article{Robb13a,
  author = {Romain Robbes and Michele Lanza},
  title = {Improving Code Completion with Program History},
  journal = {Automated Software Engineering},
  publisher = {Springer},
  year = {2013},
  note = {to appear}}

@article{Robb98a,
  author = {Jason E. Robbins and David F. Redmiles},
  title = {Software Architecture Critics in the Argo Design Environment},
  journal = {Knowledge-Based Systems},
  volume = {11},
  pages = {47--60},
  publisher = {Elsevier},
  year = {1998},
  doi = {10.1016/S0950-7051(98)00055-0},
  number = {1}}

@techreport{Robe00a,
  author = {Philippe C.D.Robert},
  title = {{BURST}, A Bug Reporting system for {OpenStep} compliant systems},
  year = {2000},
  url = {http://scg.unibe.ch/archive/projects/Robe00a.pdf},
  institution = {University of Bern},
  month = jul,
  note = {(in German)},
  type = {Informatikprojekt}}

@article{Robe04a,
  author = {Roberts, Don and Brant, John},
  title = {Tools for making impossible changes - experiences with a tool for transforming large Smalltalk programs},
  journal = {IEE Proc. Softw.},
  volume = {151},
  pages = {49-56},
  year = {2004},
  url = {https://api.semanticscholar.org/CorpusID:44923403}}

@book{Robe18a,
  author = {Martin, Robert C and Grenning, James and Brown, Simon},
  title = {Clean architecture: a craftsman's guide to software structure and design},
  publisher = {Prentice Hall},
  year = {2018}}

@inproceedings{Robe96a,
  author = {Don Roberts and John Brant and Ralph E. Johnson and Bill Opdyke},
  title = {An Automated Refactoring Tool},
  booktitle = {Proceedings of {ICAST '96}},
  year = {1996},
  month = apr}

@article{Robe96b,
  author = {Roberts, Don and Johnson, Ralph},
  title = {Evolving frameworks},
  journal = {Pattern languages of program design},
  volume = {3},
  year = {1996}}

@article{Robe97a,
  author = {Don Roberts and John Brant and Ralph E. Johnson},
  title = {A Refactoring Tool for {Smalltalk}},
  journal = {Theory and Practice of Object Systems (TAPOS)},
  volume = {3},
  pages = {253--263},
  publisher = {John Wiley \& Sons},
  year = {1997},
  number = {4}}

@incollection{Robe97b,
  author = {Don Roberts and Ralph E. Johnson},
  title = {Evolving Frameworks: A Pattern Language for Developing Object-Oriented Frameworks},
  booktitle = {Pattern Languages of Program Design 3},
  publisher = {Addison Wesley},
  year = {1997}}

@inproceedings{Robe98a,
  author = {Robertson, George and Czerwinski, Mary and Larson, Kevin and Robbins, Daniel C. and Thiel, David and van Dantzich, Maarten},
  title = {Data mountain: using spatial memory for document management},
  booktitle = {Symposium on User interface software and technology (UIST '98)},
  pages = {153--162},
  year = {1998},
  doi = {10.1145/288392.288596},
  citeulike-article-id = {622787},
  isbn = {1-58113-034-1},
  posted-at = {2009-07-26 02:15:32},
  priority = {0}}

@phdthesis{Robe99a,
  author = {Donald Bradley Roberts},
  title = {Practical Analysis for Refactoring},
  year = {1999},
  school = {University of Illinois}}

@inproceedings{Robi02a,
  author = {Martin P. Robillard and Gail C. Murphy},
  title = {Concern graphs: finding and describing concerns using structural program dependencies},
  booktitle = {ICSE'02: Proceedings of the 24th International Conference on Software Engineering},
  pages = {406--416},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/581339.581390},
  address = {New York, NY, USA},
  isbn = {1-58113-472-X},
  location = {Orlando, Florida}}

@inproceedings{Robi03a,
  author = {Martin P. Robillard and Gail C. Murphy},
  title = {FEAT: A tool for locating, describing, and analyzing concerns in source code},
  booktitle = {Proceedings of 25th International Conference on Software Engineering},
  pages = {822--823},
  year = {2003},
  month = may}

@inproceedings{Robi03b,
  author = {Martin P. Robillard and Gail C. Murphy},
  title = {Automatically inferring concern code from program investigation activities},
  booktitle = {Proceedings of the 18th International Conference on Automated Software Engineering},
  pages = {225--234},
  year = {2003},
  doi = {10.1109/ASE.2003.1240310},
  month = oct}

@article{Robi07a,
  author = {Martin P. Robillard and Gail C. Murphy},
  title = {Representing Concerns in Source Code},
  journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume = {16},
  pages = {3},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1189748.1189751},
  address = {New York, NY, USA},
  issn = {1049-331X},
  number = {1}}

@inproceedings{Robi08a,
  author = {Martin P. Robillard and Barth\'el\'emy Dagenais},
  title = {Retrieving Task-Related Clusters from Change History},
  booktitle = {Proceedings of the 15th Working Conference on Reverse Engineering},
  pages = {17--26},
  year = {2008},
  doi = {10.1109/{WCRE}.2008.15},
  month = oct}

@article{Robi19a,
  author = {Robillard, Martin P and Kutschera, Kaylee},
  title = {Lessons Learned While Migrating From Swing to JavaFX},
  journal = {IEEE Software},
  volume = {37},
  pages = {78--85},
  publisher = {IEEE},
  year = {2019},
  number = {3}}

@article{Robi85a,
  author = {K. Robinson},
  title = {Copy-resistant {EPROM} Increases Software Security Against Piracy},
  journal = {Computer Systems Equipment Design},
  pages = {17--22},
  year = {1985},
  month = mar}

@book{Robi92a,
  author = {Peter J. Robinson},
  title = {{HOOD}: Hierarchical Object-Oriented Design},
  publisher = {Prentice-Hall},
  year = {1992},
  isbn = {13-390816-X}}

@article{Robs91a,
  author = {D.J. Robson and K. H. Bennet and B. J. Cornelius and M. Munro},
  title = {Approaches to Program Comprehension},
  journal = {Journal of Systems and Software},
  volume = {14},
  pages = {79--84},
  publisher = {Elsevier Science Publishers},
  year = {1991},
  month = feb,
  note = {Republished in [Arno92a]}}

@article{Roch75a,
  author = {Marc Rochkind},
  title = {The Source Code Control System},
  journal = {IEEE Transactions on Software Engineering},
  volume = {1},
  pages = {364--370},
  year = {1975},
  mon = dec,
  number = {4}}

@article{Roch93a,
  author = {Roxie Rochat and Juanita Ewing},
  title = {Smalltalk Debugging Techniques},
  journal = {The {Smalltalk} Report},
  volume = {2},
  pages = {18--23},
  year = {1993},
  month = jul,
  number = {9}}

@inproceedings{Rock00a,
  author = {T. Rock and R. Wille},
  title = {Ein {TOSCANA} --- Erkundungsystem zur Literatursuche},
  booktitle = {Begriffliche Wissensverabeitung: Methoden und Anwendungen},
  pages = {239--253},
  publisher = {Springer-Verlag},
  year = {2000},
  address = {Berlin-Heidelberg},
  editor = {G. Stumme and R. Wille}}

@inproceedings{Rodd06a,
  author = {John F. Roddick and de Vries, Denise},
  title = {Reduce, Reuse, Recycle: Practical Approaches to Schema Integration, Evolution and Versioning},
  booktitle = {Conceptual Modeling - {ER}'06},
  year = {2006},
  doi = {10.1007/11908883_26}}

@inproceedings{Rodr04a,
  author = {Leonardo Rodr{\'{i}}guez and {\'E}ric Tanter and Jacques Noy\'e},
  title = {Supporting Dynamic Crosscutting with Partial Behavioral Reflection: a Case Study},
  booktitle = {Proceedings of the XXIV International Conference of the Chilean Computer Science Society (SCCC 2004)},
  publisher = {IEEE},
  year = {2004},
  address = {Arica, Chile},
  month = nov}

@inproceedings{Rodr11a,
  author = {Rodr{\'\i}guez-Echeverr{\'\i}a, Roberto and Conejero, Jos{\'e} Mar{\'\i}a and Clemente, Pedro J and Preciado, Juan C and S{\'a}nchez-Figueroa, Fernando},
  title = {Modernization of legacy web applications into rich internet applications},
  booktitle = {International Conference on Web Engineering},
  pages = {236--250},
  year = {2011},
  organization = {Springer}}

@article{Rodr13a,
  author = {Antonio Wendell De Oliveira Rodrigues and Fr{\'{e}}d{\'{e}}ric Guyomarc'h and Jean{-}Luc Dekeyser},
  title = {An {MDE} Approach for Automatic Code Generation from {UML/MARTE} to OpenCL},
  journal = {Computing in Science and Engineering},
  volume = {15},
  pages = {46--55},
  year = {2013},
  url = {https://doi.org/10.1109/MCSE.2012.35},
  doi = {10.1109/MCSE.2012.35},
  number = {1}}

@inproceedings{Rodr16a,
  author = {Rodriguez-Cancio, Marcelino and Combemale, Benoit and Baudry, Benoit},
  title = {{Automatic Microbenchmark Generation to Prevent Dead Code Elimination and Constant Folding}},
  booktitle = {{31st IEEE/ACM International Conference on Automated Software Engineering (ASE 2016) }},
  year = {2016},
  url = {https://hal.inria.fr/hal-01343818},
  pdf = {https://hal.inria.fr/hal-01343818/file/technical-paper-main.pdf},
  address = {Singapore, Singapore},
  keywords = {Performace evaluation ; microbencharking ; text tagging},
  month = {sep},
  series = {ASE 2016:Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering}}

@inproceedings{Roehm12a,
  author = {Roehm, Tobias and Tiarks, Rebecca and Koschke, Rainer and Maalej, Walid},
  title = {How do professional developers comprehend software?},
  booktitle = {2012 34th International Conference on Software Engineering (ICSE)},
  pages = {255--265},
  year = {2012},
  organization = {IEEE}}

@misc{RoelTyper,
  author = {Roel Wuyts},
  title = {{RoelTyper}, a fast type reconstructor for {Smalltalk}},
  year = {2005},
  url = {http://decomp.ulb.ac.be/roelwuyts/smalltalk/roeltyper/},
  key = {RoelTyper},
  note = {\url{http://decomp.ulb.ac.be/roelwuyts/smalltalk/roeltyper/}}}

@techreport{Roet04a,
  author = {David R{\"o}thlisberger},
  title = {The SmallBB Forum System},
  year = {2004},
  url = {http://scg.unibe.ch/archive/projects/Roth04a.pdf},
  abstract = {Web-applications are very popular, lightweight
applications that entirely run in web-browsers over
the internet. In today's business, web-applications
become more and more complex but they still need to
be fast developed, flexible for changes and easy to
maintain --- conventional techniques often lack
these properties. High-level, cleanly layered
solutions open promising possibilities to overcome
these difficulties. This paper presents a
lightweight, object-oriented, metadata-driven
approach to build better engineered and easier
evolvable and maintainable web-applications.},
  institution = {University of Bern},
  month = oct,
  type = {Informatikprojekt}}

@mastersthesis{Roet06a,
  author = {David R{\"o}thlisberger},
  title = {{Geppetto}: Enhancing {Smalltalk}'s Reflective Capabilities with Unanticipated Reflection},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Roet06a.pdf},
  abstract = {Reflection is an important tool to extend and modify
the semantics or runtime of applications. However,
lot of approaches to support reflection are based on
up-front fully reflective or load-time based
reflection mechanisms. Using these approaches, it is
not possible to apply reflective techniques on
running systems without stopping them, unless the
system is fully reflection which is very costly.
Because many applications and systems exist that
cannot be halted and stopped but have to be always
on and running, such as web applications, real-time
systems or mobile systems, the ability to apply
reflective features at runtime is a crucial and
important property. Our solution to achieve this
possibility is unanticipated reflection. With
unanticipated reflection, we can design the MOP
required for the problem we want to solve, introduce
it in the language, activate the reflective
mechanisms and possibly remove them once they are
not necessary anymore at runtime, without halting
the system or the application in which we want to
apply and use the reflective mechanisms.},
  month = jan,
  type = {Master's Thesis}}

@inproceedings{Roet07c,
  author = {David R{\"o}thlisberger and Orla Greevy and Adrian Lienhard},
  title = {Feature-centric Environment},
  booktitle = {Proceedings IEEE International Workshop on Visualizing Software for Understanding (tool demonstration)},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Roet07cFeatureBrowserVissoft.pdf},
  medium = {2},
  series = {Vissoft'07}}

@inproceedings{Roet07d,
  author = {David R{\"o}thlisberger and Oscar Nierstrasz},
  title = {Combining Development Environments with Reverse Engineering},
  booktitle = {Proceedings of FAMOOSr 2007 (Ist International Workshop on FAMIX and Moose in Reengineering)},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Roet07dFamoosrIDEReverseEngineering.pdf},
  medium = {2}}

@inproceedings{Roet07e,
  author = {David R{\"o}thlisberger and Orla Greevy and Oscar Nierstrasz},
  title = {Feature Driven Browsing},
  booktitle = {Proceedings of the 2007 International Conference on Dynamic Languages (ICDL 2007)},
  pages = {79--100},
  publisher = {ACM Digital Library},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Roet07eFeatureBrowser.pdf},
  doi = {10.1145/1352678.1352684},
  abstract = {Development environments typically present the
software engineer with a structural perspective of
an object-oriented system in terms of packages,
classes and methods. From a structural perspective
it is difficult to gain an understanding of how
source entities participate in a system's features
at runtime. In this paper we evaluate the usefulness
of offering an alternative feature-centric
perspective of a software system when performing
maintenance activities. We present a feature-centric
environment combining interactive visual
representations of features with a source code
browser displaying only the classes and methods
participating in a feature under investigation. To
validate the usefulness of our feature-centric view,
we conducted a controlled empirical experiment where
we measured and compared the performance of subjects
when correcting two defects in an unfamiliar
software system with a traditional development
environment and with our feature-centric
environment. We evaluate both quantitative and
qualitative data to draw conclusions about the
usefulness of a feature-centric perspective to
support program comprehension during maintenance
activities.},
  medium = {2}}

@inproceedings{Roet08b,
  author = {David R{\"o}thlisberger and Orla Greevy and Oscar Nierstrasz},
  title = {Exploiting Runtime Information in the {IDE}},
  journal = {{ICPC}},
  booktitle = {Proceedings of the 16th International Conference on Program Comprehension ({ICPC} 2008)},
  pages = {63--72},
  publisher = {IEEE Computer Society},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Roet08bDynamicInfoIDE.pdf},
  doi = {10.1109/{ICPC}.2008.32},
  abstract = {Developers rely on the mechanisms provided by their
IDE to browse and navigate a large software system.
These mechanisms are usually based purely on a
system's static source code. The static perspective,
however, is not enough to understand an
object-oriented program's behavior, in particular if
implemented in a dynamic language. We propose to
enhance IDEs with a program's runtime information
(eg. message sends and type information) to support
program comprehension through precise navigation and
informative browsing. To precisely specify the type
and amount of runtime data to gather about a system
under development, dynamically and on demand, we
adopt a technique known as partial behavioral
reflection. We implemented navigation and browsing
enhancements to an IDE that exploit this runtime
information in a prototype called Hermion. We
present preliminary validation of our experimental
enhanced IDE by asking developers to assess its
usefulness to understand an unfamiliar software
system.},
  address = {Los Alamitos, CA, USA},
  isbn = {978-0-7695-3176-2},
  medium = {2}}

@inproceedings{Roet08c,
  author = {David R{\"o}thlisberger},
  title = {Querying Runtime Information in the {IDE}},
  booktitle = {Proceedings of the 2008 workshop on Query Technologies and Applications for Program Comprehension (QTAPC 2008)},
  pages = {n4},
  year = {2008},
  url = {http://www.cs.vu.nl/{ICPC}2008/qtapc2008.php http://scg.unibe.ch/archive/papers/Roet08c-QTAPC08.pdf},
  abstract = {Code queries focus mainly on the static structure of
a system. To comprehend the dynamic behavior of a
system however, a software engineer needs to be able
to reason about the dynamics of this system, for
instance by querying a database of dynamic
information. Such a querying mechanism should be
directly available in the IDE where the developers
implements, navigates and reasons about the software
system. We propose (i) concepts to gather dynamic
information, (ii) the means to query this
information, and (iii) tools and techniques to
integrate querying of dynamic information in the
IDE, including the presentation of results generated
by queries.},
  medium = {2}}

@misc{Roet08d,
  author = {David R{\"o}thlisberger},
  title = {Hermion --- Exploiting the Dynamics of Software},
  year = {2008},
  url = {http://scg.unibe.ch/archive/reports/Roet08dHermion.pdf},
  abstract = {The current Squeak Smalltalk IDE provides a
structural perspective on a software system in terms
of packages, classes and methods. However, from this
perspective it is difficult to gain an understanding
of how source entities participate at system's
run-time. Hermion enriches the traditional IDE with
a view on the dynamics of the system, (i) by
offering a complementary feature-centric perspective
of a software system to allow developers to reason
about how specific run-time features of their
software are implemented, (ii) by integrating
dynamic information into the static perspective on a
system, ie. source code, and (iii) by providing
mechanisms to query run-time information.},
  howpublished = {European Smalltalk User Group Innovation Technology Award},
  month = aug}

@inproceedings{Roet08e,
  author = {David R{\"o}thlisberger and Orla Greevy},
  title = {Representing and Integrating Dynamic Collaborations in {IDEs}},
  journal = {{WCRE}},
  booktitle = {Proceedings of the 15th Working Conference on Reverse Engineering ({WCRE} 2008)},
  pages = {74--78},
  publisher = {IEEE Computer Society},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Roet08eDynamicDependenciesIDE.pdf},
  doi = {10.1109/{WCRE}.2008.53},
  abstract = {Static views of object-oriented source code as
presented in a development environment (IDE) do not
provide explicit representations of dynamic
collaboration to describe how source artifacts
communicate at runtime. Direct access within an IDE
to explicit representations of dynamic
collaborations would provide developers with useful
insights into a system's behavior. In this paper we
describe how we seamlessly integrate novel
interactive visual representations of dynamic
collaborations between static artifacts to
complement traditional static concepts within the
IDE. We motivate our work and introduce our
enhancements in our prototype IDE (Hermion) and
provide validation for our work by means of case
studies and benchmarks.},
  address = {Los Alamitos, CA, USA},
  isbn = {978-0-7695-3429-9},
  medium = {2}}

@inproceedings{Roet08f,
  author = {David R{\"o}thlisberger and Orla Greevy},
  title = {Towards Seamless and Ubiquitous Availability of Dynamic Information in {IDEs}},
  booktitle = {Proceedings of the 4th International Workshop on Program Comprehension through Dynamic Analysis (PCODA 2008)},
  pages = {27--31},
  publisher = {Technische Universiteit Delft},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Roet08fUbiquitousDynamicInfoIDE.pdf},
  abstract = {Software developers faced with unfamiliar
object-oriented code need to build a mental model of
the system to understand its dynamic flow.
Development environments typically provide static
views of the source code (e.g., classes and
methods), but do not explicitly represent dynamic
collaborations. The task of revealing how static
source artifacts interact at runtime is thus
challenging.To address this we have developed
several techniques to represent dynamic behavior at
various levels of granularity directly in the IDE.
In this paper we outline these various techniques
towards a seamless integration of dynamic
information in the IDE. We elaborate on user
feedback we have gathered and on our empirical
experiments to validate our work. We derive several
ideas and visions of further potential
representations of dynamic behavior from this
analysis of our approach. The missing
representations we identify serve to enrich our
proposed IDE, so as to provide the developer from
within the IDE with a readily available and complete
picture of a software's dynamics.},
  medium = {2}}

@inproceedings{Roet08g,
  author = {David R{\"o}thlisberger},
  title = {Embedding {Moose} Facilities Directly in {IDEs}},
  booktitle = {FAMOOSr, 2nd Workshop on FAMIX and Moose in Reengineering},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Roet08gMooseFacilitiesInIDE.pdf},
  abstract = {Moose is a powerful reverse engineering platform,
but its facilities and means to analyze software are
separated from the tools developers typically use to
develop and maintain their software systems:
development environments such as Eclipse,
VisualWorks, or Squeak. In practice, this requires
developers to work with two distinct environments,
one to actually develop the software, and another
one (e.g., Moose) to analyze it. We worked on
several different techniques, using both dynamic and
static analyzes to provide software analysis
capabilities to developers directly in the IDE. The
immediate availability of analysis tools in an IDE
significantly increases the likelihood that
developers integrate software analysis in their
daily work, as we discovered by conducting user
studies with developers. Finally, we identified
several important aspect of integrating software
analysis in IDEs that need to be addressed in the
future to increase the adoption of these techniques
by developers.},
  medium = {2}}

@inproceedings{Roet09b,
  author = {David R{\"o}thlisberger and Marcel H\"{a}rry and Alex Villaz\'on and Danilo Ansaloni and Walter Binder and Oscar Nierstrasz and Philippe Moret},
  title = {Augmenting Static Source Views in {IDE}s with Dynamic Metrics},
  journal = {{icsm}},
  booktitle = {Proceedings of the 25th International Conference on Software Maintenance ({ICSM} 2009)},
  pages = {253--262},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Roet09bDynamicInfoEclipse.pdf},
  doi = {10.1109/ICSM.2009.5306302},
  abstract = {Mainstream IDEs such as Eclipse support developers
in managing software projects mainly by offering
static views of the source code. Such a static
perspective neglects any information about runtime
behavior. However, object-oriented programs heavily
rely on polymorphism and late-binding, which makes
them difficult to understand just based on their
static structure. Developers thus resort to
debuggers or profilers to study the system's
dynamics. However, the information provided by these
tools is volatile and hence cannot be exploited to
ease the navigation of the source space. In this
paper we present an approach to augment the static
source perspective with dynamic metrics such as
precise runtime type information, or memory and
object allocation statistics. Dynamic metrics can
leverage the understanding for the behavior and
structure of a system. We rely on dynamic data
gathering based on aspects to analyze running Java
systems. By solving concrete use cases we illustrate
how dynamic metrics directly available in the IDE
are useful. We also comprehensively report on the
efficiency of our approach to gather dynamic
metrics.},
  address = {Los Alamitos, CA, USA},
  medium = {2}}

@inproceedings{Roet09c,
  author = {David R{\"o}thlisberger and Marcel H\"{a}rry and Alex Villaz\'on and Danilo Ansaloni and Walter Binder and Oscar Nierstrasz and Philippe Moret},
  title = {Senseo: Enriching {Eclipse}'s Static Source Views with Dynamic Metrics},
  journal = {{icsm}},
  booktitle = {Proceedings of the 25th International Conference on Software Maintenance ({ICSM} 2009)},
  pages = {383--384},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Roet09cSenseo.pdf},
  doi = {10.1109/ICSM.2009.5306314},
  abstract = {Maintaining object-oriented systems that use
inheritance and polymorphism is difficult, since
runtime information, such as which methods are
actually invoked at a call site, is not visible in
the static source code. We have implemented Senseo,
an Eclipse plugin enhancing Eclipse's static source
views with various dynamic metrics, such as runtime
types, the number of objects created, or the amount
of memory allocated in particular methods.},
  address = {Los Alamitos, CA, USA},
  medium = {2},
  note = {Tool demo}}

@inproceedings{Roet09g,
  author = {David R{\"o}thlisberger},
  title = {Why and How to Substantiate the Good of our Reverse Engineering Tools?},
  booktitle = {FAMOOSr, 3rd Workshop on FAMIX and Moose in Reengineering},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Roet09gValidation.pdf},
  abstract = {Researchers and practitioners are usually eager to develop,
		test and experiment with new ideas and techniques to analyze
		software systems and/or to present results of such analyzes,
		for instance new kind of visualizations or analysis tools. However,
		often these novel and certainly promising ideas are never properly
		and seriously empirically evaluated. Instead their inventors just resort
		to anecdotal evidence to substantiate their beliefs and claims that their
		ideas and the realizations thereof are actually useful in theory and practice.
		The chief reason why proper validation is often neglected is that serious
		evaluation of any newly realized technique, tool, or concept in reverse
		engineering is time-consuming, laborious, and often tedious. Furthermore,
		we assume that there is also a lack of knowledge or experience concerning
		empirical evaluation in our community. This paper hence sketches some
		ideas and discusses best practices of how we can still, with moderate
		expenses, come up with at least some empirical validation of our next
		project in the field of reverse engineering.},
  medium = {2}}

@article{Roet10X,
  author = {David R{\"o}thlisberger and Marcel H\"{a}rry and Alex Villaz\'on and Danilo Ansaloni and Walter Binder and Oscar Nierstrasz and Philippe Moret},
  title = {Exploiting Dynamic Information in IDEs Improves Speed and Correctness of Software Maintenance Tasks},
  journal = {Transactions on Software Engineering},
  publisher = {IEEE Press},
  year = {2010},
  abstract = {Modern IDEs such as Eclipse offer static views
of the source code, but such views ignore information
about the runtime behavior of software systems.
Since typical object-oriented systems make heavy use
of polymorphism and dynamic binding, static views will
miss key information about the runtime architecture.
In this article we present an approach to gather and integrate
dynamic information in the Eclipse IDE with the goal of better
supporting typical software maintenance activities.
By means of a controlled experiment with 30 professional
developers we show that for typical software maintenance tasks
integrating dynamic information into the Eclipse IDE yields a
significant 17.5\% decrease of time spent while significantly
increasing the correctness of the solutions by 33.5\%.
We also provide a comprehensive performance evaluation of
our approach.},
  address = {Piscataway, NJ, USA},
  note = {To appear}}

@phdthesis{Roet10a,
  author = {David R{\"o}thlisberger},
  title = {Augmenting IDEs with Runtime Information for Software Maintenance},
  year = {2010},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/roethlisberger-phd.pdf},
  doi = {10.7892/boris.104753},
  abstract = {Object-oriented language features such as
inheritance, abstract types, late-binding, or
polymorphism lead to distributed and scattered code,
rendering a software system hard to understand and
maintain. The integrated development environment
(IDE), the primary tool used by developers to
maintain software systems, usually purely operates
on static source code and does not reveal dynamic
relationships between distributed source artifacts,
which makes it difficult for developers to
understand and navigate software systems. Another
shortcoming of today's IDEs is the large amount of
information with which they typically overwhelm
developers. Large software systems encompass several
thousand source artifacts such as classes and
methods. These static artifacts are presented by
IDEs in views such as trees or source editors. To
gain an understanding of a system, developers have
to open many such views, which leads to a workspace
cluttered with different windows or tabs. Navigating
through the code or maintaining a working context is
thus difficult for developers working on large
software systems. In this dissertation we address
the question how to augment IDEs with dynamic
information to better navigate scattered code while
at the same time not overwhelming developers with
even more information in the IDE views. We claim
that by first reducing the amount of information
developers have to deal with, we are subsequently
able to embed dynamic information in the familiar
source perspectives of IDEs to better comprehend and
navigate large software spaces. We propose means to
reduce or mitigate the information by highlighting
relevant source elements, by explicitly representing
working context, and by automatically housekeeping
the workspace in the IDE. We then improve navigation
of scattered code by explicitly representing dynamic
collaboration and software features in the static
source perspectives of IDEs. We validate our claim
by conducting empirical experiments with developers
and by analyzing recorded development sessions.},
  month = may}

@mastersthesis{Roet99a,
  author = {Tobias R{\"o}thlisberger},
  title = {Compiler Framework for the {Java} Virtual Machine},
  year = {1999},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Roet99a.pdf},
  abstract = {Ein Compiler \"ubersetzt ein Programm einer
Quellsprache in eine Zielsprache. Um Programme in
einer beliebigen Umgebung ausf\"uhren zu k\"onnen,
muss eine plattformunabh\"angige Zielsprache gesucht
werden. Die Plattformunabh\"angigkeit wird dadurch
erreicht, dass die Programme nicht auf einer
konkreten, sondern auf einer virtuellen Maschine
ausgef\"uhrt werden, die als Schnittstelle zwischen
compiliertem Code und Plattform dient. Die virtuelle
Maschine von Java ("JVM") verarbeitet nicht nur
Java, sondern alle Programme, die in einem genau
spezifizierten Format dargestellt werden. Beim
Compilerbau trennt eine Zwischensprache die Analyse
des Quellprogrammes von der Synthese zum
Zielprogramm; man kann die beiden Teile unabh\"angig
voneinander behandeln. Durch die Verwendung einer
Zwischensprache muss nicht jede Quellsprache einzeln
in eine bestimmte Zielsprache \"ubersetzt werden,
sondern die verschiedenen Analyse-Teile, die
Compilerfrontends der Quellsprachen, arbeiten mit
einem einzigen Synthese-Teil, dem Compilerbackend
f\"ur die Zielsprache zusammen. In dieser
Diplomarbeit wird ein Compilerframework aufgebaut,
das dank der Zielmaschine JVM plattformunabh\"angig
ist, und eine Zwischensprache verwendet, die die
Eigenschaften verschiedenartigster Sprachen umfasst.
Mittels einer Analyse von Programmiersprachen des
imperativen, des objektorientierten, des
funktionalen und des logischen Paradigmas werden die
Anforderungen an diese generelle Zwischensprache
aufgestellt. F\"ur jedes Paradigma wird die
Grammatik einer Beispielsprache definiert und ein
Parser konstruiert. Diese Parser \"ubersetzen
Programme ihrer Quellsprachen in die generelle
Zwischensprache. Das Compilerbackend dieser Arbeit
generiert aus der generellen Zwischensprache
JVM-Code. Der Compiler wird mit Hilfe eines
Frameworks konstruiert, indem die Zwischensprache
und die Codegenerierung in Klassen mit m\"oglichst
genereller Funktionalit\"at aufgeteilt werden.
Dadurch k\"onnen sowohl die untersuchten Sprachen,
als auch in dieser Arbeit nicht behandelte
Programmiersprachen nach JVM Code compiliert
werden.},
  month = may,
  type = {Diploma thesis}}

@inproceedings{Roge04a,
  author = {P. Rogers and A.J. Wellings},
  title = {OpenAda: Compile-Time Reflection for Ada 95},
  booktitle = {Reliable Software Technologies - Ada Europe},
  volume = {3063},
  publisher = {Springer},
  year = {2004},
  series = {LNCS}}

@book{Roge67a,
  author = {Rogers, Jr., H.},
  title = {Theory of Recursive Functions and Effective Computability},
  publisher = {McGraw-Hill},
  year = {1967}}

@article{Roge71a,
  author = {J. H. Roger},
  title = {Updating a Minimum Spanning Tree. Algorithm AS40},
  journal = {Applied Statistics},
  volume = {20},
  pages = {204--206},
  year = {1971}}

@book{Roge97a,
  author = {Dale Rogerson},
  title = {Inside {COM}: Microsoft's Component Object Model},
  publisher = {Microsoft Press},
  year = {1997},
  isbn = {1-57231-349-8}}

@incollection{Roka05a,
  author = {Lior Rokach and Oded Maimon},
  title = {Clustering Methods},
  chapter = {15},
  booktitle = {Data Mining and Knowledge Discovery Handbook},
  pages = {321-352},
  publisher = {Springer US},
  year = {2005},
  date-added = {2014-11-14 23:50:01 +0000},
  date-modified = {2014-11-14 23:51:12 +0000}}

@inproceedings{Rolim16,
  author = {Rolim, Reudismam and Soares, Gustavo and D'Antoni, Loris and Polozov, Oleksandr and Gulwani, Sumit and Gheyi, Rohit and Suzuki, Ryo and Hartmann, Bjorn},
  title = {Learning {Syntactic} {Program} {Transformations} from {Examples}},
  year = {2016},
  url = {https://arxiv.org/pdf/1608.09000.pdf},
  doi = {10.1109/ICSE.2017.44},
  abstract = {Integrated Development Environments (IDEs), such
as Visual Studio, automate common transformations, such as Rename
and Extract Method refactorings. However, extending these
catalogs of transformations is complex and time-consuming. A
similar phenomenon appears in intelligent tutoring systems where
instructors have to write cumbersome code transformations that
describe "common faults" to fix similar student submissions to
programming assignments.
In this paper, we present REFAZER, a technique for automatically
generating program transformations. REFAZER builds
on the observation that code edits performed by developers
can be used as input-output examples for learning program
transformations. Example edits may share the same structure
but involve different variables and subexpressions, which must be
generalized in a transformation at the right level of abstraction.
To learn transformations, REFAZER leverages state-of-the-art
programming-by-example methodology using the following key
components: (a) a novel domain-specific language (DSL) for describing
program transformations, (b) domain-specific deductive
algorithms for efficiently synthesizing transformations in the DSL,
and (c) functions for ranking the synthesized transformations.
We instantiate and evaluate REFAZER in two domains. First,
given examples of code edits used by students to fix incorrect
programming assignment submissions, we learn program transformations
that can fix other students' submissions with similar
faults. In our evaluation conducted on 4 programming tasks
performed by 720 students, our technique helped to fix incorrect
submissions for 87\% of the students. In the second domain, we
use repetitive code edits applied by developers to the same project
to synthesize a program transformation that applies these edits
to other locations in the code. In our evaluation conducted on 59
scenarios of repetitive edits taken from 3 large C\# open-source
projects, REFAZER learns the intended program transformation
in 83\% of the cases and using only 2.8 examples on average.},
  keywords = {Program synthesis, Program transformation, Refactoring, Tutoring systems},
  language = {en}}

@article{Roll98a,
  author = {C. Rolland and C. Ben Achour and C. Cauvet and J. Ralyt and A. Sutcliffe and N.A.M. Maiden and M. Jarke and P. Haumer and K. Pohl and E. Dubois and P. Heymans},
  title = {Proposal for a Scenario Classification Framework},
  journal = {Requirements Engineering Journal},
  volume = {3},
  pages = {23--47},
  publisher = {Springer Verlag},
  year = {1998},
  url = {http://cui.unige.ch/~ralyte/publications/REjournal.pdf},
  number = {1}}

@book{Roma01a,
  title = {Advances in Exception Handling Techniques},
  publisher = {Springer},
  year = {1992},
  editor = {Alexander Romanovsky and Christophe Dony and Jorgen Lindskov Kundsen and Anand Tripathi},
  isbn = {1-56592-005-8}}

@article{Roma02a,
  author = {Rom\'{a}n, Manuel and Hess, Christopher and Cerqueira, Renato and Ranganathan, Anand and Campbell, Roy H. and Nahrstedt, Klara},
  title = {A Middleware Infrastructure for Active Spaces},
  journal = {IEEE Pervasive Computing},
  volume = {1},
  pages = {74--83},
  publisher = {IEEE Educational Activities Department},
  year = {2002},
  doi = {10.1109/MPRV.2002.1158281},
  address = {Piscataway, NJ, USA},
  number = {4}}

@article{Roma92a,
  author = {Griua-Catalin Roman and Kenneth C. Cox and C. Donald ox and Jerome Y. Plun},
  title = {Pavane: A System for Declarative Visualization of Concurrent Computations},
  journal = {Journal of Visual Languages and Computing},
  volume = {3},
  pages = {161--193},
  year = {1992}}

@inproceedings{Roma92b,
  author = {Griua-Catalin Roman and Kenneth C. Cox},
  title = {Program Visualization: The Art of Mapping Programs to Pictures},
  booktitle = {Proceedings ICSE 1992},
  year = {1992}}

@article{Romp06a,
  author = {Bart Van Rompaey and Bart Du Bois and Serge Demeyer},
  title = {Characterizing the Relative Significance of a Test Smell},
  journal = {{icsm}},
  volume = {0},
  pages = {391--400},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/ICSM.2006.18},
  address = {Los Alamitos, CA, USA},
  issn = {1063-6773}}

@techreport{Romp06b,
  author = {Bart Van Rompaey and Bart Du Bois and Serge Demeyer},
  title = {Improving Test Code Reviews with Metrics: a Pilot Study},
  year = {2006},
  date-added = {2007-01-31 10:27:08 +0100},
  date-modified = {2007-01-31 10:27:08 +0100},
  institution = {Lab On Re-Engineering, University Of Antwerp}}

@article{Romp07a,
  author = {Bart {Van Rompaey} and Bart {Du Bois} and Serge Demeyer and Matthias Rieger},
  title = {On The Detection of Test Smells: A Metrics-Based Approach for General Fixture and Eager Test},
  journal = {Transactions on Software Engineering},
  volume = {33},
  pages = {800--817},
  publisher = {IEEE Press},
  year = {2007},
  doi = {10.1109/TSE.2007.70745},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {12}}

@inproceedings{Romp14a,
  author = {Rompf, Tiark and Sujeeth, Arvind K. and Brown, Kevin J. and Lee, HyoukJoong and Chafi, Hassan and Olukotun, Kunle},
  title = {Surgical Precision {JIT} Compilers},
  booktitle = {Programming Language Design and Implementation},
  year = {2014},
  doi = {10.1145/2594291.2594316},
  keywords = {JIT compilation, program generation, staging},
  location = {Edinburgh, United Kingdom},
  numpages = {12},
  series = {PLDI '14}}

@article{Rons99a,
  author = {Ronsse, Michiel and De Bosschere, Koen},
  title = {RecPlay: a fully integrated practical record/replay system},
  journal = {ACM Transactions on Computer Systems (TOCS)},
  volume = {17},
  pages = {133--152},
  publisher = {ACM},
  year = {1999},
  number = {2}}

@inproceedings{Rooc02a,
  author = {Stefan Roock and Andreas Havenstein},
  title = {Refactoring Tags for Automatic Refactoring of Framework-Dependent Applications},
  booktitle = {Proceedings of Extreme Programming Conference'02},
  pages = {182-185},
  year = {2002}}

@article{Rook87a,
  author = {Rook, P.},
  title = {Controlling Software Projects},
  journal = {Software Engineering Journal},
  volume = 1,
  pages = {7--16},
  year = {1996},
  month = jan,
  number = 1}

@inproceedings{Rosa20a,
  author = {Rosales, Eduardo and Ros\`{a}, Andrea and Binder, Walter},
  title = {FJProf: Profiling Fork/Join Applications on the Java Virtual Machine},
  booktitle = {Proceedings of the 13th EAI International Conference on Performance Evaluation Methodologies and Tools},
  pages = {128-135},
  publisher = {Association for Computing Machinery},
  year = {2020},
  url = {https://doi.org/10.1145/3388831.3388851},
  doi = {10.1145/3388831.3388851},
  abstract = {Fork/join applications are divide-and-conquer algorithms recursively forking tasks that are executed in parallel, waiting for them to complete, and then typically joining their results. An efficient fork/join application maximizes parallelism while minimizing overheads, and maximizes locality while minimizing contention. However, there is no unique optimal implementation that best resolves such tradeoffs and failing in balancing them may lead to fork/join applications suffering from several issues (e.g., suboptimal forking, load imbalance, excessive synchronization), possibly compromising the benefits of task-parallel execution. Moreover, there is a lack of profilers enabling performance analysis of a fork/join application. As a result, developers are often required to implement their own tools to analyze fork/join applications, which could be time-consuming, error-prone, and is often beyond the expertise of the developer. In this paper, we present FJProf, a novel profiler which accurately collects runtime metrics to allow characterizing several performance attributes specific to a fork/join application running on a single Java Virtual Machine (JVM) in a shared-memory multi-core. FJProf reports information and graphics to developers that help them understand the details of any fork/join processing exposed by a parallel application running on the JVM. We show how FJProf supports performance analysis by characterizing a fork/join application from the Renaissance benchmark suite.},
  address = {New York, NY, USA},
  isbn = {9781450376464},
  keywords = {fork/join parallelism, Java Virtual Machine, Performance analysis},
  location = {Tsukuba, Japan},
  numpages = {8},
  series = {VALUETOOLS '20}}

@techreport{Rose02a,
  author = {Rosenberg, Jonathan and Schulzrinne, Henning and Camarillo, Gonzalo and Johnston, Alan and Peterson, Jon and Sparks, Robert and Handley, Mark and Schooler, Eve},
  title = {SIP: Session Initiation Protocol},
  year = {2002},
  url = {http://www.ietf.org/rfc/rfc3261.txt},
  institution = {RFC 3261}}

@inproceedings{Rose09a,
  author = {Rose, John R.},
  title = {Bytecodes Meet Combinators: Invokedynamic on the JVM},
  booktitle = {Workshop on Virtual Machines and Intermediate Languages (VMIL'09)},
  pages = {2:1--2:11},
  year = {2009},
  address = {New York, NY, USA},
  articleno = {2},
  isbn = {978-1-60558-874-2},
  keywords = {bytecode, combinator, dynamic compilation, invokedynamic, method invocation},
  location = {Orlando, Florida},
  numpages = {11},
  series = {VMIL'09}}

@book{Rose12a,
  author = {Rosen, Kenneth H},
  title = {Discrete mathematics and its applications},
  publisher = {New York: McGraw-Hill},
  year = {2012},
  edition = {7}}

@unpublished{Rose14a,
  author = {Shai Rosenfeld},
  title = {Such blocking very concurrency, wow},
  year = {2014},
  url = {http://shairosenfeld.com/concurrency.html},
  note = {Scaleconf}}

@inproceedings{Rose88a,
  author = {John R. Rose},
  title = {Fast Dispatch Mechanisms for Stock Hardware},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {27--35},
  year = {1988},
  month = nov}

@inproceedings{Rose89a,
  author = {William R. Rosenblatt and Jack C. Wileden and Alexander L. Wolf},
  title = {{OROS}: Toward a Type Model for Software Development Environments},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {297--304},
  year = {1989},
  month = oct}

@book{Rose92a,
  author = {Ward Rosenberry and David Kenney and Gerry Fisher},
  title = {Understanding {DCE}},
  publisher = {O'Reilly},
  year = {1992},
  isbn = {1-56592-005-8}}

@book{Rose92b,
  author = {Hal F. Rosenbluth},
  title = {The Customer Comes Second},
  publisher = {Quill},
  year = {1992}}

@inproceedings{Rose93a,
  author = {Ellen Rose and Arie Segev},
  title = {{TOOA}: {A} Temporal Object-Oriented Algebra},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {297--325},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {In this paper, we present a temporal,
object-oriented algebra which serves as a formal
basis for the query language of a temporal,
object-oriented data model. Our algebra is a
super-set of the relational algebra in that it
provides support for manipulating temporal objects,
temporal types, type hierarchies and class lattices,
multiple time-lines, and correction sequences in
addition to supporting the five relational algebra
operators. Graphs are used as the visual
representations of both the schema and the object
instances. The algebra provides constructs to modify
and manipulate the schema graph and its extension,
the object graph. The algebra operates on a
collection or collections of objects and returns a
collection of objects. This algebra is a first step
in providing a formal foundation for query
processing and optimizing in a temporal,
object-oriented data model.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@manual{Rose98a,
  title = {Rational Rose 98: Roundtrip Engineering with C++},
  year = {1998},
  organization = {Rational Software Corporation}}

@article{Rosi11a,
  author = {Rosik, Jacek and Le Gear, Andrew and Buckley, Jim and Babar, Muhammad Ali and Connolly, Dave},
  title = {Assessing architectural drift in commercial software development: a case study},
  journal = {Software: Practice and Experience},
  volume = {41},
  pages = {63--86},
  publisher = {Wiley Online Library},
  year = {2011},
  number = {1}}

@inproceedings{Rosn00a,
  author = {Peter Rosner and Tracy Hall and Tobias Mayer},
  title = {Measuring {Object}-{Orientedness}: {The} {Invocation} {Profile}},
  booktitle = {Proceedings of IWSM '00 (10th International Workshop on New Approaches in Software Measurement)},
  pages = {18--28},
  publisher = {Springer-Verlag},
  year = {2000},
  editor = {Reiner R. Dumke and Alain Abran},
  month = oct}

@book{Ross02a,
  author = {Mary Beth Rosson and John M. Carroll},
  title = {Usability Engineering},
  publisher = {Morgan Kauffmann},
  year = {2002},
  address = {San Francisco, USA},
  isbn = {1-55860-712-9}}

@techreport{Ross06,
  author = {Guido van Rossum and Nick Coghlan},
  title = {The ``with'' Statement ({Python} Enhancement Proposal 343)},
  year = {2006},
  url = http://www.python.org/dev/peps/pep-0343/,
  institution = {Python Software Foundation}}

@article{Ross69a,
  author = {G. J. S. Ross},
  title = {Minimum Spanning Tree. Algorithm AS13},
  journal = {Applied Statistics},
  volume = {18},
  pages = {103--104},
  year = {1969}}

@article{Ross86a,
  author = {D L Ross},
  title = {Classifying Ada packages},
  journal = {Ada Lett.},
  volume = {VI},
  pages = {53--65},
  publisher = {ACM Press},
  year = {1986},
  doi = {10.1145/9312.9315},
  address = {New York, NY, USA},
  issn = {1094-3641},
  number = {4}}

@inproceedings{Ross89a,
  author = {Mary Beth Rosson and Eric Gold},
  title = {Problem-Solution Mapping in Object-Oriented Design},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {7--10},
  year = {1989},
  month = oct}

@inproceedings{Ross93a,
  author = {Mary Beth Rosson and John M. Carroll},
  title = {Active Programming Strategies in Reuse},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {4--20},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {In order to capitalize on the potential for software
reuse in object-oriented programming, we must better
understand the process involved in software reuse.
Our work addresses this need, analyzing four
experienced Smalltalk programmers as they enhanced
applications by reusing new classes. These were
{\itactive} programmers: rather than suspending
programming activity to reflect on how to use the
new components, they began work immediately
recruiting code from example usage contexts and
relying heavily on the system debugger to guide them
in applying the borrowed context. We discuss the
implications of these findings for reuse
documentation, programming instruction and tools to
support reuse.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Ross96a,
  author = {Jonathan G. Rossie and Daniel Friedman and Mitchell Wand},
  title = {Modeling Subobject-Based Inheritance},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {248--274},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@article{Rote99a,
  author = {Rotenberg, Eric and Bennett, Steve and Smith, James E},
  title = {A trace cache microarchitecture and evaluation},
  journal = {IEEE Transactions on Computers},
  volume = {48},
  pages = {111--120},
  publisher = {IEEE},
  year = {1999},
  number = {2}}

@article{Roth01a,
  author = {Gregg Rothermel and Roland Untch and Chengyun Chu and Mary Jean Harrold},
  title = {Prioritizing Test Cases For Regression Testing},
  journal = {Transactions on Software Engineering},
  volume = {27},
  pages = {929--948},
  year = {2001},
  month = oct,
  number = {10},
  organization = {IEEE}}

@article{Roth01b,
  author = {Gregg Rothermel and Margaret Burnett and Lixin Li and Christopher Dupuis and Andrei Sheretov},
  title = {A methodology for testing spreadsheets},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  volume = {10},
  pages = {110--147},
  publisher = {ACM Press},
  year = {2001},
  doi = {10.1145/366378.366385},
  address = {New York, NY, USA},
  issn = {1049-331X},
  number = {1}}

@inproceedings{Roth02a,
  author = {Gregg Rothermel and Sebastian Elbaum and Alexey Malishevsky and Praveen Kallakuri and Brian Davia},
  title = {The Impact of Test Suite Granularity on the Cost-Effectiveness of Regression Testing},
  booktitle = {Proceedings ICSE-24},
  pages = {230--240},
  year = {2002},
  month = may}

@article{Roth03a,
  author = {Gregg Rothermel and Sebastian Elbaum},
  title = {{Putting} {Your} {Best} {Tests} {Forward}},
  journal = {IEEE Software},
  volume = {5},
  pages = {74--77},
  publisher = {IEEE Computer Society},
  year = {2003},
  month = sep,
  number = {20}}

@inproceedings{Roth93a,
  author = {Gregg Rothermel and Mary Jean Harrold},
  title = {{A Safe, Efficient Algorithm for Regression Test Selection}},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM} '93)},
  pages = {358--367},
  publisher = {IEEE},
  year = {1993},
  month = sep}

@techreport{Roth94a,
  author = {Jeff Rothenberg and Sanjai Narain},
  title = {The Rand Advanced Simulation Language Project's Declarative Modeling Formalism ({DMOD})},
  year = {1994},
  institution = {National Defense Research Institute},
  isbn = {0-8330-1555-9},
  number = {MR-376-ARPA},
  type = {Technical Report}}

@article{Roth96a,
  author = {Gregg Rothermel and Mary Jean Harrold},
  title = {Analyzing Regression Test Selection Techniques},
  journal = {IEEE Transactions on Software Engineering},
  volume = {22},
  pages = {529--551},
  year = {1996},
  number = {8}}

@inproceedings{Roth99a,
  author = {Gregg Rothermel and Roland H. Untch and Chengyun Chu and Mary Jean Harrold},
  title = {Test Case Prioritization: An Empirical Study},
  booktitle = {Proceedings {ICSM} 1999},
  pages = {179--188},
  year = {1999},
  month = sep}

@article{Roum02a,
  author = {Cyrill Roume},
  title = {\'{Evaluation} {Structurelle} de la {Factorisation} et la {G}\'{e}n\'{e}ralisation au sein des {Hi}\'{e}rarchies de {Classes}: Introduction de {M}\'{e}triques},
  journal = {L'Objet},
  volume = {8},
  pages = {151--166},
  year = {2002},
  number = {1-2}}

@article{Roun01a,
  author = {Atanas Rountev and Ana Milanova and Barbara G. Ryder},
  title = {Points-to analysis for Java using annotated constraints},
  journal = {SIGPLAN Notice},
  volume = {36},
  pages = {43--55},
  publisher = {ACM},
  year = {2001},
  doi = {10.1145/504311.504286},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {11}}

@inproceedings{Roun03a,
  author = {Atanas Rountev and Ana Milanova and Barbara G. Ryder},
  title = {Fragment Class Analysis for Testing of Polymorphism in Java Software},
  booktitle = {ICSE '03: Proceedings of the 25th IEEE International Conference on Software Engineering},
  pages = {210--220},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  address = {Los Alamitos, CA, USA}}

@inproceedings{Roun04a,
  author = {Atanas Rountev},
  title = {Precise Identification of Side-Effect-Free Methods in {Java}},
  booktitle = {{ICSM} '04: Proceedings of the 20th IEEE International Conference on Software Maintenance},
  pages = {82--91},
  publisher = {IEEE Computer Society},
  year = {2004},
  address = {Washington, DC, USA},
  isbn = {0-7695-2213-0}}

@inproceedings{Roun04b,
  author = {Atanas Rountev and Scott Kagan and Michael Gibas},
  title = {Evaluating the imprecision of static analysis},
  booktitle = {PASTE '04: Proceedings of the 5th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering},
  pages = {14--16},
  publisher = {ACM},
  year = {2004},
  address = {New York, NY, USA},
  isbn = {1-58113-910-1}}

@inproceedings{Roun05a,
  author = {David Roundy},
  title = {Darcs: Distributed Version Management in Haskell},
  booktitle = {Haskell '05: Proceedings of the 2005 ACM SIGPLAN workshop on Haskell},
  pages = {1--4},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1088348.1088349},
  address = {New York, NY, USA},
  isbn = {1-59593-071-X},
  location = {Tallinn, Estonia}}

@inproceedings{Roux94a,
  author = {C. Rouxel and J. P. Velu and M. Texier and D. Leroy},
  title = {Object-Oriented Methodologies for Large Scale Projects: does it work?},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {79--95},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@article{Rove08a,
  author = {Per Rovegard and Lefteris Angelis and Claes Wohlin},
  title = {An Empirical Study on Views of Importance of Change Impact Analysis Issues},
  journal = {IEEE Transactions on Software Engineering},
  volume = {34},
  pages = {516-530},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {10.1109/TSE.2008.s32},
  address = {Los Alamitos, CA, USA},
  issn = {0098-5589},
  number = {4}}

@article{Rovn86a,
  author = {P. Rovner},
  title = {Extending Modula-2 to Build Large Integrated Systems},
  journal = {IEEE Software},
  year = {1986},
  month = nov,
  note = {Incomplete (Vol, No \& pp)}}

@misc{Rowa09a,
  author = {Rowan, Kael},
  title = {Code Canvas},
  year = {2009},
  citeulike-article-id = {6502790},
  day = {26},
  month = mar,
  note = {\url{http://blogs.msdn.com/kaelr/archive/2009/03/26/code-canvas.aspx}, archived at \url{http://www.webcitation.org/5mceC6NVX}},
  posted-at = {2010-01-08 06:51:26},
  priority = {2}}

@incollection{Royc87a,
  author = {Royce, W. W.},
  title = {Managing the Development of Large Software Systems},
  booktitle = {Tutorial: Software Engineering Project Management},
  pages = {118--127},
  publisher = {IEEE Computer Society},
  year = {1987},
  address = {Washington},
  editor = {Thayer, R.H.},
  note = {fca}}

@inproceedings{Roye91a,
  author = {J.C. Royer},
  title = {A propos des concepts de CLOS},
  booktitle = {Bigre No 72 JFLA '91},
  pages = {150--158},
  year = {1991}}

@article{Rubi86a,
  author = {R.V. Rubin},
  title = {Language Constructs for Programming by Example},
  journal = {3rd ACM-SIGOIS Conf on Office Information Systems, also SIGOIS Bulletin},
  volume = {7},
  pages = {92--103},
  year = {1986},
  number = {2-3}}

@inproceedings{Rubi88a,
  author = {Kenneth S. Rubin and Patricia M. Jones and Christine M. Mitchell and Theodore C. Goldstein},
  title = {A {Smalltalk} Implementation of an Intelligent Operator's Associate},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {234--247},
  year = {1988},
  month = nov}

@inproceedings{Ruby00a,
  author = {Ruby, Clyde and Leavens, Gary T.},
  title = {Safely Creating Correct Subclasses without Seeing Superclass Code},
  booktitle = {Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'2000)},
  publisher = {Association for Computing Machinery},
  year = {2000},
  doi = {10.1145/354222.353186}}

@misc{RubyLang3ClassModule,
  title = {Ruby Lang 3.0 class Module documentation -- consulted on 24 February 2022},
  key = {RubyLang3ClassModule},
  note = {https://docs.ruby-lang.org/en/3.0/Module.html}}

@inproceedings{Ruep94a,
  author = {Andreas R{\"u}ping},
  title = {Modules in Object-Oriented Systems},
  booktitle = {Proceedings of TOOLS '94},
  publisher = {Prentice Hall},
  year = {1994},
  month = jun}

@inproceedings{Ruf93a,
  title={Partial evaluation in reflective system implementations},
  author={Ruf, Erik},
  booktitle={Workshop on Reflection and Metalevel Architecture},
  year={1993}}

@article{Ruga98a,
  author = {Spencer Rugaber and Jim White},
  title = {Restoring a Legacy: Lessons Learned},
  journal = {IEEE Software},
  volume = {15},
  pages = {28--33},
  publisher = {IEEE},
  year = {1998},
  month = jul,
  number = {4}}

@inproceedings{Rumb87a,
  author = {James Rumbaugh},
  title = {Relations as Semantic Constructs in an Object-Oriented Language},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {466--481},
  year = {1987},
  month = dec}

@inproceedings{Rumb88a,
  author = {James Rumbaugh},
  title = {Controlling Propagation of Operations Using Attributes on Relations},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {285--296},
  year = {1988},
  month = nov}

@book{Rumb91a,
  author = {James Rumbaugh and Michael Blaha and William Premerlani and Frederick Eddy and William Lorensen},
  title = {Object-Oriented Modeling and Design},
  publisher = {Prentice-Hall},
  year = {1991},
  address = {New Jersey},
  isbn = {0-13-630054-5}}

@book{Rumb99a,
  author = {James Rumbaugh and Ivar Jacobson and Grady Booch},
  title = {The Unified Modeling Language Reference Manual},
  publisher = {Addison Wesley},
  year = {1999}}

@techreport{Rund92a,
  author = {Elke A. Rundensteiner},
  title = {A {Class} {Classification} {Algorithm} for {Supporting} {Consistent} {Object} {Views}},
  year = {1992},
  institution = {University of Michigan},
  type = {Technical Report}}

@article{Rune06a,
  author = {Runeson, Per},
  title = {A Survey of Unit Testing Practices},
  journal = {IEEE Software},
  volume = {23},
  year = {2006},
  month = {jul},
  doi = {10.1109/MS.2006.91}}

@article{Rune09a,
  author = {Runeson, Per and H{\"o}st, Martin},
  title = {{Guidelines for Conducting and Reporting Case Study Research in Software Engineering}},
  journal = {Empirical software engineering},
  volume = {14},
  pages = {131--164},
  publisher = {Springer},
  year = {2009},
  number = {2}}

@inproceedings{Rush17a,
  author = {Rush, Alexander M and Harvard, SEAS and Chopra, Sumit and Weston, Jason},
  title = {A neural attention model for sentence summarization},
  booktitle = {ACLWeb. Proceedings of the 2015 conference on empirical methods in natural language processing},
  year = {2017}}

@article{Russ00a,
  author = {Claudio V. Russo},
  title = {First-class structures for standard ML},
  journal = {Nordic J. of Computing},
  volume = {7},
  pages = {348--374},
  year = {2000},
  issn = {1236-6064},
  number = {4}}

@inproceedings{Russ10a,
  author = {Alejandro Russo and Andrei Sabelfeld},
  title = {Dynamic vs. Static Flow-Sensitive Security Analysis},
  booktitle = {Computer Security Foundation},
  pages = {186-199},
  year = {2010},
  ee = {http://doi.ieeecomputersociety.org/10.1109/CSF.2010.20}}

@book{Russ16a,
  author = {Russell, Stuart J and Norvig, Peter},
  title = {Artificial intelligence: a modern approach},
  publisher = {Malaysia; Pearson Education Limited},
  year = {2016}}

@inproceedings{Russ88a,
  author = {Vincent Russo and Gary Johnston and Roy Campbell},
  title = {Process Mangement and Exception Handling in Multiprocessor Operating Systems},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {248--258},
  year = {1988},
  month = nov}

@incollection{Russ89a,
  author = {D. Russinoff},
  title = {Proteus: a Frame-based Non-monotonic Inference System},
  booktitle = {Object-Oriented Concepts, Databases and Applications},
  pages = {127--150},
  publisher = {ACM Press and Addison Wesley},
  year = {1989},
  address = {Reading, Mass.},
  editor = {W. Kim and F. Lochovsky}}

@inproceedings{Russ89b,
  author = {Vincent F. Russo and Roy H. Campbell},
  title = {Virtual Memory and Backing Storage Management in Multiprocessor Operating Systems Using Object-Oriented Design Techniques},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {267--278},
  year = {1989},
  month = oct}

@book{Russ95a,
  title = {{USENIX} Conference on Object Oriented Technologies},
  publisher = {USENIX},
  year = {1995},
  editor = {Vicent F. Russo},
  isbn = {1-880446-71-5}}

@inproceedings{Ruta04a,
  author = {Nick Rutar and Christian B. Almazan and Jeffrey S. Foster},
  title = {A comparison of bug finding tools for {Java}},
  booktitle = {15th International Symposium on Software Reliability Engineering (ISSRE 2004)},
  pages = {245--256},
  year = {2004}}

@inproceedings{Ruta17a,
  author = {Ruta, Michele and Scioscia, Floriano and Ieva, Saverio and Capurso, Giovanna and Di Sciascio, Eugenio},
  title = {Supply Chain Object Discovery with Semantic-enhanced Blockchain},
  booktitle = {Proceedings of the 15th ACM Conference on Embedded Network Sensor Systems},
  pages = {60:1--60:2},
  publisher = {ACM},
  year = {2017},
  url = {http://doi.acm.org/10.1145/3131672.3136974},
  doi = {10.1145/3131672.3136974},
  acmid = {3136974},
  address = {New York, NY, USA},
  articleno = {60},
  isbn = {978-1-4503-5459-2},
  keywords = {blockchain, object discovery, semantic matchmaking, supply chains, poster},
  location = {Delft, Netherlands},
  numpages = {2},
  series = {SenSys '17}}

@inproceedings{Ruth08a,
  author = {Ruthruff, Joseph R. and Penix, John and Morgenthaler, J. David and Elbaum, Sebastian and Rothermel, Gregg},
  title = {Predicting accurate and actionable static analysis warnings: an experimental approach},
  booktitle = {Proceedings of the 30th international conference on Software engineering},
  pages = {341--350},
  publisher = {ACM},
  year = {2008},
  address = {New York, NY, USA},
  isbn = {978-1-60558-079-1},
  location = {Leipzig, Germany},
  numpages = {10},
  series = {ICSE '08}}

@article{Ruth08b,
  author = {Rutherford, Matthew and Carzaniga, Antonio and Wolf, Alexander},
  title = {Evaluating Test Suites and Adequacy Criteria Using Simulation-Based Models of Distributed Systems},
  journal = {Software Engineering, IEEE Transactions on},
  volume = {34},
  pages = {452-470},
  year = {2008},
  doi = {10.1109/TSE.2008.33},
  month = {aug}}

@inproceedings{Ruth99a,
  author = {O.~R\"{u}thing and J.~Knoop and B.~Steffen},
  title = {Detecting Equalities of Variables: Combining Efficiency with Precision},
  booktitle = {Proceedings of the 6th Static Analysis Symposium (SAS'99), Venice (Italy)},
  volume = {1694},
  pages = {232--247},
  publisher = {Springer-Verlag},
  year = {1999},
  editor = {A. Cortesi and G. File},
  month = sep,
  series = {LNCS}}

@techreport{Rutt87a,
  author = {Jan Rutten and Jeffrey I. Zucker},
  title = {A Semantic Approach to Fairness},
  year = {1987},
  address = {Amsterdam},
  institution = {CWI},
  number = {CS-R8759},
  type = {Report}}

@book{Ryan97a,
  author = {Timothy W. Ryan},
  title = {Distributed Object Technology},
  publisher = {Hewlett-Packard Professional Books},
  year = {1997}}

@inproceedings{Ryde01a,
  author = {Barbara G. Ryder and Frank Tip},
  title = {Change impact analysis for object-oriented programs},
  booktitle = {Proceedings of the 2001 ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering},
  pages = {46--53},
  publisher = {ACM Press},
  year = {2001},
  doi = {10.1145/379605.379661},
  isbn = {1-58113-413-4},
  location = {Snowbird, Utah, United States}}

@book{Ryde88a,
  author = {David E. Rydeheard and Rod M. Burstall},
  title = {Computational Category Theory},
  publisher = {Prentice-Hall},
  year = {1988},
  address = {New York},
  series = {Prentice Hall international series in computer science}}

@unpublished{Ryde88b,
  author = {D.E. Rydeheard},
  title = {On Category Theory and Computer Science --- An Annotated Bibliography},
  year = {1988},
  misc = {July 7},
  month = jul,
  note = {Univ. Erlangen-N{\"u}rnberg},
  type = {Draft}}

@inproceedings{Ryss03a,
  author = {Filip van Rysselberghe and Serge Demeyer},
  title = {Evaluating Clone Detection Techniques},
  booktitle = {Proceedings of the International Workshop on Evolution of Large Scale Industrial Applications (ELISA)},
  pages = {25--36},
  year = {2003},
  url = {http://www.win.ua.ac.be/~fvrys/publications/}}

@inproceedings{Ryss03b,
  author = {Filip van Rysselberghe and Serge Demeyer},
  title = {Studying Software Evolution using Clone Detection},
  booktitle = {Proceedings WOOR'03},
  pages = {71--75},
  year = {2003},
  url = {http://www.win.ua.ac.be/~fvrys/publications/}}

@inproceedings{Ryss03c,
  author = {Filip Van Rysselberghe and Serge Demeyer},
  title = {Reconstruction of Successful Software Evolution Using Clone Detection},
  booktitle = {Proc. of International Workshop on Principles of Software Evolution (IWPSE)},
  pages = {126--130},
  year = {2003},
  url = {http://www.win.ua.ac.be/~fvrys/publications/}}

@inproceedings{Ryss04a,
  author = {Van Rysselberghe, Filip and Serge Demeyer},
  title = {Studying Software Evolution Information By Visualizing the Change History},
  booktitle = {Proceedings 20th IEEE International Conference on Software Maintenance ({ICSM} '04)},
  pages = {328--337},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  url = {http://www.win.ua.ac.be/~fvrys/publications/},
  address = {Los Alamitos CA},
  month = sep}

@inproceedings{Ryss04b,
  author = {Filip van Rysselberghe and Serge Demeyer},
  title = {Evaluating Clone detection Techniques from a Refactoring Perspective},
  booktitle = {Proc. 19. Intl. Conference on Automated Software Engineering (ASE'04)},
  year = {2004},
  month = sep,
  organization = {IEEE}}

@misc{SAX,
  title = {{Simple {API} for XML}},
  key = {Simple {API} for XML},
  note = {http://www.saxproject.org/}}

@manual{SICS95,
  title = {SICStus Prolog User's Manual},
  year = {1995},
  address = {Sweden},
  organization = {Programming Systems Group, Swedish Institute of Computer Science}}

@misc{SIXX,
  title = {SIXX (Smalltalk Instance eXchange in XML)},
  url = {http://www.mars.dti.ne.jp/~umejava/smalltalk/sixx/index.html},
  howpublished = {\url{http://www.mars.dti.ne.jp/~umejava/smalltalk/sixx/index.html}},
  key = {SIXX}}

@misc{SMarkBench,
  title = {SMark, benchmarking suite for Smalltalk -- consulted on 26 February 2022},
  key = {SMarkBench},
  note = {https://github.com/smarr/SMark}}

@misc{SQL,
  author = {SQL},
  title = {Structured Query Language},
  year = {2023},
  howpublished = {\url{https://www.iso.org/standard/63555.html}}}

@misc{SRPF,
  title = {State Replication Protocol Framework},
  url = {http://sourceforge.net/projects/srp/},
  howpublished = {\url{http://sourceforge.net/projects/srp/}},
  key = {SRPF}}

@techreport{STSC97a,
  author = {STSC},
  title = {{Software} {Reengineering} {Assessment} {Handbook} v3.0},
  year = {1997},
  url = {http://stsc.hill.af.mil/RENG},
  institution = {STSC, U.S. Department of Defense},
  month = mar}

@misc{SUnit,
  author = {Kent Beck},
  title = {Simple {Smalltalk} Testing: With Patterns},
  url = {http://www.xprogramming.com/testfram.htm},
  note = {\url{www.xprogramming.com/testfram.htm}}}

@article{Sabe03a,
  author = {Andrei Sabelfeld and Andrew C. Myers},
  title = {Language-Based Information-Flow Security},
  journal = {IEEE Journal on Selected Areas in Communications},
  volume = {21},
  pages = {2003},
  year = {2003}}

@inproceedings{Saff03a,
  author = {David Saff and Michael D. Ernst},
  title = {Can continuous testing speed software development?},
  booktitle = {Fourteenth International Symposium on Software Reliability Engineering ISSRE 2003},
  year = {2003},
  month = nov,
  organization = {IEEE}}

@inproceedings{Saff04a,
  author = {David Saff and Michael D. Ernst},
  title = {An experimental evaluation of continuous testing during development},
  booktitle = {Proceedings of the 2004 International Symposium on Software Testing and Analysis ISSTA 2004},
  year = {2004},
  url = {http://pag.csail.mit.edu/~mernst/pubs/ct-user-study-issta2004.pdf},
  month = jul,
  organization = {ACM}}

@inproceedings{Saff04b,
  author = {David Saff and Michael D. Ernst},
  title = {Automatic mock object creation for test factoring},
  booktitle = {Workshop on Program Analysis for Software Tools and Engineering PASTE 2004},
  year = {2004},
  url = {http://pag.csail.mit.edu/~mernst/pubs/mock-factoring-paste2004.pdf},
  month = jun,
  organization = {ACM}}

@article{Sago06a,
  author = {K. F. Sagonas and J. Wilhelmsson},
  title = {Efficient memory management for concurrent programs that use message passing},
  journal = {Science Computer Programming},
  volume = {62},
  year = {2006},
  number = {2}}

@inproceedings{SagoA09a,
  author = {Konstantinos Sagonas and
               Thanassis Avgerinos},
  title = {Automatic refactoring of Erlang programs},
  booktitle = {International Conference on Principles and Practice of Declarative Programming},
  pages = {13--24},
  publisher = {{ACM}},
  year = {2009},
  url = {https://doi.org/10.1145/1599410.1599414},
  doi = {10.1145/1599410.1599414},
  editor = {Ant{\'{o}}nio Porto and Francisco Javier L{\'{o}}pez{-}Fraguas}}

@inproceedings{Sahm10a,
  author = {Alexander Sahm, Walid Maalej},
  title = {Switch! Recommending Artifacts Needed Next Based on Personal and Shared Context},
  booktitle = {Software Engineering (Workshops)},
  volume = {160},
  pages = {473-484},
  publisher = {GI},
  year = {2010},
  url = {http://dblp.uni-trier.de/db/conf/se/se2010w.html},
  date = {2010-01-01},
  editor = {Engels, Gregor and Luckey, Markus and Pretschner, Alexander and Reussner, Ralf},
  series = {LNI}}

@inproceedings{Sahr00,
  author = {Houari A. Sahraoui and Mounir Boukadoum and Hakim Lounis and Fr\'ed\'eric Eth\`eve},
  title = {Predicting Class Libraries Interface Evolution: an investigation into machine learning approaches},
  booktitle = {Proceedings of 7th Asia-Pacific Software Engineering Conference},
  year = {2000}}

@article{Sahr01a,
  author = {Houari Sahraoui and Mounir Boukadoum and Hakim Lounis},
  title = {Building Quality Estimation models with Fuzzy Threshold Values},
  journal = {L'Objet},
  volume = {7},
  year = {2001},
  month = dec,
  number = {4}}

@inproceedings{Sahr02a,
  author = {H. Sahraoui and P. Valtchev and I. Konkobo and S. Shen},
  title = {Object Identification in Legacy Code as a Grouping Problem},
  booktitle = {Proceedings of the 26th Computer Software and Applications Conference (COMPSAC'02)},
  year = {2002}}

@inproceedings{Sahr97a,
  author = {Houari A. Sahraoui and Walc\'elio Melo and Hakim Lounis and Francois Dumont},
  title = {Applying {Concept} {Formation} {Methods} to {Object} {Identification} in {Procedural} {Code}},
  booktitle = {Proceedings of ASE '97 (12th International Conference on Automated Software Engineering)},
  pages = {210--218},
  publisher = {IEEE Computer Society Press},
  year = {1997},
  month = nov,
  organization = {IEEE}}

@article{Sahr99a,
  author = {H. A. Sahraoui and H. Lounis and W. Melo and H. Mili},
  title = {A Concept Formation Based Approach to Object Identification in Procedural Code},
  journal = {Automated Software Engineering Journal},
  volume = {6},
  pages = {387--410},
  publisher = {Kluwer},
  year = {1999},
  number = {4}}

@inproceedings{Saka13a,
  author = {Sakamoto, Kazunori},
  title = {A framework for analyzing and transforming source code supporting multiple programming languages},
  booktitle = {Proceedings of the 12th annual international conference companion on Aspect-oriented software development},
  pages = {35--36},
  year = {2013}}

@article{Sakk88a,
  author = {Markku Sakkinen},
  title = {Comments on the `Law of Demeter' and {C}++},
  journal = {ACM SIGPLAN Notices},
  volume = {23},
  pages = {38--44},
  year = {1988},
  month = dec,
  number = {12}}

@inproceedings{Sakk88b,
  author = {Markku Sakkinen},
  title = {On the Darker Side of {C}++},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {162--176},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Sakk89a,
  author = {Markku Sakkinen},
  title = {Disciplined Inheritance},
  booktitle = {Proceedings ECOOP '89},
  pages = {39--56},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@article{Sakk92a,
  author = {Markku Sakkinen},
  title = {A Critique of the Inheritance Principles of {C}++},
  journal = {Computing Systems},
  volume = {5},
  pages = {69--110},
  year = {1992},
  number = {1}}

@article{Sakk92b,
  author = {Markku Sakkinen},
  title = {The Darker Side of {C}++ Revisited},
  journal = {Structured Programming},
  volume = {13},
  pages = {155--177},
  publisher = {Springer International},
  year = {1992},
  number = {4}}

@phdthesis{Sakk92c,
  author = {Markku Sakkinen},
  title = {Inheritance and Other Main Principles of {C}++ and Other Object-Oriented Languages},
  year = {1992},
  school = {University of Jyv{\"a}skyl{\"a}},
  series = {Jyv{\"a}skyl{\"a} Studies in Computer Science, Economics and Statistics, No. 20},
  type = {{Ph.D}. Thesis}}

@inproceedings{Saku07a,
  author = {Kouhei Sakurai and Hidehiko Masuhara},
  title = {Test-based pointcuts: a robust pointcut mechanism based on unit test cases for software evolution},
  booktitle = {LATE '07: Proceedings of the 3rd workshop on Linking aspect technology and evolution},
  pages = {5},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1275672.1275677},
  address = {New York, NY, USA},
  isbn = {1-59593-655-4},
  location = {Vancouver, British Columbia, Canada}}

@inproceedings{Sala04a,
  author = {Maher Salah and Spiros Mancoridis},
  title = {A Hierarchy of Dynamic Software Views: from Object-Interactions to Feature-Interacions},
  booktitle = {Proceedings IEEE International Conference on Software Maintenance ({ICSM} 2004)},
  pages = {72--81},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  doi = {10.1109/ICSM.2004.1357792},
  address = {Los Alamitos CA}}

@inproceedings{Sala05a,
  author = {Maher Salah and Trip Denton and Spiros Mancoridis and Ali Shokoufandeh and Filippos I. Vokolos},
  title = {Scenariographer: A Tool for Reverse Engineering Class Usage Scenarios from Method Invocation Sequences},
  booktitle = {Proceedings of 21th International Conference on Software Maintenance ({ICSM}'05)},
  pages = {155--164},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  doi = {10.1109/ICSM.2005.78},
  month = sep}

@inproceedings{Salci05a,
  author = {Alexandru Salcianu and Martin C. Rinard},
  title = {Purity and Side Effect Analysis for {Java} Programs.},
  booktitle = {VMCAI},
  pages = {199--215},
  year = {2005},
  ee = {http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=3385{\&}spage=199}}

@article{Sale09a,
  author = {Salehie, Mazeiar and Tahvildari, Ladan},
  title = {Self-adaptive Software: Landscape and Research Challenges},
  journal = {ACM Transaction Autononmous Adaptative Systems},
  volume = {4},
  pages = {14:1--14:42},
  publisher = {ACM},
  year = {2009},
  url = {http://doi.acm.org/10.1145/1516533.1516538},
  address = {New York, NY, USA},
  articleno = {14},
  issn = {1556-4665},
  month = may,
  number = {2},
  numpages = {42}}

@inproceedings{Sale92a,
  author = {Hayssam Saleh and Philippe Gautron},
  title = {A Concurrency Control Mechanism for {C}++ Objects},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {195--210},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@inproceedings{Sali15a,
 author = {Salihoglu, Semih and Shin, Jaeho and Khanna, Vikesh and Truong, Ba Quan and Widom, Jennifer},
 title = {Graft: A Debugging Tool For Apache Giraph},
 booktitle = {Proc. of the 2015 ACM SIGMOD Int. Conf. on Management of Data},
 series = {SIGMOD '15},
 year = {2015},
 isbn = {978-1-4503-2758-9},
 location = {Melbourne, Victoria, Australia},
 pages = {1403--1408},
 numpages = {6},
 doi = {10.1145/2723372.2735353},
 acmid = {2735353},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {debugging, distributed bulk synchronous parallel graph systems, distributed graph systems}
}

@inproceedings{Sall10a,
  author = {Sallenave, Olivier and Ducournau, Roland},
  title = {Efficient Compilation of .NET Programs for Embedded Systems},
  booktitle = {Proceedings of the Workshop on the Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems},
  pages = {3:1--3:8},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1925801.1925804},
  doi = {10.1145/1925801.1925804},
  acmid = {1925804},
  address = {New York, NY, USA},
  articleno = {3},
  isbn = {978-1-4503-0537-2},
  keywords = {closed-world assumption, embedded systems, late binding, subtype test},
  location = {Maribor, Slovenia},
  numpages = {8},
  series = {ICOOOLPS '10}}

@inproceedings{Salt75a,
  author = {Jerome H. Saltzer and Michael D. Schoroeder},
  title = {The Protection of Information in Computer Systems},
  booktitle = {Fourth ACM Symposium on Operating System Principles},
  volume = {63},
  pages = {1278--1308},
  publisher = {IEEE},
  year = {1975},
  month = sep}

@article{Salv13a,
  author = {Guido Salvaneschi and Carlo Ghezzi and Matteo Pradella},
  title = {An Analysis of Language-Level Support for Self-Adaptive Software},
  journal = {TAAS},
  volume = {8},
  pages = {7},
  year = {2013},
  ee = {http://doi.acm.org/10.1145/2491465.2491466},
  number = {2}}

@inproceedings{Salv16a,
  title={Debugging for reactive programming},
  author={Salvaneschi, Guido and Mezini, Mira},
  booktitle={Proceedings of the 38th International Conference on Software Engineering},
  pages={796--807},
  year={2016}
}

@inproceedings{Salva16,
  author = {Salvaneschi, Guido and Mezini, Mira},
  title = {Debugging Reactive Programming with Reactive Inspector},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
  pages = {728--730},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2889160.2893174},
  doi = {10.1145/2889160.2893174},
  acmid = {2893174},
  address = {New York, NY, USA},
  isbn = {978-1-4503-4205-6},
  keywords = {debugging, functional-reactive programming},
  location = {Austin, Texas},
  numpages = {3},
  series = {ICSE '16}}

@book{Sam07,
  author = {Samudra Gupta},
  title = {Pro Apache jog4j. Second Edition.},
  publisher = {APress},
  year = {2007}}

@book{Same97a,
  author = {Johannes Sametinger},
  title = {Software Engineering with Reusable Components},
  publisher = {Springer-Verlag},
  year = {1997},
  isbn = {3-540-62695-6}}

@inproceedings{Sami07a,
  author = {Samir, Hani and Kamel, Amr and Stroulia, Eleni},
  title = {Swing2Script: {Migration} of {Java}-{Swing} applications to {Ajax} {Web} applications},
  booktitle = {14th Working Conference on Reverse Engineering ({WCRE} 2007)},
  year = {2007},
  abstract = {Platform migration is a core problem in software
reengineering, since applications are frequently deemed useful in environments other than the ones in which they were originally implemented. The World-Wide-Web in
particular is becoming a target platform of choice because of its pervasiveness, and a substantial class of applications that could benefit from migration to the web is that of Java
Graphical User Interface (GUI) desktop applications. To that end, we have recently developed Swing2Script, an
interaction-reengineering approach for automatically migrating Java-Swing applications to Ajax-enabled web-based applications. The approach reverse engineers the structure and behavior of Java Swing GUIs, using aspects woven unobtrusively in the original application. Based on the extracted model, it automatically builds an Ajax-enabled front end, which drives the relevant workflows of the original application. In this paper, we describe our migration approach and the middleware on which it relies, and we illustrate it with a case study.}}

@inproceedings{Samp04a,
  author = {Sreedevi Sampath and Valentin Mihaylov and Amie Souter and Lori Pollock},
  title = {A {Scalable} {Approach} to {User}-{Session} based {Testing} of {Web} {Applications} through {Concept} {Analysis}},
  booktitle = {Proceedings of ASE '04 (19th International Conference on Automated Software Engineering)},
  pages = {132--141},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  location = {Linz, Austria},
  month = sep}

@inproceedings{Samp86a,
  author = {A. Dain Samples and David Ungar and Paul Hilfinger},
  title = {{SOAR}: {Smalltalk} Without Bytecodes},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {107--118},
  year = {1986},
  month = nov}

@inproceedings{Samp99a,
  author = {Neal Sample and Dorothea Beringer and Laurence Melloul and Gio Wiederhold},
  title = {{CLAM}: Composition Language for Autonomous Megamodules},
  booktitle = {Proceedings of Coordination '99},
  volume = 1594,
  pages = {291--306},
  year = {1999},
  editor = {Paolo Ciancarini and Alexander L. Wolf},
  series = {LNCS}}

@inproceedings{Sanc08a,
  author = {Jes\'{u}s S\'{a}nchez Cuadrado and Jes\'{u}s Garc\'{\i}a Molina},
  title = {Approaches for Model Transformation Reuse: Factorization and Composition},
  booktitle = {Proceedings of the 1st International Conference on Theory and Practice of Model Transformations},
  pages = {168--182},
  publisher = {Springer-Verlag},
  year = {2008},
  doi = {10.1007/978-3-540-69927-9_12},
  acmid = {1424880},
  address = {Berlin, Heidelberg},
  isbn = {978-3-540-69926-2},
  location = {Zurich, Switzerland},
  numpages = {15},
  series = {ICMT '08}}

@inproceedings{Sanc10a,
  author = {S\'anchez Ram\'an, \'Oscar and S\'anchez Cuadrado, Jes\'us and Garc\'ia Molina, Jes\'us},
  title = {Model-driven Reverse Engineering of Legacy Graphical User Interfaces},
  booktitle = {Proceedings of the {IEEE}/{ACM} International Conference on Automated Software Engineering},
  pages = {147--150},
  publisher = {{ACM}},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1858996.1859023},
  doi = {10.1145/1858996.1859023},
  abstract = {Businesses are more and more modernizing the legacy systems they developed with R{API}d Application Development ({RAD}), so that they can benefit from the new platforms and technologies. In these systems, the Graphical User Interface ({GUI}) layout is implicitly given by the position of the {GUI} elements (i.e. coordinates). However, taking advantage of current features of {GUI} technologies often requires an explicit, high-level layout model. We propose a Model-Driven Engineering process to perform reverse engineering of {RAD}-built {GUIs}, which is focused on discovering the implicit layout, and produces a {GUI} model where the layout is explicit. Based on the information we obtain, other reengineering activities can be performed, for example, to adapt the {GUI} for mobile device screens.},
  date = {2010},
  isbn = {978-1-4503-0116-9},
  keywords = {, graphical user interfaces, layout},
  location = {New York, {NY}, {USA}},
  series = {{ASE} '10},
  urldate = {2018-08-10}}

@article{Sanc14a,
  author = {S\'anchez Ram{\'o}n, \'Oscar and S\'anchez Cuadrado, Jes\'us and Garc\'ia Molina, Jes\'us},
  title = {Model-driven reverse engineering of legacy graphical user interfaces},
  journal = {Automated Software Engineering},
  volume = {21},
  pages = {147--186},
  year = {2014},
  url = {http://link.springer.com/10.1007/s10515-013-0130-2},
  doi = {10.1007/s10515-013-0130-2},
  abstract = {Businesses are increasingly beginning to modernise those of their legacy systems that were originally developed with R{API}d Application Development ({RAD}) or Fourth Generation Language (4GL) environments, in order to benefit from new platforms and technologies. In these systems, the Graphical User Interface ({GUI}) layout is implicitly provided by the position of the {GUI} elements (i.e. coordinates). However, taking advantage of current features of {GUI} technologies often requires an explicit, high-level layout model. We propose a Model-Driven Engineering process with which to perform the automatic reverse engineering of {RAD}-built {GUIs}, which is focused on discovering the implicit layout, and produces a {GUI} model in which the layout is explicit. As an example of the approach, we apply an automatic reengineering process to this model in order to generate a Java Swing user interface.},
  date = {2014-04},
  issn = {0928-8910, 1573-7535},
  keywords = {Graphical User Interfaces, Layout, Model driven engineering, Modernisation, Reengineering, Reverse engineering},
  langid = {english},
  number = {2},
  urldate = {2018-04-19}}

@article{Sanc16a,
  author = {S{\'a}nchez Ram{\'o}n, {\'O}scar and S{\'a}nchez Cuadrado, Jes{\'u}s and Garc{\'\i}a Molina, Jes{\'u}s and Vanderdonckt, Jean},
  title = {A layout inference algorithm for Graphical User Interfaces},
  journal = {Information and Software Technology},
  volume = {70},
  pages = {155--175},
  publisher = {Elsevier},
  year = {2016}}

@inproceedings{Sand16a,
  author = {Sandoval Alcocer, Juan Pablo and Bergel, Alexandre and Valente, Marco Tulio},
  title = {Learning from Source Code History to Identify Performance Failures},
  booktitle = {Proceedings of the 7th ACM/SPEC on International Conference on Performance Engineering},
  pages = {37--48},
  publisher = {ACM},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2851553.2851571},
  doi = {10.1145/2851553.2851571},
  acmid = {2851571},
  address = {New York, NY, USA},
  isbn = {978-1-4503-4080-9},
  keywords = {performance analysis, performance evolution, performance variation},
  location = {Delft, The Netherlands},
  numpages = {12},
  series = {ICPE '16}}

@inproceedings{Sand19a,
  author = {Sandoval Alcocer, Juan Pablo and Fabian Beck and Alexandre Bergel},
  title = {Performance Evolution Matrix: Visualizing Performance Variations Along Software Versions},
  booktitle = {2019 Working Conference on Software Visualization (VISSOFT)},
  pages = {1-11},
  year = {2019},
  doi = {10.1109/VISSOFT.2019.00009}}

@article{Sand78,
  author = {Sandewall, Erik},
  title = {Programming in an Interactive Environment: The ``Lisp'' Experience},
  journal = {ACM Comput. Surv.},
  volume = {10},
  pages = {35--71},
  publisher = {ACM},
  year = {1978},
  doi = {10.1145/356715.356719},
  acmid = {356719},
  address = {New York, NY, USA},
  issn = {0360-0300},
  month = mar,
  number = {1},
  numpages = {37}}

@inproceedings{Sand86a,
  author = {David Sandberg},
  title = {An Alternative to Subclassing},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {424--428},
  year = {1986},
  month = nov}

@article{Sand88a,
  author = {Sandberg, D. W.},
  title = {Smalltalk and exploratory programming},
  journal = {SIGPLAN Not.},
  volume = {23},
  pages = {85--92},
  year = {1988},
  url = {http://dx.doi.org/10.1145/51607.51614},
  doi = {10.1145/51607.51614},
  abstract = {Using Smalltalk-80, programmers can produce
prototypes much faster than with C or Pascal. What
techniques do Smalltalk-80 programmers use to
produce these prototypes? What is special about
Smalltalk-80 that enables them to uses these
techniques? Can these techniques be used with
conventional languages such as C? In an attempt to
answer these questions we interviewed experienced
Smalltalk programmers and asked how they approach
programming in Smalltalk. Such introspective
interviews that are conducted after completion of a
project are known to be somewhat unreliable, but not
enough is known to use any other methodology. What
follows is a summary of the interviews, followed by
an explanation of the results. Finally we discuss
some of the weaknesses of Smalltalk and some
possible solutions.},
  citeulike-article-id = {112858},
  issn = {0362-1340},
  month = oct,
  number = {10},
  priority = {2}}

@article{Sand89a,
  author = {B. Sanden},
  title = {An Entity-Life Modeling Approach to the Design of Concurrent Systems},
  journal = {CACM},
  volume = {32},
  pages = {330--343},
  year = {1989},
  month = mar,
  number = {3}}

@techreport{Sand96a,
  author = {Georg Sander},
  title = {Graph Layout for Applications in Compiler Construction},
  year = {1996},
  institution = {Universitaet des Saarlandes},
  month = feb}

@incollection{Sand98a,
  author = {David Sands},
  title = {Computing with Contexts: {A} simple approach},
  booktitle = {Second Workshop on Higher-Order Operational Techniques in Semantics (HOOTS II)},
  volume = {10},
  publisher = {Elsevier Science Publishers B.V.},
  year = {1998},
  editor = {A. D. Gordon and A. M. Pitts and C. L. Talcott},
  series = {Electronic Notes in Theoretical Computer Science}}

@inproceedings{Sanen06a,
  author = {Sanen, Frans and Truyen, Eddy and Joosen, Wouter and Jackson, Andrew and Nedos, Andronikos and Clarke, Siobh\'{a}n and Loughran, Neil and Rashid, Awais},
  title = {Classifying And Documenting Aspect Interactions},
  booktitle = {Proceedings of the Fifth AOSD Workshop on Aspects, Components, and Patterns for Infrastructure Software},
  pages = {23--26},
  year = {2006},
  address = {Bonn, Germany}}

@inproceedings{Sanen08a,
  author = {Sanen, Frans and Mehner, Katharina and Chitchyan, Ruzanna and Bergmans, Lodewijk and Fabry, Johan and S{\"u}dholt, Mario},
  title = {Aspects, Dependencies and Interactions},
  booktitle = {ECOOP Workshops},
  volume = {5475},
  pages = {51-62},
  publisher = {Springer},
  year = {2008},
  editor = {Patrick Eugster},
  series = {LNCS}}

@inproceedings{Sang00b,
  author = {Sangiorgi, Davide},
  title = {Lazy functions and mobile processes},
  booktitle = {Proof, Language and Interaction: Essays in Honour of Robin Milner},
  publisher = {{MIT} {Press}},
  year = {2000},
  editor = {Plotkin, G. and Stirling, C. and Tofte, M.},
  month = may}

@article{Sang01a,
  author = {Davide Sangiorgi},
  title = {Asynchronous process calculi: the first-order and higher-order paradigms (Tutorial)},
  journal = {Theoretical Computer Science},
  volume = {253},
  year = {2001},
  url = {http://www-sop.inria.fr/meije/personnel/Davide.Sangiorgi/mypapers.html},
  comment = {Special issue dedicated to the {IC-EATCS} Annual {Advanced} {School} on {Models} and {Paradigms} for {Concurrency}, {Udine}, {Italy}, 1997.}}

@book{Sang01b,
  author = {Davide Sangiorgi and David Walker},
  title = {The Pi-Calculus --- A Theory of Mobile Processes},
  publisher = {Cambridge University Press},
  year = {2001}}

@inproceedings{Sang05a,
  author = {Neeraj Sangal and Ev Jordan and Vineet Sinha and Daniel Jackson},
  title = {Using Dependency Models to Manage Complex Software Architecture},
  booktitle = {Proceedings of OOPSLA'05},
  pages = {167--176},
  year = {2005}}

@techreport{Sang91a,
  author = {Davide Sangiorgi},
  title = {The Lazy Lambda calculus in a Concurrency Scenario},
  year = {1991},
  institution = {Computer Science Dept., University of Edinburgh},
  month = nov,
  type = {ECS-LFCS-91-189}}

@inproceedings{Sang92a,
  author = {Davide Sangiorgi and Robin Milner},
  title = {The Problem of "Weak Bisimulation Up To"},
  booktitle = {Proceedings of CONCUR '92},
  volume = 630,
  pages = {32--46},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {W.R. Cleaveland},
  series = {LNCS}}

@unpublished{Sang92b,
  author = {Davide Sangiorgi},
  title = {An Investigation into Functions as Processes},
  year = {1992},
  note = {submitted for publicationComputer Science Dept., University of Edinburgh},
  type = {draft manuscript}}

@unpublished{Sang92c,
  author = {Davide Sangiorgi},
  title = {From $pi$-calculus to Higher-Order $\pi$-calculus --- and back},
  year = {1992},
  note = {Computer Science Dept., University of Edinburgh},
  type = {draft manuscript}}

@phdthesis{Sang93a,
  author = {Davide Sangiorgi},
  title = {Expressing Mobility in Process Algebras: First-Order and Higher-Order Paradigms},
  year = {1993},
  school = {Computer Science Dept., University of Edinburgh},
  month = may,
  number = {CST-99-93 (also: ECS-LFCS-93-266)},
  type = {{Ph.D}. Thesis}}

@unpublished{Sang93b,
  author = {Davide Sangiorgi},
  title = {Locality and True-Concurrency in Calculi for Mobile Processes},
  year = {1993},
  month = aug,
  note = {Computer Science Dept., University of Edinburgh},
  type = {draft manuscript}}

@inproceedings{Sang93c,
  author = {D. Sangiorgi},
  title = {From pi-calculus to Higher-Order pi-calculus-and back},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {151--166},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@article{Sang93d,
  author = {Sangiorgi, Davide},
  title = {Locality and Non-interleaving Semantics in Calculi for Mobile Processes},
  journal = {Theoretical Computer Science},
  volume = {155},
  pages = {39--83},
  year = {1996},
  note = {An extract appeared in {\em {Proc}. {TACS} '94}}}

@techreport{Sang96a,
  author = {Davide Sangiorgi},
  title = {An interpretation of Typed Objects into Typed Pi-calculus},
  year = {1996},
  url = {ftp://zenon.inria.fr/meije/theorie-par/davides/piOCtyped.ps.gz},
  institution = {INRIA Sophia-Antipolis},
  month = sep,
  number = {3000},
  type = {RR}}

@proceedings{Sang98a,
  title = {Concurrency Theory},
  booktitle = {Proceedings of the 9th International, CONCUR '98},
  volume = {1466},
  publisher = {Springer-Verlag},
  year = {1998},
  address = {Nice, France},
  editor = {Davide Sangiorgi},
  isbn = {3-540-64896-0},
  month = sep,
  series = {LNCS}}

@techreport{Sang99a,
  author = {Davide Sangiorgi},
  title = {Interpreting functions as pi-calculus processes: a tutorial},
  year = {1999},
  institution = {INRIA Sophia-Antipolis, France},
  month = feb,
  number = {3470},
  type = {RR}}

@manual{Sann83a,
  author = {M. Sannella},
  title = {The Interlisp-D Reference Manual},
  year = {1983},
  address = {Palo Alto},
  organization = {Xerox Parc}}

@techreport{Sann93a,
  author = {M. Sannella},
  title = {The skyblue constraint solver},
  year = {1993},
  institution = {Department of Computer Science and Engineering, University of Washington},
  month = feb,
  number = {92-07-01}}

@article{Sann93b,
  author = {Sannella, Michael and Maloney, John and Freeman-Benson, Bjorn and Borning, Alan},
  title = {Multi-way {V}ersus {O}ne-way {C}onstraints in {U}ser {I}nterfaces: {E}xperience with the {D}elta{B}lue {A}lgorithm},
  journal = {Software Practice Experiments},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1993},
  address = {New York, NY, USA},
  keywords = {DeltaBlue, constraint satisfaction, constraints, local propagation, user interface implementation techniques}}

@book{Sann94a,
  title = {Proceedings of {ESOP} '94 5th European Conference on Programming Languages and Systems},
  volume = {788},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {Donald Sannella},
  isbn = {3-540-57880-3},
  series = {LNCS}}

@inproceedings{Sano17a,
  author = {Sanoja, Andr{\'e}s and Gan{\c{c}}arski, St{\'e}phane},
  title = {Migrating Web Archives from HTML4 to HTML5: A Block-Based Approach and Its Evaluation},
  booktitle = {Advances in Databases and Information Systems},
  pages = {375--393},
  publisher = {Springer International Publishing},
  year = {2017},
  abstract = {Web archives (and the Web itself) are likely to suffer from format obsolescence. In a few years or decades, future Web browsers will no more be able to properly render Web pages written in HTML4 format. Thus we propose a migration tool from HTML4 to HTML5. This is challenging, because it requires to generate HTML5 semantic elements that do not exist in HTML4 pages. To solve this issue, we propose to use a Web page segmenter. Indeed, blocks generated by a segmenter are good candidates for being semantic elements as both reflect the content structure of the page. We use an evaluation framework for Web page segmentation, that helps defining and computing relevant metrics to measure the quality of the migration process. We ran experiments on a sample of 40 pages. The migrated pages we produce are compared to a ground truth. The automatic labeling of blocks is quite similar to the ground truth, though its quality depends on the type of page we migrate. When comparing the rendering of the original page and the rendering of its migrated version, we note some differences, mainly due to the fact that rendering engines do not (yet) properly render the content of semantic elements.},
  address = {Cham},
  editor = {Kirikova, M{\={a}}r{\={\i}}te and N{\o}rv{\aa}g, Kjetil and Papadopoulos, George A.},
  isbn = {978-3-319-66917-5}}

@article{Sant14b,
  author = {M Santos, Jos{\'e} Amancio and de Mendon{\c c}a, Manoel Gomes and dos Santos, Cleber Pereira and Novais, Renato Lima},
  title = {The problem of conceptualization in god class detection: agreement, strategies and decision drivers},
  journal = {Journal of Software Engineering Research and Development},
  volume = {2},
  pages = {11},
  year = {2014},
  url = {https://doi.org/10.1186/s40411-014-0011-9},
  doi = {10.1186/s40411-014-0011-9},
  abstract = {Background The concept of code smells is widespread in Software Engineering. Despite the empirical studies addressing the topic, the set of context-dependent issues that impacts the human perception of what is a code smell has not been studied in depth. We call this the code smell conceptualization problem. To discuss the problem, empirical studies are necessary. In this work, we focused on conceptualization of god class. God class is a code smell characterized by classes that tend to centralize the intelligence of the system. It is one of the most studied smells in software engineering literature. Method A controlled experiment that extends and builds upon a previous empirical study about how humans detect god classes, their decision drivers, and agreement rate. Our study delves into research questions of the previous study, adding visualization to the smell detection process, and analyzing strategies of detection. Result Our findings show that agreement among participants is low, which corroborates previous studies. We show that this is mainly related to agreeing on what a god class is and which thresholds should be adopted, and not related to comprehension of the programs. The use of visualization did not improve the agreement among the participants. However, it did affect the choice of detection drivers. ConclusionThis study contributes to expand empirical evidences on the impact of human perception on detecting code smells. It shows that studies about the human role in smell detection are relevant and they should consider the conceptualization problem of code smells.},
  issn = {2195-1721},
  keywords = {Code smell, Code visualization, Controlled experiment, God class},
  language = {en},
  month = sep,
  number = {1},
  shorttitle = {The problem of conceptualization in god class detection},
  urldate = {2019-03-22}}

@inproceedings{Sarg93a,
  author = {John Sargeant},
  title = {Uniting Functional and Object-Oriented Programming},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {1--26},
  year = {1993},
  abstract = {United Functions and Objects (UFO) is a
general-purpose, implicitly parallel language
designed to allow a wide range of applications to be
efficiently implemented on a wide range of parallel
machines while minimizing the conceptual
difficulties for the programmer. To achieve this, it
draws on the experience gained in the functional and
object-oriented ``worlds'' and attempts to bring
these worlds together in a harmonious fashion. Most
of this paper concentrates on examples which
illustrate how functions and objects can indeed work
together effectively. At the end, a number of issues
raised by early experience with the language are
discussed.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@techreport{Sarg93b,
  author = {John Sargeant},
  title = {United Functions and Objects: an Overview},
  year = {1993},
  url = {ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-93-1-4.ps.Z},
  abstract = {United Functions and Objects (UFO) is a
general-purpose, implicitly parallel language
designed to allow a wide range of appolications to
be efficiently implemented on a wide range of
parallel machines while minimising the conceptual
difficulties for the programmer. To achieve this, it
draws on the experience gained in the functional and
object-oriented ``worlds'' and attempts to bring
these worlds together in a harmonious fashion. This
report concentrates on examples which illustrate
various aspects of UFO, including the various
encapsulation and abstraction mechanisms it
provides, and the various forms of parallelism which
can be exploited.},
  institution = {University of Manchester},
  type = {UMCS-93-1-4}}

@techreport{Sarg94a,
  author = {John Sargeant and Chris Kirkham and Steve Anderson},
  title = {The Uflow Computational Model and Intermediate Format},
  year = {1994},
  url = {ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-94-5-1.ps.Z},
  abstract = {This report motivates and defines a general-purpose,
architecture independent, parallel computational
model, which captures the intuitions which underlie
the design of the United Functions and Objects
programming language. The model has two aspects,
which turn out to be a traditional dataflow model
and an actor-like model, with a very simple
interface between the two. Certain aspects of the
model, particularly strictness, maximum parallelism,
lack of suspension, and the implications of
introducing stateful objects, are stressed. The
model is embodied in a textual intermediate format,
and in a set of UFO data structures. This report
also serves as a definition of the intermediate
format, and gives a brief overview of the data
structures.},
  institution = {University of Manchester},
  type = {UMCS-94-5-1}}

@inproceedings{Sarg95a,
  author = {John Sargeant and Steve Hooton and Chris Kirkham},
  title = {{UFO}: Language Evolution and Consequences of State},
  booktitle = {High Performance Functional Computing Proceedings},
  pages = {48--62},
  year = {1995},
  url = {ftp://sisal.llnl.gov/pub/hpfc/papers95.html},
  abstract = {The role of explicit state in parallel programming
is a problematic one, especially from the functional
programming perspective. In this paper we discuss
why we believe explicit state is necessary for
general-purpose parallel programming, what features
we have adopted to support it, and (tentatively)
when it is appropriate to use stateful objects
rather than a purely functional representation. To
provide some context for the when discussion, we
also review some of the pure functional features of
UFO, concentrating on those aspects of the language
which have evolved since the original version.
Finally, we look at how stateful objects can be
implemented efficiently. This has many aspects; we
focus on one, namely analysis to control thread
sizes, and present some preliminary results in this
area.},
  editor = {A. P. Wim Bohm and John T. Feo},
  month = apr}

@inproceedings{Sari04a,
  author = {Titos Saridakis},
  title = {Managing Unsolicited Events in Component-Based Software},
  booktitle = {Workshop on Component Models for Dependable Systems},
  year = {2004},
  month = aug,
  note = {To appear}}

@article{Sari16a,
  author = {Sarimbekov, Aibek and Stadler, Lukas and Bulej, Lubom\'{i}r and Sewe, Andreas and Podzimek, Andrej and Zheng, Yudi and Binder, Walter},
  title = {Workload characterization of JVM languages},
  journal = {Software: Practice and Experience},
  volume = {46},
  pages = {1053-1089},
  year = {2016},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2337},
  doi = {https://doi.org/10.1002/spe.2337},
  abstract = {Summary Originally developed with a single language in mind, the JVM is now targeted by numerous programming languages-its automatic memory management, just-in-time compilation, and adaptive optimizations-making it an attractive execution platform. However, the garbage collector, the just-in-time compiler, and other optimizations and heuristics were designed primarily with the performance of Java programs in mind. Consequently, many of the languages targeting the JVM, and especially the dynamically typed languages, are suffering from performance problems that cannot be simply solved at the JVM side. In this article, we aim to contribute to the understanding of the character of the workloads imposed on the JVM by both dynamically typed and statically typed JVM languages. To this end, we introduce a new set of dynamic metrics for workload characterization, along with an easy-to-use toolchain to collect the metrics. We apply the toolchain to applications written in six JVM languages (Java, Scala, Clojure, Jython, JRuby, and JavaScript) and discuss the findings. Given the recently identified importance of inlining for the performance of Scala programs, we also analyze the inlining behavior of the HotSpot JVM when executing bytecode originating from different JVM languages. As a result, we identify several traits in the non-Java workloads that represent potential opportunities for optimization.},
  eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2337},
  keywords = {workload characterization, dynamic metrics, JVM languages, dynamic program analysis},
  number = {8}}

@article{Sark07a,
  author = {Sarkar, Santonu and Rama, Girish Maskeri and Kak, Avinash C.},
  title = {{API}-Based and Information-Theoretic Metrics for Measuring the Quality of Software Modularization},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {33},
  pages = {14--32},
  publisher = {IEEE Press},
  year = {2007},
  doi = {10.1109/TSE.2007.4},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {1}}

@inproceedings{Sark92a,
  author = {Manojit Sarkar and Marc H. Brown},
  title = {Graphical Fisheye Views of Graphs: Visualizing Objects, Graphs, and Video},
  booktitle = {Proceedings of ACM CHI'92 Conference on Human Factors in Computing Systems},
  pages = {83--91},
  year = {1992}}

@inproceedings{Sarm03a,
  author = {Anita Sarma and Zahra Noroozi and Andr{\'{e}} van der Hoek},
  title = {Palant{\'{\i}}r: Raising Awareness among Configuration Management Workspaces},
  booktitle = {Proceedings of the 25th International Conference on Software Engineering, May 3-10, 2003, Portland, Oregon, {USA}},
  pages = {444--454},
  year = {2003}}

@inproceedings{Sarm07a,
  author = {Anita Sarma and Gerald Bortis and Andr{\'{e}} Van Der Hoek},
  title = {Towards Supporting Awareness of Indirect Conflicts across Software Configuration Management Workspaces},
  booktitle = {In Proc. Conference on Automated Software Engineering},
  year = {2007}}

@article{Sarm12a,
  author = {Anita Sarma and David F. Redmiles and Andr{\'{e}} van der Hoek},
  title = {Palant{\'{\i}}r: Early Detection of Development Conflicts Arising from Parallel Code Changes},
  journal = {{IEEE} Trans. Software Eng.},
  volume = {38},
  pages = {889--908},
  year = {2012},
  url = {http://doi.ieeecomputersociety.org/10.1109/TSE.2011.64},
  doi = {10.1109/TSE.2011.64},
  number = {4}}

@inproceedings{Sarm14a,
  author = {Sarma, Anita and Branchaud, Josh and Dwyer, Matthew B. and Person, Suzette and Rungta, Neha},
  title = {Development Context Driven Change Awareness and Analysis Framework},
  booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering},
  pages = {404--407},
  publisher = {ACM},
  year = {2014},
  url = {http://doi.acm.org/10.1145/2591062.2591100},
  doi = {10.1145/2591062.2591100},
  acmid = {2591100},
  address = {New York, NY, USA},
  isbn = {978-1-4503-2768-8},
  keywords = {Change impact analysis, change awareness, conflict prediction, distributed software development},
  location = {Hyderabad, India},
  numpages = {4},
  series = {ICSE Companion 2014}}

@phdthesis{Sarn86a,
  author = {Sarnak, Neil Ivor},
  title = {Persistent Data Structures},
  publisher = {New York University},
  year = {1986},
  school = {New York University},
  abstract = {This dissertation introduces the concept of persistence in data structures. Classical algorithms operate on data structures is such a manner that modifications to the structure do not preserve its state as it appeared before the modification. A persistent data structure is one in which multiple versions of the structure as it varies through time are maintained. Data structures that do not maintain the history of states of the structure are called ephemeral. A differentiation between two types of persistence, partial persistence and full persistence, is made. A partially persistent data structure allows the modification only of the most recent version of the structure. This makes partial persistence useful in cases where the history of update operations is required for query purposes but no changes of prior versions are desired. Under certain constraints, any ephemeral data structure may be made persistent without a major blow-up of the space and time complexity measures. Full persistence allows modification of any version of the data structure.This dissertation presents algorithms that support persistent search trees, with applications in computational geometry. In particular, the planar point location problem will be solved using persistent binary search trees with an O(log n) query time and O(n) space. Persistent lists are described, with applications in applicative programming languages. In particular, persistent deques are presented that have constant space overhead per deque operation, while still maintaining O(1) update times.Persistent finger search trees are also presented, with applications in text editing. Persistent finger search trees are implemented with an O(log d) space overhead per update, and an O(log d) time bound, where d is the distance between the finger and the affected position.A general result is shown that allows making arbitrary ephemeral data structures partially persistent with an O(1) space overhead per update operation.},
  address = {USA},
  note = {AAI8706779}}

@phdthesis{Sart03a,
  author = {Kamran Sartipi},
  title = {Software Architecture Recovery based on Pattern Matching},
  year = {2003},
  school = {School of Computer Science, University of Waterloo, Waterloo, ON, Canada}}

@inproceedings{Sart06a,
  author = {Kamran Sartipi and Lingdong Ye and Hossein Safyallah},
  title = {Alborz: An Interactive Toolkit to Extract Static and Dynamic Views of a Software System},
  booktitle = {Proceedings of the 14th IEEE International Conference on Program Comprehension ({ICPC}'06)},
  year = {2006}}

@inproceedings{Sart15a,
  author = {A. L. {Sartor} and A. F. {Lorenzon} and A. C. S. {Beck}},
  title = {The Impact of Virtual Machines on Embedded Systems},
  booktitle = {2015 IEEE 39th Annual Computer Software and Applications Conference},
  volume = {2},
  pages = {626-631},
  year = {2015},
  doi = {10.1109/COMPSAC.2015.90}}

@article{Sasa07a,
  author = {Sasaki, Yutaka and others},
  title = {The truth of the F-measure},
  journal = {Teach Tutor mater},
  volume = {1},
  pages = {1--5},
  year = {2007},
  number = {5}}

@inproceedings{Sast01,
  author = {Sastry, S. Subramanya and Bod\'{\i}k, Rastislav and Smith, James E.},
  title = {R{API}d Profiling via Stratified Sampling},
  booktitle = {Proceedings of the 28th Annual International Symposium on Computer Architecture},
  pages = {278--289},
  publisher = {Association for Computing Machinery},
  year = {2001},
  url = {https://doi.org/10.1145/379240.379273},
  doi = {10.1145/379240.379273},
  abstract = {Sophisticated binary translators and dynamic optimizers demand a program profiler with low overhead, high accuracy, and the ability to collect a variety of profile types. A profiling scheme that achieves these goals is proposed. Conceptually, the hardware compresses a stream of profile data by counting identical events; the compressed profile dam is passed to software for analysis. Compressing the high-bandwidth event stream greatly reduces software overhead. Because optimizations can tolerate some profiling errors, we allow the stream compressor to be lossy, thereby enabling a low-cost sampling-based hardware design. Because the hardware compressor is insensitive to the event content, it supports various profile types and can process multiple types simultaneously.Basic components of our framework are periodic and random samplers, counters, and hash functions. These components are composed to form a variety of stream compressors. One design is both simple and very effective: the input stream is hash-split into multiple substreams, each of which is fed into a simple periodic sampler that selects every kth event. This stratified periodic sampler performs better than conventional random sampling because it biases each substream towards a small number of unique events, thereby reducing sampling error, and allowing faster convergence to an accurate profile. For example, convergence to a given level of accuracy is about twice as fast for gcc. When sampling overhead is considered, the stratified periodic profiler achieves less than 3% error while incurring an overhead of only 3.5% for gcc.},
  address = {New York, NY, USA},
  isbn = {0769511627},
  location = {G\"{o}teborg, Sweden},
  numpages = {12},
  series = {ISCA '01}}

@article{Sato01a,
  author = {Masahiko Sato and Takafumi Sakurai and Rod M. Burstall},
  title = {Explicit Environments},
  journal = {Fundamenta Informaticae},
  volume = {45},
  pages = {79--115},
  year = {2001},
  url = {http://www.math.s.-u.ac.jp/~sakurai/papers/expenv.dvi.gz},
  number = {1-2}}

@article{Sato02a,
  author = {Masahiko Sato and Takafumi Sakurai and Yukiyoshi Kameyama},
  title = {A Simply Typed Context Calculus with First-class Environments},
  journal = {Journal of Functional and Logic Programming},
  volume = {2002},
  publisher = {EAPLS},
  year = {2002},
  url = {http://danae.uni-muenster.de/lehre/kuchen/JFLP/articles/2002/S02-01/JFLP-A02-04.pdf http://www.math.s.chiba-u.ac.jp/~sakurai/papers/context-jflp.dvi.gz},
  month = mar,
  number = {4}}

@inproceedings{Sato03a,
  author = {Masahiko Sato and Takafumi Sakurai and Yukiyoshi Kameyama and Atsushi Igarashi},
  title = {Calculi of Meta-variables},
  booktitle = {Proceedings of 17th International Workshop Computer Science Logic},
  volume = {2803},
  pages = {509--524},
  publisher = {Springer-Verlag},
  year = {2003},
  url = {http://www.math.s.chiba-u.ac.jp/~sakurai/papers/metavar-rev.dvi.gz},
  editor = {M. Baaz and J. A. Makowsky},
  series = {LNCS}}

@inproceedings{Sato03b,
  author = {Y. Sato and S. Chiba and M. Tatsubori},
  title = {A Selective, Just-in-Time Aspect Weaver},
  booktitle = {GPCE'03},
  year = {2003}}

@inproceedings{Sato05a,
  author = {Yoshiki Sato and Shigeru Chiba},
  title = {Loosely-separated ``Sister'' Namespaces in Java},
  booktitle = {Proceedings ECOOP 2005},
  publisher = {Springer-Verlog},
  year = {2005}}

@inproceedings{Sato07a,
  author = {Sato, N. and Trivedi, K. S.},
  title = {Stochastic modeling of composite web services for closed form analysis of their performance and reliability bottlenecks},
  booktitle = {Proceedings of international conference on Service-Oriented Computing (ICSOC)},
  pages = {107--118},
  publisher = {Springer-Verlag},
  year = {2007}}

@inproceedings{Sato92a,
  author = {Ichiro Satoh and Mario Tokoro},
  title = {A Formalism for Real-Time Concurrent Object-Oriented Computing},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {315--326},
  year = {1992},
  month = oct}

@inproceedings{Sato93a,
  author = {Ichiro Satoh and Mario Tokoro},
  title = {A Timed Calculus for Distributed Objects with Clocks},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {326--345},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {This paper proposes a formalism for reasoning about
distributed object-oriented computations. The
formalism is an extension of Milner's CCS with the
notion of local time. It allows to describe and
analyze both locally temporal and behavioral
properties of distributed objects and interactions
among them. We introduce timed bisimulations with
respect to local time. These bisimulations equate
distributed objects if and only if their behaviors
are completely matched and their timings are within
a given bound. The bisimulations provide a method to
verify distributed objects with temporal
uncertainties and real-time objects with non-strict
time constraints.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@techreport{Sato93b,
  author = {Ichiro Satoh and Mario Tokoro},
  title = {A Timed Bisimulation for Distributed Processes},
  year = {1993},
  institution = {Keio University},
  number = {1993},
  type = {Report}}

@inproceedings{Sato94a,
  author = {Ichiro Satoh and Mario Tokoro},
  title = {Semantics for Real-Time Object-Oriented Programming Language},
  booktitle = {Proceedings of IEEE Conference on Computer Languages},
  publisher = {IEEE Computer Society},
  year = {1994}}

@inproceedings{Sato95a,
  author = {Ichiro Satoh and Mario Tokoro},
  title = {Time and Asynchrony in Interactions among Distributed Real-Time Objects},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {331--350},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@inproceedings{Sato99a,
  author = {Masahiko Sato and Takafumi Sakurai and Rod M. Burstall},
  title = {Explicit Environments},
  booktitle = {Typed Lambda Calculi and Applications},
  volume = 1581,
  pages = {340--354},
  publisher = {Springer-Verlag},
  year = {1999},
  url = {http://www.sato.kuis.kyoto-u.ac.jp/~masahiko/index-e.html http://www.dcs.ed.ac.uk/home/rb/index.html},
  address = {L'Aquila, Italy},
  editor = {Jean-Yves Girard},
  month = apr,
  series = {LNCS}}

@article{Savi21a,
  author = {Savidis, Anthony and Tsiatsianas, Vangelis},
  title = {Implementation of Live Reverse Debugging in LLDB},
  journal = {arXiv preprint arXiv:2105.12819},
  year = {2021}}

@inproceedings{Savr15a,
  author = {Savrun-Yeni\c{c}eri, G\"{u}lfem and Van de Vanter, Michael L. and Larsen, Per and Brunthaler, Stefan and Franz, Michael},
  title = {An Efficient and Generic Event-Based Profiler Framework for Dynamic Languages},
  booktitle = {Proceedings of the Principles and Practices of Programming on The Java Platform},
  pages = {102-112},
  publisher = {Association for Computing Machinery},
  year = {2015},
  url = {https://doi.org/10.1145/2807426.2807435},
  doi = {10.1145/2807426.2807435},
  abstract = {Profilers help programmers analyze their programs and identify performance bottlenecks. We implement a profiler framework that helps to compare and analyze programs implementing the same algorithms written in different languages. Profiler implementers replicate common functionalities in their language profilers. We focus on building a generic profiler framework for dynamic languages to minimize the recurring implementation effort. We implement our profiler in a framework that optimizes abstract syntax tree (AST) interpreters using a just-in-time (JIT) compiler. We evaluate it on ZipPy and JRuby+Truffle, Python and Ruby implementations in this framework, respectively. We show that our profiler runs faster than the existing profilers in these languages and requires modest implementation effort. Our profiler serves three purposes: 1) helps users to find the bottlenecks in their programs, 2) helps language implementers to improve the performance of their language implementation, 3) helps to compare and evaluate different languages on cross-language benchmarks.},
  address = {New York, NY, USA},
  isbn = {9781450337120},
  keywords = {abstract syntax tree interpreters, Python, Ruby, PyPy, dynamic languages, JRuby, Profiling, Java virtual machine},
  location = {Melbourne, FL, USA},
  numpages = {11},
  series = {PPPJ '15}}

@article{Sawa07a,
  author = {Amit P. Sawant and Naveen Bali},
  title = {{DiffArchViz}: A Tool to Visualize Correspondence Between Multiple Representations of a Software Architecture},
  journal = {vissoft},
  volume = {0},
  pages = {121--128},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/VISSOF.2007.4290710},
  address = {Los Alamitos, CA, USA},
  isbn = {1-4244-0599-8}}

@inproceedings{Sawa16a,
  author = {Sawant, Anand Ashok and Robbes, Romain and Bacchelli, Alberto},
  title = {On the reaction to deprecation of 25,357 clients of 4+1 popular Java {API}s},
  booktitle = {International {C}onference on {S}oftware {M}aintenance and {E}volution ({ICSME})},
  pages = {400--410},
  year = {2016},
  organization = {IEEE}}

@inproceedings{Sayy03a,
  author = {Jelber Sayyad Shirabad and Timothy C. Lethbridge and Stan Matwin},
  title = {Mining the Maintenance History of a Legacy Software System},
  booktitle = {International Conference on Software Maintenance ({ICSM} 2003)},
  pages = {95--104},
  year = {2003}}

@inproceedings{Scal88a,
  author = {C.A. Scaletti and Ralph E. Johnson},
  title = {An Interactive Environment for Object-Oriented Music Composition and Sound Synthesis},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {222--233},
  year = {1988},
  month = nov}

@techreport{Scal98a,
  author = {Daniel J. Scales},
  title = {Efficient Dynamic Procedure Placement},
  year = {1998},
  institution = {-}}

@misc{Scala,
  title = {The Scala Programming Language},
  url = {http://lamp.epfl.ch/scala/},
  key = {scala},
  note = {http://lamp.epfl.ch/scala/}}

@article{Sced90a,
  author = {A. Scedrov},
  title = {A Brief Guide to Linear Logic},
  journal = {Bulletin of the EATCS},
  volume = {41},
  pages = {154--165},
  year = {1990},
  month = jun}

@mastersthesis{Scha01a,
  author = {Nathanael Sch{\"a}rli},
  title = {Supporting Pure Composition by Inter-language Bridging on the Meta-level},
  year = {2001},
  school = {University of Bern},
  misc = {schaerli},
  url = {http://scg.unibe.ch/archive/masters/Scha01a.pdf},
  abstract = {Inter-language bridging is an important issue of
scripting language design and implementation. Most
of the popular languages such as Python, Perl, Tcl,
and Ruby use a bridging approach based on wrappers
that are written in the external language (usually
C/C++) and serve as a glue layer between the
languages. This allows a wide flexibility in
defining the glue abstractions, but it requires the
user to specify them on the level of the
implementation language, and it therefore impairs
the higher-level scripting process. In contrast, the
first implementations of JPiccola, a scripting and
composition language implemented in {Java}, use a
generic bridging strategy based on information
provided by {Java}'s runtime introspection
facilities. This strategy makes accessing of
external objects more lightweight, but it does not
provide the necessary means of abstraction and leads
to a very tight coupling between the two language
levels. In this thesis, we present a new bridging
strategy for Piccola that combines the advantages of
the two approaches. We minimize the bridging
functionality that is hardcoded in the virtual
machine by making it a meta-aspect of the language
Piccola. This allows the programmer to use the
unrestricted expressive power of the scripting
language to specify the glue abstractions at a
higher level and adapt them dynamically. As a second
contribution, we present a lazy evaluation technique
that significantly reduces the performance overhead
introduced by the meta-level bridging layer. In
order to apply this lazy evaluation technique to
Piccola services in general, we develop a partial
evaluation algorithm that separates the side effects
of a service and turns the individual expressions
into closures. Finally, we give an overview of
SPiccola, a Squeak-based Piccola implementation with
thread-aware debugging tools.},
  month = sep,
  type = {Diploma thesis}}

@inproceedings{Scha01b,
  author = {Nathanael Sch{\"a}rli and Franz Achermann},
  title = {Partial evaluation of inter-language wrappers},
  booktitle = {Workshop on Composition Languages, WCL '01},
  year = {2001},
  misc = {schaerli},
  url = {http://scg.unibe.ch/archive/papers/Scha01bLanguageWrappers.pdf},
  abstract = {Wrapping external components by scripts can be a
performance bottleneck if inter-language bridging is
frequent. Piccola is a pure composition language
that wraps components according to a specific
composition style. This wrapping must be efficient,
since even arithmetic operations are done by
external components. In this paper we present how to
use partial evaluation to overcome much of the
overhead associated with the wrapping. It turns out
that Piccola scripts can be highly optimized since
form expression exhibit the right kind of
information to separate side effects from services
and resolve internal dependencies.},
  month = sep}

@unpublished{Scha02d,
  author = {Nathanael Sch{\"a}rli and Franz Achermann and Oscar Nierstrasz},
  title = {Meta-level Language Bridging},
  year = {2002},
  misc = {schaerli},
  url = {http://scg.unibe.ch/archive/drafts/bridging.pdf},
  abstract = {Scripting and composition languages offer high-level
mechanisms to combine and compose services provided
by a lower-level host programming language.
Inter-language bridging mechanisms are therefore
needed to map host language entities and services to
abstractions of the scripting language, and vice
versa. Many popular languages such as Python, Perl,
and Ruby use a bridging approach based on wrappers
that must be written or generated in the host
language. Other languages like Jython and Kawa adopt
a fixed bridging strategy that exploits reflective
features provided by the host language. Although
both of these approaches are usable, they are
cumbersome and low-level. In particular, it can be
very difficult to adapt host language services to
cooperate seamlessly with abstractions of the
scripting language. In this paper we present a
lightweight bridging strategy for scripting and
composition languages that simplifies the task of
adapting host language services to the abstraction
level of the scripting language. This strategy uses
introspection facilities of the host language to
automate the wrapping process, while providing a
hook for programmer-defined adaptation of the
generated interface. A meta-level bridging layer is
responsible for wrapping and unwrapping both host
and scripting language entities so they can
seamlessly cooperate. The bridging strategy employs
partial evaluation of wrapping and unwrapping
operations to achieve acceptable performance.},
  cvs = {PiccolaBridge},
  note = {Software Composition Group, University of Bern},
  type = {draft}}

@techreport{Scha02e,
  author = {Roland Sch\"afer},
  title = {CASYMIR Informatikprojekt},
  year = {2002},
  url = {http://scg.unibe.ch/archive/projects/Scha02e.pdf},
  institution = {University of Bern},
  month = oct,
  type = {Informatikprojekt}}

@inproceedings{Scha02f,
  author = {Schattkowsky, T. and Lohmann, M.},
  title = {R{API}d development of modular dynamic Web sites using UML},
  booktitle = {UML 2002 Conference},
  pages = {336--350},
  year = {2002},
  number = {2460},
  series = {LNCS}}

@techreport{Scha03b,
  author = {Nathanael Sch\"arli and Andrew P. Black},
  title = {A Browser for Incremental Programming},
  year = {2003},
  misc = {schaerli},
  url = {http://scg.unibe.ch/archive/papers/Scha03bTraitsBrowser.pdf},
  abstract = {Much of the elegance and power of Smalltalk comes
from its programming environment and tools. First
introduced more than 20 years ago, the Smalltalk
browser enables programmers to ``home in'' on
particular methods using a hierarchy of
manually-defined classifications. By its nature,
this classification scheme says a lot about the
desired state of the code, but little about the
actual state of the code as it is being developed.
We have extended the Smalltalk browser with
dynamically computed virtual categories that
dramatically improve the browser's support for
incremental programming. We illustrate these
improvements by example, and describe the algorithms
used to compute the virtual categories efficiently.},
  address = {Beaverton, Oregon, USA},
  cvs = {TraitsBrowserESUG2003},
  institution = {OGI School of Science \& Engineering},
  month = apr,
  number = {CSE-03-008},
  type = {Technical Report}}

@article{Scha04c,
  author = {Nathanael Sch\"arli and Andrew P. Black},
  title = {A Browser for Incremental Programming},
  journal = {Journal of Computer Languages, Systems and Structures},
  volume = {30},
  pages = {79--95},
  publisher = {Elsevier},
  year = {2004},
  misc = {schaerli},
  url = {http://scg.unibe.ch/archive/papers/Scha04cBrowser.pdf},
  doi = {10.1016/j.cl.2003.09.004},
  abstract = {Much of the elegance and power of Smalltalk comes
from its programming environment and tools. First
introduced more than 20 years ago, the Smalltalk
browser enables programmers to ``home in'' on
particular methods using a hierarchy of
manually-defined classifications. By its nature,
this classification scheme says a lot about the
desired state of the code, but little about the
actual state of the code as it is being developed.
We have extended the Smalltalk browser with
dynamically computed virtual categories that
dramatically improve the browser's support for
incremental programming. We illustrate these
improvements by example, and describe the algorithms
used to compute the virtual categories efficiently.},
  cvs = {TraitsBrowserESUG2003},
  number = {1-2}}

@phdthesis{Scha05a,
  author = {Nathanael Sch{\"a}rli},
  title = {Traits --- Composing Classes from Behavioral Building Blocks},
  year = {2005},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/schaerli-phd.pdf},
  abstract = {Inheritance is well-known and accepted as a
fundamental mechanism for reuse in object-oriented
languages. Unfortunately, the main variants ---
single inheritance, multiple inheritance, and mixin
inheritance --- all suffer from conceptual and
practical problems related to software reuse and
robustness with respect to changes. In a rst part of
this thesis, we identify and illustrate these
problems. To overcome these problems, we then
present traits, a simple compositional model that
extends single inheritance. A trait is essentially a
(parameterized) set of methods; it serves as a
behavioral building block for classes and is the
primitive unit of code reuse. We develop a formal
model of traits that establishes how traits can be
composed to form other traits or classes, and we
describe how we implemented traits in Squeak
Smalltalk by bootstrapping a new language kernel. We
present our experimental validation in which we
apply traits to refactor parts of the Smalltalk
kernel and library, and we develop a programming
methodology around the usage of traits and the trait
browser, the tool that we implemented to take full
advantage of the availability of traits in the
Squeak programming environment.},
  cvs = {NSchaerliPhD},
  month = feb}

@inproceedings{Scha08a,
  author = {Sch\"{a}fer, Thorsten and Jonas, Jan and Mezini, Mira},
  title = {Mining framework usage changes from instantiation code},
  booktitle = {International {C}onference on {S}oftware {E}ngineering ({ICSE})},
  pages = {471--480},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1368088.1368153},
  abstract = {Framework evolution may break existing users, which need to be migrated to the new framework version. This is a tedious and error-prone process that benefits from automation. Existing approaches compare two versions of the framework code in order to find changes caused by refactorings. However, other kinds of changes exist, which are relevant for the migration. In this paper, we propose to mine framework usage change rules from already ported instantiations, the latter being applications build on top of the framework, or test cases maintained by the framework developers. Our evaluation shows that our approach finds usage changes not only caused by refactorings, but also by conceptual changes within the framework. Further, it copes well with some issues that plague tools focusing on finding refactorings such as deprecated program elements or multiple changes applied to a single program element},
  acmid = {1368153},
  address = {New York, NY, USA},
  annote = {internationalconference},
  isbn = {978-1-60558-079-1},
  keywords = {sde-ecosystems, evolution, framework comprehension, migration},
  location = {Leipzig, Germany},
  numpages = {10},
  peerreview = {yes}}

@inproceedings{Scha08b,
  title = {Sound and Extensible Renaming for Java},
  author = {Max Sch{\"a}fer and Torbj{\"o}rn Ekman and Oege de Moor},
  year = {2008},
  booktitle = {Object-Oriented Programming, Systems and Languages (OOPSLA)},
  editor = {Gregor Kiczales},
  pages = {227--294},
  publisher = {ACM Press}
}

@inproceedings{Scha09a,
  title = {Stepping Stones over the Refactoring Rubicon -- Lightweight Language Extensions to Easily Realise Refactorings},
  author = {Max Sch{\"a}fer and Mathieu Verbaere and Torbj{\"o}rn Ekman and Oege de Moor},
  year = {2009},
  booktitle = {European Conference on Object-Oriented Programming (ECOOP)},
  editor = {Sophia Drossopoulou},
  pages = {369--393},
  publisher = {Springer-Verlag}
}

@inproceedings{Scha10a,
  author = {Sch\"afer, Max and de Moor, Oege},
  title = {Specifying and Implementing Refactorings},
  booktitle = {Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA'10)},
  year = {2010}}

@inproceedings{Scha10b,
  title = {Correct Refactoring of Concurrent Java Code},
  author = {Max Sch{\"a}fer and Julian Dolby and Manu Sridharan and Frank Tip and Emina Torlak},
  year = {2010},
  booktitle = {European Conference on Object-Oriented Programming (ECOOP)},
  editor = {Theo D'Hondt},
  publisher = {Springer-Verlag}
}

@phdthesis{Scha10c,
  title = {Specification, Implementation and Verification of Refactorings},
  author = {Max Sch{\"a}fer},
  year = {2010},
  school = {Oxford University Computing Laboratory}
}

@inproceedings{Scha11a,
  title = {Refactoring Java Programs for Flexible Locking},
  author = {Max Sch{\"a}fer and Manu Sridharan and Julian Dolby and Frank Tip},
  year = {2011},
  booktitle = {International Conference on Software Engineering (ICSE)}
}

@inproceedings{Scha86a,
  author = {Craig Schaffert and Topher Cooper and Bruce Bullis and Mike Killian and Carrie Wilpolt},
  title = {{An} {Introduction} to {Trellis}/{Owl}},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {9--16},
  year = {1986},
  month = nov}

@inproceedings{Scha95a,
  author = {Albert Schappert and Peter Sommerlad and Wolfgang Pree},
  title = {Automated Support for Software Development with Frameworks},
  booktitle = {Proceedings SSR '95 ACM SIGSOFT Symposium on Software Reusability},
  year = {1995}}

@inproceedings{Scha98a,
  author = {R. Schauer and R. Keller},
  title = {Pattern Visualization for Software Comprehension},
  booktitle = {6th International Workshop on Program Comprehension (Ischia, Italy)},
  pages = {4--12},
  year = {1998}}

@inproceedings{Scha99a,
  author = {Reinhard Schauer and S\'ebastian Robitaille and Francois Martel and Rudolf Keller},
  title = {Hot-{Spot} {Recovery} in {Object}-{Oriented} {Software} with {Inheritance} and {Composition} {Template} {Methods}},
  booktitle = {Proceedings of {ICSM} '99 (International Conference on Software Maintenance)},
  publisher = {IEEE Computer Society Press},
  year = {1999}}

@techreport{Scha99b,
  author = {Nathanael Sch{\"a}rli},
  title = {Kurveninterpolation mit einem finanzmathematischen Modell},
  year = {1999},
  misc = {schaerli},
  url = {http://scg.unibe.ch/archive/projects/Scha99b.pdf},
  abstract = {Die Firma Sherpa'x AG (fr\"uher GfAI) erstellt seit
mehreren Jahren verschiedene Applikationen, die in
Grossbanken f\"ur den Wertschriftenhandel eingesetzt
werden. FORUMsystems ist eine dieser Applikationen
und dient als Handelsplattform f\"ur
B\"orsenh\"andler. Im Rahmen der Produktpalette von
FORUMsystems wurde eine finanzmathematische
Bibliothek in C++ geschaffen, welche die n\"otigen
Bewertungsfunktionen bereitstellt. In der
Finanzmathematik werden Kurven verwendet um die
aktuellen Marktverh\"altnisse zu modellieren. Sie
dienen als Input f\"ur theoretische Bewertungen und
nehmen daher eine zentrale Aufgabe in der
Entscheidungsunterst\"utzung im Handelsbereich einer
Bank ein. In der finanzmathematischen Bibliothek von
FORUMsystems stehen Kurven f\"ur die Bewertung zur
Verf\"ugung und werden auch f\"ur die Berechnung von
theoretischen Kursen verwendet. Die Bestimmung
(Interpolation) dieser Kurven erfolgt allerdings
ausserhalb dieser Bibliothek, da die entsprechenden
Algorithmen in Mathematica entwickelt wurden. Dazu
wird ein direkter Link zwischen den FORUM-Clients
und dem Mathematica-Kernel verwendet. Ziel dieses
Projektes ist nun die Bestimmung der Kurven
ebenfalls in die finanzmathematische C++-Bibliothek
zu integrieren. Damit w\"are der direkte Link von
den einzelnen Clients zum Mathematica-Kernel nicht
mehr n\"otig, und es kann mit einem deutlichen
Performancegewinn gerechnet werden.},
  institution = {University of Bern},
  type = {Informatikprojekt}}

@techreport{Sche09a,
  author = {Dennis Schenk and Peter Siska},
  title = {{Archie} --- A Statistics Framework For {Elexis}},
  year = {2009},
  url = {http://scg.unibe.ch/archive/projects/Sche09a.pdf},
  abstract = {Archie is a statistics framework for the electronic
medical records system Elexis. Archie empowers
Elexis to generically create anything from simple
overviews to complex statistical reports about any
data found within the Elexis system. Depending on
which plug-ins are installed, an Elexis installation
contains data about patient demographics and
history, consultations, drug administration,
practice management and inventory, finances and
accounting, laboratory, etc. Archie provides a
platform for Elexis and for all installed plug-ins
to easily and r{API}dly create statistical reports
without having to be concerned with recurring
aspects such as data input and output, form
validation, result presentation, or the user
interface in general. Data visualization is handled
entirely by Archie, it just requires the raw data to
adhere to a defined standard.},
  institution = {University of Bern},
  month = mar,
  type = {Informatikprojekt}}

@inproceedings{Sche20a,
  author = {Scheibel, Willy and Trapp, Matthias and Limberger, Daniel and D{\"o}llner, J{\"u}rgen},
  title = {A Taxonomy of Treemap Visualization Techniques.},
  booktitle = {VISIGRAPP (3: IVAPP)},
  pages = {273--280},
  year = {2020}}

@inproceedings{Sche84a,
  author = {Hans-J{\"o}rg Schek},
  title = {Nested Transactions in a Combined {IRS}-{DBMS} Architecture},
  booktitle = {Proceedings of the Third joint BCS and ACM Symposium on Research and Development in Information Retrieval},
  year = {1984},
  address = {Cambridge, England},
  month = jul}

@article{Sche86a,
  author = {R.W. Scheifler and J. Gettys},
  title = {The {X} Window System},
  journal = {ACM Transactions on Computer Graphics},
  volume = {5},
  pages = {79--109},
  year = {1986},
  month = apr,
  number = {2}}

@inproceedings{Sche88a,
  author = {Marcel Schelvis and Eddy Bledoeg},
  title = {The Implementation of a Distributed {Smalltalk}},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {212--232},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Sche89a,
  author = {Marcel Schelvis},
  title = {Incremental Distribution of Timestamp Packets: {A} New Approach to Distributed Garbage Collection},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {37--48},
  year = {1989},
  month = oct}

@techreport{Sche92a,
  author = {Stefan Scherrer},
  title = {The {KIDS} Data Model Specification Language},
  year = {1992},
  institution = {Universit{\"a}t Z{\"u}rich},
  month = dec,
  type = {preliminary report}}

@inproceedings{Schei20a,
  author = {Scheibel, Willy and Trapp, Matthias and Limberger, Daniel and D{\"o}llner, J{\"u}rgen},
  title = {A Taxonomy of Treemap Visualization Techniques.},
  booktitle = {VISIGRAPP (3: IVAPP)},
  pages = {273--280},
  year = {2020}}

@misc{Scheme,
  author = {Richard Kelsey and Jonathan Rees and Mike Sperber},
  title = {The Incomplete {Scheme} 48 Reference Manual for Release 1.8},
  year = {2008},
  url = {http://s48.org/},
  key = {scheme},
  month = feb}

@booklet{Schf99a,
  author = {Wilhelm Sch{\"a}fer and Albert Z{\"u}ndorf},
  title = {Round Trip Engineering with {Design} {Patterns}, {UML}, {Java} and {C}++},
  year = {1999},
  howpublished = {ESEC/FSE 99 Tutorial Notes},
  month = sep}

@inproceedings{Schi01,
  author = {Michel Schinz and Martin Odersky},
  title = {Tail call elimination on the Java Virtual Machine},
  booktitle = {In Proc. ACM SIGPLAN BABEL'01 Workshop on Multi-Language Infrastructure and Interoperability},
  pages = {155--168},
  publisher = {Elsevier},
  year = {2001}}

@inproceedings{Schi01a,
  author = {Bill N. Schilit and Jonathan Trevor and David M. Hilbert and Tzu Khiau Koh},
  title = {m-links: An infrastructure for very small internet devices},
  booktitle = {MobiCom '01: Proceedings of the 7th annual international conference on Mobile computing and networking},
  pages = {122--131},
  publisher = {ACM Press},
  year = {2001},
  doi = {10.1145/381677.381689},
  address = {New York, NY, USA},
  isbn = {1-58113-422-3},
  location = {Rome, Italy}}

@article{Schi05a,
  author = {Schinz, Michel},
  title = {Compiling Scala for the Java virtual machine},
  journal = {EPFL,},
  year = {2005}}

@inproceedings{Schi08a,
  author = {Hans Schippers and Dirk Janssens and Michael Haupt and Robert Hirschfeld},
  title = {Delegation-based semantics for modularizing crosscutting concerns},
  booktitle = {OOPSLA '08: Proceedings of the 23rd ACM SIGPLAN conference on Object oriented programming systems languages and applications},
  pages = {525--542},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1449764.1449806},
  address = {New York, NY, USA},
  isbn = {978-1-60558-215-3},
  location = {Nashville, TN, USA}}

@article{Schi82a,
  author = {P. Schicker},
  title = {Naming and Addressing in a Computer-Based Mail Environment},
  journal = {IEEE Trans on Communications},
  volume = {COM-30},
  pages = {46--62},
  year = {1982},
  month = jan,
  number = {1}}

@article{Schi89a,
  author = {Allan M. Schiffman},
  title = {Fun with Exception-Handling Part I},
  journal = {ParcPlace Newsletter},
  year = {1989},
  institution = {ParcPlace},
  month = oct,
  page = {10}}

@techreport{Schl01a,
  author = {Andreas Schlapbach},
  title = {Generic {XMI} Support for the {MOOSE} Reengineering Environment},
  year = {2001},
  url = {http://scg.unibe.ch/archive/projects/Schl01a.pdf},
  abstract = {This report describes the implementation of generic
XMI (XML Metadata Interchange) support for MOOSE, an
Extensible Language-Independent Environment for
Reengineering Object-Oriented Systems developed at
the University of Bern.},
  institution = {University of Bern},
  month = jun,
  type = {Informatikprojekt}}

@mastersthesis{Schl03a,
  author = {Andreas Schlapbach},
  title = {Enabling White-Box Reuse in a Pure Composition Language},
  year = {2003},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Schl03a.pdf},
  abstract = {Inheritance is a key concept of object-oriented
programming languages, features such as conceptual
modeling and reusability are largely accredited to
it. While many useful components have been, and will
be, developed in this paradigm, the form of
white-box reuse covered by inheritance has a
fundamental flaw: reusing components by inheritance
requires an understanding of the internals of the
components. We can not treat components of
object-oriented languages as black-box entities,
inheritance breaks encapsulation and introduces
subtle dependencies between base and extending
classes. Component-oriented programming addresses
this problem by shifting away from programming
towards software composition. We build applications
by scripting components. Instead of overriding the
internals of a component, we focus on composing its
interfaces only. This form of black-box reuse leads
to a flexible and extendible architecture with
reusable components. In this master's thesis we
propose a migration strategy from class
inheritance---a whitebox form of reuse---to
component composition as a black-box form of reuse.
We present a language extension that gives us the
power of inheritance combined with the ease of
scripting. It enables us to reuse Java components
using inheritance in JPiccola---a small, pure and
general composition language implemented on the Java
platform---at a high level of abstraction. Using the
services provided by the language extension we can
seamlessly generate interfaces and subclasses from
JPiccola. This capability greatly increases the
number of components scriptable from JPiccola. To
validate the usefulness of our language extension we
demonstrate how we can script various Java
components by de ning services and compositional
styles. We thus turn white-box components of Java
into black-box components in Piccola.},
  month = jan,
  type = {Diploma thesis}}

@inproceedings{Schl99a,
  author = {Judith D. Schlesinger and Alyson A. Reeves},
  title = {Educating JACKAL: Clich\'e Library Development and Use},
  booktitle = {Proceedings Sixth Working Conference on Reverse Engineering},
  pages = {123--133},
  year = {1999},
  editor = {Fran{\c{c}}oise Balmas and Michael Blaha and Spencer Rugaber},
  month = oct,
  organization = {IEEE Computer Society}}

@book{Schm00a,
  author = {Douglas C. Schmidt and Michael Stal and Hans Rohnert and Frank Buschmann},
  title = {Pattern-Oriented Software Architecture Volume 2 --- Networked and Concurrent Objects},
  publisher = {John Wiley and Sons},
  year = {2000}}

@article{Schm06a,
  author = {Douglas C. Schmidt},
  title = {Guest Editor's Introduction: Model-Driven Engineering},
  journal = {Computer},
  volume = {39},
  pages = {25--31},
  publisher = {IEEE Computer Society},
  year = {2006},
  url = {http://www.cs.wustl.edu/~schmidt/PDF/GEI.pdf},
  doi = {10.1109/MC.2006.58},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {2}}

@inproceedings{Schm06b,
  author = {Schmidt, Albrecht and Terrenghi, Lucia},
  title = {Methods and guidelines for the design and development of domestic ubiquitous computing applications},
  booktitle = {SAC'06: Proceedings of the 21th Symposium on Applied Computing},
  pages = {1928--1929},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1141277.1141733}}

@inproceedings{Schm14a,
  title={An evaluation of domain-specific language technologies for code generation},
  author={Schmitt, Christian and Kuckuk, Sebastian and K{\"o}stler, Harald and Hannig, Frank and Teich, J{\"u}rgen},
  booktitle={2014 14th International Conference on Computational Science and Its Applications},
  pages={18--26},
  year={2014},
  organization={IEEE}
}

@inproceedings{Schm20a,
  author = {Schmitt Laser, Marcelo and Medvidovic, Nenad and Le, Duc Minh and Garcia, Joshua},
  title = {ARCADE: an extensible workbench for architecture recovery, change, and decay evaluation},
  booktitle = {Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  pages = {1546--1550},
  year = {2020}}

@article{Schm76a,
  author = {H.A. Schmidt},
  title = {On the Efficient Implementation of Conditional Critical Regions and the Construction of Monitors},
  journal = {Acta Informatica},
  volume = {6},
  pages = {227--249},
  year = {1976},
  number = {3}}

@book{Schm86a,
  author = {Kurt J. Schmucker},
  title = {Object-Oriented Programming for the Macintosh},
  publisher = {Hayden Book Company},
  year = {1986}}

@book{Schm86b,
  author = {D.A. Schmidt},
  title = {Denotational Semantics: A Methodology for Language Development},
  publisher = {Allyn and Bacon, Inc.},
  year = {1986},
  address = {Newton, MA},
  isbn = {0-697-06849-8}}

@inproceedings{Schm89a,
  author = {Claudia Schmittgen and Werner Kluge and Ralf Zimmer},
  title = {$\pi$-{RED} --- An Interactive Reduction System Based on a Fully-Fledged $\lambda$-Calculus},
  booktitle = {Efficient Execution of Declarative Programs, Proceedings of the ACM ISCA 89 Workshop on Architectural Support for Declarative Programming},
  year = {1989},
  editor = {D. De Groot and P. Biswas}}

@techreport{Schm92a,
  author = {Douglas C. Schmidt},
  title = {{ICP} {SAP}: {A} Family of {O}.{O}. Interfaces for Local and Remote Interprocesses Comunnication},
  year = {1992},
  institution = {Comp. Science Department, Washington University},
  type = {Technical Report}}

@article{Schm94a,
  author = {H.W. Schmidt and W. Zimmermann},
  title = {A Complexity calculus for Object-Oriented programs},
  journal = {Object-Oriented Systems},
  volume = {1},
  pages = {117--148},
  publisher = {Chapman \& Hall},
  year = {1994},
  month = dec,
  number = {2}}

@techreport{Schm94b,
  author = {Douglas C. Schmidt},
  title = {The {ADAPTIVE} Communication Environment: An {O}.{O}. Network Programming Toolkit for developing Communication Software},
  year = {1994},
  url = {http://www.cs.wustl.edu/~schmidt/SUG-94.ps.Z},
  institution = {Comp. Science Department, Washington University},
  type = {Technical Report}}

@techreport{Schm94c,
  author = {Douglas C. Schmidt},
  title = {The Service Configurator Framework},
  year = {1994},
  url = {http://www.cs.wustl.edu/~schmidt/IWCDS.ps},
  institution = {Comp. Science Department, Washington University},
  type = {Technical Report}}

@techreport{Schm94d,
  author = {Douglas C. Schmidt},
  title = {{ASX}: An Object-Oriented Framework for Developing Distributed Applications},
  year = {1994},
  url = {http://www.cs.wustl.edu/~schmidt/C++-USEUNIX-94.ps},
  institution = {Comp. Science Department, Washington University},
  type = {Technical Report}}

@inproceedings{Schm95a,
  author = {Doug Schmidt and Paul Stephenson},
  title = {Experience Using Design Patterns to Evolve Communication Software Across Diverse {OS} Platforms},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {399--423},
  publisher = {Springer-Verlag},
  year = {1995},
  url = {http://www.cs.wustl.edu/~schmidt/ECOOP-95.ps.gz},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@article{Schm95b,
  author = {Douglas C. Schmidt},
  title = {Using Design Patterns to Develop Reusable Object-Oriented Communication Software},
  journal = {Communications of the ACM},
  volume = {38},
  pages = {65--74},
  year = {1995},
  url = {http://www.cs.wustl.edu/~schmidt/CACM-95.ps.gz},
  month = oct,
  number = {10}}

@techreport{Schm95c,
  author = {Douglas C. Schmidt},
  title = {An {OO} Encapsulation of Lightweight {OS} Concurrency Mechanism in the {ACE} Toolkit},
  year = {1995},
  institution = {Washington University, St. Louis.},
  number = {WUCS-95-31},
  type = {Technical Report}}

@article{Schm95d,
  author = {Douglas C. Schmidt},
  title = {Acceptor: {A} Design Pattern for Passively Initializing Network Services},
  journal = {{C}++ Report, SIGS},
  volume = {7},
  year = {1995},
  url = {http://www.cs.wustl.edu/~schmidt/Acceptor.ps.gz},
  month = nov,
  number = {8}}

@book{Schm95e,
  author = {Charles H. Schmauch},
  title = {{ISO} 9000 for Software Developers},
  publisher = {ASQC Quality Press},
  year = {1995},
  isbn = {0-87389-348-4}}

@article{Schm96a,
  author = {Douglas C. Schmidt},
  title = {Connector: {A} Design Pattern for Actively Initializing Network Services},
  journal = {{C}++ Report, SIGS},
  volume = {8},
  year = {1996},
  url = {http://www.cs.wustl.edu/~schmidt/Connector.ps.gz},
  month = jan,
  number = {1}}

@book{Schm96b,
  title = {The Second Conference on Object-Oriented Technologies and Systems ({COOTS}'96)},
  publisher = {USENIX},
  year = {1996},
  editor = {Douglas C. Schmidt},
  isbn = {1-880446-77-4}}

@inproceedings{Schm98a,
  author = {I. Schmitt and G. Saake},
  title = {Merging Inheritance Hierarchies for Database Integration},
  booktitle = {Proceedings of the 3rd International Conference on Cooperative Info. Systems (CoopIS'98)},
  year = {1998},
  address = {New York},
  month = aug}

@inproceedings{Schm99a,
  author = {I. Schmitt and S. Conrad},
  title = {Restructuring Object-Oriented Database Schemata by Concept Analysis},
  booktitle = {Fundamentals of Information Systems (Post-Proceedings 7th International Workshop on Foundations of Models and Languages for Data and Objects {FoMLaDO'98)}},
  pages = {177--185},
  publisher = {Kluwer Academic Publishers},
  year = {1999},
  address = {Boston},
  editor = {T. Polle and T. Ripke and K.-D. Schewe}}

@inproceedings{Schm99b,
  author = {Schmidt, Albrecht and Aidoo, Kofi Asante and Takaluoma, Antti and Tuomela, Urpo and Laerhoven, Kristof Van and Velde, Walter Van de},
  title = {Advanced Interaction in Context},
  booktitle = {HUC'99: Proceedings of the 1st International Symposium on Handheld and Ubiquitous Computing},
  pages = {89--101},
  publisher = {Springer-Verlag},
  year = {1999},
  address = {London, UK},
  location = {Karlsruhe, Germany}}

@inproceedings{Schn00a,
  author = {Schneider, Jean-Guy and Lumpe, Markus},
  title = {{A Metamodel for Concurrent, Object-based Programming}},
  booktitle = {Proceedings of Langages et Mod{\`e}les {\`a} Objets '00},
  pages = {149--165},
  publisher = {Hermes},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/Schn00aMetamodelForOBCP.pdf},
  abstract = {The development of flexible and reusable concurrent
object-oriented programming abstractions has
suffered from the inherent problem that reusability
and extensibility is limited due to
position-dependent parameters. To tackle this
problem, we propose the Form-calculus, an inherently
polymorphic variant of the Pi-calculus, where
polyadic tuple communication is replaced by monadic
communication of extensible records. This approach
facilitates the specification of flexible,
concurrent, object-oriented programming
abstractions. Based on our previous work in this
field, we present a Form-calculus based meta-level
approach for concurrent, object-based programming
which adapts a compositional view of programming.
This approach enables the definition of various
semantic models supporting different kinds of
inheritance and method dispatch strategies, and
clarifies concepts which are typically merged in
existing object-oriented programming languages.},
  address = {Mont Saint-Hilaire, Qu{\'e}bec},
  editor = {Dony, Christophe and Sahraoui, Houari A.},
  isbn = {ISBN 2-7462-0093-7},
  location = {Privat},
  month = jan}

@incollection{Schn01b,
  author = {Jean-Guy Schneider and Markus Lumpe and Oscar Nierstrasz},
  title = {Agent Coordination via Scripting Languages},
  booktitle = {Coordination of Internet Agents},
  pages = {153--175},
  publisher = {Springer-Verlag},
  year = {2001},
  url = {http://scg.unibe.ch/archive/papers/Schn01bAgentCoordination.pdf},
  abstract = {In this chapter, it is not our goal to focus on
basic coordination models and abstractions of
scripting languages alone. We would like to view
coordination from a different perspective, set the
relation to other approaches which aim at separating
independent concerns into deployable entities, in
particular to component-based software development,
and discuss the influence of scripting on building
applications as assemblies of these entities.
Furthermore, we would like to stress the fact that
scripting languages do not only allow us to
coordinate distributed agents, but also to implement
the agents themselves as scripts.},
  editor = {Andrea Omicini and Franco Zambonelli and Matthias Klusch and Robert Tolksdorf},
  isbn = {3-540-41613-7}}

@inproceedings{Schn06a,
  author = {Jean-Guy Schneider and Rajesh Vasa},
  title = {Agile Practices in Software Development --- Experiences from Student Projects},
  booktitle = {Proceedings of the 17th Australian Software Engineering Conference (ASWEC 2006)},
  pages = {401--410},
  publisher = {IEEE Computer Society Press},
  year = {2006},
  url = {http://www.it.swin.edu.au/personal/jschneider/Pub/aswec06.pdf 10.1109/ASWEC.2006.9},
  abstract = {To address the problems of traditional software
development methodologies, recent years have seen
the introduction of more light-weight or "agile"
development processes. These processes are intended
to support early and quick production of working
code by structuring the development into small
release cycles and focus on continual interaction
between developers and customers. As these kinds of
software development processes are becoming more and
more popular in industry, there is a growing demand
to expose Software Engineering students to agile
development practices. This, however, is not a
straightforward task as the corresponding practices
cannot be adjusted easily to a learning environment
or may even run counter to educational goals. In
this paper, we discuss our experiences in
introducing agile practices in student software
development projects and reflect on both the
benefits and drawbacks of agile processes in this
setting.},
  address = {Sydney, Australia},
  editor = {Han, Jun and Staples, Mark},
  location = {Privat},
  month = apr}

@inproceedings{Schn16a,
  author = {Teseo Schneider and Yuriy Tymchuk and Ronie Salgado and Alexandre Bergel},
  title = {{CuboidMatrix}: Exploring Dynamic Structural Connections in Software Components using Space-Time Cube},
  booktitle = {{VISSOFT}'16: Proceedings of the 4th IEEE Working Conference on Software Visualization},
  pages = {116--125},
  publisher = {IEEE},
  year = {2016},
  url = {http://scg.unibe.ch/archive/papers/Schn16a.pdf},
  doi = {10.1109/VISSOFT.2016.17},
  abstract = {Static and dynamic evolution of software systems may be described in terms of connection additions and removals in a graph.
Due to the inherent complexity of software, navigating through such a dynamic network is a non-trivial task and extracting relevant information typically involves sophisticated queries.
We explore the notion of space-time cube, a well-known 3D representation of an evolving dynamic graph, to support a set of software engineering activities. CuboidMatrix is a visualization tool that offers simple and expressive navigation operations. We have evaluated our tool against two software comprehension activities, namely (i) assessing interaction of classes during a software execution and (ii) exploring the cause of breaking Lint-like quality rules over a large number of software revisions.},
  annote = {internationalconference},
  keywords = {scg-pub snf-asa2 scg16 jb16 tymchuk},
  medium = {2},
  peerreview = {yes}}

@unpublished{Schn91a,
  author = {Hans-J{\"u}rgen Schneider},
  title = {Describing Process Systems with shared Data Structures by Graph Grammars},
  year = {1991},
  misc = {May 31},
  month = may,
  note = {Univ. Erlangen-N{\"u}rnberg},
  type = {Draft}}

@techreport{Schn96a,
  author = {Jean-Guy Schneider and Markus Lumpe},
  title = {Modelling Objects in {PICT}},
  year = {1996},
  url = {http://scg.unibe.ch/archive/software/OOPICT/pictObjM.pdf http://scg.unibe.ch/archive/software/OOPICT/index.html},
  abstract = {For the development of present-day applications,
programming languages supporting high order
abstractions are needed. These high order
abstractions are called components. Since most of
the currently available programming languages and
systems fail to provide sufficient support for
specifying and implementing components, we are
developing a new language suitable for software
composition. It is not clear how such a language
will look like, what kind of abstractions it must
support, and what kind of formal model it will be
based on. Object-oriented programming languages
address some of the needs of present-day
applications, and it is therefore obvious to
integrate some of their concepts and abstractions in
the language. As a first step towards such an
integration, we have to define an object model.
Since no generally accepted formal object model
exists, we have chosen the Pi-calculus as a basis
for modelling. In order to find a suitable object
model, we have built up an object modelling
workbench for Pict, an implementation of an
asynchronous Pi-calculus. In this work, we define a
first abstract object model, describe several
implementations of the object model in Pict, and
discuss interesting features and possible
extensions.},
  institution = {University of Bern, Institute of Computer Science and Applied Mathematics},
  month = jan,
  number = {IAM-96-004}}

@inproceedings{Schn97a,
  author = {Jean-Guy Schneider and Markus Lumpe},
  title = {Synchronizing Concurrent Objects in the Pi-Calculus},
  booktitle = {Proceedings of Langages et Mod\`eles \`a Objets '97},
  pages = {61--76},
  publisher = {Hermes},
  year = {1997},
  url = {http://scg.unibe.ch/archive/papers/Schn97aSyncConcObjPi.pdf},
  abstract = {The development of concurrent object-based
programming languages has suffered from the lack of
any generally accepted formal foundation for
defining their semantics. Therefore we are seeking
for a minimal semantic foundation for defining
features of concurrent object-based languages. Our
previous work has shown that the Pi-calculus is a
promising formal foundation for modelling objects,
and we have defined an object model integrating
common features of object-oriented programming
languages. Our goal is to define a black-box
framework for modelling objects. As a first
extension of our Pi-calculus based object model, we
present in this work the integration of abstractions
for synchronizing concurrent objects. Our results
show that objects are most easily synchronized when
synchronization policies are reified as first class
entities (i.e. metaobjects) and that McHale's
concept of ``generic synchronization policies''
forms a promising base for the definition of
higher-level, reusable synchronization
abstractions.},
  address = {Roscoff},
  editor = {Roland Ducournau and Serge Garlatti},
  isbn = {2-86601-650-5},
  month = oct}

@book{Schn98a,
  author = {Geri Schneider and Jason P. Winters},
  title = {Applying Use Cases},
  publisher = {Addison Wesley},
  year = {1998}}

@phdthesis{Schn99a,
  author = {Jean-Guy Schneider},
  title = {Components, Scripts, and Glue: {A} conceptual framework for software composition},
  year = {1999},
  school = {University of Bern, Institute of Computer Science and Applied Mathematics},
  url = {http://scg.unibe.ch/archive/phd/schneider-phd.pdf},
  abstract = {The last decade has shown that object-oriented
technology alone is not enough to cope with the
r{API}dly changing requirements of present-day
applications. Typically, objectoriented methods do
not lead to designs that make a clear separation
between computational and compositional aspects.
Component-based systems, on the other hand, achieve
flexibility by clearly separating the stable parts
of systems (i.e. the components) from the
specification of their composition. Components are
black-box entities that encapsulate services behind
well-defined interfaces. The essential point is that
components are not used in isolation, but according
to a software architecture which determines the
interfaces that components may have and the rules
governing their composition. A component, therefore,
cannot be separated from a component framework.
Naturally, it is not enough to have components and
frameworks, but one needs a way to plug components
together. However, one of the main problems with
existing languages and systems is that there is no
generally accepted definition of how components can
be composed. In this thesis, we argue that the
flexibility and adaptability needed for
component-based applications to cope with changing
requirements can be substantially enhanced if we do
not only think in terms of components, but also in
terms of architectures, scripts, and glue.
Therefore, we present a conceptual framework for
componentbased software development incorporating
the notions of components and frameworks, software
architectures, glue, as well as scripting and
coordination, which allows for an algebraic view of
software composition. Furthermore, we define the
FORM calculus, an offspring of the asynchronous
Pi-calculus, as a formal foundation for a
composition language that makes the ideas of the
conceptual framework concrete. The FORM calculus
replaces the tuple communication of the Pi-calculus
by the communication of forms (or extensible
records). This approach overcomes the problem of
position-dependent arguments, since the contents of
communications are now independent of positions and,
therefore, makes it easier to define flexible and
extensible abstractions. We use the FORM calculus to
define a (meta-level) framework for concurrent,
objectoriented programming and show that common
object-oriented programming abstractions such as
instance variables and methods, different method
dispatch strategies as well as synchronization are
most easily modelled when class metaobjects are
explicitly reified as first-class entities and when
a compositional view of object-oriented abstractions
is adopted. Finally, we show that both, polymorphic
form extension and restriction are the basic
composition mechanisms for forms and illustrate that
they are the key concepts for defining extensible
and adaptable, hence reusable higher-level
compositional abstractions.},
  month = oct,
  type = {{Ph.D}. Thesis}}

@incollection{Schn99b,
  author = {Jean-Guy Schneider and Oscar Nierstrasz},
  title = {Components, Scripts and Glue},
  booktitle = {Software Architectures --- Advances and Applications},
  pages = {13--25},
  publisher = {Springer-Verlag},
  year = {1999},
  url = {http://scg.unibe.ch/archive/papers/Schn99bComptsScriptsAndGlue.pdf},
  abstract = {Experience has shown us that object-oriented
technology alone is not enough to guarantee that the
systems we develop will be flexible and adaptable.
Even ``well-designed'' object-oriented software may
be difficult to understand and adapt to new
requirements. We propose a conceptual framework that
will help yield more flexible object-oriented
systems by encouraging explicit separation of
computational and compositional elements. We
distinguish between components that adhere to an
architectural style, scripts that specify
compositions, and glue that may be needed to adapt
components' interfaces and contracts. We also
discuss a prototype of an experimental composition
language called Piccola that attempts to combine
proven ideas from scripting languages, coordination
models and languages, glue techniques, and
architectural specification.},
  editor = {Leonor Barroca and Jon Hall and Patrick Hall},
  isbn = {1-85233-636-6}}

@inproceedings{Scho64a,
  author = {D. V. Schorre},
  title = {META II a syntax-oriented compiler writing language},
  booktitle = {Proceedings of the 1964 19th ACM national conference},
  pages = {41.301--41.3011},
  publisher = {ACM Press},
  year = {1964},
  doi = {10.1145/800257.808896},
  address = {New York, NY, USA}}

@inproceedings{Schr07a,
  author = {Daniel Schreck and Valentin Dallmeier and Thomas Zimmermann},
  title = {How documentation evolves over time},
  booktitle = {IWPSE '07: Ninth international workshop on Principles of software evolution},
  pages = {4--10},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1294948.1294952},
  address = {New York, NY, USA},
  isbn = {978-1-59593-722-3},
  location = {Dubrovnik, Croatia}}

@techreport{Schr92a,
  author = {Wolfgang Schr{\"o}der-Preikschat},
  title = {{PEACE} --- The Evolution of a Parallel Operating System},
  year = {1992},
  address = {Sankt Augustin},
  institution = {GMD},
  month = may,
  number = {646},
  type = {Working Paper}}

@inproceedings{Schu00a,
  author = {Daniel Schulz and Frank Mueller},
  title = {A Thread-Aware Debugger with an Open Interface},
  booktitle = {{ISSTA}'00},
  publisher = {ACM},
  year = {2000},
  address = {Portland, Oregon}}

@misc{Schu01a,
  author = {Peter Schuh and Stephanie Punke},
  title = {{ObjectMother}, Easing Test Object Creation in {XP}},
  year = {2001},
  url = {http://www.xpuniverse.com/2001/pdfs/Testing03.pdf},
  note = {http://www.xpuniverse.com/2001/pdfs/Testing03.pdf}}

@inproceedings{Schu02a,
  author = {Sibylle Schupp and Mukkai Krishnamoorthy and Marcin Zalewski and James Kilbride},
  title = {The ``{Right}'' {Level} of {Abstraction} --- {Assessing} {Reusable} {Software} with {Formal} {Concept} {Analysis}},
  booktitle = {Foundations and Applications of Conceptual Structures --- Contributions to ICCS 2002},
  pages = {74--91},
  publisher = {Bulgarian Academy of Sciences},
  year = {2002},
  editor = {Angelova, G. and Corbett, D. and Priss, U.}}

@article{Schu03a,
  author = {Peter Schuh},
  title = {Recovery, Redemption and {Extreme} {Programming}},
  journal = {IEEE Computer},
  volume = {18},
  pages = {34--41},
  year = {2001},
  number = {6}}

@inproceedings{Schu08a,
  author = {Schuler, David and Zimmermann, Thomas},
  title = {Mining usage expertise from version archives},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {121--124},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370779},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@inproceedings{Schu12a,
  author = {Schubert, Simon and Kostic, Dejan and Zwaenepoel, Willy and Shin, Kang G.},
  title = {Profiling Software for Energy Consumption},
  booktitle = {2012 IEEE International Conference on Green Computing and Communications},
  pages = {515-522},
  year = {2012},
  doi = {10.1109/GreenCom.2012.86}}

@article{Schu13a,
  author = {Schuler, David and Zeller, Andreas},
  title = {Checked coverage: an indicator for oracle quality},
  journal = {Software testing, verification and reliability},
  volume = {23},
  pages = {531--551},
  year = {2013},
  doi = {0.1002/stvr.1497},
  issn = {1096-9128}}

@inproceedings{Schu70a,
  author = {Schuman, Stephen A and Jorrand, Philippe},
  title = {Definition mechanisms in extensible programming languages},
  booktitle = {Proceedings of the November 17-19, 1970, fall joint computer conference},
  pages = {9--20},
  year = {1970}}

@inproceedings{Schu98a,
  author = {Benedikt Schulz and Thomas Genssler and Berthold Mohr and Walter Zimmer},
  title = {On the Computer Aided Introduction of Design Patterns into Object-Oriented Systems.},
  booktitle = {Proceedings of the TOOLS 27 Conference (Asia '98)},
  publisher = {IEEE Computer Society Press},
  year = {1998}}

@inproceedings{Schu99a,
  author = {Ulrik Schultz and Julia Lawall and Charles Consel and Gilles Muller},
  title = {Towards Automatic Specialization of {Java} Programs},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {367--390},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Automatic program specialization can derive
efficient implementations from generic components,
thus reconciling the often opposing goals of
genericity and efficiency. This technique has proved
useful within the domains of imperative, functional,
and logical languages, but so far has not been
explored within the domain of object-oriented
languages. We present experiments in the
specialization of {Java} programs. We demonstrate
how to construct a program specializer for {Java}
programs from an existing specializer for C programs
and a {Java}-to-C compiler. Specialization is
managed using a declarative approach that abstracts
over the optimization process and masks
implementation details. Our experiments show that
program specialization provides a four-time speedup
of an image-filtering program. Based on these
experiments, we identify optimizations of
object-oriented programs that can be carried out by
automatic program specialization. We argue that
program specialization is useful in the field of
software components, allowing a generic component to
be specialized to a specific configuration.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Schul17a,
  author = {Schulz, Stefan and Bockisch, Christoph},
  title = {Redshell: Online back-in-time debugging},
  booktitle = {Companion to the first International Conference on the Art, Science and Engineering of Programming},
  pages = {1},
  year = {2017},
  organization = {ACM}}

@inproceedings{Schul17b,
  author = {Schulz, Stefan},
  title = {Back-In-Time Evaluation: Towards Online Trace-Based Debugging},
  booktitle = {Companion to the first International Conference on the Art, Science and Engineering of Programming},
  pages = {40},
  year = {2017},
  organization = {ACM}}

@inproceedings{Schul18a,
  author = {Schulz, Stefan and Bockisch, Christoph},
  title = {A blast from the past: online time-travel debugging with BITE},
  booktitle = {Proceedings of the 15th International Conference on Managed Languages \& Runtimes},
  pages = {13},
  year = {2018},
  organization = {ACM}}

@techreport{Schw00a,
  author = {Daniel Schweizer},
  title = {Exporting {MOOSE} Models to {Rational} {Rose} {UML}},
  year = {2000},
  url = {http://scg.unibe.ch/archive/projects/Schw00a.pdf},
  abstract = {In software re-engineering projects very often you
have the source code of an application but you miss
its programmer, the design and the documentation. In
order to understand these systems you need reverse
engineering tools. UMLDesignExtractor is the
prototype of a reverse engineering tool generating
UML class diagrams from object-oriented code.
UMLDesignExtractor is built on top of MOOSE and is
written in SMALLTALK. For the graphical output it
uses the {API} of Rational Rose, a professional UML
modeler.},
  institution = {University of Bern},
  month = apr,
  type = {Informatikprojekt}}

@book{Schw01a,
  author = {Ken Schwaber and Mike Beedle},
  title = {Agile Software Development with Scrum},
  publisher = {Alan R. Apt},
  year = {2001},
  edition = {First},
  isbn = {0-13-067634-9}}

@mastersthesis{Schw02a,
  author = {Daniel Schweizer},
  title = {Navigation in Object-Oriented Reverse Engineering},
  year = {2002},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Schw02a.pdf},
  abstract = {Tool support is needed to cope with the complexity
and the large amounts of infor-mation in reverse
engineering. By creating representations in another
form, often at a higher level of abstraction,
state-of-the-art tools aid in reducing complexity
and gaining insights into parts of a system's
structure. However, orientation and navigation among
these representations remains difficult. Often
superfluously tool-induced effort is needed to
perform a certain task. We call this artificially
added effort friction. Tools with the right
navigation support can reduce this friction, and
increase productivity. This work classifies
navigation in models of object-oriented software
systems, and shows that among the great number of
possibilities, only a few make sense. We determine
which kinds of navigation steps are useful, and why.
We summarize our experience and best practices of
state-of-the-art tools in a set of re-quirements for
an ideal reverse engineering tool. As a validation
for these requirements, we analyze data about the
user's behavior during reverse engineering sessions.
To collect that data, and for studying various ways
of navigation and orientation, we built
MooseNavigator, a prototype reverse engineering
navigator.},
  month = jun,
  type = {Diploma thesis}}

@mastersthesis{Schw09a,
  author = {Niko Schwarz},
  title = {Rank aggregation by Criteria---Minimizing the maximum Kendall-tau distance},
  year = {2009},
  school = {Universit{\"a}t Jena},
  url = {http://scg.unibe.ch/archive/masters/Schw09a.pdf},
  abstract = {We propose a new method of combining ranking results
which each rank the same set of items according to
different criteria. It will choose a ranking that is
closest as possible to each ranking result to be
combined. In the context of the Internet, it can be
used to rank web pages into an order that best
reflects a balance between several criteria. In the
context of sports, we propose to use the method to
determine the winner of competitions, when the
performance of an athlete is naturally judged
according to different criteria, such as figure
skating and show jumping. The rank aggregation
method we propose is known to be NP-hard. This
thesis aims to develop efficient algorithms to
compute aggregated rankings for practically relevant
instances. By employing parameterized complexity
theory, we can identify the structural hardness of
an instance and allow for choosing a high-performing
algorithm accordingly. We present efficient and
effective data reduction rules which will reduce
param- eters measuring the structural difficulty of
an instance provably by simplifying the instance or
removing unneeded parts. We provide efficient search
tree algorithms which will solve practically
relevant instances, where the criteria correlate
strongly. Experiments with synthetic data confirm
that for instances with high correlation between the
rankings, even large instances can be computed in
short time. For general instances, we present two
enumeration algorithms, which will likely outperform
the trivial algorithm of trying all rankings and
comparing their qualities as aggregations. We prove
the enumeration algorithms to perform well in
scenarios with both few items to be ranked and some
correlation between the rankings. We present methods
to approximate the solution quality by a factor of
two. We present parameters which cannot be used to
improve computation by proving the NP-hardness of
the problem even for small values of these
parameters.},
  date-added = {2009-07-03 18:29:51 +0200},
  date-modified = {2009-07-03 18:31:28 +0200}}

@inproceedings{Schw10a,
  author = {August Schwerdfeger and Eric Van Wyk},
  title = {Verifiable Parse Table Composition for Deterministic Parsing},
  booktitle = {Software Language Engineering},
  volume = {LNCS 5969},
  pages = {184--203},
  publisher = {Springer},
  year = {2010},
  isbn = {978-3-642-12106-7}}

@inproceedings{Schw10b,
  author = {Niko Schwarz and Erwann Wernli and Adrian Kuhn},
  title = {Hot Clones, Maintaining a Link Between Software Clones Across Repositories},
  booktitle = {IWSC '10: Proceedings of the 4th International Workshop on Software Clones},
  pages = {81--82},
  publisher = {ACM},
  year = {2010},
  url = {http://scg.unibe.ch/staff/Schwarz/HotClones-position-paper},
  doi = {10.1145/1808901.1808915},
  abstract = {Code duplication is common in current programming-practice: programmers search for
snippets of code, incorporate them into their projects and then modify them to their needs.
In today's practice, no automated scheme is in place to inform both parties of any distant
changes of the code. As code snippets continues to evolve both on the side of the user and on
the side of the author, both may wish to benefit from remote bug fixes or refinements ---
authors may be interested in the actual usage of their code snippets, and researchers could
gather information on clone usage. We propose maintaining a link between software clones
across repositories and outline how the links can be created and maintained.},
  address = {New York, NY, USA},
  date-added = {2010-04-26 16:10:08 +0200},
  date-modified = {2010-04-26 16:12:27 +0200},
  isbn = {978-1-60558-980-0},
  location = {Cape Town, South Africa},
  month = apr}

@inproceedings{Schw89a,
  author = {Robert W. Schwanke and Rita Z. Altucher and Michael A. Platoff},
  title = {Discovering, {Visualizing}, and {Controlling} {Software} {Structure}},
  booktitle = {Proceedings of International Workshop on Software Specification and Design},
  pages = {147--150},
  publisher = {IEEE Computer Society Press},
  year = {1989}}

@inproceedings{Schw89b,
  author = {Robert W. Schwanke and Michael A. Platoff},
  title = {Cross {References} are {Features}},
  booktitle = {Proceedings of Second International Workshop on Software Configuration Management},
  pages = {86--95},
  publisher = {ACM Press},
  year = {1989}}

@inproceedings{Schw91a,
  author = {Robert W. Schwanke},
  title = {An intelligent tool for re-engineering software modularity},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering},
  pages = {83--92},
  year = {1991},
  month = may}

@article{Schw91b,
  author = {S. Schwartz and W. Miller and C.M. Yang and R.C. Hardison},
  title = {Software Tools for Analyzing Pairwise Alignments of Long Sequences},
  journal = {Nucleic Acids Research},
  volume = {19},
  pages = {4663--4667},
  year = {1991}}

@article{Scot76a,
  author = {Dana Scott},
  title = {Data Types as Lattices},
  journal = {SIAM J. Comput.},
  volume = {5},
  pages = {522--587},
  year = {1976},
  month = sep,
  number = {3}}

@inproceedings{Scot82a,
  author = {Dana Scott},
  title = {Domains for Denotational Semantics},
  booktitle = {Proceedings ICALP '82},
  volume = {140},
  pages = {577--613},
  publisher = {Springer-Verlag},
  year = {1982},
  address = {Aarhus, DK},
  editor = {M. Nielsen and E.M. Schmidt},
  month = jul,
  series = {LNCS}}

@book{Seac03a,
  author = {Seacord, R.C. and PLAKOSH, D.A. and LEWIS, G.A.A.},
  title = {Modernizing Legacy Systems: Software Technologies, Engineering Processes, and Business Practices},
  publisher = {ADDISON WESLEY Publishing Company Incorporated},
  year = {2003},
  url = {http://books.google.fr/books?id=sZsy2X1EA9UC},
  isbn = {9780321118844},
  series = {The SEI Series in Software Engineering}}

@misc{Seaside,
  title = {{Seaside} home page},
  url = {http://www.seaside.st},
  key = {Seaside},
  note = {http://www.seaside.st}}

@techreport{Seat07a,
  author = {Chris Seaton},
  title = {A Programming Language Where the Syntax and Semantics Are Mutable at Runtime},
  pages = {53},
  year = {2007},
  url = {http://www.cs.bris.ac.uk/Publications/Papers/2000702.pdf},
  institution = {University of Bristol},
  month = jun,
  number = {CSTR-07-005}}

@book{Sebe92a,
  author = {Robert W. Sebesta},
  title = {Concepts of Programming Languages},
  publisher = {Benjamin Cummings},
  year = {1992},
  address = {Redwood City, Calif.},
  edition = {Second},
  isbn = {0-8053-7130-3}}

@inproceedings{Seco00a,
  author = {Seco, Jo\~{a}o Costa and Caires, Lu\'{\i}s},
  title = {A Basic Model of Typed Components},
  booktitle = {ECOOP'00: Proceedings of the 14th European Conference on Object-Oriented Programming},
  pages = {108--128},
  publisher = {Springer-Verlag},
  year = {2000},
  address = {London, United Kingdom}}

@book{Sedg92a,
  author = {Robert Sedgewick},
  title = {Algorithms in C++},
  publisher = {Addison Wesley},
  year = {1992}}

@mastersthesis{Seeb06a,
  author = {Mauricio Seeberger},
  title = {How Developers Drive Software Evolution},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Seeb06a.pdf},
  abstract = {As software systems grow, reverse engineering is
becoming an increasingly important task. The larger
the system grows the more complex it becomes and the
more effort must be put in to understand it.
Consequently, the knowledge of the developers
becomes more and more critical for the process of
understanding the system. However, in large systems
not all developers know about the entire system.
Thus, to make the best use of developer knowledge,
we need to know which developer is knowledgeable in
which part of it. This thesis aims to provide a
lightweight approach to understand how developers
changed the system, when and where they worked and
which developer owned which part of the system. To
answer them, we define the Ownership Map
visualization based on the notion of code ownership
and measurements. We semantically group files and
identify behavioral patterns of the developer's
work.},
  month = jan,
  type = {Master's Thesis}}

@inproceedings{Seem98a,
  author = {Jochen Seemann and J{\"{u}}rgen Wolff von Gudenberg},
  title = {Pattern-{Based} {Design} {Recovery} of {JAVA} {Software}},
  booktitle = {Proceedings of the 6th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {10--16},
  publisher = {ACM Press},
  year = {1998},
  doi = {10.1145/288195.288207},
  isbn = {1-58113-108-9},
  location = {Lake Buena Vista, Florida, United States}}

@phdthesis{Sefi96a,
  author = {Mohlalefi Sefika},
  title = {Design Conformance Management of Software Systems: an Architecture-Oriented Approach},
  year = {1996},
  school = {University of Illinois}}

@inproceedings{Sefi96b,
  author = {Mohlalefi Sefika and Aamod Sane and Roy H. Campbell},
  title = {Monitoring Complicance of a Software System with Its High-Level Design Models},
  booktitle = {Proceedings ICSE-18},
  pages = {387--396},
  year = {1996},
  month = mar}

@inproceedings{Sefi96c,
  author = {Mohlalefi Sefika and Aamod Sane and Roy H. Campbell},
  title = {Monitoring Complicance of a Software System with Its High-Level Design Models},
  booktitle = {Proceedings ICSE-18},
  pages = {387--396},
  year = {1996},
  month = mar}

@inproceedings{Sega03a,
  author = {Segal, Judith},
  title = {The Nature of Evidence in Empirical Software Engineering},
  booktitle = {STEP '03: Proceedings of the Eleventh Annual International Workshop on Software Technology and Engineering Practice},
  pages = {40--47},
  publisher = {IEEE Computer Society},
  year = {2003},
  url = {http://portal.acm.org/citation.cfm?id=1034388},
  address = {Washington, DC, USA},
  citeulike-article-id = {5361802},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1034388},
  isbn = {0-7695-2218-1},
  posted-at = {2009-09-15 14:49:04},
  priority = {0}}

@book{Seib05a,
  author = {Peter Seibel},
  title = {Practical Common Lisp},
  publisher = {APress},
  year = {2005},
  url = {http://www.gigamonkeys.com/book/},
  isbn = {1590592395}}

@article{Seid03a,
  author = {Ed Seidewitz},
  title = {What Models Mean},
  journal = {IEEE Software},
  volume = {20},
  pages = {26--32},
  year = {2003},
  issue = {5},
  month = sep,
  number = {5}}

@inproceedings{Seid87a,
  author = {Ed Seidewitz},
  title = {Object-Oriented Programming in {Smalltalk} and {ADA}},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {202--213},
  year = {1987},
  month = dec}

@inproceedings{Seid93a,
  author = {H. Seidl},
  title = {When is a Functional Tree Transduction Deterministic ?},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {251--265},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@article{Seif13a,
  author = {Seifzadeh, Habib and Abolhassani, Hassan and Moshkenani, Mohsen Sadighi},
  title = {A survey of dynamic software updating},
  journal = {Journal of Software: Evolution and Process},
  volume = {25},
  pages = {535--568},
  publisher = {Wiley Online Library},
  year = {2013},
  number = {5}}

@inproceedings{Sein06a,
  author = {L. Seinturier and N. Pessemier and L. Duchien and T. Coupaye},
  title = {A Component Model Engineering with Components and Aspects},
  booktitle = {9th International Symposium on Component-Based Software Engineering (CBSE)},
  publisher = {Springer},
  year = {2006},
  number = {4063},
  series = {Lecture Notes in Computer Science}}

@phdthesis{Seit12a,
  author = {Seitz, Kerry A.},
  title = {The Design and Implementation of a Bytecode for Optimization on Heterogeneous Systems},
  year = {2012},
  school = {Trinity University}}

@article{Seit98a,
  author = {Linda M. Seiter and Jens Palsberg and Karl J. Lieberherr},
  title = {Evolution of Object Behavior Using Context Relations},
  journal = {IEEE Transactions on Software Engineering},
  volume = {24},
  pages = {79--92},
  year = {1998},
  doi = {10.1109/32.663999},
  month = jan,
  number = {1}}

@inproceedings{Seit99a,
  author = {Linda Seiter and Mira Mezini and Karl Lieberherr},
  title = {Dynamic Component Gluing},
  booktitle = {Proc. First International Symposium on Generative and Component-Based Software Engineering, GCSE '99},
  publisher = {Springer Verlag},
  year = {1999},
  series = {LNCS}}

@inproceedings{Sekh02a,
  author = {K. Chandra Sekharaiah and D. Janaki Ram},
  title = {Object Schizophrenia Problem in Object Role System Design},
  booktitle = {OOIS '02: Proceedings of the 8th International Conference on Object-Oriented Information Systems},
  volume = {2425/2002},
  pages = {494--506},
  publisher = {Springer-Verlag},
  year = {2002},
  address = {London, UK},
  isbn = {3-540-44087-9}}

@inproceedings{Seli92a,
  author = {Bran Selic and Garth Gullekson and Jim McGee and Ian Engelberg},
  title = {{ROOM}: An Object-Oriented Methodology for Developing Real-Time Systems},
  booktitle = {Proceedings CASE 92 Fifth International Workshop on Computer-Aided Software Engineering},
  year = {1992},
  address = {Montreal},
  month = jul}

@book{Seli94a,
  author = {Bran Selic and Garth Gullekson and Paul T. Ward},
  title = {Real-Time Object-Oriented Modeling},
  publisher = {John Wiley \& Sons},
  year = {1994},
  isbn = {0-471-59917-4}}

@inproceedings{Seli95a,
  author = {Jacob Seligmann and Steffen Grarup},
  title = {Incremental Mature Garbage Collection Using the Train Algorithm},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {235--252},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@inproceedings{Sell98a,
  author = {A. Sellink and C. Verkoef},
  title = {Native Patterns},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {89--99},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@inproceedings{Selm20a,
  author = {Selmadji, Anfel and Seriai, Abdelhak-Djamel and Bouziane, Hinde Lilia and Mahamane, Rahina Oumarou and Zaragoza, Pascal and Dony, Christophe},
  title = {From monolithic architecture style to microservice one based on a semi-automatic approach},
  booktitle = {2020 IEEE International Conference on Software Architecture (ICSA)},
  pages = {157--168},
  year = {2020},
  organization = {IEEE}}

@article{Selt15a,
  author = {Seltman, Howard J},
  title = {Experimental design and analysis},
  journal = {Retrieved from},
  year = {2015}}

@article{Send03a,
  author = {Sendall, Shane and Kozaczynski, Wojtek},
  title = {Model transformation: The heart and soul of model-driven software development},
  journal = {IEEE software},
  volume = {20},
  pages = {42--45},
  publisher = {IEEE},
  year = {2003},
  number = {5}}

@inproceedings{Seng05,
  author = {Seng, Olaf and Bauer, Markus and Biehl, Matthias and Pache, Gert},
  title = {Search-based improvement of subsystem decompositions},
  booktitle = {GECCO '05: Proceedings of the 2005 conference on Genetic and evolutionary computation},
  pages = {1045--1051},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1068009.1068186},
  address = {New York, NY, USA},
  isbn = {1-59593-010-8},
  location = {Washington DC, USA}}

@inproceedings{Seng06,
  author = {Seng, Olaf and Stammel, Johannes and Burkhart, David},
  title = {Search-based determination of refactorings for improving the class structure of object-oriented systems},
  booktitle = {GECCO '06: Proceedings of the 8th annual conference on Genetic and evolutionary computation},
  pages = {1909--1916},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1143997.1144315},
  address = {New York, NY, USA},
  isbn = {1-59593-186-4},
  location = {Seattle, Washington, USA}}

@misc{Sepu20,
  author = {Samuel Sepulveda and Jaime Diaz and Marcelo Esperguel},
  title = {Systematic literature review protocol Identification and classification of feature modeling errors},
  year = {2020},
  archiveprefix = {arXiv},
  eprint = {2010.15545},
  primaryclass = {cs.SE}}

@inproceedings{Sere10a,
  author = {A. Serebrenik and M. G. J. van den Brand},
  title = {Theil index for aggregation of software metrics values},
  booktitle = {Int. Conf. on Software Maintenance},
  pages = {1--9},
  publisher = {IEEE},
  year = {2010}}

@article{Serr02a,
  author = {Bernard Paul Serpette and Manuel Serrano},
  title = {Compiling scheme to JVM bytecode:: a performance study},
  journal = {SIGPLAN Not.},
  volume = {37},
  pages = {259--270},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/583852.581503},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {9}}

@inproceedings{Serr99a,
  author = {Manuel Serrano},
  title = {Wide classes},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {391--415},
  publisher = {Springer-Verlag},
  year = {1999},
  url = {http://www.ifs.uni-linz.ac.at/~ecoop/cd/papers/1628/16280391.pdf},
  abstract = {This paper introduces the concepts of wide classes
and widening as extensions to the object model of
class-based languages such as {Java} and Smalltalk.
Widening allows an object to be temporarily widened,
that is transformed into an instance of a subclass,
a wide class, and, later on, to be shrunk, that is
reshaped to its original class. Wide classes share
the main properties of plain classes: they have a
name, a superclass, they may be instantiated, they
have an associated class predicate and an associated
type that may be used to override function
definitions. Widening is also useful to implement
transient data storage for long-lasting
computations. In particular, it helps reducing
software data retention. This phenomenon arises when
the actual data structures used in a program fail to
reflect time-dependent properties of values and can
cause excessive memory consumption during the
execution. Wide classes may be implemented for any
dynamically-typed class-based programming language
with very few modifications to the existing runtime
system. We describe the simple and efficient
implementation strategy used in the Bigloo runtime
system. Keywords: language implementation, dynamic
inheritance, dynamic type checking, instance
modification.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@book{Sess98a,
  author = {Roger Sessions},
  title = {{COM} and {DCOM}: Microsoft's vision for distributed objects},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1998},
  address = {New York, NY, USA}}

@book{Seth89a,
  author = {Ravi Sethi},
  title = {Programming Languages: Concepts and Constructs},
  publisher = {Addison Wesley},
  year = {1989},
  address = {Reading, Mass.},
  isbn = {0-201-10365-6}}

@article{Seve74a,
  author = {D.G. Severance},
  title = {Identifier Search Mechanisms: {A} Survey and Generalized Model},
  journal = {ACM Computing Surveys},
  volume = {6},
  pages = {175--194},
  year = {1974},
  month = sep,
  number = {3}}

@article{Seve76a,
  author = {D.G. Severance and R.A. Duhne},
  title = {A Practitioner's Guide to Addressing Algorithms},
  journal = {CACM},
  volume = {19},
  pages = {314--326},
  year = {1976},
  number = {6}}

@inproceedings{Sewe11a,
  author = {Sewe, Andreas and Mezini, Mira and Sarimbekov, Aibek and Binder, Walter},
  title = {Da Capo Con Scala: Design and Analysis of a Scala Benchmark Suite for the Java Virtual Machine},
  booktitle = {Proceedings of the 2011 ACM International Conference on Object Oriented Programming Systems Languages and Applications},
  pages = {657-676},
  publisher = {Association for Computing Machinery},
  year = {2011},
  url = {https://doi.org/10.1145/2048066.2048118},
  doi = {10.1145/2048066.2048118},
  abstract = {Originally conceived as the target platform for Java alone, the Java Virtual Machine (JVM) has since been targeted by other languages, one of which is Scala. This trend, however, is not yet reflected by the benchmark suites commonly used in JVM research. In this paper, we thus present the design and analysis of the first full-fledged benchmark suite for Scala. We furthermore compare the benchmarks contained therein with those from the well-known DaCapo 9.12 benchmark suite and show where the differences are between Scala and Java code---and where not.},
  address = {New York, NY, USA},
  isbn = {9781450309400},
  keywords = {java, benchmarks, Scala, dynamic metrics},
  location = {Portland, Oregon, USA},
  numpages = {20},
  series = {OOPSLA '11}}

@techreport{Sewe99a,
  author = {Peter Sewell and Pawel Wojciechowski and Benjamin Pierce},
  title = {Location-Independent Communication for Mobile Agents: a Two-Level Architecture},
  year = {1999},
  url = {http://www.cl.cam.ac.uk/users/pes20/nomadicpict.html},
  institution = {University of Cambridge},
  type = {technical report}}

@inproceedings{Sha10a,
  author = {Sharif, Bonita and Maletic, Jonathan I},
  title = {An eye tracking study on camelcase and under\_score identifier styles},
  booktitle = {2010 IEEE 18th International Conference on Program Comprehension},
  pages = {196--205},
  year = {2010},
  organization = {IEEE}}

@book{Shaf91a,
  author = {Dan Shafer and Dean A. Ritz},
  title = {Practical {Smalltalk}},
  publisher = {Springer-Verlag},
  year = {1991},
  isbn = {0-387-97394-X}}

@book{Shaf95a,
  title = {Proceedings {ESEC}'95},
  volume = {989},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Kaiserslautern, Germany},
  editor = {Wilhelm Schafer and Pere Botella},
  isbn = {3-540-60406-5},
  month = sep,
  series = {LNCS}}

@inproceedings{Shah00a,
  author = {Ran Shaham and Elliot K. Kolodner and Mooly Sagiv},
  title = {On effectiveness of GC in Java},
  booktitle = {Proceedings of the 2nd international symposium on Memory management (ISMM'00)},
  pages = {12--17},
  publisher = {ACM},
  year = {2000},
  doi = {10.1145/362422.362430},
  address = {New York, NY, USA},
  isbn = {1-58113-263-8},
  location = {Minneapolis, Minnesota, United States}}

@inproceedings{Shah11a,
  author = {Shahrokni, Ali and Feldt, Robert},
  title = {RobusTest: Towards a Framework for Automated Testing of Robustness in Software},
  booktitle = {International Conference on Advances in System Testing and Validation LifeCycle},
  year = {2011}}

@inproceedings{Shah11b,
  author = {Shah, Eeshan and Tilevich, Eli},
  title = {Reverse-engineering user interfaces to facilitate porting to and across mobile devices and platforms},
  booktitle = {Proceedings of the compilation of the co-located workshops on {DSM}'11, {TMC}'11, {AGERE}! 2011, {AOOPES}'11, {NEAT}'11, {\textbackslash}\& {VMIL}'11},
  pages = {255--260},
  publisher = {{ACM}},
  year = {2011},
  abstract = {As mobile devices are r{API}dly replacing desktop computers
for a growing number of users, existing user interfaces often
need to be ported from the desktop to a mobile device. In ad-
dition, successful user interfaces written for one mobile plat-
form are commonly ported to other mobile platforms. Tra-
ditionally, porting user interfaces requires that their source
code be reverse-engineered and translated, which is di cult
and error-prone. In this paper, we present an approach that
reverse-engineers user interfaces without having to analyze
their source code. Speci cally, our approach examines an in-
terface's runtime representation by means of aspect-oriented
programming ({AOP}). An aspect intercepts the program's
control
ow at the point when all the components of an in-
terface are laid out on the screen, but before the interface
is displayed. The aspect analyzes the interface's in-memory
representation and extracts a platform-independent model
that can then be used to generate equivalent interfaces for
other devices and platforms. Our initial proof of concept
ports Java Swing interfaces to Android. In this paper, we
describe our approach, discuss its main technical challenges,
and outline future research directions.},
  date = {2011},
  keywords = {dynamic analysis, {GUI} Models, Mobile Devices and Platforms, Porting, Reverse Engineering}}

@article{Shah14a,
  author = {Shahin, Mojtaba and Liang, Peng and Babar, Muhammad Ali},
  title = {A systematic review of software architecture visualization techniques},
  journal = {Journal of Systems and Software},
  volume = {94},
  pages = {161--185},
  publisher = {Elsevier},
  year = {2014}}

@inproceedings{Shah89a,
  author = {Ashwin V. Shah and Jung H. Hamel and Renee E. Borsari and James E. Rumbaugh},
  title = {{DSM}: An Object-Relationship Modeling Language},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {191--202},
  year = {1989},
  month = oct}

@inproceedings{Shahi10a,
  author = {Shahin, Mojtaba and Liang, Peng and Khayyambashi, Mohammad Reza},
  title = {Improving understandability of architecture design through visualization of architectural design decision},
  booktitle = {Proceedings of the 2010 ICSE Workshop on Sharing and Reusing Architectural Knowledge},
  pages = {88--95},
  year = {2010}}

@book{Shall05a,
  author = {Shalloway, Alan and Trott, James R},
  title = {Design patterns explained: A new perspective on object-oriented design, 2/E},
  publisher = {Pearson Education India},
  year = {2005}}

@inproceedings{Sham77a,
  author = {A. Shamir and W. Wadge},
  title = {Data types as objects},
  booktitle = {Proceedings, ICALP '77},
  volume = {52},
  pages = {465--479},
  publisher = {Springer-Verlag},
  year = {1977},
  editor = {Salomaa and Steinby},
  month = jul,
  series = {LNCS}}

@article{Shan48,
  author = {Shannon, Claude Elwood},
  title = {A mathematical theory of communication},
  journal = {Bell system technical journal},
  volume = {27},
  pages = {379--423},
  publisher = {Wiley Online Library},
  year = {1948},
  number = {3}}

@inproceedings{Shan89a,
  author = {Yen-Ping Shan},
  title = {An Event-Driven Model-View-Controller Framework for {Smalltalk}},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {347--352},
  year = {1989},
  month = oct}

@inproceedings{Shan90a,
  author = {Yen-Ping Shan},
  title = {MoDE: {A} {UIMS} for {Smalltalk}},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {258--268},
  year = {1990},
  month = oct}

@unpublished{Shan92a,
  author = {Lujun Shang},
  title = {An Object-Oriented Approach to Construct Concurrent Behaviours},
  year = {1992},
  note = {Comp. Sci Dept., Nanjing University, China},
  type = {draft}}

@unpublished{Shan94a,
  author = {David L. Shang},
  title = {Covariant Deep Subtyping Reconsidered},
  year = {1994},
  note = {Software Systems Research Laboratory, Motorola Inc.},
  type = {Draft}}

@inproceedings{Shao07a,
  author = {D. Shao and S. Khurshid and D.E. Perry},
  title = {Evaluation of semantic interference detection in parallel changes: an exploratory experiment},
  booktitle = {Proceedings of the 23rd IEEE International Conference on Software Maintenance},
  pages = {74--83},
  year = {2007},
  month = {oct},
  series = {{ICSM}'07}}

@inproceedings{Shao09a,
  author = {Danhua Shao and Sarfraz Khurshid and Dewayne E. Perry},
  title = {{SCA}: a Semantic Conflict Analyzer for Parallel Changes},
  booktitle = {Proceedings of the the 7th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT symposium on the Foundations of Software Engineering},
  pages = {291--292},
  year = {2009},
  series = {ESEC/FSE'09}}

@inproceedings{Shao93a,
  author = {Zhong Shao and Andrew W. Appel},
  title = {Smartest recompilation},
  booktitle = {Principles of Programming Languages},
  publisher = {ACM},
  year = {1993},
  url = {ftp://ftp.cs.princeton.edu/techreports/1992/395.ps.gz}}

@inproceedings{Shap82a,
  author = {Shapiro, Ehud Y},
  title = {Algorithmic program diagnosis},
  booktitle = {Proceedings of Principles of Programming Languages (Popl)},
  pages = {299--308},
  year = {1982},
  organization = {ACM}}

@article{Shap83a,
  author = {E. Shapiro and A. Takeuchi},
  title = {Object Oriented Programming in Concurrent Prolog},
  journal = {New Generation Computing},
  volume = {1},
  pages = {25--48},
  year = {1983}}

@inproceedings{Shap89a,
  author = {Marc Shapiro and Philippe Gautron and Laurence Mossieri},
  title = {Persistence and Migration for {C}++ Objects},
  booktitle = {Proceedings ECOOP '89},
  pages = {191--204},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@techreport{Shap94a,
  author = {Marc Shapiro and Paulo Ferreira},
  title = {Larchant-{RDOSS}: {A} Distributed Shared Persistent Memory and Its Garbage Collector},
  year = {1994},
  url = {ftp.inria.fr},
  institution = {INRIA},
  month = nov,
  number = {2399},
  type = {Technical Report}}

@inproceedings{Shapi86,
  author = {Marc Shapiro},
  title = {Structure and Encapsulation in Distributed Systems: The Proxy Principle},
  booktitle = {Proceedings of the 6th International Conference on Distributed Computing Systems (ICDCS)},
  pages = {198--205},
  publisher = {IEEE Computer Society},
  year = {1986},
  address = {Washington, DC},
  isbn = {0-8186-0697-5},
  keywords = {cache coherency protocols DSM distributed shared memory}}

@inproceedings{Shar05a,
  author = {Richard Sharp and Atanas Rountev},
  title = {Interactive Exploration of UML Sequence Diagrams},
  booktitle = {Proceedings of VISSOFT 2005 (3rd IEEE Workshop on Visualizing Software for Understanding and Analysis},
  pages = {8--13},
  publisher = {IEEE CS Press},
  year = {2005}}

@inproceedings{Shar11a,
  author = {Sharafi, Zohreh},
  title = {A systematic analysis of software architecture visualization techniques},
  booktitle = {2011 IEEE 19th International Conference on Program Comprehension},
  pages = {254--257},
  year = {2011},
  organization = {IEEE}}

@inproceedings{Shar18a,
  author = {Sharma, Tushar},
  title = {Detecting and Managing Code Smells: Research and Practice},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
  pages = {546--547},
  publisher = {ACM},
  year = {2018},
  url = {http://doi.acm.org/10.1145/3183440.3183460},
  doi = {10.1145/3183440.3183460},
  acmid = {3183460},
  address = {New York, NY, USA},
  isbn = {978-1-4503-5663-3},
  keywords = {antipatterns, code quality, code smells, smell detection tools, software maintenance, software quality, technical debt},
  location = {Gothenburg, Sweden},
  numpages = {2},
  series = {ICSE '18}}

@inproceedings{Shar91a,
  author = {Ravi Sharma and Mary Lou Soffa},
  title = {Parallel Generational Garbage Collection},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {16--32},
  year = {1991},
  month = nov}

@article{Shar93a,
  author = {Robert C. Sharble and Samuel S. Cohen},
  title = {The object-oriented brewery: a comparison of two object-oriented development methods},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {18},
  pages = {60--73},
  publisher = {ACM Press},
  year = {1993},
  doi = {10.1145/159420.155839},
  issn = {0163-5948},
  number = {2}}

@book{Shar96a,
  author = {Subhash Sharma},
  title = {Applied Multivariate Techniques},
  publisher = {John Wiley},
  year = {1996}}

@book{Shar97a,
  author = {Alec Sharp},
  title = {Smalltalk by Example},
  publisher = {McGraw-Hill},
  year = {1997},
  url = {http://stephane.ducasse.free.fr/FreeBooks/ByExample/}}

@article{Shari98a,
  author = {Shari, L Phleeger and others},
  title = {Software Engineering: Theory and Practice},
  journal = {International Edition, Prentice Hall, Inc},
  year = {1998}}

@article{Sharm18a,
  author = {Tushar Sharma and Diomidis Spinellis},
  title = {A survey on software smells},
  journal = {Journal of Systems and Software},
  year = {2018},
  doi = {10.1016/j.jss.2017.12.034}}

@misc{SharpSmalltalk,
  author = {John Brant and Don Roberts},
  title = {\#{Smalltalk} ({Sharp} {Smalltalk})},
  url = {http://www.refactory.com/Software/SharpSmalltalk/},
  key = {SharpSmalltalk},
  note = {http://www.refactory.com/Software/SharpSmalltalk/}}

@article{Shat19a,
  title={Static code analysis of multilanguage software systems},
  author={Shatnawi, Anas and Mili, Hafedh and Abdellatif, Manel and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Moha, Naouel and Hecht, Geoffrey and Boussaidi, Ghizlane El and Privat, Jean},
  journal={arXiv preprint arXiv:1906.00815},
  year={2019}
}

@inproceedings{Shav95a,
  author = {Nir Shavit and Dan Touitou},
  title = {Software Transactional Memory},
  booktitle = {Proc. of the 12th Annual ACM Symposium on Principles of Distributed Computing (PODC)},
  pages = {204--213},
  year = {1995},
  site = {Ottawa, Canada}}

@article{Shaw06a,
  author = {Shaw, Mary and Clements, Paul},
  title = {The Golden Age of Software Architecture: A Comprehensive Survey},
  journal = {IEEE Software},
  volume = {23},
  pages = {31--39},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/MS.2006.58},
  address = {Los Alamitos, CA, USA},
  number = {2}}

@article{Shaw77a,
  author = {M. Shaw and W. Wulf},
  title = {Abstraction and Verification in Alphard: Defining and Specifying Iteration and Generators},
  journal = {CACM},
  volume = {20},
  pages = {553--564},
  year = {1977},
  month = aug,
  number = {8}}

@article{Shaw84a,
  author = {Shaw, Mary},
  title = {Abstraction techniques in modern programming languages},
  journal = {IEEE software},
  volume = {1},
  pages = {10--26},
  publisher = {IEEE},
  year = {1984},
  number = {4}}

@article{Shaw90a,
  author = {M. Shaw},
  title = {Prospects for an Engineering Discipline of Software},
  journal = {IEEE Software},
  volume = {7},
  pages = {15--24},
  year = {1990},
  month = nov,
  number = {6}}

@article{Shaw95a,
  author = {Shaw, Mary and DeLine, Robert and Klein, Daniel V. and Ross, Theodore L. and Young, David M. and Zelesnik, Gregory},
  title = {Abstractions for software architecture and tools to support them},
  journal = {IEEE Transactions on Software Engineering},
  volume = {21},
  pages = {314--335},
  publisher = {IEEE Computer Society},
  year = {1995},
  doi = {10.1109/32.385970},
  address = {Piscataway, NJ, USA},
  number = {4}}

@book{Shaw96a,
  author = {Mary Shaw and David Garlan},
  title = {Software Architecture: Perspectives on an Emerging Discipline},
  publisher = {Prentice-Hall},
  year = {1996},
  isbn = {0-13-182957-2}}

@inproceedings{Shaw97a,
  author = {Mary Shaw and Paul Clements},
  title = {Toward Boxology: Preliminary Classification of Architectural Styles},
  booktitle = {Joint Proceedings of the Second International Software Architecture Workshop and International Workshop on Multiple Perspectives in Software Development},
  pages = {50--54},
  year = {1997}}

@inproceedings{Shea01a,
  author = {Tim Sheard},
  title = {Accomplishments and Research Challenges in Meta-programming},
  booktitle = {SAIG 2001: Proceedings of the Second International Workshop on Semantics, Applications, and Implementation of Program Generation},
  pages = {2--44},
  publisher = {Springer-Verlag},
  year = {2001},
  address = {London, UK},
  isbn = {3-540-42558-6}}

@inproceedings{Shel90a,
  author = {Mark A. Sheldon},
  title = {Static Dependent Types for First Class Modules},
  booktitle = {ACM Conference on Lisp and Functional Programming},
  year = {1990},
  month = jun}

@inproceedings{Shen04a,
  author = {Shen, Haifeng and Sun, Chengzheng},
  title = {A Complete Textual Merging Algorithm for Software Configuration Management Systems},
  booktitle = {Proceedings of the 28th Annual International Computer Software and Applications Conference},
  pages = {293--298},
  publisher = {IEEE Computer Society},
  year = {2004},
  address = {Washington, DC, USA},
  isbn = {0-7695-2209-2-1},
  series = {COMPSAC'04}}

@inproceedings{Shen11a,
  author = {Haihao Shen and Jianhong Fang and Jianjun Zhao},
  title = {EFindBugs: Effective Error Ranking for FindBugs},
  booktitle = {Software Testing, Verification and Validation (ICST), 2011 IEEE Fourth International Conference on},
  pages = {299 -308},
  year = {2011},
  month = {mar}}

@inproceedings{Shen21a,
  title={Cross-language Code Coupling Detection: A Preliminary Study on Android Applications},
  author={Shen, Bo and Zhang, Wei and Yu, Ailun and Wei, Zhao and Liang, Guangtai and Zhao, Haiyan and Jin, Zhi},
  booktitle={2021 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  pages={378--388},
  year={2021},
  organization={IEEE}
}

@article{Shen90a,
  author = {Shen, Z. and Li, Z. and Yew, P.-C.},
  title = {An empirical study of Fortran programs for parallelizing compilers},
  journal = {IEEE Transactions on Parallel and Distributed Systems},
  volume = {1},
  pages = {356-364},
  year = {1990},
  doi = {10.1109/71.80162},
  abstract = {Some results are reported from an empirical study of program characteristics, that are important in parallelizing compiler writers, especially in the area of data dependence analysis and program transformations. The state of the art in data dependence analysis and some parallel execution techniques are examined. The major findings are included. Many subscripts contain symbolic terms with unknown values. A few methods of determining their values at compile time are evaluated. Array references with coupled subscripts appear quite frequently; these subscripts must be handled simultaneously in a dependence test, rather than being handled separately as in current test algorithms. Nonzero coefficients of loop indexes in most subscripts are found to be simple: they are either 1 or -1. This allows an exact real-valued test to be as accurate as an exact integer-valued test for one-dimensional or two-dimensional arrays. Dependencies with uncertain distance are found to be rather common, and one of the main reasons is the frequent appearance of symbolic terms with unknown values.<>},
  issn = {1558-2183},
  month = jul,
  number = {3}}

@article{Shep88a,
  author = {Shepperd, Martin},
  title = {A critique of cyclomatic complexity as a software metric},
  journal = {Software Engineering Journal},
  volume = {3},
  pages = {30--36},
  publisher = {IET},
  year = {1988},
  number = {2}}

@article{Sheri07a,
  author = {Sheridan, Flash},
  title = {Practical testing of a {C99} compiler using output comparison},
  journal = {Software: Practice and Experience},
  pages = {1475--1488},
  year = {2007},
  url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.1088.4511&rep=rep1&type=pdf},
  abstract = {A simple technique is presented for testing a C99 compiler, by comparing its output with the output from pre-existing tools. The advantage to this approach is that new test cases can be added in bulk from existing sources, reducing the need for in-depth investigation of correctness issues and for creating new test code by hand. This technique was used in testing the PalmSource Palm OS Cobalt ARM C/C++ cross-compiler for Palm-Powered personal digital assistants, primarily for standards compliance and the correct execution of generated code. The technique described here found several hundred bugs, mostly in our in-house code, but also in longstanding high-quality front- and back-end code from Edison Design Group and Apogee Software. It also found 18 bugs in the GNU C compiler, as well as a bug specific to the Apple version of GCC, a bug specific to the Suse version of GCC, and a dozen bugs in versions of GCC for the ARM processor, several of which were critical.},
  keywords = {compilers, correctness, program testing},
  urldate = {2021-06-29}}

@article{Shet90a,
  author = {Amit P. Sheth and James A. Larson},
  title = {Federated Database Systems for Managing Distributed Heterogeneous, and Autonomous Databases},
  journal = {ACM Computing Surveys},
  volume = {22},
  pages = {183--236},
  year = {1990},
  month = sep,
  number = {3}}

@article{Shi08a,
  author = {Shi, Yunhe and Casey, Kevin and Ertl, M. Anton and Gregg, David},
  title = {Virtual Machine Showdown: Stack Versus Registers},
  journal = {ACM Transaction on Architecture and Code Optimization},
  volume = {4},
  pages = {2:1--2:36},
  year = {2008},
  address = {New York, NY, USA},
  articleno = {2},
  issn = {1544-3566},
  keywords = {Interpreter, register architecture, stack architecture, virtual machine},
  month = jan,
  number = {4},
  numpages = {36}}

@inproceedings{Shib88a,
  author = {Etsuya Shibayama},
  title = {How To Invent Distributed Implementation Schemes of an Object-Based Concurrent Language: {A} Transformational Approach},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {297--305},
  year = {1988},
  month = nov}

@inproceedings{Shib92a,
  author = {Etsuya Shibayama},
  title = {Semantic Layers of Object-Based Concurrent Computing},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {99--117},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Matio Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@inproceedings{Shil89a,
  author = {John J. Shilling and Peter F. Sweeney},
  title = {Three Steps to Views: Extending the Object-Oriented Paradigm},
  booktitle = {ACM SIGPLAN Notices, Proceedings OOPSLA '89},
  volume = {24},
  pages = {353--361},
  year = {1989},
  month = oct}

@article{Shil94a,
  author = {J.J. Shilling and J.T. Stasko},
  title = {Using Animation to Desing Object-Oriented Systems},
  journal = {Object-Oriented Systems},
  volume = {1},
  pages = {5--20},
  publisher = {Chapman \& Hall},
  year = {1994},
  month = dec,
  number = {1}}

@article{Shin84a,
  author = {K.G. Shin and Yut-Fai Lee},
  title = {Evaluation of Error Recovery Blocks Used for Cooperating Processes},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-10},
  pages = {692--700},
  year = {1984},
  month = nov,
  number = {6}}

@inproceedings{Shiv95a,
  author = {Narayanan Shivakumar and H\'ector Garc\'{\i}a-Molina},
  title = {{SCAM}: A Copy Detection Mechanism for Digital Documents},
  booktitle = {Proceedings of the Second Annual Conference on the Theory and Practice of Digital Libraries},
  year = {1995},
  url = {citeseer.ist.psu.edu/shivakumar95scam.html}}

@incollection{Shiv96a,
  author = {Olin Shivers},
  title = {A universal scripting framework or, {Lambda}: the ultimate little language},
  booktitle = {Concurrency and Parallelism: Programming, Networking and Security},
  pages = {254--265},
  publisher = {Springer-Verlag},
  year = {1996},
  editor = {J. Jaffer and R.H.C. Yap}}

@inproceedings{Shiv96b,
  author = {Narayanan Shivakumar and H\'ector Garc\'{\i}a-Molina},
  title = {Building a Scalable and Accurate Copy Detection Mechanism},
  booktitle = {Proceedings of the First ACM Conference on Digital Libraries (DL'96)},
  year = {1996},
  month = mar,
  publishr = {ACM}}

@book{Shne80a,
  author = {Shneiderman},
  title = {Software Psychology: Human Factors in Computer and Information Systems},
  publisher = {Winthrop Publishers},
  year = {1980}}

@article{Shne83a,
  author = {B. Shneiderman},
  title = {Direct Manipulation: {A} Step Beyond Programming Languages},
  journal = {IEEE Computer},
  volume = {16},
  pages = {57--69},
  year = {1983},
  number = {8}}

@book{Shne98a,
  author = {Ben Shneiderman},
  title = {Designing the User Interface},
  publisher = {Addison Wesley Longman},
  year = {1998},
  edition = {Third}}

@inproceedings{Shne99a,
  author = {Ben Shneiderman},
  title = {The Eyes Have It: A Task by Data Type Taxonomy for Information Visualizations},
  booktitle = {IEEE Visual Languages},
  pages = {336-343},
  year = {1996},
  address = {College Park, Maryland 20742, U.S.A.}}

@article{Shoc82a,
  author = {J. Shoch and J. Hupp},
  title = {The Worm Programs --- Early Experience with a Distributed Computation},
  journal = {CACM},
  volume = {25},
  pages = {172--180},
  year = {1982},
  month = mar,
  number = {3}}

@inproceedings{Shon04a,
  author = {Shonle, Macneil and Neddenriep, Jonathan and Griswold, William},
  title = {AspectBrowser for Eclipse: a case study in plug-in retargeting},
  booktitle = {OOPSLA Work. on eclipse technology eXchange},
  pages = {78--82},
  year = {2004}}

@inproceedings{Shor82a,
  author = {J. Short and R. Kilgour and M. Dodani},
  title = {The Application of Microcomputers to English Essay Wrinting: {A} Comparison of two Authoring Systems},
  booktitle = {IFIP '82 Working Conference on Involving Micros in Education},
  publisher = {North-Holland},
  year = {1992},
  month = mar}

@inproceedings{Shri94a,
  author = {C. Shrivastava and D. Carver and R. Shrivastava},
  title = {An Ambiguity Resolution Algorithm},
  booktitle = {Proceedings, Object-Oriented Methodologies and Systems},
  volume = {858},
  pages = {221--231},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {E. Bertino and S. Urban},
  series = {LNCS}}

@book{Shu88a,
  author = {Nan C. Shu},
  title = {Visual Programming},
  publisher = {Van Nostrand Reinhold company},
  year = {1988}}

@inproceedings{Shuf02a,
  title={Exploiting prolific types for memory management and optimizations},
  author={Shuf, Yefim and Gupta, Manish and Bordawekar, Rajesh and Singh, Jaswinder Pal},
  booktitle={Proceedings of the 29th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages={295--306},
  year={2002}
}

@book{Shul07,
  author = {Shull, Forrest and Singer, Janice and Sj{\o}berg, Dag IK},
  title = {Guide to advanced empirical software engineering},
  publisher = {Springer},
  year = {2007}}

@techreport{Shul96a,
  author = {Forrest Shull and Walcelio L. Melo and Victor R. Basili},
  title = {An inductive method for discovering design patterns from object-oriented software systems},
  year = {1996},
  url = {http://citeseer.nj.nec.com/shull96inductive.html},
  institution = {University of Maryland Computer Science Department},
  number = {CS-TR-3597}}

@inproceedings{Si97a,
  author = {Antonio Si and Hong Va Leong and Rynson W. H. Lau},
  title = {{CHECK}: A Document Plagiarism Detection System},
  booktitle = {Proceedings of the ACM Symposion for Applied Computing},
  pages = {70--77},
  publisher = {ACM},
  year = {1997},
  month = feb}

@inproceedings{Sico23a,
	author = {Sicong Cao and Xiaobing Sun and Xiaoxue Wu and Lili Bo and Bin Li and Rongxin Wu and Wei Liu and Biao He and Yu Ouyang and Jiajia Li},
	booktitle = {2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)},
	title = {Improving Java Deserialization Gadget Chain Mining via Overriding-Guided Object Generation},
	year = {2023},
	pages = {397-409},
	doi = {10.1109/ICSE48619.2023.00044},
	publisher = {IEEE Computer Society},
	month = {may}
}

@inproceedings{Sieg15a,
  author = {Janet Siegmund and Norbert Siegmund and Sven Apel},
  title = {Views on Internal and External Validity in Empirical Software Engineering},
  booktitle = {Proceedings of the 37th International Conference on Software Engineering},
  year = {2005},
  series = {ICSE '15}}

@book{Sieg96a,
  author = {Jon Siegel},
  title = {{CORBA} Fundamentals and Programming},
  publisher = {John Wiley \& Sons},
  year = {1996},
  isbn = {0-471-12148-7}}

@inproceedings{Siek00a,
  author = {Jeremy Siek and Andrew Lumsdaine},
  title = {Concept checking: Binding parametric polymorphism in C++},
  booktitle = {Proceedings First Workshop on C++ Template Programming},
  year = {2000},
  address = {Erfurt, Germany},
  month = oct}

@inproceedings{Siek06a,
  author = {Jeremy G. Siek and Walid Taha},
  title = {Gradual Typing for Functional Languages},
  booktitle = {Proceedings, Scheme and Functional Programming Workshop 2006},
  pages = {81--92},
  publisher = {University of Chicago TR-2006-06},
  year = {2006},
  url = {http://scheme2006.cs.uchicago.edu/13-siek.pdf}}

@inproceedings{Siek07a,
  author = {Jeremy Siek and Walid Taha},
  title = {Gradual Typing for Objects},
  booktitle = {Proceedings of European Conference on Object-Oriented Programming (ECOOP'07)},
  volume = {4609},
  pages = {151--175},
  publisher = {Springer Verlag},
  year = {2007},
  doi = {10.1007/978-3-540-73589-2},
  isbn = {978-3-540-73588-5},
  series = {LNCS}}

@inproceedings{Siek09a,
  author = {Jeremy Siek and Ronald Garcia and Walid Taha},
  title = {Exploring the Design Space of Higher-Order Casts},
  booktitle = {Proceedings of the 18th European Symposium on Programming Languages and Systems},
  pages = {17--31},
  publisher = {Springer Verlag},
  year = {2009},
  doi = {10.1007/978-3-642-00590-9_2},
  isbn = {978-3-642-00589-3}}

@book{Sifa89a,
  title = {Automatic Verification Methods for Finite State Systems: Proceedings},
  volume = {407},
  publisher = {Springer-Verlag},
  year = {1989},
  editor = {Joseph Sifakis},
  isbn = {3-540-52148-8},
  series = {LNCS}}

@inproceedings{Siff97a,
  author = {Michael Siff and Thomas Reps},
  title = {Identifying {Modules} via {Concept} {Analysis}},
  booktitle = {Proceedings of {ICSM} '97 (International Conference on Software Maintenance)},
  pages = {170--179},
  publisher = {IEEE Computer Society Press},
  year = {1997},
  url = {http://citeseer.nj.nec.com/siff97identifying.html}}

@article{Siff99a,
  author = {Michael Siff and Thomas Reps},
  title = {Identifying Modules via Concept Analysis},
  journal = {Transactions on Software Engineering},
  volume = {25},
  pages = {749--768},
  publisher = {IEEE Press},
  year = {1999},
  abstract = {We describe a general technique for identifying
modules in legacy code. The method is based on
concept analysis---a branch of lattice theory that
can be used to identify similarities among a set of
objects based on their attributes. We discuss how
concept analysis can identify potential modules
using both "positive" and "negative" information. We
present an algorithmic framework to construct a
lattice of concepts from a program, where each
concept represents a potential module. We define the
notion of a concept partition, present an algorithm
for discovering all concept partitions of a given
concept lattice, and prove the algorithm correct.},
  month = nov,
  number = {6}}

@book{Sigf96a,
  author = {Stefan Sigfried},
  title = {Understanding Object-Oriented Software Enginnering},
  publisher = {IEEE Press},
  year = {1996},
  isbn = {0-7803-1095-0}}

@inproceedings{Siik08a,
  author = {Siikarla, Mika P. and Systa, Tarja J.},
  title = {Decision Reuse in an Interactive Model Transformation},
  booktitle = {2008 12th European Conference on Software Maintenance and Reengineering},
  pages = {123-132},
  year = {2008},
  doi = {10.1109/CSMR.2008.4493307}}

@book{Silb11a,
  author = {Silberschatz, Abraham and Korth, Henry and Sudarshan, S.},
  title = {Database Systems Concepts},
  publisher = {McGraw-Hill, Inc.},
  year = {2011},
  address = {New York, NY, USA},
  edition = {6th},
  isbn = {9780-07-352332-3}}

@article{Silb84a,
  author = {A. Silberschatz},
  title = {Cell: {A} Distributed Computing Modularization Concept},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-10},
  pages = {178--185},
  year = {1984},
  month = mar,
  number = 2}

@book{Silb97a,
  author = {A. Silberschatz and H. Korth and S. Sudarshan},
  title = {Database System Concepts},
  publisher = {WCB/McGraw-Hill},
  year = {1997},
  isbn = {0-07-044756-X}}

@inproceedings{Sill05a,
  author = {Jonathan Sillito and Kris De Volder and Brian Fisher and Gail Murphy},
  title = {Managing software change tasks: An exploratory study},
  booktitle = {Proceedings of the International Symposium on Empirical Software Engineering},
  pages = {23--32},
  publisher = {IEEE Computer Society},
  year = {2005}}

@inproceedings{Sill06a,
  author = {Sillito, J. and Murphy, G.C. and De Volder, K.},
  title = {Questions Programmers Ask During Software Evolution Tasks},
  booktitle = {Proceedings of International Symposium on Foundations on Software Engineering (FSE)},
  pages = {23--34},
  publisher = {ACM},
  year = {2006}}

@article{Sill08a,
  author = {Sillito, J. and Murphy, G.C. and De Volder, K.},
  title = {Asking and Answering Questions during a Programming Change Task},
  journal = {IEEE Transactions on Software Engineering},
  volume = {34},
  pages = {434--451},
  publisher = {IEEE Press},
  year = {2008},
  doi = {10.1109/TSE.2008.26},
  issn = {0098-5589},
  month = {jul},
  number = {4}}

@inproceedings{Silv10a,
  author = {Silva, Jo\~ao Carlos and Silva, Carlos C. and Goncalo, Rui D. and Saraiva, Jo\~ao and Campos, Jos\'e Creissac},
  title = {The {GUISurfer} tool: towards a language independent approach to reverse engineering {GUI} code},
  booktitle = {Proceedings of the 2Nd ACM SIGCHI Symposium on Engineering Interactive Computing Systems},
  pages = {181--186},
  publisher = {{ACM} Press},
  year = {2010},
  url = {http://portal.acm.org/citation.cfm?doid=1822018.1822045},
  doi = {10.1145/1822018.1822045},
  abstract = {Graphical user interfaces ({GUIs}) are critical components of today's software. Developers are dedicating a larger portion of code to implementing them. Given their increased importance, correctness of {GUIs} code is becoming essential. This paper describes the latest results in the development of {GUISurfer}, a tool to reverse engineer the {GUI} layer of interactive computing systems. The ultimate goal of the tool is to enable analysis of interactive system from source code.},
  date = {2010},
  eventtitle = {{EICS} '10 Proceedings of the 2nd {ACM} {SIGCHI} symposium on Engineering interactive computing systems},
  isbn = {978-1-4503-0083-4},
  keywords = {static analysis, Reverse Engineering, Analysis, Graphical User Interfaces, Source Code},
  langid = {english},
  location = {Berlin, Germany},
  shorttitle = {The {GUISurfer} tool},
  urldate = {2018-04-20}}

@article{Silv11a,
  author = {Silva, Josep},
  title = {A survey on algorithmic debugging strategies},
  journal = {Advances in engineering software},
  volume = {42},
  pages = {976--991},
  publisher = {Elsevier},
  year = {2011},
  number = {11}}

@article{Silv20a,
  author = {Nildo Silva Junior and Larissa Rocha and Luana Almeida Martins and Ivan Machado},
  title = {A survey on test practitioners' awareness of test smells},
  journal = {arXiv preprint arXiv:2003.05613},
  year = {2020}}

@inproceedings{Silv96a,
  author = {Mauricio J.V. Silva and C. Robert Carlson},
  title = {Conceptual Design of Active Object-Oriented Database Applications using Multi-level Diagrams},
  booktitle = {Proceedings ECOOP '96},
  volume = {1098},
  pages = {366--397},
  publisher = {Springer-Verlag},
  year = {1996},
  address = {Linz, Austria},
  editor = {P. Cointe},
  month = jul,
  series = {LNCS}}

@inproceedings{Silva13,
  author = {Silva, Carlos E. and Campos, Jos\'e C.},
  title = {Combining static and dynamic analysis for the reverse engineering of web applications},
  booktitle = {Proceedings of the 5th ACM SIGCHI Symposium on Engineering Interactive Computing Systems},
  pages = {107},
  publisher = {{ACM} Press},
  year = {2013},
  url = {http://dl.acm.org/citation.cfm?doid=2494603.2480324},
  doi = {10.1145/2494603.2480324},
  abstract = {Software has become so complex that it is increasingly hard to have a complete understanding of how a particular system will behave. Web applications, their user interfaces in particular, are built with a wide variety of technologies making them particularly hard to debug and maintain. Reverse engineering techniques, either through static analysis of the code or dynamic analysis of the running application, can be used to help gain this understanding. Each type of technique has its limitations. With static analysis it is difficult to have good coverage of highly dynamic applications, while dynamic analysis faces problems with guaranteeing that generated models fully capture the behavior of the system. This paper proposes a new hybrid approach for the reverse engineering of web applications' user interfaces. The approach combines dynamic analyzes of the application at runtime, with static analyzes of the source code of the event handlers found during interaction. Information derived from the source code is both directly added to the generated models, and used to guide the dynamic analysis.},
  date = {2013},
  isbn = {978-1-4503-2138-9},
  langid = {english},
  urldate = {2018-07-19}}

@conference{Silva06,
  author = {Silva, Joao Carlos and Saraiva, Joao and Campos, Jose Creissac},
  title = {Models for the Reverse Engineering of Java/Swing Applications},
  booktitle = {3rd International Workshop on Metamodels, Schemas, Grammars, and Ontologies for Reverse Engineering},
  pages = {9},
  publisher = {Johannes Gutenberg-Universit\&atrema;t Mainz, Institut f\&utrema;ur Informatik - FB 8},
  year = {2006},
  url = {http://planetmde.org/atem2006/atem06Proceedings.pdf},
  abstract = {Interest in design and development of graphical user interface ({GUIs}) is growing in the last few years. However, correctness of {GUI}'s code is essential to the correct execution of the overall software. Models can help in the evaluation of interactive applications by allowing designers to concentrate on its more important aspects. This paper describes our approach to reverse engineering abstract {GUI} models directly from the Java/Swing code.},
  langid = {english},
  organization = {Johannes Gutenberg-Universit\&atrema;t Mainz, Institut f\&utrema;ur Informatik - FB 8}}

@inproceedings{Sim00a,
  author = {Susan Elliott Sim and Margaret-Anne D. Storey},
  title = {A Structured Demonstration of Program Comprehension Tools},
  booktitle = {Proceedings of {WCRE} 2000},
  pages = {184--193},
  year = {2000}}

@inproceedings{Sim03a,
  author = {Susan E. Sim and Steve M. Easterbrook and Richard C. Holt},
  title = {Using Benchmarking to Advance Research: A Challenge to Software Engineering},
  booktitle = {Proceedings, 25th International Conference on Software Engineering (ICSE'03},
  year = {2003},
  address = {Portland, Oregon},
  month = may}

@inproceedings{Sim99a,
  author = {Susan Elliott Sim and Charles L.A. Clarke and Richard C. Holt and Anthony M. Cox},
  title = {Browsing and Searching Software Architectures},
  booktitle = {Proceedings of the International Conference on Software Maintenance ({ICSM})},
  pages = {381},
  publisher = {IEEE Computer Society},
  year = {1999},
  doi = {10.1109/ICSM.1999.792636},
  address = {Los Alamitos, CA, USA},
  issn = {1063-6773}}

@misc{Simm02a,
  author = {Dave Simmons},
  title = {SmallScript},
  year = {2002},
  key = {SS},
  note = {http://www.smallscript.com}}

@inproceedings{Simm91a,
  author = {Sergui S. Simmel and Ivan Godard},
  title = {The Kala Basket: {A} Semantic Primitive Unifying Object Transactions, Access Control, Versions, and Configurations},
  booktitle = {Proceedings OOPSLA '91, ACM SIGPLAN Notices},
  volume = {26},
  pages = {230--246},
  year = {1991},
  month = nov}

@techreport{Simm92a,
  author = {John W. Simmons and Stanley Jefferson and Daniel P. Friedman},
  title = {Language Extension via First-class Interpreters},
  year = {1992},
  url = {http://www.cs.indiana.edu/pub/techreports/TR362.pdf},
  institution = {Indiana University Computer Science Department},
  month = sep,
  number = {362}}

@techreport{Simm92b,
  author = {John W. Simmons and Daniel P. Friedman},
  title = {A reflective system is as extensible as its internal representations: An illustration},
  year = {1992},
  url = {http://www.cs.indiana.edu/pub/techreports/TR366.pdf},
  institution = {Indiana University Computer Science Department},
  month = sep,
  number = {366}}

@book{Simo01,
  author = {Herbert A. Simon},
  title = {The Sciences of the Artificial},
  publisher = {MIT Press},
  year = {2001},
  edition = {3rd},
  isbn = {0-262-19374-4}}

@inproceedings{Simo01a,
  author = {Simon, F. and Steinbruckner, F. and Lewerentz, C.},
  title = {Metrics based refactoring},
  booktitle = {Proceedings {Fifth} {European} {Conference} on {Software} {Maintenance} and {Reengineering}},
  pages = {30--38},
  year = {2001},
  doi = {10.1109/CSMR.2001.914965},
  abstract = {Refactoring is one key issue to increase internal software quality during the whole software lifecycle. Since identifying structures where refactorings should be applied often is explained with subjective perceptions like "bad taste" or "bad smell", an automatic refactoring location finder seems difficult. We show that a special kind of metrics can support these subjective perceptions and thus can be used as an effective and efficient way to get support for the decision of where to apply refactoring. Due to the fact that the software developer is the last authority, we provide powerful and metrics based software visualisation to support the developers in judging their products. The authors demonstrate this approach for four typical refactorings and present both a tool supporting the identification and case studies of its application.},
  file = {IEEE Xplore Abstract Record:/home/anquetil/Zotero/storage/IY3MCFKZ/914965.html:text/html;IEEE Xplore Full Text PDF:/home/anquetil/Zotero/storage/IFGSQLJA/Simon et al. - 2001 - Metrics based refactoring.pdf:application/pdf},
  keywords = {software quality, Visualization, software maintenance, Application software, Software systems, program visualisation, Humans, object-oriented programming, software metrics, Software quality, systems re-engineering, automatic refactoring location finder, case studies, internal software quality, metrics based refactoring, metrics based software visualisation, software developer, software lifecycle, subjective perceptions, Systems engineering and theory},
  month = mar}

@article{Simo02a,
  author = {Anthony J. H. Simons},
  title = {The Theory of Classification, Part 1: Perspectives on Type Compatibility},
  journal = {Journal of Object Technology},
  volume = {1},
  pages = {55--61},
  year = {2002},
  misc = {May-June},
  month = may,
  number = {1}}

@article{Simo02b,
  author = {Anthony J. H. Simons},
  title = {The Theory of Classification, Part 2: The Scratch-Built Typechecker},
  journal = {Journal of Object Technology},
  volume = {1},
  pages = {47--54},
  year = {2002},
  misc = {July-August},
  month = jul,
  number = {2}}

@article{Simo02c,
  author = {Anthony J. H. Simons},
  title = {The Theory of Classification, Part 3: Object Encodings and Recursion},
  journal = {Journal of Object Technology},
  volume = {1},
  pages = {49--57},
  year = {2002},
  misc = {September-October},
  month = sep,
  number = {4}}

@article{Simo02d,
  author = {Anthony J. H. Simons},
  title = {The Theory of Classification, Part 4: Object Types and Subtyping},
  journal = {Journal of Object Technology},
  volume = {1},
  pages = {27--35},
  year = {2002},
  misc = {November-December},
  month = nov,
  number = {5}}

@article{Simo03a,
  author = {Anthony J. H. Simons},
  title = {The Theory of Classification, Part 5: Axioms, Assertions and Suptyping},
  journal = {Journal of Object Technology},
  volume = {2},
  pages = {13--21},
  year = {2003},
  misc = {January-February},
  month = jan,
  number = {1}}

@article{Simo03b,
  author = {Anthony J. H. Simons},
  title = {The Theory of Classification, Part 6: The Subtyping Inquisition},
  journal = {Journal of Object Technology},
  volume = {2},
  pages = {17--26},
  year = {2003},
  misc = {March-April},
  month = mar,
  number = {2}}

@article{Simo03c,
  author = {Anthony J. H. Simons},
  title = {The Theory of Classification, Part 7: A Class is a Type Family},
  journal = {Journal of Object Technology},
  volume = {2},
  pages = {13--22},
  year = {2003},
  misc = {May-June},
  month = may,
  number = {3}}

@article{Simo03d,
  author = {Anthony J. H. Simons},
  title = {The Theory of Classification, Part 8: Classification and Inheritance},
  journal = {Journal of Object Technology},
  volume = {2},
  pages = {55--64},
  year = {2003},
  misc = {July-August},
  month = jul,
  number = {4}}

@inproceedings{Simo06a,
  author = {Doug Simon and Cristina Cifuentes and Dave Cleal and John Daniels and Derek White},
  title = {{Java} on the bare metal of wireless sensor devices: the {Squawk} {Java} virtual machine},
  booktitle = {VEE '06: Proceedings of the 2nd international conference on Virtual execution environments},
  pages = {78--88},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1134760.1134773},
  address = {New York, NY, USA},
  isbn = {1-59593-332-6},
  location = {Ottawa, Ontario, Canada}}

@inproceedings{Simo06b,
  author = {Charles Simonyi and Magnus Christerson and Shane Clifford},
  title = {Intentional software},
  booktitle = {OOPSLA '06: Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications},
  pages = {451--464},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1167473.1167511},
  isbn = {1-59593-348-4},
  location = {Portland, Oregon, USA}}

@phdthesis{Simo76a,
  author = {Charles Simonyi},
  title = {Meta-Programming: A Software Production Method},
  year = {1976},
  school = {XEROX PARC},
  month = dec}

@article{Simo94a,
  author = {A.J.H. Simons and L.E. Kwang},
  title = {An Optimizing delivery System for Object-Oriented Software},
  journal = {Object-Oriented Systems},
  volume = {1},
  pages = {21--44},
  publisher = {Chapman \& Hall},
  year = {1994},
  month = dec,
  number = {1}}

@inproceedings{Simo98a,
  author = {Anthony Simons and A.J.H. Simons and I.M. Graham},
  title = {37 Things That Don't Work in Object Modelling with {UML}},
  booktitle = {Proc. 2nd. ECOOP Workshop on Precise Behavioural Semantics},
  year = {1998},
  editor = {H. Kilov and B. Rumpe}}

@phdthesis{Simp96a,
  author = {Loren Taylor Simpson},
  title = {Value-Driven Redundancy Elimination},
  year = {1996},
  school = {Rice University},
  url = {citeseer.ist.psu.edu/66713.html},
  month = may,
  number = {TR98-308}}

@inproceedings{Sind07a,
  author = {Sindhgatta, Renuka and Pooloth, Krishnakumar},
  title = {Identifying Software Decompositions by Applying Transaction Clustering on Source Code},
  booktitle = {COMPSAC '07: Proceedings of the 31st Annual International Computer Software and Applications Conference},
  pages = {317--326},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/COMPSAC.2007.126},
  address = {Washington, DC, USA},
  isbn = {0-7695-2870-8}}

@inproceedings{Sing05a,
  author = {Janice Singer and Robert Elves and Margaret-Anne Storey},
  title = {{NavTracks}: Supporting Navigation in Software Maintenance},
  booktitle = {International Conference on Software Maintenance ({ICSM}'05)},
  pages = {325--335},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/ICSM.2005.66},
  address = {Washington, DC, USA},
  isbn = {0-7695-2368-4},
  month = {sep}}

@inproceedings{Sing07,
  author = {Singer, Jeremy and Brown, Gavin and Watson, Ian and Cavazos, John},
  title = {Intelligent selection of application-specific garbage collectors},
  booktitle = {Proceedings of the 6th international symposium on Memory management},
  pages = {91--102},
  year = {2007}}

@inproceedings{Sing08a,
  author = {Jeremy Singer and Chris Kirkham},
  title = {Exploiting the Correspondence between Micro Patterns and Class Names},
  booktitle = {International Working Conference on Source Code Analysis and Manipulation},
  publisher = {IEEE},
  year = {2008}}

@article{Sing11,
  author = {Singer, Jeremy and Kovoor, George and Brown, Gavin and Luj{\'a}n, Mikel},
  title = {Garbage collection auto-tuning for java mapreduce on multi-cores},
  journal = {ACM SIGPLAN Notices},
  volume = {46},
  pages = {109--118},
  publisher = {ACM New York, NY, USA},
  year = {2011},
  number = {11}}

@article{Sing94a,
  author = {Singh, Ghan Bir},
  title = {Single Versus Multiple Inheritance in Object Oriented Programming},
  journal = {SIGPLAN OOPS Mess.},
  volume = {5},
  pages = {34--43},
  publisher = {ACM},
  year = {1994},
  url = {http://doi.acm.org/10.1145/182078.182085},
  doi = {10.1145/182078.182085},
  acmid = {182085},
  address = {New York, NY, USA},
  issn = {1055-6400},
  month = jan,
  number = {1},
  numpages = {10}}

@phdthesis{Sing96a,
  author = {Vivek P. Singhal},
  title = {A Programming Language for Writing Domain-Specific Software System Generators},
  year = {1996},
  school = {University of Texas at Austin},
  month = sep}

@book{Siob05,
  author = {Siobh\'{a}n Clarke and Elisa Baniassad},
  title = {Aspect-Oriented Analysis and Design. The Theme Approach.},
  publisher = {Addison-Wesley},
  year = {2005},
  isbn = {0-321-24674-8}}

@article{Sita94a,
  author = {Murali Sitaraman and Bruce Weide},
  title = {Component-based software using {RESOLVE}},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {19},
  pages = {21--22},
  publisher = {ACM Press},
  year = {1994},
  doi = {10.1145/190679.199221},
  issn = {0163-5948},
  number = {4}}

@proceedings{Sita96a,
  title = {Software Reuse},
  booktitle = {Fourth International Conference on Software Reuse},
  publisher = {IEEE},
  year = {1996},
  address = {Orlando, Florida},
  editor = {Murali Sitarama},
  isbn = {0-8186-7301-X},
  month = apr}

@article{Siva20a,
  title={Retrofitting parallelism onto ocaml},
  author={Sivaramakrishnan, KC and Dolan, Stephen and White, Leo and Jaffer, Sadiq and Kelly, Tom and Sahoo, Anmol and Parimala, Sudha and Dhiman, Atul and Madhavapeddy, Anil},
  journal={Proceedings of the ACM on Programming Languages},
  volume={4},
  number={ICFP},
  pages={1--30},
  year={2020},
  publisher={ACM New York, NY, USA}
}

@techreport{Sivi97a,
  author = {Sivilotti, Paolo A.G. and Chandy, K. Mani},
  title = {{A Distributed Infrastructure for Software Component Technology}},
  year = {1997},
  url = {http://www.cis.ohio-state.edu/~paolo/research/cs-tr-97-32.ps},
  institution = {California Institute of Technology, Pasadena},
  month = sep}

@inproceedings{Siy08a,
  author = {Siy, Harvey and Chundi, Parvathi and Subramaniam, Mahadevan},
  title = {Summarizing developer work history using time series segmentation: challenge report},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {137--140},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370784},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@article{Sjob93a,
  author = {Sj{\o}berg, Dag},
  title = {Quantifying schema evolution},
  journal = {Information and Software Technology},
  volume = {35},
  pages = {35--44},
  year = {1993},
  number = {1}}

@inproceedings{Skar86a,
  author = {Andrea H. Skarra and Stanley B. Zdonik},
  title = {The Management of Changing Types in an Object-Oriented Database},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {483--495},
  year = {1986},
  month = nov}

@incollection{Skar87a,
  author = {Andrea H. Skarra and Stanley B. Zdonik},
  title = {The Management of Changing Types in an Object-Oriented Database},
  booktitle = {Research Directions in Object-Oriented Programming},
  pages = {393--415},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  editor = {B. Shriver and P. Wegner}}

@article{Skog03a,
  author = {Tobias Skog and Sara Ljungblad and Lars Erik Holmquist},
  title = {Between Aesthetics and Utility: Designing Ambient Information Visualizations},
  journal = {2003 IEEE Symposium on Information Visualization},
  pages = {30},
  publisher = {IEEE Computer Society},
  year = {2003},
  doi = {10.1109/INFVIS.2003.1249031},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7695-2055-3}}

@inproceedings{Skou14a,
  author = {Skoulis, Ioannis and Vassiliadis, Panos and Zarras, Apostolos},
  title = {Open-source databases: Within, outside, or beyond lehman's laws of software evolution?},
  booktitle = {International Conference on Advanced Information Systems Engineering},
  pages = {379--393},
  year = {2014},
  organization = {Springer}}

@article{Skyr08a,
  author = {Alexandre Skyrme and Noemi de La Rocque Rodriguez and Roberto Ierusalimschy},
  title = {Exploring Lua for Concurrent Programming},
  journal = {J. Univers. Comput. Sci.},
  volume = {14},
  pages = {3556--3572},
  year = {2008},
  url = {https://doi.org/10.3217/jucs-014-21-3556},
  doi = {10.3217/jucs-014-21-3556},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl = {https://dblp.org/rec/journals/jucs/SkyrmeRI08.bib},
  number = {21},
  timestamp = {Wed, 17 Feb 2021 08:58:30 +0100}}

@inproceedings{Slat19a,
  author = {Jack Slater and Craig Anslow and Jens Dietrich and Leonel Merino},
  title = {CorpusVis - Visualizing Software Metrics at Scale},
  booktitle = {{VISSOFT}'19: Proceedings of the 7th IEEE Working Conference on Software Visualization},
  publisher = {IEEE},
  year = {2019},
  abstract = {We do not know fully understand how software violates metrics based principles, particularly in large systems. Systems are restricted by structural and static deficiencies that we can aim to reduce by providing developers with effective visualizations of their code. We developed CorpusVis a widget- based application to explore software metrics of Java software systems from the Qualitas Corpus. Through an evaluation of the visualization techniques we identified what visualizations were effective and which ones did not scale well for large software systems. Our application helps to reduce the structural and static deficiencies in developers code which enables developers to spend less time maintaining legacy systems and learn to develop more effective code for future systems.},
  annote = {internationalconference}}

@misc{Slate,
  title = {Slate},
  key = {Slate},
  note = {\url{http://slate.tunes.org}}}

@inproceedings{Sliw05a,
  author = {Jacek \'{Sliwerski} and Thomas Zimmermann and Andreas Zeller},
  title = {When Do changes Induce Fixes?},
  booktitle = {Proceedings of International Workshop on Mining Software Repositories --- MSR'05},
  publisher = {ACM Press},
  year = {2005},
  address = {Saint Lous, Missouri, USA}}

@book{Sloc05a,
  author = {Terry A. Slocum and Robert B. McMaster and Fritz C. Kessler and Hugh H. Howard},
  title = {Thematic Carthography and Geographic Visualization},
  publisher = {Pearson Prentice Hall},
  year = {2005},
  address = {Upper Saddle River, New Jersey},
  isbn = {0-13-035123-7}}

@inproceedings{Slom01a,
  author = {A. Slominski and M. Govindaraju and D. Gannon and R. Bramley},
  title = {Design of an XML based Interoperable RMI System: SoapRMI C++/Java 1.1},
  booktitle = {In Proceedings of PDPTA'01},
  pages = {1661--1667},
  year = {2001},
  month = jun}

@inproceedings{SmLP06a,
  author = {Padioleau, Yoann and Lawall, Julia L. and Muller, Gilles},
  title = {Understanding collateral evolution in Linux device drivers},
  booktitle = {EuroSys '06: Proceedings of the 1st ACM SIGOPS/EuroSys European Conference on Computer Systems 2006},
  pages = {59--71},
  publisher = {ACM},
  year = {2006},
  doi = {/10.1145/1217935.1217942},
  address = {New York, NY, USA},
  isbn = {1-59593-322-0},
  location = {Leuven, Belgium}}

@inproceedings{SmLP06b,
  author = {Padioleau, Yoann and Hansen, Ren\'{e} Rydhof and Lawall, Julia L. and Muller, Gilles},
  title = {Semantic patches for documenting and automating collateral evolutions in Linux device drivers},
  booktitle = {PLOS '06: Proceedings of the 3rd workshop on Programming languages and operating systems},
  pages = {10},
  publisher = {ACM},
  year = {2006},
  doi = {/10.1145/1215995.1216005},
  address = {New York, NY, USA},
  isbn = {1-59593-577-0},
  location = {San Jose, California}}

@inproceedings{SmPL08a,
  author = {Padioleau, Y. and Lawall, J. and Muller, G.},
  title = {Documenting and automating collateral evolutions in linux device drivers},
  booktitle = {Proceedings of the 3rd SIGOPS/EuroSys European Conference on Computer Systems},
  pages = {247--260},
  publisher = {ACM},
  year = {2008},
  series = {EuroSys'08}}

@misc{SmaCC,
  author = {John Brant and Don Roberts},
  title = {{SmaCC}, a {Smalltalk} {Compiler}-{Compiler}},
  url = {http://www.refactory.com/Software/SmaCC/},
  key = {SmaCC},
  note = {http://www.refactory.com/Software/SmaCC/}}

@inproceedings{Smar00a,
  author = {Yannis Smaragdakis and Don Batory},
  title = {Mixin-Based Programming in {C}++},
  booktitle = {2nd Symposium on Generative and Component-Based Software Engineering (GCSE 2000)},
  year = {2000},
  address = {Erfurt, Germany}}

@article{Smar02a,
  author = {Yannis Smaragdakis and Don Batory},
  title = {Mixin layers: an object-oriented implementation technique for refinements and collaboration-based designs},
  journal = {ACM TOSEM},
  volume = {11},
  pages = {215--255},
  year = {2002},
  url = {http://www.cs.utexas.edu/users/schwartz/pub.htm ftp://ftp.cs.utexas.edu/pub/predator/layers.pdf},
  doi = {10.1145/505145.505148},
  month = apr,
  number = {2}}

@inproceedings{Smar02b,
  author = {Yannis Smaragdakis},
  title = {Layered Development with ({Unix}) Dynamic Libraries},
  booktitle = {Proceedings ICSR 2002},
  volume = {2319},
  pages = {33--45},
  publisher = {Springer},
  year = {2002},
  editor = {Cristina Gacek},
  isbn = {3-540-43483-6},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Smar98a,
  author = {Yannis Smaragdakis and Don Batory},
  title = {Implementing Layered Design with Mixin Layers},
  booktitle = {Proceedings ECOOP '98},
  volume = 1445,
  pages = {550--570},
  year = {1998},
  address = {Brussels, Belgium},
  editor = {Eric Jul},
  month = jul,
  series = {LNCS}}

@inproceedings{Smar98b,
  author = {Yannis Smaragdakis and Don Batory},
  title = {Implementing Reusable Object-Oriented Components},
  booktitle = {5th International Conference on Software Reuse},
  year = {1998},
  address = {Victoria, Canada},
  month = jun}

@inproceedings{Smart16a,
  author = {Samarthyam, Ganesh and Suryanarayana, Girish and Sharma, Tushar},
  title = {Refactoring for software architecture smells},
  booktitle = {Proceedings of the 1st International Workshop on Software Refactoring},
  pages = {1--4},
  year = {2016}}

@misc{SmartBuilding,
  author = {UC Berkeley},
  title = {Smart Building Admit Their Faults},
  year = {2001},
  url = {http://www.coe.berkeley.edu/labnotes/1101smartbuildings.html},
  note = {Research from the College of Engineering: http://www.coe\-.berkeley.edu\-/labnotes\-/\-1101smartbuildings\-.html}}

@misc{SmartDust,
  title = {Smart Dust},
  url = {http://www-bsac.eecs.berkeley.edu/archive/users/warneke-brett/SmartDust/index.html},
  key = {Smart Dust},
  note = {http://www-bsac.eecs.berkeley.edu/archive/users/warneke-brett/SmartDust/index.html}}

@mastersthesis{Smed09a,
  author = {Gideon Joachim Smeding},
  title = {An executable operational semantics for Python},
  year = {2009},
  school = {University of Utrecht - Center for Software Technology},
  type = {Master thesis}}

@incollection{Smia10a,
  author = {\'{S}mia{\l}ek, Micha{\l} and Kalnins, Audris and Kalnina, Elina and Ambroziewicz, Albert and Straszak, Tomasz and Wolter, Katharina},
  title = {Comprehensive System for Systematic Case-Driven Software Reuse},
  chapter = {58},
  booktitle = {SOFSEM 2010: Theory and Practice of Computer Science},
  volume = {5901},
  pages = {697--708},
  publisher = {Springer Berlin Heidelberg},
  year = {2010},
  doi = {10.1007/978-3-642-11266-9_58},
  abstract = {Reuse of software artifacts (blueprints and code) is
normally associated with organising a systematic
reuse framework most often constructed for a
specific problem domain. In this paper we present a
system (language, tool, reuse process) where
software reuse is based on building and retrieving
of so-called software cases (large compound
artifacts) that can be reused between domains. The
system is opportunistic in that software cases
result from usual (non-reuse oriented) activities
where also semantic information is added. This
information is used to support regular development
but may serve later to retrieve software cases.
Having this common semantic basis, we can organise a
systematic cross-domain reuse process where
application logic of one system can be reused for
systems within different domains.},
  address = {Berlin, Heidelberg},
  citeulike-article-id = {6776167},
  editor = {Leeuwen, Jan and Muscholl, Anca and Peleg, David and Pokorn\'{y}, Jaroslav and Rumpe, Bernhard},
  isbn = {978-3-642-11265-2}}

@inproceedings{Smit00a,
  author = {Raymond Smith and Bogdan Korel},
  title = {Slicing Event Traces of Large Software Systems},
  booktitle = {AADebug 2000 International Workshop on Automated Debugging},
  year = {2000},
  note = {Demo}}

@inproceedings{Smit00b,
  author = {Frederick Smith and David Walker and J. Gregory Morrisett},
  title = {Alias Types},
  booktitle = {ESOP '00: Proceedings of the 9th European Symposium on Programming Languages and Systems},
  pages = {366--381},
  publisher = {Springer-Verlag},
  year = {2000},
  url = {http://www.it-c.dk/people/birkedal/teaching/rar-seminar-Fall-2001/papers/alias.ps.gz},
  address = {London, UK},
  isbn = {3-540-67262-1}}

@book{Smit00c,
  author = {Graeme Smith},
  title = {The Object-Z Specification Language},
  publisher = {Kluwer Academic Publishers},
  year = {2000}}

@inproceedings{Smit02a,
  author = {Michael P. Smith and Malcolm Munro},
  title = {Runtime Visualisation of Object Oriented Software},
  booktitle = {Proceedings of the 1st International Workshop on Visualizing Software for Understanding and Analysis},
  pages = {81},
  publisher = {IEEE Computer Society},
  year = {2002},
  isbn = {0-7695-1662-9}}

@inproceedings{Smit03,
  author = {Smith, David A. and Alan Kay and Andreas Raab and David P. Reed},
  title = {Croquet, A Collaboration System Architecture},
  booktitle = {Proceedings of the First Conference on Creating, Connecting and Collaborating through Computing},
  pages = {2--9},
  year = {2003}}

@techreport{Smit03a,
  author = {Jason McC. Smith and David Stotts},
  title = {SPQR: Flexible Automated Design Pattern Extraction from Source Code},
  year = {2003},
  institution = {Department of Computer Science, University of North Carolina, Chapel Hill, USA},
  month = may,
  type = {TR03-016}}

@inproceedings{Smit05a,
  author = {Charles Smith and Sophia Drossopoulou},
  title = {Chai: Typed Traits in {Java}},
  booktitle = {Proceedings ECOOP 2005},
  year = {2005}}

@book{Smit05b,
  author = {James E. Smith and Ravi Nair},
  title = {Virtual Machines},
  publisher = {Morgan Kaufmann},
  year = {2005},
  isbn = {1-55860-910-5}}

@inproceedings{Smit05c,
  author = {Smith and Munro},
  title = {Identifying Structural Features of Java Programs by Analysing the Interaction of Classes at Runtime},
  booktitle = {VISSOFT},
  publisher = {IEEE CS},
  year = {2005},
  month = sep}

@article{Smit77a,
  author = {J.M. Smith and D.C.P. Smith},
  title = {Database Abstractions: Aggregation},
  journal = {CACM},
  volume = {20},
  pages = {405--413},
  year = {1977},
  month = jun,
  number = {6}}

@article{Smit77b,
  author = {J.M. Smith and D.C.P. Smith},
  title = {Database abstractions: Aggregation and Generalization},
  journal = {ACM TODS},
  volume = {2},
  pages = {105--133},
  year = {1977},
  month = jun,
  number = {2}}

@article{Smit82a,
  author = {D.C.S. Smith and C. Irby and R. Kimball and B. Verplank and E. Harlem},
  title = {Designing the Star User Interface},
  journal = {Byte},
  volume = {7},
  pages = {242--282},
  year = {1982},
  month = apr,
  number = {4}}

@inproceedings{Smit82b,
  author = {D.C.S. Smith and C. Irby and R. Kimball and E. Harslam},
  title = {The Star User Interface: An Overview},
  booktitle = {Proceedings AFIPS National Computer Conference},
  volume = {51},
  pages = {515--528},
  year = {1982},
  month = jun}

@phdthesis{Smit82c,
  author = {Brian Cantwell Smith},
  title = {Reflection and Semantics in a Procedural Language},
  year = {1982},
  school = {MIT},
  url = {http://repository.readscheme.org/ftp/papers/bcsmith-thesis.pdf},
  address = {Cambridge, MA},
  number = {TR-272},
  type = {{Ph.D}. Thesis}}

@inproceedings{Smit83a,
  author = {Reid G. Smith},
  title = {Strobe: Support for Structured Object Knowledge Representation},
  booktitle = {Proceedings of the Eighth International Joint Conference on Artificial Intelligence},
  volume = {2},
  pages = {855--858},
  year = {1983},
  month = aug}

@inproceedings{Smit84a,
  author = {Brian Cantwell Smith},
  title = {Reflection and Semantics in {L}isp},
  booktitle = {Proceedings of {POPL}'84},
  pages = {23--3},
  year = {1984},
  doi = {10.1145/800017.800513},
  isbn = {0897911253}}

@inproceedings{Smit86a,
  author = {Reid G. Smith and Rick Dinitz and Paul Barth},
  title = {Impulse-86: {A} Substrate for Object-Oriented Interface Design},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {167--176},
  year = {1986},
  month = nov}

@inproceedings{Smit87a,
  author = {Karen E. Smith and Stanley B. Zdonik},
  title = {Intermedia: {A} Case Study of the Differences Between Relational and Object-Oriented Database Systems},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {452--465},
  year = {1987},
  month = dec}

@article{Smit87b,
  author = {Randall B. Smith},
  title = {Experiences with the alternate reality kit: an example of the tension between literalism and magic},
  journal = {SIGCHI Bull.},
  volume = {17},
  pages = {61--67},
  publisher = {ACM},
  year = {1987},
  doi = {10.1145/30851.30861},
  address = {New York, NY, USA},
  issn = {0736-6906},
  number = {SI}}

@inproceedings{Smit94a,
  author = {Walter R.Smith},
  title = {The Newton Application Architecture},
  booktitle = {Proceedings of the 39th IEEE Computer Society International Conference},
  pages = {156--161},
  year = {1994},
  month = jun}

@inproceedings{Smit95a,
  author = {Randall B. Smith and David Ungar},
  title = {Programming as an Experience: The Inspiration for Self},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {303--330},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@book{Smit95b,
  author = {David N. Smith},
  title = {{Smalltalk} the Language},
  publisher = {Benjamin/Cummings Publishing},
  year = {1995},
  isbn = {0-8053-0908-X}}

@inproceedings{Smit95c,
  author = {W.R. Smith},
  title = {Using a Prototype-based Language for User Interface: The Newton Project's Experience},
  booktitle = {Proceedings of OOPSLA '95},
  pages = {61--73},
  year = {1995},
  month = oct,
  organization = {ACM}}

@article{Smit96a,
  author = {Randall B. Smith and Dave Ungar},
  title = {A Simple and Unifying Approach to Subjective Objects},
  journal = {TAPOS special issue on Subjectivity in Object-Oriented Systems},
  volume = {2},
  pages = {161--178},
  year = {1996},
  doi = {10.1002/(SICI)1096-9942(1996)2:3<161::AID-TAPO3>3.0.CO;2-Z},
  number = {3}}

@phdthesis{Smit97a,
  author = {David Canfield Smith},
  title = {Pygmalion: a creative programming environment},
  year = {1975},
  school = {Stanford University},
  address = {Stanford, CA, USA},
  order_no = {AAI7525608}}

@article{Smit97b,
  author = {Smith, Randall B. and Wolczko, Mario and Ungar, David},
  title = {From Kansas to Oz: collaborative debugging when a shared world breaks},
  journal = {Commun. ACM},
  volume = {40},
  pages = {72--78},
  publisher = {ACM},
  year = {1997},
  url = {http://doi.acm.org/10.1145/248448.248461},
  doi = {10.1145/248448.248461},
  acmid = {248461},
  address = {New York, NY, USA},
  issn = {0001-0782},
  month = apr,
  number = {4},
  numpages = {7}}

@inproceedings{Smith01a,
  author = {S. Smith and G. Meszaros},
  title = {Increasing the Effectiveness of Automated Testing},
  booktitle = {Proceedings of the Third XP and Second Agile Universe Conference},
  pages = {88--91},
  year = {2001}}

@book{Smith20a,
  author = {Smith, J.},
  title = {Object-Oriented Programming: Understanding Classes for Software Development},
  publisher = {ABC Publications},
  year = {2020}}

@techreport{Smol01a,
  author = {Smolander and Hoikka and Isokallio and Kataikko and M{\"a}kel{\"a} and K{\"a}lvi{\"a}inen},
  title = {Required and Optional Viewpoints --- What Is Included in Software Architecture?},
  year = {2001},
  institution = {Univ. Lappeenranta}}

@techreport{Smol89a,
  author = {Gert Smolka},
  title = {Feature Constraint Logics for Unification Grammars},
  year = {1989},
  address = {Stuttgart},
  institution = {IBM Germany},
  month = nov,
  note = {To appear in Journal of Logic Programming},
  number = {93},
  type = {IWBS Report}}

@inproceedings{Smol94a,
  author = {Gert Smolka},
  title = {A Foundation for Higher-Order Concurrent Constraint Programming},
  booktitle = {Proceedings of Constraints in Computational Logics},
  volume = {845},
  pages = {50--72},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {J.-P. Jouannaud},
  note = {Available as Research Report RR-94-16 from DFKI Kaiserslautern},
  series = {LNCS}}

@unpublished{Smol95a,
  author = {Gert Smolka},
  title = {A Survey of Oz},
  year = {1995},
  misc = {January 24},
  month = jan,
  note = {German Research Center for Artificial Intelligence (DFKI)},
  type = {Draft}}

@book{Smol95b,
  author = {Gert Smolka},
  title = {An Oz Primer},
  publisher = {DFKI Oz Documentation Series},
  year = {1995},
  url = {http://www.mozart-oz.org/index.html},
  month = feb}

@incollection{Smol95c,
  author = {Gert Smolka},
  title = {The {Oz} Programming Model},
  booktitle = {Computer Science Today},
  volume = 1000,
  pages = {324--343},
  publisher = {Springer-Verlag},
  year = {1995},
  url = {http://www.mozart-oz.org/papers/},
  address = {Berlin},
  editor = {Jan van Leeuwen},
  series = {LNCS}}

@book{Smul82a,
  author = {Raymond Smullyan},
  title = {The Lady or the Tiger? and other Logic Puzzles},
  publisher = {Oxford},
  year = {1982}}

@book{Snea73a,
  author = {P.H.A. Sneath and R.R. Sokal},
  title = {Numerical Taxonomy: The Principles and Practice of Numerical Classification},
  publisher = {W. H. Freeman and Company},
  year = {1973},
  address = {San Francisco}}

@inproceedings{Snee04a,
  author = {Sneed, H.M.},
  title = {A cost model for software maintenance \& evolution},
  booktitle = {Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on},
  pages = {264-273},
  year = {2004},
  doi = {10.1109/ICSM.2004.1357810},
  issn = {1063-6773},
  month = {sep}}

@inproceedings{Snee06a,
  author = {Sneed, Harry M and others},
  title = {Wrapping legacy software for reuse in a SOA},
  booktitle = {Multikonferenz Wirtschaftsinformatik},
  volume = {2},
  pages = {345--360},
  year = {2006}}

@article{Snee11a,
  author = {Sneed, H},
  title = {Migrating from COBOL to Java--A Report from the Field},
  journal = {IEEE Proc. of 26th ICSM, Computer Society Press, Temesvar, Ro},
  pages = {122},
  year = {2011}}

@article{Snee20a,
  author = {Sneed, Harry M and Verhoef, Chris},
  title = {Cost-driven software migration: An experience report},
  journal = {Journal of Software: Evolution and Process},
  pages = {e2236},
  publisher = {Wiley Online Library},
  year = {2020}}

@incollection{Snee20b,
  author = {Sneed, Harry M and Verhoef, Chris},
  title = {From COBOL to Business Rules - Extracting Business Rules from Legacy Code},
  booktitle = {Integrating Research and Practice in Software Engineering},
  pages = {187--208},
  publisher = {Springer},
  year = {2020}}

@inproceedings{Snee96,
  author = {Sneed, Harry M},
  title = {Object-oriented cobol recycling},
  booktitle = {Proceedings of WCRE'96: 4rd Working Conference on Reverse Engineering},
  pages = {169--178},
  year = {1996},
  organization = {IEEE}}

@inproceedings{Snee99a,
  author = {Harry M. Sneed},
  title = {Risks Involved in Reengineering Projects},
  booktitle = {Proceedings of the 6th Working Conference on Reverse Engineering ({WCRE})},
  publisher = {IEEE},
  year = {1999}}

@inproceedings{Snel00a,
  author = {Gregor Snelting},
  title = {Software Reengineering Based on Concept Lattices},
  booktitle = {Proceedings 4th European Conference on Software Maintenance and Reengineeering},
  pages = {3--12},
  year = {2000},
  url = {http://citeseer.nj.nec.com/snelting00software.html},
  organization = {IEEE}}

@article{Snel00b,
  author = {Gregor Snelting and Frank Tip},
  title = {Understanding {Class} {Hierarchies} {Using} {Concept} {Analysis}},
  journal = {ACM Trans. on Programming Languages and Systems},
  pages = {540--582},
  year = {2000},
  month = may}

@article{Snel96a,
  author = {Gregor Snelting},
  title = {Reengineering of {Configurations} {Based} on {Mathematical} {Concept} {Analysis}},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {5},
  pages = {146--189},
  year = {1996},
  month = apr,
  number = {2}}

@techreport{Snel97a,
  author = {Gregor Snelting and Frank Tip},
  title = {Reengineering {Class} {Hierarchies} using {Concept} {Analysis}},
  year = {1997},
  url = {http://citeseer.nj.nec.com/snelting98reengineering.html},
  address = {IBM T.J. Watson Research Center, P.O. Box 704, Yorktown Heights, NY 10598, USA},
  institution = {{IBM} T.J. Watson Research Center},
  number = {RC 21164(94592)24APR97}}

@inproceedings{Snel98a,
  author = {Gregor Snelting and Frank Tip},
  title = {Reengineering {Class} {Hierarchies} using {Concept} {Analysis}},
  booktitle = {ACM Trans. Programming Languages and Systems},
  year = {1998}}

@inproceedings{Snel98b,
  author = {Gregor Snelting},
  title = {Concept {Analysis} --- A {New} {Framework} for {Program} {Understanding}},
  booktitle = {SIGPLAN/SIGSOFT Workshop on Program Analysis for Software Tools and Engineering (PASTE)},
  pages = {1--10},
  publisher = {ACM Press},
  year = {1998},
  address = {Montreal, Canada},
  month = jun}

@manual{Sniff96a,
  title = {SNiFF+},
  year = {1996},
  organization = {TakeFive Software GmbH}}

@article{Snod83a,
  author = {R. Snodgrass},
  title = {An Object-Oriented Command Language},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-9},
  pages = {1--8},
  year = {1983},
  month = jan,
  number = {1}}

@book{Snyd03a,
  author = {Carolyn Snyder},
  title = {Paper Prototyping},
  publisher = {Morgan Kaufmann},
  year = {2003},
  isbn = {1558608702}}

@phdthesis{Snyd79a,
  author = {Alan Snyder},
  title = {A Machine Architecture to Support an Object-Oriented Language},
  year = {1979},
  school = {MIT lab. for Computer sciences},
  number = {MIT/LCS/TR209},
  type = {{Ph.D}. Thesis}}

@inproceedings{Snyd86a,
  author = {Alan Snyder},
  title = {Encapsulation and Inheritance in Object-Oriented Programming Languages},
  booktitle = {Proceedings OOPSLA '86, ACM SIGPLAN Notices},
  volume = {21},
  pages = {38--45},
  year = {1986},
  doi = {10.1145/28697.28702},
  month = nov}

@article{Snyd86b,
  author = {Alan Snyder},
  title = {CommonObjects: An Overview},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {19--28},
  year = {1986},
  month = oct,
  number = {10}}

@incollection{Snyd87a,
  author = {Alan Snyder},
  title = {Inheritance and the Development of Encapsulated Software Systems},
  booktitle = {Research Directions in Object-Oriented Programming},
  pages = {165--188},
  publisher = {MIT Press},
  year = {1987}}

@article{Snyd91a,
  author = {Alan Snyder},
  title = {How to Get Your Paper Accepted at {OOPSLA}},
  journal = {ACM OOPS Messenger},
  volume = {2},
  pages = {2--7},
  year = {1991},
  month = jan,
  number = {1}}

@inproceedings{Snyd91b,
  author = {Alan Snyder},
  title = {Modeling the {C}++ Object Model, An Application of an Abstract Object Model},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {1--20},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@article{Snyd93a,
  author = {Alan Snyder},
  title = {The Essence of Objects: Concepts and Terms},
  journal = {IEEE Software (Special Issue on "Making O-O Work")},
  volume = {10},
  pages = {31--42},
  year = {1993},
  month = jan,
  number = {1}}

@inproceedings{Snyd93b,
  author = {Alan Snyder},
  title = {Open Systems for Software: An Object-Oriented Solution},
  booktitle = {ACM OOPS Messenger, Addendum to the Proceedings of OOPSLA 1993},
  volume = {5},
  pages = {67--68},
  year = {1994},
  month = apr}

@book{Soan01a,
  title = {Oxford Dictionary of Current English},
  publisher = {Oxford University Press},
  year = {2001},
  editor = {Catherine Soanes},
  month = jul}

@article{Soar10a,
  author = {Gustavo Soares and Rohit Gheyi and D. Serey and Tiago Massoni},
  title = {Making Program Refactoring Safer},
  journal = {{IEEE} Software},
  volume = {27},
  pages = {52--57},
  year = {2010},
  number = {4}}

@inproceedings{Sobe96a,
  author = {J.M. Sobel and Daniel P. Friedman},
  title = {An Introduction to Reflection-Oriented Programming},
  booktitle = {Proceedings of the 1st International Conference on Metalevel Architectures and Reflection (Reflection 96)},
  year = {1996},
  address = {San Francisco, USA},
  editor = {Gregor Kiczales},
  month = apr}

@inproceedings{Sobr08a,
  author = {Victor Sobreira and Marcelo de Almeida Maia},
  title = {A Visual Trace Analysis Tool for Understanding Feature Scattering},
  booktitle = {Proceedings of the 15th Working Conference on Reverse Engineering ({WCRE} 2008)},
  year = {2008}}

@inproceedings{Soch06a,
  author = {Periklis Sochos and Matthias Riebisch and Ilka Philippow},
  title = {The Feature-Architecture Mapping (FArM) Method for Feature-Oriented Development of Software Product Lines},
  booktitle = {Proceedings of International Symposium on Engineering of Computer Based Systems (ECBS'06)},
  pages = {308--318},
  publisher = {IEEE Computer Society},
  year = {2006}}

@inproceedings{Soet13a,
  author = {Soetens, Quinten David and Demeyer, Serge and Zaidman, Andy},
  title = {Change-based test selection in the presence of developer tests},
  booktitle = {Software Maintenance and Reengineering (CSMR), 2013 17th European Conference on},
  pages = {101--110},
  year = {2013},
  organization = {IEEE}}

@article{Soet15a,
  author = {Soetens, Quinten David and Demeyer, Serge and Zaidman, Andy and P{\'e}rez, Javier},
  title = {{Change-based Test Selection: An Empirical Evaluation}},
  journal = {Empirical Software Engineering},
  pages = {1--43},
  year = {2015},
  shorttitle = {Change-based test selection},
  timestamp = {2016-07-25T10:12:39Z},
  urldate = {2016-07-25}}

@article{Soet17a,
  author = {Soetens, Quinten David and Robbes, Romain and Demeyer, Serge},
  title = {Changes as first-class citizens: a research perspective on modern software tooling},
  journal = {ACM Computing Surveys},
  volume = {50},
  publisher = {ACM},
  year = {2017},
  doi = {10.1145/3038926}}

@misc{Sol17,
  author = {{Ethereum Foundation}},
  title = {Solidity Documentation Release 0.4.18},
  year = {2017},
  url = {https://media.readthedocs.org/pdf/solidity/develop/solidity.pdf}}

@misc{Sol18a,
  author = {{Ethereum Foundation}},
  title = {Solidity Documentation Release 0.4.24},
  year = {2018},
  url = {https://media.readthedocs.org/pdf/solidity/develop/solidity.pdf},
  keywords = {blockchain smart contracts}}

@inproceedings{Sola16a,
  author = {K. {Solanki} and S. {Kumari}},
  title = {Comparative study of software clone detection techniques},
  booktitle = {2016 Management and Innovation Technology International Conference (MITicon)},
  pages = {MIT-152-MIT-156},
  year = {2016},
  doi = {10.1109/MITICON.2016.8025227},
  keywords = {program debugging;software cost estimation;software maintenance;software reusability;source code (software);software clone detection;source code duplication;software reuse;software maintenance;system cost;maintenance cost;Cloning;Tools;Maintenance engineering;Measurement;Computer bugs;Software maintenance;Software Clones;Software clone Detection Techniques},
  month = {oct}}

@book{Sole90a,
  title = {Object Management Architecture Guide: Revision 3.0},
  publisher = {Object Management Group},
  year = {1995},
  address = {Frameington, MA},
  editor = {Richard Soley},
  month = jun}

@phdthesis{Solm05a,
  author = {Riccardo Solmi},
  title = {Whole Platform},
  year = {2005},
  school = {University of Bologna},
  url = {http://www.cs.unibo.it/pub/TR/UBLCS/2005/2005-07.pdf},
  month = mar}

@article{Solo86a,
  author = {E. Soloway and K. Ehrlich},
  title = {Empirical studies of programming knowledge},
  journal = {Readings in artificial intelligence and software engineering},
  pages = {507--521},
  publisher = {Morgan Kaufmann Publishers Inc.},
  year = {1986},
  address = {San Francisco, CA, USA},
  isbn = {0-934613-12-5}}

@article{Solo88a,
  author = {Elliot Soloway and Robin Lampert and Stan Letovsky and David Littman and Jeannine Pinto},
  title = {Designing {Documentation} to {Compensate} for {Delocalized} {Plans}},
  journal = {Commununications of ACM},
  volume = {31},
  pages = {1259--1267},
  publisher = {ACM Press},
  year = {1988},
  number = {11}}

@book{Somm00a,
  author = {Ian Sommerville},
  title = {Software Engineering},
  publisher = {Addison Wesley},
  year = {2000},
  edition = {Sixth}}

@book{Somm01,
  author = {Ian Sommerville},
  title = {Software Engineering (6th ed.)},
  publisher = {Addison-Wesley},
  year = {2001}}

@book{Somm92a,
  author = {Ian Sommerville},
  title = {Software Engineering},
  publisher = {Addison Wesley},
  year = {1992},
  edition = {Fourth},
  isbn = {0-201-56529-3}}

@proceedings{Somm93a,
  title = {{Proceedings of ESEC '93}},
  volume = {717},
  publisher = {Springer-Verlag},
  year = {1993},
  editor = {Ian Sommerville and Manfred Paul},
  isbn = {3-540-57209-0},
  series = {LNCS}}

@book{Somm96a,
  author = {Ian Sommerville},
  title = {Software Engineering},
  publisher = {Addison Wesley},
  year = {1996},
  edition = {Fifth},
  isbn = {0-201-42765-6}}

@book{Somm97a,
  author = {Sommerville, Iain and Sawyer, Peter},
  title = {Requirements engineering: a good practice guide},
  publisher = {John Wiley and Sons, Inc.},
  year = {1997}}

@inproceedings{Song06a,
  author = {Haitao Song and Yingyu Yin and Shixiong Zheng},
  title = {Dynamic Aspects Weaving in Service Composition},
  booktitle = {ISDA '06: Proceedings of the Sixth International Conference on Intelligent Systems Design and Applications (ISDA'06)},
  pages = {1003--1008},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/ISDA.2006.137},
  address = {Washington, DC, USA},
  isbn = {0-7695-2528-8}}

@inproceedings{Soni95a,
  author = {Dilip Soni and Robert L. Nord and Christine Hofmeister},
  title = {Software Architecture in Industrial Applications},
  booktitle = {Proceedings ICSE '95},
  pages = {196--207},
  publisher = {ACM Press},
  year = {1995},
  address = {Seattle},
  month = apr}

@article{Sonn95a,
  author = {Erik L.L. Sonnhammer and Richard Durbin},
  title = {A dot-matrix program with dynamic threshold control suited for genomic {DNA} and protein sequence analysis},
  journal = {Gene},
  volume = {167},
  pages = {1--10},
  publisher = {Elsevier},
  year = {1995},
  month = oct,
  summary = {This paper emphasizes the interactive features of the dotplot implementation. They integrate dotplots with other methods of sequence alignments, e.g. BLAST, superimposing the results in one display. The advantage of interaction is here that it allows exploration of the dotplot, since it may be that there is no optimal parameter setting which allows to find all the important sequence alignments. It may be that some of the alignments are only visible if there is still some background noise present. In their own words: "In cases like this, it is desirable to view the dot-plot under many different stringency conditions and be able to change them in a scrolling fashion." \fullcite{Sonn95}{4. Discussion}{9} They argue in favor of dotplots: * Graphical dot-matrix plots can provide the most complete and detailed comparison of two sequences. * Dotplots are best suited for homology analysis tasks involving weak and difficult to assess matches in both traditional protein or DNA comparisons and in more complex situations when genomic DNA is compared to proteins or DNA.}}

@misc{Sope02a,
  author = {Soper, P.},
  title = {JSR 121: Application Isolation {API} Specification. Java Specification Requests},
  year = {2002}}

@inproceedings{Sora15a,
  author = {{\c S}ora, Ioana},
  title = {Finding the right needles in hay helping program comprehension of large software systems},
  booktitle = {2015 International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)},
  pages = {129-140},
  year = {2015},
  month = {apr}}

@inproceedings{Sora15b,
  author = {{\c S}ora, Ioana},
  title = {Helping program comprehension of large software Systems by identifying their most important classes},
  booktitle = {2015 International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)},
  pages = {129-140},
  publisher = {Springer},
  year = {2015},
  month = {apr}}

@inproceedings{Sora16a,
  author = {{\c S}ora, Ioana and Todinca, Doru},
  title = {Using Fuzzy Rules for Identifying Key Classes in Software System},
  booktitle = {2016 International Symposium on Applied Computational Intelligence and Informatics},
  publisher = {IEEE},
  year = {2016}}

@article{Sora19a,
  author = {{\c S}ora, Ioana and Chirila, Ciprian-Bogdan},
  title = {Finding key classes in object-oriented software systems by techniques based on static analysis},
  journal = {Information and Software Technology},
  year = {2019},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584919301727},
  doi = {10.1016/j.infsof.2019.106176},
  issn = {0950-5849},
  keywords = {Key classes, Program comprehension, Static analysis}}

@inproceedings{Sorg88a,
  author = {P\o{a}l S{\/o}rgaard},
  title = {Object-Oriented Programming and Computerised Shared Material},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {319--334},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Sori02a,
  author = {Sorin, Daniel J and Martin, Milo MK and Hill, Mark D and Wood, David A},
  title = {SafetyNet: Improving the availability of shared memory multiprocessors with global checkpoint/recovery},
  booktitle = {Proceedings 29th Annual International Symposium on Computer Architecture},
  pages = {123--134},
  year = {2002},
  organization = {IEEE}}

@article{Soti95a,
  author = {Drasko Sotirovski and Philippe Kruchten},
  title = {Implementing Dialogue Independence},
  journal = {IEEE Software},
  volume = {12},
  pages = {61--70},
  year = {1995},
  month = nov,
  number = {6}}

@article{Soto21a,
  title={A comprehensive study of bloated dependencies in the maven ecosystem},
  author={Soto-Valero, C{\'e}sar and Harrand, Nicolas and Monperrus, Martin and Baudry, Benoit},
  journal={Empirical Software Engineering},
  volume={26},
  number={3},
  pages={45},
  year={2021},
  publisher={Springer}
}

@book{Souk94a,
  author = {Jiri Soukop},
  title = {Taming {C}++},
  publisher = {Addison Wesley},
  year = {1994},
  isbn = {0-201-52826-6}}

@incollection{Souk95a,
  author = {Jiri Soukop},
  title = {Implementing Patterns},
  booktitle = {Pattern Languages of Program Design},
  pages = {395--412},
  publisher = {Addison Wesley},
  year = {1995},
  editor = {J.O. Coplien and D.Schmidt}}

@unpublished{Sour96a,
  author = {Jean Louis Sourrouille and Jean Claude Commercon and Hugues Lecoeuche},
  title = {Assisting Object Behaviour Composition/Decomposition},
  year = {1996},
  note = {Draft, L3I: Laboratoire d'Ing\'enierie de l'Informatique Industrielle}}

@inproceedings{Sous99a,
  author = {Jo{\~a}n Pedro Sousa and David Garlan},
  title = {Formal Modeling of the Enterprise {JavaBeans} Component Integration Framework},
  booktitle = {Proceedings of FM '99},
  volume = {1709},
  publisher = {Springer Verlag},
  year = {1999},
  address = {Toulouse, France},
  month = sep,
  series = {LNCS}}

@inproceedings{Sout04a,
  author = {Eduardo Souto and Germano Guimares and Glauco Vasconcelos and Mardoqueu Vieira and Nelson Rosa and Carlos Ferraz},
  title = {A message-oriented middleware for sensor networks},
  booktitle = {MPAC '04: Proceedings of the 2nd workshop on Middleware for pervasive and ad-hoc computing},
  pages = {127--134},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/1028509.1028514},
  address = {New York, NY, USA},
  isbn = {1-58113-951-9},
  location = {Toronto, Ontario, Canada}}

@book{Souz99a,
  author = {Desmond F. D'Souza and Alan Cameron Wills},
  title = {Objects, Components and Frameworks with {UML}: The Catalysis Approach},
  publisher = {Addison Wesley},
  year = {1999},
  isbn = {0-201-31012-0}}

@article{Sowa92a,
  author = {Sowa, John F. and Zachman, John A.},
  title = {Extending and formalizing the framework for information systems architecture},
  journal = {IBM systems journal},
  volume = {31},
  pages = {590--616},
  publisher = {IBM},
  year = {1992},
  number = {3}}

@inproceedings{Spah88a,
  author = {Stephane Spahni and J{\"u}rgen Harms},
  title = {A Local Name Server for Organizational Message Handling Systems},
  booktitle = {Proceedings 1988 International Zurich Seminar on Digital Communications},
  pages = {239--246},
  publisher = {IEEE Cat. No. 88TH0202-2},
  year = {1988},
  misc = {March 8-10},
  month = mar}

@misc{Spark,
  author = {Apache},
  title = {Apache Spark},
  year = {2020},
  howpublished={\url{http://spark.apache.org/}},
  note = {Accessed: 2020-05-12}
}

@phdthesis{Spas16d,
  author = {Boris Spasojevi\'{c}},
  title = {Developing Ecosystem-aware Tools},
  year = {2016},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/spasojevic-phd.pdf},
  abstract = {Tool developers frequently leverage data from software ecosystems
	to improve their tools. Unfortunately, every developer has to
	build his own infrastructure to analyse the software ecosystem. This
	means identifying the scope of the ecosystem, obtaining the source
	code, extracting, storing and updating the data and so on.
	We argue that many of these tasks can be automated, freeing
	the developer to focus only on how to extract the needed ecosystem
	data and how to present it to the developer.
	To support our claim, we developed a framework for developing
	ecosystem-aware tools, tools that leverage data from the software
	ecosystem. This framework automates all routine steps of the process
	and leaves the developer to specify what data to extract from
	the ecosystem, and how to use it.
	To illustrate how this framework can be used for development
	of real-world ecosystem-aware tools we created four such tools using
	this framework. These tools are implementations of innovative
	approaches that improve the developer experience and were chosen
	to be diverse so as to illustrate the flexibility and features of the
	framework which is meant to support the needs of a broad range
	ecosystem-aware tools.
	The tools are individually evaluated and shown to be an improvement
	on the standard techniques, further supporting the notion that
	incorporating ecosystem data into the development process can be
	beneficial.},
  keywords = {scg-phd snf-asa2 scg16 jb17 skip-doi},
  medium = {2},
  month = dec,
  peerreview = {yes},
  type = {{PhD} thesis}}

@techreport{Spec04a,
  author = {Daria Spescha},
  title = {Software Composition Styles: Mixins for {Piccola}},
  year = {2004},
  url = {http://scg.unibe.ch/archive/projects/Spec04aMixinStyles.pdf},
  abstract = {Piccola is a language to compose software
components. It is designed to support different
composition styles. Furthermore, mixins and mixin
layers are a powerfull composition style. So it was
an interesting question if mixins and mixin layers
could be implemented with Piccola. To prove this I
first simulated the structure for mixins and then
implemented a small mixin layer library for graph
manipulation.},
  institution = {University of Bern},
  month = mar,
  type = {Informatikprojekt}}

@misc{Spec99a,
  author = {Standard Performance Evaluation Corporation},
  title = {SPEC jvm98 Documentation, release 1.03 edition},
  year = {1999},
  month = {mar}}

@book{Spen01a,
  author = {Robert Spence},
  title = {Information Visualization},
  publisher = {Adisson-Wesley},
  year = {2001}}

@inproceedings{Spie17,
  author = {Spieker, Helge and Gotlieb, Arnaud and Marijan, Dusica and Mossige, Morten},
  title = {Reinforcement Learning for Automatic Test Case Prioritization and Selection in Continuous Integration},
  booktitle = {Proceedings {ISSTA 2017} (the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis)},
  pages = {12--22},
  publisher = {ACM},
  year = {2017},
  doi = {10.1145/3092703.3092709},
  address = {New York, NY, USA},
  isbn = {978-1-4503-5076-1},
  location = {Santa Barbara, CA, USA},
  numpages = {11}}

@misc{Spielverderber,
  author = {Roland Pl\"uss and Philippe Marschall},
  title = {{Spielverderber}, an {Access} {Control} {List} ({ACL}) based security framework for {Pier}},
  year = {2005},
  url = {http://smallwiki.unibe.ch/advanceddesignlabs/admin/},
  key = {Spielverderber},
  note = {http://smallwiki.unibe.ch/advanceddesignlabs/admin/}}

@article{Spin00b,
  author = {Diomidis Spinellis},
  title = {Notable Design Patterns for Domain Specific Languages},
  journal = {Journal of Systems and Software},
  volume = 56,
  pages = {91--99},
  year = {2001},
  url = {http://www.spinellis.gr/pubs/jrnl/2000-JSS-DSLPatterns/html/dslpat.html},
  doi = {doi:10.1016/S0164-1212(00)00089-3},
  issn = {0164-1212},
  month = feb,
  number = 1}

@book{Spin03a,
  author = {Diomidis Spinellis},
  title = {{Code Reading} The Open Source Perspective},
  publisher = {Addison-Wesley},
  year = {2003}}

@article{Spin03b,
	Title={Global Analysis and Transformations in Preprocessed Languages},
	Author={Diomidis Spinellis},
	Journal={IEEE Transactions on Software Engineering},
	Pages={1019--1030},
	Volume=29,
	Number=11,
	Month=nov,
	Year={2003}
}

@inproceedings{Spin06a,
  author = {Olaf Spinczyk Daniel Lohmann and Wolfgang Schr\"{o}der-Preikschat},
  title = {Concern Hierarchies},
  booktitle = {Proceedings of the 1st Workshop on Aspect-oriented Product Line Engineering (AOPLE' 06)},
  year = {2006},
  address = {Portland, OR, USA},
  note = {In conjunction with GPCE'06}}

@article{Spin10a,
  author = {Spinellis, Diomidis},
  title = {CScout: A refactoring browser for C},
  journal = {Science of Computer Programming},
  volume = {75},
  pages = {216--231},
  publisher = {Elsevier},
  year = {2010},
  number = {4}}

@article{Spin18,
  author = {Spinellis, Diomidis},
  title = {Modern Debugging: The Art of Finding a Needle in a Haystack},
  journal = {Commun. ACM},
  volume = {61},
  pages = {124--134},
  publisher = {ACM},
  year = {2018},
  url = {http://doi.acm.org/10.1145/3186278},
  doi = {10.1145/3186278},
  acmid = {3186278},
  address = {New York, NY, USA},
  issn = {0001-0782},
  month = oct,
  number = {11},
  numpages = {11}}

@article{Spin18a,
  author = {Spinellis, Diomidis},
  title = {Modern Debugging: The Art of Finding a Needle in a Haystack},
  journal = {Commun. ACM},
  volume = {61},
  pages = {124--134},
  publisher = {ACM},
  year = {2018},
  doi = {10.1145/3186278},
  number = {11},
  month = {oct},
  numpages = {11}
}

@book{Spiv89a,
  author = {J. Spivey},
  title = {The {Z} Notation: {A} Reference Manual},
  publisher = {Prentice-Hall},
  year = {1989},
  isbn = {13-978529-9}}

@inproceedings{Spoo04a,
  author = {S. Alexander Spoon and Olin Shivers},
  title = {Dynamic Data Polyvariance Using Source-Tagged Classes},
  booktitle = {Proceedings of the Dynamic Languages Symposium'05},
  pages = {35--48},
  publisher = {ACM Digital Library},
  year = {2005},
  editor = {Roel Wuyts}}

@inproceedings{Spoo05a,
  author = {S. Alexander Spoon and Olin Shivers},
  title = {Demand-Driven Type Inference with Subgoal pruning: Trading Precision for Scalability},
  booktitle = {Proceedings of {ECOOP}'04},
  pages = {51--74},
  year = {2004}}

@techreport{Spoo06a,
  author = {S. Alexander Spoon},
  title = {Package Universes: {Which} Components Are Real Candidates?},
  year = {2006},
  institution = {\'{E}cole Polytechnique F\'{e}d\'{e}rale de Lausanne (EPFL)},
  number = {LAMP-REPORT-2006-002}}

@article{Spoo84a,
  author = {David L. Spooner and E. Gudes},
  title = {A Unifying Approach to the Design of a Secure Database Operating System},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-10},
  pages = {310--319},
  year = {1984},
  month = may,
  number = {3}}

@inproceedings{Spri16a,
  author = {M. Springer and H. Masuhara and R. Hirschfeld},
  title = {Hierarchical Layer-Based Class Extensions in Squeak/Smalltalk},
  booktitle = {Modularity'2016},
  year = {2016}}

@book{Spri89a,
  author = {George Springer and Daniel P. Friedman},
  title = {Scheme and the art of programming.},
  publisher = {MIT Press},
  year = {1989},
  isbn = {0-262-19288-8},
  series = {MIT electrical engineering and computer science series.}}

@misc{Squawk,
  title = {The Squawk Project},
  key = {Squawk},
  note = {http://research.sun.com/projects/squawk}}

@misc{Squeak,
  author = {Squeak},
  title = {Squeak Home Page},
  year = {2010},
  url = {http://www.squeak.org/},
  howpublished = {http://www.squeak.org/, archived at http://www.webcitation.org/5p1poT9Ta},
  key = {Squeak}}

@misc{SqueakCourse,
  author = {Oscar Nierstrasz},
  title = {Dynamic Object-Oriented Programming with {Smalltalk}},
  year = {2007},
  url = {http://scg.unibe.ch/teaching/smalltalk},
  abstract = {Home page for Masters-level course on Squeak
Smalltalk. Lecture notes are available under the
Creative Commons Attribution-ShareAlike 2.5
license.},
  month = sep,
  note = {http://www.iam.unibe.ch/$\sim$scg/Teaching/Smalltalk/}}

@misc{SqueakDevImage,
  title = {Squeak Image For Developers},
  url = {http://damiencassou.seasidehosting.st/Smalltalk/squeak-dev},
  key = {SqueakDevImage},
  note = {http://damiencassou.seasidehosting.st/Smalltalk/squeak-dev}}

@misc{SqueakIRCClient,
  title = {Squeak {IRC} Client},
  url = {http://www.preeminent.org/squeak/irc-help/irc-help.html},
  key = {SqueakIRCClient},
  note = {http://www.preeminent.org/squeak/irc-help/irc-help.html}}

@misc{SqueakSource,
  title = {SqueakSource},
  url = {http://SqueakSource.com},
  key = {SqueakSource},
  note = {http://SqueakSource.com}}

@inproceedings{Sree02a,
  author = {Sreedhar, Vugranam C.},
  title = {Mixin'Up components},
  booktitle = {ICSE'02: Proceedings of the 24th International Conference on Software Engineering},
  pages = {198--207},
  publisher = {ACM},
  year = {2002},
  doi = {10.1145/581339.581366},
  address = {New York, NY, USA},
  location = {Orlando, FL, USA}}

@inproceedings{Srid88a,
  author = {S. Sridhar},
  title = {Configuring Stand-Alone {Smalltalk}-80 Applications},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {95--104},
  year = {1988},
  month = nov}

@inproceedings{Srin08a,
  author = {Sriram Srinivasan and Alan Mycroft},
  title = {Kilim: Isolation-Typed Actors for Java},
  booktitle = {22nd European Conference on Object-Oriented Programming ({ECOOP})},
  volume = {5142},
  pages = {104-128},
  publisher = {Springer},
  year = {2008},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  series = {Lecture Notes in Computer Science}}

@phdthesis{Srin10a,
  author = {S. Srinivasan},
  title = {Kilim : a server framework with lightweight actors isolation types zero-copy messaging},
  year = {2010},
  school = {University of Cambridge, King s College}}

@inbook{Srin14,
  author = {Srinivasan, Venkatesh and Reps, Thomas},
  title = {Recovery of Class Hierarchies and Composition Relationships from Machine Code},
  booktitle = {Compiler Construction: 23rd International Conference, CC 2014, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2014, Grenoble, France, April 5-13, 2014. Proceedings},
  pages = {61--84},
  publisher = {Springer Berlin Heidelberg},
  year = {2014},
  doi = {10.1007/978-3-642-54807-9_4},
  address = {Berlin, Heidelberg},
  isbn = {978-3-642-54807-9}}

@misc{StOMP,
  title = {StOMP - Smalltalk Objects on MessagePack},
  url = {http://www.squeaksource.com/STOMP.html},
  howpublished = {\url{http://www.squeaksource.com/STOMP.html}},
  key = {StOMP}}

@inproceedings{Stad12a,
  author = {Stadler, Lukas and Duboscq, Gilles and M\"{o}ssenb\"{o}ck, Hanspeter and W\"{u}rthinger, Thomas},
  title = {Compilation Queuing and Graph Caching for Dynamic Compilers},
  booktitle = {Virtual Machines and Intermediate Languages},
  year = {2012},
  keywords = {caching, compilation, java, optimization, performance, queuing, virtual machine},
  series = {VMIL '12}}

@inproceedings{Stad14a,
  author = {Stadler, Lukas and W\"{u}rthinger, Thomas and M\"{o}ssenb\"{o}ck, Hanspeter},
  title = {Partial Escape Analysis and Scalar Replacement for Java},
  booktitle = {Proceedings of Annual IEEE/ACM International Symposium on Code Generation and Optimization},
  pages = {165-174},
  publisher = {Association for Computing Machinery},
  year = {2014},
  url = {https://doi.org/10.1145/2544137.2544157},
  doi = {10.1145/2544137.2544157},
  abstract = {Escape Analysis allows a compiler to determine whether an object is accessible outside the allocating method or thread. This information is used to perform optimizations such as Scalar Replacement, Stack Allocation and Lock Elision, allowing modern dynamic compilers to remove some of the abstractions introduced by advanced programming models.The all-or-nothing approach taken by most Escape Analysis algorithms prevents all these optimizations as soon as there is one branch where the object escapes, no matter how unlikely this branch is at runtime.This paper presents a new, practical algorithm that performs control flow sensitive Partial Escape Analysis in a dynamic Java compiler. It allows Escape Analysis, Scalar Replacement and Lock Elision to be performed on individual branches. We implemented the algorithm on top of Graal, an open-source Java just-in-time compiler, and it performs well on a diverse set of benchmarks.In this paper, we evaluate the effect of Partial Escape Analysis on the DaCapo, ScalaDaCapo and SpecJBB2005 benchmarks, in terms of run-time, number and size of allocations and number of monitor operations. It performs particularly well in situations with additional levels of abstraction, such as code generated by the Scala compiler. It reduces the amount of allocated memory by up to 58.5%, and improves performance by up to 33%.},
  address = {New York, NY, USA},
  isbn = {9781450326704},
  keywords = {java, speculative optimization, escape analysis, virtual machine, just-in-time compilation, intermediate representation},
  location = {Orlando, FL, USA},
  numpages = {10},
  series = {CGO '14}}

@article{Stad82a,
  author = {R. Staden},
  title = {An Interactive Graphics Program for Comparing and Aligning Nucleic Acid and Amino Acid Sequences},
  journal = {Nucleic Acids Research},
  volume = {10},
  pages = {2951--2961},
  year = {1982}}

@techreport{Stad90a,
  author = {Marc Stadelmann and Gerti Kappel and Jan Vitek},
  title = {{VST}: {A} Scripting Tool Based on the {UNIX} Shell},
  pages = {333--344},
  year = {1990},
  abstract = {Scripting is a programming technique in which
applications are built by composing specially
designed, pre-packaged software components.
Depending on the kind of applications different
types of components and ways of composing them will
be used. Hence, we distinguish between scripting
models, defining the allowed components and kinds of
connections between them, and scripting tools,
helping to build scripts in accordance to the
underlying model. We describe the implementation of
the Visual Scripting Tool VST which supports the
construction of scripts through the interactive
editing of scripts' visual counterparts. The current
version of the VST supports the UNIX shell scripting
model. Extensions to VST supporting different
scripting models are discussed.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@techreport{Stad91a,
  author = {Marc Stadelmann},
  title = {TeamWorks: Towards a Framework for Reuse},
  pages = {57--71},
  year = {1991},
  abstract = {Scripting is a development technique that builds
applications by composing prefabricated reusable
software components and making them collaborate
through scripts. TeamWorks is an interactive tool
for scripting. We introduce the basic ideas and
concepts of TeamWorks and illustrate them with
examples.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@inproceedings{Stai07a,
  author = {Staiger, Stefan},
  title = {Reverse Engineering of Graphical User Interfaces Using Static Analyses},
  booktitle = {14th Working Conference on Reverse Engineering ({WCRE} 2007)},
  pages = {189--198},
  publisher = {{IEEE}},
  year = {2007},
  url = {http://ieeexplore.ieee.org/document/4400165/},
  doi = {10.1109/{WCRE}.2007.44},
  abstract = {This paper describes static analyses for reverse engineering graphical user interfaces ({GUIs}). These analyses, implemented in the Bauhaus tool suite, support typical maintenance tasks like migrating from a hand-written {GUI} to so-called {GUI} builders and redocumentation of the {GUI}. Our tool extracts the program's windows and their structure, the attributes of the widgets and their values, the {GUI} events that might occur at runtime, and the event handlers associated with those events. We explain our approach and report encouraging results for several programs.},
  date = {2007-10},
  eventtitle = {Reverse Engineering, 2007. {{WCRE}} 2007. 14th Working Conference on},
  isbn = {978-0-7695-3034-5},
  keywords = {static analysis},
  langid = {english},
  urldate = {2018-04-19}}

@techreport{Stam82a,
  author = {James William Stamos},
  title = {A Large Object-Oriented Virtual Memory: Grouping Strategies, Measurements, and Performance},
  year = {1982},
  address = {Palo Alto, California},
  institution = {Xerox Palo Alto Research Center},
  month = {may},
  number = {SCG-82-2},
  type = {Technical Report}}

@article{Stam84a,
  author = {Stamos, James W.},
  title = {Static grouping of small objects to enhance performance of a paged virtual memory},
  journal = {ACM Trans. Comput. Syst.},
  volume = {2},
  pages = {155--180},
  publisher = {ACM},
  year = {1984},
  url = {http://doi.acm.org/10.1145/190.194},
  doi = {10.1145/190.194},
  acmid = {194},
  address = {New York, NY, USA},
  issn = {0734-2071},
  keywords = {Smalltalk, initial placement, object-oriented, paging, programing restructuring, reference trace compression, static grouping, virtual memory},
  month = may,
  number = {2},
  numpages = {26}}

@article{Stan84a,
  author = {Standish, Thomas A},
  title = {An essay on software reuse},
  journal = {IEEE Transactions on Software Engineering},
  volume = {10},
  pages = {494--497},
  publisher = {IEEE},
  year = {1984},
  number = {5}}

@misc{Star00X,
  author = {Roel Wuyts},
  title = {{Star} {Browser}},
  key = {StarBrowser},
  note = {http://www.iam.unibe.ch/$\sim$wuyts/StarBrowser/}}

@inproceedings{Star09a,
  author = {Starke, J. and Luce, C. and Sillito, J.},
  title = {Working with search results},
  journal = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  booktitle = {Search-Driven Development-Users, Infrastructure, Tools and Evaluation, 2009. SUITE '09. ICSE Workshop on},
  pages = {53--56},
  year = {2009},
  url = {http://dx.doi.org/10.1109/SUITE.2009.5070023},
  doi = {10.1109/SUITE.2009.5070023},
  abstract = {Source code search is an important activity for
programmers working on a change task to a software
system. We are at the early stages of a research
program that is aiming to answer three research
questions: (1) How effectively can programmers
express (using today's tools) the information they
are seeking? (2) How effectively can programmers
determine which of the matches returned from their
searches are relevant to their task? and (3) In what
ways can tools be improved to support programmers in
more effectively expressing their information needs
and exploring the results of searches? To begin
answering these questions we have conducted a study
in which we gathered both qualitative and
quantitative data about programmers' search
activities. Our analysis of this data is still
incomplete, however this paper presents several of
our initial observations about how programmers
interact with the results from their searches.}}

@inproceedings{Star93a,
  author = {Mike Stark},
  title = {Impacts of Object-Oriented Technologies: Seven Years of {SEL} Studies},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {365--373},
  year = {1993},
  month = oct}

@book{Star96a,
  author = {Leon Starr},
  title = {How to Build Shlaer-Mellor Object Models},
  publisher = {Prentice-Hall},
  year = {1996},
  isbn = {0-13-207663-2}}

@inproceedings{Stas00a,
  author = {John T. Stasko and Eugene Zhang},
  title = {Focus+Context Display and Navigation Techniques for Enhancing Radial, Space-Filling Hierarchy Visualizations.},
  booktitle = {Proceedings of the IEEE Symposium on Information Visualization},
  pages = {57-},
  year = {2000},
  ee = {http://computer.org/proceedings/infovis/0804/08040057abs.htm}}

@article{Stas00b,
  author = {John T. Stasko and Richard Catrambone and Mark Guzdial and Kevin Mcdonald},
  title = {An evaluation of space-filling information visualizations for depicting hierarchical structures},
  journal = {International Journal Humain-Computer Studies},
  volume = {53},
  pages = {663-694},
  year = {2000},
  ee = {http://dx.doi.org/10.1006/ijhc.2000.0420},
  number = {5}}

@article{Stas90a,
  author = {John T. Stasko},
  title = {TANGO: A Framework and System for Algorithm Animation},
  journal = {IEEE Computer},
  volume = {23},
  pages = {27--39},
  year = {1990},
  month = sep,
  number = {9}}

@book{Stas98a,
  author = {John T. Stasko and John Domingue and Marc H. Brown and Blaine A. Price},
  title = {Software Visualization --- Programming as a Multimedia Experience},
  publisher = {The MIT Press},
  year = {1998}}

@inproceedings{Stat95a,
  author = {Raymie Stata and John V. Guttag},
  title = {Modular reasoning in the presence of subclassing},
  booktitle = {Proceedings of the 10th Annual Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA '95)},
  pages = {200--214},
  publisher = {ACM Press},
  year = {1995},
  isbn = {0-89791-703-0},
  location = {Austin, Texas, United States}}

@article{Stee16a,
  author = {Steed, George and Drossopoulou, Sophia},
  title = {A principled design of capabilities in Pony},
  journal = {Master's thesis, Imperial College},
  year = {2016}}

@article{Stee16b,
  author = {Steed, George and Drossopoulou, Sophia},
  title = {A principled design of capabilities in Pony},
  journal = {Master's thesis, Imperial College},
  year = {2016}}

@phdthesis{Stee80a,
  author = {G.L. Steele},
  title = {The definition and implementation of a computer programming language based on constraints},
  year = {1980},
  school = {MIT}}

@phdthesis{Stee88a,
  author = {Maarten van Steen},
  title = {Modeling Dynamic Systems by Parallel Decision Processes},
  year = {1988},
  school = {University of Leiden},
  type = {{Ph.D}. Thesis}}

@book{Stee90a,
  author = {Guy L. Steele},
  title = {Common Lisp The Language},
  publisher = {Digital Press},
  year = {1990},
  edition = {Second},
  isbn = {1-55558-049-1}}

@inproceedings{Stee94a,
  author = {Luc Steels},
  title = {Beyond Objects},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {1--11},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@article{Stee99a,
  author = {Guy Steele},
  title = {Growing a Language},
  journal = {Higher-Order and Symbolic Computation},
  volume = {12},
  pages = {221--236},
  publisher = {Kluwer Academic Publishers},
  year = {1999},
  url = {http://homepages.inf.ed.ac.uk/wadler/steele-oopsla98.pdf},
  doi = {10.1023/A:1010085415024},
  address = {(Hingham, MA)},
  issn = {1388-3690},
  month = oct,
  number = {3}}

@inproceedings{Steel88a,
  author = {Luc Steels},
  title = {Meaning in knowledge representation},
  booktitle = {Meta-level Architectures and Reflection},
  pages = {51--59},
  year = {1988},
  editor = {North-Holland, P. Maes and D. Nardi},
  isbn = {978-0444703439}}

@article{Stef83a,
  author = {Mark Stefik and Daniel G. Bobrow and Sanja Mittal and L. Conway},
  title = {Knowledge Programming in {LOOPS}: Report on an Experimental Course},
  journal = {The AI Magazine},
  pages = {3--13},
  year = {1983}}

@article{Stef85a,
  author = {Mark Stefik and Daniel G. Bobrow},
  title = {Object-Oriented Programming: Themes and Variations},
  journal = {The AI Magazine},
  year = {1985},
  month = dec}

@article{Stef86a,
  author = {M. Stefik and Daniel G. Bobrow and K. Kahn},
  title = {Integrating Access-Oriented Programming into a Multiparadigm Environment},
  journal = {IEEE Software (USA)},
  volume = {3},
  pages = {10--18},
  year = {1986},
  month = jan,
  number = {1}}

@inproceedings{Steff12a,
  author = {Steff, Maximilian and Russo, Barbara},
  title = {Co-evolution of logical couplings and commits for defect estimation},
  booktitle = {2012 9th IEEE Working Conference on Mining Software Repositories (MSR)},
  pages = {213--216},
  year = {2012},
  organization = {IEEE}}

@phdthesis{Steg92a,
  author = {Robert A. Stegwee},
  title = {Division for {Conquest} --- {Decision} {Support} for {Information} {Architecture} {Specification}},
  year = {1992},
  school = {University of Groningen, Groningen, The Netherlands},
  type = {{Ph.D}. Thesis}}

@mastersthesis{Stei01a,
  author = {Lukas Steiger},
  title = {Recovering the Evolution of Object Oriented Software Systems Using a Flexible Query Engine},
  year = {2001},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Stei01a.pdf},
  abstract = {Since software systems must evolve to cope with
changing demands, the investment of time and effort
won't cease after first delivery. Developers that
join a project later in the development cycle may
have a hard time to understand the structure of
complex systems. Moreover they may not know about
concepts that emerged from earlier implementations.
We therefore want to find out what exactly happens
during evolution of software systems. We developed a
method based on simple metric heuristics to detect
changes between different versions of a software
system. With our query-based approach we can measure
overall changes in terms of removals and additions
in the code. We are also able to detect different
kinds of refactorings like restructuring in the
class hierarchy and moved features between entities.
Historical information about code size and changes
in the code structure helps us to find interesting
patterns and to discover unknown relationships and
dependencies among source code entities.},
  month = jun,
  type = {Diploma thesis}}

@article{Stei06a,
  author = {Friedrich Steimann},
  title = {The paradoxical success of aspect-oriented programming},
  journal = {SIGPLAN Not.},
  volume = {41},
  pages = {481--497},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1167515.1167514},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {10}}

@article{Stei06b,
  author = {Cara Stein and Letha Etzkorn and Sampson Gholston and Phillip Farrington and Julie Fortune},
  title = {A Knowledge-Based Cohesion Metric for Object-Oriented Software},
  journal = {INFOCOMP Journal of Computer Science},
  volume = {5},
  pages = {44--53},
  year = {2006},
  number = {4}}

@inproceedings{Stei07a,
  author = {Steiner, Edwin and Krall, Andreas and Thalinger, Christian},
  title = {Adaptive inlining and on-stack replacement in the CACAO virtual machine},
  booktitle = {Proceedings of the 5th international symposium on Principles and practice of programming in Java},
  pages = {221--226},
  year = {2007}}

@inproceedings{Stei12a,
  author = {Bastian Steinert and Damien Cassou and Robert Hirschfeld},
  title = {CoExist: overcoming aversion to change},
  booktitle = {Symposium on Dynamic Languages},
  year = {2012},
  doi = {10.1145/2384577.2384591}}

@inproceedings{Stei13a,
  title={Befactoring: preserving non-functional properties under behavioural change},
  author={Friedrich Steimann},
  booktitle={WRT '13},
  year={2013},
  url={https://api.semanticscholar.org/CorpusID:19671752}
}

@inproceedings{Stei17a,
author={Steimann, Friedrich},
editor={Cunha, J{\'a}come and Fernandes, Jo{\~a}o P. and L{\"a}mmel, Ralf and Saraiva, Jo{\~a}o and Zaytsev, Vadim"},
title={Refactoring Tools and Their Kin"},
booktitle={Grand Timely Topics in Software Engineering"},
year={2017},
publisher={Springer International Publishing},
address={Cham},
pages={179-214},
abstract={Refactoring is the process of changing a program in such a way that its design improves with respect to some specific goal, while its observable behaviour remains the same. Trivially, the latter includes the preservation of the program's well-formedness, since arguably, a malformed program has no behaviour to be preserved.},
isbn={978-3-319-60074-1}
}

@article{Stei18a,
author = {Steimann, Friedrich},
title = {Constraint-Based Refactoring},
year = {2018},
issue_date = {March 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {1},
issn = {0164-0925},
url = {https://doi.org/10.1145/3156016},
doi = {10.1145/3156016},
journal = {ACM Trans. Program. Lang. Syst.},
month = jan,
articleno = {2},
numpages = {40},
keywords = {Refactoring, constraint-based repair}
}

@inproceedings{Stei87a,
  author = {Lynn Andrea Stein},
  title = {Delegation Is Inheritance},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {138--146},
  year = {1987},
  month = dec}

@incollection{Stei89a,
  author = {L. A. Stein and H. Lieberman and D. Ungar},
  title = {A Shared View of Sharing: The Treaty of Orlando},
  booktitle = {Object-Oriented Concepts, DataBases, and Applications},
  pages = {31--48},
  publisher = {ACM Press, Addison Wesley},
  year = {1989}}

@inproceedings{Steim12a,
  author = {F. Steimann and J. von Pilgrim},
  title = {Constraint-Based Refactoring with Foresight},
  booktitle = {ECOOP},
  year = {2012}}

@misc{Stel20,
  author = {Erick Stel},
  title = {New type of web application using HTML, CSS and Smalltalk},
  year = {2020},
  howpublished = {\url{https://www.youtube.com/watch?v=qvY7R6te7go}},
  note = {Accessed: 2021-03-10}}

@inproceedings{Step09b,
  author = {Fran\c{c}ois Stephany and Tom Mens and Tudor G\^irba},
  title = {Maispion: A Tool for Analysing and Visualizing Open Source Software Developer Communities},
  booktitle = {Proceedings of International Workshop on Smalltalk Technologies (IWST 2009)},
  pages = {50--57},
  publisher = {ACM},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Step09bMaispion.pdf},
  doi = {10.1145/1735935.1735944},
  abstract = {We present Maispion, a tool for analysing software
developer communities. The tool, developed in
Smalltalk, mines mailing list and version
repositories, and provides visualizations to provide
insights into the ecosystem of open source software
(OSS) development. We show how Maispion can analyze
the history of medium to large OSS communities, by
applying our tool to three well-known open source
projects: Moose, Drupal and Python.},
  address = {New York, NY, USA},
  isbn = {978-1-60558-899-5},
  location = {Brest, France},
  medium = {2}}

@inproceedings{Step11a,
  author = {Stepp, Michael and Tate, Ross and Lerner, Sorin},
  title = {Equality-based Translation Validator for {LLVM}},
  booktitle = {Computer Aided Verification},
  year = {2011},
  address = {Berlin, Heidelberg},
  numpages = {6},
  series = {CAV'11}}

@inproceedings{Step16a,
  author = {Stephens, Nick and Grosen, John and Salls, Christopher and Dutcher, Andrew and Wang, Ruoyu and Corbetta, Jacopo and Shoshitaishvili, Yan and Kruegel, Christopher and Vigna, Giovanni},
  title = {Driller: Augmenting fuzzing through selective symbolic execution.},
  booktitle = {NDSS},
  volume = {16},
  pages = {1-16},
  year = {2016}}

@inproceedings{Step19a,
  author = {Stepanov, Daniil and Akhin, Marat and Belyaev, Mikhail},
  title = {Reduktor: how we stopped worrying about bugs in the Kotlin Compiler},
  booktitle = {Arxiv: 1909.07331v1},
  year = {2019}}

@book{Ster86a,
  author = {Leon Sterling and Ehud Shapiro},
  title = {The Art of Prolog: Advanced Programming Techniques},
  publisher = {MIT Press},
  year = {1986},
  isbn = {0-262-19250-0}}

@techreport{Stet05a,
  author = {Marc Stettler},
  title = {Moose Domain Generator},
  year = {2005},
  url = {http://scg.unibe.ch/archive/projects/Stet05aDomainGenerator.pdf},
  abstract = {Communication is the most important thing in the
world today with the internet as its most potent
medium. In software reengineering, tools have the
problem of not being able to communicate with each
other, because it they did not communicate using a
standard language. MOF is the OMG standard language
to exchange reengineering information. This project
focussed on the communication of the reengineering
tool Moose with other reengineering tools by using
MOF.},
  institution = {University of Bern},
  month = apr,
  type = {Informatikprojekt}}

@article{Stev74a,
  author = {W. P. Stevens and G. J. Myers and L. L. Constantine},
  title = {Structured Design},
  journal = {IBM Systems Journal},
  volume = {13},
  pages = {115--139},
  year = {1974},
  number = {2}}

@book{Stev90a,
  author = {W. Richard Stevens},
  title = {Unix Network Programming},
  publisher = {Prentice-Hall},
  year = {1990},
  isbn = {0-13-949876-1}}

@inproceedings{Stev98a,
  author = {Perdita Stevens and Rob Pooley},
  title = {System Reengineering Patterns},
  booktitle = {Proceedings of FSE-6},
  publisher = {ACM-SIGSOFT},
  year = {1998}}

@misc{Stev98b,
  title = {Systems Reengineering Patterns},
  url = {http://www.reengineering.ed.ac.uk/},
  key = {SRP}}

@article{Stew81a,
  author = {Steward, D.},
  title = {The design structure matrix: A method for managing the design of complex systems},
  journal = {IEEE Transactions on Engineering Management},
  volume = {28},
  pages = {71--74},
  year = {1981},
  number = {3}}

@article{Stew96a,
  author = {Steward, Donald V.},
  title = {The Design structure system: A method for managing the design of complex systems},
  journal = {IEEE Transactions on Engineering Management},
  volume = {EM-28},
  pages = {71-74},
  year = {1981},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-0019597497&partnerID=40},
  number = {3}}

@inproceedings{Stey93a,
  author = {Patrick Steyaert and Wim Codenie and Theo D'Hondt and Koen De Hondt and Carine Lucas and Marc Van Limberghen},
  title = {Nested Mixin-Methods in Agora},
  booktitle = {Proceedings ECOOP '93},
  volume = {707},
  pages = {197--219},
  publisher = {Springer-Verlag},
  year = {1993},
  url = {http://link.springer.de/link/service/series/0558/tocs/t0707.htm},
  abstract = {Mixin-based inheritance is an inheritance technique
that has been shown to subsume a variety of
different inheritance mechanisms. It is based
directly upon an incremental modification model of
inheritance. This paper addresses the question of
how mixins can be seen as named attributes of
classes the same way that objects, methods, and also
classes in their own right, are seen as named
attributes of classes. The general idea is to let a
class itself have control over how it is extended.
This results in a powerful abstraction mechanism to
control the construction of inheritance hierarchies
in two ways. Firstly, by being able to constrain the
inheritance hierarchy; secondly, by being able to
extend a class in a way that is specific for that
class. Nested mixins are a direct consequence of
having mixins as attributes. The scope rules for
nested mixins are discussed, and shown to preserve
the encapsulation of objects.},
  address = {Kaiserslautern, Germany},
  editor = {Oscar Nierstrasz},
  month = jul,
  series = {LNCS}}

@inproceedings{Stey94a,
  author = {Patrick Steyaert and Koen De Hondt and Serge Demeyer and Marleen De Molder},
  title = {A Layered Approach to Dedicated Application Builders Based on Application Frameworks},
  booktitle = {Proceedings of the 1994 International Conference on Object-Oriented Information Systems (OOIS '94)},
  pages = {252--265},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {In this paper we investigate what is needed to make
user interface builders incrementally refinable. The
need for dedicated user interface builders is
motivated by drawing a parallel with programming
language design and object-oriented application
frameworks. We show that reflection techniques
borrowed from the programming language community can
be successfully applied to make user interface
builders incrementally refinable.},
  editor = {D. Patel and Y. Sun and S. Patel}}

@phdthesis{Stey94b,
  author = {Patrick Steyaert},
  title = {Open Design of Object-Oriented Languages. {A} Foun\-da\-tion for Specialisable Reflective Language Frameworks},
  year = {1994},
  school = {Vrije Universiteit Brussel},
  address = {Belgium}}

@inproceedings{Stey95a,
  author = {Patrick Steyaert and De Meuter, Wolfgang},
  title = {A Marriage of Class- and Object-Based Inheritance Without Unwanted Children},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {127--144},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@inproceedings{Stey96a,
  author = {Patrick Steyaert and Carine Lucas and Kim Mens and Theo D'Hondt},
  title = {Reuse Contracts: Managing the Evolution of Reusable Assets},
  booktitle = {Proceedings of the International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  pages = {268--285},
  publisher = {ACM Press},
  year = {1996},
  doi = {10.1145/236337.236363},
  series = {OOPSLA'96}}

@incollection{Stey96b,
  author = {Patrick Steyaert and Koen De Hondt and Serge Demeyer and Niels Boyen},
  title = {Reflective User Interface Builders},
  booktitle = {Advances in Object-Oriented Metalevel Architectures and Reflection},
  pages = {291--309},
  publisher = {CRC Press --- Boca Raton --- Florida},
  year = {1996},
  abstract = {Current visual application builders and application
frameworks do not live up to their expectations of
r{API}d application development or
non-programming-expert application development. They
fall short when compared to component-oriented
development environments in which applications are
built with components that have a strong affinity
with the problem domain (i.e. being
domain-specific). Although the latter environments
are very powerful, they are hard to build and, in
general, do not allow much variation in the problem
domain that is covered. In this paper we show how
this apparent conflict between generality and domain
specificity can be overcome by considering
application building itself as the problem domain.
This naturally leads to the notion of a reflective
application builder, i.e. an application
framework-application builder pair that incorporates
all the tools for the visual construction of
(domain-specific) application builders.},
  editor = {Chris Zimmerman},
  isbn = {084932663X}}

@inproceedings{Stir89a,
  author = {Colin Stirling and David Walker},
  title = {Local Model Checking in the Modal Mu-Calculus},
  booktitle = {Proceedings TAPSOFT '89},
  volume = {351},
  pages = {369--383},
  publisher = {Springer-Verlag},
  year = {1989},
  editor = {D\'iaz and Orejas},
  series = {LNCS}}

@inproceedings{Stoe01a,
  author = {Christoph Stoermer and Liam O'Brien},
  title = {MAP - {M}ining Architectures for Product Line Evaluations},
  booktitle = {Working Conference on Software Architecture (WICSA)},
  pages = {35--41},
  year = {2001},
  isbn = {0-7695-1360-3}}

@inproceedings{Stoe03a,
  author = {Christoph Stoermer and Liam O'Brien and Chris Verhoef},
  title = {Moving Towards Quality Attribute Driven Software Architecture Reconstruction},
  booktitle = {Working Conference on Reverse Engineering ({WCRE})},
  pages = {46--56},
  publisher = {IEEE Computer Society},
  year = {2003},
  doi = {10.1109/{WCRE}.2003.1287236},
  address = {Los Alamitos, CA, USA},
  issn = {1095-1350}}

@article{Stoe06a,
  author = {Christoph Stoermer and Anthony Rowe and Liam O'Brien and Chris Verhoef},
  title = {Model-Centric Software Architecture Reconstruction},
  journal = {Software --- Practice and Experience},
  volume = {36},
  pages = {333--363},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2006},
  doi = {10.1002/spe.v36:4},
  address = {New York, NY, USA},
  issn = {0038-0644},
  number = {4}}

@inproceedings{Stoe06b,
  author = {Maximilian Stoerzer and Barbara G. Ryder and Xiaoxia Ren and Frank Tip},
  title = {Finding Failure-Inducing Changes in {J}ava Programs using Change Classification},
  booktitle = {Proceedings of the 14th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {57--68},
  publisher = {ACM},
  year = {2006},
  month = {nov},
  series = {SIGSOFT '06/FSE-14}}

@techreport{Ston85a,
  author = {M. Stonebraker},
  title = {Triggers and Interference in Data Base Systems},
  year = {1985},
  institution = {Electronics Research Laboratory, U Cal Berkeley},
  month = may,
  number = {M85/46},
  type = {Memorandum No UCB/ERL}}

@inproceedings{Ston94a,
  author = {Maureen Stone and Ken Fishkin and Eric Bier},
  title = {The Movable Filter as a User Interface Tool},
  booktitle = {Proceedings CHI 94},
  pages = {306--312},
  publisher = {ACM},
  year = {1994},
  url = {http://www.parc.xerox.com/istl/projects/MagicLenses/}}

@inproceedings{Stoo20a,
  author = {Stoodley, Mark},
  title = {In Pursuit of Easy(Er) JITs (Invited Talk)},
  booktitle = {Proceedings of the 12th ACM SIGPLAN International Workshop on Virtual Machines and Intermediate Languages},
  pages = {2},
  publisher = {Association for Computing Machinery},
  year = {2020},
  url = {https://doi.org/10.1145/3427765.3432353},
  doi = {10.1145/3427765.3432353},
  abstract = {n the early days of the Eclipse OMR project, we created the unimaginatively named JitBuilder {API} aiming to make it easier to build a JIT compiler. JitBuilder has been used to create prototype JIT compilers in a few thousand lines of C++ for WebAssembly, Lua, Smalltalk, Javascript, the Rosie Pattern Language, BF, Kaleidoscope, and Base9, as well as a number of other less language-centric dynamic code generators (including an alternative code generator for LLVM IR). Although it brings key facilities for privatizing virtual machine state and translating bytecode handlers, the JitBuilder {API} did not completely meet the "easy" goal particularly in the areas of extensibility and debuggability and did not offer strong DSL optimization possibilities. In this talk, I'll explain and summarize the key features of the JitBuilder {API} before introducing some recent exploratory work to create the next version: JitBuilder2. This new fully-fledged (if currently in complete) compiler IL shares some directions with MLIR, but has some unique challenges and features, all designed around the pursuit of "easy" JIT compiler construction. Through the talk, I'll show off some of these features (that's right, I'll demo a compiler IL!) and highlight some of the interesting directions I think we could take it from here.},
  address = {New York, NY, USA},
  isbn = {9781450381901},
  keywords = {DSL Compiler, Virtual Machines, Interpreters, Cross Platform Compiler, JIT Compiler},
  location = {Virtual, USA},
  numpages = {1},
  series = {VMIL 2020}}

@misc{Stor00a,
  author = {C. Stork and V. Haldar and M. Franz},
  title = {Generic adaptive syntax-directed compression for mobile code},
  year = {2000},
  text = {C. H. Stork, V. Haldar, and M. Franz. Generic adaptive syntax-directed compression for mobile code. Technical Report 00-42, Department of Information and Computer Science, University of California, Irvine, Nov. 2000.}}

@inproceedings{Stor01a,
  author = {Margaret-Anne Storey and Casey Best and Jeff Michaud},
  title = {{SHriMP Views}: An Interactive and Customizable Environment for Software Exploration},
  booktitle = {Proceedings of International Workshop on Program Comprehension (IWPC '2001)},
  year = {2001}}

@article{Stor02a,
  author = {Margaret-Anne D. Storey and Susan Elliott Sim and Kenny Wong},
  title = {A Collaborative Demonstration of Reverse Engineering Tools},
  journal = {ACM SIGAPP Applied Computing Review},
  volume = {10},
  pages = {18--25},
  publisher = {ACM},
  year = {2002},
  number = {1}}

@inproceedings{Stor05a,
  author = {Storey, Margaret-Anne D. and \v{C}ubrani\'c, Davor and German, Daniel M.},
  title = {On the use of visualization to support awareness of human activities in software development: a survey and a framework},
  booktitle = {SoftVis'05: Proceedings of the 2005 ACM symposium on software visualization},
  pages = {193--202},
  publisher = {ACM Press},
  year = {2005},
  url = {http://portal.acm.org/citation.cfm?id=1056018.1056045},
  doi = {10.1145/1056018.1056045},
  isbn = {1595930736}}

@inproceedings{Stor05b,
  author = {Margaret-Anne D. Storey},
  title = {Theories, Methods and Tools in Program Comprehension: Past, Present and Future},
  booktitle = {13th International Workshop on Program Comprehension (IWPC)},
  pages = {181-191},
  year = {2005}}

@inproceedings{Stor95a,
  author = {Margaret-Anne D. Storey and Hausi A. M{\"u}ller},
  title = {Manipulating and Documenting Software Structures using {SHriMP} {Views}},
  booktitle = {Proceedings of {ICSM} '95 (International Conference on Software Maintenance)},
  pages = {275--284},
  publisher = {IEEE Computer Society Press},
  year = {1995}}

@inproceedings{Stor97a,
  author = {Margaret-Anne D. Storey and Kenny Wong and Hausi A. M{\"u}ller},
  title = {How Do Program Understanding Tools Affect How Programmers Understand Programs?},
  booktitle = {Proceedings of the 4th Working Conference on Reverse Engineering},
  pages = {12--21},
  publisher = {IEEE Computer Society},
  year = {1997}}

@inproceedings{Stor97b,
  author = {Margaret-Anne D. Storey and Kenny Wong and F. D. Fracchia and Hausi A. M{\"u}ller},
  title = {On integrating visualization techniques for effective software exploration},
  booktitle = {Proceedings of IEEE Symposium on Information Visualization},
  pages = {38--48},
  publisher = {IEEE Computer Society},
  year = {1997},
  series = {InfoVis'97}}

@inproceedings{Stor97c,
  author = {Storey, Margaret-Anne D and Wong, Kenny and M{\"u}ller, Hausi A},
  title = {Rigi: A visualization environment for reverse engineering},
  booktitle = {Proceedings of the 19th international conference on Software engineering},
  pages = {606--607},
  year = {1997}}

@inproceedings{Stor97r,
  author = {Storey, Margaret-Anne D and Wong, Kenny and M{\"u}ller, Hausi A},
  title = {Rigi: a visualization environment for reverse engineering},
  booktitle = {Proceedings of the 19th international conference on Software engineering},
  pages = {606--607},
  year = {1997},
  organization = {ACM}}

@phdthesis{Stor98a,
  author = {Margaret-Anne D. Storey},
  title = {A Cognitive Framework for Describing and Evaluating Software Exploration Tools},
  year = {1998},
  school = {Simon Fraser University},
  month = dec}

@article{Stor99a,
  author = {Margaret-Anne D. Storey and F. David Fracchia and Hausi A. M\"uller},
  title = {Cognitive Design Elements to Support the Construction of a Mental Model during Software Exploration},
  journal = {Journal of Software Systems},
  volume = {44},
  pages = {171--185},
  year = {1999}}

@book{Stoy77a,
  author = {Joseph E. Stoy},
  title = {Denotational Semantics: The Scott-Strachey Approach to Programming Language Theory},
  publisher = {MIT Press},
  year = {1977},
  isbn = {0-262-69076-4}}

@inproceedings{Stoy84a,
  author = {H. Stoyan},
  title = {What is an `Object-Oriented' Programming Language?},
  booktitle = {Proceedings of the Seventeenth Annual Hawaii International Conference on System Sciences},
  year = {1984}}

@inproceedings{Stra04a,
  author = {Thomas Strang and Claudia Linnhoff-Popien},
  title = {A Context Modeling Survey},
  booktitle = {Workshop on Advanced Context Modelling, Reasoning and Management, UbiComp 2004 -- The Sixth International Conference on Ubiquitous Computing, Nottingham/England},
  year = {2004},
  url = {http://www.itee.uq.edu.au/~pace/cw2004/Paper15.pdf http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.2.2060},
  abstract = {Context-awareness is one of the drivers of the
ubiquitous computing paradigm, whereas a well
designed model is a key accessor to the context in
any context-aware system. This paper provides a
survey of the the most relevant current approaches
to modeling context for ubiquitous computing.
Numerous approaches are reviewed, classified
relative to their core elements and evaluated with
respect to their appropriateness for ubiquitous
computing.}}

@techreport{Stra07a,
  author = {Anselm Strauss},
  title = {Stamp --- A Mailing List Manager for Squeak},
  year = {2007},
  url = {http://scg.unibe.ch/archive/projects/Stra07a.pdf},
  abstract = {Stamp is a Mailing List Manager entirely written in
Squeak. Although it falls in the same category as
other mailing list managers like Mailman2 or Ezmlm3
it should not be regarded as equivalent. Such
applications have undergone a long development time
that is beyond the scope of this project. And still,
there are a lot of shortcomings reported by users:
complicated installation, non-intuitive web
interfaces, ugly code that is difficult to enhance
and so on. Stamp tries to pick-up the whole thing
from beginning and implements a clean base that can
be extended.},
  institution = {University of Bern},
  month = may,
  type = {Informatikprojekt}}

@mastersthesis{Stra08a,
  author = {Anselm Strauss},
  title = {Dynamic Aspects --- An {AOP} Implementation for {Squeak}},
  year = {2008},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Strau08a.pdf},
  abstract = {Cross-cutting concerns in OOP lead to scattered and
tangled code that reduces transparency and
maintainability of a program, and produces
duplicated code. Common examples of cross-cutting
concerns are logging, caching or database
transactions in an application. Rather than trying
to break down such concerns into classes and
objects, the entity of modularization in
aspect-oriented programming (AOP) are aspects. An
aspect in AOP is the pendant of an object in OOP.
With aspects such problems can be solved much easier
and can be isolated into single entities. AOP can be
seen as programming paradigm that builds on top of
an existing paradigm and language. Today most AOP is
done on top of OOP. Dynamic Aspects is a lightweight
AOP implementation for Squeak Smalltalk that profits
from the advanced reflection tools developed by the
Software Composition Group. Sub-method level
reflection allows to select single statements within
methods. Annotation of such statements allows
extrinsic addition of behavior at any location in
code. Finally, the idea of partial behavioral
reflection gives the system great flexibility. All
those tools are the core Dynamic Aspects builds
upon. Beyond the basic AOP implementation, Dynamic
Aspects links to the field of context-oriented
programming and shows how contexts can be used in
aspects. Furthermore, the idea of control flow is
generalized and generic flow is implemented with
contexts.},
  month = nov,
  type = {Master's thesis}}

@inproceedings{Stra14a,
  author = {Robert Strandh},
  title = {Resolving Metastability Issues During Bootstrapping},
  booktitle = {International Lisp Conference},
  year = {2014}}

@inproceedings{Stra90a,
  author = {Dave D. Straube and M. Tamer Oezsu},
  title = {Type Consistency of Queries in an Object-Oriented Database System},
  booktitle = {Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices},
  volume = {25},
  pages = {224--233},
  year = {1990},
  month = oct}

@inproceedings{Stra93a,
  author = {Paul S. Strauss},
  title = {{IRIS} Inventor, {A} 3D Graphics Toolkit},
  booktitle = {Proceedings OOPSLA '93, ACM SIGPLAN Notices},
  volume = {28},
  pages = {192--200},
  year = {1993},
  month = oct}

@inproceedings{Stre04a,
  author = {Mirko Streckenbach and Gregor Snelting},
  title = {Refactoring Class Hierarchies with {KABA}},
  booktitle = {OOPSLA '04: Proceedings of the 19th annual ACM SIGPLAN Conference on Object-oriented programming, systems, languages, and applications},
  pages = {315--330},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/1028976.1029003},
  address = {New York, NY, USA},
  isbn = {1-58113-831-9},
  location = {Vancouver, BC, Canada}}

@techreport{Stre07a,
  author = {Lucas Streit},
  title = {Basil --- Scripting {Flash} from {Smalltalk}},
  year = {2007},
  url = {http://scg.unibe.ch/archive/projects/Stre07a.pdf},
  abstract = {Several graphics file formats exist today, each with
its own strengths and weaknesses. However, most of
them are static formats. Adobe's Flash File Format
(SWF) takes another approach. It is a vector
graphics format which comes with a built-in script
language, allowing the user to directly interact
with the graphics. Furthermore, SWF has other
interesting aspects like its popularity and
availability, support for alpha blending or the
possibility to include video and sound. The goal of
this thesis is to provide a solution to create SWF
files directly from Smalltalk. We present our
implementation named Basil and as a validation we
show how to use it for visualization purposes.},
  institution = {University of Bern},
  month = oct,
  type = {Bachelor's thesis}}

@inproceedings{Stre94a,
  author = {Norbert A. Streitz},
  title = {Putting Objects to Work: Hypermedia as the Subject Matter and the Medium for Computer-Supported Cooperative Work},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {183--193},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Strei03a,
  author = {Detlef Streitferdt and Matthias Riebisch and Ilka Philippow},
  title = {Details of Formalized Relations in Feature Models Using OCL},
  booktitle = {Proceedings of the 10th IEEE International Conference and Workshop on the Engineering of Computer-Based Systems (ECBS'03)},
  year = {2003},
  month = apr}

@techreport{Stri12a,
  author = {Strickland, T Stephen and Tobin-Hochstadt, Sam and Findler, Robert Bruce and Flatt, Matthew},
  title = {Chaperones and impersonators: Run-time support for contracts on higher-order, stateful values},
  year = {2012},
  institution = {NU-CCIS-12-01}}

@inproceedings{Stri12b,
  author = {Strickland, T.S. and Tobin-Hochstadt, S. and Findler, R.B. and Flatt, M.},
  title = {Chaperones and impersonators: run-time support for reasonable interposition},
  booktitle = {OOPSLA'12},
  year = {2012}}

@inproceedings{Strn07a,
  author = {Rok Strni\v{s}a and Peter Sewell and Matthew Parkinson},
  title = {The java module system: core design and semantic definition},
  booktitle = {OOPSLA '07: Proceedings of the 22nd annual ACM SIGPLAN conference on Object oriented programming systems and applications},
  pages = {499--514},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297027.1297064},
  address = {New York, NY, USA},
  isbn = {978-1-59593-786-5},
  location = {Montreal, Quebec, Canada}}

@article{Stro02a,
  author = {E. Stroulia and T. Syst\"a},
  title = {Dynamic analysis for reverse engineering and program understanding},
  journal = {SIGAPP. Applied Computing Review},
  volume = {10},
  pages = {8--17},
  publisher = {ACM Press},
  year = {2002},
  institution = {ACM},
  number = {1}}

@inproceedings{Stro03a,
  author = {E. Stroulia, M. El-Ramly, P.Iglinski and P.Sorenson},
  title = {User Interface Reverse Engineering In Support of Interface Migration on the Web},
  booktitle = {Automated Software Engineering},
  year = {2003}}

@techreport{Stro84a,
  author = {Bjarne Stroustrup},
  title = {Complex Arithmetic in {C}},
  year = {1984},
  address = {Murray Hill, New Jersey 07974},
  institution = {AT\&T Bell Laboratories},
  month = jan,
  type = {Report}}

@techreport{Stro84b,
  author = {Bjarne Stroustrup},
  title = {Data Abstraction in {C}},
  year = {1984},
  address = {Murray Hill, New Jersey 07974},
  institution = {AT\&T Bell Laboratories},
  month = jan,
  number = {109},
  type = {Computing Science Technical Report}}

@techreport{Stro84c,
  author = {Bjarne Stroustrup},
  title = {Operator Overloading in {C}},
  year = {1984},
  address = {Murray Hill, New Jersey 07974},
  institution = {AT\&T Bell Laboratories},
  month = jan,
  type = {Report}}

@techreport{Stro84d,
  author = {Bjarne Stroustrup},
  title = {The {C}++ Programming Language --- Reference Manual},
  year = {1984},
  address = {Murray Hill, New Jersey 07974},
  institution = {AT\&T Bell Laboratories},
  month = jan,
  number = {108},
  type = {Computing Science Technical Report}}

@article{Stro86a,
  author = {R. Strom},
  title = {A Comparison of the Object-Oriented and Process Paradigms},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {88--97},
  year = {1986},
  month = oct,
  number = {10}}

@book{Stro86b,
  author = {Bjarne Stroustrup},
  title = {The {C}++ Programming Language},
  publisher = {Addison Wesley},
  year = {1986},
  address = {Reading, Mass.},
  isbn = {0-201-53992-6}}

@article{Stro86c,
  author = {Bjarne Stroustrup},
  title = {An Overview of {C}++},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {7--18},
  year = {1986},
  month = oct,
  number = {10}}

@inproceedings{Stro87a,
  author = {Bjarne Stroustrup},
  title = {What is "Object-Oriented Programming"?},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {51--70},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@book{Stro90a,
  author = {Bjarne Stroustrup and Magaret A. Ellis},
  title = {The Annotated {C}++ Reference Manual},
  publisher = {Addison Wesley},
  year = {1990},
  isbn = {0-201-51459-1}}

@book{Stro94a,
  author = {Bjarne Stroustrup},
  title = {The Design and Evolution of {C}++},
  publisher = {Addison Wesley},
  year = {1994},
  address = {Reading, Mass.},
  isbn = {0-201-54330-3}}

@inproceedings{Stro95a,
  author = {R.J. Stroud and Z. Wu},
  title = {Using Metaobject Protocols to Implement Atomic Data Types},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {168--189},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@book{Stro97a,
  author = {Bjarne Stroustrup},
  title = {The {C}++ Programming Language},
  publisher = {Addison Wesley},
  year = {1997},
  edition = {Third},
  isbn = {0-201-88954-4}}

@misc{Strongtalk,
  title = {The Strongtalk Type System for Smalltalk},
  url = {http://bracha.org/nwst.html},
  key = {Strongtalk},
  note = {http://bracha.org/nwst.html}}

@misc{StrongtalkVm,
  title = {Strongtalk: A High-Performance Open Source Smalltalk With An Optional Type System},
  url = {http://www.strongtalk.org},
  key = {StrongtalkVm},
  note = {http://www.strongtalk.org}}

@article{Strou03,
  author = {Stroulia, Eleni and El-Ramly, Mohammad and Iglinski, P and Sorenson, P},
  title = {User Interface Reverse Engineering in Support of Interface Migration to the Web},
  journal = {Automated Software Engineering},
  pages = {31},
  year = {2003},
  abstract = {Legacy systems constitute valuable assets to the organizations that own them, and today, there is an increased demand to make them accessible through the World Wide Web to support e-commerce activities. As a result, the problem of legacy-interface migration is becoming very important. In the context of the {CELLEST} project, we have developed a new process for migrating legacy user interfaces to web-accessible platforms. Instead of analyzing the application code to extract a model of its structure, the {CELLEST} process analyzes traces of the system-user interaction to model the behavior of the application's user interface. The produced state-transition model specifies the unique legacy-interface screens (as states) and the possible commands leading from one screen to another (as transitions between the states). The interface screens are identified as clusters of similarin-appearance snapshots in the recorded trace. Next, the syntax of each transition command is extracted as the pattern shared by all the transition instances found in the trace. This user-interface model is used as the basis for constructing models of the tasks performed by the legacy-application users; these task models are subsequently used to develop new web-accessible interface front ends for executing these tasks. In this paper, we discuss the {CELLEST} method for reverse engineering a state-transition model of the legacy interface, we illustrate it with examples, we discuss the results of our experimentation with it, and we discuss how this model can be used to support the development of new interface front ends.},
  langid = {english}}

@incollection{Strou96,
  author = {R. Stroud and Z. Wue},
  title = {Using Metaobject Protocols to Satisfy Non-functional Requirements},
  booktitle = {Advances in Object-Oriented Metalevel Architectures and Reflection},
  pages = {31--52},
  publisher = {CRC Press},
  year = {1996},
  city = {Boca Raton, Florida}}

@misc{Stru,
  title = {The Apache Struts Web Application Framework},
  key = {Stru},
  note = {http://jakarta.apache.org/struts/}}

@book{Stru00a,
  author = {William Strunk Jr. and E.B. White},
  title = {The Elements of Style},
  publisher = {Allyn and Bacon},
  year = {2000},
  edition = {4th}}

@mastersthesis{Stua08a,
  author = {Henrik Stuart},
  title = {Hunting bugs with Coccinelle},
  year = {2008},
  school = {University of Copenhagen},
  address = {Denmark},
  date-added = {2009-10-20 14:56:10 +0200},
  date-modified = {2009-10-20 15:08:08 +0200},
  month = {aug}}

@book{Stud02,
  author = {Studio 7.5},
  title = {Navigation for the Internet and other Digital Media},
  publisher = {Ava Publishing SA},
  year = {2002},
  isbn = {2-88479-011-X}}

@unpublished{Stur94a,
  author = {Daniel C. Sturman and Gul A. Agha},
  title = {A Protocol Description Language for Customizing Failure Semantics*},
  year = {1994},
  note = {University of Illinois at Urbana-Champaign},
  type = {Draft}}

@phdthesis{Stur96a,
  author = {Daniel C. Sturman},
  title = {Modular Specification of Interaction Policies in Distributed Computing},
  year = {1996},
  school = {Dept. of Computer Science, University of Illinois, Urbana},
  url = {ftp://ftp.cs.uiuc.edu:/pub/dcs/Tech_Reports/UIUCDCS-R-96-1950.ps.Z},
  type = {{Ph.D}. Thesis}}

@inproceedings{Styl06a,
  author = {Jeffrey Stylos and Steven Clarke and Brad Myers},
  title = {Comparing {{API}} Design Choices with Usability Studies: A Case Study and Future Directions},
  booktitle = {18th Workshop of the Psychology of Programming Interest Group},
  pages = {131--139},
  year = {2006},
  doi = {10.1.1.102.8525},
  editor = {P. Romero and J. Good and E. Acosta Chaparro and S. Bryant},
  month = sep,
  organization = {University of Sussex}}

@inproceedings{Styl07a,
  author = {Jeffrey Stylos and Brad Myers},
  title = {Mapping the Space of {{API}} Design Decisions},
  booktitle = {{IEEE} Symposium on Visual Languages and Human-Centric Computing},
  pages = {50--57},
  year = {2007},
  doi = {10.1109/VLHCC.2007.44}}

@inproceedings{Su09,
  author = {Su, Xing and Yang, Xiaohu and Li, Juefeng and Wu, Di},
  title = {Parallel iterative reengineering model of legacy systems},
  booktitle = {2009 IEEE International Conference on Systems, Man and Cybernetics},
  pages = {4054--4058},
  year = {2009},
  organization = {IEEE}}

@article{Subr09a,
  author = {Subramanian, Suriya and Hicks, Michael and McKinley, Kathryn S.},
  title = {Dynamic Software Updates: A VM-centric Approach},
  journal = {SIGPLAN Not.},
  volume = {44},
  pages = {1--12},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1543135.1542478},
  acmid = {1542478},
  address = {New York, NY, USA},
  issn = {0362-1340},
  month = jun,
  number = {6},
  numpages = {12}}

@article{Subr96a,
  author = {Subramanian, Girish H and Zarnich, George E},
  title = {An examination of some software development effort and productivity determinants in ICASE tool projects},
  journal = {Journal of Management Information Systems},
  volume = {12},
  pages = {143--160},
  publisher = {Taylor \& Francis},
  year = {1996},
  number = {4}}

@misc{Subtext,
  title = {Subtext programming language home page},
  url = {http://subtextual.org/},
  key = {Subtext},
  note = {http://subtextual.org/}}

@mastersthesis{Suen07b,
  author = {Mathieu Suen},
  title = {Package blueprints},
  year = {2007},
  school = {Universit\'e de Savoie},
  url = {http://scg.unibe.ch/archive/masters/Suen07b.pdf},
  abstract = {This master presents a compact visualization, named
Package Surface Blueprint, that qualifies the
relationships that a package has with its neighbors.
Large object-oriented applications are structured
over a large number of packages. Packages are
important but complex structural entities that may
be difficult to understand since they play different
development roles (i.e. class containers, code
ownership, basic structure, architectural
elements...). Maintainers of large applications face
the problem of understanding how packages are
structured in general and how they relate to each
other. A Package Surface Blueprint represents
packages around the notion of package surfaces:
groups of relationships according to the packages
they refer to. We present two specific views: one
stressing the references made by a package, and
another showing the inheritance structure of a
package. We applied the visualization on two large
case studies: ArgoUML and Squeak.}}

@article{Suga00a,
  author = {Suganuma, T. and Ogasawara, T. and Takeuchi, M. and Yasue, T. and Kawahito, M. and Ishizaki, K. and Komatsu, H. and Nakatani, T.},
  title = {Overview of the IBM Java Just-in-Time Compiler},
  journal = {IBM Syst. J.},
  volume = {39},
  pages = {175-193},
  publisher = {IBM Corp.},
  year = {2000},
  url = {https://doi.org/10.1147/sj.391.0175},
  doi = {10.1147/sj.391.0175},
  abstract = {We present the design and implementation of several optimizations and techniques included in the latest IBM JavaTM Just-in-Time (JIT) Compiler. We first discuss some of the modifications we have applied to Sun Microsystems' reference implementation of the Java Virtual Machine (JVMTM) Specification to increase the performance, including a change in the object layout. We then describe each of the optimizations, referring to what had to be taken into account because of both the just-in-time nature of the compiler and the requirements of the Java language specification, such as exception checking. We also present code generation techniques targeting Intel architectures, describing the register allocation schemes, exception handling, and code scheduling. Finally we report on the performance of the IBM JIT compiler, showing both the effectiveness of the individual optimizations and the competitive overall performance of the JIT compiler in comparison with a competitor, using industry-standard benchmarking programs. All the techniques presented here are included in the official product (JIT Compiler version 3.0), which has been integrated into the IBM Developer Kit for WindowsTM, Java Technology Edition, Version 1.1.7.},
  address = {USA},
  issn = {0018-8670},
  month = jan,
  number = {1},
  numpages = {19}}

@article{Sugi81a,
  author = {K. Sugiyama and S. Tagawa and M. Toda},
  title = {Methods for Visual Understanding of Hierarchical System Structures},
  journal = {IEEE Transactions on Systems, Man and Cybernetics},
  volume = {SMC-11},
  year = {1981},
  month = feb,
  number = {2}}

@inproceedings{Sui20,
  author = {Sui Li and Dietrich, Jens and Tahir, Amjed and Fourtonis, George},
  title = {On the recall of Static Call Graph Construction in Practice},
  booktitle = {ICSE},
  year = {2020}}

@incollection{Sula16,
  author = {Salihu, Ibrahim Anka and Ibrahim, Rosziati},
  title = {Comparative Analysis of {GUI} Reverse Engineering Techniques},
  booktitle = {Advanced Computer and Communication Engineering Technology},
  volume = {362},
  pages = {295--305},
  publisher = {Springer International Publishing},
  year = {2016},
  doi = {10.1007/978-3-319-24584-3_24},
  abstract = {With the increasing number of mobile devices, the demand for mobile applications is ever increasing. Mobile applications are recently moving to more business-critical areas, becoming more and more complex, hence making it difficult to understand their behavior. Reverse engineering has been embraced by the software engineering community to improve their ability to understand a given system quickly by creating models of a system. The aim of this paper is to investigate the state-of-art in reverse engineering of {GUI} applications. The focus is on mobile applications reverse engineering techniques based on the point of {GUI} models generation, where the generated models can be used for program comprehension and testing. Firstly, we performed an exhaustive literature review on {GUI} reverse engineering approaches for model generation, followed by an assessment of capabilities of the reverse engineering techniques/tool for mobile applications based on the approaches. A discussion is presented on the result of the comparative assessment. Based on the results, limitations of the techniques and approaches in {GUI} model generation were identified and the areas that require further improvements were identified.},
  date = {2016},
  editor = {Sulaiman, Hamzah Asyrani and Othman, Mohd Azlishah and Othman, Mohd Fairuz Iskandar and Rahim, Yahaya Abd and Pee, Naim Che},
  isbn = {978-3-319-24582-9 978-3-319-24584-3},
  langid = {english},
  location = {Cham},
  urldate = {2018-06-22}}

@inproceedings{Suli17a,
  author = {Sulir, Matus and Poruban, Jaroslav},
  title = {RuntimeSearch: Ctrl+F for a Running Program},
  booktitle = {IEEE, 2017},
  year = {2017}}

@inproceedings{Sull01a,
  author = {Kevin J. Sullivan and William G. Griswold and Yuanfang Cai and Ben Hallen},
  title = {The Structure and Value of Modularity in SOftware Design},
  booktitle = {ESEC/FSE 2001},
  year = {2001}}

@article{Sull01b,
  author = {Gregory T. Sullivan},
  title = {Aspect-oriented programming using reflection and metaobject protocols},
  journal = {Commun. ACM},
  volume = {44},
  pages = {95--97},
  publisher = {ACM},
  year = {2001},
  doi = {10.1145/383845.383865},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {10}}

@inproceedings{Sull05a,
  author = {Kevin J. Sullivan and William G. Griswold and Yuanyuan Song and Yuanfang Cai and Macneil Shonle and Nishit Tewari and Hridesh Rajan},
  title = {Information hiding interfaces for aspect-oriented design},
  booktitle = {Proceedings of the ESEC/SIGSOFT FSE 2005},
  pages = {166--175},
  year = {2005}}

@inproceedings{Sull05b,
  author = {Kevin J. Sullivan and Hridesh Rajan},
  title = {Classpects: unifying aspect- and object-oriented language design},
  journal = {ICSE},
  booktitle = {27th International Conference on Software Engineering (ICSE'05)},
  pages = {59--68},
  year = {2005}}

@article{Sull92a,
  author = {K.J. Sullivan and D. Notkin},
  title = {Reconciling Environment Integration and Software Evolution},
  journal = {Transactions on Software Engineering and Methodology},
  volume = {1},
  pages = {228--268},
  year = {1992},
  month = jul,
  number = {3}}

@inproceedings{Sull97a,
  author = {Kevin J. Sullivan and John Socha and Mark Marchukov},
  title = {Using Formal Methods to Reason about Architectural Standards},
  booktitle = {Proceedings of ICSE 97},
  pages = {503--513},
  year = {1997},
  address = {Boston MA},
  month = may}

@article{Summ77a,
  author = {Phillip D. Summers},
  title = {A Methodology for {L}ISP Program Construction from Examples},
  journal = {J. ACM},
  volume = {24},
  pages = {161--175},
  publisher = {ACM Press},
  year = {1977},
  doi = {10.1145/321992.322002},
  address = {New York, NY, USA},
  issn = {0004-5411},
  number = {1}}

@inproceedings{Sun01a,
  author = {J. Sun and J.S. Dong and J. Lui and H. Wang},
  title = {Object-{Z} Web Environment and Projections to {UML}},
  booktitle = {{WWW10} --- 10th International World Wide Web Conference},
  pages = {725--734},
  publisher = {ACM},
  year = {2001},
  address = {New York}}

@inproceedings{Sun10a,
  author = {Xiaobing Sun and Bixin Li and Chuanqi Tao and Wanzhi Wen and Sai Zhang},
  title = {Change Impact Analysis Based on a Taxonomy of Change Types},
  booktitle = {Proceedings of the 34th Annual {IEEE} International Computer Software and Applications Conference, {COMPSAC} 2010, Seoul, Korea, 19-23 July 2010},
  pages = {373--382},
  year = {2010},
  url = {http://dx.doi.org/10.1109/COMPSAC.2010.45},
  doi = {10.1109/COMPSAC.2010.45}}

@inproceedings{Sun16a,
  author = {Sun, Chengnian and Le, Vu and Su, Zhendong},
  title = {Finding compiler bugs via live code mutation},
  booktitle = {Proceedings of the 2016 {ACM} {SIGPLAN} {International} {Conference} on {Object}-{Oriented} {Programming}, {Systems}, {Languages}, and {Applications}},
  pages = {849--863},
  publisher = {Association for Computing Machinery},
  year = {2016},
  url = {https://doi.org/10.1145/2983990.2984038},
  abstract = {Validating optimizing compilers is challenging because it is hard to generate valid test programs (i.e., those that do not expose any undefined behavior). Equivalence Modulo Inputs (EMI) is an effective, promising methodology to tackle this problem. Given a test program with some inputs, EMI mutates the program to derive variants that are semantically equivalent w.r.t. these inputs. The state-of-the-art instantiations of EMI are Orion and Athena, both of which rely on deleting code from or inserting code into code regions that are not executed under the inputs. Although both have demonstrated their ability in finding many bugs in GCC and LLVM, they are still limited due to their mutation strategies that operate only on dead code regions. This paper presents a novel EMI technique that allows mutation in the entire program (i.e., both live and dead regions). By removing the restriction of mutating only the dead regions, our technique significantly increases the EMI variant space. It also helps to more thoroughly stress test compilers as compilers must optimize mutated live code, whereas mutated dead code might be eliminated. Finally, our technique also makes compiler bugs more noticeable as miscompilations on mutated dead code may not be observable. We have realized the proposed technique in Hermes. The evaluation demonstrates Hermes's effectiveness. In 13 months, Hermes found 168 confirmed, valid bugs in GCC and LLVM, of which 132 have already been fixed.},
  keywords = {automated testing, Compiler testing, equivalent program variants, miscompilation},
  month = oct,
  series = {{OOPSLA} 2016},
  urldate = {2021-09-03}}

@inproceedings{Sun19a,
author = {Sun, Haiyang and Bonetta, Daniele and Schiavio, Filippo and Binder, Walter},
title = {Reasoning about the Node.Js Event Loop Using Async Graphs},
year = {2019},
isbn = {9781728114361},
publisher = {IEEE Press},
booktitle = {Proceedings of the 2019 IEEE/ACM International Symposium on Code Generation and Optimization},
pages = {61-72},
numpages = {12},
keywords = {Event-driven Programming, JavaScript, Dynamic Analysis, AsyncG},
location = {Washington, DC, USA},
series = {CGO 2019}
}

@techreport{Sun88a,
  author = {{Sun Microsystem}},
  title = {{RPC}: Remote Procedure Call protocol specification, version 2},
  year = {1988},
  institution = {Sun Microsystem}}

@misc{Sun97a,
  author = {SunSoft, Java On Solaris},
  title = {2.6-A White Paper, September 1997}}

@misc{SunJ2EEPatterns,
  title = {Sun J2EE Patterns Catalogue},
  url = {http://java.sun.com/blueprints/corej2eepatterns/Patterns/index.html},
  key = {SunJ2EEPatterns},
  note = {http://java.sun.com\-/blue\-prints\-/core\-j2ee\-patterns\-/Patterns\-/index.html}}

@inproceedings{Sund04a,
  author = {Sundresh, Sameer and Kim, Wooyoung and Agha, Gul},
  title = {SENS: A Sensor, Environment and Network Simulator},
  journal = {Simulation Symposium, Annual},
  booktitle = {Proceedings of the 37th Annual Simulation Symposium},
  pages = {221--230},
  publisher = {IEEE Computer Society},
  year = {2004},
  doi = {10.1109/SIMSYM.2004.1299486},
  address = {Los Alamitos, CA, USA},
  issn = {1080-241X}}

@article{Sung02a,
  author = {Sung, Minyoung and Kim, Soyoung and Park, Sangsoo and Chang, Naehyuck and Shin, Heonshik},
  title = {Comparative performance evaluation of Java threads for embedded applications: Linux Thread vs. Green Thread},
  journal = {Information processing letters},
  volume = {84},
  pages = {221--225},
  publisher = {Elsevier},
  year = {2002},
  number = {4}}

@misc{Sunm96a,
  author = {Sun Microsystems},
  title = {The {Java} Native Code {API}},
  year = {1996},
  institution = {Sun Microsystems}}

@book{Sury14a,
  title={Refactoring for software design smells: Managing technical debt},
  author={Suryanarayana, Girish and Samarthyam, Ganesh and Sharma, Tushar},
  year={2014},
  publisher={Morgan Kaufmann}
}

@book{Surya14a,
  author = {Suryanarayana, Girish and Samarthyam, Ganesh and Sharma, Tushar},
  title = {Refactoring for Software Design Smells: Managing Technical Debt},
  publisher = {Morgan Kaufmann Publishers Inc.},
  year = {2014},
  address = {San Francisco, CA, USA},
  isbn = {0128013974, 9780128013977}}

@article{Suss80a,
  author = {G. Sussman and G. Steele},
  title = {CONSTRAINTS: a language for expressing almost-hierarchical descriptions},
  journal = {Artificial Intelligence},
  volume = {14},
  pages = {1--39},
  year = {1980},
  number = {1}}

@phdthesis{Suth63a,
  author = {Ivan Edward Sutherland},
  title = {Sketchpad: A man-machine graphical communication system},
  year = {1963},
  school = {Massachusetts Institute of Technology},
  url = {http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-574.pdf},
  month = jan,
  type = {{Ph.D}. Thesis}}

@inproceedings{Suts14a,
  author = {Sutskever, Ilya and Vinyals, Oriol and Le, Quoc V},
  title = {Sequence to sequence learning with neural networks},
  booktitle = {Advances in neural information processing systems},
  pages = {3104--3112},
  year = {2014}}

@inproceedings{Sutt90a,
  author = {Stanley M. Sutton, Jr. and Dennis Heimbigner and Leon J. Osterweil},
  title = {Language constructs for managing change in process-centered environments},
  booktitle = {SDE 4: Proceedings of the fourth ACM SIGSOFT symposium on Software development environments},
  pages = {206--217},
  publisher = {ACM Press},
  year = {1990},
  doi = {10.1145/99277.99296},
  address = {New York, NY, USA},
  isbn = {0-89791-418-X},
  location = {Irvine, California, United States}}

@inproceedings{Suvee03a,
  author = {Suv\'{e}e, Davy and Vanderperren, Wim and Jonckers, Viviane},
  title = {JAsCo: An Aspect-Oriented Approach Tailored for Component Based Software Development},
  booktitle = {Proceedings of International Conference on Aspect-Oriented Software Development},
  pages = {21-29},
  publisher = {ACM},
  year = {2003},
  url = {https://doi.org/10.1145/643603.643606},
  doi = {10.1145/643603.643606},
  address = {New York, NY, USA},
  isbn = {1581136609},
  location = {Boston, Massachusetts},
  numpages = {9},
  series = {AOSD '03}}

@inproceedings{Suzu81a,
  author = {Norihisa Suzuki},
  title = {Inferring types in Smalltalk},
  booktitle = {Symposium on {P}rinciples of {P}rogramming {L}anguages ({POPL}'81)},
  pages = {187--199},
  publisher = {ACM Press},
  year = {1981},
  doi = {10.1145/567532.567553},
  address = {New York, NY, USA},
  isbn = {0-89791-029-X},
  location = {Williamsburg, Virginia}}

@inproceedings{Svet01a,
  author = {Davor Svetinovic and Michael Godfrey},
  title = {A Lightweight Architecture Recovery Process},
  booktitle = {Proceedings Eight Working Conference on Reverse Engineering ({WCRE}'01)},
  year = {2001},
  month = oct}

@misc{Svn00a,
  title = {Subversion},
  url = {http://subversion.tigris.org},
  key = {Subversion}}

@article{Svob84a,
  author = {L. Svobodova},
  title = {Resilient Distributed Computing},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-10},
  pages = {257--268},
  year = {1984},
  month = may,
  number = {3}}

@inproceedings{Svya19a,
  author = {Svyatkovskiy, Alexey and Zhao, Ying and Fu, Shengyu and Sundaresan, Neel},
  title = {Pythia: AI-assisted Code Completion System},
  booktitle = {Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery \& Data Mining},
  pages = {2727-2735},
  year = {2019},
  doi = {10.1145/3292500.3330699},
  isbn = {978-1-4503-6201-6},
  month = jul}

@inproceedings{Swain10a,
  author = {Swaine, James and Tew, Kevin and Dinda, Peter and Findler, Robert Bruce and Flatt, Matthew},
  title = {Back to the Futures: Incremental Parallelization of Existing Sequential Runtime Systems},
  booktitle = {Proceedings of the ACM International Conference on Object Oriented Programming Systems Languages and Applications},
  pages = {583--597},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1869459.1869507},
  doi = {10.1145/1869459.1869507},
  acmid = {1869507},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0203-6},
  keywords = {functional programming, parallel programming, racket, runtime systems},
  location = {Reno/Tahoe, Nevada, USA},
  numpages = {15},
  series = {OOPSLA '10}}

@article{Swar82a,
  author = {W. Swartout and R. Balzer},
  title = {On the Inevitable Intertwining of Specification and Implementation},
  journal = {CACM},
  volume = {25},
  pages = {438--440},
  year = {1982}}

@inproceedings{Swee00a,
  author = {Sweeney, P. F. and Tip, F.},
  title = {Extracting Library-Based Object-Orientated Applications},
  booktitle = {Foundations of Software Engineering, Proceedings of the Eighth International Symposium on Foundations of Software Engineering for the 21st Century Applications.},
  pages = {98--107},
  publisher = {ACM Press},
  year = {2000},
  address = {New York},
  editor = {Rosenblum, D. S.}}

@inproceedings{Swee04a,
  author = {Sweeney, Peter F and Hauswirth, Matthias and Cahoon, Brendon and Cheng, Perry and Diwan, Amer and Grove, David and Hind, Michael},
  title = {Using Hardware Performance Monitors to Understand the Behavior of Java Applications.},
  booktitle = {Virtual Machine Research and Technology Symposium},
  pages = {57--72},
  year = {2004}}

@inproceedings{Swee85a,
  author = {R.E. Sweet},
  title = {The Mesa Programming Environment},
  booktitle = {Proceedings ACM SIGPLAN 85 Symposium on Language Issues in Programming Environments, ACM SIGPLAN Notices},
  volume = {20},
  pages = {216--229},
  year = {1985},
  month = jul}

@inproceedings{Swee99a,
  author = {Peter F. Sweeney and Joseph (Yossi) Gil},
  title = {Space and time-efficient memory layout for multiple inheritance},
  booktitle = {Proceedings OOPSLA '99},
  pages = {256--275},
  publisher = {ACM Press},
  year = {1999},
  doi = {10.1145/320384.320408},
  isbn = {1-58113-238-7},
  location = {Denver, Colorado, United States}}

@inproceedings{Swin85a,
  author = {D. Swinehart and P. Zwellweger and R. Hagmann},
  title = {The Structure of Cedar},
  booktitle = {Proceedings ACM SIGPLAN 85 Symposium on Language Issues in Programming Environments, ACM SIGPLAN Notices},
  volume = {20},
  pages = {230--244},
  year = {1985},
  month = jul}

@article{Swin86a,
  author = {D. Swinehart and P. Zwellweger and Richard Beach},
  title = {A Structural View of the Cedar Programming Environment},
  journal = {ACM TOPLAS},
  volume = {8},
  pages = {419--490},
  year = {1986},
  month = oct,
  number = {4}}

@misc{Swing,
  title = {Swing {API}},
  key = {Swing},
  note = {http://java.sun.com/j2se/1.4.2/docs/{API}/javax/swing/package-summary.html}}

@book{Swit93a,
  author = {Robert Switzer},
  title = {Eiffel: An Introduction},
  publisher = {Prentice-Hall},
  year = {1993},
  isbn = {0-13-105909-2}}

@book{Symb84a,
  author = {Symbolics Inc.},
  title = {The Lisp Machine Manual},
  publisher = {MIT AI Lab},
  year = {1984},
  address = {Cambridge, Mass.},
  month = mar}

@inproceedings{Syny05a,
  author = {Synytskyy and Holt and Davis},
  title = {Browsing Software Architectures With LSEdit},
  booktitle = {Proceedings of International Worksop on Program Comprehension (IWPC)},
  pages = {176--178},
  year = {2005}}

@phdthesis{Syst00a,
  author = {Tarja Syst{\"a}},
  title = {Static and Dynamic Reverse Engineering Techniques for {Java} Software Systems},
  year = {2000},
  school = {University of Tampere}}

@inproceedings{Syst00b,
  author = {Tarja Syst{\"a}},
  title = {Understanding the behavior of {Java} Programs},
  booktitle = {Proceedings IEEE International Working Conference in Reverse Engineering ({WCRE} 2000)},
  pages = {214--223},
  publisher = {IEEE Computer Society Press},
  year = {2000},
  address = {Los Alamitos CA},
  month = nov}

@article{Syst01a,
  author = {Tarja Syst{\"a} and Kai Koskimies and Hausi M\"{u}ller},
  title = {Shimba --- An Environment for Reverse Engineering {Java} Software Systems},
  journal = {Software --- Practice and Experience},
  volume = {31},
  pages = {371--394},
  publisher = {John Wiley \& Sons, Inc.},
  year = {2001},
  doi = {10.1002/spe.386},
  address = {New York, NY, USA},
  issn = {0038-0644},
  month = jan,
  number = {4}}

@inproceedings{Syst99a,
  author = {Tarja Syst\"a},
  title = {On the relationships between static and dynamic models in reverse engineering Java software},
  booktitle = {Working Conference on Reverse Engineering ({WCRE}99)},
  pages = {304--313},
  year = {1999},
  month = oct}

@inproceedings{Szcz88a,
  author = {Martha R. Szczur and Philip Miller},
  title = {Transportable Applications Environment ({TAE}) Plus Experiences in "Object"-ively Modernizing a User Interface Environment},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {58--70},
  year = {1988},
  month = nov}

@inproceedings{Szek88a,
  author = {Pedro Szekely and Brad Myers},
  title = {A User Interface Toolkit Based on Graphical Objects and Constraints},
  booktitle = {Proceedings OOPSLA '88, ACM SIGPLAN Notices},
  volume = {23},
  pages = {36--45},
  year = {1988},
  month = nov}

@book{Szyp02a,
  author = {Clemens A. Szyperski},
  title = {Component Software --- Beyond Object-Oriented Programming},
  publisher = {Addison Wesley},
  year = {2002},
  edition = {Second Edition},
  isbn = {0-201-74572-0}}

@book{Szyp02b,
  author = {Szyperski, C. and Gruntz, D. and Murer, S.},
  title = {Component Software: Beyond Object-oriented Programming},
  publisher = {ACM Press},
  year = {2002},
  url = {https://books.google.fr/books?id=U896iwmtiagC},
  isbn = {9780201745726},
  lccn = {2002034478},
  series = {ACM Press Series}}

@inproceedings{Szyp92a,
  author = {Clemens A. Szyperski},
  title = {Import is Not Inheritance --- Why We Need Both: Modules and Classes},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {19--32},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@book{Szyp98a,
  author = {Clemens A. Szyperski},
  title = {Component Software},
  publisher = {Addison Wesley},
  year = {1998},
  isbn = {0-201-17888-5}}

@inproceedings{Taen89a,
  author = {David Taenzer and Murthy Ganti and Sunil Podar},
  title = {Problems in Object-Oriented Software Reuse},
  booktitle = {Proceedings ECOOP '89},
  pages = {25--38},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Taft93a,
  author = {S. Tucker Taft},
  title = {Ada 9X: From Abstraction-Oriented to Object-Oriented},
  booktitle = {Proceedings OOPSLA '93},
  volume = {28},
  pages = {127--143},
  year = {1993},
  month = oct}

@inproceedings{Taha03a,
  author = {Walid Taha},
  title = {A Gentle Introduction to Multi-stage Programming.},
  booktitle = {Domain-Specific Program Generation},
  pages = {30--50},
  year = {2003}}

@inproceedings{Taha96a,
  author = {Y. Tahara and F. Kumeno and A. Ohsuga and S. Honiden},
  title = {An Algebraic Semantics of Reflective Objects},
  booktitle = {Proceedings of ISOTAS '96, LNCS 1049},
  pages = {171--189},
  year = {1996},
  month = mar,
  organization = {JSSST-JAIST}}

@inproceedings{Tahe05a,
  author = {Taher, Laila and Basha, Rawshan and El Khatib, Hazem},
  title = {Establishing Association between QoS Properties in Service Oriented Architecture},
  booktitle = {Proceedings of the International Conference on Next Generation Web Services Practices},
  pages = {163--},
  publisher = {IEEE Computer Society},
  year = {2005},
  url = {http://portal.acm.org/citation.cfm?id=1114688.1114919},
  doi = {10.1109/NWESP.2005.37},
  acmid = {1114919},
  address = {Washington, DC, USA},
  isbn = {0-7695-2452-4},
  keywords = {QoS, QoS-IC, QoS Manager, QoS-Constraints}}

@article{Taiv95a,
  author = {Antero Taivalsaari},
  title = {Delegation versus Concatenation or Cloning is Inheritance too},
  journal = {OOPS Messenger},
  volume = {6},
  pages = {20--49},
  year = {1995},
  number = {3}}

@article{Taiv95b,
  author = {Taivalsaari, Antero and Trauter, Roland and Casais, Eduardo},
  title = {Workshop on Object-Oriented Legacy Systems and Software Evolution},
  journal = {SIGPLAN OOPS Mess.},
  volume = {6},
  pages = {180 to 185},
  publisher = {Association for Computing Machinery},
  year = {1995},
  url = {https://doi.org/10.1145/260111.260276},
  doi = {10.1145/260111.260276},
  address = {New York, NY, USA},
  issn = {1055-6400},
  number = {4},
  numpages = {6}}

@article{Taiv96a,
  author = {Antero Taivalsaari},
  title = {On the Notion of Inheritance},
  journal = {ACM Computing Surveys},
  volume = {28},
  pages = {438--479},
  year = {1996},
  url = {http://www.itu.dk/people/kbilsted/kurser/aos2003f/session05/taivalsaari96onTheNotionOfInheritance.pdf},
  doi = {10.1145/243439.243441},
  month = sep,
  number = {3}}

@article{Taiv97a,
  author = {Antero Taivalsaari},
  title = {Classes Versus Prototypes: Some Philosophical and Historical Observations},
  journal = {Journal of Object-Oriented Programming (JOOP)},
  volume = {10},
  pages = {44--50},
  year = {1997},
  number = {7}}

@inproceedings{Taka16a,
  author = {Takahashi, Yusuke and Nitta, Naoya},
  title = {Composite Refactoring for Decoupling Multiple Classes},
  booktitle = {2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)},
  volume = {1},
  pages = {594-598},
  year = {2016},
  doi = {10.1109/SANER.2016.54}}

@inproceedings{Taka92a,
  author = {Kazunori Takashio and Mario Tokoro},
  title = {{DROL}: An Object-Oriented Programming Language for Distributed Real-Time Systems},
  booktitle = {Proceedings OOPSLA '92, ACM SIGPLAN Notices},
  volume = {27},
  pages = {276--297},
  year = {1992},
  month = oct}

@article{Taka96a,
  author = {Armstrong A. Takang and Penny A. Grubb and Robert D. Macredie},
  title = {The effects of comments and identifier names on program comprehensibility: an experimental investigation},
  journal = {Journal of Programming Languages},
  volume = {4},
  pages = {143-167},
  year = {1996},
  number = {3}}

@article{Talc93a,
  author = {Talcott, Carolyn L.},
  title = {A Theory of Binding Structures and Applications to Rewriting},
  journal = tcs,
  volume = 112,
  year = {1993},
  url = {http://steam.stanford.edu/MT/91amast-tcs.ps.Z},
  cltnote = {short version in: Second International Conference on Algebraic Methodology and Software Technology, AMAST91, LNCS ???, 1991},
  ftpsource = {steam.stanford.edu:pub/MT/91amast-tcs.ps.Z}}

@mastersthesis{Tale03a,
  author = {Daniele Talerico},
  title = {Grouping in Object-Oriented Reverse Engineering},
  year = {2003},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Tale03a.pdf},
  abstract = {Software Reengineering is a main issue in software
industry. One of its main activities, reverse
engineering, is concerned with trying to understand
a software system and how it ticks. For the
investigation and graphical representation of large
and complex systems there are various tools for
automated support. However, the information
extraction with these tools is di cult, visualising
certain aspects of a software system may overwhelm
the observer with its complexity. We discuss in this
work an object-oriented reverse engineering approach
using grouping. The intention of grouping is to
create groups with components of a software system.
The use of grouping has many benefits for a reverse
engineer: it supports the program understanding and
the design recovery, it adds higher abstraction
levels to the system, and it permits to create di
erent representations as well as alternate views of
a system. Furthermore, the use of groups and the
scalability of grouping are effective in reducing
the complexity of large systems. All the information
we need to create groups is found in the software
system. User-defined queries on the system perform
the selection of components for the creation of new
groups. We introduce the visualisation of groups and
show their usefulness with a Smalltalk case study.},
  month = jun,
  type = {Diploma Thesis}}

@book{Tali94a,
  author = {Taligent Inc.},
  title = {Taligent's Guide to Designing Programs: Well Mannered Object-Oriented Design in {C}++},
  publisher = {Addison Wesley},
  year = {1994},
  isbn = {0-201-40888-0}}

@article{Talp92a,
  author = {J.-P. Talpin and Pierre Jouvelot},
  title = {Polymorphic type, region and effect inference},
  journal = {Journal of Functional Programming},
  volume = {2},
  pages = {245--271},
  year = {1992}}

@inproceedings{Taly11a,
  author = {Taly, Ankur and Erlingsson, \'{U}lfar and Mitchell, John C. and Miller, Mark S. and Nagra, Jasvir},
  title = {Automated Analysis of Security-Critical JavaScript {API}s},
  booktitle = {Proceedings of the 2011 IEEE Symposium on Security and Privacy},
  pages = {363--378},
  publisher = {IEEE Computer Society},
  year = {2011},
  url = {http://dx.doi.org/10.1109/SP.2011.39},
  doi = {10.1109/SP.2011.39},
  acmid = {2006776},
  address = {Washington, DC, USA},
  isbn = {978-0-7695-4402-1},
  keywords = {Language-Based Security, Points-to Analysis, {API}s, Javascript},
  numpages = {16},
  series = {SP '11}}

@inproceedings{Tam00a,
  author = {Tam, J. and Greenberg, S. and Maurer, F.},
  title = {Change Management},
  booktitle = {Proceedings of the Western Computer Graphics Symposium 2000},
  publisher = {Panorama Mountain Village},
  year = {2000},
  address = {BC, Canada}}

@inproceedings{Tame21a,
  author = {Tamer, Hagen and van den Bongard, Daniel and Beck, Fabian},
  title = {Visually Analyzing the Structure and Code Quality of Component-based Web Applications},
  booktitle = {2021 Working Conference on Software Visualization (VISSOFT)},
  pages = {160--164},
  year = {2021},
  organization = {IEEE}}

@inproceedings{Tan07a,
  author = {Gang Tan and Greg Morrisett},
  title = {Ilea: inter-language analysis across java and c},
  booktitle = {OOPSLA '07: Proceedings of the 22nd annual ACM SIGPLAN conference on Object oriented programming systems and applications},
  pages = {39--56},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1297027.1297031},
  address = {New York, NY, USA},
  isbn = {978-1-59593-786-5},
  location = {Montreal, Quebec, Canada}}

@inproceedings{Tan89a,
  author = {L. Tan and T. Katayama},
  title = {Meta Operations for Type Management in Object-oriented Databases --- a Lazy Mechanism for Schema Evolution},
  booktitle = {First International Conference on Deductive and Object-Oriented Databases, DOOD89.},
  pages = {241--258},
  publisher = {North-Holland},
  year = {1989},
  address = {Kyoto, Japan},
  editor = {W. Kim and J.-M. Nicolas and S. Nishio}}

@inproceedings{Tana15,
  author = {Tanaka, Kazuaki and Nagumanthri, Avinash Dev and Matsumoto, Yukihiro},
  title = {mruby--R{API}d Software Development for Embedded Systems},
  booktitle = {2015 15th International Conference on Computational Science and Its Applications},
  pages = {27--32},
  year = {2015},
  organization = {IEEE}}

@article{Tane85a,
  author = {A.S. Tanenbaum and R. Van Renesse},
  title = {Distributed Operating Systems},
  journal = {ACM Computing Surveys},
  volume = {17},
  pages = {419--470},
  year = {1985},
  month = dec,
  number = {4}}

@book{Tane87a,
  author = {Andrew S. Tanenbaum},
  title = {Operating Systems Design Implemtations},
  publisher = {Prentice-Hall},
  year = {1987},
  isbn = {0-13-637331}}

@article{Tang18a,
  author = {Yixuan Tang and Zhilei Ren and Weiqiang Kong and He Jiang},
  title = {Compiler Testing: {A} Systematic Literature Analysis},
  journal = {Frontiers of Computer Science},
  year = {2020},
  url = {http://arxiv.org/abs/1810.02718}}

@article{Tani90a,
title = {VIVA: A visual language for image processing},
journal = {Journal of Visual Languages and Computing},
volume = {1},
number = {2},
pages = {127-139},
year = {1990},
issn = {1045-926X},
doi = {https://doi.org/10.1016/S1045-926X(05)80012-6},
url = {https://www.sciencedirect.com/science/article/pii/S1045926X05800126},
author = {Steven L. Tanimoto},
abstract = {Visual languages have been developed to help new programmers express algorithms easily. They also help to make experienced programmers more productive by simplifying the organization of a program through the use of visual representations. However, visual languages have not reached their full potential because of several problems including the following: difficulty of producing visual representations for the more abstract computing constructs; the lack of adequate computing power to update the visual representations in response to user actions; the immaturity of the subfield of visual programming and need for additional breakthroughs and standardization of existing mechanisms. Visualization of Vision Algorithms (VIVA) is a proposed visual language for image processing. Its main purpose is to serve as an effective teaching tool for students of image processing. Its design also takes account of several secondary goals, including the completion of a software platform for research in human/image interaction, the creation of a vehicle for studying algorithms and architectures for parallel image processing, and the establishment of a presentation medium for image-processing algorithms.}
}

@inproceedings{Tann83a,
  author = {P.P. Tanner and W.A.S. Buxton},
  title = {Some Issues in Future Interface Management System Development},
  booktitle = {IFIP WG 5.2, Workshop on User Interface Management},
  year = {1983},
  address = {Seeheim, Federal Republic of Germany},
  month = nov}

@inproceedings{Tans08a,
  author = {Tansey, Wesley and Tilevich, Eli},
  title = {Annotation refactoring: inferring upgrade transformations for legacy applications},
  booktitle = {OOPSLA '08: Proceedings of the 23rd ACM SIGPLAN conference on Object-oriented programming systems, languages and applications},
  pages = {295--312},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1449764.1449788},
  address = {New York, NY, USA},
  isbn = {978-1-60558-215-3},
  location = {Nashville, TN, USA}}

@inproceedings{Tant01a,
  author = {{\'E}ric Tanter and Noury Bouraqadi and Jacques Noy\'e},
  title = {Reflex --- Towards an open reflective extension of {Java}},
  booktitle = {Proceedings of the Third International Conference on Metalevel Architectures and Separation of Crosscutting Concerns},
  volume = {2192},
  pages = {25--43},
  publisher = {Springer-Verlag},
  year = {2001},
  series = {LNCS}}

@misc{Tant01b,
  author = {{\'E}ric Tanter and Jose Piquer},
  title = {Managing References upon Object Migration: Applying Separation of Concerns},
  year = {2001},
  month = {jan},
  note = {In: Proceedings of the XXI International Conference of the Chilean Computer Science Society (SCCC 2001)}}

@inproceedings{Tant02,
  author = {{\'E}ric Tanter and Marc S{\'e}gura-Devillechaise and Jacques Noy{\'e} and Jos{\'e} Piquer},
  title = {Altering {Java} Semantics via Bytecode Manipulation},
  booktitle = {Proceedings of GPCE'02},
  volume = {2487},
  pages = {283--89},
  publisher = {Springer-Verlag},
  year = {2002},
  series = {LNCS}}

@inproceedings{Tant03a,
  author = {{\'E}ric Tanter and Jacques Noy\'e and Denis Caromel and Pierre Cointe},
  title = {Partial Behavioral Reflection: Spatial and Temporal Selection of Reification},
  booktitle = {Proceedings of OOPSLA '03, ACM SIGPLAN Notices},
  pages = {27--46},
  year = {2003},
  url = {http://www.dcc.uchile.cl/~etanter/research/publi/2003/tanter-oopsla03.pdf},
  doi = {10.1145/949305.949309},
  isbn = {1581137125},
  month = {nov}}

@phdthesis{Tant04a,
  author = {{\'E}ric Tanter},
  title = {From Metaobject Protocols to Versatile Kernels for Aspect-Oriented Programming},
  year = {2004},
  school = {University of Nantes and University of Chile},
  url = {http://pleiad.dcc.uchile.cl/papers/2004/etanter-phd.pdf.zip},
  month = {nov}}

@inproceedings{Tant04b,
  author = {{\'E}ric Tanter and Jacques Noy\'e},
  title = {Motivation and Requirements for a Versatile {AOP} Kernel},
  booktitle = {1st European Interactive Workshop on Aspects in Software (EIWAS 2004)},
  year = {2004},
  address = {Berlin, Germany},
  month = sep}

@inproceedings{Tant05b,
  author = {{\'E}ric Tanter and Jacques Noy\'e},
  title = {A Versatile Kernel for Multi-Language {AOP}},
  booktitle = {Proceedings of the 4th ACM SIGPLAN/SIGSOFT Conference on Generative Programming and Component Engineering (GPCE 2005)},
  volume = {3676},
  year = {2005},
  address = {Tallin, Estonia},
  month = {sep},
  series = {LNCS}}

@inproceedings{Tant05c,
  author = {{\'E}ric Tanter},
  title = {Mirror Methods --- Reconciling Reflection and Extreme Encapsulation},
  booktitle = {ECOOP Workshop on Object Technology for Ambient Intelligence},
  year = {2005},
  month = jul}

@inproceedings{Tant06b,
  author = {{\'E}ric Tanter},
  title = {Aspects of Composition in the {Reflex AOP} Kernel},
  booktitle = {Proceedings of the 5th International Symposium on Software Composition (SC 2006)},
  volume = {4089},
  pages = {98--113},
  publisher = {Springer},
  year = {2006},
  doi = {10.1007/11821946_7},
  address = {Vienna, Austria},
  editor = {L{\"o}we, Welf and S{\"u}dholt, Mario},
  isbn = {978-3-540-37659-0},
  month = mar,
  series = {LNCS}}

@inproceedings{Tant06c,
  author = {{\'E}ric Tanter},
  title = {On Dynamically-Scoped Crosscutting Mechanisms},
  booktitle = {Proceedings of the European Workshop on Aspects in Software (EWAS 2006)},
  pages = {18--22},
  publisher = {Technical Report IAI-TR-2006-6, University of Bonn, Germany},
  year = {2006},
  address = {Twente, The Netherlands},
  editor = {Kniesel, G{\"u}nter},
  institution = {University of Bonn},
  month = sep}

@inproceedings{Tant06d,
  author = {{\'E}ric Tanter},
  title = {An Extensible Kernel Language for {AOP}},
  booktitle = {Proceedings of AOSD Workshop on Open and Dynamic Aspect Languages},
  year = {2006},
  address = {Bonn, Germany}}

@article{Tant07a,
  author = {{\'E}ric Tanter},
  title = {On Dynamically-Scoped Crosscutting Mechanisms},
  journal = {ACM SIGPLAN Notices},
  volume = 42,
  pages = {27--33},
  publisher = {ACM Press},
  year = {2007},
  url = {http://pleiad.dcc.uchile.cl/papers/2007/tanter-sigplan2007.pdf},
  doi = {10.1145/1241761.1241764},
  month = feb,
  number = 2}

@inproceedings{Tant08a,
  author = {{\'E}ric Tanter},
  title = {Expressive Scoping of Dynamically-Deployed Aspects},
  booktitle = {Proceedings of the 7th ACM International Conference on Aspect-Oriented Software Development (AOSD 2008)},
  pages = {168--179},
  publisher = {ACM Press},
  year = {2008},
  url = {http://pleiad.dcc.uchile.cl/papers/2008/tanter-aosd2008.pdf},
  address = {Brussels, Belgium},
  key = {AOSD 2008},
  month = apr}

@inproceedings{Tant08b,
  author = {Tanter, \'{E}ric},
  title = {Contextual values},
  booktitle = {DLS '08: Proceedings of the 2008 symposium on Dynamic languages},
  pages = {1--10},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1408681.1408684},
  address = {New York, NY, USA},
  isbn = {978-1-60558-270-2},
  location = {Paphos, Cyprus}}

@inproceedings{Tant09a,
  author = {{\'E}ric Tanter and Johan Fabry and R{\'e}mi Douence and Jacques Noy{\'e} and Mario S{\"u}dholt},
  title = {Expressive Scoping of Distributed Aspects},
  booktitle = {Proceedings of the 8th ACM International Conference on Aspect-Oriented Software Development (AOSD 2009)},
  pages = {27--38},
  publisher = {ACM Press},
  year = {2009},
  url = {http://pleiad.dcc.uchile.cl/papers/2009/tanterAl-aosd2009.pdf},
  doi = {10.1145/1509239.1509245},
  address = {Charlottesville, Virginia, USA},
  key = {AOSD 2009},
  month = mar}

@techreport{Tant09b,
  author = {{\'E}ric Tanter},
  title = {Reflection and Open Implementations},
  year = {2009},
  institution = {University of Chile},
  month = nov,
  number = {TR/DCC-2009-13}}

@inproceedings{Tant13a,
  author = {Tantithamthavorn, Chakkrit and Ihara, Akinori and Matsumoto, Ken-ichi},
  title = {Using co-change histories to improve bug localization performance},
  booktitle = {2013 14th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing},
  pages = {543--548},
  year = {2013},
  organization = {IEEE}}

@article{Tanz95a,
  author = {C. Tanzer},
  title = {Remarks on object-oriented modeling of associations},
  journal = {JOOP},
  pages = {43--46},
  year = {1995},
  month = feb}

@inproceedings{Tao12a,
  author = {Yida Tao and Yingnong Dang and Tao Xie and Dongmei Zhang and Sunghun Kim},
  title = {How Do Software Engineers Understand Code Changes?: An Exploratory Study in Industry},
  booktitle = {Proceedings of FSE 2012 (20th ACM SIGSOFT International Symposium on the Foundations of Software Engineering)},
  publisher = {ACM},
  year = {2012},
  date-added = {2014-11-14 22:56:41 +0000},
  date-modified = {2014-11-18 10:15:05 +0000}}

@inproceedings{Tao15a,
  author = {Tao, Yida and Kim, Sunghun},
  title = {Partitioning Composite Code Changes to Facilitate Code Review},
  booktitle = {Proceedings of the 12th Working Conference on Mining Software Repositories},
  year = {2015},
  location = {Florence, Italy},
  series = {MSR 2015}}

@article{Tarj72a,
  author = {Robert Endre Tarjan},
  title = {Depth-First Search and Linear Graph Algorithms},
  journal = {SIAM J. Comput.},
  volume = {1},
  pages = {146--160},
  year = {1972},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  number = {2}}

@article{Tarj73a,
  author = {Robert Endre Tarjan},
  title = {Enumeration of the Elementary Circuits of a Directed Graph},
  journal = {SIAM J. Comput.},
  volume = {2},
  pages = {211--216},
  year = {1973},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  number = {3}}

@inproceedings{Tarr00a,
  author = {Peri L. Tarr and Maja D'Hondt and Lodewijk Bergmans and Cristina Videira Lopes},
  title = {Workshop on Aspects and Dimensions of Concern: Requirements on, and Challenge Problems for, Advanced Separation of Concerns},
  booktitle = {{ECOOP} 2000 Workshops},
  volume = {1964},
  pages = {203--240},
  publisher = {Springer},
  year = {2000},
  editor = {Jacques Malenfant and Sabine Moisan and Ana M. D. Moreira},
  series = {LNCS}}

@inproceedings{Tarr99a,
  author = {Peri Tarr and Harold Ossher and William Harrison and Sutton, Jr, Stanley M.},
  title = {{N Degrees of Separation: Multi-dimensional Separation of Concerns}},
  booktitle = {Proceedings of ICSE '99},
  pages = {107--119},
  year = {1999},
  address = {Los Angeles CA, USA}}

@article{Tarv09a,
  author = {Alexander Tarvo},
  title = {Mining Software History to Improve Software Maintenance Quality: A Case Study},
  journal = {IEEE Software},
  volume = 26,
  pages = {34--40},
  publisher = {IEEE Computer Society},
  year = {2009},
  doi = {10.1109/MS.2009.15},
  month = jan,
  number = 1}

@book{Tash98a,
  author = {Tashakkori, Abbas and Teddlie, Charles},
  title = {Mixed methodology: Combining qualitative and quantitative approaches},
  volume = {46},
  publisher = {Sage},
  year = {1998}}

@article{Tass02a,
  author = {Tassey, Gregory},
  title = {The economic impacts of inadequate infrastructure for software testing},
  journal = {National Institute of Standards and Technology},
  year = {2002}}

@book{Tath03a,
  author = {Eric Tatham},
  title = {Smalltalk bytes book},
  publisher = {Mixed Reality Publication},
  year = {2003}}

@article{Tats16a,
  author = {Tatsuya Abe and Tomoharu Ugawa and Toshiyuki Maeda and Kousuke Matsumoto},
  title = {Reducing State Explosion for Software Model Checking with Relaxed Memory Consistency Models},
  journal = {CoRR},
  volume = {abs/1608.05893},
  year = {2016},
  url = {http://arxiv.org/abs/1608.05893},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl = {https://dblp.org/rec/journals/corr/AbeUMM16.bib},
  eprint = {1608.05893},
  eprinttype = {arXiv},
  timestamp = {Mon, 13 Aug 2018 16:48:03 +0200}}

@inproceedings{Taub11a,
  author = {Taube-Schock, Craig and Walker, Robert J. and Witten, Ian H},
  title = {Can we avoid high coupling?},
  booktitle = {Proceedings of ECOOP 2011},
  year = {2011}}

@incollection{Tayl00a,
  author = {Paul Taylor},
  title = {Capable, Productive, and Satisfied: Some Organizational Patterns for Protecting Productive People},
  booktitle = {Pattern Languages of Program Design},
  volume = {4},
  pages = {611--636},
  publisher = {Addison Wesley},
  year = {2000},
  editor = {N. Harrison and B. Foote and H. Rohnert}}

@inproceedings{Tayl02a,
  author = {Christopher Taylor and Malcolm Munro},
  title = {Revision Towers},
  booktitle = {Proceedings 1st International Workshop on Visualizing Software for Understanding and Analysis},
  pages = {43--50},
  publisher = {IEEE Computer Society},
  year = {2002},
  address = {Los Alamitos CA},
  isbn = {0-7695-1662-9}}

@book{Tayl09a,
  author = {R. N. Taylor and N. Medvidovic and E. M. Dashofy},
  title = {Software Architecture: Foundations, Theory, and Practice},
  publisher = {Wiley},
  year = {2009}}

@article{Teit81a,
  author = {W. Teitelman and Larry Masinter},
  title = {The Interlisp Programming Environment},
  journal = {IEEE Computer},
  volume = {14},
  pages = {25--34},
  year = {1981},
  month = apr,
  number = {4}}

@inproceedings{Teit84a,
  author = {W. Teitelman},
  title = {A Tour through Cedar},
  booktitle = {Proceedings of ICSE 1984 (7th International Conference on Software Engineering},
  pages = {181--195},
  publisher = {IEEE Computer Society},
  year = {1984},
  address = {Los Alamitos CA}}

@book{Tel94a,
  author = {Gerard Tel},
  title = {Introduction to Distibuted Algorithms},
  publisher = {Cambridge Press},
  year = {1994}}

@inproceedings{Tele02a,
  author = {Telea and Maccari and Riva},
  title = {An Open Visualization Toolkit for Reverse Architecting},
  booktitle = {Proceedings of International Workshop on Program Comprehension (IWPC)},
  pages = {3--13},
  publisher = {IEEE CS},
  year = {2002},
  doi = {10.1109/WPC.2002.1021303}}

@inproceedings{Tele03a,
  author = {Telea, Alexandru and Maccari, Alessandro and Riva, Claudio},
  title = {An open toolkit for prototyping reverse engineering visualizations},
  booktitle = {VISSYM '02: Proceedings of the symposium on Data Visualisation 2002},
  pages = {241--ff},
  publisher = {Eurographics Association},
  year = {2002},
  url = {http://portal.acm.org/citation.cfm?id=509781},
  address = {Aire-la-Ville, Switzerland, Switzerland},
  citeulike-article-id = {5033297},
  isbn = {1-58113-536-X},
  location = {Barcelona, Spain},
  posted-at = {2009-07-01 14:58:40},
  priority = {0}}

@article{Tele08a,
  author = {Alexandru Telea and David Auber},
  title = {Code Flows: Visualizing Structural Evolution of Source Code},
  journal = {Comput. Graph. Forum},
  volume = {27},
  pages = {831-838},
  year = {2008},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {10.1111/j.1467-8659.2008.01214.x},
  number = {3}}

@article{Tele10a,
  author = {Telea, Alexandru and Voinea, Lucian and Sassenburg, Hans},
  title = {Visual tools for software architecture understanding: A stakeholder perspective},
  journal = {IEEE software},
  volume = {27},
  pages = {46--53},
  publisher = {IEEE},
  year = {2010},
  number = {6}}

@book{Tell01a,
  author = {Telles, Matthew and Hsieh, Yuan},
  title = {The science of debugging},
  publisher = {Coriolis Group Books},
  year = {2001}}

@inproceedings{Temp08a,
  author = {Ewan Tempero and James Noble and Hayden Melton},
  title = {How Do Java Programs Use Inheritance? An Empirical Study of Inheritance in Java Software},
  booktitle = {ECOOP '08: Proceedings of the 22nd European conference on Object-Oriented Programming},
  pages = {667--691},
  publisher = {Springer-Verlag},
  year = {2008},
  address = {Berlin, Heidelberg},
  isbn = {978-3-540-70591-8},
  location = {Paphos, Cypress}}

@inproceedings{Temp10a,
  author = {E. {Tempero} and C. {Anslow} and J. {Dietrich} and T. {Han} and J. {Li} and M. {Lumpe} and H. {Melton} and J. {Noble}},
  title = {The Qualitas Corpus: A Curated Collection of Java Code for Empirical Studies},
  booktitle = {Asia Pacific Software Engineering Conference},
  pages = {336-345},
  year = {2010},
  doi = {10.1109/APSEC.2010.46}}

@article{Tene00a,
  author = {Tenenbaum, Joshua B. and Silva, Vin and Langford, John C.},
  title = {A Global Geometric Framework for Nonlinear Dimensionality Reduction},
  journal = {Science},
  volume = {290},
  pages = {2319--2323},
  year = {2000},
  url = {http://dx.doi.org/10.1126/science.290.5500.2319},
  doi = {10.1126/science.290.5500.2319},
  citeulike-article-id = {266187},
  issn = {00368075},
  month = dec,
  number = {5500},
  posted-at = {2009-11-02 14:47:35},
  priority = {2}}

@inproceedings{Teng16a,
  author = {Tengeri, D{\'a}vid and Horv{\'a}th, Ferenc and Besz{\'e}des, {\'A}rp{\'a}d and Gergely, Tam{\'a}s and Gyim\'{o}thy, Tibor},
  title = {Negative Effects of Bytecode Instrumentation on {Java} Source Code Coverage},
  booktitle = {Proceedings of the IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER'16)},
  pages = {225-235},
  year = {2016},
  location = {Osaka, Japan},
  month = mar}

@article{Tenn76a,
  author = {R.D. Tennent},
  title = {The Denotational Semantics of Programming Languages},
  journal = {Communications of the ACM},
  volume = {19},
  pages = {437--453},
  year = {1976},
  month = aug,
  number = {8}}

@inproceedings{Teod01a,
  author = {Teodorescu, Radu and Pandey, Raju},
  title = {Using JIT Compilation and Configurable Runtime Systems for Efficient Deployment of Java Programs on Ubiquitous Devices},
  booktitle = {Proceedings of the 3rd International Conference on Ubiquitous Computing},
  pages = {76--95},
  publisher = {Springer-Verlag},
  year = {2001},
  url = {http://dl.acm.org/citation.cfm?id=647987.741339},
  acmid = {741339},
  address = {London, UK, UK},
  isbn = {3-540-42614-0},
  location = {Atlanta, Georgia, USA},
  numpages = {20},
  series = {UbiComp '01}}

@inproceedings{Tepp09a,
  author = {Teppe, Werner},
  title = {The ARNO project: Challenges and experiences in a large-scale industrial software migration project},
  booktitle = {2009 13th European Conference on Software Maintenance and Reengineering},
  pages = {149--158},
  year = {2009},
  organization = {IEEE}}

@article{Tere00a,
  author = {Terekhov, A. A. and Verhoef, C.},
  title = {The realities of language conversions},
  journal = {IEEE Software},
  volume = {17},
  pages = {111--124},
  year = {2000},
  doi = {10.1109/52.895180},
  abstract = {Billions of lines written in Cobol, PL/I, and other mature high level languages are still in active use. Many developers have tried to convert these languages to more modern ones, but few have succeeded. The article sheds light on the realities of language conversions and discusses the possibilities and limitations of automated language converters.},
  issn = {0740-7459},
  keywords = {language conversions},
  month = nov,
  number = {6}}

@article{Term05a,
  author = {Maurice Termeer and Christian F.J. Lange and Alexandru Telea and Michel R.V. Chaudron},
  title = {Visual Exploration of Combined Architectural and Metric Information},
  journal = {VISSOFT 2005. 3rd IEEE International Workshop on Volume},
  volume = {0},
  pages = {11},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/VISSOF.2005.1684298},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7803-9540-9}}

@inproceedings{Terr12a,
  author = {Ricardo Terra and Marco Tulio Valente and Krzysztof Czarnecki and Roberto S. Bigonha},
  title = {Recommending Refactorings to Reverse Software Architecture Erosion},
  booktitle = {16th European Conference on Software Maintenance and Reengineering, Early Research Achievements Track},
  pages = {335--340},
  year = {2012},
  date-added = {2014-07-08 13:53:44 +0000},
  date-modified = {2014-07-08 13:53:57 +0000}}

@book{Terr90a,
  author = {Peter Terrel},
  title = {Duden Oxford English},
  publisher = {DudenVerlag},
  year = {1990},
  isbn = {3-411-02075-X}}

@book{Terr91a,
  author = {Peter Terrel},
  title = {Collins English Dictionary},
  publisher = {HarperCollins Publishers},
  year = {1991},
  isbn = {0--00-470678-3}}

@article{Terw12a,
  author = {Terwilliger, Thomas Charles and Sauter, Nicholas and Adams, Paul D},
  title = {Automatic {Fortran} to {C}++ conversion with {FABLE}},
  journal = {Source Code for Biology and Medicine},
  volume = {7},
  year = {2012},
  url = {https://scfbm.biomedcentral.com/articles/10.1186/1751-0473-7-5},
  doi = {10.1186/1751-0473-7-5},
  abstract = {In scientific computing, Fortran was the dominant implementation language throughout most of the second part of the 20th century. The many tools accumulated during this time have been difficult to integrate with modern software, which is now dominated by object-oriented languages. Driven by the requirements of a large-scale scientific software project, we have developed a Fortran to C++ source-to-source conversion tool named FABLE. This enables the continued development of new methods even while switching languages. We report the application of FABLE in three major projects and present detailed comparisons of Fortran and C++ runtime performances. Our experience suggests that most Fortran 77 codes can be converted with an effort that is minor (measured in days) compared to the original development time (often measured in years). With FABLE it is possible to reuse and evolve legacy work in modern object-oriented environments, in a portable and maintainable way. FABLE is available under a nonrestrictive open source license. In FABLE the analysis of the Fortran sources is separated from the generation of the C++ sources. Therefore parts of FABLE could be reused for other target languages.},
  keywords = {fortran},
  language = {en},
  month = may,
  number = {5},
  urldate = {2018-05-22}}

@article{Terwi12,
  author = {Terwilliger, Thomas Charles and Sauter, Nicholas and Adams, Paul D},
  title = {Automatic {Fortran} to {C}++ conversion with {FABLE}},
  journal = {Source Code for Biology and Medicine},
  volume = {7},
  year = {2012},
  url = {https://scfbm.biomedcentral.com/articles/10.1186/1751-0473-7-5},
  doi = {10.1186/1751-0473-7-5},
  abstract = {In scientific computing, Fortran was the dominant implementation language throughout most of the second part of the 20th century. The many tools accumulated during this time have been difficult to integrate with modern software, which is now dominated by object-oriented languages. Driven by the requirements of a large-scale scientific software project, we have developed a Fortran to C++ source-to-source conversion tool named FABLE. This enables the continued development of new methods even while switching languages. We report the application of FABLE in three major projects and present detailed comparisons of Fortran and C++ runtime performances. Our experience suggests that most Fortran 77 codes can be converted with an effort that is minor (measured in days) compared to the original development time (often measured in years). With FABLE it is possible to reuse and evolve legacy work in modern object-oriented environments, in a portable and maintainable way. FABLE is available under a nonrestrictive open source license. In FABLE the analysis of the Fortran sources is separated from the generation of the C++ sources. Therefore parts of FABLE could be reused for other target languages.},
  language = {en},
  month = may,
  number = {5},
  urldate = {2018-05-22}}

@article{Tesl81a,
  author = {Larry Tesler},
  title = {The {Smalltalk} Environment},
  journal = {Byte},
  volume = {6},
  pages = {90--147},
  year = {1981},
  month = aug,
  number = {8}}

@techreport{Tess16a,
  author = {Tessenow, Philipp and Felgentreff, T. and Bracha, Gilad and Hirschfeld, R.},
  title = {Extending a Dynamic Programming Language and Runtime Environment with Access Control},
  year = {2016},
  url = {https://www.hpi.uni-potsdam.de/hirschfeld/publications/media/TessenowFelgentreffBrachaHirschfeld_2016_ExtendingADynamicProgrammingLanguageAndRuntimeWithAccessControl_HPI107.pdf},
  number = {107},
  institution = {{des Hasso-Plattner-Instituts fur Softwaresystemtechnik an der Universitat Potsdam}},
  urldate = {2022-06-01},
  abstract = {An access control implementation for Newspeak is introduced, enabling the security of object-capabilities and enhancing modularity, and a migration strategy for the existing Newspeak code base is described, so that it can be integrated with minimal effort. Complexity in software systems is a major factor driving development and maintenance costs. To master this complexity, software is divided into modules that can be developed and tested separately. In order to support this separation of modules, each module should provide a clean and concise public interface. Therefore, the ability to selectively hide functionality using access control is an important feature in a programming language intended for complex software systems.    Software systems are increasingly distributed, adding not only to their inherent complexity, but also presenting security challenges. The object-capability approach addresses these challenges by defining language properties providing only minimal capabilities to objects. One programming language that is based on the object-capability approach is Newspeak, a dynamic programming language designed for modularity and security. The Newspeak specification describes access control as one of Newspeak's properties, because it is a requirement for the object-capability approach. However, access control, as defined in the Newspeak specification, is currently not enforced in its implementation.    This work introduces an access control implementation for Newspeak, enabling the security of object-capabilities and enhancing modularity. We describe our implementation of access control for Newspeak. We adapted the runtime environment, the reflective system, the compiler toolchain, and the virtual machine. Finally, we describe a migration strategy for the existing Newspeak code base, so that our access control implementation can be integrated with minimal effort.}}

@techreport{Tesse16a,
  author = {Tessenow, Philipp and Felgentreff, Tim and Bracha, Gilad and Hirschfeld, Robert},
  title = {Extending a dynamic programming language and runtime with access control},
  year = {2016},
  institution = {Des Hasso-Plattner-Institus fur Softwaresustemtechnik an der Universitat Potsdam},
  number = {107}}

@misc{TestingFAQ,
  title = {comp.software.testing {Frequently} {Asked} {Questions}},
  year = {2002},
  url = {http://www.faqs.org/faqs/software-eng/testing-faq/},
  howpublished = {http://www.faqs.org/faqs/software-eng/testing-faq/},
  key = {testing faq},
  month = feb}

@techreport{Teti97a,
  author = {Sani M. Tetik},
  title = {Datenbank f{\"u}r ``Clinical Study Notification Forms'' ({BAG})},
  year = {1997},
  url = {http://scg.unibe.ch/archive/projects/Teti97a.pdf},
  institution = {University of Bern},
  month = nov,
  type = {Informatikprojekt}}

@inproceedings{Teyt12a,
  author = {Cedric Teyton and Jean-Remy Falleri and Xavier Blanc},
  title = {Mining library migration graphs},
  booktitle = {Working {C}onference on {R}everse {E}ngineering ({WCRE}'12)},
  year = {2012}}

@inproceedings{Teyt13a,
  author = {Teyton, C{\'e}dric and Falleri, Jean-R{\'e}my and Blanc, Xavier},
  title = {Automatic discovery of function mappings between similar libraries},
  booktitle = {{W}orking {C}onference on {R}everse {E}ngineering ({WCRE})},
  pages = {192--201},
  year = {2013},
  organization = {IEEE}}

@article{Teyt13b,
  author = {Teyton, C{\'e}dric and Falleri, Jean-R{\'e}my and Palyart, Marc and Blanc, Xavier},
  title = {A Study of Library Migration in Java Software},
  journal = {arXiv preprint arXiv:1306.6262},
  year = {2013},
  url = {https://hal.archives-ouvertes.fr/hal-00838713},
  month = apr}

@inproceedings{Thal06a,
  author = {Florian Thalmann and Markus Gaelli},
  title = {{Jam} {Tomorrow}: Collaborative Music Generation in {Croquet} Using {OpenAL}},
  booktitle = {Proceedings of C5 2006 (The Fourth International Conference on Creating, Connecting and Collaborating through Computing)},
  pages = {73--78},
  year = {2006},
  misc = {gaelli},
  url = {http://scg.unibe.ch/archive/papers/Thal06aJamTomorrow.pdf},
  doi = {10.1109/C5.2006.22},
  abstract = {We propose a music generation software that allows
large numbers of users to collaborate. In a virtual
world, groups of users generate music simultaneously
at different places in a room. This can be realized
using OpenAL sound sources. The generated musical
pieces have to be modifiable while they are playing
and all collaborating users should immediately see
and hear the results of such modifications. We are
testing these concepts within Croquet by
implementing a software called Jam Tomorrow.},
  cvs = {JamTomorrow},
  medium = {2},
  month = jan,
  type = {Bachelor's thesis}}

@mastersthesis{Thal07a,
  author = {Florian Thalmann},
  title = {Musical Composition with Grid Diagrams of Transformations},
  year = {2007},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Thal07a.pdf},
  abstract = {In this thesis, the concepts of OrnaMagic, a module
for the generation and application of musical grid
structures, which is part of the music composition
software presto (Atari ST), are generalized,
abstracted and adapted for modern functorial
mathematical music theory. Furthermore, an new
implementation for the present day composition
software Rubato Composer (Java) is provided.},
  month = mar,
  type = {Master's thesis}}

@inproceedings{That95a,
  author = {Satish R. Thatt\'e},
  title = {Object Imaging},
  booktitle = {Proceedings ECOOP '95},
  volume = {952},
  pages = {52--76},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Aarhus, Denmark},
  editor = {W. Olthoff},
  month = aug,
  series = {LNCS}}

@book{Thei67a,
  author = {H. Theil},
  title = {Economics and {I}nformation {T}heory},
  publisher = {North-Holland},
  year = {1967}}

@inproceedings{Theod98a,
  author = {L. Theodoros and H.M. Edwards and A. Bryant and N. Willis},
  title = {ROMEO: Reverse Engineering from OOSource COde to OMT Design},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {191--200},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@mastersthesis{Ther83a,
  author = {D.G. Therault},
  title = {Issues in the Design and Implementation of Act2},
  year = {1983},
  school = {MIT AI Lab},
  month = jun,
  number = {728},
  type = {M.Sc. thesis, TR}}

@inproceedings{Thie23a,
  author = {Thiede, Christoph and Taeumel, Marcel and Hirschfeld, Robert},
  title = {Object-Centric Time-Travel Debugging: Exploring Traces of Objects},
  booktitle = {Companion Proceedings of the 7th International Conference on the Art, Science, and Engineering of Programming},
  pages = {54-60},
  publisher = {Association for Computing Machinery},
  year = {2023},
  url = {https://doi.org/10.1145/3594671.3594678},
  doi = {10.1145/3594671.3594678},
  isbn = {9798400707551},
  address = {New York, NY, USA},
  abstract = {Traditional behavior-centric debuggers are organized around an extensive call stack, making it hard for programmers to navigate and explore large programs. We present object traces, a novel, object-centric approach to time-travel debugging that enables programmers to directly interact with recorded states of objects and explore their evolution in a simplified call tree. Our approach allows programmers to send messages to the object trace to ask questions of different granularity, from single variable values to custom representations of object graphs. We demonstrate practicability by applying it to the TraceDebugger, a time-travel debugger for Squeak/Smalltalk. We examine the practical opportunities and limitations of object traces and suggest directions for future work.},
  numpages = {7},
  keywords = {exploratory programming, back-in-time debugging, program exploration, program tracing, Smalltalk, omniscient debugging, program comprehension, moldable development, object-oriented debugging, declarative debugging, query-based debugging, time-travel debugging},
  location = {Tokyo, Japan},
  series = {Programming '23}}

@inproceedings{Thie23b,
	address = {New York, NY, USA},
	series = {Onward! 2023},
	title = {Time-{Awareness} in {Object} {Exploration} {Tools}: {Toward} {In} {Situ} {Omniscient} {Debugging}},
	isbn = {9798400703881},
	shorttitle = {Time-{Awareness} in {Object} {Exploration} {Tools}},
	url = {https://dl.acm.org/doi/10.1145/3622758.3622892},
	doi = {10.1145/3622758.3622892},
	urldate = {2023-11-08},
	booktitle = {Proceedings of the 2023 {ACM} {SIGPLAN} {International} {Symposium} on {New} {Ideas}, {New} {Paradigms}, and {Reflections} on {Programming} and {Software}},
	publisher = {Association for Computing Machinery},
	author = {Thiede, Christoph and Taeumel, Marcel and Hirschfeld, Robert},
	month = oct,
	year = {2023},
	keywords = {exploratory programming, moldable development, object inspection, object-oriented debugging, omniscient debugging, program exploration, program tracing, query-based debugging, Smalltalk},
	pages = {89--102}
}

@inproceedings{Thio05a,
  author = {Gian Lorenzo Thione and Dewayne E. Perry},
  title = {Parallel Changes: {Detecting} Semantic Interferences},
  booktitle = {Proceedings of the 29th International Computer Software and Applications Conference},
  pages = {47--56},
  publisher = {IEEE Computer Society},
  year = {2005},
  series = {COMPSAC'05}}

@book{Thom01a,
  author = {David Thomas and Andrew Hunt},
  title = {Programming Ruby},
  publisher = {Addison Wesley},
  year = {2001}}

@article{Thom04a,
  author = {Dave Thomas},
  title = {Message Oriented Programming},
  journal = {Journal of Object Technology},
  volume = {3},
  pages = {7--12},
  publisher = {ETHZ},
  year = {2004},
  month = may,
  number = {5}}

@book{Thom05a,
  author = {David Thomas and Andy Hunt},
  title = {Programming Ruby},
  publisher = {Addison Wesley},
  year = {2005},
  edition = {2nd}}

@inproceedings{Thom08a,
  author = {Thomson, Christopher and Holcombe, Mike},
  title = {Correctness of data mined from CVS},
  booktitle = {MSR '08: Proceedings of the 2008 international working conference on Mining software repositories},
  pages = {117--120},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1370750.1370777},
  address = {New York, NY, USA},
  isbn = {978-1-60558-024-1},
  location = {Leipzig, Germany}}

@inproceedings{Thom10v,
  author = {Thomas, Stephen W and Adams, Bram and Hassan, Ahmed E and Blostein, Dorothea},
  title = {Validating the use of topic models for software evolution},
  booktitle = {Source Code Analysis and Manipulation (SCAM), 2010 10th IEEE Working Conference on},
  pages = {55--64},
  year = {2010},
  organization = {IEEE}}

@article{Thom84a,
  author = {Ken Thompson},
  title = {Reflection on Trusting Trust},
  journal = {CACM},
  volume = {27},
  pages = {761--763},
  year = {1984},
  month = aug,
  number = {8}}

@inproceedings{Thom88a,
  author = {Dave Thomas and Kent Johnson},
  title = {Orwell --- {A} Configuration Management System for Team Programming},
  booktitle = {Proceedings of the Object-Oriented Programming, Systems, Languages \& Applications, ACM SIGPLAN Notices},
  volume = {23},
  pages = {135--141},
  year = {1988},
  deletednumber = {11},
  month = nov,
  series = {OOPSLA'88}}

@inproceedings{Thom89a,
  author = {Bent Thomsen},
  title = {A Calculus of Higher Order Communicating Systems},
  booktitle = {Proceedings POPL '89},
  pages = {143--154},
  year = {1989},
  misc = {Jan 11-13},
  address = {Austin, Texas},
  month = jan}

@article{Thom89b,
  author = {Dave Thomas},
  title = {In Search of an Object-Oriented Development Process},
  journal = {JOOP},
  pages = {60--63},
  year = {1989},
  month = may}

@phdthesis{Thom90a,
  author = {Bent Thomsen},
  title = {Calculi for Higher Order Communicating Systems},
  year = {1990},
  school = {Imperial College},
  address = {London},
  type = {{Ph.D}. Thesis}}

@book{Thom91a,
  author = {Simon Thompson},
  title = {Type Theory and Functional Programming},
  publisher = {Addison Wesley},
  year = {1991},
  address = {Reading, Mass.},
  isbn = {0-201-41667-0},
  series = {International Computer Science Series}}

@techreport{Thom92a,
  author = {Bent Thomsen and Lone Leth and Alessandro Giacalone},
  title = {Some Issues in the Semantics of Facile Distributed Programming},
  year = {1992},
  address = {Munich},
  institution = {ECRC},
  type = {ECRC-92-32}}

@inproceedings{Thom92b,
  author = {Laurent Thomas},
  title = {Extensibility and Reuse of Object-Oriented Synchronization Components},
  booktitle = {Proceedings of the Parallel Architecture and Language Europe (PARLE '92)},
  volume = {605},
  pages = {261--275},
  publisher = {Springer-Verlag},
  year = {1992},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/members/thomas/parle92.ps},
  editor = {D. Etiemble and J.-C. Syre},
  month = jun,
  series = {LNCS}}

@techreport{Thom93a,
  author = {Bent Thomsen},
  title = {Polymorphic Sorts and Types for Concurrent Functional Programs},
  year = {1993},
  address = {Munich},
  institution = {ECRC},
  type = {ECRC-93-10}}

@inproceedings{Thom94a,
  author = {Laurent Thomas},
  title = {Inheritance Anomaly in True Concurrent Object Oriented Languages: {A} Proposal},
  booktitle = {IEEE TENCON '94},
  pages = {541--545},
  year = {1994},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/papers/tencon94.a4.ps.gz},
  month = aug}

@book{Thom95a,
  author = {Pete Thomas and Ray Weedon},
  title = {Object-Oriented Programming in Eiffel},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-59387-4}}

@article{Thom98a,
  author = {Rob Thomsett},
  title = {The Year 2000 Bug: a Forgotten Lesson},
  journal = {IEEE Software},
  volume = {15},
  pages = {91-93,95},
  publisher = {IEEE},
  year = {1998},
  month = jul,
  number = {4}}

@book{Thom99a,
  author = {Simon Thompson},
  title = {Haskell: The Craft of Functional Programming (2nd edition)},
  publisher = {Addison Wesley},
  year = {1999},
  address = {Reading, Mass.},
  isbn = {0201342758}}

@inproceedings{Thor87a,
  author = {Lars-Erik Thorelli},
  title = {Modules and Type Checking in {PL}/{LL}},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = {22},
  pages = {268--276},
  year = {1987},
  month = dec}

@inproceedings{Thor99a,
  author = {Kresten Krab Thorup and Mads Torgersen},
  title = {Unifying Genericity: Combining the benefits of virtual types and parameterized classes},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {186--204},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Generic types in programming languages are most
often supported with various forms of parametric
polymorphism, i.e. functions on types. Within the
framework of object-oriented languages, virtual
types present an alternative where specific types
are derived from generic ones using inheritance
rather than function application. While both
mechanisms are statically safe and support basic
genericity, they have very different typing
properties, each of them providing for the
description of useful relationships, which are not
expressible with the other. In this paper we
present, through the use of examples, a mechanism
for describing generic classes: structural virtual
types. This mechanism is essentially a merger of
parameterized classes and virtual types and includes
the benefits of both, in particular retaining mutual
recursion and covariance of virtual types as well as
the function-like nature of parameterized classes.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Thur89a,
  author = {M.B. Thuraisingham},
  title = {Mandatory Security in Object-Oriented Database Systems},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {203--210},
  year = {1989},
  month = oct}

@article{Thy23a,
author = {Thy, Sewen and Costea, Andreea and Gopinathan, Kiran and Sergey, Ilya},
title = {Adventure of a Lifetime: Extract Method Refactoring for Rust},
year = {2023},
issue_date = {October 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {OOPSLA2},
url = {https://doi.org/10.1145/3622821},
doi = {10.1145/3622821},
journal = {Proc. ACM Program. Lang.},
month = oct,
articleno = {245},
numpages = {28},
keywords = {Rust, automated code refactoring, program repair}
}

@inproceedings{Tich00a,
  author = {Sander Tichelaar and Juan Carlos Cruz and Serge Demeyer},
  title = {Design Guidelines for Coordination Components},
  booktitle = {{S}ymposium on {A}pplied {C}omputing ({SAC}'2000)},
  pages = {270--277},
  publisher = {ACM},
  year = {2000},
  url = {http://scg.unibe.ch/archive/papers/Tich00aDesignGuidelines.pdf},
  doi = {10.1145/335603.335758},
  abstract = {The distributed nature of a typical web application
combined with the r{API}d evolution of underlying
platforms demands for a plug-in component
architecture. Nevertheless, code for controlling
distributed activities is usually spread over
multiple subsystems, which makes it hard to
dynamically reconfigure coordination services. This
paper investigates coordination components as a way
to encapsulate the coordination of a distributed
system into a separate, pluggable entity. In an
object-oriented context we introduce two design
guidelines (namely, "turn contracts into objects"
and "turn configuration into a factory object") that
help developers to separate coordination from
computation and to develop reusable and flexible
solutions for coordination in distributed systems.},
  editor = {Janice Carroll and Ernesto Damiani and Hisham Haddad and Dave Oppenheim},
  month = mar}

@phdthesis{Tich01a,
  author = {Sander Tichelaar},
  title = {Modeling Object-Oriented Software for Reverse Engineering and Refactoring},
  year = {2001},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/tichelaar-phd.pdf},
  abstract = {The increased popularity of the object-oriented
paradigm has also increased the interest in
object-oriented reengineering. First of all,
object-oriented software systems suffer from similar
maintainability problems as traditional procedural
systems, displaying the need for reengineering
techniques tailored to deal with object- oriented
code. Secondly, the increased importance of
iterative development processes make reengineering
techniques valuable in forward engineering, and thus
for all paradigms that software is developed in.
Reengineering requires tool support to deal with the
large amounts of information and the wide variety of
tasks to be performed. An important consideration in
building tool environments for reengineering is what
information must be provided and how this
information is modelled. Design choices have a
considerable impact not only on the ability to
support reengineering tasks, but also on issues such
as scalability and tool interoperability. Several
metamodels exist that model software for the
purposes of reengineering. However, they generally
lack a discussion of the relevance of information
for reengineering and the trade-offs of modeling
alternatives. This thesis presents FAMIX, a
language-independent metamodel for modelling
object-oriented software for reengineering
purposes.We discuss the exact contents of the
metamodel, including its relevance for reengineering
and how the metamodel supports the different
object-oriented languages through its language-
independent core. We also discuss the
infrastructural design decisions of FAMIX by placing
it into a design space for infrastructural aspects
of reengineering repositories and metamodels. The
design space presents multiple interdependent
aspects, their design alternatives and howthese
impact issues such as scalability, extensibility and
information exchange. We validate the ability of
FAMIXto support reengineering on a
language-independent level in twoways. First, we
present Moose, a reengineering tool environment with
a repository based on FAMIX. Moose serves as a
foundation for multiple reengineering tools and has
been applied to reverse engineer several large
industrial case studies. Secondly,we define a set of
fifteen low-level refactorings in terms of the
information available in FAMIX. Refactoring requires
sufficient, complete and 100\% correct information as
well as a clear interpretation of the supported
languages in the language-independent core of the
metamodel, in order to correctly perform
transformations on the language-specific code level.
As such the refactorings provide an in-depth
validation of the language independence of FAMIX.},
  month = dec}

@inproceedings{Tich82a,
  author = {Tichy, Walter F.},
  title = {Design, implementation, and evaluation of a Revision Control System},
  booktitle = {Proceedings of the 6th International Conference on Software Engineering},
  pages = {58--67},
  publisher = {IEEE Computer Society Press},
  year = {1982},
  numpages = {10},
  series = {ICSE'82}}

@article{Tich84a,
  author = {Tichy, Walter F.},
  title = {The string-to-string correction problem with block moves},
  journal = {Journal of ACM Transactions on Computer Systems (TOCS)},
  volume = {2},
  pages = {309--321},
  publisher = {ACM},
  year = {1984},
  issn = {0734-2071},
  month = nov,
  number = {4}}

@article{Tich85a,
  author = {Tichy, Walter F.},
  title = {{RCS}---a system for version control},
  journal = {Software Practice and Experience},
  volume = {15},
  pages = {637--654},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1985},
  doi = {10.1002/spe.4380150703},
  address = {New York, NY, USA},
  date-added = {2009-10-21 16:20:04 +0200},
  date-modified = {2009-10-21 16:20:19 +0200},
  issn = {0038-0644},
  month = jul,
  number = {7}}

@inproceedings{Tich88a,
  author = {Walter Tichy},
  title = {Tools for Software Configuration Management},
  booktitle = {Proceedings of the International Workshop on Software Version and Configuration Control},
  pages = {1--20},
  year = {1988}}

@mastersthesis{Tich97a,
  author = {Sander Tichelaar},
  title = {A Coordination Component Framework for Open Distributed Systems},
  year = {1997},
  school = {University of Groningen, NL --- University of Bern, CH},
  url = {http://scg.unibe.ch/archive/masters/Tich97a.pdf},
  abstract = {We have investigated software development for open
distributed systems in order to make this
development easier. Easier in the sense that
software parts will be better reusable, more
flexible and better maintainable. The hardest part
is to address evolution of these systems because not
all application requirements can be known in
advance. In particular we have investigated the
coordination aspects of open distributed systems.
Coordination technology addresses the management of
interaction of software agents in a distributed or
parallel environment and, therefore, typically
describes architectural aspects of a system. To
reach the goal of easier software development we
have applied a component oriented approach: generic
coordination solutions are provided as generic
architectures with black box components.
Applications are constructed using these
architectures and composing and parameterizing these
generic components. In this way we make the
interaction part of a system reusable and flexible.
The architecture of the system is also made clearer
and therefore easier understandable. A prototype
coordination framework and a set of sample
applications that are representative for open
distributed systems and that use this framework,
have been developed in the concurrent
object-oriented programming language {Java}. We show
that, using our component-oriented approach, we gain
reusability, flexibility and provide clear
architectures of applications. A major problem,
however, concerning the genericity of components, is
the application dependent information that may be
needed by a coordination solution: the genericity of
the solution is strongly dependent on the
possibility to separate this information from the
generic solution.},
  month = may,
  number = {Software Composition Group},
  type = {Master's Thesis --- Software Composition Group}}

@techreport{Tich97c,
  author = {Sander Tichelaar},
  title = {A Framework-based Approach to Coordination},
  year = {1997},
  institution = {University of Bern},
  type = {SCG working paper}}

@inproceedings{Tich98m,
  author = {Sander Tichelaar and Serge Demeyer},
  title = {An Exchange Model for Reengineering Tools},
  booktitle = {Object-Oriented Technology (ECOOP '98 Workshop Reader)},
  volume = {1543},
  publisher = {Springer-Verlag},
  year = {1998},
  url = {http://scg.unibe.ch/archive/famoos/Tich98m/ecoop98exchmod.pdf},
  abstract = {Tools support is recognised as a key issue in the
reengineering of large scale object-oriented
systems. However, due to the heterogeneity in
today's object-oriented programming languages, it is
hard to reuse reengineering tools across legacy
systems. This paper proposes a language independent
exchange model, so that tools may perform their
tasks independent of the underlying programming
language. Beside supporting reusability between
tools, we expect that this exchange model will
enhance the interoperability between tools for
metrics, visualization, reorganisation and other
reengineering activities.},
  editor = {Serge Demeyer and Jan Bosch},
  month = jul,
  series = {LNCS}}

@techreport{Tich98z,
  author = {Sander Tichelaar and Juan Carlos Cruz and Serge Demeyer},
  title = {Coordination as a Variability Aspect in Open Distributed Systems},
  year = {1998},
  url = {http://www.iam.unibe.ch/~demeyer/Tich98z/ http://www.iam.unibe.ch/~tichel/Working/CoordVar.pdf http://www.iam.unibe.ch/~tichel/Working/CoordVar.ps.gz},
  abstract = {To deal with requirements such as distribution,
interoperability and evolution on r{API}dly evolving
platforms such as the World Wide Web, parts of
applications are increasingly packaged as
components. Encapsulating the coordination of these
multiple subsystems as generic components has proven
difficult, because typically coordination affects
multiple components and in open systems a whole set
of other requirements, such as interoperability and
security, must also be dealt with. We have
investigated coordination as a variability aspect of
open distributed systems and we present concrete
solutions and limitations designing coordination
solutions as components. Our observations will help
developers to separate coordination from computation
and to develop open solutions for coordination in
distributed systems.},
  institution = {University of Bern},
  month = jan}

@inproceedings{Tich99m,
  author = {Sander Tichelaar and Serge Demeyer},
  title = {{SNiFF}+ Talks to {Rational} {Rose} --- Interoperability using a Common Exchange Model},
  booktitle = {{SNiFF}+ User's Conference},
  year = {1999},
  url = {http://scg.unibe.ch/archive/papers/Tich99mSniffToRationalRose.pdf},
  abstract = {Nowadays development environments are required to be
open: users want to be able to work with a
combination of their preferred commercial and
home-grown tools. TakeFive has opened up SNiFF+ with
a so-called "Symbol Table {API}"; Rational has opened
up the UML tool Rose via the so-called "Rose
Extensibility Interface (REI)". On the other hand,
efforts are underway to define standards for
exchanging information between case-tools; CDIF
being a notable example. This paper reports on our
experience to generate UML diagrams in Rational Rose
from the symbol table in SNiFF+ using a standard
CDIF exchange format.},
  month = jan,
  note = {Also in the "Proceedings of the ESEC/FSE '99 Workshop on Object-Oriented Re-engineering (WOOR '99)" --- Technical Report of the Technical University of Vienna (TUV-1841-99-13)}}

@techreport{Tich99z,
  author = {Sander Tichelaar},
  title = {{FAMIX} {Java} language plug-in 1.0},
  year = {1999},
  url = {http://scg.unibe.ch/archive/famoos/FAMIX/Plugins/JavaPlugin1.0.html http://scg.unibe.ch/archive/famoos/FAMIX/Plugins/JavaPlugin1.0.pdf},
  abstract = {This document describes the language plug-in to the
FAMIX 2.0 model for the {Java} programming language.
It handles interpretation issues concerning {Java}
in FAMIX and the extension of the FAMIX model for
Jav specific features.},
  institution = {University of Bern},
  month = sep}

@inproceedings{Tikh18a,
  author = {S. Tikhomirov and E. Voskresenskaya and I. Ivanitskiy and R. Takhaviev and E. Marchenko and Y. Alexandrov},
  title = {SmartCheck: Static Analysis of Ethereum Smart Contracts},
  booktitle = {2018 IEEE/ACM 1st International Workshop on Emerging Trends in Software Engineering for Blockchain (WETSEB)},
  pages = {9-16},
  year = {2018},
  keywords = {Contracts;Static analysis;Tools;Computer bugs;Computer hacking;Ethereum;Solidity;smart contracts;static analysis;bug detection},
  month = {may}}

@inproceedings{Till03a,
  author = {Thomas Tilley and Richard Cole and Peter Becker and Peter Eklund},
  title = {A Survey of Formal Concept Analysis Support for Software Engineering Activities},
  booktitle = {Proceedings of ICFCA '03 (1st International Conference on Formal Concept Analysis)},
  publisher = {Springer-Verlag},
  year = {2003},
  url = {http://citeseer.nj.nec.com/588051.html},
  editor = {Gerd Stumme},
  month = feb}

@inproceedings{Till03b,
  author = {Thomas Tilley and Wolfgang Hesse and Roger Duke},
  title = {A Software Modelling Exercise Using {FCA}},
  booktitle = {Using Conceptual Structures: Contributions to ICCS 2003},
  pages = {213--226},
  publisher = {Shaker Verlag},
  year = {2003},
  editor = {B. Ganter and A. de Moor}}

@inproceedings{Till03c,
  author = {Thomas Tilley},
  title = {Towards an {FCA} Based Tool for Visualising Formal Specifications},
  booktitle = {Using Conceptual Structures: Contributions to ICCS 2003},
  pages = {227--240},
  publisher = {Shaker Verlag},
  year = {2003},
  editor = {B. Ganter and A. de Moor}}

@inproceedings{Till05a,
  author = {Nikolai Tillmann and Wolfram Schulte},
  title = {Parameterized unit tests},
  booktitle = {ESEC/SIGSOFT FSE},
  pages = {253-262},
  year = {2005},
  url = {ftp://ftp.research.microsoft.com/pub/tr/TR-2005-64.pdf},
  ee = {10.1145/1081706.1081749}}

@inproceedings{Till93a,
  author = {Scott R. Tilley and Hausi A. M{\"u}ller},
  title = {Using Virtual Subsystems in Project Management},
  booktitle = {Proceedings of CASE '93 6th International Workshop on Computer-Aided Software Engineering},
  publisher = {IEEE Computer Society},
  year = {1993},
  month = jul}

@inproceedings{Till93b,
  author = {Scott R. Tilley and Hausi A. M{\"u}ller and Michael J. Whitney and Kenny Wong},
  title = {Domain-Retargetable Reverse Engineering},
  booktitle = {Proceedings of CSM '93 The Conference on Software Maintenance},
  pages = {142--151},
  publisher = {IEEE Computer Society},
  year = {1993},
  month = sep}

@inproceedings{Till94a,
  author = {Scott R. Tilley},
  title = {Domain-Retargetable Reverse Engineering {II}: Personalised User Interfaces},
  booktitle = {Proceedings of The International Conference on Software Maintenance},
  publisher = {IEEE Computer Society},
  year = {1994},
  month = sep}

@article{Till94b,
  author = {Scott R. Tilley and Kenny Wong and Margaret-Anne D. Storey and Hausi A. M{\"u}ller},
  title = {Programmable Reverse Enginnering},
  journal = {International Journal of Software Engineering and Knowledge Engineering},
  volume = {4},
  pages = {501--520},
  year = {1994},
  number = {4}}

@inproceedings{Till96a,
  author = {Scott R. Tilley and Dennis B. Smith and Santanu Paul},
  title = {Towards a Framework for Program Understanding},
  booktitle = {WPC '96: Proceedings of the 4th International Workshop on Program Comprehension (WPC '96)},
  pages = {19},
  publisher = {IEEE Computer Society},
  year = {1996},
  doi = {10.1109/WPC.1996.501117},
  isbn = {0-8186-7283-8}}

@inproceedings{Ting17a,
  author = {Ting Chen and Xiaoqi Li and Xiapu Luo and Xiaosong Zhang},
  title = {Under-Optimized Smart Contracts Devour Your Money},
  booktitle = {Proceedings of SANER},
  pages = {442--446},
  publisher = {IEEE},
  year = {2017}}

@article{Tino71a,
  author = {Tinoco, jun., Ignacio and Olke C. Uhlenbeck and Mark D. Levine},
  title = {Estimation of Secondary Structure in Ribonucleic Acids},
  journal = {Nature},
  volume = {230},
  pages = {362--367},
  year = {1971},
  month = apr}

@misc{TinyOS,
  title = {{TinyOS}: An open-source {OS} for the networked sensor regime},
  url = {http://www.tinyos.net},
  key = {TinyOS},
  note = {http://www.tinyos.net}}

@article{Tip03a,
  author = {Tip, Frank and Sweeney, Peter F. and Laffra, Chris},
  title = {Extracting Library-based Java Applications},
  journal = {Commun. ACM},
  volume = {46},
  pages = {35--40},
  publisher = {ACM},
  year = {2003},
  url = {http://doi.acm.org/10.1145/859670.859695},
  doi = {10.1145/859670.859695},
  acmid = {859695},
  address = {New York, NY, USA},
  issn = {0001-0782},
  month = aug,
  number = {8},
  numpages = {6}}

@article{Tip95a,
  author = {Frank Tip},
  title = {A survey of program slicing techniques},
  journal = {Journal of Programming Languages},
  volume = {3},
  pages = {121--189},
  year = {1995}}

@inproceedings{Tip99a,
author = {Tip, Frank and Laffra, Chris and Sweeney, Peter F. and Streeter, David},
title = {Practical experience with an application extractor for Java},
year = {1999},
isbn = {1581132387},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/320384.320414},
doi = {10.1145/320384.320414},
abstract = {Java programs are routinely transmitted over low-bandwidth network connections as compressed class file archives (i.e., zip files and jar files). Since archive size is directly proportional to download time, it is desirable for applications to be as small as possible. This paper is concerned with the use of program transformations such as removal of dead methods and fields, inlining of method calls, and simplification of the class hierarchy for reducing application size. Such “extraction” techniques are generally believed to be especially useful for applications that use class libraries, since typically only a small fraction of a library's functionality is used. By “pruning away” unused library functionality, application size can be reduced dramatically. We implemented a number of application extraction techniques in Jax, an application extractor for Java, and evaluate their effectiveness on a set of realistic benchmarks ranging from 27 to 2,332 classes (with archives ranging from 56,796 to 3,810,120 bytes). We report archive size reductions ranging from 13.4\% to 90.2\% (48.7\% on average).},
booktitle = {Proceedings of the 14th ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
pages = {292–305},
numpages = {14},
location = {Denver, Colorado, USA},
series = {OOPSLA '99}}

@book{Tiso94a,
  title = {Trees in Algebra and Programming --- {CAAP}`94},
  volume = {787},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {Sophie Tison},
  isbn = {3-540-57879-X},
  series = {LNCS}}

@inproceedings{Titz06a,
  author = {Ben L. Titzer},
  title = {Virgil: objects on the head of a pin},
  booktitle = {OOPSLA '06: Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications},
  pages = {191--208},
  publisher = {ACM},
  year = {2006},
  doi = {10.1145/1167473.1167489},
  address = {New York, NY, USA},
  isbn = {1-59593-348-4},
  location = {Portland, Oregon, USA}}

@inproceedings{Titz07a,
  author = {Titzer, Ben L. and Auerbach, Joshua and Bacon, David F. and Palsberg, Jens},
  title = {The ExoVM System for Automatic VM and Application Reduction},
  booktitle = {Proceedings of the 2007 ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages = {352--362},
  publisher = {ACM},
  year = {2007},
  url = {http://doi.acm.org/10.1145/1250734.1250775},
  doi = {10.1145/1250734.1250775},
  acmid = {1250775},
  address = {New York, NY, USA},
  isbn = {978-1-59593-633-2},
  keywords = {VM design, VM modularity, dead code elimination, embedded systems, feature analysis, persistence, pre-initialization, static analysis, static compilation},
  location = {San Diego, California, USA},
  numpages = {11},
  series = {PLDI '07}}

@article{Titz10a,
  author = {Titzer, Ben L. and W\"{u}rthinger, Thomas and Simon, Doug and Cintra, Marcelo},
  title = {Improving Compiler-runtime Separation with XIR},
  journal = {SIGPLAN Notices},
  volume = {45},
  pages = {39--50},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1837854.1736005},
  doi = {10.1145/1837854.1736005},
  acmid = {1736005},
  address = {New York, NY, USA},
  issn = {0362-1340},
  keywords = {JIT, compilers, intermediate representations, java, lowering, object model, register allocation, runtime interface, software architecture, virtual machines},
  month = mar,
  number = {7},
  numpages = {12}}

@inproceedings{Titz10b,
  author = {Titzer, Ben L. and W\"{u}rthinger, Thomas and Simon, Doug and Cintra, Marcelo},
  title = {Improving Compiler-runtime Separation with {XIR}},
  booktitle = {Virtual Execution Environments},
  year = {2010},
  doi = {10.1145/1735997.1736005},
  isbn = {978-1-60558-910-7},
  keywords = {JIT, compilers, intermediate representations, java, lowering, object model, register allocation, runtime interface, software architecture, virtual machines},
  numpages = {12}}

@misc{Tiwa19a,
  author = {Omkarendra Tiwari and Rushikesh K. Joshi},
  title = {Extract Method Refactoring by Successive Edge Contraction},
  year = {2019},
  archiveprefix = {arXiv},
  eprint = {1908.04636},
  primaryclass = {cs.SE}}

@inproceedings{Tobi05a,
  author = {Sam Tobin-Hochstadt and Eric Allen},
  title = {A Core Calculus of Metaclasses},
  booktitle = {Foundations of Object Oriented Languages},
  year = {2005},
  url = {http://research.sun.com/projects/plrg/fool2005.pdf}}

@article{Toft04a,
  author = {Mads Tofte and Lars Birkedal and Martin Elsman and Niels Hallenberg},
  title = {A Retrospective on Region-based Memory Management},
  journal = {Higher-Order and Symbolic Computation},
  volume = {17},
  year = {2004},
  month = {sep},
  number = {3}}

@incollection{Toft90a,
  author = {C. Tofts},
  title = {Timed Concurrent Processes},
  booktitle = {Semantics for Concurrency},
  pages = {281--294},
  publisher = {Springer-Verlag},
  year = {1990},
  editor = {M.Z. Kwiatkowska and M.W. Shields and R.M. Thomas},
  series = {Workshops in Computing}}

@article{Toft97a,
  author = {Mads Tofte and Jean-Pierre Talpin},
  title = {Region-based Memory Management},
  journal = {Inf. Comput.},
  volume = {132},
  pages = {109--176},
  year = {1997},
  number = {2}}

@article{Toft98a,
  author = {Tofte, M. and Birkedal L.},
  title = {A region inference algorithm},
  journal = {TOPLAS},
  volume = {20},
  pages = {774-767},
  year = {1998},
  number = {4}}

@article{Toko86a,
  author = {Mario Tokoro and Yutaka Ishikawa},
  title = {Concurrent Programming in Orient84/{K}: An Object-Oriented Knowledge Representation Language},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {39--48},
  year = {1986},
  month = oct,
  number = {10}}

@techreport{Toko90a,
  author = {Mario Tokoro},
  title = {Computational Field Model: Toward a New Computing Model/Methodology for Open Distributed Environment},
  year = {1990},
  misc = {June 11},
  address = {Tokyo},
  institution = {Sony Computer Science Lab. Inc.},
  month = jun,
  type = {SCSL-TR-90-006}}

@book{Toko92a,
  title = {Proceedings of the {ECOOP}'91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  publisher = {Springer-Verlag},
  year = {1992},
  url = {http://www.springer.com/east/home/generic/search/results?SGWID=5-40109-22-1379120-0},
  doi = {10.1007/3-540-55613-3},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  isbn = {3-540-55613-3},
  series = {LNCS}}

@inproceedings{Toko94a,
  author = {Mario Tokoro and Kazunori Takashio},
  title = {Toward Languages and Formal Systems for Distributed Computing},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {93--110},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {In this paper, we attempt to reveal the most
essential properties of distributed computations. We
claim that the notions of asynchrony, real-time, and
autonomy are vitally important to a widely
distributed, open-ended, ever-changing environment.
We then propose a programming language, called DROL,
for asynchronous real-time computing. It supports
self-contained active objects that have threads of
control and a clock, and introduces the notion of
timed invocation, that guarantees the survivability
of each active object. We place DROL as a first step
in constructing programming languages to realize the
above three notions. We also classify distributed
computation into four forms according to asynchrony
and real-time properties, and try to develop
formalisms for the four categories based on a
process calculus. The formalisms allow us to
describe and analyze both globally and locally
temporal properties as well as the behavioral
properties of distributed objects and the
interactions among them. We discuss issues remaining
to be solved and suggest some possibilities for
future work.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@book{Toko94b,
  title = {Proceedings of {ECOOP}'94},
  volume = {821},
  publisher = {Springer-Verlag},
  year = {1994},
  editor = {Mario Tokoro and Remo Pareschi},
  isbn = {3-540-58202-9},
  series = {LNCS}}

@article{Toku01,
  title={Evolving object-oriented designs with refactorings},
  author={Tokuda, Lance and Batory, Don},
  journal={Automated Software Engineering},
  volume={8},
  number={1},
  pages={89--120},
  year={2001},
  publisher={Springer}
}

@article{Toku01a,
  author = {Tokuda, Lance and Batory, Don},
  title = {Evolving object-oriented designs with refactorings},
  journal = {Automated Software Engineering},
  volume = {8},
  pages = {89--120},
  publisher = {Springer},
  year = {2001},
  number = {1}}

@article{Toku95a,
  author = {Tokuda, Lance and Batory, Don},
  title = {Automated Software Evolution via Design Pattern Transformations},
  journal = {Proceedings of International Symposium on Applied Corporate Computing},
  year = {1995},
  month = oct}

@inproceedings{Toku99a,
  author = {Lance Tokuda and Don Batory},
  title = {Automating Three Modes of Evolution for Object-Oriented Software Architecture},
  booktitle = {Proceedings COOTS '99},
  year = {1999},
  month = may}

@inproceedings{Toku99b,
  author = {Lance Tokuda and Don Batory},
  title = {Evolving Object-Oriented Designs with Refactorings},
  booktitle = {Proceedings of Automated Software Engineering},
  year = {1999}}

@incollection{Tolk95a,
  author = {Robert Tolksdorf},
  title = {A Machine for Uncoupled Coordination and Its Concurrent Behavior},
  booktitle = {Object-Based Models and Languages for Concurrent Systems},
  volume = {924},
  pages = {176--193},
  publisher = {Springer-Verlag},
  year = {1995},
  abstract = {The family of un-coupled coordination languages ---
its most prominent representative is Linda --- uses
as a central mechanism for synchronization and
communication the addition and withdrawal of
elements to and from a multiset. We define a machine
--- the Bag-Machine --- that abstracts from specific
outforms of elements handled and operations in a
coordination language. We give a truly concurrent
behavioral specification by event structures. We
further show, how the embedding of a coordination
language can be formalized and demonstrate our
approach by a specification of Linda.},
  editor = {Paolo Ciancarini and Oscar Nierstrasz and Akinori Yonezawa},
  series = {LNCS}}

@inproceedings{Tolk97a,
  author = {Robert Tolksdorf},
  title = {Berlinda: An Object-Oriented Platform for Implementing Coordination Languages in {Java}.},
  booktitle = {Proceedings of COORDINATION '97 (Coordination Languages and Models},
  volume = 1282,
  pages = {430--433},
  publisher = {Springer-Verlag},
  year = {1997},
  series = {LNCS}}

@inproceedings{Tolk97b,
  author = {Robert Tolksdorf},
  title = {Coordinating {Java} Agents with Multiple Coordination Languages on the Berlinda Platform.},
  booktitle = {Proceedings of the 6th Workshops on Enabling Technologies: Infrastructure fo r Collaborative Enterprises (WET ICE '97)},
  pages = {121--126},
  year = {1997}}

@inproceedings{Tolv07a,
  author = {Juha-Pekka Tolvanen and Risto Pohjonen and Steven Kelly},
  title = {Advanced Tooling for Domain-Specific Modeling: {MetaEdit+}},
  booktitle = {Proceedings of the 7th OOPSLA Workshop on Domain-Specific Modeling},
  year = {2007},
  location = {Montreal, Canada}}

@incollection{Toml89a,
  author = {Chris Tomlinson and M. Scheevel},
  title = {Concurrent Object-Oriented Programming Languages},
  booktitle = {Object-Oriented Concepts, Databases and Applications},
  pages = {79--124},
  publisher = {ACM Press and Addison Wesley},
  year = {1989},
  address = {Reading, Mass.},
  editor = {W. Kim and F. Lochovsky}}

@inproceedings{Toml89b,
  author = {Chris Tomlinson and Vineet Singh},
  title = {Inheritance and Synchronization with Enabled Sets},
  booktitle = {Proceedings OOPSLA '89, ACM SIGPLAN Notices},
  volume = {24},
  pages = {103--112},
  year = {1989},
  month = oct}

@article{Tone01b,
  author = {Paolo Tonella},
  title = {Concept Analysis for Module Restructuring},
  journal = {IEEE Transactions on Software Engineering},
  volume = {27},
  pages = {351--363},
  year = {2001},
  month = apr,
  number = {4}}

@inproceedings{Tone02a,
  author = {P. Tonella and A. Potrich},
  title = {Static and Dynamic {C}++ Code Analysis for the Recovery of the Object Diagram},
  booktitle = {Proceedings of 18th IEEE International Conference on Software Maintenance ({ICSM}'02)},
  pages = {54},
  publisher = {IEEE Computer Society},
  year = {2002},
  doi = {10.1109/ICSM.2002.1167747},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7695-1819-2}}

@inproceedings{Tone04a,
  author = {Paolo Tonella and Mariano Ceccato},
  title = {Aspect Mining through the Formal Concept Analysis of Execution Traces},
  booktitle = {Proceedings of {WCRE} 2004 (11th International Working Conference in Reverse Engineering)},
  pages = {112--121},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  location = {Delft, Netherlands},
  month = nov}

@inproceedings{Tone10a,
  author = {Tonelli, Thiago and others},
  title = {Swing to SWT and back: Patterns for {API} migration by wrapping},
  booktitle = {2010 IEEE International Conference on Software Maintenance},
  pages = {1--10},
  year = {2010},
  organization = {IEEE}}

@article{Tone18a,
  author = {{Tonelli}, R. and {Destefanis}, G. and {Marchesi}, M. and {Ortu}, M.},
  title = {Smart Contracts Software Metrics: a First Study},
  journal = {ArXiv e-prints},
  year = {2018},
  adsnote = {Provided by the SAO/NASA Astrophysics Data System},
  adsurl = {http://adsabs.harvard.edu/abs/2018arXiv180201517T},
  archiveprefix = {arXiv},
  eprint = {1802.01517},
  keywords = {Computer Science - Software Engineering},
  month = {feb},
  primaryclass = {cs.SE}}

@inproceedings{Tone97a,
  author = {Paolo Tonella and Giuliano Antoniol and Roberto Fiutem and Ettore Merlo},
  title = {Flow Insensitive C++ Pointers and Polymorphism Analysis and its Application to Slicing},
  booktitle = {Proceedings ICSE '97},
  year = {1997},
  month = may,
  organization = {IEEE}}

@inproceedings{Tone99a,
  author = {Paolo Tonella and Giuliano Antoniol},
  title = {Object Oriented Design Pattern Inference},
  booktitle = {Proceedings of {ICSM} '99 (International Conference on Software Maintenance)},
  pages = {230--238},
  publisher = {IEEE Computer Society Press},
  year = {1999},
  month = oct}

@inproceedings{Toom04a,
  author = {Toomim, Michael and Begel, Andrew and Graham, Susan L.},
  title = {Managing Duplicated Code with Linked Editing},
  journal = {Visual Languages and Human Centric Computing, 2004 IEEE Symposium on},
  booktitle = {VLHCC '04: Proceedings of the 2004 IEEE Symposium on Visual Languages - Human Centric Computing},
  pages = {173--180},
  publisher = {IEEE Computer Society},
  year = {2004},
  url = {http://dx.doi.org/10.1109/VLHCC.2004.35},
  doi = {10.1109/VLHCC.2004.35},
  abstract = {We present Linked Editing, a novel, lightweight
editor-based technique for managing duplicated
source code.},
  address = {Washington, DC, USA}}

@inproceedings{Torc02a,
  author = {Marco Torchiano},
  title = {Documenting Pattern Use in {Java} Programs},
  booktitle = {Proceedings of {ICSM} 2002 (International Conference on Software Maintenance)},
  pages = {230--233},
  publisher = {IEEE Press},
  year = {2002},
  organization = {IEEE Computer Society}}

@book{Torc07a,
  author = {Torczon, Linda and Cooper, Keith},
  title = {Engineering A Compiler},
  publisher = {Morgan Kaufmann Publishers Inc.},
  year = {2007},
  address = {San Francisco, CA, USA},
  edition = {2nd},
  isbn = {012088478X}}

@inproceedings{Torg04a,
  author = {Mads Torgersen},
  title = {The Expression Problem Revisited},
  booktitle = {Proceedings of European Conference on Object-Oriented Programming (ECOOP'04)},
  volume = {3086},
  pages = {123--146},
  publisher = {Springer Verlag},
  year = {2004},
  url = {http://www.daimi.au.dk/~madst/ecoop04/main.pdf},
  doi = {10.1007/b98195},
  month = jun,
  series = {LNCS}}

@article{Torr05a,
  author = {Toor P.},
  title = {Demystifying the threat-modeling process},
  journal = {IEEE Security \& Privacy},
  volume = {5},
  year = {2007},
  number = {3}}

@inproceedings{Torr19a,
           title = {Multiverse Debugging: Non-deterministic Debugging for Non-deterministic Programs},
          author = {Carmen Torres Lopez and Robbert Gurdeep Singh and Stefan Marr and Elisa Gonzalez Boix and Christophe Scholliers},
       booktitle = {33rd European Conference on Object-Oriented Programming},
            year = {2019},
       publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
           month = {apr},
             url = {https://kar.kent.ac.uk/74328/},
        keywords = {Debugging, Parallelism, Concurrency, Actors, Formal Semantics}
        }

@inproceedings{Torr21a,
  author = {Torres Lopez, Carmen and Van Verre, Louise and Gonzalez Boix, Elisa},
  title = {What's the problem? interrogating actors to identify the root cause of concurrency bugs},
  booktitle = {Proceedings of the 11th ACM SIGPLAN International Workshop on Programming Based on Actors, Agents, and Decentralized Control},
  pages = {24--36},
  year = {2021}}

@article{Torre98a,
  author = {Torrellas, J. and Chun Xia and Daigle, R.L.},
  title = {Optimizing the instruction cache performance of the operating system},
  journal = {IEEE Transactions on Computers},
  volume = {47},
  pages = {1363-1381},
  year = {1998},
  doi = {10.1109/12.737683},
  number = {12}}

@techreport{Tory02a,
  author = {Melanie Tory and Torsten M\"oller},
  title = {A Model-Based Visualization Taxonomy},
  year = {2002},
  institution = {Computing Science Dept., Simon Fraser University},
  number = {CMPT-TR2002-06}}

@misc{ToscanaJ,
  title = {http://toscanaj.sourceforge.net/},
  url = {http://toscanaj.sourceforge.net/},
  key = {ToscanaJ},
  note = {http://toscanaj.sourceforge.net/}}

@unpublished{Toub19a,
  author = {Stephen Toub},
  title = {C\# channels},
  year = {2019},
  url = {https://devblogs.microsoft.com/dotnet/an-introduction-to-system-threading-channels/},
  note = {Intro}}

@inproceedings{Tour03a,
  author = {{Tom Tourw\'e} and Tom Mens},
  title = {Identifying Refactoring Opportunities Using Logic Meta Programming},
  booktitle = {European {C}onference on {S}oftware {M}aintenance and {R}e-engineering ({CSMR}'03)},
  pages = {91--100},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  month = mar}

@inproceedings{Tour03b,
  author = {Tourw\'{e}, Tom and Mens, Tom},
  title = {Automated Support for Framework-Based Software Evolution},
  booktitle = {{ICSM} '03: Proceedings of the International Conference on Software Maintenance},
  pages = {148},
  publisher = {IEEE Computer Society},
  year = {2003},
  address = {Washington, DC, USA},
  isbn = {0-7695-1905-9}}

@inproceedings{Trac93a,
  author = {Will Tracz},
  title = {Parameterized Programming in {LILEANNA}},
  booktitle = {Proceedings of the {ACM}/{SIGAPP} Symposium on Applied Computing},
  pages = {77--86},
  publisher = {ACM Press},
  year = {1993},
  address = {Indianapolis, IN},
  editor = {Ed Deaton and K. M. George and Hal Berghel and George Hedrick},
  month = feb}

@book{Trac95a,
  author = {Will Tracz},
  title = {Confessions of a Used Program Salesman},
  publisher = {Addison Wesley},
  year = {1995},
  isbn = {0-201-63369-8}}

@misc{Trai22a,
  author = {Traini, Luca and Cortellessa, Vittorio and Di Pompeo, Daniele and Tucci, Michele},
  title = {Towards effective assessment of steady state performance in Java software: Are we there yet?},
  publisher = {arXiv},
  year = {2022},
  url = {https://arxiv.org/abs/2209.15369},
  doi = {10.48550/ARXIV.2209.15369},
  keywords = {Software Engineering (cs.SE), FOS: Computer and information sciences, FOS: Computer and information sciences}}

@article{Tran00,
  author = {John B. Tran and Michael W. Godfrey and Eric H.S. Lee and Richard C. Holt},
  title = {Architectural Repair of Open Source Software},
  journal = {International Conference on Program Comprehension},
  pages = {48},
  publisher = {IEEE Computer Society},
  year = {2000},
  doi = {10.1109/WPC.2000.852479},
  address = {Los Alamitos, CA, USA},
  issn = {1092-8138}}

@inproceedings{Tran00a,
  author = {John B. Tran and Michael W. Godfrey and Eric H. S. Lee and Richard C. Holt},
  title = {Architectural Repair of Open Source Software.},
  booktitle = {IWPC},
  pages = {48--59},
  year = {2000}}

@inproceedings{Tran19a,
  author = {Tran, Ngoc and Tran, Hieu and Nguyen, Son and Nguyen, Hoan and Nguyen, Tien},
  title = {Does BLEU score work for code migration?},
  booktitle = {2019 IEEE/ACM 27th International Conference on Program Comprehension ({ICPC})},
  pages = {165--176},
  year = {2019},
  organization = {IEEE}}

@inproceedings{Tran99a,
  author = {J. Tran and R. Holt},
  title = {Forward and Reverse Repair of Software Architecture},
  booktitle = {Proceedings of CASCON},
  year = {1999},
  month = {nov}}

@techreport{Trat05a,
  author = {Laurence Tratt},
  title = {The {Converge} programming language},
  year = {2005},
  url = {http://tratt.net/laurie/research/publications/papers/tratt05convergepl.pdf},
  institution = {Department of Computer Science, King's College London},
  month = feb,
  number = {TR-05-01}}

@misc{Trat05b,
  author = {Laurence Tratt},
  title = {Domain Specific Language Implementation via Compile-Time Meta-Programming},
  year = {2005},
  note = {Submitted for Publication}}

@article{Trat08a,
  author = {Laurence Tratt},
  title = {Domain specific language implementation via compile-time meta-programming},
  journal = {ACM TOPLAS},
  volume = {30},
  pages = {1--40},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1391956.1391958},
  address = {New York, NY, USA},
  issn = {0164-0925},
  number = {6}}

@article{Trat09a,
  author = {Laurence Tratt},
  title = {Dynamically Typed Languages},
  journal = {Advances in Computers},
  volume = {77},
  pages = {149--184},
  publisher = {Elsevier},
  year = {2009}}

@inproceedings{Trau17a,
  author = {Trautsch, Fabian and Grabowski, Jens},
  title = {Are There Any Unit Tests? An Empirical Study on Unit Testing in Open Source Python Projects},
  booktitle = {2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  year = {2017},
  pages = {207-218},
  doi = {10.1109/ICST.2017.26}}

@inproceedings{Trav02a,
  author = {Martin Traverso and Spiros Mancoridis},
  title = {On the Automatic Recovery of Style-Specific Architectural Relations in Software Systems},
  booktitle = {Proceedings of ASE 2002 (Conference on Automated Software Engineering)},
  pages = {331--360},
  year = {2002}}

@article{Treis85a,
  author = {Anne Treisman},
  title = {Preattentive processing in vision},
  journal = {Computer Vision, Graphics, and Image Processing},
  volume = {31},
  pages = {156--177},
  year = {1985},
  doi = {10.1016/S0734-189X(85)80004-9},
  number = {2}}

@article{Trel82a,
  author = {P.C. Treleaven and D.R. Brownbridge and R.P. Hopkins},
  title = {Data-Driven and Demand-Driven Computer Architecture},
  journal = {ACM Computing Surveys},
  volume = {14},
  pages = {93--143},
  year = {1982},
  month = mar,
  number = {1}}

@book{Trem75a,
  author = {J.P. Tremblay and R. Manohar},
  title = {Discrete Mathemetical Structures with Applications to Computer Science},
  publisher = {McGraw-Hill},
  year = {1975}}

@inproceedings{Tria03,
  author = {Triantafyllis, Spyridon and Vachharajani, Manish and Vachharajani, Neil and August, David I},
  title = {Compiler optimization-space exploration},
  booktitle = {International Symposium on Code Generation and Optimization, 2003. CGO 2003.},
  pages = {204--215},
  year = {2003},
  organization = {IEEE}}

@phdthesis{Trif01a,
  author = {Adrian Trifu},
  title = {Using Cluster Analysis in the Architecture Recovery of Object-Oriented Systems},
  year = {2001},
  school = {Univ. Karlsruhe}}

@inproceedings{Trif04a,
  author = {Adrian Trifu and Olaf Seng and Thomas Genssler},
  title = {Automated Design Flaw Correction in Object-Oriented Systems},
  booktitle = {Proceedings 8th European Conference on Software Maintenance and Reengineering (CSMR 2004)},
  pages = {174--183},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA}}

@inproceedings{Trif05,
  author = {Adrian Trifu and Radu Marinescu},
  title = {Diagnosing Design Problems in Object Oriented Systems.},
  booktitle = {Proceedings of 12th Working Conference on Reverse Engineering ({WCRE} 2005), 7-11 November 2005, Pittsburgh, PA, USA},
  pages = {155--164},
  publisher = {IEEE Computer Society},
  year = {2005},
  doi = {10.1109/{WCRE}.2005.15},
  address = {Los Alamitos CA}}

@book{Trio06a,
  author = {Mario Triola},
  title = {Elementary Statistics},
  publisher = {Addison-Wesley},
  year = {2006},
  isbn = {0-321-33183-4}}

@inproceedings{Trip09a,
  author = {Tripp, Omer and Pistoia, Marco and Fink, Stephen J. and Sridharan, Manu and Weisman, Omri},
  title = {TAJ: effective taint analysis of web applications},
  booktitle = {Proceedings of PLDI 2009 (Conference on Programming language design and implementation)},
  pages = {87--97},
  publisher = {ACM},
  year = {2009},
  doi = {10.1145/1542476.1542486},
  address = {New York, NY, USA},
  isbn = {978-1-60558-392-1},
  location = {Dublin, Ireland}}

@article{Trip88a,
  author = {Anand Tripathi and Mehmet Aksit},
  title = {Communication, Scheduling and Resource Management in {SINA}},
  journal = {Journal of Object-Oriented Programming},
  volume = {2},
  pages = {24--36},
  year = {1988},
  month = nov,
  number = {4}}

@article{Trip89a,
  author = {Anand Tripathi},
  title = {An Overview of the Nexus Distributed Operating System Design},
  journal = {IEEE Transactions on Software Engineering},
  volume = {15},
  pages = {686--695},
  year = {1989},
  month = jun,
  number = {6}}

@proceedings{Trip92a,
  title = {International Workshop on Object-Orientation in Operating Systems},
  year = {1992},
  address = {Paris},
  editor = {Anand Tripathi and Richard Wolfe and Surya Koneru and Zine Attia},
  month = sep}

@inproceedings{Tris11a,
  author = {Tristan, Jean-Baptiste and Govereau, Paul and Morrisett, Greg},
  title = {Evaluating Value-graph Translation Validation for {LLVM}},
  booktitle = {Programming Language Design and Implementation},
  year = {2011},
  doi = {10.1145/1993498.1993533},
  address = {New York, NY, USA},
  keywords = {llvm, optimization, symbolic evaluation, translation validation},
  location = {San Jose, California, USA},
  numpages = {11},
  series = {PLDI '11}}

@unpublished{Trit95a,
  author = {Grahan Tritt},
  title = {Was ist {SGML} ?},
  year = {1995},
  month = jul,
  note = {Universit{\"a}t Bern},
  type = {Draft}}

@article{Trom14a,
  author = {Tromp, John},
  title = {Cuckoo Cycle: a memory-hard proof-of-work system.},
  journal = {IACR Cryptology ePrint Archive},
  volume = {2014},
  pages = {59},
  year = {2014}}

@techreport{Trot92a,
  author = {Claudio Trotta and Oscar Nierstrasz},
  title = {Object-Oriented Support for Generic Application Frames},
  pages = {151--195},
  year = {1992},
  url = {http://scg.unibe.ch/archive/osg/Trot92aGafSupport.pdf},
  abstract = {One step in trying to define a reuse-based software
development paradigm is reasoning about the
development process itself and the required
information to support it. We work towards this goal
by proposing a tool for designing Generic
Application Frames based on the careful structuring
of past experience as well as domain information. We
claim that the benefits of the object-oriented
paradigm have yet to be properly scaled, and that
they can be achieved by applying object-oriented
design techniques to describe both software
components and development methods.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Frameworks}}

@inproceedings{Trud12a,
  author = {Trudel, Marco and Furia, Carlo A and Nordio, Martin and Meyer, Bertrand and Oriol, Manuel},
  title = {C to OO translation: Beyond the easy stuff},
  booktitle = {2012 19th Working Conference on Reverse Engineering},
  pages = {19--28},
  year = {2012},
  organization = {IEEE}}

@inproceedings{Truy02a,
  author = {Eddy Truyen and Wouter Joosen and Pierre Verbaeten},
  title = {Consistency Management in the Presence of Simultaneous Client-Specific Views},
  booktitle = {{ICSM} '02: Proceedings of the International Conference on Software Maintenance ({ICSM}'02)},
  pages = {501},
  publisher = {IEEE Computer Society},
  year = {2002},
  address = {Washington, DC, USA},
  date-added = {2010-01-28 15:19:36 +0100},
  date-modified = {2010-01-28 15:19:47 +0100},
  isbn = {0-7695-1819-2},
  rating = {1}}

@misc{Tryg03a,
  author = {Trygve M. H. Reenskaug},
  title = {The Model-View-Controller (MVC) --- Its Past and Present},
  note = {JavaZONE, Oslo, 2003}}

@misc{Tryg79a,
  author = {Trygve M. H. Reenskaug},
  title = {Models - Views - Controllers},
  year = {1979},
  url = {http://heim.ifi.uio.no/~trygver/1979/mvc-2/1979-12-MVC.pdf},
  month = dec,
  note = {\url{heim.ifi.uio.no/~trygver/1979/mvc-2/1979-12-MVC.pdf}}}

@article{Tsan09a,
  author = {Tsantalis, Nikolaos and Chatzigeorgiou, Alexander},
  title = {Identification of move method refactoring opportunities},
  journal = {IEEE Transactions on Software Engineering},
  volume = {35},
  pages = {347--367},
  publisher = {IEEE},
  year = {2009},
  number = {3}}

@article{Tsan10a,
  author = {Tsantalis, Nikolaos and Chatzigeorgiou, Alexander},
  title = {Identification of refactoring opportunities introducing polymorphism},
  journal = {Journal of Systems and Software},
  volume = {83},
  pages = {391--404},
  publisher = {Elsevier},
  year = {2010},
  number = {3}}

@inproceedings{Tsan18a,
  author = {Tsantalis, Nikolaos and Mansouri, Matin and Eshkevari, Laleh M. and Mazinanian, Davood and Dig, Danny},
  title = {Accurate and Efficient Refactoring Detection in Commit History},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering ({ICSE '18})},
  pages = {483--494},
  publisher = {ACM},
  year = {2018},
  doi = {10.1145/3180155.3180206},
  isbn = {978-1-4503-5638-1},
  location = {Gothenburg, Sweden},
  numpages = {12},
  acmid = {3180206},
  address = {New York, NY, USA}}

@article{Tsan20a,
  author = {Tsantalis, Nikolaos and Ketkar, Ameya and Dig, Danny},
  title = {RefactoringMiner 2.0},
  journal = {IEEE Transactions on Software Engineering},
  volume = {48},
  pages = {930-950},
  year = {2022},
  doi = {10.1109/TSE.2020.3007722},
  number = {3}}

@techreport{Tsch02a,
  author = {Daniel Tschan},
  title = {Exjdb --- Experimental {Java} Debugger},
  year = {2002},
  url = {http://scg.unibe.ch/archive/projects/Tsch02a.pdf},
  institution = {University of Bern},
  month = dec,
  type = {Informatikprojekt}}

@book{Tsic00a,
  title = {Internet Objects},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {2000},
  editor = {D. Tsichritzis},
  month = sep}

@article{Tsic72a,
  author = {Dennis Tsichritzis},
  title = {Protection in Operating Systems},
  journal = {Information Processing Letters},
  volume = {1},
  pages = {127--131},
  publisher = {North-Holland},
  year = {1972},
  address = {Amsterdam},
  number = {4}}

@article{Tsic76a,
  author = {Dennis Tsichritzis and Frederick H. Lochovsky},
  title = {Hierarchical Database Management: {A} Survey},
  journal = {ACM Computing Surveys},
  volume = {8},
  pages = {105--124},
  year = {1976},
  month = mar,
  number = {1}}

@book{Tsic82a,
  author = {Dennis Tsichritzis and Frederick H. Lochovsky},
  title = {Data Models},
  publisher = {Prentice-Hall},
  year = {1982},
  address = {Englewood Cliffs, N.J.}}

@article{Tsic82b,
  author = {Dennis Tsichritzis and Fausto Rabitti and Simon Gibbs and Oscar Nierstrasz and John Hogg},
  title = {A System for Managing Structured Messages},
  journal = {IEEE Transactions on Communications},
  volume = {Com-30},
  pages = {66--73},
  year = {1982},
  abstract = {Message systems send and receive messages but do not
manage the information the messages contain.
Database management systems manage the information
of a global database but do not have a notion of
address. In this paper we outline a prototype system
which integrates the facilities of message systems
and database management systems. The system manages
structured messages according to their contents. The
messages can be stored within a station and
transferred between stations. Information present in
the messages can be queried in a distributed manner.
Message structure can also be exploited by automatic
procedures which recognize triggering conditions and
perform user specified actions.},
  month = jan,
  number = {1}}

@article{Tsic82c,
  author = {Dennis Tsichritzis},
  title = {Form Management},
  journal = {CACM},
  volume = {25},
  pages = {453--478},
  year = {1982},
  month = jul,
  number = {7}}

@article{Tsic83a,
  author = {Dennis Tsichritzis and Stavros Christodoulakis},
  title = {Message Files},
  journal = {ACM TOOIS},
  volume = {1},
  pages = {88--98},
  year = {1983},
  month = jan,
  number = {1}}

@inproceedings{Tsic83b,
  author = {Dennis Tsichritzis and Stavros Christodoulakis and Panos Economopoulos and Christos Faloutsos and Allison Lee and Dik Lee and J. Vandenbroek and Carson Woo},
  title = {A Multimedia Office Filing System},
  booktitle = {Proceedings of the Ninth International Conference on Very Large Data Bases},
  pages = {2--7},
  year = {1983},
  address = {Florence, Italy}}

@article{Tsic84a,
  author = {Dennis Tsichritzis},
  title = {Message Addressing Schemes},
  journal = {ACM TOOIS},
  volume = {2},
  pages = {58--87},
  year = {1984},
  month = jan,
  number = {1}}

@incollection{Tsic85a,
  author = {Dennis Tsichritzis and Costantino Thanos and Fausto Rabitti and Stavros Christodoulakis and Simon Gibbs and Elisa Bertino and A. Fedeli and Christos Faloutsos and Panos Economopoulos},
  title = {Design Issues of a File Server for Multimedia Documents},
  booktitle = {Esprit '84: Status Report of Ongoing Work},
  publisher = {Elsevier Science Publishers B.V. (North-Holland)},
  year = {1985},
  editor = {J. Roukens and J.F. Renuart}}

@incollection{Tsic85b,
  author = {Dennis Tsichritzis and Simon Gibbs},
  title = {Etiquette Specification in Message Systems},
  booktitle = {Office Automation: Concepts and Tools},
  pages = {93--112},
  publisher = {Springer-Verlag},
  year = {1985},
  address = {Heidelberg},
  editor = {D. Tsichritzis}}

@book{Tsic85c,
  title = {Office Automation: Concepts and Tools},
  publisher = {Springer-Verlag},
  year = {1985},
  address = {Heidelberg},
  editor = {D. Tsichritzis}}

@article{Tsic85d,
  author = {Dennis Tsichritzis},
  title = {Object Species},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {2--7},
  year = {1985},
  month = dec,
  number = {4}}

@incollection{Tsic85e,
  author = {Dennis Tsichritzis},
  title = {Objectworld},
  booktitle = {Office Automation: Concepts and Tools},
  pages = {379--398},
  publisher = {Springer-Verlag},
  year = {1985},
  address = {Heidelberg},
  editor = {D. Tsichritzis}}

@article{Tsic85f,
  author = {Dennis Tsichritzis and Oscar Nierstrasz},
  title = {End User Objects},
  journal = {B{\"u}roautomation '85 (German Chapter of the ACM, Berichte 25)},
  pages = {215--232},
  publisher = {B.G. Teubner},
  year = {1985},
  misc = {Oct. 4},
  address = {Stuttgart},
  editor = {H. Wedekind/K. Kratzer},
  month = oct}

@inproceedings{Tsic87a,
  author = {Dennis Tsichritzis and Simon Gibbs},
  title = {Messages, Messengers and Objects},
  booktitle = {Proceedings of the IEEE Symposium on Office Automation},
  year = {1987},
  address = {Gaithersburg, MD},
  month = apr}

@book{Tsic87b,
  title = {Objects and Things},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1987},
  editor = {D. Tsichritzis},
  month = mar}

@article{Tsic87c,
  author = {Dennis Tsichritzis and Eugene Fiume and Simon Gibbs and Oscar Nierstrasz},
  title = {{KNO}s: {KN}owledge Acquisition, Dissemination and Manipulation Objects},
  journal = {ACM TOOIS (Transactions on Office Information Systems)},
  volume = {5},
  pages = {96--112},
  year = {1987},
  url = {http://scg.unibe.ch/archive/osg/Tsic87cKnos.pdf},
  doi = {10.1145/22890.23001},
  abstract = {Most object-oriented systems lack two useful
facilities: the ability of objects to migrate to new
environments, and the ability of objects to acquire
new operations dynamically. This paper proposes
Knos, an object-oriented environment which supports
these actions. Their operations, data structures,
and communication mechanisms are discussed. Kno
objects "learn" by exporting and importing new or
modified operations. The use of such objects as
intellectual support tools is outlined. In
particular, various applications involving
co-operation, negotiation, and apprenticeship among
objects are described.},
  month = jan,
  number = {1}}

@inproceedings{Tsic88a,
  author = {Dennis Tsichritzis and Oscar Nierstrasz},
  title = {Fitting Round Objects into Square Databases},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {283--299},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  url = {http://scg.unibe.ch/archive/osg/Tsic88aRoundSquare.pdf http://link.springer.de/link/service/series/0558/tocs/t0322.htm},
  abstract = {Object-oriented systems could use much of the
functionality of database systems to manage their
objects. Persistence, object identity, storage
management, distribution and obc control are some of
the things that database systems traditionally
handle well. Unfortunately there is a fundamental
difference in philosophy between the object-oriented
and database approaches, namely that of object
independence versus data independence. We discuss
the ways in which this difference in outlook
manifests itself, and we consider the possibilities
for resolving the two views, including the current
work on object-oriented databases. We conclude by
proposing an approach to co-existence that blurs the
boundary between the object-oriented execution
environment and the database.},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@incollection{Tsic88b,
  author = {Dennis Tsichritzis},
  title = {Integrated Application Systems: Esprit {I} and {II}},
  booktitle = {Active Object Environments},
  pages = {219--224},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1988},
  editor = {D. Tsichritzis},
  month = jun}

@inproceedings{Tsic88c,
  author = {Dennis Tsichritzis and Oscar Nierstrasz},
  title = {Application Development Using Objects},
  booktitle = {Information Technology for Organisational Systems, Proceedings EURINFO '88},
  pages = {15--23},
  publisher = {Elsevier Science Publishers B.V. (North-Holland)},
  year = {1988},
  url = {http://scg.unibe.ch/archive/osg/Tsic88cAppDevtUsingObjects.pdf},
  abstract = {Much of the cost of developing and maintaining
applications can be attributed to our disposition to
build systems largely from scratch. An application
development support system would shift the emphasis
from programming of arbitrary systems to {\it
configuration} of certain classes of applications
from pre-packaged software. In order for this style
of application development to be successful, we
argue that it should be carried out in an
object-oriented software environment. Such an
environment would consist of an object-oriented
language and system that integrates various
object-oriented approaches, user interface tools for
monitoring and interacting with active objects,
object design tools, and support for evolving
application-oriented objects.},
  editor = {H-J. Bullinger et al.}}

@book{Tsic88d,
  title = {Active Object Environments},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1988},
  editor = {D. Tsichritzis},
  month = jun}

@inproceedings{Tsic89a,
  author = {Dennis Tsichritzis},
  title = {Object-Oriented Development for Open Systems},
  booktitle = {Information Processing 89 (Proceedings IFIP '89)},
  pages = {1033--1040},
  publisher = {North-Holland},
  year = {1989},
  misc = {Aug 28-Sept 1},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/ooDevelopmentOpenSystems.pdf},
  abstract = {This paper outines the requirements for a series of
tools to develop effectively systems in an
object-oriented manner. It points out that
reusability requires a certain change in philosophy
and methodology for program development.},
  address = {San Francisco},
  month = aug}

@book{Tsic89b,
  title = {Object Oriented Development},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1989},
  editor = {D. Tsichritzis},
  month = jul}

@incollection{Tsic89c,
  author = {Dennis Tsichritzis and Oscar Nierstrasz},
  title = {Directions in Object-Oriented Research},
  booktitle = {Object-Oriented Concepts, Databases and Applications},
  pages = {523--536},
  publisher = {ACM Press and Addison Wesley},
  year = {1989},
  url = {http://scg.unibe.ch/archive/osg/Tsic89cDirections.pdf},
  abstract = {Identifies several more traditional research
directions dealing with object oriented languages
and systems, and several more exotic research
directions concerning evolving active objects.},
  address = {Reading, Mass.},
  editor = {W. Kim and F. Lochovsky}}

@techreport{Tsic90a,
  author = {Dennis Tsichritzis and Simon Gibbs},
  title = {Towards Integrated Software Communities},
  pages = {3--11},
  year = {1990},
  url = {http://cuiwww.unige.ch/OSG/publications/OO-articles/integratedSoftwareCommunities.pdf},
  abstract = {The large-scale reuse and distribution of software
components requires communities of software
developers supported by an infrastructure of
communication and information services. This paper
elaborates on the notion of software communities and
describes their role in software production.
Problems associated with sharing components within a
software community are discussed. Finally the paper
describes the steps needed to promote the
establishment of a robust software community.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  note = {Submitted as a position paper to the Esprit Advisory Board},
  type = {Object Management}}

@techreport{Tsic90b,
  author = {Dennis Tsichritzis and Simon Gibbs},
  title = {From Custom-Made to Pr\^et-\`a-Porter Software},
  pages = {367--376},
  year = {1990},
  abstract = {We discuss the different aspects of software
development and the different lines of activities
that a software company may pursue. The choice of
alternatives and the positioning of a software
company is very critical to its eventual success. We
propose some positive steps for giving companies a
better chance to succeed in the fiercely competitive
international software market.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@book{Tsic90c,
  title = {Object Management},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1990},
  editor = {D. Tsichritzis},
  month = jul}

@techreport{Tsic91a,
  author = {Dennis Tsichritzis and G. Capriz and Emmanuel de Robien and Simon Gibbs and B. Gaissmaier and Brian Oakley and N. Szyperski and R. Varenne},
  title = {{ESSI}: The European Software and Systems Initiative},
  pages = {323--329},
  year = {1991},
  abstract = {This report was prepared for the Esprit Advisory
Board. It constitutes a general advice of the ESPRIT
Advisory Board to the Commission of the European
Communities and does not describe the precise
modalities of implementation.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@techreport{Tsic91b,
  author = {Dennis Tsichritzis and Simon Gibbs and Laurent Dami},
  title = {Active Media},
  pages = {115--132},
  year = {1991},
  abstract = {In this paper we explore an environment for "active
media." The environment consists of a lower-level
object-oriented framework intended for multimedia
programmers and a higher-level facility intended for
multimedia designers. We claim that such an
environment will be both flexible and powerful for
constructing complex multimedia applications. We
first define multimedia objects and then explore
composition techniques for these objects. Finally,
we outline a facility for "scripting," that is,
specifying the cooperation of such objects.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@techreport{Tsic91c,
  author = {Dennis Tsichritzis and Simon Gibbs},
  title = {Virtual Museums and Virtual Realities},
  pages = {157--164},
  year = {1991},
  abstract = {The notion of virtual museum is discussed and
related to various developments in user-interface,
software, and communications technology. A prototype
implementation, intended to explore the integration
of interactive 3d graphics with video imagery is
described.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  note = {A version of this paper will appear in Proc. of the Intl. Conf. on Hypermedia and Interactivity in Muse ums, Pittsburgh, 1991.},
  type = {Object Composition}}

@book{Tsic91d,
  title = {Object Composition},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1991},
  editor = {D. Tsichritzis},
  month = jun}

@techreport{Tsic91e,
  author = {Dennis Tsichritzis and Vassili Prevelakis},
  title = {Perspectives on Hypertext Structures},
  pages = {255--271},
  year = {1991},
  abstract = {Using graph-like structures to store and organise
ideas, concepts, or even programs is not new.
However, difficulties arise when large amounts of
inter-related information are shared by groups of
people. This paper describes an organisation based
on perspectives that aids in structuring hy pertext.
Perspectives provide a uniform model for views,
versions and contexts --- and can be composed via
perspective operations. After a brief introduction
where we motivate the need for structuring
mechanisms within hypertext, we give a more rigorous
description of the model be hind perspectives and
the operations that can be performed on them. We
then present a number of examples that demonstrate
that perspectives can be used in various application
domains. Finally, we outline a prototype
implementation built to demonstrate the power and
flexibility of our model.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jun,
  type = {Object Composition}}

@book{Tsic92a,
  title = {Object Frameworks},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1992},
  editor = {D. Tsichritzis},
  month = jul}

@article{Tsic92b,
  author = {Dennis Tsichritzis and Oscar Nierstrasz and Simon Gibbs},
  title = {Beyond Objects: Objects},
  journal = {IJICIS (International Journal of Intelligent \& Cooperative Information Systems)},
  volume = {1},
  pages = {43--60},
  year = {1992},
  url = {http://scg.unibe.ch/archive/osg/Tsic92bBeyondObjects.pdf},
  abstract = {Object-orientation offers more than just objects,
classes and inheritance as means to structure
applications. It is an approach to application
development in which software systems can be
constructed by composing and refining pre-designed,
plug-compatible software components. But for this
approach to be successfully applied, programming
languages must provide better support for component
specification and software composition, the software
development life-cycle must separate the issues of
generic component design and reuse from that of
constructing applications to meet specific
requirements, and, more generally, the way we
develop, manage, exchange and market software must
adapt to better support large-scale reuse for
software communities. In this paper we shall explore
these themes and we will highlight a number of key
research directions and open problems to be explored
as steps towards improving the effectiveness of
object technology.},
  number = {1}}

@book{Tsic93a,
  title = {Visual Objects},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1993},
  editor = {D. Tsichritzis},
  month = jul}

@book{Tsic96a,
  title = {Object Applications},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1996},
  editor = {D. Tsichritzis},
  month = jul}

@book{Tsic97a,
  title = {Objects at Large},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1997},
  editor = {D. Tsichritzis},
  month = jul}

@book{Tsic98a,
  title = {Electronic Commerce},
  publisher = {Centre Universitaire d'Informatique, University of Geneva},
  year = {1998},
  editor = {D. Tsichritzis}}

@inproceedings{Tu00a,
  author = {Tu, Qiang and others},
  title = {Evolution in open source software: A case study},
  booktitle = {Proceedings 2000 International Conference on Software Maintenance},
  pages = {131--142},
  year = {2000},
  organization = {IEEE}}

@inproceedings{Tu01a,
  author = {Qiang Tu and Michael W. Godfrey},
  title = {The Build-Time Software Architecture View},
  booktitle = {International Conference on Software Maintenance ({ICSM} 2001)},
  pages = {398--407},
  year = {2001}}

@inproceedings{Tu02a,
  author = {Qiang Tu and Michael W. Godfrey},
  title = {An Integrated Approach for Studying Architectural Evolution},
  booktitle = {10th International Workshop on Program Comprehension (IWPC'02)},
  pages = {127--136},
  publisher = {IEEE Computer Society Press},
  year = {2002},
  location = {Paris, France},
  month = jun}

@inproceedings{Tu14a,
  author = {Tu, Zhaopeng and Su, Zhendong and Devanbu, Premkumar},
  title = {On the localness of software},
  booktitle = {Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages = {269--280},
  year = {2014}}

@book{Tuck95a,
  author = {Allen B. Tucker and Andrew P. Bernat and W. James Bradley and Robert D. Cupper and Greg W. Scragg},
  title = {Fundamentals of Computing {I}: Logic, Problem Solving, Programs, and Computers {C}++ Edition},
  publisher = {Mc Graw-Hill},
  year = {1995},
  isbn = {0-07-065506-5}}

@article{Tufa20a,
  author = {Michele Tufano and Dawn Drain and Alexey Svyatkovskiy and Shao Kun Deng and Neel Sundaresan},
  title = {Unit Test Case Generation with Transformers and Focal Context},
  journal = {CoRR},
  volume = {abs/2009.05617},
  year = {2020},
  url = {https://arxiv.org/abs/2009.05617},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl = {https://dblp.org/rec/journals/corr/abs-2009-05617.bib},
  eprint = {2009.05617},
  eprinttype = {arXiv},
  timestamp = {Thu, 17 Sep 2020 12:49:52 +0200}}

@book{Tuft01a,
  author = {Edward R. Tufte},
  title = {The Visual Display of Quantitative Information},
  publisher = {Graphics Press},
  year = {2001},
  edition = {2nd}}

@book{Tuft03a,
  author = {Edward R. Tufte},
  title = {The Cognitive Style of Powerpoint},
  publisher = {Graphics Press},
  year = {2003}}

@book{Tuft90a,
  author = {Edward R. Tufte},
  title = {Envisioning Information},
  publisher = {Graphics Press},
  year = {1990}}

@book{Tuft97a,
  author = {Edward R. Tufte},
  title = {Visual explanations: images and quantities, evidence and narrative},
  publisher = {Graphics Press},
  year = {1997},
  address = {Cheshire, CT, USA},
  isbn = {0-9613921-2-6}}

@book{Tuft97b,
  author = {Edward R. Tufte},
  title = {Visual \& Statistical Thinking: Displays of Evidence for Decision Making},
  publisher = {Graphics Press},
  year = {1997},
  address = {Cheshire, CT, USA},
  isbn = {0-961392134}}

@techreport{Tung92a,
  author = {Sho-Huan Simon Tung},
  title = {Merging Interactive, Modular and Object-oriented Programming},
  year = {1992},
  address = {Bloomington, Indiana},
  institution = {Indiana University},
  month = mar,
  number = {349},
  type = {Computer Science Department Technical Report}}

@article{Tung96a,
  author = {Sho-Huan Simon Tung and R. Kent Dybvig},
  title = {Reliable Interactive Programming with Modules},
  journal = {Lisp and Symbolic Computation},
  volume = {9},
  pages = {343--358},
  year = {1996},
  url = {http://citeseer.nj.nec.com/tung95reliable.html},
  number = {4}}

@inproceedings{Turn85a,
  author = {David A. Turner},
  title = {Miranda: {A} Non-strict Functional Language with Polymorphic Types},
  booktitle = {Proceedings Functional Programming languages and Computer Architecture},
  volume = {201},
  pages = {1--16},
  publisher = {Springer-Verlag},
  year = {1985},
  editor = {J-P. Jouannaud},
  series = {LNCS}}

@incollection{Turn90a,
  author = {David A. Turner},
  title = {An Overview of Miranda},
  booktitle = {Research Topics in Functional Programming},
  pages = {1--16},
  publisher = {Addison Wesley},
  year = {1990},
  address = {Reading, Mass.},
  editor = {D.A. Turner}}

@phdthesis{Turn96a,
  author = {David N. Turner},
  title = {The Polymorphic Pi-Calculus: Theory and Implementation},
  year = {1996},
  school = {Department of Computer Science, University of Edinburgh, UK},
  url = {http://www.dcs.gla.ac.uk/~dnt/thesis.ps},
  type = {{Ph.D}. Thesis}}

@inproceedings{Turn98a,
  author = {Reid Turner and Alexander Wolf and Alfonso Fuggetta and Luigi Lavazza},
  title = {Feature Engineering},
  booktitle = {Proceedings IEEE International Workshop on Software Specification and Design (WSSD 1998)},
  pages = {162},
  publisher = {IEEE Computer Society},
  year = {1998},
  address = {Los Alamitos CA},
  isbn = {0-8186-8439-9}}

@article{Turn99a,
  author = {C. Reid Turner and Alfonso Fuggetta and Luigi Lavazza and Alexander L. Wolf},
  title = {A conceptual basis for feature engineering},
  journal = {J. Syst. Softw.},
  volume = {49},
  pages = {3--15},
  publisher = {Elsevier Science Inc.},
  year = {1999},
  url = {http://www.doc.ic.ac.uk/~alw/doc/papers/jss99.pdf},
  doi = {10.1016/S0164-1212(99)00062-X},
  address = {New York, NY, USA},
  issn = {0164-1212},
  number = {1}}

@phdthesis{Turn99b,
  author = {C. Reid Turner},
  title = {Feature Engineering of Software Systems},
  year = {1999},
  school = {University of Colorado},
  url = {http://www.doc.ic.ac.uk/~alw/edu/theses/turner-phd-0599.pdf},
  month = may,
  type = {{Ph.D}. Thesis}}

@inproceedings{Turs81a,
  author = {W. Turski},
  title = {Software Stability},
  booktitle = {Proceedings for the 6th ACM Conference on Systems Architecture},
  year = {1981}}

@article{Turve94a,
  author = {Turver, Richard J. and Munro, Malcolm},
  title = {An early impact analysis technique for software maintenance},
  journal = {Journal of Software Maintenance: Research and Practice},
  volume = {6},
  pages = {35--52},
  publisher = {John Wiley & Sons, Ltd},
  year = {1994},
  url = {http://dx.doi.org/10.1002/smr.4360060104},
  doi = {10.1002/smr.4360060104},
  issn = {1096-908X},
  keywords = {Documentation, Impact analysis, Ripple effect, Software maintenance},
  number = {1}}

@mastersthesis{Twai84a,
  author = {Kenneth J. Twaites},
  title = {An Object-based Programming Environment for Office Information Systems},
  year = {1984},
  school = {Department of Computer Science, University of Toronto},
  type = {M.Sc. thesis}}

@inproceedings{Tyag01a,
  author = {Satyam Tyagi and Paul Tarau},
  title = {A Most Specific Method Finding Algorithm for Reflection Based Dynamic Prolog-to-Java Interfaces},
  booktitle = {Practical Aspects of Declarative Languages},
  volume = 1990,
  pages = {322--336},
  publisher = {Springer-Verlag},
  year = {2001},
  editor = {I. V. Ramakrishnan},
  series = {LNCS}}

@inproceedings{Tyag01b,
  author = {Satyam Tyagi and Paul Tarau},
  title = {A Most Specific Method Finding Algorithm for Reflection Based Dynamic Prolog-to-Java Interfaces},
  booktitle = {PADL '01: Proceedings of the Third International Symposium on Practical Aspects of Declarative Languages},
  pages = {322--336},
  publisher = {Springer-Verlag},
  year = {2001},
  address = {London, UK},
  isbn = {3-540-41768-0}}

@inproceedings{Tymc17,
  author = {Tymchuk, Yuriy and Ghafari, Mohammad and Nierstrasz, Oscar},
  title = {Renraku: The One Static Analysis Model to Rule Them All},
  booktitle = {Proceedings of the 12th Edition of the International Workshop on Smalltalk Technologies},
  pages = {13:1--13:10},
  publisher = {ACM},
  year = {2017},
  url = {http://doi.acm.org/10.1145/3139903.3139919},
  doi = {10.1145/3139903.3139919},
  acmid = {3139919},
  address = {New York, NY, USA},
  articleno = {13},
  isbn = {978-1-4503-5554-4},
  keywords = {code quality, software design, static analysis},
  location = {Maribor, Slovenia},
  numpages = {10},
  series = {IWST '17}}

@inproceedings{Tymc18,
  author = {Yuriy Tymchuk and Mohammad Ghafari and Oscar Nierstrasz},
  title = {{ICPC}'18, International Conference on Program Comprehension},
  booktitle = {JIT Feedback - what Experienced Developers like about Static Analysis},
  year = {2018},
  organization = {ACM}}

@book{Tyrr95a,
  author = {A.J. Tyrrell},
  title = {Eiffel Object-Oriented Programming},
  publisher = {MacMillan Press},
  year = {1995}}

@inproceedings{Tzer96a,
  author = {Vassilios Tzerpos and Richard C. Holt},
  title = {A hybrid process for recovering software architecture},
  booktitle = {CASCON},
  pages = {38},
  year = {1996},
  ee = {10.1145/782090}}

@article{Tzer97f,
  author = {Vassilios Tzerpo and R. C. Holt},
  title = {The Orphan Adoption Problem in Architecture Maintenance},
  journal = {Reverse Engineering, Working Conference on},
  volume = {0},
  pages = {76},
  publisher = {IEEE Computer Society},
  year = {1997},
  doi = {10.1109/{WCRE}.1997.624578},
  address = {Los Alamitos, CA, USA},
  isbn = {0-8186-8162-4}}

@inproceedings{Tzer98a,
  author = {Vassilios Tzerpos and R. C. Holt},
  title = {Software {Botryology}, Automatic Clustering of Software Systems},
  booktitle = {Proceedings of the 9th International Workshop on Database and Expert Systems Applications},
  publisher = {IEEE Computer Society Press},
  year = {1998}}

@inproceedings{Tzer99a,
  author = {Vassilios Tzerpos and Rick Holt},
  title = {{MoJo}: A Distance Metric for Software Clusterings},
  booktitle = {Proceedings Working Conference on Reverse Engineering ({WCRE} 1999)},
  pages = {187--195},
  publisher = {IEEE Computer Society Press},
  year = {1999},
  address = {Los Alamitos CA}}

@book{Tzu63a,
  author = {Sun Tzu},
  title = {The Art of War},
  publisher = {Oxford University Press},
  year = {1963}}

@misc{UML212a,
  author = {UML, OMG},
  title = {2.4. 1 superstructure specification},
  year = {2011},
  institution = {document formal/2011-08-06. Technical report, OMG},
  key = {Unified Modelling Language},
  note = {Version 2.4.1}}

@book{UML97a,
  author = {Rational Software and Microsoft and Hewlett-Packard and Oracle and Sterling Software and MCI Systemhouse and Unisys and ICON Computing and IntelliCorp and i-Logix and IBM and ObjecTime and Platinum Technology and Ptech and Taskon and Reich Technologies and Softeam},
  title = {Unified Modeling Language (version 1.1)},
  publisher = {Rational Software Corporation},
  year = {1997},
  month = sep}

@book{UML97b,
  author = {Rational Software and Microsoft and Hewlett-Packard and Oracle and Sterling Software and MCI Systemhouse and Unisys and ICON Computing and IntelliCorp and i-Logix and IBM and ObjecTime and Platinum Technology and Ptech and Taskon and Reich Technologies and Softeam},
  title = {Unified Modeling Language --- {UML} Semantics (version 1.1)},
  publisher = {Rational Software Corporation},
  year = {1997},
  month = sep}

@techreport{UML99a,
  author = {{Object} {Management} {Group}},
  title = {{Unified Modeling Language} (version 1.3)},
  year = {1999},
  institution = {{Object} {Management} {Group}}}

@misc{UPnP,
  title = {The Universal Plug and Play},
  url = {http://www.upnp.org},
  key = {UPnP},
  note = {http://www.upnp.org}}

@misc{UREP,
  title = {{Unisys} {Universal} {Repository} ({UREP})},
  key = {UREP},
  note = {http://www.unisys.com/marketplace/urep/}}

@inproceedings{Ubay10a,
  author = {Ubayashi, Naoyasu and Nomura, Jun and Tamai, Tetsuo},
  title = {Archface: A Contract Place Where Architectural Design and Code Meet Together},
  booktitle = {ICSE'10: Proceedings of the 32nd International Conference on Software Engineering},
  pages = {75--84},
  publisher = {ACM},
  year = {2010},
  address = {New York, NY, USA},
  location = {Cape Town, South Africa}}

@techreport{Ubiwi02a,
  author = {Barton, J. J. and Vijayaraghavan, V.},
  title = {UBIWISE, A Ubiquitous Wireless Infrastructure Simulation Environment},
  year = {2002},
  url = {http://www.hpl.hp.com/techreports/2002/HPL-2002-303.html},
  institution = {Hewlett Packard}}

@article{Udel95a,
  author = {James Udell},
  title = {Componentware},
  journal = {Byte},
  volume = {19},
  pages = {46--56},
  year = {1994},
  month = may,
  number = {5}}

@inproceedings{Ueda02a,
  author = {Yasushi Ueda and Toshihiro Kamiya and Shinji Kusumoto and Katsuro Inoue},
  title = {On Detection of Gapped Code Clones using Gap Locations},
  booktitle = {Proceedings Ninth Asia-Pacific Software Engineering Conference (APSEC'02)},
  pages = {327--336},
  publisher = {IEEE},
  year = {2002},
  address = {Gold Coast, Australia},
  month = dec}

@inproceedings{Ueda02b,
  author = {Yasushi Ueda and Toshihiro Kamiya and Shinji Kusumoto and Katsuro Inoue},
  title = {Gemini: Maintenance Support Environment Based on Code Clone Analysis},
  booktitle = {Proc. of the 8th IEEE Symposium on Software Metrics (METRICS2002)},
  pages = {67--76},
  year = {2002},
  address = {Ottawa, Canada},
  month = jun}

@article{Ugaw17a,
  author = {Ugawa, Tomoharu and Abe, Tatsuya and Maeda, Toshiyuki},
  title = {Model Checking Copy Phases of Concurrent Copying Garbage Collection with Various Memory Models},
  journal = {Proc. ACM Program. Lang.},
  volume = {1},
  publisher = {Association for Computing Machinery},
  year = {2017},
  url = {https://doi.org/10.1145/3133877},
  doi = {10.1145/3133877},
  abstract = {Modern concurrent copying garbage collection (GC), in particular, real-time GC, uses fine-grained synchronizations with a mutator, which is the application program that mutates memory, when it moves objects in its copy phase. It resolves a data race using a concurrent copying protocol, which is implemented as interactions between the collector threads and the read and write barriers that the mutator threads execute. The behavioral effects of the concurrent copying protocol rely on the memory model of the CPUs and the programming languages in which the GC is implemented. It is difficult, however, to formally investigate the behavioral properties of concurrent copying protocols against various memory models. To address this problem, we studied the feasibility of the bounded model checking of concurrent copying protocols with memory models. We investigated a correctness-related behavioral property of copying protocols of various concurrent copying GC algorithms, including real-time GC Stopless, Clover, Chicken, Staccato, and Schism against six memory models, total store ordering (TSO), partial store ordering (PSO), relaxed memory ordering (RMO), and their variants, in addition to sequential consistency (SC) using bounded model checking. For each combination of a protocol and memory model, we conducted model checking with a model of a mutator. In this wide range of case studies, we found faults in two GC algorithms, one of which is relevant to the memory model. We fixed these faults with the great help of counterexamples. We also modified some protocols so that they work under some memory models weaker than those for which the original protocols were designed, and checked them using model checking. We believe that bounded model checking is a feasible approach to investigate behavioral properties of concurrent copying protocols under weak memory models.},
  address = {New York, NY, USA},
  articleno = {53},
  issue_date = {October 2017},
  keywords = {garbage collection, memory model, concurrency, model checking},
  month = {oct},
  number = {OOPSLA},
  numpages = {26}}

@article{Ugaw19a,
  author = {Tomoharu Ugawa and Hideya Iwasaki and Takafumi Kataoka},
  title = {{eJSTK}: Building JavaScript virtual machines with customized datatypes for embedded systems},
  journal = {Journal of Computer Languages},
  volume = {51},
  pages = {261-279},
  year = {2019},
  url = {https://www.sciencedirect.com/science/article/pii/S1045926X18302416},
  doi = {https://doi.org/10.1016/j.cola.2019.01.003},
  abstract = {Using JavaScript as a description language can increase the productivity of application programs on embedded systems. Since JavaScript is a dynamic language, it is important for a JavaScript virtual machine (VM) to efficiently identify the types of first-class values and perform type-based dispatches. For embedded systems, the type-based dispatching code is desired to be compact as well as fast. Although operators of JavaScript are heavily overloaded and capable of accepting a variety of datatypes as operands, all the datatypes are not always necessarily used in a specific program. If some datatypes are never used in this program, a VM for a subset of JavaScript with operators that support limited datatypes suffices. Such a VM is expected to be compact and efficient. In addition, internal representation of datatype of each value may affect performance of type-based dispatching. This paper presents a novel framework that can generate a VM for a subset of JavaScript on the basis of operand specifications and datatype specifications given by the programmer. The operand specifications describe possible operand datatypes for every instruction and the datatype specifications describe adequate internal representations of necessary datatypes for a target program. The generated VM is specialized in the sense that it has efficient and minimum type-based dispatching code for all instructions.},
  issn = {2590-1184},
  keywords = {Virtual machine, JavaScript, Embedded systems, Code generation, Decision diagram}}

@inproceedings{Uhna16a,
  author = {Uhn\'{a}k, Peter and Pergl, Robert},
  title = {The OpenPonk Modeling Platform},
  booktitle = {Proceedings of the 11th Edition of the International Workshop on Smalltalk Technologies},
  pages = {14:1--14:11},
  publisher = {ACM},
  year = {2016},
  doi = {10.1145/2991041.2991055},
  acmid = {2991055},
  address = {New York, NY, USA},
  articleno = {14},
  isbn = {978-1-4503-4524-8},
  keywords = {BORM, DynaCASE, OpenPonk, Pharo, Roassal, UML, modeling, visualizations},
  location = {Prague, Czech Republic},
  numpages = {11},
  series = {IWST'16}}

@inproceedings{Uhna17a,
  author = {Uhn\'{a}k, Peter and Pergl, Robert},
  title = {Ad-hoc Runtime Object Structure Visualizations with MetaLinks},
  booktitle = {Proceedings of the 12th Edition of the International Workshop on Smalltalk Technologies},
  pages = {7:1--7:10},
  publisher = {ACM},
  year = {2017},
  doi = {10.1145/3139903.3139912},
  acmid = {3139912},
  address = {New York, NY, USA},
  articleno = {7},
  isbn = {9781450355544},
  location = {Maribor, Slovenia},
  numpages = {10},
  series = {IWST '17}}

@inproceedings{Ujha10a,
  author = {Ujhazi, Bela and Ferenc, Rudolf and Poshyvanyk, Denys and Gyim{\'o}thy, Tibor},
  title = {New Conceptual Coupling and Cohesion Metrics for Object-Oriented Systems},
  booktitle = {10th International Working Conference on Source Code Analysis and Manipulation},
  pages = {33--42},
  year = {2010},
  date-added = {2014-07-08 13:43:24 +0000},
  date-modified = {2014-07-08 13:43:42 +0000}}

@book{Ulid20a,
  author = {Ulidowski, Irek and Lanese, Ivan and Schultz, Ulrik Pagh and Ferreira, Carla},
  title = {Reversible computation: extending horizons of computing: selected results of the COST action IC1405},
  publisher = {Springer Nature},
  year = {2020}}

@article{Ullm76a,
  author = {J. R. Ullmann},
  title = {An Algorithm for Subgraph Isomorphism},
  journal = {J. ACM},
  volume = {23},
  pages = {31--42},
  publisher = {ACM},
  year = {1976},
  doi = {10.1145/321921.321925},
  address = {New York, NY, USA},
  issn = {0004-5411},
  number = {1}}

@book{Ullm94a,
  author = {Jeffrey D. Ullman},
  title = {Elements of {ML} Programming},
  publisher = {Prentice-Hall},
  year = {1994},
  isbn = {0-13-288788-6}}

@book{Ulri10a,
  author = {Ulrich, William M and Newcomb, Philip},
  title = {Information systems transformation: architecture-driven modernization case studies},
  publisher = {Morgan Kaufmann},
  year = {2010}}

@misc{UnCommonWeb,
  author = {Marco Baringer},
  title = {{UnCommon} Web},
  key = {UnCommonWeb},
  note = {http://www.\-com\-mon-lisp.\-net/pro\-ject/ucw/}}

@misc{Undodb,
  author = {UDB},
  title = {UDB Time Travel Debugger},
  year = {2023},
  howpublished = {\url{http://undo.io/}}}

@inproceedings{Unga05a,
  author = {Ungar, David and Spitz, Adam and Ausch, Alex},
  title = {{Constructing a metacircular Virtual machine in an exploratory programming environment}},
  booktitle = {Companion to Object-Oriented Programming, Systems, Languages, and Applications conference (OOPSLA'05)},
  pages = {11--20},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1094855.1094865},
  address = {New York, NY, USA},
  isbn = {1-59593-193-7}}

@inproceedings{Unga07a,
  author = {Ungar, David and Smith, Randall B.},
  title = {Self},
  booktitle = {Conference on History of Programming Languages (HOPL)},
  pages = {9-1--9-50},
  publisher = {ACM},
  year = {2007},
  url = {http://doi.acm.org/10.1145/1238844.1238853},
  doi = {10.1145/1238844.1238853},
  acmid = {1238853},
  address = {New York, NY, USA},
  isbn = {978-1-59593-766-7},
  keywords = {Self, adaptive optimization, cartoon animation, dynamic language, dynamic optimization, exploratory programming, history of programming languages, morphic, object-oriented language, programming environment, prototype-based programming language, virtual machine},
  location = {San Diego, California}}

@article{Unga84a,
  author = {Dave Ungar},
  title = {{Generation Scavenging: A Non-Disruptive High Performance Storage Reclamation Algorithm}},
  journal = {ACM SIGPLAN Notices},
  volume = {19},
  pages = {157--167},
  year = {1984},
  doi = {10.1145/390011.808261},
  number = {5}}

@inproceedings{Unga84b,
  author = {David Ungar and R. Blau and P. Foley and D. Samples and David A. Patterson},
  title = {Architecture of {SOAR}: {Smalltalk} on a {RISC}},
  booktitle = {11th Annual Symposium on Computer Architecture},
  year = {1984},
  misc = {June 4-7},
  address = {Ann Arbor, Michigan},
  month = jun}

@inproceedings{Unga87a,
  author = {David Ungar and Randall B. Smith},
  title = {{Self: The Power of Simplicity}},
  booktitle = {Proceedings OOPSLA '87, ACM SIGPLAN Notices},
  volume = 22,
  pages = {227--242},
  year = {1987},
  doi = {10.1145/38765.38828},
  month = dec}

@inproceedings{Unga88a,
  author = {David Ungar and Frank Jackson},
  title = {Tenuring Policies for Generation-Based Storage Reclamation},
  booktitle = {Proceedings OOPSLA '88},
  volume = {23},
  pages = {1--17},
  year = {1988},
  month = nov}

@article{Unga91a,
  author = {David Ungar and Craig Chambers and Bay-Wei Chang and Urs H{\"o}lzle},
  title = {Organizing Programs without Classes},
  journal = {LISP and SYMBOLIC COMPUTATION: An international journal},
  volume = {4},
  year = {1991},
  number = {3}}

@article{Unga92a,
  author = {David Ungar and Randall B. Smith and Craig Chambers and Urs H{\"o}lzle},
  title = {Object, Message, and Performance: How They Coexist in Self},
  journal = {IEEE Computer (Special Issue on Inheritance \& Classification)},
  volume = {25},
  pages = {53--65},
  year = {1992},
  month = oct,
  number = {10}}

@article{Unga92b,
  author = {Ungar, David and Jackson, Frank},
  title = {An adaptive tenuring policy for generation scavengers},
  journal = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume = {14},
  pages = {1--27},
  publisher = {ACM New York, NY, USA},
  year = {1992},
  number = {1}}

@inproceedings{Unga95a,
  author = {Ungar, David},
  title = {Annotating Objects for Transport to Other Worlds},
  booktitle = {Proceedings of the tenth annual conference on Object-oriented programming systems, languages, and applications},
  pages = {73--87},
  publisher = {ACM},
  year = {1995},
  doi = {10.1145/217838.217845},
  acmid = {217845},
  address = {New York, NY, USA},
  isbn = {0-89791-703-0},
  location = {Austin, Texas, United States},
  numpages = {15},
  series = {OOPSLA '95}}

@misc{UnitTestIsolation,
  author = {{C2 Wiki}},
  title = {{Unit} {Test} {Isolation}},
  url = {http://www.c2.com/cgi/wiki?UnitTestIsolation},
  howpublished = {http://www.c2.com/cgi/wiki?UnitTestIsolation, archived at http://www.webcitation.org/5jbc9f8nv}}

@misc{UnitTestTaxonomy,
  title = {Unit Test Taxonomy},
  url = {http://kilana.unibe.ch:9090/nomenclatureofunittests/},
  key = {UnitTestTaxonomy},
  note = {http://kilana.unibe.ch:9090/nomenclatureofunittests/}}

@article{Unte14a,
  author = {Unterholzner, Martin},
  title = {Improving refactoring tools in Smalltalk using static type inference},
  journal = {Science of Computer Programming},
  volume = {96},
  pages = {70-83},
  year = {2014},
  url = {https://www.sciencedirect.com/science/article/pii/S0167642313003250},
  doi = {https://doi.org/10.1016/j.scico.2013.11.032},
  note = {Special issue on Advances in Smalltalk based Systems},
  issn = {0167-6423},
  abstract = {Refactoring is a crucial activity in agile software development. As a consequence, automated tools are expected to support refactoring, both for reducing the developer's effort as well as for avoiding errors due to manual changes. In this context, the chosen programming language has a major impact on the level of support that an automated refactoring tool can offer. One important aspect of a programming language concerning the automation of refactoring is the type system. While a static type system, present in languages such as Java, provides information about dependencies in the program, the dynamic type system of the Smalltalk programming language offers little information that can be used by automated refactoring tools. This paper focuses on the challenges in the context of refactoring raised by the dynamic type system of Smalltalk. It highlights the problems caused by the absence of static type information and proposes the use of static code analysis for performing type inference to gather information about the dependencies in the program's source code. It explains the mechanism of the static code analysis using sample code and presents a prototype of an enhanced refactoring tool, which uses the structural information extracted through static code analysis. Empirical samples build the base for evaluating the effectiveness of the approach.}}

@article{Upfa84a,
  author = {E. Upfal},
  title = {Efficient Schemes for Parallel Communication},
  journal = {Journal of the ACM},
  volume = {31},
  pages = {507--517},
  year = {1984},
  month = jul,
  number = {3}}

@article{Uppe74a,
  author = {Upper, D.},
  title = {{The unsuccessful self-treatment of a case of "writer's block".}},
  journal = {Journal of applied behavior analysis},
  volume = {7},
  year = {1974},
  url = {http://view.ncbi.nlm.nih.gov/pubmed/16795475},
  citeulike-article-id = {8348695},
  citeulike-linkout-0 = {http://view.ncbi.nlm.nih.gov/pubmed/16795475]},
  citeulike-linkout-1 = {http://www.hubmed.org/display.cgi?uids=16795475]},
  date-added = {2011-02-18 13:05:41 +0100},
  date-modified = {2011-02-18 13:05:41 +0100},
  issn = {0021-8855},
  number = {3},
  posted-at = {2011-02-01 09:05:47},
  priority = {2},
  rating = {5},
  read = {1}}

@inproceedings{Uqui09a,
  author = {Uquillas-G\'{o}mez, Ver\'{o}nica and Kellens, Andy and Brichau, Johan and D'Hondt, Theo},
  title = {Time warp, an approach for reasoning over system histories},
  booktitle = {Proceedings of the joint International and annual ERCIM workshops on Principles of Software Evolution, and Software Evolution workshops},
  pages = {79--88},
  publisher = {ACM},
  year = {2009},
  isbn = {978-1-60558-678-6},
  series = {IWPSE-Evol'09}}

@book{Utti06a,
  author = {Mark Utting and Bruno Legeard},
  title = {Practical Model-Based Testing: A Tools Approach},
  publisher = {Morgan-Kaufmann},
  year = {2006},
  isbn = {978-0123725011}}

@inproceedings{Uust92a,
  author = {Tarmo Uustalu},
  title = {Combining Object-Oriented and Logic Paradigms: {A} Modal Logic Programming Approach},
  booktitle = {Proceedings ECOOP '92},
  volume = {615},
  pages = {98--113},
  publisher = {Springer-Verlag},
  year = {1992},
  address = {Utrecht, the Netherlands},
  editor = {O. Lehrmann Madsen},
  month = jun,
  series = {LNCS}}

@misc{V8ByeOctane,
  title = {Retiring Octane - https://v8.dev/blog/retiring-octane},
  url = {https://v8.dev/blog/retiring-octane},
  key = {V8ByeOctane},
  note = {Retrieved June 07 2022}}

@manual{VW30,
  title = {VisualWorks 3.0},
  year = {1998},
  note = {User Guide, Cookbook, Reference Manual},
  organization = {ParcPlace}}

@misc{VWTraits,
  title = {VWTraits},
  key = {VWTraits},
  note = {http://www.cincomsmalltalk.com/CincomSmalltalkWiki/VWTraits+-+A+Traits+impleMentation+for+VW}}

@article{Vadl21a,
  author = {Vadlamani, Aparna and Kalicheti, Rishitha and Chimalakonda, Sridhar},
  title = {{API}Scanner--Towards Automated Detection of Deprecated {API}s in Python Libraries},
  journal = {arXiv preprint arXiv:2102.09251},
  year = {2021}}

@techreport{Vahd92a,
  author = {A. Vahdat},
  title = {The design of a Meta-Object Protocol controlling the behavior of a scheme interpreter},
  year = {1992},
  institution = {Xerox Parc}}

@article{Vain04a,
  author = {Daniel Vainsencher},
  title = {MudPie: layers in the ball of mud.},
  journal = {Computer Languages, Systems {\&} Structures},
  volume = {30},
  pages = {5--19},
  year = {2004},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {10.1016/j.cl.2003.09.001},
  number = {1-2}}

@inproceedings{Vain06a,
  author = {Daniel Vainsencher and Andrew P. Black},
  title = {A Pattern Language for Extensible Program Representation},
  booktitle = {Proceedings of PLoP 2006},
  year = {2006}}

@inproceedings{Vaki12a,
  author = {Vakilian, Mohsen and Chen, Nicholas and Negara, Stas and Rajkumar, Balaji Ambresh and Bailey, Brian P. and Johnson, Ralph E.},
  title = {Use, Disuse, and Misuse of Automated Refactorings},
  booktitle = {Proceedings of the 34th International Conference on Software Engineering},
  pages = {233--243},
  publisher = {IEEE Press},
  year = {2012},
  url = {http://dl.acm.org/citation.cfm?id=2337223.2337251},
  acmid = {2337251},
  address = {Piscataway, NJ, USA},
  isbn = {978-1-4673-1067-3},
  location = {Zurich, Switzerland},
  numpages = {11},
  series = {ICSE '12}}

@inproceedings{Vaki13a,
  author = {Vakilian, M. and Chen, N. and Moghaddam, R. Z. and Negara, S. and Johnson, R. E.},
  title = {A Compositional Paradigm of Automating Refactorings},
  booktitle = {European Conference on Object-Oriented Programming},
  pages = {527--551},
  year = {2013}}

@inproceedings{Vala98a,
  author = {R.R. Valasareddi and D.L. Carver},
  title = {A Graph-Based Object Identification Process for Procedural Programs},
  booktitle = {Proceedings of {WCRE} '98},
  pages = {50--59},
  publisher = {IEEE Computer Society},
  year = {1998},
  note = {ISBN: 0-8186-89-67-6}}

@book{Vali02a,
  author = {Gabriel Valiente},
  title = {Algorithms on Trees and Grahs},
  publisher = {Springer},
  year = {2002}}

@inproceedings{Vall15a,
  author = {Valloud, Andr{\'e}s},
  title = {Linked Weak Reference Arrays: A Hybrid Approach To Efficient Bulk Finalization},
  booktitle = {Proceedings of the International Workshop on Smalltalk Technologies},
  pages = {1--6},
  year = {2015}}

@article{Valv02a,
  author = {S. Valverde and R. Ferrer Cancho and RV Sole},
  title = {Scale-free networks from optimal design},
  journal = {Europhysics Letters},
  volume = {60},
  pages = {512--517},
  year = {2002},
  number = {4}}

@article{Van07a,
  author = {Van Deursen, Arie and Visser, Eelco and Warmer, Jos},
  title = {Model-driven software evolution: A research agenda},
  journal = {Technical Report Series TUD-SERG-2007-006},
  year = {2007}}

@inproceedings{Van23a,
  title={Cross-Level Debugging for Static Analysers},
  author={Van Molle, Mats and Vandenbogaerde, Bram and De Roover, Coen},
  booktitle={Proceedings of the 16th ACM SIGPLAN International Conference on Software Language Engineering},
  pages={138--148},
  year={2023}
}

@inproceedings{VanE02a,
  author = {Eva {van Emden} and Leon Moonen},
  title = {Java Quality Assurance by Detecting Code Smells},
  booktitle = {Proc. 9th Working Conf. Reverse Engineering},
  pages = {97--107},
  publisher = {IEEE Computer Society Press},
  year = {2002},
  month = oct}

@inproceedings{VanE02b,
  author = {Robert A. Van Engelen and Kyle A. Gallivan},
  title = {The gSOAP Toolkit for Web Services and Peer-to-Peer Computing Networks},
  booktitle = {CCGRID '02: Proceedings of the 2nd IEEE/ACM International Symposium on Cluster Computing and the Grid},
  pages = {128},
  publisher = {IEEE Computer Society},
  year = {2002},
  address = {Washington, DC, USA},
  isbn = {0-7695-1582-7}}

@inproceedings{VanE03a,
  author = {Robert van Engelen},
  title = {Pushing the SOAP envelope with web services for scientific computing},
  booktitle = {In proceedings of the International Conference on Web Services (ICWS)},
  pages = {346--352},
  year = {2003},
  location = {Las Vegas}}

@inproceedings{VanE04a,
  author = {Robert van Engelen},
  title = {Code generation techniques for developing light-weight XML Web services for embedded devices},
  booktitle = {SAC '04: Proceedings of the 2004 ACM symposium on Applied computing},
  pages = {854--861},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/967900.968075},
  address = {New York, NY, USA},
  isbn = {1-58113-812-1},
  location = {Nicosia, Cyprus}}

@book{VanH96a,
  author = {Arthur Van Hoff and Sami Shaio and Orca Starbuck},
  title = {Hooked on {Java}},
  publisher = {Addison Wesley},
  year = {1996},
  isbn = {0-201-48837-X}}

@inproceedings{VanH96b,
  author = {Michael VanHilst and David Notkin},
  title = {{Using Role Components to Implement Collaboration-Based Designs}},
  booktitle = {Proceedings OOPSLA '96},
  pages = {359--369},
  publisher = {ACM Press},
  year = {1996}}

@inproceedings{VanH96c,
  author = {Michael VanHilst and David Notkin},
  title = {{Using C++ Templates to Implement Role-Based Designs}},
  booktitle = {JSSST International Symposium on Object Technologies for Advanced Software},
  pages = {22--37},
  publisher = {Springer Verlag},
  year = {1996}}

@book{VanR96a,
  author = {Guido van Rossum},
  title = {Python Tutorial},
  publisher = {Stichting Mathematisch Centrum},
  year = {1996},
  address = {Amsterdam}}

@book{VanR96b,
  author = {Guido van Rossum},
  title = {Python Reference Manual},
  publisher = {Stichting Mathematisch Centrum},
  year = {1996},
  address = {Amsterdam}}

@book{VanR96c,
  author = {Guido van Rossum},
  title = {Python Library Reference},
  publisher = {Stichting Mathematisch Centrum},
  year = {1996},
  address = {Amsterdam}}

@inproceedings{Vanc10a,
  author = {Van Cutsem, Tom and Miller, Mark S.},
  title = {Proxies: design principles for robust object-oriented intercession {{API}s}},
  booktitle = {Dynamic Language Symposium},
  volume = {45},
  pages = {59--72},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1899661.1869638},
  doi = {10.1145/1899661.1869638},
  month = {oct}}

@inproceedings{Vanc10b,
    title={Hidden dependencies in software systems},
    author={Vanciu, Radu and Rajlich, V{\'a}clav},
    booktitle={2010 IEEE International Conference on Software Maintenance},
    pages={1--10},
    year={2010},
    organization={IEEE}
}

@techreport{Vanc12a,
  author = {Van Cutsem, Tom and MILLER, MARK S},
  title = {On the design of the ECMAScript Reflection {API}},
  year = {2012},
  institution = {Technical Report VUB-SOFT-TR-12-03, Vrije Universiteit Brussel}}

@inproceedings{Vanc13a,
  author = {Van Cutsem, Tom and Miller, Mark S.},
  title = {Trustworthy Proxies - Virtualizing Objects with Invariants},
  booktitle = {ECOOP'13},
  year = {2013}}

@article{Vand01a,
  author = {Michael L. Van De Vanter},
  title = {The documentary structure of source code},
  journal = {Information and Software Technology},
  volume = {44},
  pages = {767--782},
  year = {2002},
  month = oct,
  number = {13}}

@inproceedings{Vand02a,
  author = {Vandewoude, Yves and Berbers, Yolande},
  title = {Run-time evolution for embedded component-oriented systems},
  booktitle = {International Conference on Software Maintenance, 2002. Proceedings.},
  pages = {242--245},
  year = {2002},
  doi = {10.1109/ICSM.2002.1167773},
  isbn = {0-7695-1819-2},
  organization = {IEEE}}

@inproceedings{Vand04a,
  author = {W. Vanderperren and D. Suvee},
  title = {Optimizing JAsCo dynamic AOP through HotSwap and Jutta},
  booktitle = {1st AOSD Workshop on Dynamic Aspects},
  year = {2004}}

@article{Vand07a,
  author = {Yves Vandewoude and Peter Ebraert and Yolande Berbers and Theo D'Hondt},
  title = {Tranquility: a low disruptive alternative to quiescence for ensuring safe dynamic updates},
  journal = {Transactions On Software Engineering},
  volume = 33,
  publisher = {IEEE Computer Society},
  year = {2007},
  number = 12}

@article{Vand18a,
  author = {Van De Vanter, Michael and Seaton, Chris and Haupt, Michael and Humer, Christian and W\"{u}rthinger, Thomas},
  title = {Fast, Flexible, Polyglot Instrumentation Support for Debuggers and other Tools},
  journal = {The Art, Science, and Engineering of Programming},
  volume = {2},
  publisher = {Aspect-Oriented Software Association (AOSA)},
  year = {2018},
  url = {http://dx.doi.org/10.22152/programming-journal.org/2018/2/14},
  doi = {10.22152/programming-journal.org/2018/2/14},
  issn = {2473-7321},
  number = {3}}

@inproceedings{Vand91a,
  author = {B. Vander Zanden and B.A. Myers and D. Giuse and P. Szeleky},
  title = {The importance of Pointer Variables in Constraint Models},
  booktitle = {Proceedings of UIST '91},
  pages = {155--164},
  year = {1991}}

@inproceedings{Vand93a,
  author = {M.T. Vandevoorde},
  title = {Specifications Can Make Programs Run Faster},
  booktitle = {Proceedings TAPSOFT '93},
  volume = {668},
  pages = {199--214},
  publisher = {Springer-Verlag},
  year = {1993},
  month = apr,
  series = {LNCS}}

@article{Vand97a,
  author = {M. G. J. van den Brand and P. Klint and C. Verhoef},
  title = {Reverse engineering and system renovation an annotated bibliography},
  journal = {ACM SIGSOFT Software Engineering Notes},
  volume = {22},
  pages = {57--68},
  publisher = {ACM Press},
  year = {1997},
  doi = {10.1145/251759.251849},
  issn = {0163-5948},
  number = {1}}

@inproceedings{Vand98a,
  author = {van Deursen, Arie and Tobias Kuipers},
  title = {Identifying Objects using Cluster and Concept Analysis},
  booktitle = {Proceedings of ICSE '99 (21st International Conference on Software Engineering)},
  pages = {246--255},
  publisher = {ACM Press},
  year = {1999}}

@inproceedings{Vand98b,
  author = {Mark van den Brand and Alex Sellink and Chris Verhoef},
  title = {Current Parsing Techniques in Software Renovation Considered Harmful},
  booktitle = {Proceedings of 6th International Workshop on Program Comprehension (IWPC '98)},
  pages = {108--117},
  publisher = {IEEE Computer Society},
  year = {1998},
  misc = {was: Bran98c},
  doi = {10.1109/WPC.1998.693325},
  editor = {S. Tilley and G. Visaggio},
  month = jun}

@inproceedings{Vane15a,
  author = {Vanegue, Julien},
  title = {Heap models for exploit systems},
  booktitle = {Proceedings of the IEEE Security and Privacy Workshop on Language-Theoretic Security (LangSec)},
  year = {2015}}

@inproceedings{Vano08a,
  author = {Vanoverberghe, Dries and Piessens, Frank},
  title = {A caller-side inline reference monitor for an Object-Oriented intermediate language},
  booktitle = {Formal Methods for Open Object-based Distributed Systems},
  pages = {240--258},
  year = {2008},
  series = {LNCS 5051}}

@article{Vanw02a,
  author = {Van Wyk, Eric and de Moor, Oege and Backhouse, Kevin and Kwiatkowski, Paul},
  title = {{Forwarding in Attribute Grammars for Modular Language Design}},
  journal = {Lecture Notes in Computer Science},
  pages = {128--142},
  publisher = {Springer},
  year = {2002}}

@article{Vanw07a,
  author = {Van Wyk, Eric and Krishnan, Lijesh and Bodin, Derek and Schwerdfeger, August},
  title = {{Attribute Grammar-Based Language Extensions for Java}},
  journal = {Lecture Notes in Computer Science},
  volume = {4609},
  pages = {575},
  publisher = {Springer},
  year = {2007}}

@inproceedings{Vany08a,
  author = {Adam Vanya and Lennart Hofland and Steven Klusener and Pi\"{e}rre van de Laar and Hans van Vliet},
  title = {Assessing Software Archives with Evolutionary Clusters},
  booktitle = {{ICPC} '08: Proceedings of the 2008 The 16th IEEE International Conference on Program Comprehension},
  pages = {192--201},
  publisher = {IEEE Computer Society},
  year = {2008},
  doi = {10.1109/{ICPC}.2008.34},
  address = {Washington, DC, USA},
  isbn = {978-0-7695-3176-2}}

@article{Vare74a,
  author = {F. J. Varela and H. R. Maturana and R. Uribe},
  title = {Autopoiesis: The organization of living systems, its characterization and a model},
  journal = {BioSystems},
  pages = {5:187--196},
  year = {1974}}

@article{Vare99a,
  author = {H. R. Maturana},
  title = {The organization of the Living: a Theory of the Living Organization},
  journal = {Int. J. Human-Computer Studies},
  pages = {51:149--168},
  year = {1999}}

@book{Varl77,
  author = {John Varley},
  title = {The Ophiuchi Hotline},
  publisher = {Dial Press},
  year = {1977}}

@article{Varo15a,
  author = {Varoquaux, Ga{\"e}l and Buitinck, Lars and Louppe, Gilles and Grisel, Olivier and Pedregosa, Fabian and Mueller, Andreas},
  title = {Scikit-learn: Machine learning without learning the machinery},
  journal = {GetMobile: Mobile Computing and Communications},
  volume = {19},
  pages = {29--33},
  publisher = {ACM New York, NY, USA},
  year = {2015},
  number = {1}}

@techreport{Varo95a,
  author = {Patrick Varone},
  title = {Implementation of `Generic Synchronization Policies' in Pict},
  year = {1996},
  url = {http://scg.unibe.ch/archive/papers/Varo95aGSPinPict.pdf},
  abstract = {This report presents the implementation of the
"Generic Synchronization Policies" (abbreviated as
GSP) using the language Pict. The main goal of this
work was to see how well suited Pict is for
implementing higher level abstractions. The
remainder of this report is structured as follows:
Section 2 briefly introduces the GSP concept. Pict
and its object model are presented in section 3. The
implementation of GSP is the heart of section 4.
Finally, Section 5 mention future possible works.},
  institution = {University of Bern, Institute of Computer Science and Applied Mathematics},
  month = feb,
  number = {IAM-96-005},
  type = {Technical Report}}

@inproceedings{Vasa03a,
  author = {Rajesh Vasa and Jean-Guy Schneider},
  title = {Evolution of Cyclomatic Complexity in Object Oriented Software},
  booktitle = {Proceedings of 7th ECOOP Workshop on Quantitative Approaches in Object-Oriented Software Engineering (QAOOSE '03)},
  year = {2003},
  url = {http://www.it.swin.edu.au/personal/jschneider/Pub/qaoose03.pdf},
  abstract = {It is a generally accepted fact that software
systems are constructed and gradually refined over a
period of time. During this time, code is written
and modified until stable releases of the system
emerge. Many researchers have studied systems over a
longer period of time in order to understand how
they change and evolve. Despite these efforts, we
still lack a precise understanding how various
properties of software change over time, in
particular in the area of object-oriented systems.
Such an understanding is of great importance if we
want to come up with techniques to provide feedback
on the evolution of quality and predictions about
further evolution of software systems. Historically,
collection of sufficient data to build useful models
was not practical as source code and build histories
were not freely available. It is our opinion that by
focusing our attention towards Open source software
repositories, we have a better hope building
predictive models to help developers and managers.
In this paper, we will report on our exploratory
study analyzing Open source object oriented software
projects and present a first predictive model based
on this analysis},
  address = {Darmstadt, Germany},
  editor = {Brito e Abreu, Fernando and Piattini, Mario and Poels, Geert and Sahraoui, Houari A.},
  location = {Privat},
  month = jul}

@inproceedings{Vasa05a,
  author = {Rajesh Vasa and Jean-Guy Schneider and Clinton Woodward and Andrew Cain},
  title = {Detecting Structural Changes in Object-Oriented Software Systems},
  booktitle = {Proceedings of 4th International Symposium on Empirical Software Engineering (ISESE '05)},
  pages = {463--470},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  url = {http://www.it.swin.edu.au/personal/jschneider/Pub/isese05.pdf},
  doi = {10.1109/ISESE.2005.1541855},
  abstract = {It is an increasingly accepted fact that software
development is a non-linear activity with inherently
feedback driven processes. In such a development
environment, however, it is important that major
structural changes in the design and/or architecture
of a software system under development are
introduced with care and documented accordingly. In
order to give developers appropriate tools that can
identify such changes, we need to have a good
understanding how software systems evolve over time
so that evolutionary anomalies can be automatically
detected. In this paper, we present recurring
high-level structural and evolutionary patterns that
we have observed in a number of public-domain
object-oriented software systems and define a simple
predictive model that can aid developers in
detecting structural changes and, as a consequence,
improve the underlying development processes.},
  address = {Noosa Heads, Australia},
  editor = {Verner, June and Travassos, Guilherme H.},
  location = {Privat},
  month = nov}

@inproceedings{Vasa07a,
  author = {Rajesh Vasa and Markus Lumpe and Jean-Guy Schneider},
  title = {Patterns of Component Evolution},
  booktitle = {Proceedings of the 6th International Symposium on Software Composition (SC 2007)},
  pages = {244--260},
  publisher = {Springer},
  year = {2007},
  url = {http://www.it.swin.edu.au/personal/jschneider/Pub/sc07.pdf},
  abstract = {Contemporary software systems are composed of many
components, which, in general, undergo phased and
incremental development. In order to facilitate the
corresponding construction process, it is important
that the development team in charge has a good
understanding of how individual software components
typically evolve. Furthermore, software engineers
need to be able to recognize abnormal patterns of
growth with respect to size, structure, and
complexity of the components and the resulting
composite. Only if a development team understands
the processes that underpin the evolution of
software systems, will they be able to make better
development choices. In this paper, we analyze
recurring structural and evolutionary patterns that
we have observed in public-domain software systems
built using object-oriented programming languages.
Based on our analysis, we discuss common growth
patterns found in present-day component-based
software systems and illustrate simple means to aid
developers in achieving a better understanding of
those patterns. As a consequence, we hope to raise
the awareness level in the community on how
component-based software systems tend to naturally
evolve.},
  address = {Braga, Portugal},
  editor = {Lumpe, Markus and Vanderperren, Wim},
  location = {Privat},
  month = mar}

@inproceedings{Vasa07b,
  author = {Rajesh Vasa and Jean-Guy Schneider and Oscar Nierstrasz},
  title = {The Inevitable Stability of Software Change},
  booktitle = {Proceedings of 23rd IEEE International Conference on Software Maintenance ({ICSM} '07)},
  pages = {4--13},
  publisher = {IEEE Computer Society},
  year = {2007},
  url = {http://scg.unibe.ch/archive/papers/Vasa07bInevitableChange.pdf},
  doi = {10.1109/ICSM.2007.4362613},
  abstract = {Real software systems change and become more complex
over time. But which parts change and which parts
remain stable? Common wisdom, for example, states
that in a well-designed object-oriented system, the
more popular a class is, the less likely it is to
change from one version to the next, since changes
to this class are likely to impact its clients. We
have studied consecutive releases of several public
domain, object-oriented software systems and
analyzed a number of measures indicative of size,
popularity, and complexity of classes and
interfaces. As it turns out, the distributions of
these measures are remarkably stable as an
application evolves. The distribution of class size
and complexity retains its shape over time.
Relatively little code is modified over time.
Classes that tend to be modified, however, are also
the more popular ones, that is, those with greater
Fan-In. In general, the more "complex" a class or
interface becomes, the more likely it is to change
from one version to the next.},
  address = {Los Alamitos CA},
  city = {Paris, France},
  medium = {2}}

@inproceedings{Vasa08a,
  author = {Rajesh Vasa and Jean-Guy Schneider and Oscar Nierstrasz and Clint Woodward},
  title = {On the Resilience of Classes to Change},
  booktitle = {Proceedings of 3d International ERCIM Symposium on Software Evolution (Software Evolution 2007)},
  volume = {8},
  publisher = {Electronic Communications of the EASST},
  year = {2008},
  url = {http://eceasst.cs.tu-berlin.de/index.php/eceasst/article/view/121 http://scg.unibe.ch/archive/papers/Vasa08aResilienceToChange.pdf},
  abstract = {Software systems evolve over time incrementally and
sections of code are modified. But, how much does
code really change? Lehman's laws suggest that
software must be continuously adapted to be useful.
We have studied the evolution of several public
domain object-oriented software systems and analyzed
the rate as well as the amount of change that
individual classes undergo as they evolve. Our
observations suggest that although classes are
modified, the majority of changes are minor and only
a small proportion of classes undergo significant
modification.},
  editor = {Tom Mens and Maja D'Hondt and Kim Mens},
  issn = {1863-2122},
  medium = {2}}

@inproceedings{Vasa09a,
  author = {Rajesh Vasa and Markus Lumpe and Philip Branch and Oscar Nierstrasz},
  title = {Comparative Analysis of Evolving Software Systems Using the {Gini} Coefficient},
  journal = {{icsm}},
  booktitle = {Proceedings of the 25th International Conference on Software Maintenance ({ICSM} 2009)},
  pages = {179--188},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Vasa09aGini{ICSM}.pdf},
  doi = {10.1109/ICSM.2009.5306322},
  abstract = {Software metrics offer us the promise of distilling
useful information from vast amounts of software in
order to track development progress, to gain
insights into the nature of the software, and to
identify potential problems. Unfortunately, however,
many software metrics exhibit highly skewed,
non-Gaussian distributions. As a consequence, usual
ways of interpreting these metrics --- for example,
in terms of "average" values --- can be highly
misleading. Many metrics, it turns out, are
distributed like wealth --- with high concentrations
of values in selected locations. We propose to
analyze software metrics using the Gini coefficient,
a higher-order statistic widely used in economics to
study the distribution of wealth. Our approach
allows us not only to observe changes in software
systems efficiently, but also to assess project
risks and monitor the development process itself. We
apply the Gini coefficient to numerous metrics over
a range of software projects, and we show that many
metrics not only display remarkably high Gini
values, but that these values are remarkably
consistent as a project evolves over time.},
  address = {Los Alamitos, CA, USA},
  medium = {2}}

@inproceedings{Vasc04a,
  author = {Aline Vasconcelos and Cl\'audia Werner},
  title = {Software Architecture Recovery based on Dynamic Analysis},
  booktitle = {Proceedings of the 18th Brazilian Symposium on Software Engineering},
  year = {2004},
  month = oct}

@inproceedings{Vasc92a,
  author = {Vasco Vasconcelos and Mario Tokoro},
  title = {Traces Semantics for Actor Systems},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {141--162},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@unpublished{Vasc92b,
  author = {Vasco Vasconcelos and Kohei Honda},
  title = {Principle Typing-Schemes in a Polyadic $pi$-calculus (extanded abstract)},
  year = {1992},
  misc = {Nov 14},
  month = nov,
  note = {Keio University},
  type = {draft}}

@unpublished{Vasc92c,
  author = {Vasco Vasconcelos},
  title = {({A} Preliminary Note on) {A} Simple Polymorphic Object Calculus},
  year = {1992},
  misc = {Dec. 17},
  month = dec,
  note = {Keio University},
  type = {draft}}

@incollection{Vasc93a,
  author = {Vasco T. Vasconcelos and Mario Tokoro},
  title = {A Typing System for a Calculus of Objects},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {460--474},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {The present paper introduces an implicitly typed
object calculus intended to capture intrinsic
aspects of concurrent objects communicating via
asynchronous message passing, together with a typing
system assigning typings to terms in the calculus.
Types meant to describe the kind of messages an
object may receive are assigned to the free names in
a program resulting in a scenario where a program is
assigned multiple name-type pairs, constituting a
typing for the process. Programs that comply to the
typing discipline are shown not to suffer from
runtime errors. Furthermore the calculus possesses a
notation of principal typings, from which all
typings that make a program well-typed can be
extracted. We present an efficient algorithm to
extract the principal typing of a process.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Vasc94a,
  author = {Vasco T. Vasconcelos},
  title = {Typed Concurrent Objects},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {100--117},
  publisher = {Springer-Verlag},
  year = {1994},
  url = {ftp://ftp.cs.keio.ac.jp/pub/keio-cs-papers/mt/theory/1994/vasco-ecoop94.dvi.gz},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Vasi10a,
  author = {B. Vasilescu and A. Serebrenik and M. G. J. van den Brand},
  title = {Comparative study of software metrics' aggregation techniques},
  booktitle = {9th Belgian-Netherlands Softw. Evolution Seminar},
  pages = {1--5},
  year = {2010},
  address = {Lille},
  editor = {S. Ducasse and L. Duchien and L. Seinturier}}

@inproceedings{Vasi11a,
  author = {Vasilescu, B. and Serebrenik, A. and van den Brand, M. G. J.},
  title = {You can't control the unfamiliar: {A} study on the relations between aggregation techniques for software metrics},
  booktitle = {Int. Conf. on Software Maintenance},
  publisher = {IEEE},
  year = {2011}}

@mastersthesis{Vauc03a,
  author = {Sebastien Vauclair},
  title = {Extensible {Java} Profiler},
  year = {2003},
  school = {Ecole Polytechnique F\'ed\'erale de Lausanne},
  note = {http://ejp.sourceforge.net},
  type = {Master's Thesis}}

@inproceedings{Vauc88a,
  author = {Jean Vaucher and Guy Lapalme and Jacques Malenfant},
  title = {{SCOOP}, Structured Concurrent Object-Oriented Prolog},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {191--211},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@inproceedings{Vazi07,
  author = {Mandana Vaziri and Frank Tip and Stephen Fink and Julian Dolby},
  title = {Declarative Object Identity Using Relation Types},
  booktitle = {ECOOP},
  pages = {54-78},
  year = {2007},
  bibsource = {DBLP, http://dblp.uni-trier.de}}

@inproceedings{Vbeu06a,
  author = {Van Beusekom, Joost and Keysers, Daniel and Shafait, Faisal and Breuel, Thomas M},
  title = {Distance measures for layout-based document image retrieval},
  booktitle = {Second International Conference on Document Image Analysis for Libraries (DIAL'06)},
  year = {2006},
  organization = {IEEE}}

@article{Vdha96a,
  author = {van den Hamer, Peter and Lepoeter, Kees},
  title = {Managing Design Data: The Five Dimensions of CAD Frameworks, Configuration Management, and Product Data Management},
  journal = {Proceedings of the IEEE},
  volume = {84},
  pages = {42 -- 56},
  publisher = {IEEE CS Press},
  year = {1996},
  doi = {10.1109/5.476025},
  issn = {0018-9219},
  month = jan,
  number = {1}}

@article{Vdhe96a,
  author = {{Van der Heijden}, A. H. C.},
  title = {Perception for selection, selection for action, and action for perception},
  journal = {Visual Cognition},
  volume = {3},
  pages = {357--361},
  year = {1996},
  month = dec,
  number = {4}}

@inproceedings{Vegd86a,
  author = {Vegdahl, Steven R.},
  title = {Moving structures between Smalltalk images},
  booktitle = {OOPLSA '86: Conference proceedings on Object-oriented programming systems, languages and applications},
  pages = {466--471},
  publisher = {ACM},
  year = {1986},
  doi = {10.1145/28697.28745},
  address = {New York, NY, USA},
  isbn = {0-89791-204-7},
  location = {Portland, Oregon, United States}}

@inproceedings{Verb06a,
  author = {M. Verbaere and R. Ettinger and O. de Moor},
  title = {JunGL: a Scripting Language for Refactoring},
  booktitle = {Proceedings of International Conference on Software Engineering},
  year = {2006}}

@inproceedings{Verb08a,
  author = {Mathieu Verbaere and Michael W. Godfrey and Tudor G\^irba},
  title = {Query Technologies and Applications for Program Comprehension},
  booktitle = {Proceedings of International Conference on Program Comprehension ({ICPC} 2008)},
  pages = {285--288},
  year = {2008},
  url = {http://scg.unibe.ch/archive/papers/Verb08aQTAPC2008.pdf},
  doi = {10.1109/{ICPC}.2008.27},
  abstract = {Industrial software systems are large and complex,
both in terms of the software entities and their
relationships. Consequently, understanding how a
software system works requires the ability to pose
queries over the design-level entities of the
system. Traditionally, this task has been supported
by simple tools (e.g., grep) combined with the
programmer's intuition and experience. Recently,
however, specialized code query technologies have
matured to the point where they can be used in
industrial situations, providing more intelligent,
timely, and efficient responses to developer
queries. This working session aims to explore the
state of the art in code query technologies, and
discover new ways in which these technologies may be
useful in program comprehension. The session brings
together researchers and practitioners. We survey
existing techniques and applications, trying to
understand the strengths and weaknesses of the
various approaches, and sketch out new frontiers
that hold promise.},
  medium = {2}}

@phdthesis{Verb91a,
  author = {Alexander Verbraeck},
  title = {Developing an Adaptive Scheduling Support Environment},
  year = {1991},
  school = {Technical University of Delft},
  type = {{Ph.D}. Thesis}}

@proceedings{Verc96a,
  author = {Kristina L. Verco and Michael J. Wise},
  title = {Software for Detecting Suspected Plagiarism: A Comparison},
  booktitle = {Proceedings First Australian Conference on Computer Science Education},
  publisher = {ACM},
  year = {1996},
  url = {citeseer.ist.psu.edu/verco96software.html},
  editor = {John Rosenberg},
  month = jul}

@article{Verc96b,
  author = {Kristina L. Verco and Michael J. Wise},
  title = {Plagiarism a la Mode: A Comparison of Automated Systems for Detecting Suspected Plagiarism},
  journal = {The Computer Journal},
  volume = {39},
  year = {1996},
  number = {9}}

@inproceedings{Verg18,
  author = {Vergu, Vlad and Visser, Eelco},
  title = {Specializing a Meta-Interpreter: JIT Compilation of Dynsem Specifications on the Graal VM},
  booktitle = {Proceedings of the 15th International Conference on Managed Languages and Runtimes},
  publisher = {Association for Computing Machinery},
  year = {2018},
  url = {https://doi.org/10.1145/3237009.3237018},
  doi = {10.1145/3237009.3237018},
  isbn = {9781450364249},
  address = {New York, NY, USA},
  abstract = {DynSem is a domain-specific language for concise specification of the dynamic semantics of programming languages, aimed at rapid experimentation and evolution of language designs. DynSem specifications can be executed to interpret programs in the language under development. To enable fast turnaround during language development, we have developed a meta-interpreter for DynSem specifications, which requires minimal processing of the specification. In addition to fast development time, we also aim to achieve fast run times for interpreted programs.In this paper we present the design of a meta-interpreter for DynSem and report on experiments with JIT compiling the application of the meta-interpreter on the Graal VM. By interpreting specifications directly, we have minimal compilation overhead. By specializing pattern matches, maintaining call-site dispatch chains and using native control-flow constructs we gain significant run-time performance. We evaluate the performance of the meta-interpreter when applied to the Tiger language specification running a set of common benchmark programs. Specialization enables the Graal VM to JIT compile the meta-interpreter giving speedups of up to factor 15 over running on the standard Oracle Java VM.},
  articleno = {16},
  numpages = {14},
  keywords = {interpretation, dynamic semantics, JIT, run-time optimization},
  location = {Linz, Austria},
  series = {ManLang '18}}

@article{Verh78a,
  author = {J.S.M. Verhofstad},
  title = {Recovery Techniques for Database Systems},
  journal = {ACM Computing Surveys},
  volume = {10},
  pages = {167--195},
  year = {1978},
  month = jun,
  number = {2}}

@techreport{Verj06a,
  author = {Herve Verjus},
  title = {Nimrod: A Software Architecture Engineering Environment},
  year = {2006},
  institution = {Technical Report 06/03, LISTIC --- Universit\'e de Savoie}}

@inproceedings{Verj06b,
  author = {Herve Verjus and Sorana C\^impan and Ilham Alloui and Flavio Oquendo},
  title = {Gestion des architectures \'evolutives dans ArchWare},
  booktitle = {1\`ere conf. francophone sur les architectures logicielles (CAL)},
  year = {2006}}

@mastersthesis{Verw06a,
  author = {Toon Verwaest},
  title = {Engineering Mobile Applications using Declarative Field Annotations},
  year = {2006},
  school = {Vrije Universiteit Brussel},
  url = {http://scg.unibe.ch/archive/external/Verwa06a.pdf},
  abstract = {The uprise of mobile networks has generated the need
for parts of mobile applications to be capable of
moving from one device to another. While there are
already solutions for moving applications, they are
mostly constrained to the mobility of single
entities. In this dissertation, we investigate the
different types of relations between moving objects
that can be found in mobile environments. To easily
impose these relations we propose extending the
current solutions with declarative field
annotations. We validate this technique by using a
language extended with it to implement a moving
TrafficWare route planner.},
  month = may,
  type = {Master's thesis}}

@mastersthesis{Verw07a,
  author = {Toon Verwaest},
  title = {Object-Oriented Component Detection for Software Understanding},
  year = {2007},
  school = {Vrije Universiteit Brussel, Ecole des Mines de Nantes, Universidad Nacional de La Plata},
  url = {http://scg.unibe.ch/archive/external/Verwa07a.pdf},
  abstract = {When a software engineer has to maintain a system,
he needs to understand how the system is built. In
order to help engineers understand existing systems,
research has been conducted around automating the
process of architecture recovery. A first step
consists of building a straightforward browsable
model of the system. However, the conceptual level
of abstraction behind the design might be higher
than the available level of abstraction in the used
programming paradigm. Therefore, a second step which
retrieves this implicit information needs to be
undertaken. In his thesis, Rainer Koschke [Kos02]
has developed and evaluated several techniques which
retrieve implicit architectural information from
procedural systems. These techniques resulted in the
detection of atomic architectural components,
comparable to the concept of prototypes. More and
more systems are developed using the object-oriented
programming paradigm. Systems built using this
paradigm embed a similar, yet more coarsegrained,
type of implicit information. Here we think of a
higher level of abstraction, comparable to the
concept of software components. In this thesis, we
investigate if and how some of the component
detection heuristics, presented in the thesis by
Koschke, can be adapted as such that they are
applicable to object-oriented code in order to
detect components comparable to software components.
Additionaly, we investigate how we can complement
them with available object-oriented information.},
  month = sep,
  type = {Master's thesis}}

@inproceedings{Verw09a,
  author = {Toon Verwaest and Lukas Renggli},
  title = {Safe Reflection Through Polymorphism},
  booktitle = {CASTA '09: Proceedings of the first international workshop on Context-aware software technology and applications},
  pages = {21--24},
  publisher = {ACM},
  year = {2009},
  url = {http://scg.unibe.ch/archive/papers/Verw09aSafeReflectionThroughPolymorphism.pdf},
  doi = {10.1145/1595768.1595776},
  abstract = {Code executed in a fully reflective system switches
back and forth between application and interpreter
code. These two states can be seen as contexts in
which an expression is evaluated. Current language
implementations obtain reflective capabilities by
exposing objects to the interpreter. However, in
doing so these systems break the encapsulation of
the application objects. In this paper we propose
safe reflection through polymorphism, \ie by
unifying the interface and ensuring the
encapsulation of objects from both the interpreter
and application context. We demonstrate a
\emph{homogeneous system} that defines the execution
semantics in terms of itself, thus enforcing that
encapsulation is not broken.},
  address = {New York, NY, USA},
  isbn = {978-1-60558-707-3},
  location = {Amsterdam, The Netherlands},
  medium = {1}}

@inproceedings{Verw10a,
  author = {Verwaest, Toon and Bruni, Camillo and Gurtner, David and Lienhard, Adrian and Niestrasz, Oscar},
  title = {Pinocchio: bringing reflection to life with first-class interpreters},
  journal = {OOPSLA '10},
  booktitle = {OOPSLA '10: Proceedings of the ACM international conference on Object oriented programming systems languages and applications},
  year = {2010}}

@inproceedings{Verw11b,
  author = {Toon Verwaest and Niko Schwarz and Erwann Wernli},
  title = {Runtime Class Updates using Modification Models},
  booktitle = {Proceedings of the TOOLS 2011 8th Workshop on Reflection, AOP and Meta-Data for Software Evolution (RAM-SE'11)},
  year = {2011},
  url = {http://scg.unibe.ch/archive/papers/Verw11aRuntimeUpdates.pdf},
  abstract = {Dynamic updates in object-oriented
languages require high-level changes to be translated
 to low-level changes. For example, removing an unused
instance variable from a class may shift the
indices of other instance variables. The shift needs
to be translated to a change of the bytecodes accessing
these instance variables. Current languages do not
 offer a bridge between the two levels of abstraction.
 We outline such a model, and demonstrate its usefulness
 by discussing a prototype implementation in Pharo
Smalltalk. In addition to simplifying the implementation
 of dynamic updates, our model enables easy experiments
 in modifying the language semantics.},
  annote = {internationalworkshop},
  keywords = {scg11 scg-pub tverwaes nes snf11 jb11 missing-doi},
  medium = {1},
  peerreview = {yes}}

@phdthesis{Verw12a,
  author = {Toon Verwaest},
  title = {Bridging the Gap between Machine and Language using First-Class Building Blocks},
  year = {2012},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/phd/verwaest-phd.pdf},
  abstract = {High-performance virtual machines (VMs) are increasingly reused for programming languages for which they were not initially designed. Unfortunately, VMs are usually tailored to specific languages, offer only a very limited interface to running applications, and are closed to extensions. As a consequence, extensions required to support new languages often entail the construction of custom VMs, thus impacting reuse, compatibility and performance. Short of building a custom VM, the language designer has to choose between the expressiveness and the performance of the language. In this dissertation we argue that the best way to open the VM is to eliminate it. We present Pinocchio, a natively compiled Smalltalk, in which we identify and reify three basic building blocks for object-oriented languages.First we define a protocol for message passing similar to calling conventions, independent of the actual message lookup mechanism. The lookup is provided by a self-supporting runtime library written in Smalltalk and compiled to native code. Since it unifies the meta- and base-level we obtain a metaobject protocol (MOP).Then we decouple the language-level manipulation of state from the machine-level implementation by extending the structural reflective model of the language with object layouts, layout scopes and slots.Finally we reify behavior using AST nodes and first-class interpreters separate from the low-level language implementation. We describe the implementations of all three first-class building blocks. For each of the blocks we provide a series of examples illustrating how they enable typical extensions to the runtime, and we provide benchmarks validating the practicality of the approaches.},
  keywords = {scg-phd snf12 jb12 pinocchio},
  month = mar,
  type = {PhD thesis}}

@article{Vess86a,
  author = {Vessey, Iris},
  title = {Expertise in Debugging Computer Programs: An Analysis of the Content of Verbal Protocols},
  journal = {{IEEE} {Transactions} on {Systems}, {Man}, and {Cybernetics}},
  volume = {16},
  year = {1986}}

@techreport{Vict94a,
  author = {Bj\"orn Victor},
  title = {A Verification Tool for The Polyadic pi-Calculus},
  year = {1994},
  institution = {Uppsala University (Sweden)},
  issn = {0283-0574},
  month = may,
  number = {94/50},
  type = {Report DoCs}}

@inproceedings{Vieg00a,
  author = {John Viega and Paul Reynolds and Reimer Behrends},
  title = {Automating Delegation in Class-Based Languages},
  booktitle = {Proceedings of TOOLS 34'00},
  pages = {171--182},
  year = {2000},
  month = jul}

@article{Vieg01a,
  author = {John Viega and J. T. Bloch and Pravir Ch},
  title = {Applying Aspect-Oriented Programming to Security},
  journal = {Cutter IT Journal},
  volume = {14},
  pages = {31--39},
  year = {2001}}

@inproceedings{Vieg04a,
  author = {Fernanda Vi\'egas and Martin Wattenberg and Kushal Dave},
  title = {Studying Cooperation and Conflict between Authors with history flow Visualizations},
  booktitle = {In Proceedings of the Conference on Human Factors in Computing Systems (CHI 2004)},
  pages = {575--582},
  year = {2004},
  month = apr}

@inproceedings{Vija22,
  author = {Vijayakumar, G and Bharathi, RK},
  title = {Predicting JVM Parameters for Performance Tuning Using Different Regression Algorithms},
  booktitle = {2022 Fourth International Conference on Emerging Research in Electronics, Computer Science and Technology (ICERECT)},
  pages = {1--8},
  year = {2022},
  organization = {IEEE}}

@inproceedings{Vikr20a,
  author = {Vikram Narayanan and Tianjiao Huang and David Detweiler and Dan Appel and Zhaofeng Li and Gerd Zellweger and Anton Burtsev},
  title = {RedLeaf: Isolation and Communication in a Safe Operating System},
  booktitle = {14th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 20)},
  pages = {21--39},
  publisher = {{USENIX} Association},
  year = {2020},
  url = {https://www.usenix.org/conference/osdi20/presentation/narayanan-vikram},
  isbn = {978-1-939133-19-9},
  month = nov}

@inproceedings{Vilk18a,
  author = {Vilks, John and D. Berger, Emery},
  title = {BLeak: Automatically Debugging Memoy Leaks in Web Applications},
  booktitle = {PLDI, 2018},
  year = {2018}}

@article{Vilk18b,
  author = {Vilk, John and Berger, Emery D and Mickens, James and Marron, Mark},
  title = {McFly: Time-Travel Debugging for the Web},
  journal = {arXiv preprint arXiv:1810.11865},
  year = {2018}}

@book{Vine97a,
  author = {G\"unther Vinek},
  title = {Objektorientierte Softwareentwicklung mit Smalltalk},
  publisher = {Springer},
  year = {1997}}

@inproceedings{Vini12a,
  author = {Durelli, Vinicius H. S. and Offutt, Jeff and Delamaro, Marcio E.},
  title = {Toward Harnessing High-Level Language Virtual Machines for Further Speeding Up Weak Mutation Testings},
  booktitle = {International Conference on Software Testing, Verification and Validation},
  year = {2012},
  doi = {10.1109/ICST.2012.158}}

@inproceedings{Vinj05a,
  author = {Jurgen J. Vinju and James R. Cordy},
  title = {How to make a bridge between transformation and analysis technologies?},
  booktitle = {Transformation Techniques in Software Engineering},
  volume = {05161},
  publisher = {Internationales Begegnungs- und Forschungszentrum f{\"u}r Informatik (IBFI), Schloss Dagstuhl, Germany},
  year = {2005},
  editor = {James R. Cordy and Ralf L{\"a}mmel and Andreas Winter},
  series = {Dagstuhl Seminar Proceedings}}

@article{Vino93a,
  author = {Steve Vinoski},
  title = {Distributed Object Computing with Corba},
  journal = {{C}++ Report Magazine},
  year = {1993},
  month = jul}

@inproceedings{Vion94a,
  author = {Jean-Yves Vion-Dury and Miguel Santana},
  title = {Virtual Images: Interactive Visualization of Distributed Object-Oriented Systems},
  booktitle = {Proceedings of OOPSLA 1994},
  pages = {65--84},
  year = {1994},
  editor = {ACM Press}}

@article{Viot22a,
  author = {Juan Cruz Viotti and Mital Kinderkhedia},
  title = {Benchmarking {JSON BinPack}},
  journal = {ArXiv},
  volume = {abs/2211.12799},
  year = {2022}}

@mastersthesis{Vire96a,
  author = {Pierre Viret},
  title = {Viewing {C}++ Objects as Communicating Processes},
  year = {1996},
  school = {Laboratoire de T\'el\'einformatique, Ecole Polytechnique F\'ed\'erale de Lausanne (EPFL), CH},
  month = mar,
  type = {Master's thesis}}

@techreport{Viren04,
  author = {Virendra J. Marathe and Michael L. Scott},
  title = {A Qualitative Survey of Modern Software Transactional Memory Systems},
  year = {2004},
  institution = {University of Rochester}}

@inproceedings{Visl18a,
  author = {Vislavski, Tijana and Raki{\'c}, Gordana and Cardozo, Nicol{\'a}s and Budimac, Zoran},
  title = {LICCA: A tool for cross-language clone detection},
  booktitle = {2018 IEEE 25th International Conference on Software Analysis, Evolution and Reengineering (SANER)},
  pages = {512--516},
  year = {2018},
  organization = {IEEE}}

@inproceedings{Viss00,
  author = {Visser, Willem and Havelund, Klaus and Brat, Guillaume and Park, SeungJoon},
  title = {Model Checking Programs},
  booktitle = {ASE'00: Proceedings of the 15th International Conference on Automated Software Engineering},
  pages = {3--12},
  publisher = {IEEE Computer Society},
  year = {2000},
  address = {Washington, DC, USA},
  isbn = {0-7695-0710-7}}

@article{Viss01a,
  author = {Visser, Eelco},
  title = {A survey of rewriting strategies in program transformation systems},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {57},
  pages = {109--143},
  publisher = {Elsevier},
  year = {2001}}

@incollection{Viss04a,
  author = {Eelco Visser},
  title = {Program Transformation with {Stratego/XT}: Rules, Strategies, Tools, and Systems in {StrategoXT-0.9}},
  booktitle = {Domain-Specific Program Generation},
  volume = {3016},
  pages = {216--238},
  publisher = {Springer-Verlag},
  year = {2004},
  url = {http://archive.cs.uu.nl/pub/RUU/CS/techreps/CS-2004/2004-011.pdf http://www.stratego-language.org/Stratego/ProgramTransformationWithStrategoXT},
  doi = {10.1007/b98156},
  editor = {C. Lengauer and others},
  month = jun,
  series = {Lecture Notes in Computer Science}}

@techreport{Viss05a,
  author = {Eelco Visser},
  title = {A Survey of Strategies in Rule-Based Program Transformation Systems},
  year = {2005},
  url = {http://www.cs.uu.nl/research/techreps/repo/CS-2005/2005-022.pdf},
  institution = {Department of Information and Computing Sciences, Utrecht University},
  number = {UU-CS-2005-022}}

@techreport{Viss05b,
  author = {Eelco Visser},
  title = {Transformations for Abstractions},
  year = {2005},
  url = {http://www.cs.uu.nl/research/techreps/repo/CS-2005/2005-034.pdf},
  institution = {Department of Information and Computing Sciences, Utrecht University},
  number = {UU-CS-2005-034},
  pubcat = {techreport}}

@article{Viss05c,
  author = {Eelco Visser},
  title = {A Survey of Strategies in Rule-Based Program Transformation Systems},
  journal = {Journal of Symbolic Computation},
  volume = 40,
  pages = {831-873},
  year = {2005},
  editor = {Bernhard Gramlich and Salvador Lucas},
  note = {Special issue on Reduction Strategies in Rewriting and Programming},
  number = 1}

@techreport{Viss97a,
  author = {Visser, Eelco},
  title = {Scannerless Generalized-{LR} Parsing},
  year = {1997},
  url = {http://www.cs.uu.nl/people/visser/ftp/P9707.ps.gz},
  institution = {Programming Research Group, University of Amsterdam},
  month = jul,
  number = {P9707}}

@misc{VisualWorks,
  author = {VisualWorks},
  title = {{Cincom} {Smalltalk}},
  year = {2010},
  url = {http://www.cincomsmalltalk.com/},
  howpublished = {http://www.cincomsmalltalk.com/, archived at http://www.webcitation.org/5p1rRxls5},
  key = {VisualWorks}}

@misc{Visualstudio,
  author = {Microsoft},
  title = {Visual Studio IDE},
  year = {2023},
  howpublished = {\url{https://visualstudio.microsoft.com/vs/}}}

@techreport{Vite90a,
  author = {Jan Vitek and Betty Junod and Oscar Nierstrasz and Serge Renfer and Claudia Werner},
  title = {Events and Sensors: Enhancing the Reusability of Objects},
  pages = {345--356},
  year = {1990},
  url = {http://scg.unibe.ch/archive/osg/Vite90aEventsAndSensors.pdf},
  abstract = {Object-oriented programming methods promote the
development of software from reusable components. In
practice, reuse of object-oriented software is
limited by a closed-world constraint: only
components that are compatible --- that conform to
an agreed-upon protocol --- may be composed. We seek
to facilitate software composition. To this end, we
propose an approach based on events and sensors that
enhances the openness of objects, and thus increases
the possibilities for their reuse.},
  editor = {D. Tsichritzis},
  institution = {Centre Universitaire d'Informatique, University of Geneva},
  month = jul,
  type = {Object Management}}

@inproceedings{Vite94a,
  author = {Jan Vitek and R. Nigel Horspool},
  title = {Taming Message Passing: Efficient Method Look-up for Dynamically Typed Languages},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {432--449},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Vite97a,
  author = {Jan Vitek},
  title = {New Paradigms for Distributed Programming},
  booktitle = {European Research Seminar in Advanced Distributed Systems},
  year = {1997},
  address = {Zinal, Valais, Switzerland},
  month = mar}

@inproceedings{Vite99a,
  author = {Jan Vitek and Giuseppe Castagna},
  title = {Seal: A framework for secure mobile computations},
  booktitle = {Internet Programming Languages},
  year = {1999},
  url = {http://www.cs.purdue.edu/homes/jv/publist.html}}

@inproceedings{Vitt03a,
  author = {Vittek, M.},
  title = {Refactoring browser with preprocessor},
  booktitle = {Seventh European Conference onSoftware Maintenance and Reengineering, 2003. Proceedings.},
  pages = {101-110},
  year = {2003},
  doi = {10.1109/CSMR.2003.1192417}}

@inproceedings{Vitt82a,
  author = {J. Vittal},
  title = {Active Message Processing: Messages as Messengers},
  booktitle = {Proceedings of the International Symposium on Computer Message Systems, IFIP TC-6, Ottawa, April 1981},
  pages = {175--195},
  publisher = {North Holland Publishing Co},
  year = {1982},
  editor = {R.P. Uhlig}}

@book{Vlis96a,
  author = {John Vlissides and James O. Coplien and Norman L. Kerth},
  title = {Patterns Languages of Program Design 2},
  publisher = {Addison Wesley},
  year = {1995},
  address = {Reading, Mass.},
  isbn = {0-201-89527-7}}

@article{Vlis96b,
  author = {John Vlissides},
  title = {The Hollywood Principle},
  journal = {C++ Report},
  volume = 8,
  year = {1996},
  month = feb}

@misc{Vmwa23a,
  author = {VMware},
  title = {VMware Workstation},
  year = {2023},
  howpublished = {\url{https://www.vmware.com/products/workstation-player.html}}}

@article{Voa92,
  author = {Voas, J.M.},
  title = {PIE: a dynamic failure-based technique},
  journal = {Software Engineering, IEEE Transactions on},
  year = {1992}}

@phdthesis{Voel14a,
  author = {Markus Voelter},
  title = {Generic Tools, Specific Languages},
  year = {2014},
  school = {Technische Universiteit Delft}}

@techreport{Voge02a,
  author = {David Vogel},
  title = {Studie: Datenbank-Webapplikationen und ihre Technologien},
  year = {2002},
  url = {http://scg.unibe.ch/archive/projects/Voge02a.pdf},
  institution = {University of Bern},
  month = apr,
  type = {Informatikprojekt}}

@mastersthesis{Voge04a,
  author = {David Vogel},
  title = {Management and Security of Collaborative Web Environments},
  year = {2004},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Voge04a.pdf},
  abstract = {This diploma gives an general overview of
collaboration models and of the Wiki concept, in
particular of the SmallWiki implementation and its
design. We introduce the SmallWiki Default Security
Model and its enhancement --- the SmallWiki Extended
Security Model- in order to solve the problems of
vandalism and of central management. This
fine-grained security model is explained and it is
shown how a Wiki administrator can manage the
permissions for SmallWiki users at any point in the
Wiki site, and how the pattern of save delegation is
applied.},
  month = jun,
  type = {Diploma thesis}}

@book{Voge97a,
  author = {Andreas Vogel and Keith Duddy},
  title = {{Java} Programming with Corba},
  publisher = {Wiley},
  year = {1997},
  isbn = {0-471-17986-8}}

@inproceedings{Vogt95a,
  author = {F. Vogt and R. Wille},
  title = {{TOSCANA} --- a graphical tool for analyzing and exploring data},
  booktitle = {Proceedings of the DIMACS Int. Workshop on Graph Drawing (GD'94)},
  pages = {226--233},
  publisher = {Springer-Verlag},
  year = {1995},
  address = {Berlin-Heidelberg},
  editor = {R. Tamassia and I.G. Tollis},
  series = {Lecture Notes in Computer Science 894}}

@inproceedings{Voin05a,
  author = {Voinea, Lucian and Telea, Alex and van Wijk, Jarke J.},
  title = {CVSscan: visualization of code evolution},
  booktitle = {SoftVis '05: Proceedings of the 2005 ACM symposium on Software visualization},
  pages = {47--56},
  publisher = {ACM},
  year = {2005},
  doi = {10.1145/1056018.1056025},
  address = {New York, NY, USA},
  isbn = {1-59593-073-6},
  location = {St. Louis, Missouri}}

@mastersthesis{Voin06a,
  author = {Violeta Voinescu},
  title = {Supporting Reverse Engineering with (Meta-)Annotations},
  year = {2004},
  school = {Politehnica University of Timisoara},
  month = sep,
  type = {Diploma thesis}}

@article{Voin07a,
  author = {Lucian Voinea and Johan Lukkien and Alexandru Telea},
  title = {Visual Assessment of Software Evolution},
  journal = {Science of Computer Programming},
  volume = {365},
  pages = {222--248},
  year = {2007},
  number = {3}}

@article{Vok04a,
  author = {Marek Vok},
  title = {Defect Frequency and Design Patterns: An Empirical Study of Industrial Code},
  journal = {IEEE Transactions on Software Engineering},
  volume = {30},
  pages = {904--917},
  publisher = {IEEE Press},
  year = {2004},
  doi = {10.1109/TSE.2004.99}}

@article{Voka06a,
  author = {Vok{\'a}c, Marek},
  title = {An efficient tool for recovering Design Patterns from C++ Code.},
  journal = {Journal of Object Technology},
  volume = {5},
  pages = {139--157},
  year = {2006},
  number = {1}}

@book{Voll91a,
  author = {Otto Vollnals},
  title = {Dictionary of Computer Science},
  publisher = {Grouppo Editoriale Jackson (Milano)},
  year = {1991},
  isbn = {88-256-0036-4}}

@book{Voss94a,
  author = {Gottfried Vossen},
  title = {Datenmodelle, Datenbanksprachen und Datenbank-Management-Systeme},
  publisher = {Addison Wesley},
  year = {1994},
  address = {Reading, Mass.},
  isbn = {3-89319-566-1}}

@inproceedings{Voti20a,
  author = {Votipka, Daniel and Rabin, Seth M and Micinski, Kristopher and Foster, Jeffrey S and Mazurek, Michelle M},
  title = {An observational investigation of reverse engineers' processes},
  booktitle = {Proceedings of the 29th USENIX Conference on Security Symposium},
  pages = {1875--1892},
  year = {2020}}

@article{Voyd83a,
  author = {V.L. Voydock and S.T. Kent},
  title = {Security Mechanisms in High-Level Network Protocols},
  journal = {ACM Computing Surveys},
  volume = {15},
  pages = {135--171},
  year = {1983},
  month = jun,
  number = {2}}

@inproceedings{Vu14a,
  author = {Le, Vu and Afshari, Mehrdad and Su, Zhendong},
  title = {Compiler validation via equivalence modulo inputs},
  booktitle = {Conference on Programming Language Design and Implementation (PLDI'14)},
  year = {2014},
  url = {https://dl.acm.org/doi/10.1145/2594291.2594334},
  month = jun,
  urldate = {2021-03-25}}

@misc{WO,
  title = {{WebObjects}},
  key = {WO},
  note = {http://www.apple.com/webobjects/}}

@misc{WS04a,
  author = {World Wide Web Consortium},
  title = {Web Services Architecture},
  year = {2004},
  url = {http://www.w3.org/TR/ws-arch}}

@misc{WSDL,
  author = {{W3C} Note},
  title = {Web Services Description Language ({WSDL}) 1.1},
  year = {2002},
  url = {http://www.w3.org/TR/wsdl},
  key = {WSDL}}

@inproceedings{Wadl07a,
  author = {Philip Wadler and Robert Bruce Findler},
  title = {Well-typed programs can't be blamed},
  booktitle = {Proceedings of the Workshop on Scheme and Functional Programming},
  pages = {15--26},
  year = {2007}}

@incollection{Wadl95a,
  author = {Philip Wadler},
  title = {Monads for functional programming},
  booktitle = {Advanced Functional Programming},
  volume = 925,
  publisher = {Springer-Verlag},
  year = {1995},
  editor = {J. Jeuring and E. Meijer},
  series = {LNCS}}

@inproceedings{Wael15a,
  author = {De Wael, Mattias and Marr, Stefan and De Koster, Joeri and Sartor, Jennifer B. and De Meuter, Wolfgang},
  title = {Just-in-Time Data Structures},
  booktitle = {2015 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software (Onward!)},
  pages = {61-75},
  publisher = {Association for Computing Machinery},
  year = {2015},
  url = {https://doi.org/10.1145/2814228.2814231},
  doi = {10.1145/2814228.2814231},
  address = {New York, NY, USA},
  isbn = {9781450336888},
  keywords = {dynamic reclassification, data structures, performance, algorithms},
  location = {Pittsburgh, PA, USA},
  numpages = {15},
  series = {Onward! 2015}}

@article{Wage09a,
  author = {Dennis Wagelaar and Ragnhild Van Der Straeten and Dirk Deridder and Jeff Gray and Alfonso Pierantonio and Antonio Vallecillo},
  title = {Module superimposition: a composition technique for rule-based model transformation languages},
  journal = {Software \& Systems Modeling},
  volume = {9},
  pages = {285--309},
  publisher = {Springer Verlag},
  year = {2009},
  abstract = {As the application of model transformation becomes increasingly commonplace, the focus is shifting from model transformation languages to the model transformations themselves. The properties of model transformations, such as scalability, maintainability and reusability, have become important. Composition of model transformations allows for the creation of smaller, maintainable and reusable transformation definitions that together perform a larger transformation. This paper focuses on composition for two rule-based model transformation languages: the ATLAS Transformation Language (ATL) and the QVT Relations language. We propose a composition technique called module superimposition that allows for extending and overriding rules in transformation modules. We provide executable semantics as well as a concise and scalable implementation of module superimposition based on ATL.},
  day = {14},
  issn = {1619-1366},
  keywords = {Software engineering, Model driven engineering, Model transformation},
  month = oct}

@inproceedings{Wagn08a,
  author = {Wagner, Stefan and Deissenboeck, Florian and Aichner, Michael and Wimmer, Johann and Schwalb, Markus},
  title = {{An Evaluation of Two Bug Pattern Tools for Java}},
  booktitle = {International Conference on Software Testing, Verification, and Validation},
  pages = {248--257},
  year = {2008}}

@article{Wagn11a,
  author = {Wagner, Gregor and Gal, Andreas and Franz, Michael},
  title = {Slimming; a Java Virtual Machine by Way of Cold Code Removal and Optimistic Partial Program Loading},
  journal = {Sci. Comput. Program.},
  volume = {76},
  pages = {1037--1053},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2011},
  doi = {10.1016/j.scico.2010.04.008},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {0167-6423},
  keywords = {Cold code removal, Embedded connected devices, Java virtual machine, Just-in-time compilation},
  month = nov,
  number = {11},
  numpages = {17}}

@inproceedings{Wahb93a,
  author = {R. Wahbe and S. Lucco and T. E. Anderson and S. L. Graham},
  title = {Efficient Software-Based Fault Isolation},
  booktitle = {Symposium on Operating Systems Principles (SOSP)},
  publisher = {ACM},
  year = {1993}}

@inproceedings{Wahl09a,
  author = {Wahler, Michael and Richter, Stefan and Oriol, Manuel},
  title = {Dynamic software updates for real-time systems},
  booktitle = {Proceedings of the 2nd International Workshop on Hot Topics in Software Upgrades},
  pages = {2},
  year = {2009},
  doi = {10.1145/1656437.1656440},
  isbn = {9781605587233}}

@inproceedings{Waig08a,
  author = {Waignier, Guillaume and Prawee, Sriplakich and Le Meur, Anne-Fran{\c{c}}oise and Duchien, Laurence},
  title = {A Model-Based Framework for Statically and Dynamically Checking Component Interactions},
  booktitle = {ACM/IEEE 11th International Conference on Model-Driven Engineering Languages and Systems (MODELS 2008) Model Driven Engineering Languages and Systems},
  volume = {5301},
  pages = {371-385},
  year = {2008},
  url = {http://hal.inria.fr/inria-00311584/en/},
  doi = {10.1007/978-3-540-87875-9_27},
  series = {Lecture Notes in Computer Science}}

@book{Wait85a,
  author = {W. M. Waite and G. Goos},
  title = {Compiler Construction},
  publisher = {Springer-Verlag New York, Inc.},
  year = {1985},
  address = {Secaucus, NJ, USA},
  isbn = {0387908218}}

@incollection{Waki93a,
  author = {Ken Wakita},
  title = {First Class Messages as First Class Continuations},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {442--459},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {First class messages, which we call message
continuations, provide, object-oriented concurrent
programming languages with extensibility in modeling
and programming communication schemes such as
asynchronous communication, multicasting,
sophisticated synchronization constraints,
inter-object synchronization, concurrency control,
resource management, and so on. In spite of its
powerful extensibility, the framework is sound in
that the framework guarantees that no program can
destroy the semantics of the built-in communication
primitives. This good property was obtained by
categorization of message continuations and careful
design of the primitive operations on message
continuations.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@techreport{Wald94a,
  author = {J. Waldo and G. Wyant and A. Wollrath and S. Kendall},
  title = {A note on distributed computing},
  year = {1994},
  institution = {Sun Microsystems Labs}}

@inproceedings{Wald99a,
  author = {Jim Waldo},
  title = {Object-Oriented Programming on the Network},
  booktitle = {Proceedings ECOOP '99},
  volume = 1628,
  pages = {441--448},
  publisher = {Springer-Verlag},
  year = {1999},
  abstract = {Object-oriented programming techniques have been
used with great success for some time. But the
techniques of object-oriented programming have been
largely confined to the single address space, and
have not been applicable to distributed systems.
Recent advances in language technology have allowed
a change in the way distributed systems are
constructed that does allow real object-oriented
programming on the network. But these advances also
change some of our most basic conceptions about the
relationship between processor and code, and what it
is that constitutes a computer. We will argue that a
new computing architecture, based around the ideas
of the network and full object-orientation, will
soon become the dominant computing architecture,
allowing us to tie together large numbers of devices
but requiring that we think and design in entirely
new ways.},
  address = {Lisbon, Portugal},
  editor = {R. Guerraoui},
  month = jun,
  series = {LNCS}}

@inproceedings{Wale03a,
  author = {Andrew Walenstein and Nitin Jyoti and Junwei Li and Yun Yang and Arun Lakhotia},
  title = {Problems Creating Task-relevant Clone Detection Reference Data},
  booktitle = {Proceedings 10th Working Conference on Reverse Engineering ({WCRE}'03)},
  pages = {285--295},
  year = {2003},
  address = {Victoria, B.C., Canada},
  month = nov,
  organization = {IEEE}}

@article{Wale03b,
  author = {Andrew Walenstein and Arun Lakhotia and Rainer Koschke},
  title = {The Second International Workshop on Detection of Software Clones: workshop report},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {29},
  pages = {1--5},
  publisher = {ACM Press},
  year = {2004},
  doi = {10.1145/979743.979752},
  issn = {0163-5948},
  number = {2}}

@inproceedings{Wale03c,
  author = {Andrew Walenstein and Arun Lakhotia},
  title = {Clone Detector Evaluation Can Be Improved: Ideas from Information Retrieval},
  booktitle = {Proceedings of the 2nd International Workshop on Detection of Software Clones (IWDSC'03)},
  year = {2003},
  month = nov}

@inproceedings{Walk00a,
  author = {Robert J. Walker and Gail C. Murphy},
  title = {Implicit context: easing software evolution and reuse},
  booktitle = {SIGSOFT '00/FSE-8: Proceedings of the 8th ACM SIGSOFT international symposium on Foundations of software engineering},
  pages = {69--78},
  publisher = {ACM Press},
  year = {2000},
  url = {http://www.cs.ubc.ca/labs/se/papers/2000/fse00-ic.pdf},
  doi = {10.1145/355045.355054},
  address = {New York, NY, USA},
  isbn = {1-58113-205-0},
  keyworks = {cop-lit},
  location = {San Diego, California, United States}}

@inproceedings{Walk00b,
  author = {Robert J. Walker and Gail C. Murphy and Jeffrey Steinbok and Martin P. Robillard},
  title = {Efficient mapping of software system traces to architectural views},
  booktitle = {CASCON '00: Proceedings of the 2000 conference of the Centre for Advanced Studies on Collaborative research},
  pages = {12},
  publisher = {IBM Press},
  year = {2000},
  location = {Mississauga, Ontario, Canada}}

@inproceedings{Walk03a,
  author = {Walker, David and Zdancewic, Steve and Ligatti, Jay},
  title = {A theory of aspects},
  booktitle = {International Conference on Functional programming (ICFP '03)},
  pages = {127--139},
  publisher = {ACM},
  year = {2003},
  doi = {10.1145/944705.944718},
  address = {New York, NY, USA},
  isbn = {1-58113-756-7},
  location = {Uppsala, Sweden}}

@techreport{Walk90a,
  author = {David Walker},
  title = {$\pi$-calculus Semantics of Object-Oriented Programming Languages},
  year = {1990},
  institution = {Computer Science Dept., University of Edinburgh},
  month = oct,
  number = {ECS-LFCS-90-122},
  type = {Report}}

@incollection{Walk91a,
  author = {David Walker},
  title = {Some Results on the $pi$-calculus},
  booktitle = {Concurrency: Theory, Language and Architecture},
  volume = {491},
  pages = {21--35},
  publisher = {Springer-Verlag},
  year = {1991},
  editor = {A. Yonezawa and T. Ito},
  series = {LNCS}}

@unpublished{Walk93a,
  author = {David Walker},
  title = {Process Calculus and Parallel Object-Oriented Programming Languages},
  year = {1993},
  note = {University of Warwick},
  type = {draft manuscript}}

@article{Walk95a,
  author = {David Walker},
  title = {Objects in the {$\pi$}-Calculus},
  journal = {Information and Computation},
  volume = {116},
  pages = {253--271},
  year = {1995},
  url = {ftp://ftp.dcs.warwick.ac.uk/pub/reports/rr/217/all.ps.gz},
  doi = {10.1006/inco.1995.1018},
  month = feb,
  number = {2}}

@inproceedings{Walk98a,
  author = {Robert J. Walker and Gail C. Murphy and Bjorn Freeman-Benson and Darin Wright and Darin Swanson and Jeremy Isaak},
  title = {Visualizing Dynamic Software System Information through High-Level Models},
  booktitle = {Proceedings of International Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'98)},
  pages = {271--283},
  publisher = {ACM},
  year = {1998},
  month = oct}

@inproceedings{Walk99a,
  author = {Robert J. Walker},
  title = {Contextual programming (doctoral symposium---extended abstract)},
  booktitle = {ICSE '99: Proceedings of the 21st international conference on Software engineering},
  pages = {734--735},
  publisher = {IEEE Computer Society Press},
  year = {1999},
  url = {http://delivery.acm.org/10.1145/310000/303004/p734-walker.pdf},
  address = {Los Alamitos, CA, USA},
  isbn = {1-58113-074-0},
  location = {Los Angeles, California, United States}}

@book{Wall00a,
  author = {Larry Wall and Tom Christiansen and Jon Orwant},
  title = {Programming Perl},
  publisher = {O'Reilly \& Associates, Inc.},
  year = {2000},
  edition = {3rd}}

@misc{Wall04a,
  author = {Larry Wall},
  title = {Apocalypse 12},
  year = {2004},
  url = {http://www.perl.com/pub/a/2004/04/16/a12.html},
  month = apr,
  note = {http://www.perl.com/pub/a/2004/04/16/a12.html}}

@misc{Wall23a,
  author = {Wallaby.js},
  title = {Wallaby.js Time Travel Debugger for Javascript},
  year = {2023},
  howpublished = {\url{https://wallabyjs.com/docs/intro/time-travel-debugger.html}}}

@article{Wall80a,
  author = {P.J.L. Wallis},
  title = {External Representations of Objects of User-Defined Type},
  journal = {ACM TOPLAS},
  volume = {2},
  pages = {137--152},
  year = {1980},
  month = apr,
  number = {2}}

@book{Wall90a,
  author = {Larry Wall and Randal L. Schwartz},
  title = {Programming Perl},
  publisher = {O'Reilly \& Associates, Inc.},
  year = {1990},
  isbn = {0-937175-64-1}}

@incollection{Wall96a,
  author = {Ake Wallin and Simon Moser and Alfred Graber},
  title = {Wiederverwendung mit {Smalltalk} in Client/Server Applikationen},
  booktitle = {INFORMATIK, Zuerich},
  publisher = {SVI/FSI},
  year = {1996},
  month = feb}

@book{Wall96b,
  author = {Larry Wall and Randal L. Schwartz},
  title = {Programming Perl},
  publisher = {O'Reilly \& Associates, Inc.},
  year = {1990},
  edition = {2nd},
  isbn = {0-56592-149-6}}

@article{Wall99a,
  author = {Malcolm Wallace and Colin Runciman},
  title = {{Haskell} and {XML}: Generic Combinators or Type-Based Translation?},
  journal = {ACM SIG{\-}PLAN Notices},
  volume = {34},
  pages = {148--159},
  year = {1999},
  month = sep,
  note = {Proceedings of {ICFP}'99},
  number = {9}}

@article{Walr02a,
  author = {Walrad, C. and Strom, D.},
  title = {The importance of branching models in SCM},
  journal = {Computer},
  volume = {35},
  pages = {31--38},
  publisher = {IEEE},
  year = {2002},
  number = {9}}

@inproceedings{Wals92a,
  author = {James F. Walsh},
  title = {Preliminary Defect Data from the Iterative Development of a Large {C}++ Program},
  booktitle = {Proceedings OOPSLA '92},
  volume = {27},
  pages = {178--183},
  year = {1992},
  month = oct}

@inproceedings{Walt89a,
  author = {Sandra S. Walther and Richard L. Peskin},
  title = {Strategies for Scientific Prototyping in {Smalltalk}},
  booktitle = {Proceedings OOPSLA '89},
  volume = {24},
  pages = {159--168},
  year = {1989},
  month = oct}

@mastersthesis{Wamp06a,
  author = {Rafael Wampfler},
  title = {{Eg} --- a Meta-Model and Editor for Unit Tests},
  year = {2006},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Wamp06a.pdf},
  abstract = {In our life we often use examples to explain
difficult topics. Examples help us to comprehend the
problem. An example is easier to understand than an
abstract description of the problem. In software
design the problems are complex and abstract. But
examples are rarely used to explain a complicated
situation. We are using examples to document and
explain software. Examples demonstrate the creation
and behavior of an instance. They can be reused to
compose new examples. Examples can be extended with
assertions and become unit tests. Because the link
between test and method under test is often missing,
we created a meta-model for tests. Our meta-model
stores the objects, methods and parameters used for
the tests. It can generate the source code of its
tests which is human readable. First studies shows
that most unit tests are method tests concerning
only a single method call. The other tests can be
refactored to method tests. We built an editor for
the meta-model to create examples and tests. The
editor is integrated in the environment and lets the
developer create new tests with a minimal effort.},
  month = nov}

@article{Wand04a,
  author = {Wand, Mitchell and Kiczales, Gregor and Dutchyn, Christopher},
  title = {A semantics for advice and dynamic join points in aspect-oriented programming},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume = {26},
  pages = {890--910},
  publisher = {ACM},
  year = {2004},
  doi = {10.1145/1018203.1018208},
  address = {New York, NY, USA},
  issn = {0164-0925},
  number = {5}}

@inproceedings{Wand88a,
  author = {Mitchell Wand and Daniel Friedman},
  title = {{The Mystery of the Tower Revealed: A Non-Reflective Description of the Reflective Tower}},
  booktitle = {Meta-level Architectures and Reflection},
  pages = {111--134},
  year = {1988},
  editor = {North-Holland, P. Maes and D. Nardi}}

@inproceedings{Wand88b,
  author = {M. Wand, Daniel P. Friedman},
  title = {The mystery of the tower revealed: A non-reflective description of the reflective tower},
  booktitle = {Lisp and Symbolic Computation},
  pages = {298--307},
  year = {1988}}

@inproceedings{Wang01,
  author = {Nanbor Wang and Kirthika Parameswaran and Douglas Schmidt and Ossama Othman},
  title = {The Design and Performance of {Meta-Programming} Mechanisms for Object Request Broker Middleware},
  booktitle = {Proceedings of the 6th {USENIX} Conference on Object-Oriented Technologies and Systems ({COOTS}-01)},
  pages = {103--118},
  publisher = {USENIX Association},
  year = {2001},
  address = {Berkeley, California}}

@inproceedings{Wang01a,
  author = {Tiejun Wang and Scott F. Smith},
  title = {Precise Constraint-Based Type Inference for Java},
  booktitle = {Proceedings ECOOP '01},
  volume = {2072},
  pages = {99--118},
  publisher = {Springer-Verlag},
  year = {2001},
  address = {Budapest, Hungary},
  editor = {G. Goos and J. Hartmanis and J. van Leeuwen},
  month = jun,
  series = {LNCS}}

@inproceedings{Wang03a,
  author = {Qin Wang and Wei Wang and Rhodes Brown and Karel Driesen and Bruno Dufour and Laurie Hendfren and Clark Verbrugge},
  title = {{EVolve}: an Open Extensible Software Visualization Framework},
  booktitle = {Proceedings of ACM Symposium on Software Visualization (SOFTVIS 2003)},
  pages = {37--49},
  year = {2003}}

@inproceedings{Wang14a,
  author = {Wang, Yan and Patil, Harish and Pereira, Cristiano and Lueck, Gregory and Gupta, Rajiv and Neamtiu, Iulian},
  title = {Drdebug: Deterministic replay based cyclic debugging with dynamic slicing},
  booktitle = {Proceedings of annual IEEE/ACM international symposium on code generation and optimization},
  pages = {98},
  year = {2014},
  organization = {ACM}}

@inproceedings{Wang15a,
  author = {Wang, K. andLin, Y. and Blackburn, S. M. andNorrish, M. and Hosking, A. L.},
  title = {Draining the Swamp: Micro Virtual machines as Solid Foundation for Language Development},
  booktitle = {Summit on Advances in Programming Languages},
  pages = {321--336},
  year = {2015},
  doi = {10.4230/LIPIcs.SNAPL.2015.321}}

@article{Wang17,
  author = {Wang, Tiexin and Truptil, Sebastien and Benaben, Frederick},
  title = {An automatic model-to-model mapping and transformation methodology to serve model-based systems engineering},
  journal = {Information Systems and e-Business Management},
  volume = {15},
  pages = {323--376},
  year = {2017},
  abstract = {With enterprise collaboration becoming increasingly frequent, the ability
of an enterprise to cooperate with others has become one of the core factors in
gaining competitive advantage. This trend has led to an urgent requirement to
improve cooperation ability. To this end, model-based systems engineering is being
adapted so that it can be used to represent and simulate the working processes of
enterprises. Model-to-model mappings and transformations, as important aspects in
model-based systems engineering, have become two of the key factors in improving
the cooperation capabilities of enterprises. However, the foundations for achieving
automatic model-to-model transformation have not yet been built. Normally, model
transformation rules are built on the basis of model mappings, and model mappings
concern semantic or syntactic representations. One of the difficulties in achieving
model-to-model mappings and transformations lies in detecting the semantics and
semantic relations that are conveyed in different models. This paper presents an
automatic model-to-model mapping and transformation methodology, which applies
semantic and syntactic checking measurements to detect the meanings and relations
between different models automatically. Both of the semantic and syntactic
checking measurements are combined into a refined meta-model based model
transformation process. To evaluate the performance of this methodology, we
demonstrate its applicability with a realistic example.},
  keywords = {Automatic model-to-model transformation, Enterprise collaboration, Model-driven engineering, Model-to-model mappings, Semantic and syntactic checking}}

@inproceedings{Wang92a,
  author = {Michael F. Wangler and Peeter Hansen},
  title = {Visualizing Objects: Methods for Exploring Human Computer Interaction Concepts},
  booktitle = {Proceedings OOPSLA '92},
  volume = {27},
  pages = {146--153},
  year = {1992},
  month = oct}

@book{Wang98a,
  author = {Jiacun Wang},
  title = {Timed Petri Nets},
  publisher = {Kluwer Academic Publishers},
  year = {1998}}

@article{Ward11a,
  author = {Ward, Martin and H.bennett, K.},
  title = {Formal methods to aid the evolution of software},
  journal = {International Journal of Software Engineering and Knowledge Engineering},
  volume = {05},
  year = {2011},
  doi = {10.1142/S0218194095000034},
  month = nov}

@inproceedings{Ward19a,
  author = {Gurdeep Singh, Robbert and Scholliers, Christophe},
  title = {WARDuino: a dynamic WebAssembly virtual machine for programming microcontrollers},
  booktitle = {International Conference on Managed Programming Languages and Runtimes},
  pages = {27--36},
  year = {2019}}

@book{Ware00a,
  author = {Colin Ware},
  title = {Information visualization: perception for design},
  publisher = {Morgan Kaufmann Publishers Inc.},
  year = {2000},
  address = {San Francisco, CA, USA},
  isbn = {1-55860-511-8}}

@book{Ware04a,
  author = {Colin Ware},
  title = {Information Visualisation},
  publisher = {Elsevier},
  year = {2004},
  address = {Sansome Street, San Fransico},
  isbn = {1-55860-819-2}}

@article{Warf73a,
  author = {Warfield, J.N.},
  title = {Binary Matrices in System Modeling},
  journal = {IEEE Transactions on Systems, Man, and Cybernetics},
  volume = {3},
  pages = {441--449},
  year = {1973},
  number = {5}}

@mastersthesis{Wark03a,
  author = {Elmar Warken},
  title = {Mehrfache Delegatioin in Lava (in German)},
  year = {2003},
  school = {CS Dept. III, University of Bonn, Germany},
  month = feb,
  type = {Diploma thesis}}

@inproceedings{Warn02a,
  author = {Brett A. Warneke and Kristofer S.J. Pister},
  title = {Exploring the Limits of System Integration with Smart Dust},
  booktitle = {Proceedings of IMECE'02, ASME International Mechanical Engineering Congreee \& Exposition},
  year = {2002},
  month = nov}

@article{Warr80a,
  author = {David H.D. Warren},
  title = {Logic Programming and Compiler Writing},
  journal = {Software --- Practice and Experience},
  volume = {10},
  pages = {97--125},
  year = {1980}}

@book{Warr99a,
  author = {Nigel Warren and Philip Bishop},
  title = {Java in Practice},
  publisher = {Addison Wesley},
  year = {1999}}

@inproceedings{Wart06a,
  author = {Alessandro Warth and Milan Stanojevi\'{c} and Todd Millstein},
  title = {Statically scoped object adaptation with expanders},
  booktitle = {Conference on Object-oriented programming systems, languages, and applications (OOPSLA'06)},
  pages = {37--56},
  publisher = {ACM Press},
  year = {2006},
  doi = {10.1145/1167473.1167477},
  address = {New York, NY, USA},
  isbn = {1-59593-348-4},
  location = {Portland, Oregon, USA}}

@inproceedings{Wart07a,
  author = {Alessandro Warth and Ian Piumarta},
  title = {{OMeta}: an object-oriented language for pattern matching},
  booktitle = {DLS '07: Proceedings of the 2007 symposium on Dynamic languages},
  pages = {11--19},
  publisher = {ACM},
  year = {2007},
  url = {http://www.tinlizzie.org/~awarth/papers/dls07.pdf},
  doi = {10.1145/1297081.1297086},
  address = {New York, NY, USA},
  isbn = {978-1-59593-868-8},
  location = {Montreal, Quebec, Canada}}

@inproceedings{Wart07b,
  author = {Alessandro Warth and James R. Douglass and Todd Millstein},
  title = {Packrat parsers can support left recursion},
  booktitle = {PEPM '08: Proceedings of the 2008 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation},
  pages = {103--110},
  publisher = {ACM},
  year = {2008},
  doi = {10.1145/1328408.1328424},
  address = {New York, NY, USA},
  isbn = {978-1-59593-977-7},
  location = {San Francisco, California, USA}}

@techreport{Wart08a,
  author = {Alessandro Warth and Alan Kay},
  title = {Worlds: Controlling the Scope of Side Effects},
  year = {2008},
  institution = {Viewpoints Research},
  number = {RN-2008-001}}

@inproceedings{Wart11a,
  author = {Alessandro Warth and Yoshiki Ohshima and Ted Kaehler and Alan Kay},
  title = {Worlds: Controlling the Scope of Side Effects},
  booktitle = {ECOOP 2011},
  publisher = {LNCS},
  year = {2011},
  date-modified = {2013-04-18 16:11:25 +0000}}

@article{Wash17a,
  author = {Hironori Washizaki and Yann-Gael Gu\'e\'eneuc and Foutse Khomh},
  title = {ProMeTA: A Taxonomy for Program Metamodels in Program Reverse Engineering},
  journal = {Journal of Emperical Software Engineering},
  year = {2017}}

@inproceedings{Wata88a,
  author = {Takuo Watanabe and Akinori Yonezawa},
  title = {Reflection in an Object-Oriented Concurrent Language},
  booktitle = {Proceedings OOPSLA '88},
  volume = {23},
  pages = {306--315},
  year = {1988},
  month = nov}

@article{Wate94a,
  author = {Richard C. Waters and Elliot Chikofsky},
  title = {Reverse Engineering: Progress Along Many Dimensions (Special Issue)},
  journal = {Communications of the ACM},
  volume = {37},
  pages = {22--93},
  year = {1994},
  month = may,
  number = {5}}

@article{Wats02a,
  author = {Watson Anne, Mason John H.},
  title = {Student-Generated Examples in the Learning of Mathematics},
  journal = {Canadian Journal of Science, Mathematics and Technology Education},
  volume = {2},
  pages = {237--249},
  year = {2002},
  number = {2}}

@techreport{Wats96a,
  author = {A. Watson and T. McCabe},
  title = {Structured Testing: A Testing Methodology Using the Cyclomatic Complexity Metric},
  booktitle = {T. NIST Special Publication 500-235},
  year = {1996},
  institution = {National Institute of Standards and Technology, Washington, D.C.}}

@inproceedings{Watt05a,
  author = {Martin Wattenberg},
  title = {Baby Names Visualization, and Social Data Analysis},
  booktitle = {Proceedings of 2005 IEEE Symposium on Information Visualization (INFOVIS 2005)},
  pages = {1--6},
  year = {2005}}

@book{Watt90a,
  author = {David A. Watt},
  title = {Programming Language Concepts and Paradigms},
  publisher = {Prentice-Hall},
  year = {1990},
  isbn = {0-13-726274-4}}

@book{Watt91a,
  author = {David A. Watt},
  title = {Programming Language Syntax and Semantics},
  publisher = {Prentice-Hall},
  year = {1991},
  isbn = {0-13-726274-4}}

@book{Watt96a,
  author = {Aaron Watters and Guido van Rossum and James C. Ahlstrom},
  title = {Internet Programming with {Python}},
  publisher = {M\&T Books},
  year = {1996},
  isbn = {1-555851-484-8}}

@book{Wayn95a,
  author = {Peter Wayner},
  title = {Agents Unleashed},
  publisher = {AP Profesional},
  year = {1995},
  isbn = {0-12-738765-X}}

@book{Weav07a,
  author = {Weaver, James},
  title = {Javafx script: Dynamic java scripting for rich internet/client-side applications},
  publisher = {Apress},
  year = {2007}}

@book{Weav98a,
  author = {Lynn Weaver},
  title = {Inside {Java} Workshop 2.0},
  publisher = {Prentice-Hall},
  year = {1998},
  isbn = {0-13-899584-2}}

@misc{WebStorm,
  title = {WebStorm},
  author = {JetBrains},
  howpublished = {\url{https://www.jetbrains.com/webstorm/}}
}

@article{Webb04a,
  author = {Diana L. Webber and Hassan Gomaa},
  title = {Modeling variability in software product lines with the variation point model},
  journal = {Sci. Comput. Program.},
  volume = {53},
  pages = {305--331},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2004},
  doi = {10.1016/j.scico.2003.04.004},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {0167-6423},
  number = {3}}

@article{Webe02a,
  author = {Debora Weber-Wulff},
  title = {{Schummeln} mit dem {Internet}},
  journal = {c't Magazin f\"ur Computertechnik},
  volume = {15},
  pages = {64--69},
  year = {2002},
  url = {http://www.heise.de/ct/02/01/004/},
  month = jan,
  number = {1}}

@inproceedings{Webe16a,
  author = {Weber, Ingo and Xu, Xiwei and Riveret, Regis and Governatori, Guido and Ponomarev, Alexander and Mendling, Jan},
  title = {Untrusted Business Process Monitoring and Execution Using Blockchain},
  booktitle = {International Conference on Business Process Management (BPMN'16)},
  year = {2016}}

@unpublished{Webe91a,
  author = {Franz Weber},
  title = {Getting Class Correctness and System Correctness Equivalent --- How to Get Covariance Right},
  year = {1991},
  month = dec,
  note = {submitted for publication},
  type = {draft}}

@book{Webs89a,
  author = {Bruce F. Webster},
  title = {The {NeXT} book},
  publisher = {Addison-Wesley},
  year = {1989}}

@book{Wech91a,
  author = {Wolfgang Wechler},
  title = {Universal Algerbra for Computer Scientists},
  volume = {25},
  publisher = {Springer-Verlag},
  year = {1991},
  series = {EATCS}}

@inproceedings{Weck96a,
  author = {Wolfgang Weck and Clemens Szyperski},
  title = {Do We Need Inheritance?},
  booktitle = {Workshop on Composability Issues in Object-Orientation at ECOOP '96},
  year = {1996},
  month = jul}

@inproceedings{Weer01a,
  author = {Sanjiva Weerawarana and Francisco Curbera and Matthew J. Duftler and David A. Epstein and Joseph Kesselman},
  title = {Bean Markup Language: {A} Composition Language for {JavaBeans} Components},
  booktitle = {Proceedings of the 6th {USENIX} Conference on Object-Oriented Technologies and Systems ({COOTS}-01)},
  pages = {173--188},
  publisher = {USENIX Association},
  year = {2001},
  address = {Berkeley, California},
  month = feb}

@incollection{Wegn72a,
  author = {Peter Wegner},
  title = {Programming Language Semantics},
  booktitle = {Formal Semantics of Programming Languages},
  pages = {149--248},
  publisher = {Prentice-Hall},
  year = {1972},
  editor = {R. Rustin}}

@article{Wegn72b,
  author = {Peter Wegner},
  title = {The Vienna Definition Language},
  journal = {ACM Computing Surveys},
  volume = {4},
  pages = {5--63},
  year = {1972},
  month = mar,
  number = {1}}

@article{Wegn84a,
  author = {Peter Wegner},
  title = {Capital-Intensive Software Technology},
  journal = {IEEE Software},
  volume = {1},
  year = {1984},
  month = jul,
  number = {3}}

@article{Wegn86a,
  author = {Peter Wegner},
  title = {Classification in Object-Oriented Systems},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {173--182},
  year = {1986},
  month = oct,
  number = {10}}

@inproceedings{Wegn87a,
  author = {Peter Wegner},
  title = {Dimensions of Object-Based Language Design},
  booktitle = {Proceedings of OOPSLA '87},
  volume = {22},
  pages = {168--182},
  year = {1987},
  month = dec}

@book{Wegn87b,
  title = {Research Directions in Object-Oriented Programming},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  editor = {B. Shriver and P. Wegner},
  isbn = {0-262-19264-0}}

@inproceedings{Wegn88a,
  author = {Peter Wegner and Stanley B. Zdonik},
  title = {Inheritance as an Incremental Modification Mechanism or What Like Is and Isn't Like},
  booktitle = {Proceedings ECOOP '88},
  volume = {322},
  pages = {55--77},
  publisher = {Springer-Verlag},
  year = {1988},
  misc = {August 15-17},
  url = {http://www.ifs.uni-linz.ac.at/~ecoop/cd/tocs/t0322.htm http://www.ifs.uni-linz.ac.at/~ecoop/cd/papers/0322/03220055.pdf},
  address = {Oslo},
  editor = {S. Gjessing and K. Nygaard},
  month = apr,
  series = {LNCS}}

@article{Wegn89a,
  author = {Peter Wegner},
  title = {Learning the Language},
  journal = {Byte},
  volume = {14},
  pages = {245--253},
  year = {1989},
  month = mar,
  number = {3}}

@article{Wegn90a,
  author = {Peter Wegner},
  title = {Concepts and Paradigms of Object-Oriented Programming},
  journal = {ACM OOPS Messenger},
  volume = {1},
  pages = {7--87},
  year = {1990},
  month = aug,
  number = {1}}

@inproceedings{Wegn92a,
  author = {Peter Wegner},
  title = {Design Issues for Object-Based Concurrency},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {245--256},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@article{Wegn92b,
  author = {Peter Wegner},
  title = {Dimensions of Object-Oriented Modeling},
  journal = {IEEE Computer (Special Issue on Inheritance \& Classification)},
  volume = {25},
  pages = {12--21},
  year = {1992},
  month = oct,
  number = {10}}

@techreport{Wegn93a,
  author = {Peter Wegner},
  title = {Towards Component-Based Software Technology},
  year = {1993},
  misc = {July 6},
  institution = {Brown University},
  month = jul,
  number = {CS-93-11},
  type = {TR No.}}

@incollection{Wegn93b,
  author = {Peter Wegner},
  title = {Tradeoffs between Reasoning and Modelling},
  booktitle = {Research Directions in Concurrent Object-Oriented Programming},
  pages = {22--41},
  publisher = {MIT Press},
  year = {1993},
  editor = {Gul Agha and Peter Wegner and Akiro Yonezawa}}

@inproceedings{Wegn94a,
  author = {Peter Wegner},
  title = {Models and Paradigms of Interaction},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {1--32},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {Objects have inherently greater computation power
than functions because they provide clients with
continuing services over time. They determine a
\fImarriage contract\fP for interactive services
that cannot be expressed by a pattern of
time-independent \fIsales contracts\fP. Objects
express the programming-in-the-large paradigm of
software engineering, while functions express the
programming-in-the-small paradigm of the analysis of
algorithms. Objects have a \fIfunctional
semantics\fP specified by their interface, a
\fIserial semantics\fP specified by traces of
interface procedures, and a \fIfully abstract
semantics\fP that specifies behavior over time for
all possible interactions. They assign meaning to
the time between the execution of interface
procedures as well as to algorithmic effects.
Church's thesis that computable functions capture
the intuitive notion of effective computation for
algorithms cannot be extended to objects. Components
are defined by generalizing from accidental to
necessary properties of persistent interaction
units. Scalability for software problems, defined as
``asymptotic openness'', is shown to be the analog
of complexity for algorithmic problems. Paradigms of
interaction are examined for functions and
procedures, objects and processes, {API}s and
frameworks, databases, GUIs, robots, and
virtual-reality systems. Early models of computing
stressed computation over interaction for both
theoretical reasons (greater tractability) and
practical reasons (there were no software components
with which to interact). However, scalable software
systems, personal computers, and databases require a
balance between algorithmic and interactive problem
solving. Models of interaction express the behavior
of actual software systems and therefore capture the
intuitive notion of truly effective computation more
completely than mere algorithms.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@techreport{Wegn94b,
  author = {Peter Wegner},
  title = {Beyond Computable Functions or Escape from the Turing Tarpit},
  year = {1994},
  institution = {Brown University},
  month = jan,
  number = {CS-94-01},
  type = {TR No.}}

@techreport{Wegn95a,
  author = {Peter Wegner},
  title = {Tutorial Notes: Models and Paradigms of Interaction},
  year = {1995},
  institution = {Brown University},
  month = sep,
  number = {CS-95-21},
  type = {TR No.}}

@article{Wei81a,
  author = {Weinreb, Daniel and Moon, David},
  title = {The {L}isp {M}achine {M}anual},
  journal = {SIGART Bull.},
  year = {1981}}

@inproceedings{Wei91a,
  author = {Jiawang Wei and Markus Endler},
  title = {A Configuration Model for Dynamically Reconfigurable Distributed Systems},
  booktitle = {Proc. 24th Hawaii Conference on System Science},
  year = {1991},
  month = jan}

@inproceedings{Wei91b,
  author = {Jiawang Wei and Markus Endler},
  title = {Programming Dynamic Reconfigurations for Multi-Language Distributed Applications},
  booktitle = {Proc. 24th Hawaii Conference on System Science},
  year = {1991},
  month = jan}

@inproceedings{Weid98a,
  author = {Johannes Weidl and Harald Gall},
  title = {Binding Object Models to Source Code: An Approach to Object-Oriented Rearchitecting},
  booktitle = {Proceedings of the 22nd Computer Software and Application Conference (COMPSAC 1998)},
  publisher = {IEEE Computer Society Press},
  year = {1998}}

@techreport{Weih82a,
  author = {W. Weihl and Barbara Liskov},
  title = {Specification and Implementation of Resilient Atomic Data Types},
  year = {1982},
  institution = {MIT Department of EE and CS},
  month = dec,
  number = {223},
  type = {Computation Structures Group Memo}}

@book{Wein81,
  author = {Daniel Weinreb, David Moon},
  title = {Lisp Machine Manual},
  publisher = {Symbolic Inc.},
  year = {1981},
  address = {Cambridge, Massachusetts}}

@book{Wein81a,
  author = {D. Weinreb and David Moon},
  title = {The Lisp Machine Manual},
  publisher = {Symbolics Inc.},
  year = {1981}}

@inproceedings{Wein88a,
  author = {Andr\'e Weinand and Erich Gamma and Rudolph Marty},
  title = {{ET}++ --- An Object-Oriented Application Framework in {C}++},
  booktitle = {Proceedings OOPSLA '88},
  volume = {23},
  pages = {46--57},
  year = {1988},
  month = nov}

@book{Wein98a,
  author = {Gerald M. Weinberg},
  title = {The Psychology of Computer Programming},
  publisher = {Dorset House},
  year = {1998},
  edition = {Silver Anniversary Edition}}

@article{Weip03a,
  author = {Edgar Weippl and Wolfgang Essmayr},
  title = {Personal trusted devices for web services: revisiting multilevel security},
  journal = {Mob. Netw. Appl.},
  volume = {8},
  pages = {151--157},
  publisher = {Kluwer Academic Publishers},
  year = {2003},
  doi = {10.1023/A:1022237215026},
  address = {Hingham, MA, USA},
  issn = {1383-469X},
  number = {2}}

@book{Weir00a,
  author = {James Noble and Charles Weir},
  title = {Small Memory Software: Patterns for systems with limited memory},
  publisher = {Addison-Wesley Professional},
  year = {2000},
  month = nov}

@inproceedings{Weis06a,
  author = {Weissgerber, Peter and Diehl, Stephan},
  title = {Identifying Refactorings from Source-Code Changes},
  booktitle = {Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering},
  pages = {231--240},
  publisher = {IEEE Computer Society},
  year = {2006},
  url = {http://dx.doi.org/10.1109/ASE.2006.41},
  doi = {10.1109/ASE.2006.41},
  acmid = {1169322},
  address = {Washington, DC, USA},
  isbn = {0-7695-2579-2},
  numpages = {10},
  series = {ASE '06}}

@inproceedings{Weis07a,
  author = {Weiss, Cathrin and Premraj, Rahul and Zimmermann, Thomas and Zeller, Andreas},
  title = {How Long Will It Take to Fix This Bug?},
  booktitle = {MSR '07: Proceedings of the Fourth International Workshop on Mining Software Repositories},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MSR.2007.13},
  address = {Washington, DC, USA},
  isbn = {0-7695-2950-X}}

@inproceedings{Weis07b,
  author = {Peter Weissgerber and Mathias Pohl and Michael Burch},
  title = {Visual Data Mining in Software Archives to Detect How Developers Work Together},
  booktitle = {MSR '07: Proceedings of the Fourth International Workshop on Mining Software Repositories},
  pages = {9},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/MSR.2007.34},
  address = {Washington, DC, USA},
  isbn = {0-7695-2950-X}}

@inproceedings{Weis81a,
  author = {Mark Weiser},
  title = {Program slicing},
  booktitle = {Proceedings of the 5th International Conference on Software Engineering},
  pages = {439--449},
  publisher = {IEEE Press},
  year = {1981},
  address = {Piscataway, NJ, USA},
  isbn = {0-89791-146-6},
  location = {San Diego, California, United States},
  series = {ICSE'81}}

@article{Weis85a,
  author = {S.P. Weiser},
  title = {An Object-oriented Protocol for Managing Data},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {41--48},
  year = {1985},
  url = {http://scg.unibe.ch/archive/osg/Weis85aOz.pdf},
  abstract = {Many researchers believe that object-oriented
languages are well suited for some of the
programming tasks associated with the building of an
office information system (OIS). To lend support to
this thesis, we shall concentrate our attention on
an object-oriented programming environment, named
Oz, which has been effectively employed to capture
certain aspects of OISs more simply and naturally
than with conventional languages. After pointing out
some of the limitations of Oz, we introduce
additional facilities into it which further enhance
its capabilities, especially with respect to the
management of office data.},
  month = dec,
  number = {4}}

@book{Weis96a,
  author = {Michael Weiss and Andy Jhonson and Joe Kiniry},
  title = {Overview of {Java} and HotJava},
  publisher = {Open Software Foundation Version 2.1},
  year = {1996},
  month = feb}

@book{Weis96b,
  author = {Michael Weiss and Andy Jhonson and Joe Kiniry},
  title = {The {Java} and HotJava Object Models},
  publisher = {Open Software Foundation Version 2.1},
  year = {1996},
  month = feb}

@book{Weis96c,
  author = {Michael Weiss and Andy Jhonson and Joe Kiniry},
  title = {Distributed Computing: {Java}, {CORBA}, and {DCE}},
  publisher = {Open Software Foundation Version 2.1},
  year = {1996},
  month = feb}

@book{Weis96d,
  author = {Michael Weiss and Andy Jhonson and Joe Kiniry},
  title = {Security Features of {Java} and HotJava},
  publisher = {Open Software Foundation Version 2.1},
  year = {1996},
  month = feb}

@book{Weis99a,
  author = {D. Weiss and Lay, C.T.R},
  title = {Software Product Line Engineering},
  publisher = {Addison Wesley},
  year = {1999}}

@inproceedings{Welc00a,
  author = {Welch, Ian and Stroud, Robert J.},
  title = {Using Reflection as a Mechanism for Enforcing Security Policies in Mobile Code},
  booktitle = {ESORICS '00: Proceedings of the 6th European Symposium on Research in Computer Security},
  pages = {309--323},
  publisher = {Springer-Verlag},
  year = {2000},
  address = {London, UK},
  isbn = {3-540-41031-7}}

@inproceedings{Welc01a,
  author = {Ian Welch and Robert J. Stroud},
  title = {{Kava} --- Using Bytecode Rewriting to add Behavioural Reflection to {Java}},
  booktitle = {Proceedings of the 6th USENIX Conference on Object-Oriented Technology (COOTS'2001)},
  pages = {119--130},
  year = {2001},
  address = {San Antonio, Texas, USA},
  month = feb}

@article{Welc02a,
  author = {Welch, Ian and Stroud, Robert J.},
  title = {Using reflection as a mechanism for enforcing security policies on compiled code},
  journal = {Journal of Computer Security},
  volume = {10},
  pages = {399--432},
  year = {2002},
  issn = {0926-227X},
  number = {4}}

@book{Welc97a,
  author = {Brent B. Welch},
  title = {Practical Programming in {Tcl} and {Tk}},
  publisher = {Prentice-Hall},
  year = {1997},
  isbn = {0-13-616830-2}}

@inproceedings{Welc99a,
  author = {Ian Welch and Robert Stroud},
  title = {{Dalang} -- A Reflective {Java} Extension},
  booktitle = {OOPSLA 99 Workshop on Reflective Programming in C++ and Java},
  year = {1999}}

@misc{Welch99,
  author = {Ian Welch and Robert Stroud},
  title = {Dalang - {A} Reflective Extension for {Java}},
  year = {1999},
  url = {http://citeseer.ist.psu.edu/449076.html; http://www.cs.ncl.ac.uk/research/trs/papers/672.ps},
  abstract = {Current implementations of reflective Java extensions
		 typically either require access to source code, or
		 require a modified Java platform. This makes them
		 unsuitable for applying reflection to
		 Commercial-off-the-Shelf (COTS) systems. In order to
		 address this we developed a prototype Java extension
		 Dalang based on class wrapping that worked with
		 compiled code, and was implemented using a standard
		 Java platform. In this paper we evaluate the class
		 wrapper approach, and discuss issues that relate to the
		 transparent application of reflection to COTS systems.
		 This has informed our design of a new version of Dalang
		 called Kava that implements a metaobject protocol
		 through the application of standard byte code
		 transformations. Kava leverages the capabilities of
		 byte code transformation toolkits whilst presenting a
		 high-level abstraction for specifying behavioural
		 changes to Java components.},
  language = {en},
  month = feb}

@article{Well92a,
  author = {David L. Wells and Jos\'e A. Blakely and Craig W. Thompson},
  title = {Architecture of an Open Object-Oriented Database},
  journal = {IEEE Computer (Special Issue on Inheritance \& Classification)},
  volume = {25},
  pages = {74--83},
  year = {1992},
  month = oct,
  number = {10}}

@inproceedings{Well94a,
  author = {J. B. Wells},
  title = {Typability and type checking in the second-order $\lambda$-calculus are equivalent and undecidable},
  booktitle = {Proceedings of the 9th Annual IEEE Symposium on Logic in Computer Science},
  pages = {176--185},
  year = {1994},
  address = {San Antonio, Texas, USA}}

@article{Wels84a,
  author = {M. Welser},
  title = {Program Slicing},
  journal = {IEEE Transactions on Software Engineering},
  pages = {352--357},
  publisher = {IEEE Computer Society},
  year = {1984}}

@inproceedings{Wen03a,
  author = {Zhihua Wen and Vassilios Tzerpos},
  title = {An Optimal Algorithm for {MoJo} Distance},
  booktitle = {Proceedings 11th IEEE International Workshop on Program Comprehension (IWPC 2003)},
  pages = {227--236},
  publisher = {IEEE Computer Society},
  year = {2003},
  address = {Los Alamitos CA}}

@inproceedings{Wen19a,
  author={Wen, Ming and Liu, Yepang and Wu, Rongxin and Xie, Xuan and Cheung, Shing-Chi and Su, Zhendong},
  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)},
  title={Exposing Library API Misuses Via Mutation Analysis},
  year={2019},
  volume={},
  number={},
  pages={866-877},
  keywords={Libraries;Computer bugs;Java;Software;Tools;Detectors;Mutation Analysis;Library API Misuse},
  doi={10.1109/ICSE.2019.00093}}

@inproceedings{Wend03a,
  author = {Wendehals, Lothar},
  title = {Improving Design Pattern Instance Recognition by Dynamic Analysis},
  booktitle = {Proc. of the ICSE 2003 Workshop on Dynamic Analysis (WODA)},
  year = {2003},
  location = {Portland, USA},
  month = may}

@article{Wern13a,
  author = {Erwann Wernli and Mircea Lungu and Oscar Nierstrasz},
  title = {Incremental Dynamic Updates with First-class Contexts},
  journal = {Journal of Object Technology},
  volume = {12},
  pages = {1:1-27},
  year = {2013},
  doi = {10.5381/jot.2013.12.3.a1},
  issn = {1660-1769},
  month = aug,
  number = {3}}

@article{Wern13b,
  author = {Wernli, Erwann and Maerki, Pascal and Nierstrasz, Oscar},
  title = {Ownership, filters and crossing handlers: flexible ownership in dynamic languages},
  journal = {ACM SIGPLAN Notices},
  volume = {48},
  pages = {83-94},
  year = {2013},
  doi = {10.1145/2480360.2384589},
  month = {jan}}

@phdthesis{Wern99a,
  author = {Michael M. Werner},
  title = {Facilitating Schema Evolution With Automatic Program Transformation},
  year = {1999},
  school = {Northeastern University},
  month = jul}

@inproceedings{Wess18a,
  author = {Florian Wessling and Christopher Ehmke and Marc Hesenius and Volker Gruhn},
  title = {How Much Blockchain Do You Need? Towards a Concept for Building Hybrid DApp Architectures},
  booktitle = {2018 IEEE/ACM 1st International Workshop on Emerging Trends in Software Engineering for Blockchain (WETSEB)},
  year = {2018},
  keywords = {Blockchain architecture trust},
  month = {may}}

@inproceedings{West02a,
  author = {Bosse Westerlund},
  title = {{Form} is {Function}},
  booktitle = {Proceedings DIS 2002 Serious reflection on designing interactive systems},
  pages = {117--124},
  year = {2002},
  month = jul}

@misc{West05a,
  author = {Westphal, Frank},
  title = {JUnit 4.0},
  year = {2005},
  url = {http://www.frankwestphal.de/JUnit4.0.html},
  date-added = {2006-08-12 13:05:03 +0200},
  date-modified = {2006-08-12 14:33:22 +0200},
  month = {jul},
  note = {\url{www.frankwestphal.de/JUnit4.0.html}}}

@inproceedings{West91a,
  author = {Westfechtel, Bernhard},
  title = {Structure-oriented merging of revisions of software documents},
  booktitle = {Proceedings of the 3rd international workshop on Software configuration management},
  pages = {68--79},
  publisher = {ACM},
  year = {1991},
  doi = {/10.1145/111062.111071},
  address = {New York, NY, USA},
  isbn = {0-897914-429-5},
  location = {Trondheim, Norway}}

@article{Weth80a,
  author = {C. S. Wetherell},
  title = {Probabilistic Languages: A Review and Some Open Questions},
  journal = {ACM Computing Surveys},
  volume = {12},
  pages = {361--379},
  publisher = {ACM Press},
  year = {1980},
  doi = {10.1145/356827.356829},
  address = {New York, NY, USA},
  issn = {0360-0300},
  number = {4}}

@mastersthesis{Wett04a,
  author = {Richard Wettel},
  title = {Automated Detection Of Code Duplication Clusters},
  year = {2004},
  school = {Faculty of Automatics and Computer Science, "Politehnica" University of Timi\c{s}oara},
  month = jun}

@inproceedings{Wett05a,
  author = {Richard Wettel and Radu Marinescu},
  title = {Archeology of Code Duplication: Recovering Duplication Chains From Small Duplication Fragments},
  booktitle = {Proceedings of the 7th International Symposium on Symbolic and Numeric Algorithms for Scientific Computing (SYNASC 2005)},
  pages = {??-??},
  year = {2005}}

@inproceedings{Wett07a,
  author = {Richard Wettel and Michele Lanza},
  title = {Program Comprehension through Software Habitability},
  booktitle = {Proceedings of {ICPC} 2007 (15th International Conference on Program Comprehension)},
  pages = {231--240},
  publisher = {IEEE CS Press},
  year = {2007}}

@inproceedings{Wett07b,
  author = {Richard Wettel and Michele Lanza},
  title = {Visualizing Software Systems as Cities},
  booktitle = {Proceedings of VISSOFT 2007 (4th IEEE International Workshop on Visualizing Software For Understanding and Analysis)},
  pages = {92--99},
  year = {2007},
  url = {http://dx.doi.org/10.1109/VISSOF.2007.4290706},
  doi = {10.1109/VISSOF.2007.4290706},
  isbn = {1-4244-0599-8},
  mon = jun}

@inproceedings{Wett08a,
  author = {Richard Wettel and Michele Lanza},
  title = {Visual Exploration of Large-Scale System Evolution},
  booktitle = {In Proceedings of {WCRE} 2008 (15th IEEE Working Conference on Reverse Engineering)},
  pages = {219 - 228},
  publisher = {IEEE CS Press},
  year = {2008}}

@inproceedings{Wett08b,
  author = {Richard Wettel and Michele Lanza},
  title = {Visually Localizing Design Problems with Disharmony Maps},
  booktitle = {Proceedings of {ICPC} 2007 (15th International Conference on Program Comprehension)},
  pages = {231--240},
  publisher = {IEEE CS Press},
  year = {2007}}

@inproceedings{Wett08c,
  author = {Wettel, Richard and Lanza, Michele},
  title = {Codecity: 3d visualization of large-scale software},
  booktitle = {Companion of the 30th international conference on Software engineering},
  pages = {921--922},
  year = {2008}}

@article{Weye85a,
  author = {S.A. Weyer and Alan H. Borning},
  title = {A Prototype Electronic Encyclopedia},
  journal = {ACM TOOIS},
  volume = {3},
  pages = {63--88},
  year = {1985},
  month = jan,
  number = {1}}

@article{Weyu00a,
  author = {Weyuker, E.J. and Vokolos, F.I.},
  title = {Experience with performance testing of software systems: issues, an approach, and case study},
  journal = {IEEE Transactions on Software Engineering},
  volume = {26},
  pages = {1147-1156},
  year = {2000},
  doi = {10.1109/32.888628},
  number = {12}}

@article{Weyu88a,
  author = {Elaine J. Weyuker},
  title = {Evaluating Software Complexity Measures},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {14},
  pages = {1357--1365},
  publisher = {IEEE Press},
  year = {1988},
  doi = {10.1109/32.6178},
  issn = {0098-5589},
  number = {9}}

@incollection{Weze90a,
  author = {C.D. Wezeman},
  title = {The {CO}-{OP} Method for Compositional Derivation of Canonical Testers},
  booktitle = {Protocol Specification, Testing and Verification, IX},
  publisher = {North Holland},
  year = {1990},
  editor = {E. Brinksma and G. Scollo and C.A. Vissers}}

@article{Whal05a,
  author = {Whaley, John},
  title = {Joeq: A virtual machine and compiler infrastructure},
  journal = {Science of Computer Programming},
  volume = {57},
  pages = {339--356},
  publisher = {Elsevier},
  year = {2005},
  number = {3}}

@article{Whal90a,
  author = {G. Whale},
  title = {Identification of Program Similarity in Large Populations},
  journal = {The Computer Journal},
  volume = {33},
  pages = {140--146},
  year = {1990},
  number = {2}}

@misc{Whisker,
  author = {Doug Way},
  title = {Whisker: The {O-O} Stacking Browser},
  year = {2005},
  month = dec,
  note = {\url{www.mindspring.com/~dway/smalltalk/whisker.html}}}

@inproceedings{Whit05a,
  author = {White, L. and Jaber, K. and Robinson, B.},
  title = {Utilization of extended firewall for object-oriented regression testing},
  booktitle = {Software Maintenance, 2005. {ICSM}'05. Proceedings of the 21st IEEE International Conference on},
  pages = {695-698},
  year = {2005},
  doi = {10.1109/ICSM.2005.101},
  issn = {1063-6773},
  keywords = {authorisation;object-oriented programming;program testing;extended firewall testing;object-oriented software regression testing;software components;Fault detection;Software maintenance;Software systems;Software testing;Sorting;System testing;Extended Firewall Testing;Firewall Regression Testing;Object-Oriented Software Testing},
  month = {sep}}

@inproceedings{Whit15a,
  author = {White, Martin and Vendome, Christopher and Linares-V{\'a}squez, Mario and Poshyvanyk, Denys},
  title = {Toward deep learning software repositories},
  booktitle = {Proceedings of the 12th Working Conference on Mining Software Repositories},
  pages = {334--345},
  year = {2015},
  organization = {IEEE Press}}

@inproceedings{Whit18a,
  author = {Whittaker, Michael and Teodoropol, Cristina and Alvaro, Peter and Hellerstein, Joseph M.},
  title = {Debugging Distributed Systems with Why-Across-Time Provenance},
  booktitle = {SoCC 18, October 11-13, 2018, Carlsbad, CA, USA},
  year = {2018}}

@article{Whit84a,
  author = {C. Thomas White and Stephen C. Hardies and Hutchison, III, Clyde A. and Marshall H. Edgell},
  title = {The diagonal-traverse homology search algorithm for locating similarities between two sequences},
  journal = {Nucleic Acids Research},
  volume = {12},
  pages = {751--766},
  year = {1984},
  number = {1}}

@inproceedings{Whit92a,
  author = {Benjamin R. Whittle and Mark Ratcliffe},
  title = {The Reuse of Component Interfaces Through Description and Translation},
  booktitle = {Proceedings, International Workshop on Software Reuse},
  year = {1992},
  address = {Lucca},
  note = {To appear}}

@inproceedings{Whit92b,
  author = {White, L.J. and Leung, H.K.N.},
  title = {A firewall concept for both control-flow and data-flow in regression integration testing},
  booktitle = {Software Maintenance, 1992. Proceedings., Conference on},
  pages = {262-271},
  year = {1992},
  doi = {10.1109/ICSM.1992.242535},
  keywords = {program testing;software maintenance;call graph;control-flow;control-flow dependency;data-flow;firewall concept;regression integration testing;software change;system testers;Application software;Hardware;Packaging;Programming;Software maintenance;Software packages;Software systems;Software testing;System performance;System testing},
  month = {nov}}

@book{Whorf56a,
  author = {B.L. Whorf},
  title = {Language Thought and Reality},
  publisher = {MIT Press},
  year = {1956}}

@book{Why05a,
  author = {Why Malsky},
  title = {Why's (poignant) Guide to Ruby},
  publisher = {Creative Commons},
  year = {2005},
  url = {http://www.poignantguide.net/ruby/},
  note = {http://www.poignantguide.net}}

@book{Wido96a,
  title = {Active Database Systems: Triggers and Rules For Advanced Database Processing},
  publisher = {Morgan Kaufman Publishers},
  year = {1996},
  editor = {Jennifer Widow and Stefano Ceri}}

@inproceedings{Wieb86a,
  author = {Wiebe, Douglas},
  title = {A Distributed Repository for Immutable Persistent Objects},
  booktitle = {Conference proceedings on Object-oriented programming systems, languages and applications},
  pages = {453--465},
  publisher = {ACM},
  year = {1986},
  url = {http://doi.acm.org/10.1145/28697.28744},
  doi = {10.1145/28697.28744},
  acmid = {28744},
  address = {New York, NY, USA},
  isbn = {0-89791-204-7},
  location = {Portland, Oregon, United States},
  numpages = {13},
  series = {OOPLSA '86}}

@book{Wiec01a,
  title = {Software Quality},
  publisher = {Springer},
  year = {2001},
  editor = {Martin Wieczorek and Dirk Meyerhoff}}

@article{Wiec90a,
  author = {Charles Wiecha and William Bennet and Stephen Boies and Jhon Gould},
  title = {{ITS}: {A} Tool for R{API}dly Developing Interactive Applications},
  journal = {ACM Transactions on Information Systems},
  volume = {8},
  pages = {204--236},
  year = {1990},
  month = jul,
  number = {3}}

@book{Wien95a,
  author = {Richard Weiner},
  title = {Software Development using Eiffel},
  publisher = {Prentice-Hall},
  year = {1995},
  isbn = {0-13-100686-X}}

@inproceedings{Wier94a,
  author = {Roel Wieringa and Wiebren de Jonge and Paul Spruit},
  title = {Roles and Dynamic Subclasses: {A} Modal Logic Approach},
  booktitle = {Proceedings ECOOP '94},
  volume = {821},
  pages = {32--59},
  publisher = {Springer-Verlag},
  year = {1994},
  address = {Bologna, Italy},
  editor = {M. Tokoro and R. Pareschi},
  month = jul,
  series = {LNCS}}

@inproceedings{Wigg97a,
  author = {Theo Wiggerts},
  title = {Using Clustering Algorithms in Legacy Systems Remodularization},
  booktitle = {Proceedings of {WCRE} '97 (4th Working Conference on Reverse Engineering)},
  pages = {33--43},
  publisher = {IEEE Computer Society Press},
  year = {1997},
  editor = {Ira Baxter and Alex Quilici and Chris Verhoef}}

@techreport{Wiil96a,
  author = {{Department of Information and Computer Science --- University of California Irvine --- CA 92717-3425}},
  title = {Proceedings of the 2nd Workshop on Open Hypermedia Systems --- Hypertext '96},
  year = {1996},
  url = {http://www.iam.unibe.ch/~demeyer/Wiil96a/ http://www.daimi.aau.dk/~kock/OHS-HT96/},
  editor = {Uffe Kock Wiil and Serge Demeyer},
  institution = {Department of Information and Computer Science --- University of California Irvine --- CA 92717-3425},
  month = apr,
  number = {96-10},
  type = {UCI-ICS Technical Report}}

@article{Wiil96m,
  author = {Uffe Kock Wiil and Serge Demeyer},
  title = {Workshop report: 2nd Workshop on Open Hypermedia Systems},
  journal = {SIGLINK Newsletter},
  volume = {5},
  publisher = {ACM},
  year = {1996},
  url = {http://www.iam.unibe.ch/~demeyer/Wiil96m},
  month = jun,
  number = {2}}

@techreport{Wil93a,
  author = {L.M. Wills},
  title = {Automated Program Recognition by Graph Parsing},
  year = {1993},
  institution = {MIT, AI Laboratory},
  note = {MIT Technical Report 1358}}

@book{Wilc45a,
  author = {Frank Wilcoxon},
  title = {Individual Comparisons by Ranking Methods},
  booktitle = {Biometrics I},
  pages = {80--83},
  publisher = {International Biometric Society},
  year = {1945}}

@article{Wild03a,
  author = {Norman Wilde and Michelle Buckellew and Henry Page and Vaclav Rajlich and LaTreva Pounds},
  title = {A Comparison of Methods for Locating Features in Legacy Software},
  journal = {Journal of Systems and Software},
  volume = {65},
  pages = {105--114},
  publisher = {Elsevier Science Inc.},
  year = {2003},
  doi = {10.1016/S0164-1212(02)00052-3},
  address = {New York, NY, USA},
  issn = {0164-1212},
  number = {2}}

@article{Wild92a,
  author = {Norman Wilde and Ross Huitt},
  title = {Maintenance Support for Object-Oriented Programs},
  journal = {IEEE Transactions on Software Engineering},
  volume = {18},
  pages = {1038--1044},
  year = {1992},
  month = dec,
  number = {12}}

@article{Wild93a,
  author = {Norman Wilde and Paul Matthews and Ross Hutt},
  title = {Maintaining Object-Oriented Software},
  journal = {IEEE Software (Special Issue on "Making O-O Work")},
  volume = {10},
  pages = {75--80},
  year = {1993},
  month = jan,
  number = {1}}

@article{Wild95a,
  author = {Norman Wilde and Michael Scully},
  title = {Software Reconnaisance: Mapping Program Features to Code},
  journal = {Journal on Software Maintenance: Research and Practice},
  volume = {7},
  pages = {49--62},
  year = {1995},
  number = {1}}

@misc{Wilk19a,
  author = {Hern{\'a}n Wilkinson},
  title = {LiveTyping in Action - Automatic Type Annotation for Dynamically Typed Languages - Demo},
  year = {2019}}

@inproceedings{Wilk19b,
  author = {Wilkinson, Hern\'{a}n},
  title = {VM Support for Live Typing: Automatic Type Annotation for Dynamically Typed Languages},
  booktitle = {Proceedings of the Conference Companion of the 3rd International Conference on Art, Science, and Engineering of Programming},
  publisher = {Association for Computing Machinery},
  year = {2019},
  url = {https://doi.org/10.1145/3328433.3328443},
  doi = {10.1145/3328433.3328443},
  abstract = {Live Typing automatically annotates variable types based on the objects assigned to them, and method return types based on the returned objects. IDEs can exploit this information to greatly improve the development tools and the programming experience, bringing some of the benefits of Static Typing tools to Dynamically Typed Languages.Live Typing benefits are boosted in Live Development Environments because the same VM is used to run the system under development and the IDE. Type information can be obtained from the running code no matter if that code is part of the language's core, the development tools, or the system under development. The more code is run the more type info it will provide.For Live Typing to be usable, the VM has to collect the information as fast as possible, in objects that have to be accessed and configured from the development environment. This paper presents how the OpenSmalltalk-VM was modified to accomplish this task and the challenges we have for future versions.},
  address = {New York, NY, USA},
  articleno = {9},
  isbn = {9781450362573},
  keywords = {static typing, live development environments, virtual machine, live typing, dynamic typing},
  location = {Genova, Italy},
  numpages = {3},
  series = {Programming '19}}

@inproceedings{Wilk91a,
  author = {Michael R. Wilk},
  title = {Equate: An Object-Oriented Constraint Solver},
  booktitle = {Proceedings OOPSLA '91},
  volume = {26},
  pages = {286--298},
  year = {1991},
  month = nov}

@book{Wilk95a,
  author = {Nancy M. Wilkinson},
  title = {Using CRC Cards --- An Informal Approach to Object-Oriented Development},
  publisher = {Cambridge University Press},
  year = {1995}}

@article{Will05a,
  author = {Williams, C.C. and Hollingsworth, J.K.},
  title = {Automatic mining of source code repositories to improve bug finding techniques},
  journal = {Software Engineering, IEEE Transactions on},
  volume = {31},
  pages = {466 - 480},
  year = {2005},
  month = {jun},
  number = {6}}

@inproceedings{Will05b,
  author = {Willmor, D. and Embury, S.M.},
  title = {A safe regression test selection technique for database-driven applications},
  booktitle = {Software Maintenance, 2005. {ICSM}'05. Proceedings of the 21st IEEE International Conference on},
  pages = {421-430},
  year = {2005},
  doi = {10.1109/ICSM.2005.15},
  issn = {1063-6773},
  keywords = {database management systems;program diagnostics;program testing;software maintenance;database management system;database-driven application;safe regression test selection;software maintenance;Application software;Computer science;Costs;Databases;Hardware;Performance evaluation;Safety;Software systems;Software testing;System testing},
  month = {sep}}

@inproceedings{Will06,
  author = {Willis, Darren and Pearce, David J and Noble, James},
  title = {Efficient object querying for java},
  booktitle = {European Conference on Object-Oriented Programming},
  pages = {28--49},
  year = {2006},
  organization = {Springer}}

@inproceedings{Will12,
  author = {Williams, James R. and Paige, Richard F. and Polack, Fiona A. C.},
  title = {Searching for Model Migration Strategies},
  booktitle = {Proceedings of the 6th International Workshop on Models and Evolution},
  pages = {39 to 44},
  publisher = {Association for Computing Machinery},
  year = {2012},
  url = {https://doi.org/10.1145/2523599.2523607},
  doi = {10.1145/2523599.2523607},
  abstract = {Metamodels, like many software artefacts, are subject to evolution. If a metamodel evolves, models that previously conformed to the metamodel may become non-conformant, and must be migrated to reestablish conformance. Manually migrating models can be tedious and error prone, and a number of solutions have arisen to aid in the creation of a migration strategy - a model transformation which automates the migration. This paper asks whether we can make use of research in the field of Search-Based Software Engineering to automatically discover migration strategies, and discusses the challenges involved. In particular, we explore how tools that provide coupled evolution of metamodels and models provide a suitable platform for which to apply search techniques.},
  address = {New York, NY, USA},
  isbn = {9781450317986},
  location = {Innsbruck, Austria},
  numpages = {6},
  series = {ME '12}}

@incollection{Will81a,
  author = {R.R. Willis},
  title = {{AIDES}: Computer Aided Design of Software Systems --- {II}},
  booktitle = {Software Engineering Environments},
  pages = {27--48},
  publisher = {North-Holland Publishing Co.},
  year = {1981},
  editor = {H. H{\"u}nke}}

@article{Will81b,
  author = {Rudolf Wille},
  title = {Restructuring Lattice Theory: An Approach Based on Hierarchies of Concepts},
  journal = {Ordered Sets, Ivan Rival Ed., NATO Advanced Study Institute},
  volume = {83},
  pages = {445--470},
  year = {1981},
  month = sep}

@article{Will83a,
  author = {Geoff Williams},
  title = {The Lisa Computer System},
  journal = {Byte},
  volume = {8},
  pages = {33--50},
  year = {1983},
  month = feb,
  number = {2}}

@article{Will84a,
  author = {Geoff Williams},
  title = {The Apple Macintosh Computer},
  journal = {Byte},
  volume = {9},
  pages = {30--54},
  year = {1984},
  number = {2}}

@inproceedings{Will87a,
  author = {Ifor Williams and Mario Wolczko and Trevor Hopkins},
  title = {Dynamic Grouping in an Object-Oriented Virtual Memory Hierarchy},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {79--88},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@inproceedings{Will91a,
  author = {Alan Wills},
  title = {Capsules and Types in Fresco},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {59--76},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {P. America},
  month = jul,
  series = {LNCS}}

@inproceedings{Will93a,
  author = {Antony S. Williams},
  title = {The {OLE} 2.0 Object Model},
  booktitle = {ACM OOPS Messenger, Addendum to the Proceedings of OOPSLA 1993},
  volume = {5},
  pages = {68--70},
  year = {1994},
  month = apr}

@inproceedings{Will94a,
  author = {Linda M. Wills},
  title = {Using Attributed Flow Graph Parsing to Recognize Programs},
  booktitle = {Int. Workshop on Graph Grammars and Their Application to Computer Science},
  year = {1994},
  address = {Williamsburg, Virginia},
  ftp = {ftp.cc.gatech.edu//pub/groups/reverse/repository/ggram.ps},
  month = nov}

@article{Will96a,
  author = {Linda Wills and Philip Newcomb},
  title = {Reverse Engineering (Special Issue)},
  journal = {Automated Software Engineering},
  volume = {3},
  pages = {5--172},
  publisher = {Kluwer Academic Publishers},
  year = {1996},
  month = jun,
  number = {1-2}}

@article{Will96b,
  author = {Linda Wills and Cross, II, James H.},
  title = {Recent Trends and Open Issues in Reverse Engineering},
  journal = {Automated Software Engineering},
  volume = {3},
  pages = {165--172},
  publisher = {Kluwer Academic Publishers},
  year = {1996},
  month = jun,
  number = {1-2}}

@inproceedings{Will96c,
  author = {Graham J. Wills},
  title = {Selection: 524,288 Ways to Say "This is Interesting"},
  booktitle = {Proceedings of the 1996 IEEE Symposium on Information Visualization (INFOVIS '96)},
  pages = {54--61},
  publisher = {IEEE},
  year = {1996}}

@inproceedings{Will96d,
  author = {Rudolf Wille},
  title = {Conceptual Structures of Multicontexts},
  booktitle = {Conceptual Structures: Knowledge Representation as Interlingua. Proceedings of the 4th International Conference on Conceptual Structures},
  volume = {1115},
  pages = {23--39},
  year = {1996},
  url = {http://citeseer.nj.nec.com/36991.html},
  series = {LNAI}}

@article{Will99a,
  author = {Graham J. Wills},
  title = {Nicheworks --- Interactive Visualization of Very Large Graphs},
  journal = {Journal of Computational and Graphical Statistics},
  volume = {8},
  pages = {190--212},
  year = {1999},
  number = {2}}

@book{Wils00a,
  author = {Steve Wilson and Jeff Kesselman},
  title = {Java Platform Performance},
  publisher = {Prentice Hall PTR},
  year = {2000},
  url = {http://java.sun.com/docs/books/performance},
  isbn = {978-0201709698}}

@inproceedings{Wils89a,
  author = {Paul R. Wilson and Thomas G. Moher},
  title = {Design of the Opportunistic Garbage Collector},
  booktitle = {Proceedings OOPSLA '89},
  volume = {24},
  pages = {23--36},
  year = {1989},
  month = oct}

@article{Wils91a,
  author = {Wilson, Paul R.},
  title = {Pointer swizzling at page fault time: efficiently supporting huge address spaces on standard hardware},
  journal = {SIGARCH Comput. Archit. News},
  volume = {19},
  pages = {6--13},
  publisher = {ACM},
  year = {1991},
  url = {http://doi.acm.org/10.1145/122576.122577},
  doi = {10.1145/122576.122577},
  acmid = {122577},
  address = {New York, NY, USA},
  issn = {0163-5964},
  month = jul,
  number = {4},
  numpages = {8}}

@book{Wils93a,
  author = {Leslie B. Wilson and Robert G. Clark},
  title = {Comparative Programming Languages},
  publisher = {Addison Wesley},
  year = {1993},
  isbn = {0-201-56885-3}}

@techreport{Wimm12,
  author = {Christian Wimmer and Michael Haupt and Michael L. Van De Vanter and Mick Jordan and Laurent Daynes and Douglas Simon},
  title = {{Maxine: An Approachable Virtual Machine For, and In, Java}},
  year = {2012},
  institution = {Oracle Labs},
  number = {2012-0098}}

@inproceedings{Wimm12a,
  author = {Wimmer, Christian and W{\"u}rthinger, Thomas},
  title = {Truffle: a self-optimizing runtime system},
  booktitle = {Proceedings of the 3rd annual conference on Systems, programming, and applications: software for humanity},
  pages = {13--14},
  year = {2012}}

@inproceedings{Wimm12b,
  author = {Wimmer, Christian and Brunthaler, Stefan and Larsen, Per and Franz, Michael},
  title = {Fine-Grained Modularity and Reuse of Virtual Machine Components},
  booktitle = {Proceedings of the 11th Annual International Conference on Aspect-Oriented Software Development},
  pages = {203-214},
  publisher = {Association for Computing Machinery},
  year = {2012},
  url = {https://doi.org/10.1145/2162049.2162073},
  doi = {10.1145/2162049.2162073},
  abstract = {Modularity is a key concept for large and complex applications and an important enabler for collaborative research. In comparison, virtual machines (VMs) are still mostly monolithic pieces of software. Our goal is to significantly reduce to the cost of extending VMs to efficiently host and execute multiple, dynamic languages. We are designing and implementing a VM following the "everything is extensible" paradigm. Among the novel use cases that will be enabled by our research are: VM extensions by third parties, support for multiple languages inside one VM, and a universal VM for mobile devices.Our research will be based on the existing state of the art. We will reuse an existing metacircular Java VM and an existing dynamic language VM implemented in Java. We will split the VMs into fine-grained modules, define explicit interfaces and extension points for the modules, and finally re-connect them.Performance is one of the most important concerns for VMs. Modularity improves flexibility but can introduce an unacceptable performance overhead at the module boundaries, e.g., for inter-module method calls. We will identify this overhead and address it with novel feedback-directed compiler optimizations. These optimizations will also improve the performance of modular applications running on top of our VM.The expected results of our research will be not only new insights and a new design approach for VMs, but also a complete reference implementation of a modular VM where everything is extensible by third parties and that supports multiple languages.},
  address = {New York, NY, USA},
  isbn = {9781450310925},
  keywords = {metacircular VM, just-in-time compilation, virtual machine, java, modular VM, optimization, languages, maxine, modularity, performance, dynamic languages},
  location = {Potsdam, Germany},
  numpages = {12},
  series = {AOSD '12}}

@article{Wimm13a,
  author = {Wimmer, Christian and Haupt, Michael and Van De Vanter, Michael L. and Jordan, Mick and Dayn\`{e}s, Laurent and Simon, Douglas},
  title = {Maxine: An approachable virtual machine for, and in, java},
  journal = {ACM Transaction Architecture Code Optimization},
  volume = {9},
  publisher = {ACM},
  year = {2013},
  url = {http://dx.doi.org/10.1145/2400682.2400689},
  doi = {10.1145/2400682.2400689},
  abstract = {A highly productive platform accelerates the production of research results. The design of a Virtual Machine ({VM}) written in the Java programming language can be simplified through exploitation of interfaces, type and memory safety, automated memory management (garbage collection), exception handling, and reflection. Moreover, modern Java {IDEs} offer time-saving features such as refactoring, auto-completion, and code navigation. Finally, Java annotations enable compiler extensions for low-level'' systems programming'' while retaining {IDE} compatibility. These techniques collectively make complex system software more'' approachable'' than has been typical in the past. The Maxine {VM}, a metacircular Java {VM} implementation, has aggressively used these features since its inception. A co-designed companion tool, the Maxine Inspector, offers integrated debugging and visualization of all aspects of the {VM}'s runtime state. The Inspector's implementation exploits advanced Java language features, embodies intimate knowledge of the {VM}'s design, and even reuses a significant amount of {VM} code directly. These characteristics make Maxine a highly approachable {VM} research platform and a productive basis for research and teaching.},
  address = {New York, NY, USA},
  issn = {1544-3566},
  month = jan,
  number = {4},
  posted-at = {2013-02-25 13:28:26},
  priority = {2},
  rating = {4},
  read = {1}}

@article{Wimm19a,
  author = {Wimmer, Christian and Stancu, Codrut and Hofer, Peter and Jovanovic, Vojin and W{\"o}gerer, Paul and Kessler, Peter B and Pliss, Oleg and W{\"u}rthinger, Thomas},
  title = {Initialize once, start fast: application initialization at build time},
  journal = {Proceedings of the ACM on Programming Languages},
  volume = {3},
  pages = {1--29},
  publisher = {ACM New York, NY, USA},
  year = {2019},
  number = {OOPSLA}}

@inproceedings{Win03a,
  author = {Joel Winstead and David Evans},
  title = {Towards Differential Program Analysis},
  booktitle = {Proceedings ICSE International Workshop on Dynamic Analysis (WODA 2003)},
  pages = {37--40},
  year = {2003},
  address = {Portland, Oregon},
  month = may}

@book{Wind98a,
  author = {Russel Winder and Graham Roberts},
  title = {Developing {Java} Software},
  publisher = {Wiley},
  year = {1998}}

@misc{Wing04a,
  author = {Eric Winger},
  title = {Pragmas: Running tests on method change},
  year = {2004},
  url = {http://www.cincomsmalltalk.com/userblogs/eric/blogView?entry=3265627283},
  note = {\url{www.cincomsmalltalk.com/userblogs/eric/blogView?entry=3265627283}, Retrieved August 10th 2006}}

@article{Wing06a,
  author = {Jeannette M. Wing},
  title = {Computational thinking},
  journal = {Commun. ACM},
  volume = {49},
  pages = {33--35},
  publisher = {ACM},
  year = {2006},
  url = {http://www.cs.cmu.edu/afs/cs/usr/wing/www/publications/Wing06.pdf},
  doi = {10.1145/1118178.1118215},
  abstract = {It represents a universally applicable attitude and
skill set everyone, not just computer scientists,
would be eager to learn and use.},
  address = {New York, NY, USA},
  issn = {0001-0782},
  month = mar,
  number = {3},
  posted-at = {2009-09-08 17:16:14},
  priority = {2}}

@inproceedings{Wing94a,
  author = {Jeannette M. Wing},
  title = {Decomposing and Recomposing Transactional Concepts},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {111--121},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {Distributed systems are different from concurrent
(and parallel) systems because they need to deal
with failures, not just concurrency. Transactions
are a way of masking the distributed nature of a
computation at the programming language level by
transforming all failures into aborted transactions.
If a communication link goes down or a node crashes,
the transaction simply aborts. Users may try again
later to rerun their computation, but they are at
least guaranteed that the system is left in some
consistent state. Transactions are a well-known and
fundamental control abstraction that arose out of
the database community. They have three properties
that distinguish them from normal sequential
processes: (1) A transaction is a sequence of
operations that is performed atomically
("all-or-nothing"). If it completes successfully, it
commits ; otherwise, it aborts ; (2) concurrent
transactions are serializable (appear to occur
one-at-a-time), supporting the principle of
isolation; and (3) effects of committed transactions
are persistent (survive failures).},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@inproceedings{Wink92a,
  author = {J{\"u}rgen Winkler and George Die{\ss}l},
  title = {Object {CHILL} 00 An Object-Oriented Language for Systems Implementaion},
  booktitle = {Proceedings 1992 ACM Computer Science Conference},
  pages = {139--147},
  year = {1992},
  misc = {March 3-5},
  address = {Kansas City},
  month = mar}

@book{Wins84a,
  author = {P.H. Winston and B.K.P. Horn},
  title = {{LISP}},
  publisher = {Addison Wesley},
  year = {1984},
  address = {Reading, Mass.},
  edition = {second}}

@article{Wins87a,
  author = {Morton E. Winston and Roger Chaffin and Douglas Herrmann},
  title = {A Taxonomy of Part-Whole Relations},
  journal = {Cognitive Science},
  volume = {11},
  pages = {417--444},
  year = {1987}}

@book{Winst98a,
  author = {Patrick Henry Winston},
  title = {On to {Smalltalk}},
  publisher = {Addison Wesley},
  year = {1998}}

@inproceedings{Wint19a,
  author = {Winter, Jos and Aniche, Maur{\'\i}cio and Cito, J{\"u}rgen and Deursen, Arie van},
  title = {Monitoring-aware IDEs},
  booktitle = {Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  pages = {420--431},
  year = {2019}}

@book{Wirf03,
  author = {Rebecca Wirfs-Brock and Alan McKean},
  title = {Object Design --- Roles, Responsibilities and Collaborations},
  publisher = {Addison-Wesley},
  year = {2003},
  isbn = {0-201-37943-0}}

@book{Wirf03a,
  author = {Rebecca Wirfs-Brock and Alan McKean},
  title = {Object Design --- Roles, Responsibilities and Collaborations},
  publisher = {Addison-Wesley},
  year = {2003},
  isbn = {0-201-37943-0}}

@inproceedings{Wirf88a,
  author = {Allen Wirfs-Brock and Brian Wilkerson},
  title = {An Overview of Modular {Smalltalk}},
  booktitle = {Proceedings OOPSLA '88},
  pages = {123--134},
  year = {1988},
  month = nov}

@inproceedings{Wirf88b,
  author = {Rebecca Wirfs-Brock},
  title = {An Integrated Color {Smalltalk}-80 System},
  booktitle = {Proceedings OOPSLA '88},
  pages = {71--82},
  year = {1988},
  month = nov}

@inproceedings{Wirf89a,
  author = {Rebecca Wirfs-Brock and Brian Wilkerson},
  title = {Object-Oriented Design: {A} Responsibility-Driven Approach},
  booktitle = {Proceedings OOPSLA '89},
  pages = {71--76},
  year = {1989},
  doi = {10.1145/74877.74885},
  month = oct}

@article{Wirf90a,
  author = {Rebecca Wirfs-Brock and Ralph E. Johnson},
  title = {Surveying Current Research in Object-Oriented Design},
  journal = {Communications of the ACM},
  volume = {33},
  pages = {104--124},
  year = {1990},
  month = sep,
  number = {9}}

@book{Wirf90b,
  author = {Rebecca Wirfs-Brock and Brian Wilkerson and Lauren Wiener},
  title = {Designing Object-Oriented Software},
  publisher = {Prentice-Hall},
  year = {1990},
  isbn = {0-13-629825-7}}

@book{Wirf95a,
  title = {Proceedings of {OOPSLA}'95},
  publisher = {ACM Press},
  year = {1995},
  editor = {Rebecca Wirfs-Brock},
  isbn = {0-201-87810-0}}

@misc{Wirf96a,
  author = {Allen Wirfs-Brock},
  title = {Subsystems --- Proposal},
  year = {1996},
  howpublished = {OOPSLA 1996 Extending Smalltalk Workshop},
  month = oct}

@incollection{Wirs90a,
  author = {Martin Wirsing},
  title = {Algebraic Specification},
  chapter = {13},
  booktitle = {Handbook of Theoretical Computer Science},
  volume = {Formal Models and Semantics},
  pages = {675--788},
  publisher = {The MIT Press},
  year = {1990},
  address = {New York, NY},
  editor = {J. van Leewen}}

@techreport{Wirs94a,
  author = {Martin Wirsing and Friederike Nickl and Ulrike Lechner},
  title = {Concurrent Object-Oriented Design Specification in {SPECTRUM}},
  year = {1994},
  institution = {Universit{\"a}t M{\"u}nchen},
  month = dec,
  number = {9418},
  type = {Bericht}}

@article{Wirt06a,
  author = {Niklaus Wirth},
  title = {Good Ideas, through the Looking Glass},
  journal = {Computer},
  volume = {39},
  pages = {28--39},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/MC.2006.20},
  abstract = {Computing's history has been driven by many good and
original ideas, but a few turned out to be less
brilliant than they first appeared to be.},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {1}}

@article{Wirt66,
  author = {Wirth, Niklaus and Weber, Helmut},
  title = {EULER: a generalization of ALGOL and it formal definition: Part 1},
  journal = {Communications of the ACM},
  volume = {9},
  pages = {13--25},
  publisher = {ACM New York, NY, USA},
  year = {1966},
  number = {1}}

@article{Wirt66a,
  author = {Wirth, Niklaus and Hoare, Charles Antony Richard},
  title = {A contribution to the development of ALGOL},
  journal = {Communications of the ACM},
  volume = {9},
  pages = {413--432},
  publisher = {ACM New York, NY, USA},
  year = {1966},
  number = {6}}

@article{Wirt77a,
  author = {Niklaus Wirth},
  title = {What can we do about the unnecessary diversity of notation for syntactic definitions?},
  journal = {Commun. ACM},
  volume = {20},
  pages = {822--823},
  publisher = {ACM},
  year = {1977},
  doi = {10.1145/359863.359883},
  address = {New York, NY, USA},
  issn = {0001-0782},
  number = {11}}

@book{Wirt83a,
  author = {Niklaus Wirth},
  title = {Programming in Modula-2},
  publisher = {Springer-Verlag},
  year = {1983},
  address = {Berlin}}

@book{Wirt87a,
  author = {N. Wirth},
  title = {Algorithmes et structures de donn\'ees},
  publisher = {Eyrolles},
  year = {1987},
  address = {Paris}}

@book{Wirt92a,
  author = {Niklaus Wirth and Jurg Gutknecht},
  title = {Project Oberon: The Design of an Operating System and Compiler},
  publisher = {MIT Press},
  year = {1992},
  isbn = {0-201-54428-8}}

@inproceedings{Wise92a,
  author = {Michael J. Wise},
  title = {Detection of Similarities in Student Programs: {YAP}'ing may be preferable to Plague'ing},
  booktitle = {Twenty-Third SIGSCE Technical Symposium},
  pages = {268--271},
  year = {1992},
  location = {Kansas City, USA}}

@inproceedings{Wise95a,
  author = {Michael J. Wise},
  title = {Neweyes: A System for Comparing Biological Sequences Using the Running Karp-Rabin Greedy String-Tiling Algorithm},
  booktitle = {Proceedings Third International Conference on Intelligent Systems for Molecular Biology},
  pages = {393--401},
  year = {1995},
  month = jul}

@article{Wise95b,
  author = {James A. Wise and James J. Thomas and Kelly Pennock and David Lantrip and Marc Pottier and Anne Schur and Vern Crow},
  title = {Visualizing the non-visual: spatial analysis and interaction with information from text documents},
  journal = {infovis},
  volume = {00},
  pages = {51},
  publisher = {IEEE Computer Society},
  year = {1995},
  doi = {10.1109/INFVIS.1995.528686},
  address = {Los Alamitos, CA, USA},
  isbn = {0-8186-7201-3}}

@article{Wise96a,
  author = {Michael J. Wise},
  title = {{YAP3}: Improved Detection of Similarities in Computer Program and Other Texts},
  journal = {SIGCSE Bulletin (ACM Special Interest Group on Computer Science Education)},
  volume = {28},
  year = {1996},
  url = {http://citeseer.ist.psu.edu/wise96yap.html}}

@article{Wise99a,
  author = {James A. Wise},
  title = {The ecological approach to text visualization},
  journal = {J. Am. Soc. Inf. Sci.},
  volume = {50},
  pages = {1224--1233},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1999},
  doi = {10.1002/(SICI)1097-4571(1999)50:13<1224::AID-ASI8>3.0.CO;2-4},
  address = {New York, NY, USA},
  issn = {0002-8231},
  number = {13}}

@article{Wish69a,
  author = {David Wishart},
  title = {Mode Analysis: A Generalization of {Nearest Neighbour} which reduces chaining effects},
  journal = {Numerical Taxonomy},
  year = {1969},
  editor = {A. J. Cole}}

@book{Wiss90a,
  author = {P. Wisskirchen},
  title = {Object-Oriented Graphics},
  publisher = {Springer-Verlag},
  year = {1990},
  address = {Heidelberg}}

@book{Witt00a,
  author = {Ian Witten and Eibe Frank},
  title = {Data Mining},
  publisher = {Morgan Kauffmann},
  year = {2000},
  isbn = {1-55860-552-5}}

@mastersthesis{Witt03a,
  author = {A. Wittmann},
  title = {Towars {Caesar}: Family polymorphism for {Java}},
  year = {2003},
  school = {Technische Universit\"at Darmstadt, Fachbereich Informatik},
  type = {Diploma thesis}}

@book{Witt53a,
  author = {Ludwig Wittgenstein},
  title = {Philosophische Untersuchungen},
  publisher = {Blackwell, Oxford},
  year = {1953},
  location = {Oxford}}

@inproceedings{Wlod19a,
  author = {W{\l}odarski, Leszek and Pereira, Boris and Povazan, Ivan and Fabry, Johan and Zaytsev, Vadim},
  title = {Qualify First! A Large Scale Modernisation Report},
  booktitle = {2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
  pages = {569--573},
  year = {2019},
  organization = {IEEE}}

@inproceedings{Wlok09a,
  author = {Jan Wloka and Barbara Ryder and Frank Tip and Xiaoxia Ren},
  title = {Safe-Commit analysis to Facilitate Team Software Development},
  booktitle = {Proceeding ICSE '09 Proceedings of the 31st International Conference on Software Engineering},
  pages = {507-517},
  year = {2009},
  abstract = {Software development teams exchange source code in shared repositories. These repositories are kept consistent by having developers follow a commit policy, such as "Program edits can be committed only if all available tests succeed.'' Such policies may result in long intervals between commits, increasing the likelihood of duplicative develop- ment and merge conflicts. Furthermore, commit policies are generally not automatically enforceable.
We present a program analysis to identify committable changes that can be released early, without causing failures of existing tests, even in the presence of failing tests in a developer's local workspace. The algorithm can support relaxed commit policies that allow early release of changes, reducing the potential for merge conflicts. In experiments using several versions of a non-trivial software system with failing tests, 3 newly enabled commit policies were shown to allow a significant percentage of changes to be committed.},
  annote = {inproceedings},
  date-added = {2014-09-17 15:09:08 +0000},
  date-modified = {2014-09-17 15:15:57 +0000}}

@article{Wobb07a,
  author = {Wobber, Ted and Yumerefendi, Aydan and Abadi, Mart\'{\i}n and Birrell, Andrew and Simon, Daniel R.},
  title = {Authorizing applications in singularity},
  journal = {SIGOPS Oper. Syst. Rev.},
  volume = {41},
  pages = {355--368},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1272998.1273033},
  address = {New York, NY, USA},
  issn = {0163-5980},
  number = {3}}

@inproceedings{Wohe18a,
  author = {W\"ohrer, Maximilian and Zdun, Uwe},
  title = {Smart Contracts: Security Patterns in the Ethereum Ecosystem and Solidity},
  booktitle = {1st International Workshop on Blockchain Oriented Software Engineering (IWBOSE)},
  year = {2018}}

@book{Wohl00a,
  author = {Claes Wohlin and Per Runeson and Martin H\"{o}st and Magnus C. Ohlsson and Bj\"{o}orn Regnell and Anders Wessl\'{e}n},
  title = {Experimentation in software engineering: an introduction},
  publisher = {Kluwer Academic Publishers},
  year = {2000},
  address = {Norwell, MA, USA},
  isbn = {0-7923-8682-5}}

@phdthesis{Wojc00a,
  author = {Pawel T. Wojciechowski},
  title = {Nomadic {Pict}: Language and Infrastructure Design for Mobile Computation},
  year = {2000},
  school = {Wolfson College, University of Cambridge},
  month = mar}

@inproceedings{Wolc87a,
  author = {Mario Wolczko},
  title = {Semantics of {Smalltalk}-80},
  booktitle = {Proceedings ECOOP '87},
  volume = {276},
  pages = {108--120},
  publisher = {Springer-Verlag},
  year = {1987},
  misc = {June 15-17},
  address = {Paris, France},
  editor = {J. B\'ezivin and J-M. Hullot and P. Cointe and H. Lieberman},
  month = jun,
  series = {LNCS}}

@article{Wolc92a,
  author = {Mario Wolczko},
  title = {Encapsulation, delegation and inheritance in object-oriented languages},
  journal = {IEEE Software Engineering Journal},
  volume = {7},
  pages = {95--102},
  publisher = {IEEE},
  year = {1992},
  month = mar,
  number = {2}}

@techreport{Wolc96a,
  author = {Mario Wolczko and Ole Agesen and David Ungar},
  title = {Towards a Universal Implementation Substrate for Object-Oriented Languages},
  year = {1996},
  institution = {Sun Labs},
  note = {96-0506}}

@book{Wolf02a,
  author = {Stephen Wolfram},
  title = {A New Kind of Science},
  publisher = {Wolfram Media Inc.},
  year = {2002}}

@inproceedings{Wolf09a,
  author = {Wolf, Timo and Schroter, Adrian and Damian, Daniela and Nguyen, Thanh},
  title = {Predicting Build Failures Using Social Network Analysis on Developer Communication},
  booktitle = {Proceedings of the 31st International Conference on Software Engineering},
  pages = {1--11},
  publisher = {IEEE Computer Society},
  year = {2009},
  url = {http://dx.doi.org/10.1109/ICSE.2009.5070503},
  doi = {10.1109/ICSE.2009.5070503},
  acmid = {1555017},
  address = {Washington, DC, USA},
  isbn = {978-1-4244-3453-4},
  numpages = {11},
  series = {ICSE '09}}

@article{Wolf13,
  author = {Wolfswinkel, Joost F and Furtmueller, Elfi and Wilderom, Celeste PM},
  title = {Using grounded theory as a method for rigorously reviewing literature},
  journal = {European journal of information systems},
  volume = {22},
  pages = {45--55},
  publisher = {Taylor \& Francis},
  year = {2013},
  number = {1}}

@inproceedings{Wolf92a,
  author = {David Wolfram and Joseph A. Goguen},
  title = {A Sheaf Semantics for {FOOPS} Expressions},
  booktitle = {Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing},
  volume = 612,
  pages = {81--98},
  publisher = {Springer-Verlag},
  year = {1992},
  editor = {Mario Tokoro and Oscar Nierstrasz and Peter Wegner},
  series = {LNCS}}

@inproceedings{Woli91a,
  author = {Francis Wolinski and Jean-Fran{\c{c}}ois Perrot},
  title = {Representation of Complex Objects: Multiple Facets with Part-Whole Hierarchies},
  booktitle = {Proceedings ECOOP '91},
  volume = 512,
  pages = {288--306},
  publisher = {Springer-Verlag},
  year = {1991},
  misc = {July 15--19},
  address = {Geneva, Switzerland},
  editor = {Pierre America},
  month = jul,
  series = {LNCS}}

@book{Woma96a,
  author = {James P. Womack and Daniel T. Jones},
  title = {Lean Thinking},
  publisher = {Simon \& Schuster},
  year = {1996}}

@article{Wong00a,
  author = {Eric Wong and Swapna Gokhale and Joseph Horgan},
  title = {Quantifying the closeness between program components and features},
  journal = {Journal of Systems and Software},
  volume = {54},
  pages = {87--98},
  year = {2000},
  number = {2}}

@article{Wong03a,
  author = {Pak Chung Wong and Kwong Kwok Wong and Harlan Foote and Jim Thomas},
  title = {Global Visualization and Alignments of Whole Bacterial Genomes},
  journal = {IEEE Transactions On Visualization and Computer Graphics},
  volume = {9},
  pages = {361--377},
  year = {2003},
  month = jul,
  number = {3}}

@article{Wong16a,
  author = {Wong, Eric W. and Gao, Ruizhi and Abreu, Rui and Wotawa, Franz},
  title = {A Survey on Software Fault Localization},
  journal = {IEEE Transactions on Software Engineering},
  volume = {42},
  pages = {707-740},
  year = {2016},
  number = {8}}

@article{Wong94a,
  author = {Kenny Wong and Scott R. Tilley and Hausi A. M{\"u}ller and Margaret-Anne D. Storey},
  title = {Structural Redocumentation: {A} Case Study},
  journal = {IEEE Software},
  year = {1994},
  month = jan}

@article{Wong95a,
  author = {Kenny Wong and Scott R. Tilley and Hausi A. M{\"u}ller and Margaret-Anne D. Storey},
  title = {Structural Redocumentation: A Case Study},
  journal = {IEEE Software},
  volume = {12},
  pages = {46--54},
  publisher = {IEEE},
  year = {1995},
  month = jan,
  number = {1}}

@inproceedings{Wong97a,
  author = {W. E. Wong and J. R. Horgan and S. London and H. Agrawal},
  title = {A Study of Effective Regression Testing in Practice},
  booktitle = {Proceedings of the Eighth International Symposium on Software Reliability Engineering},
  pages = {230--238},
  year = {1997},
  month = nov}

@techreport{Wong98a,
  author = {Kenny Wong},
  title = {The Rigi User's Manual --- Version 5.4.4},
  year = {1998},
  institution = {University of Victoria}}

@article{Wong99a,
  author = {W. Eric Wong and Joseph R. Horgan and Swapna S. Gokhale and Kishor S. Trivedi},
  title = {Locating Program Features using Execution Slices},
  journal = {asset},
  volume = {00},
  pages = {194},
  publisher = {IEEE Computer Society},
  year = {1999},
  doi = {10.1109/ASSET.1999.756769},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7695-0122-2}}

@phdthesis{Wong99b,
  author = {Wong, Kenny},
  title = {The Reverse Engineering Notebook},
  year = {1999},
  school = {Pennsylvania State University}}

@article{Woo85a,
  author = {Carson Woo and Frederick H. Lochovsky},
  title = {An Object-Based Approach to Modelling Office Work},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {14--22},
  year = {1985},
  month = dec,
  number = {4}}

@article{Woo86a,
  author = {Carson Woo and Frederick H. Lochovsky},
  title = {Supporting Distributed Office Problem Solving in Organizations},
  journal = {ACM TOOIS},
  volume = {4},
  pages = {185--204},
  year = {1986},
  month = jul,
  number = {3}}

@article{Wood18a,
  author = {Gavin Wood},
  title = {Ethereum: A Secure Decentralised Generalised Transaction Ledger},
  journal = {Ethereum Yellow Paper. Byzantium Version e94ebda},
  pages = {1-39},
  year = {2018},
  url = {https://ethereum.github.io/yellowpaper/paper.pdf},
  month = {jun}}

@article{Wood99a,
  author = {Woods, Steven G. and Carri\`{e}re, S. Jeromy and Kazman, Rick},
  title = {The Perils and Joys of Reconstructing Architectures},
  journal = {SEI Interactive, The Architect},
  volume = 2,
  year = {1999},
  issue = 3,
  month = sep}

@misc{Wool95a,
  author = {Michael Wooldridge and Nicholas Jennings},
  title = {Intelligent Agents},
  year = {1995},
  series = {LNAI 890}}

@inproceedings{Wool96a,
  author = {Bobby Woolf},
  title = {The Null Object Pattern},
  booktitle = {Design Patterns, PLoP 1996},
  publisher = {Robert Allerton Park and Conference Center, University of Illinois at Urbana-Champaign, Monticello, Illinois},
  year = {1996}}

@incollection{Wool98a,
  author = {Bobby Woolf},
  title = {Null Object},
  booktitle = {Pattern Languages of Program Design 3},
  pages = {5--18},
  publisher = {Addison Wesley},
  year = {1998},
  editor = {Robert Martin and Dirk Riehle and Frank Buschmann}}

@inproceedings{Work85a,
  author = {David Workman and Farahangiz Arefi and Mahesh Dodani},
  title = {{GRIP}: {A} Formal Framework for Developing a Support Environment for Graphical Interactive Programming},
  booktitle = {Proceedings of Software Tools '85},
  pages = {138--203},
  publisher = {IEEE Computer Society},
  year = {1985}}

@article{Work86a,
  author = {{OOP Workshop}},
  title = {Object-Oriented Programming Workshop},
  journal = {ACM SIGPLAN Notices (Special Issue)},
  volume = {21},
  year = {1986},
  editor = {P. Wegner and B. Shriver},
  institution = {OOP Workshop},
  month = oct,
  number = {10}}

@inproceedings{Woss14a,
  author = {Andreas W\"oss and Christian Wirth and Daniele Bonetta and Chris Seaton and Christian Humer},
  title = {An Object Storage Model for the {Truffle} Language Implementation Framework},
  booktitle = {{PPPJ'14}},
  year = {2014}}

@article{Wozn13a,
  author = {Wozniak, Justin and Armstrong, Timothy and Wilde, Michael and Katz, Daniel S. and Lusk, Ewing and Foster, Ian},
  title = {Swift/T: scalable data flow programming for many-task applications},
  journal = {ACM SIGPLAN Notices},
  volume = {48},
  pages = {309},
  year = {2013},
  doi = {10.1145/2517327.2442559},
  month = {feb}}

@inproceedings{Wrig10a,
  author = {Tobais Wrigstad and Francesco Zappa Nardelli and Sylvain Lebresne and Johan \"{O}stlund and Jan Vitek},
  title = {Integrating typed and untyped code in a scripting language},
  booktitle = {Proceedings of the 37th Symposium on Principles of Programming Languages},
  pages = {377--388},
  publisher = {ACM},
  year = {2010},
  doi = {10.1145/1706299.1706343}}

@article{Wrig94a,
  author = {Andrew K. Wright and Matthias Felleisen},
  title = {A syntactic approach to type soundness},
  journal = {Inf. Comput.},
  volume = {115},
  pages = {38--94},
  publisher = {Academic Press, Inc.},
  year = {1994},
  doi = {10.1006/inco.1994.1093},
  address = {Duluth, MN, USA},
  issn = {0890-5401},
  number = {1}}

@techreport{Wrob02a,
  author = {Nicolas Wrobel},
  title = {Projektarbeit im Rahmen der Universit\"at Bern},
  year = {2002},
  url = {http://scg.unibe.ch/archive/projects/Wrob02a.pdf},
  institution = {University of Bern},
  month = may,
  type = {Informatikprojekt}}

@inproceedings{Wu00a,
  author = {Jingwei Wu and Margaret-anne D. Storey},
  title = {A multi-perspective software visualization environment},
  booktitle = {In Proc. of CASCON2000},
  pages = {41--50},
  publisher = {IBM Press},
  year = {2000}}

@book{Wu03a,
  author = {Wu, Weili and Xiong, Hui and Shekhar, Shashi},
  title = {Clustering and Information Retrieval (Network Theory and Applications)},
  publisher = {Kluwer Academic Publishers},
  year = {2003},
  address = {Norwell, MA, USA},
  isbn = {1402076827}}

@inproceedings{Wu04a,
  author = {Jingwei Wu and Richard Holt and Ahmed Hassan},
  title = {Exploring Software Evolution Using Spectrographs},
  booktitle = {Proceedings of 11th Working Conference on Reverse Engineering ({WCRE} 2004)},
  pages = {80--89},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA},
  month = nov}

@inproceedings{Wu04b,
  author = {Xiaomin Wu and Adam Murray and Margaret-Anne Storey and Rob Lintern},
  title = {A Reverse Engineering Approach to Support Software Maintenance: Version Control Knowledge Extraction},
  booktitle = {Proceedings of 11th Working Conference on Reverse Engineering ({WCRE} 2004)},
  pages = {90--99},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA},
  month = nov}

@inproceedings{Wu04c,
  author = {Lei Wu and Houari Sahraoui and Petko Valtchev},
  title = {Program Comprehension With Dynamic Recovery of Code Collaboration Patterns and Roles},
  booktitle = {CASCON'04: Proceedings of the 2004 conference of the Centre for Advanced Studies on Collaborative research},
  pages = {56--67},
  publisher = {IBM Press},
  year = {2004},
  location = {Markham, Ontario, Canada}}

@inproceedings{Wu05a,
  author = {Hui Wu and Jeff Gray and Suman Roychoudhury and Marjan Mernik},
  title = {Weaving a debugging aspect into domain-specific language grammars},
  booktitle = {SAC '05: Proceedings of the 2005 ACM symposium on Applied computing},
  pages = {1370--1374},
  publisher = {ACM Press},
  year = {2005},
  doi = {10.1145/1066677.1066986},
  address = {New York, NY, USA},
  isbn = {1-58113-964-0},
  location = {Santa Fe, New Mexico}}

@inproceedings{Wu10a,
  author = {Wu, Wei and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Antoniol, Giuliano and Kim, Miryung},
  title = {Aura: a hybrid approach to identify framework evolution},
  booktitle = {International {C}onference on {S}oftware {E}ngineering ({ICSE})},
  volume = {1},
  pages = {325--334},
  year = {2010},
  organization = {IEEE}}

@article{Wu84a,
  author = {M. Wu and T. Hwang},
  title = {Access Control with Single-Key-Lock},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-10},
  pages = {185--191},
  year = {1984},
  month = mar,
  number = {3}}

@inproceedings{Wu92a,
  author = {Sun Wu and Udi Manber},
  title = {AGREP --- A fast approximate pattern matching tool},
  booktitle = {Proceedings of the Usenix Winter 1992 Technical Conference},
  pages = {153-162},
  year = {1992}}

@inproceedings{Wu97a,
  author = {Wu, Bing and Lawless, Deirdre and Bisbal, Jesus and Richardson, Ray and Grimson, Jane and Wade, Vincent and O'Sullivan, Donie},
  title = {The butterfly methodology: A gateway-free approach for migrating legacy information systems},
  booktitle = {Proceedings. Third IEEE International Conference on Engineering of Complex Computer Systems (Cat. No. 97TB100168)},
  pages = {200--205},
  year = {1997},
  organization = {IEEE}}

@misc{Wu98a,
  author = {Zhixue Wu},
  title = {Reflective {Java} and a reflective component-based transaction architecture},
  year = {1998},
  note = {In Proceedings of the ACM OOPSLA 98 Workshop on Reflective Programming in Java and C++, Oct. 1998}}

@book{Wuer08a,
  author = {Rolf P. W{\"u}rtz},
  title = {Organic Computing},
  publisher = {Springer-Verlag},
  year = {2008},
  isbn = {978-3-540-77656-7}}

@article{Wulf74a,
  author = {W. Wulf and E. Cohen and W. Corwin and A. Jones and R. Levin and C. Pierson and F. Pollack},
  title = {{HYDRA}: The Kernel of a Multiprocessor Operating System},
  journal = {CACM},
  volume = {17},
  pages = {337--345},
  year = {1974},
  month = jun,
  number = {6}}

@inproceedings{Wur10,
  author = {W\"{u}rthinger, Thomas and Wimmer, Christian and Stadler, Lukas},
  title = {Dynamic code evolution for Java},
  booktitle = {{I}nternational {C}onference on the {P}rinciples and {P}ractice of {P}rogramming in {J}ava ({PPPJ})},
  publisher = {ACM},
  year = {2010}}

@inproceedings{Wur12a,
  author = {W\"{u}rthinger, Thomas and W\"{o}\ss, Andreas and Stadler, Lukas and Duboscq, Gilles and Simon, Doug and Wimmer, Christian},
  title = {Self-optimizing AST Interpreters},
  booktitle = {Symposium on Dynamic Languages},
  year = {2012},
  keywords = {dynamic languages, java, javascript, language implementation, optimization, virtual machine},
  series = {DLS '12}}

@inproceedings{Wur13a,
  author = {W\"{u}rthinger, Thomas and Wimmer, Christian and W\"{o}\ss, Andreas and Stadler, Lukas and Duboscq, Gilles and Humer, Christian and Richards, Gregor and Simon, Doug and Wolczko, Mario},
  title = {One VM to Rule Them All},
  booktitle = {International Symposium on {N}ew {I}deas, {N}ew {P}aradigms, and {R}eflections on {P}rogramming \& {S}oftware ({ONWARD}'13)},
  year = {2013},
  keywords = {dynamic languages, java, javascript, language implementation, optimization, virtual machine}}

@inproceedings{Wurt08a,
  author = {W{\"u}rthinger, Thomas and Wimmer, Christian and M{\"o}ssenb{\"o}ck, Hanspeter},
  title = {Visualization of program dependence graphs},
  booktitle = {International Conference on Compiler Construction},
  pages = {193--196},
  year = {2008},
  organization = {Springer}}

@inproceedings{Wurt10a,
  author = {W\"{u}rthinger, Thomas and Wimmer, Christian and Stadler, Lukas},
  title = {Dynamic Code Evolution for Java},
  booktitle = {Proceedings of the 8th International Conference on the Principles and Practice of Programming in Java},
  pages = {10--19},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1852761.1852764},
  doi = {10.1145/1852761.1852764},
  acmid = {1852764},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0269-2},
  location = {Vienna, Austria},
  numpages = {10},
  series = {PPPJ '10}}

@inproceedings{Wurt10b,
  author = {W{\"u}rthinger, Thomas and Van De Vanter, Michael L. and Simon, Doug},
  title = {Multi-level Virtual Machine Debugging Using the Java Platform Debugger Architecture},
  booktitle = {Perspectives of Systems Informatics},
  pages = {401--412},
  publisher = {Springer},
  year = {2010},
  doi = {10.1007/978-3-642-11486-1_34},
  abstract = {Debugging virtual machines (VMs) presents unique challenges, especially meta-circular VMs, which are written in the same language they implement. Making sense of runtime state for such VMs requires insight and interaction at multiple levels of abstraction simultaneously. For example, debugging a Java VM written in Java requires understanding execution state at the source code, bytecode and machine code levels. However, the standard debugging interface for Java, which has a platform-independent execution model, is itself platform-independent. By definition, such an interface provides no access to platform-specific details such as machine code state, stack and register values. Debuggers for low-level languages such as C and C++, on the other hand, have direct access only to low-level information from which they must synthesize higher-level views of execution state. An ideal debugger for a meta-circular VM would be a hybrid: one that uses standard platform-independent debugger interfaces but which also interacts with the execution environment in terms of low-level, platform-dependent state.},
  isbn = {978-3-642-11486-1}}

@article{Wurt13a,
  author = {W\"{u}rthinger, Thomas and Wimmer, Christian and Stadler, Lukas},
  title = {Unrestricted and Safe Dynamic Code Evolution for Java},
  journal = {Science of Computer Programming},
  volume = {78},
  pages = {481--498},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2013},
  url = {http://dx.doi.org/10.1016/j.scico.2011.06.005},
  doi = {10.1016/j.scico.2011.06.005},
  address = {Amsterdam, The Netherlands, The Netherlands},
  issn = {0167-6423},
  issue_date = {May, 2013},
  month = may,
  number = {5},
  numpages = {18}}

@inproceedings{Wurt17a,
  author = {Thomas W\"urthinger and Christian Wimmer and Christian Humer and Andreas W\"oss and Lukas Stadler and Chris Seaton and Gilles Duboscq and Doug Simon and Matthias Grimmer},
  title = {Practical Partial Evaluation for High-Performance Dynamic Language Runtimes},
  booktitle = {{PLDI'17}},
  year = {2017},
  doi = {10.1145/3140587.3062381}}

@phdthesis{Wuyt01b,
  author = {Wuyts, Roel},
  title = {A Logic Meta-Programming Approach to Support the Co-Evolution of Object-Oriented Design and Implementation},
  year = {2001},
  school = {Vrije Universiteit Brussel},
  url = {http://scg.unibe.ch/archive/phd/Wuyts-phd.pdf}}

@inproceedings{Wuyt01f,
  author = {Roel Wuyts},
  title = {Synchronising Changes to Design and Implementation using a Declarative Meta-Programming Language},
  booktitle = {International Workshop on (Constraint) Logic Programming for Software Engineering},
  year = {2001},
  url = {http://scg.unibe.ch/archive/papers/Wuyt01f.pdf},
  abstract = {When developing software systems, the relation
between design and implementation is typically left
unspecified. As a result design or implementation
can be modified independently of each other, and a
modification of either one does not leave any trace
in the other. The practical result of this is a
number of well-known problems such as drift and
erosion, documentation maintenance problems or
round-trip engineering trouble. To solve these
problems we propose to make the relation between des
ign and implementation explicit by expressing design
as a logic meta program over implementation. This is
the cornerstone for building a complete
synchronisation framework that allows one to
synchronise changes to design and implementation. We
have implem ented such synchronisation framework,
and applied it successfully on two case studies.},
  month = dec}

@book{Wuyt05b,
  author = {Roel Wuyts},
  title = {Proceedings of the Dynamic Languages Symposium 2005},
  publisher = {ACM Digital Library},
  year = {2005},
  isbn = {1-59593-283-6}}

@inproceedings{Wuyt09a,
  author = {Wuyts, Roel and Kienle, Holger and Mens, Kim and van den Brand, Mark and Kuhn, Adrian},
  title = {Academic Software Development Tools and Techniques},
  booktitle = {Object-Oriented Technology. ECOOP 2008 Workshop Reader},
  pages = {87--103},
  year = {2009},
  url = {http://dx.doi.org/10.1007/978-3-642-02047-6_10},
  doi = {10.1007/978-3-642-02047-6_10},
  abstract = {The objective of the 1st International Workshop on
Advanced Software Development Tools and Techniques
(WASDeTT-1) was to provide interested researchers
with a forum to share their tool building
experiences and to explore how tools can be built
more effectively and efficiently. The theme for this
workshop did focus on tools that target
object-oriented languages and that are implemented
with object-oriented languages. This workshop report
provides a brief overview of the presented tools and
of the discussions that took place. The presented
tools, 15 in total, covered a broad range of
functionalities, among them: refactoring, modeling,
behavioral specification, static and dynamic program
checking, user interface composition, and program
understanding. The discussion during the workshop
centered around the following topics: language
independent tools, tool building in an industrial
context, tool building methodology, tool
implementation language, and building tools with
external code.},
  posted-at = {2009-09-14 12:57:56}}

@inproceedings{Wuyt96a,
  author = {Wuyts, Roel},
  title = {Class-management using Logical Queries, Application of a Reflective User Interface Builder},
  booktitle = {Proceedings of GRONICS '96},
  pages = {61--67},
  year = {1996},
  url = {http://scg.unibe.ch/archive/papers/Wuyt96a.pdf},
  editor = {I. Polak}}

@inproceedings{Wuyt98a,
  author = {Roel Wuyts},
  title = {Declarative Reasoning about the Structure Object-Oriented Systems},
  booktitle = {Proceedings of the TOOLS USA '98 Conference},
  pages = {112--124},
  publisher = {IEEE Computer Society Press},
  year = {1998},
  url = {http://scg.unibe.ch/archive/papers/Wuyt98a.pdf}}

@techreport{Wuyt99a,
  author = {Wuyts, Roel and Mens, Kim and D'Hondt, Theo},
  title = {Explicit Support for Software Development Styles throughout the Complete Life Cycle},
  year = {1999},
  url = {http://scg.unibe.ch/archive/papers/Wuyt99a.pdf},
  abstract = {Throughout its entire life cycle software
development is subject to many rules constraining
and guiding construction of software systems.
Examples are best-practice patterns, idioms, coding
conventions, design guidelines, architectural
patterns, etc. Although such regulations are widely
used, their usage is currently implicit or ad-hoc,
and most soft- ware development environments do not
explicitly support them. We present an approach to
declare explicitly software development styles in an
open declarative system that allows querying,
conformance check- ing and enforcement of these
declarations on the source code. We validate the
approach by expressing and supporting several
software development styles in a real-world case.},
  institution = {Vrije Universiteit Brussel},
  number = {vub-prog-tr-99-07}}

@article{Wyat92a,
  author = {Barbara B. Wyatt and Krishna Kavi and Steve Hufnagel},
  title = {Parallelism in Object-Oriented Language: {A} Survey},
  journal = {IEEE Software},
  volume = {9},
  pages = {56--66},
  year = {1992},
  month = nov,
  number = {6}}

@article{Wyck99a,
  author = {P. Wyckoff and S.W. McLaughry and T.J. Lehman and D.A. Ford},
  title = {T Spaces},
  journal = {IBM Systems Journal},
  volume = 37,
  year = {1999},
  number = 3}

@techreport{Wyss04a,
  author = {Christoph Wysseier},
  title = {{CCJun} --- Polymetric Views in Three-dimensional Space},
  year = {2004},
  url = {http://scg.unibe.ch/archive/projects/Wyss04a.pdf},
  abstract = {CodeCrawler is a tool to visualize software systems
using polymetric views as a lightweight reverse
engineering approach. In this project we introduce
the extension CCJun, which enriches the polymetric
views with a third dimension and shows how to
generalize the graphical interface of CodeCrawler.},
  institution = {University of Bern},
  month = jun,
  type = {Informatikprojekt}}

@mastersthesis{Wyss05a,
  author = {Christoph Wysseier},
  title = {Interactive {3-D} Visualization of Feature-Traces},
  year = {2005},
  school = {University of Bern, Switzerland},
  url = {http://scg.unibe.ch/archive/masters/Wyss05a.pdf},
  abstract = {The maintenance or reengineering of object-oriented
system includes its reverse engineering, i.e. their
internal structure and behaviour needs to be
understood. Many researchers proposed different
techniques to support this work by static code or
dynamic behaviour analysis. Whereas the static code
analysis does not explore the behaviour of the
running system, the data collection for the dynamic
behaviour analysis produces a large amount of
data.\\ In this thesis we propose a novel
visualization technique which combines static code
with dynamic behaviour analysis. This technique
supports the software engineer to understand the
behaviour of software systems by visualizing it on
the basis of the internal structure. Using this
technique we focus on features, their detection
within the source code, hotspots of behaviour and
feature interaction as methods to understand how
different features behave in the target software
system.},
  month = nov,
  type = {Master's thesis}}

@techreport{Wyss99a,
  author = {Serge Wyssmann},
  title = {Design Resource Wizard Design},
  year = {1999},
  url = {http://scg.unibe.ch/archive/projects/Wyss99a.pdf},
  institution = {University of Bern},
  month = jul,
  type = {Informatikprojekt}}

@misc{X10,
  title = {Standard and Extended X10 Code Protocol},
  year = {1993},
  url = {http://software.x10.com/pub/manuals/xtdcode.pdf},
  key = {X10}}

@misc{XHTML1,
  author = {{W3C} Recommendation},
  title = {{XHTML} 1.0, The Extensible HyperText Markup Language},
  year = {1998},
  key = {XHTML1},
  note = {http://www.w3.org/TR/xhtml1}}

@techreport{XLink00a,
  author = {Steve DeRose and Eve Maler and David Orchard},
  title = {{XML} {Linking} {Language} ({XL}ink) Version 1.0 --- {W3C} Proposed Recommendation 20 December 2000},
  year = {2000},
  url = {http://www.w3.org/TR/2000/PR-xlink-20001220},
  institution = {World Wide Web Consortium},
  month = dec,
  number = {PR-xlink-20001220}}

@misc{XMI20,
  title = {XML Metadata Interchange (XMI), v2.0},
  year = {2005},
  key = {XMI 2.0},
  note = {http://www.omg.org/cgi-bin/doc?formal/05-05-01}}

@techreport{XMI98a,
  author = {{Object} {Management} {Group}},
  title = {{XML} {Metadata} {Interchange} ({XMI})},
  year = {1998},
  institution = {{Object} {Management} {Group}},
  month = feb,
  number = {ad/98-10-05}}

@techreport{XML98a,
  author = {Tim Bray and Jean Paoli and C. M. Sperberg-McQueen},
  title = {Extensible {Markup} {Language} ({XML}) 1.0 --- W3C Recommendation 10-February-1998},
  year = {1998},
  institution = {World Wide Web Consortium},
  month = feb,
  number = {REC-xml-19980210}}

@inproceedings{Xavi17a,
  author = {Xavier, Laerte and Brito, Aline and Hora, Andre and Valente, Marco Tulio},
  title = {Historical and impact analysis of {API} breaking changes: A large-scale study},
  booktitle = {International {C}onference on {S}oftware {A}nalysis, {E}volution and {R}eengineering ({SANER})},
  pages = {138--147},
  year = {2017},
  organization = {IEEE}}

@inproceedings{Xavi17b,
  author = {Xavier, Laerte and Hora, Andre and Valente, Marco Tulio},
  title = {Why do we break {API}s? first answers from developers},
  booktitle = {International {C}onference on {S}oftware {A}nalysis, {E}volution and {R}eengineering ({SANER})},
  pages = {392--396},
  year = {2017},
  organization = {IEEE}}

@inproceedings{Xeno00a,
  author = {M. Xenos and D. Stavrinoudis and K. Zikouli and D. Christodoulakis},
  title = {Object-Oriented Metrics --- a Survey},
  booktitle = {Proceedings of FESMA'00},
  year = {2000}}

@inproceedings{Xi19a,
  author = {Xi, Yaoguo and Shen, Liwei and Gui, Yukun and Zhao, Wenyun},
  title = {Migrating Deprecated {API} to Documented Replacement: Patterns and Tool},
  booktitle = {Proceedings of the 11th {A}sia-{P}acific {S}ymposium on {I}nternetware},
  pages = {1--10},
  year = {2019}}

@inproceedings{Xiao04a,
  author = {Xiao, Shu and Pham, Christopher},
  title = {Performing High Efficiency Source Code Static Analysis with Intelligent Extensions},
  booktitle = {Proceedings of the 11th Asia-Pacific Software Engineering Conference},
  pages = {346--355},
  publisher = {IEEE Computer Society},
  year = {2004},
  url = {http://dx.doi.org/10.1109/APSEC.2004.72},
  doi = {10.1109/APSEC.2004.72},
  acmid = {1032739},
  address = {Washington, DC, USA},
  isbn = {0-7695-2245-9},
  numpages = {10},
  series = {APSEC '04}}

@inproceedings{Xie02a,
  author = {Yichen Xie and Dawson Engler},
  title = {Using redundancies to find errors},
  booktitle = {Proceedings of the Tenth ACM SIGSOFT Symposium on Foundations of Software Engineering},
  pages = {51--60},
  publisher = {ACM Press},
  year = {2002},
  url = {citeseer.ist.psu.edu/xie02using.html},
  doi = {10.1145/587051.587060},
  isbn = {1-58113-514-9},
  location = {Charleston, South Carolina, USA}}

@inproceedings{Xie03a,
  author = {Tao Xie and David Notkin},
  title = {Tool-Assisted Unit Test Selection Based on Operational Violations},
  booktitle = {Proceedings of International Conference on Automated Software Engineering (ASE '03)},
  pages = {40--48},
  year = {2003},
  month = oct,
  organization = {IEEE}}

@inproceedings{Xie06a,
  author = {Xinrong Xie and Denys Poshyvanyk and Andrian Marcus},
  title = {Visualization of {CVS} Repository Information},
  booktitle = {{WCRE}'06: Proceedings of the 13th Working Conference on Reverse Engineering},
  pages = {231--242},
  publisher = {IEEE Computer Society},
  year = {2006},
  doi = {10.1109/{WCRE}.2006.55},
  address = {Washington, DC, USA},
  isbn = {0-7695-2719-1}}

@inproceedings{Xing04a,
  author = {Xing, Zhenchang and Stroulia, Eleni},
  title = {Data-mining in Support of Detecting Class Co-evolution},
  booktitle = {SEKE '04: Proceedings of the 16th International Conference on Software Engineering and Knowledge Engineering},
  pages = {123--128},
  publisher = {ACM Press},
  year = {2004},
  abstract = {In an evolving system maintained over a long time period, there exist
		many non-trivial relationships among system classes, such as class
		co-evolutions, which usually are not easily perceivable in the source
		code. However, unfortunately, the continuing evolution of large,
		long-lived systems leads to lost information about these hidden relationships.
		In this paper, we propose a method for recovering such lost knowledge
		by data mining method. This method relies on the UMLDiff algorithm
		that, given a sequence of UML class models of a system, surfaces
		the design-level changes over its life span, thus eliminating the
		need for high quality modification reports and nonintuitive software
		code-based metrics. We employ Apriori association rule mining algorithm to the transactional database of
		class modifications, which elicit previously unknown or undocumented
		co-evolving relations among two or more classes. The recovered knowledge
		facilitates the overall understanding of system evolution and the
		planning of future maintaining activities. We report on one real
		world case study evaluating our approach.},
  address = {New York NY},
  isbn = {1-891706-14-4},
  location = {Banff, Alberta, Canada},
  mon = jun}

@inproceedings{Xing04b,
  author = {Zhenchang Xing and Eleni Stroulia},
  title = {Understanding Phases and Styles of Object-Oriented Systems' Evolution},
  booktitle = {Proceedings 20th IEEE International Conference on Software Maintenance ({ICSM} '04)},
  pages = {242--251},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA},
  location = {Illinois, USA},
  mon = sep}

@inproceedings{Xing05a,
  author = {Xing, Zhenchang and Stroulia, Eleni},
  title = {UMLDiff: An Algorithm for Object-oriented Design Differencing},
  booktitle = {Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering},
  pages = {54--65},
  publisher = {ACM},
  year = {2005},
  url = {http://doi.acm.org/10.1145/1101908.1101919},
  doi = {10.1145/1101908.1101919},
  acmid = {1101919},
  address = {New York, NY, USA},
  isbn = {1-58113-993-4},
  keywords = {design differencing, design mentoring, design understanding, structural evolution},
  location = {Long Beach, CA, USA},
  numpages = {12},
  series = {ASE '05}}

@inproceedings{Xing06a,
  author={Xing, Zhenchang and Stroulia, Eleni},
  booktitle={2006 22nd IEEE International Conference on Software Maintenance},
  title={Refactoring Practice: How it is and How it Should be Supported - An Eclipse Case Study},
  year={2006},
  volume={},
  number={},
  pages={458-468},
  doi={10.1109/ICSM.2006.52}
}

@article{Xing07a,
  author = {Xing, ZhenchangandStroulia, Eleni},
  title = {{API}-evolution support with diff-catchup},
  journal = {IEEE Transactions on Software Engineering},
  volume = {33},
  pages = {818 - 836},
  year = {2007}}

@inproceedings{Xing23a,
  author={Chen, Xingchen and Wang, Baizhu and Jin, Ze and Feng, Yun and Li, Xianglong and Feng, Xincheng and Liu, Qixu},
  booktitle={2023 53rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
  title={Tabby: Automated Gadget Chain Detection for Java Deserialization Vulnerabilities},
  year={2023},
  pages={179-192},
  doi={10.1109/DSN58367.2023.00028}
}

@inproceedings{Xiny07a,
  author = {Xinyi Dong and Godfrey, M.W.},
  title = {System-level Usage Dependency Analysis of Object-Oriented Systems},
  booktitle = {{ICSM} 2007: IEEE International Conference on Software Maintenance},
  pages = {375--384},
  year = {2007},
  doi = {10.1109/ICSM.2007.4362650},
  isbn = {978-1-4244-1256-3},
  month = oct}

@manual{Xquer10a,
  author = {Boag, S. and Chamberlin, D. and Fern\`andez, M. F. and Florescu, D. and Robie, J. and Sim\'eon, J.},
  title = {{XQuery 1.0: An XML Query Language (Second Edition)}},
  year = {2010},
  url = {http://www.w3.org/TR/xquery/},
  key = {{XQuery}},
  month = {dec},
  organization = {{W3C}}}

@manual{Xquuf11a,
  author = {Robie, Jonathan and Chamberlin, Don and Dyck, Michael and Florescu, Daniela and Melton, Jim and Sim{\'e}on, J},
  title = {{XQuery Update Facility 1.0}},
  journal = {W3C Rec.},
  year = {2011},
  url = {http://www.w3.org/TR/xqupdate/},
  key = {{XQueryUF}},
  month = {mar},
  organization = {{W3C}}}

@inproceedings{Xu04a,
  author = {Xia Xu and Chung-Horng Lung and Maria Zaman and Anand Srinivasan},
  title = {Program Restructure through Clustering Technique},
  booktitle = {Proceedings of International Workshop on Source Code Analysis and Manipulation},
  pages = {75--84},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  location = {Chicago, IL},
  month = sep,
  organization = {IEEE}}

@inproceedings{Xu07a,
  author = {Guoqing Xu and Atanas Rountev and Yan Tang and Feng Qin},
  title = {Efficient checkpointing of java software using context-sensitive capture and replay},
  booktitle = {Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering (ESEC-FSE'07)},
  pages = {85--94},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1287624.1287638},
  address = {New York, NY, USA},
  isbn = {978-1-59593-811-4},
  location = {Dubrovnik, Croatia}}

@inproceedings{Xu07b,
  author = {Haiying Xu and Christopher J. F. Pickett and Clark Verbrugge},
  title = {Dynamic purity analysis for java programs},
  booktitle = {Workshop on Program analysis for software tools and engineering (PASTE '07)},
  pages = {75--82},
  publisher = {ACM},
  year = {2007},
  doi = {10.1145/1251535.1251548},
  address = {New York, NY, USA},
  isbn = {978-1-59593-595-3},
  location = {San Diego, California, USA}}

@inproceedings{Xu10a,
  author = {Xu, Guoqing and Mitchell, Nick and Arnold, Matthew and Rountev, Atanas and Sevitsky, Gary},
  title = {Software Bloat Analysis: Finding, Removing, and Preventing Performance Problems in Modern Large-scale Object-oriented Applications},
  booktitle = {Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research},
  pages = {421--426},
  publisher = {ACM},
  year = {2010},
  url = {http://doi.acm.org/10.1145/1882362.1882448},
  doi = {10.1145/1882362.1882448},
  acmid = {1882448},
  address = {New York, NY, USA},
  isbn = {978-1-4503-0427-6},
  keywords = {performance analysis, performance optimization, runtime bloat},
  location = {Santa Fe, New Mexico, USA},
  numpages = {6},
  series = {FoSER '10}}

@article{Xu13a,
  author = {Xu, Guoqing and Rountev, Atanas},
  title = {Precise Memory Leak Detection for Java Software Using Container Profiling},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  volume = {22},
  publisher = {Association for Computing Machinery},
  year = {2013},
  url = {https://doi.org/10.1145/2491509.2491511},
  doi = {10.1145/2491509.2491511},
  abstract = {A memory leak in a Java program occurs when object references that are no longer needed are unnecessarily maintained. Such leaks are difficult to detect because static analysis typically cannot precisely identify these redundant references, and existing dynamic leak detection tools track and report fine-grained information about individual objects, producing results that are usually hard to interpret and lack precision.In this article we introduce a novel container-based heap-tracking technique, based on the fact that many memory leaks in Java programs occur due to incorrect uses of containers, leading to containers that keep references to unused data entries. The novelty of the described work is twofold: (1) instead of tracking arbitrary objects and finding leaks by analyzing references to unused objects, the technique tracks only containers and directly identifies the source of the leak, and (2) the technique computes a confidence value for each container based on a combination of its memory consumption and its elements' staleness (time since last retrieval), while previous approaches do not consider such combined metrics. Our experimental results show that the reports generated by the proposed technique can be very precise: for two bugs reported by Sun, a known bug in SPECjbb 2000, and an example bug from IBM developerWorks, the top containers in the reports include the containers that leak memory.},
  address = {New York, NY, USA},
  articleno = {17},
  issn = {1049-331X},
  keywords = {Memory leaks, container profiling, leaking confidence},
  month = jul,
  number = {3},
  numpages = {28}}

@inproceedings{Xu17a,
  author = {X. Xu and I. Weber andM. Staples and L. Zhu and J. Bosch and L. Bass and C. Pautasso and P. Rimba},
  title = {A Taxonomy of Blockchain-Based Systems for Architecture Design},
  booktitle = {IEEE International Conference on Software Architecture (ICSA)},
  pages = {243--252},
  year = {2017},
  doi = {10.1109/ICSA.2017.33},
  keywords = {blockchain architecture}}

@inproceedings{Xu18a,
  author = {Xu, Luhang and Jia, Weixi and Dong, Wei and Li, Yongjun},
  title = {Automatic Exploit Generation for Buffer Overflow Vulnerabilities},
  booktitle = {2018 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)},
  pages = {463-468},
  year = {2018},
  doi = {10.1109/QRS-C.2018.00085}}

@inproceedings{Xu19a,
  author = {Xu, Hao and Wang, Qingsen and Song, Shuang and John, Lizy Kurian and Liu, Xu},
  title = {Can We Trust Profiling Results? Understanding and Fixing the Inaccuracy in Modern Profilers},
  booktitle = {Proceedings of the ACM International Conference on Supercomputing},
  pages = {284-295},
  publisher = {Association for Computing Machinery},
  year = {2019},
  url = {https://doi.org/10.1145/3330345.3330371},
  doi = {10.1145/3330345.3330371},
  abstract = {Profilers are an indispensable component in modern software stack of data centers and supercomputers. Profilers collect detailed performance data during program execution and guide code optimization across the entire software stack. The accuracy of the profiling result proves to be vital for one to effectively gain performance insights. Unfortunately, inaccuracy may arise due to measurement techniques or hardware limits, which can waste optimization efforts.However, there are few studies in evaluating the accuracy of modern profiling techniques. In this paper, we study performance monitoring units (PMU) based statistical sampling, one of the profiling techniques widely adopted by many state-of-the-art profilers. While PMU sampling based profilers are efficient in collecting performance data, they suffer from inaccurate instruction measurement due to the intrinsic limit in the PMU design. To understand and fix the instruction profiling inaccuracy, we propose a novel 3-step approach. First, we investigate multiple modern architectures and quantify the PMU instruction profiling inaccuracy in these architectures with mathematical modeling. Second, we design a systematic framework to evaluate the impact of PMU inaccuracy to the profiling results. Finally, we propose a software-based technique to rectify the measurement inaccuracy raised by PMU and demonstrate its effectiveness.},
  address = {New York, NY, USA},
  isbn = {9781450360791},
  keywords = {statistical sampling, call path profiling, accuracy, PMU},
  location = {Phoenix, Arizona},
  numpages = {12},
  series = {ICS '19}}

@inproceedings{Xu22a,
  author = {Bochen Xu and Eliot Moss and Stephen M. Blackburn},
  title = {Towards a Model Checking Framework for a New Collector Framework},
  booktitle = {Proc.\ MPLR},
  pages = {128--139},
  publisher = {ACM},
  year = {2022},
  doi = {10.1145/3546918.3546923}}

@inproceedings{Xue12a,
  author = {Xue J. and Shen D. and Nie T. andKou Y. and Yu G.},
  title = {A Transparent Approach for Database Schema Evolution Using View Mechanism},
  booktitle = {Web-Age Information Management. WAIM 2012},
  publisher = {Springer},
  year = {2012},
  editor = {Gao H. and Lim L. and Wang W. and Li C. and Chen L.},
  series = {Lecture Notes in Computer Science},
  volune = {7418}}

@inproceedings{Xues18a,
  author = {Peng, Xuesong and Pernici, Barbara and Vitali, Monica},
  title = {Virtual Machine Profiling for Analyzing Resource Usage of Applications},
  booktitle = {Services Computing -- SCC 2018},
  pages = {103-118},
  publisher = {Springer International Publishing},
  year = {2018},
  doi = {10.1007/978-3-319-94376-3_7},
  abstract = {From the cloud provider perspective, applications are usually black boxes hosted on Virtual Machines. Managing these black boxes without knowing anything about the features of the workload can generate inefficiencies in the performance. In fact, this information can be relevant to take deployment decisions which consist both in considering the interferences between applications with similar resources demands and predicting future peak demands avoiding performance degradation. Monitoring applications in cloud facilities and data centers is the only approach to manage and ensure the performance level of the hosted applications. This paper considers applications as black boxes and, using monitoring data analysis of the VMs on which applications are running, provides a methodology for building an application profile reflecting relevant behavioral features of a VM. This information is precious to lead deployment and adaptive decisions in data center management. The approach is validated on a real monitoring data set of an Italian data center.},
  address = {Cham},
  editor = {Ferreira, Jo{\~a}o Eduardo and Spanoudakis, George and Ma, Yutao and Zhang, Liang-Jie},
  isbn = {978-3-319-94376-3}}

@book{Yada09a,
  author = {Y{\=a}dava, Subh{\=a}sha Candra},
  title = {Introduction To Client Sever Computing},
  publisher = {New Age International},
  year = {2009}}

@inproceedings{Yahi96a,
  author = {Sihem Amer-Yahia and Lotfi Lakhal and Rosine Cicchetti and Jean Paul Bordat},
  title = {i{O2} --- An Algorithmic Method for Building Inheritance Graphs in Object Database Design},
  booktitle = {Proceedings of ER'96 (15th International Conference on Conceptual Modeling)},
  volume = {1157},
  pages = {422--437},
  publisher = {Springer-Verlag},
  year = {1996},
  series = {Lecture Notes in Computer Science}}

@inproceedings{Yam13a,
  author = {Yamashita, Aiko and Moonen, Leon},
  title = {Do developers care about code smells? An exploratory survey},
  booktitle = {2013 20th working conference on reverse engineering (WCRE)},
  pages = {242--251},
  year = {2013},
  organization = {IEEE}}

@techreport{Yama02a,
  author = {Tetsuo Yamamoto and Makoto Matsushita and Toshihiro Kamiya and Katsuro Inoue},
  title = {Measuring Similarity of Large Software Systems Based on Source Code Correspondence},
  year = {2002},
  url = {http://sel.ics.es.osaka-u.ac.jp/~lab-db/betuzuri/contents.en/369.html},
  institution = {Osaka University, Department of Information and Computer Scineces, IIP Lab},
  month = mar,
  number = {IIP-03-03-02}}

@article{Yama93a,
  author = {Seiichi Yamazaki and Kiyohiko Kajihara and Mitsutaka Ito and Ryuichi Yasuhara},
  title = {Object-Oriented Design of Telecommunication Software},
  journal = {IEEE Software (Special Issue on "Making O-O Work")},
  volume = {10},
  pages = {81--87},
  year = {1993},
  month = jan,
  number = {1}}

@incollection{Yama93b,
  author = {Kenishi Yamazaki and Yoshiji Amagai and Masaharu Yoshida and Ikuo Takeuchi},
  title = {{TAO}: an object orientation kernel},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {61--76},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {This paper proposes an object-oriented programming
language framework that deliberately separates
mechanism from policy. Mechanisms such as slot
access and message passing are designed to have a
natural semantics and to be efficient. Conventional
and controversial concepts such as class,
inheritance, and method combination, on the other
hand, are classified as policy, and are left open to
the user by providing so-called hook mechanisms. TAO
is a language conforming to this framework and has
only a few more than twenty primitives for
object-oriented programming. This paper also gives
examples illustrating how conventional concepts of
object-oriented programming can be implemented on
top of these primitives.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Yan04a,
  author = {Hong Yan and David Garlan and Bradley Schmerl and Jonathan Aldrich and Rick Kazman},
  title = {{DiscoTect}: A System for Discovering Architectures from Running Systems},
  booktitle = {International Conference on Software Engineering ({ICSE})},
  pages = {470--479},
  year = {2004}}

@article{Yan07a,
  author = {Ning Yan},
  title = {Build Your Mashup with Web Services},
  journal = {icws},
  volume = {0},
  pages = {xli},
  publisher = {IEEE Computer Society},
  year = {2007},
  doi = {10.1109/ICWS.2007.61},
  address = {Los Alamitos, CA, USA},
  isbn = {0-7695-2924-0}}

@inproceedings{Yang04a,
  author = {Yang, Ting and Hertz, Matthew and Berger, Emery D and Kaplan, Scott F and Moss, J Eliot B},
  title = {Automatic heap sizing: Taking real memory into account},
  booktitle = {Proceedings of the 4th international symposium on Memory management},
  pages = {61--72},
  year = {2004}}

@inproceedings{Yang06a,
  author = {Ting Yang and Emery D. Berger and Scott F. Kaplan and J. Eliot and B. Moss},
  title = {Cramm: Virtual memory support for garbage-collected applications},
  booktitle = {In USENIX Symposium on Operating Systems Design and Implementation},
  pages = {103--116},
  year = {2006}}

@inproceedings{Yang11a,
  author = {Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
  title = {Finding and {U}nderstanding {B}ugs in {C} {C}ompilers},
  booktitle = {Programming Language Design and Implementation},
  year = {2011},
  doi = {10.1145/1993498.1993532},
  isbn = {978-1-4503-0663-8},
  keywords = {automated testing, compiler defect, compiler testing, random program generation, random testing},
  location = {San Jose, California, USA},
  numpages = {12},
  series = {PLDI '11}}

@inproceedings{Yang11b,
  title={$\{$ORDER$\}$: Object $\{$centRic$\}$$\{$DEterministic$\}$ Replay for Java},
  author={Yang, Zhemin and Yang, Min and Xu, Lvcai and Chen, Haibo and Zang, Binyu},
  booktitle={2011 USENIX Annual Technical Conference (USENIX ATC 11)},
  year={2011}
}

@techreport{Yang89a,
  author = {Wuu Yang and Susan Horwitz and Thomas Reps},
  title = {Detecting Program Components with Equivalent Behaviors},
  year = {1989},
  url = {citeseer.ist.psu.edu/yang89detecting.html},
  institution = {University of Wisconsin--Madison},
  number = {CS-TR-1989-840}}

@article{Yang90a,
  author = {Yang, Wuu and Horwitz, Susan and Reps, Thomas},
  title = {A program integration algorithm that accommodates semantics-preserving transformations},
  journal = {SIGSOFT Softw. Eng. Notes},
  volume = {15},
  pages = {133--143},
  publisher = {ACM},
  year = {1990},
  doi = {/10.1145/99278.99290},
  address = {New York, NY, USA},
  date-added = {2009-10-21 11:30:52 +0200},
  date-modified = {2009-10-21 11:31:00 +0200},
  issn = {0163-5948},
  number = {6}}

@article{Yang91a,
  author = {Yang, Wuu},
  title = {Identifying syntactic differences between two programs},
  journal = {Software Practice \& Experience},
  volume = {21},
  pages = {739--755},
  publisher = {John Wiley \& Sons, Inc.},
  year = {1991},
  issn = {0038-0644},
  month = jun,
  number = {7}}

@article{Yang92a,
  author = {Yang, Wuu and Horwitz, Susan and Reps, Thomas},
  title = {A program integration algorithm that accommodates semantics-preserving transformations},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {1},
  pages = {310--354},
  publisher = {ACM},
  year = {1992},
  issn = {1049-331X},
  month = jul,
  number = {3}}

@article{Yang94a,
  author = {Yang, Wuu},
  title = {How to merge program texts},
  journal = {Journal of Systems and Software},
  volume = {27},
  pages = {129--135},
  publisher = {Elsevier Science Inc.},
  year = {1994},
  doi = {10.1016/0164-1212(94)90026-4},
  address = {New York, NY, USA},
  issn = {0164-1212},
  month = nov,
  number = {2}}

@inproceedings{Yano15a,
  author = {Yano, Keisuke and Matsuo, Akihiko},
  title = {Labeling feature-oriented software clusters for software visualization application},
  booktitle = {2015 Asia-Pacific Software Engineering Conference (APSEC)},
  pages = {354--361},
  year = {2015},
  organization = {IEEE}}

@inproceedings{Yase91a,
  author = {Rahim Yaseen and Stanley Y.W. Su and Herman Lam},
  title = {An Extensible Kernel Object Management System},
  booktitle = {Proceedings OOPSLA '91},
  volume = {26},
  pages = {247--263},
  year = {1991},
  month = nov}

@article{Yass99a,
  author = {Yassine, A. and Falkenburg, D. and Chelst, K.},
  title = {Engineering design management: an information structure approach},
  journal = {International Journal of Production Research},
  volume = {37},
  pages = {2957--2975},
  publisher = {Taylor \& Francis},
  year = {1999},
  number = {13}}

@inproceedings{Yasu92a,
  author = {Masahiro Yasugi and Satoshi Matsuoka and Akinori Yonezawa},
  title = {{ABCL}/onEM-4: {A} New Software/Hardware Architecture for Object-Oriented Concurrent Computing on an Extended Dataflow Supercomputer},
  booktitle = {Proceedings, ACM Supercomputing '92},
  year = {1992},
  url = {ftp://camille.is.s.u-tokyo.ac.jp/pub/papers/supercomputing92-abcl.ps.gz},
  address = {Washington D.C.}}

@article{Yasu95a,
  author = {Kazuki Yasumatsu and Norihisa Doi},
  title = {SPiCE: {A} System for Translating Smalltalk Programs Into a {C} Environment},
  journal = {{IEEE} Trans. Software Eng.},
  volume = 21,
  pages = {902--912},
  year = {1995},
  url = {https://doi.org/10.1109/32.473219},
  doi = {10.1109/32.473219},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl = {https://dblp.org/rec/bib/journals/tse/YasumatsuD95},
  number = 11,
  timestamp = {Wed, 17 May 2017 10:56:36 +0200}}

@inproceedings{Yau78,
  author = {Stephen S. Yau and J. S. Collofello and T. MacGregor},
  title = {Ripple effect analysis of software maintenance},
  booktitle = {The IEEE Computer Society's Second International Computer Software and Applications Conference},
  pages = {60--65},
  publisher = {IEEE Press},
  year = {1978},
  month = {nov}}

@article{YeFi05a,
  author = {Yunwen Ye and Gerhard Fischer},
  title = {Reuse-Conducive Development Environments},
  journal = {Autom. Softw. Eng.},
  volume = {12},
  pages = {199--235},
  year = {2005},
  url = {http://l3d.cs.colorado.edu/~gerhard/papers/J-ASE-final.pdf},
  doi = {10.1007/s10515-005-6206-x},
  number = {2}}

@article{Yee10a,
  author = {B. Yee and D. Sehr and G. Dardyk and J. B. Chen and R. Muth and T. Ormandy and S. Okasaka and N. Narula and N. Fullagar},
  title = {Native Client: a sandbox for portable, untrusted x86 native code},
  journal = {CACM},
  volume = {53},
  year = {2010},
  number = {1}}

@inproceedings{Yeh09a,
  author = {Yeh, Tom and Chang, Tsung-Hsiang and Miller, Robert C},
  title = {Sikuli: using GUI screenshots for search and automation},
  booktitle = {Proceedings of the 22nd annual ACM symposium on User interface software and technology},
  pages = {183--192},
  year = {2009},
  organization = {ACM}}

@inproceedings{Yeh97b,
  author = {A.S. Yeh and D.R. Harris and M.P. Chase},
  title = {Manipulating Recovered Software Architecture Views},
  booktitle = {Proceedings of International Conference Software Engineering (ICSE'97)},
  year = {1997}}

@inproceedings{Yell89a,
  author = {Phillip M. Yelland},
  title = {First Steps Towards Fully Abstract Semantics for Object-Oriented Languages},
  booktitle = {Proceedings ECOOP '89},
  pages = {347--364},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@inproceedings{Yell92a,
  author = {Phillip M. Yelland},
  title = {Experimental Classification Facilities for {Smalltalk}},
  booktitle = {Proceedings OOPSLA '92},
  volume = {27},
  pages = {235--246},
  year = {1992},
  month = oct}

@inproceedings{Yell94a,
  author = {Daniel M. Yellin and Robert E. Strom},
  title = {{Interfaces, Protocols, and the Semi-Automatic Construction of Software Adaptors}},
  booktitle = {Proceedings of OOPSLA '94},
  pages = {176--190},
  year = {1994},
  month = oct,
  organization = {ACM}}

@inproceedings{Yell95a,
  author = {F. Yellin},
  title = {Low level security in Java},
  booktitle = {International World Wide Web Conference},
  year = {1995}}

@article{Yell97a,
  author = {Daniel M. Yellin and Robert E. Strom},
  title = {Protocol Specifications and Component Adaptors},
  journal = {ACM Transactions on Programming Languages},
  volume = {19},
  pages = {292--333},
  year = {1997},
  doi = {10.1145/244795.244801},
  month = mar,
  number = {2}}

@article{Ying04,
  author = {Ying, Annie T. T. and Murphy, Gail C. and Ng, Raymond and Chu-Carroll, Mark C.},
  title = {Predicting Source Code Changes by Mining Change History},
  journal = {IEEE Transactions on Software Engineering},
  volume = {30},
  pages = {574--586},
  publisher = {IEEE Press},
  year = {2004},
  doi = {10.1109/TSE.2004.52},
  abstract = {Software developers are often faced with modification tasks that involve
	source which is spread across a code base. Some dependencies between
	source code, such as those between source code written in different
	languages, are difficult to determine using existing static and dynamic
	analyses. To augment existing analyses and to help developers identify
	relevant source code during a modification task, we have developed
	an approach that applies data mining techniques to determine change
	patterns{\'o}sets of files that were changed together frequently in the
	past{\'o}from the change history of the code base. Our hypothesis is
	that the change patterns can be used to recommend potentially relevant
	source code to a developer performing a modification task. We show
	that this approach can reveal valuable dependencies by applying the
	approach to the Eclipse and Mozilla open source projects and by evaluating
	the predictability and interestingness of the recommendations produced
	for actual modification tasks on these systems.},
  issn = {0098-5589},
  month = sep,
  number = {9}}

@article{Ying04a,
  author = {Annie Ying and Gail Murphy and Raymond Ng and Mark Chu-Carroll},
  title = {Predicting Source Code Changes by Mining Change History},
  journal = {Transactions on Software Engineering},
  volume = {30},
  pages = {573--586},
  year = {2004},
  number = {9}}

@inproceedings{Yinz15a,
  title={EdgeMiner: Automatically Detecting Implicit Control Flow Transitions through the Android Framework.},
  author={Cao, Yinzhi and Fratantonio, Yanick and Bianchi, Antonio and Egele, Manuel and Kruegel, Christopher and Vigna, Giovanni and Chen, Yan},
  booktitle={NDSS},
  year={2015}
}

@inproceedings{Yli14a,
  author = {Yli-Huumo, Jesse and Maglyas, Andrey and Smolander, Kari},
  title = {The sources and approaches to management of technical debt: a case study of two product lines in a middle-size finnish software company},
  booktitle = {Product-Focused Software Process Improvement: 15th International Conference, PROFES 2014, Helsinki, Finland, December 10-12, 2014. Proceedings 15},
  pages = {93--107},
  year = {2014},
  organization = {Springer}}

@inproceedings{Yode01a,
  author = {Joseph Yoder and Federico Balaguer and Ralph Johnson},
  title = {Architecture and Design of Adaptive Object Models},
  booktitle = {Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA '01)},
  pages = {50--60},
  year = {2001},
  doi = {10.1145/583960.583966}}

@inproceedings{Yode02a,
  author = {Joseph W. Yoder and Ralph Johnson},
  title = {The Adaptive Object Model Architectural Style},
  booktitle = {Proceeding of The Working IEEE/IFIP Conference on Software Architecture 2002 (WICSA3 '02)},
  year = {2002},
  month = aug}

@inproceedings{Yoko86a,
  author = {Yasuhiko Yokote and Mario Tokoro},
  title = {The Design and Implementation of {Concurrent}{Smalltalk}},
  booktitle = {Proceedings OOPSLA '86},
  volume = {21},
  pages = {331--340},
  year = {1986},
  month = nov}

@incollection{Yoko87a,
  author = {Yasuhiko Yokote and Mario Tokoro},
  title = {Concurrent Programming in {Concurrent}{Smalltalk}},
  booktitle = {Object-Oriented Concurrent Programming},
  pages = {129--158},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  editor = {A. Yonezawa and M. Tokoro}}

@inproceedings{Yoko87b,
  author = {Yasuhiko Yokote and Mario Tokoro},
  title = {Experience and Evolution of {Concurrent}{Smalltalk}},
  booktitle = {Proceedings OOPSLA '87},
  volume = {22},
  pages = {406--415},
  year = {1987},
  month = dec}

@inproceedings{Yoko89a,
  author = {Yasuhiko Yokote and Fumio Teraoka and Mario Tokoro},
  title = {A Reflective Architecture for an Object-Oriented Distributed Operating System},
  booktitle = {Proceedings ECOOP '89},
  pages = {89--106},
  publisher = {Cambridge University Press},
  year = {1989},
  misc = {July 10-14},
  address = {Nottingham},
  editor = {S. Cook},
  month = jul}

@book{Yoko90a,
  author = {Yasuhiko Yokote},
  title = {The Design and Implementation of {Concurrent}{Smalltalk}},
  volume = {21},
  publisher = {World Scientific},
  year = {1990},
  series = {World Scientific Series in Computer Science}}

@inproceedings{Yoko92a,
  author = {Yasuhiko Yokote},
  title = {The Apertos Reflective Operating System: The Concept and its Implementation},
  booktitle = {Proceedings OOPSLA '92},
  volume = {27},
  pages = {414--434},
  year = {1992},
  month = oct}

@incollection{Yoko93a,
  author = {Yasuhiko Yokote},
  title = {Kernel Structuring for Object-Oriented Operating Systems: The Apertos Approach},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {145--162},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {This paper addresses the issues faced when
constructing an operating system and its kernel with
object-oriented technology. We first propose
object/metaobject separation, a means of
constructing an object-oriented operating system and
its kernel. This method divides the implementing
system facilities and applications into two types:
objects and metaobjects. This paper presents the
concept of object/metaobject separation and
discusses why object/metaobject separation is
required in terms of limitations in the micro-kernel
and object-oriented technologies. We also discuss an
example of using object/metaobject separation as
implemented in Apertos. This paper then proposes
mechanisms which efficiently implement
object/metaobject separation. These are
characterized by meta-level context management, and
are implemented in the Apertos operating system.
Meta-level context management is designed to reduce
the overhead of control transfer between an object
and its metaspace. Here, metaobjects reflectors,
MetaCore, Context, and Activity are introduced to
represent the metahierarchy of an object's
execution. Finally, we present the evaluation
results of the Apertos implementation, and discuss
the relationship with previous work.},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Yone86a,
  author = {Akinori Yonezawa and Jean-Pierre Briot and Etsuya Shibayama},
  title = {Object-Oriented Concurrent Programming in {ABCL}/1},
  booktitle = {Proceedings OOPSLA '86},
  volume = {11(21)},
  pages = {258--268},
  year = {1986},
  month = nov}

@book{Yone87a,
  author = {Akinori Yonezawa and Mario Tokoro},
  title = {Object-Oriented Concurrent Programming},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  isbn = {0-262-24026-2}}

@incollection{Yone87b,
  author = {Akinori Yonezawa and Etsuya Shibayama and T. Takada and Yasuaki Honda},
  title = {Modelling and Programming in an Object-Oriented Concurrent Language {ABCL}/1},
  booktitle = {Object-Oriented Concurrent Programming},
  pages = {55--89},
  publisher = {MIT Press},
  year = {1987},
  address = {Cambridge, Mass.},
  editor = {A. Yonezawa and M. Tokoro}}

@book{Yone89a,
  title = {Concurrency: Theory, Language, and Architecture},
  volume = {491},
  publisher = {Springer-Verlag},
  year = {1989},
  address = {Oxford, UK},
  editor = {A. Yonezawa},
  isbn = {3-540-53932-8},
  month = sep,
  series = {LNCS}}

@article{Yoo12a,
  author = {Yoo, S. and Harman, M.},
  title = {{Regression Testing Minimization, Selection and Prioritization: A Survey}},
  journal = {Software Testing, Verification and Reliability},
  volume = {22},
  pages = {67--120},
  publisher = {John Wiley & Sons, Ltd},
  year = {2012},
  url = {http://dx.doi.org/10.1002/stvr.430},
  doi = {10.1002/stvr.430},
  issn = {1099-1689},
  keywords = {regression testing, test suite minimization, regression test selection, test case prioritization},
  number = {2}}

@incollection{Yoo93a,
  author = {Suk I. Yoo and Hai Jin Chang},
  title = {An Object-Oriented Query Model Supporting Views},
  booktitle = {Object Technologies for Advanced Software, First JSSST International Symposium},
  volume = {742},
  pages = {251--263},
  publisher = {Springer-Verlag},
  year = {1993},
  abstract = {This paper suggests an object-oriented query model.
The model is algebraically-closed and supports a
view mechanism. In the view mechanism, a view is
simply defined as a named query expression, and
queries issued against views can be translated into
equivalent queries against databases by means of the
query modification technique as used i relational
database systems, and a view makes it possible for
its user to see a subset of its base objects, a
subset of the methods of its base objects, or new
relationships created by combining two or more sets
of its base objects.},
  editor = {Nishio, S. and Yonezawa, A},
  month = nov,
  series = {Lecture Notes in Computer Science}}

@inproceedings{Yosh88a,
  author = {Nobuko Yoshida and Kouji Hino},
  title = {An Object-Oriented Framework of Pattern Recognition Systems},
  booktitle = {Proceedings OOPSLA '88},
  volume = {23},
  pages = {259--266},
  year = {1988},
  month = nov}

@phdthesis{Yosh90a,
  author = {Kaoru Yoshida},
  title = {A'{UM} --- {A} Stream-Based Concurrent Object-Oriented Programming Language},
  year = {1990},
  school = {Keio University},
  month = mar,
  type = {{Ph.D}. Thesis}}

@article{Youn38a,
  author = {Gale Young and Alston S. Householder},
  title = {Discussion of a set of points in term of their mutual distances},
  journal = {Psychometrika},
  volume = {3},
  pages = {19--22},
  publisher = {Sage Publication},
  year = {1938},
  number = {1}}

@inproceedings{Youn87a,
  author = {Robert L. Young},
  title = {An Object-Oriented Framework for Interactive Data Graphics},
  booktitle = {Proceedings OOPSLA '87},
  volume = {22},
  pages = {78--90},
  year = {1987},
  month = dec}

@inproceedings{Youn87b,
  author = {Young, M. and Tevanian, A. and Rashid, R. and Golub, D. and Eppinger, J.},
  title = {The duality of memory and communication in the implementation of a multiprocessor operating system},
  booktitle = {Proceedings of the eleventh ACM Symposium on Operating systems principles},
  pages = {63--76},
  publisher = {ACM},
  year = {1987},
  url = {http://doi.acm.org/10.1145/41457.37507},
  doi = {10.1145/41457.37507},
  acmid = {37507},
  address = {New York, NY, USA},
  isbn = {0-89791-242-X},
  location = {Austin, Texas, United States},
  numpages = {14},
  series = {SOSP '87}}

@book{Youn92a,
  author = {Douglas A. Young},
  title = {Object-Oriented Programming wih {C}++ and {OSF}/{MOTIF}},
  publisher = {MIT Press},
  year = {1992},
  isbn = {0-13-630252-1}}

@book{Your79a,
  author = {Edward Yourdon},
  title = {Classics in Software Engineering},
  publisher = {Yourdon Press},
  year = {1979}}

@book{Your79b,
  author = {E. Yourdon and L. Constantine},
  title = {Structured Design: Fundamentals of a Discipline of Computer Programs and System Design},
  publisher = {Yourdon Press/Prentice Hall},
  year = {1979}}

@book{Your93a,
  author = {Edward Yourdon},
  title = {Decline and fall of the American programmer},
  publisher = {Prentice-Hall, Inc. Upper Saddle River, NJ, USA 1992},
  year = {1993},
  keywords = {fortran}}

@book{Your97a,
  author = {Edward Yourdon},
  title = {Death March},
  publisher = {Prentice-Hall},
  year = {1997}}

@inproceedings{Yu01a,
  title={Hidden dependencies in program comprehension and change propagation},
  author={Yu, Zhifeng and Rajlich, V{\'a}clav},
  booktitle={Proceedings 9th International Workshop on Program Comprehension. IWPC 2001},
  pages={293--299},
  year={2001},
  organization={IEEE}
}

@inproceedings{Yu07a,
  author = {Dachuan Yu and Ajay Chander and Nayeem Islam and Igor Serikov},
  title = {JavaScript Instrumentation for Browser Security},
  booktitle = {Popl 2007},
  year = {2008},
  keywords = {security instrumentation}}

@inproceedings{YuGe20a,
  author = {Yu, Geoffrey X and Grossman, Tovi and Pekhimenko, Gennady},
  title = {Skyline: Interactive In-Editor Computational Performance Profiling for Deep Neural Network Training},
  booktitle = {Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology},
  pages = {126--139},
  year = {2020}}

@inproceedings{YuSe02a,
  author = {Yu-Seung Ma and Yong-Rae Kwon and Jeff Offutt},
  title = {Inter-Class Mutation Operators for Java},
  booktitle = {Proceedings of the 13th International Symposium on Software Reliability Engineering},
  pages = {352--363},
  publisher = {Annapolis MD},
  year = {2002},
  date-added = {2007-01-31 10:27:08 +0100},
  date-modified = {2007-01-31 10:27:08 +0100},
  month = {nov},
  organization = {EEE Computer Society Press}}

@article{YuSe04a,
  author = {Jeff Offut and Yu-Seung M and Yong-Rae Kwon},
  title = {An Experimental Mutation System for Java},
  journal = {ACM SIGSOFT Software Engineering Notes, Workshop on Empirical Research in Software Testing},
  volume = {29},
  pages = {1--4},
  year = {2004},
  date-added = {2007-01-31 10:27:08 +0100},
  date-modified = {2007-01-31 10:27:08 +0100},
  month = {sep},
  number = {5},
  read = {Yes}}
Xu22a

@article{YuSe05a,
  author = {Yu-Seung Ma and Jeff Offutt and Yong Rae Kwon},
  title = {MuJava : An Automated Class Mutation System},
  journal = {Journal of Software Testing, Verification and Reliability},
  volume = {15},
  pages = {97--133},
  year = {2005},
  url = {http://ise.gmu.edu/~offutt/mujava/},
  date-added = {2007-01-31 10:27:08 +0100},
  date-modified = {2007-01-31 10:27:08 +0100},
  month = {jun},
  number = {2}}

@article{Yuhn08a,
  author = {Shi, Yunhe and Casey, Kevin and Ertl, M. Anton and Gregg, David},
  title = {Virtual Machine Showdown: Stack versus Registers},
  journal = {ACM Trans. Archit. Code Optim.},
  volume = {4},
  publisher = {Association for Computing Machinery},
  year = {2008},
  url = {https://doi.org/10.1145/1328195.1328197},
  doi = {10.1145/1328195.1328197},
  abstract = {Virtual machines (VMs) enable the distribution of programs in an architecture-neutral format, which can easily be interpreted or compiled. A long-running question in the design of VMs is whether a stack architecture or register architecture can be implemented more efficiently with an interpreter. We extend existing work on comparing virtual stack and virtual register architectures in three ways. First, our translation from stack to register code and optimization are much more sophisticated. The result is that we eliminate an average of more than 46% of executed VM instructions, with the bytecode size of the register machine being only 26% larger than that of the corresponding stack one. Second, we present a fully functional virtual-register implementation of the Java virtual machine (JVM), which supports Intel, AMD64, PowerPC and Alpha processors. This register VM supports inline-threaded, direct-threaded, token-threaded, and switch dispatch. Third, we present experimental results on a range of additional optimizations such as register allocation and elimination of redundant heap loads. On the AMD64 architecture the register machine using switch dispatch achieves an average speedup of 1.48 over the corresponding stack machine. Even using the more efficient inline-threaded dispatch, the register VM achieves a speedup of 1.15 over the equivalent stack-based VM.},
  address = {New York, NY, USA},
  articleno = {2},
  issn = {1544-3566},
  keywords = {register architecture, virtual machine, Interpreter, stack architecture},
  month = {jan},
  number = {4},
  numpages = {36}}

@misc{ZOPE,
  title = {{Zope}},
  key = {ZOPE},
  note = {http://www.zope.org}}

@manual{ZSLT99a,
  author = {{W3C}},
  title = {{XSL Transformations (XSLT) Version 1.0}},
  year = {1999},
  url = {http://www.w3.org/TR/xslt},
  key = {{XSLT}},
  month = {nov}}

@article{Zab21a,
  author = {Zabardast, Ehsan and Gonzalez-Huerta, Javier and Gorschek, Tony and {\v{S}}mite, Darja and Al{\'e}groth, Emil and Fagerholm, Fabian},
  title = {Asset Management Taxonomy: A Roadmap},
  journal = {arXiv preprint arXiv:2102.09884},
  year = {2021}}

@article{Zafe17a,
  author = {Zafeiris, Vassilis E. and Poulias, Sotiris H. and Diamantidis, N.A. and Giakoumakis, E.A.},
  title = {Automated refactoring of super-class method invocations to the Template Method design pattern},
  journal = {Information and Software Technology},
  volume = {82},
  pages = {19-35},
  year = {2017},
  url = {https://www.sciencedirect.com/science/article/pii/S0950584916301860},
  doi = {https://doi.org/10.1016/j.infsof.2016.09.008},
  issn = {0950-5849}}

@inproceedings{Zaid04a,
  author = {Andy Zaidman and Serge Demeyer},
  title = {Managing trace data volume through a heuristical clustering process based on event execution frequency},
  booktitle = {Proceedings IEEE European Conference on Software Maintenance and Reengineering (CSMR'04)},
  pages = {329--338},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA},
  month = mar}

@inproceedings{Zaid05a,
  author = {A. Zaidman and T. Calders and S. Demeyer and J. Paredaens},
  title = {Applying Webmining Techniques to Execution Traces to Support the Program Comprehension Process},
  booktitle = {Proceedings IEEE European Conference on Software Maintenance and Reengineering (CSMR'05)},
  pages = {134--142},
  publisher = {IEEE Computer Society Press},
  year = {2005},
  address = {Los Alamitos CA},
  location = {Manchester, United Kingdom}}

@inproceedings{Zaid05b,
  author = {A. Zaidman and S. Demeyer},
  title = {Mining ArgoUML with Dynamic Analysis to Establish a Set of Key Classes for Program Comprehension},
  booktitle = {Proceedings of the 5th International Workshop on Reverse Engineering (WOOR 2005)},
  year = {2005}}

@inproceedings{Zaid06a,
  author = {Andy Zaidman and Orla Greevy and Abdelwahab Hamou-Lhadj},
  title = {Workshop on Program Comprehension through Dynamic Analysis ({PCODA})},
  booktitle = {Proceedings of IEEE 13th Working Conference on Software Maintenance and Reengineering ({WCRE})},
  pages = {315--315},
  year = {2006},
  url = {http://www.lore.ua.ac.be/Events/PCODA2006/index.html http://www.lore.ua.ac.be/Events/PCODA2006/pcoda2006proceedings.pdf http://scg.unibe.ch/archive/papers/Zaid06a-pcoda2006proceedings.pdf},
  doi = {10.1109/{WCRE}.2006.45},
  medium = {2},
  month = oct}

@inproceedings{Zaid06b,
  author = {Andy Zaidman and Serge Demeyer and Bram Adams and Kris De Schutter and Ghislain Hoffman and Bernard De Ruyck},
  title = {Regaining Lost Knowledge through Dynamic Analysis and Aspect Orientation},
  booktitle = {Proceedings of the Conference on Software Maintenance and Reengineering (CSMR'06)},
  pages = {91--102},
  publisher = {IEEE Computer Society},
  year = {2006},
  address = {Washington, DC, USA},
  isbn = {0-7695-2536-9}}

@inproceedings{Zaid08a,
  author = {Andy Zaidman and Orla Greevy and Abdelwahab Hamou-Lhadj and David R\"othlisberger},
  title = {Workshop on Program Comprehension through Dynamic Analysis ({PCODA})},
  booktitle = {Proceedings of IEEE 15th Working Conference on Software Maintenance and Reengineering ({WCRE})},
  pages = {345--346},
  year = {2008},
  url = {http://swerl.tudelft.nl/bin/view/PCODA/PCODA2008 http://scg.unibe.ch/archive/papers/Zaid08a-pcoda2008proceedings.pdf},
  doi = {10.1109/{WCRE}.2008.21},
  medium = {2},
  month = oct}

@article{Zaid08b,
  author = {Zaidman, Andy and Demeyer, Serge},
  title = {Automatic identification of key classes in a software system using webmining techniques},
  journal = {Journal of Software Maintenance and Evolution: Research and Practice},
  volume = {20},
  pages = {387--417},
  year = {2008},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.370},
  doi = {10.1002/smr.370},
  abstract = {Software engineers new to a project are often stuck sorting through hundreds of classes in order to find those few classes that offer a significant insight into the inner workings of the software project. To help stimulate this process, we propose a technique that can identify the most important classes in a system or the key classes of that system. Software engineers can use these classes to focus their understanding efforts when starting to work on a new software project. Those key classes are typically characterized with having a lot of `control' within the application. In order to find these controlling classes, we present a detection approach that is based on dynamic coupling and webmining. We demonstrate the potential of our technique using two open-source software systems that have a rich documentation set. During the case studies we use dynamically gathered coupling information that vary between a number of coupling metrics. The case studies show that we are able to retrieve 90\% of the classes deemed important by the original maintainers of the systems, while maintaining a level of precision of around 50\%. Copyright {\copyright} 2008 John Wiley \& Sons, Ltd.},
  copyright = {Copyright {\copyright} 2008 John Wiley \& Sons, Ltd.},
  issn = {1532-0618},
  keywords = {dynamic analysis, program comprehension, coupling, webmining},
  language = {en},
  number = {6},
  urldate = {2019-03-22}}

@inproceedings{Zama12a,
  author = {Zaman, Shahed and Adams, Bram and Hassan, Ahmed E.},
  title = {A Qualitative Study on Performance Bugs},
  booktitle = {Proceedings of the 9th IEEE Working Conference on Mining Software Repositories},
  pages = {199-208},
  publisher = {IEEE Press},
  year = {2012},
  abstract = {Software performance is one of the important qualities that makes software stand out in a competitive market. However, in earlier work we found that performance bugs take more time to fix, need to be fixed by more experienced developers and require changes to more code than non-performance bugs. In order to be able to improve the resolution of performance bugs, a better understanding is needed of the current practice and shortcomings of reporting, reproducing, tracking and fixing performance bugs. This paper qualitatively studies a random sample of 400 performance and non-performance bug reports of Mozilla Firefox and Google Chrome across four dimensions (Impact, Context, Fix and Fix validation). We found that developers and users face problems in reproducing performance bugs and have to spend more time discussing performance bugs than other kinds of bugs. Sometimes performance regressions are tolerated as a trade-off to improve something else.},
  isbn = {9781467317610},
  keywords = {qualitative study, Mozilla Firefox, chromium, performance bugs},
  location = {Zurich, Switzerland},
  numpages = {10},
  series = {MSR '12}}

@inproceedings{Zamf11a,
  author = {Zamfir, Cristian and Altekar, Gautam and Candea, George},
  title = {Debug Determinism: The Sweet Spot for $\{$Replay-Based$\}$ Debugging},
  booktitle = {13th Workshop on Hot Topics in Operating Systems (HotOS XIII)},
  year = {2011}}

@phdthesis{Zara22a,
  author = {Pascal Zaragoza},
  title = {Model-Driven Software Migration of Legacy Applications to Micro-Services Architectures.},
  year = {2022},
  school = {Informatique Montpellier},
  abstract = {The shift towards cloud computing has promoted the development of new architectural styles to take advantage of its capabilities. Microservice-oriented architecture (MSA) is the latest style to have emerged. This architecture is organized around small services focused on specific business features, running in independent processes, and communicating through lightweight interfaces. These features, when paired with cloud computing and modern DevOps techniques, allow for easily-deployable, autonomous, and scalable applications. In contrast, legacy monolithic applications are characterized by their large codebase which is generally harder to maintain, deploy and scale. For these reasons, enterprises are eager to migrate their existing monoliths towards an MSA. Nonetheless, the process of rewriting an application from scratch using the new architecture is majorly undesirable, due to its costs and risks. These applications are implemented in varying languages and frameworks. Therefore, not only do companies seek to automate the migration process but also repeat the process across multiple applications. Thus, the need for a semi-automated, generic, and increasingly reusable migration process. The migration process is recognized to be complex and consequently risky and costly. Indeed, it requires understanding the monolith to extract the target microservice architecture. Furthermore, once the target architecture is identified, the source code of the existing application must be transformed to conform to the MSA. To tackle this need, we decompose the process into two research problems: (1) the identification of the target microservice-oriented architecture, and (2) the transformation of the source code towards valid microservice candidates. In this thesis, we propose an approach for each research problem, as well as a model-driven approach to guide the migration process from beginning to end. To validate our approach, we implemented MDE-Mono2Micro, a model driven tool, and applied it on an industrial case study.},
  annote = {PhD},
  institution = {LIRMM},
  keywords = {Model-Driven Micro-Service Software migration Cloud Reengineering}}

@inproceedings{Zayo00a,
  author = {Iyad Zayour and Timothy C. Lethbridge},
  title = {A Cognitive and User Centric Based Approach For Reverse Engineering Tool Design},
  booktitle = {Proceedings of the 2000 conference of the Centre for Advanced Studies on Collaborative research},
  year = {2000},
  month = nov}

@inproceedings{Zdon84a,
  author = {Stanley Zdonik},
  title = {Object Management System Concepts},
  booktitle = {Proceedings of the Second ACM SIGOA Conference},
  pages = {13--19},
  year = {1984}}

@article{Zdon85a,
  author = {Stanley Zdonik},
  title = {Object Management Systems for Design Environments},
  journal = {IEEE Database Engineering},
  volume = {8},
  pages = {23--30},
  year = {1985},
  month = dec,
  number = {4}}

@inproceedings{Zdon86a,
  author = {Stanley B. Zdonik},
  title = {Version Management in an Object-Oriented Database},
  booktitle = {IFIP WG2.4 International Workshop on Advanced Programming Environments},
  year = {1986},
  misc = {June 16-18},
  address = {Trondheim, Norway},
  month = jun}

@article{Zdon86b,
  author = {Stanley B. Zdonik},
  title = {Maintaining Consistency in a Database with Changing Types},
  journal = {ACM SIGPLAN Notices},
  volume = {21},
  pages = {120--127},
  year = {1986},
  month = oct,
  number = {10}}

@inproceedings{Zdon86c,
  author = {Stanley B. Zdonik},
  title = {Version Management in an Object-Oriented Database},
  booktitle = {Advanced Programming Environments, Proc of an Int Workshop},
  volume = {244},
  pages = {405--422},
  publisher = {Springer-Verlag},
  year = {1986},
  address = {Trondheim},
  editor = {R. Conradi and T.M. Didriksen and D.H. Wanvik},
  month = jun,
  series = {LNCS}}

@inproceedings{Zdun05a,
  author = {Zdun, Uwe and Avgeriou, Paris},
  title = {Modeling Architectural Patterns Using Architectural Primitives},
  booktitle = {20th Conference on Object-oriented Programming, Systems, Languages, and Applications},
  pages = {133--146},
  year = {2005}}

@incollection{Zehn03a,
  author = {Carl August Zehnder},
  title = {Wer sind denn diese Informatiker? Eine Ann\"aherung aus Schweizer Sicht},
  booktitle = {Digital Economy --- Anspruch und Wirklichkeit. Eine Festschrift f\"ur Beat Schmid},
  publisher = {Springer Verlag},
  year = {2003},
  address = {Heidelberg}}

@inproceedings{Zeid12a,
  author = {Zeidler, Clemens and M{\"u}ller, Johannes and Lutteroth, Christof and Weber, Gerald},
  title = {Comparing the usability of grid-bag and constraint-based layouts},
  booktitle = {Proceedings of the 24th Australian Computer-Human Interaction Conference},
  pages = {674--682},
  year = {2012},
  organization = {ACM}}

@inproceedings{Zeid94a,
  author = {Christian Zeidler and Bernhard Fank},
  title = {Integrating Structural and Operational Programming to Manage Distributed Systems},
  booktitle = {Proceedings of the ECOOP '93 Workshop on Object-Based Distributed Programming},
  volume = {791},
  pages = {55--72},
  publisher = {Springer-Verlag},
  year = {1994},
  abstract = {Distributed systems have become a buzz word, well
known but not well used, because of different
existing paradigms for programming languages,
systems, communication, coop eration, management,
and because of integraton problems. From the
programmer's point of view, the interesting question
is how one can solve a problem specification in a
distributed environment. Most of the existing
distributed programming environments concentrate on
two levels; First, the denotation of an operational
solution in a modularized way, and second,
description of an initial interconnection of these
modules into a distributed application, i.e.
configuration or structural programming. Both levels
are kept independent as far as possible, using
different notations and thus can not benefit from
each other because of their separation. This paper
introduces a model which integrates structural and
operational programming into a single paradigm. This
paradigm is based on object-orientation and
reflective programming extended by a category and
annotation model realizing structural programming
support.},
  editor = {Rachid Guerraoui and Oscar Nierstrasz and Michel Riveill},
  series = {LNCS}}

@article{Zele77a,
  author = {M. Zeleny},
  title = {Self-Organization of Living Systems: {A} Formal Model of Autopoiesis},
  journal = {nt. J. General Systems},
  volume = {4},
  pages = {13--28},
  year = {1977}}

@article{Zelk79a,
  author = {Marvin Zelkowitz},
  title = {{Surveyor's Forum}: The Real Costs of Software},
  journal = {j-COMP-SURV},
  volume = {11},
  pages = {69--69},
  year = {1979},
  coden = {CMSVAN},
  issn = {0010-4892},
  month = mar,
  number = {1}}

@book{Zelk79b,
  author = {Marvin Zelkowitz and Alan Shaw and John Gannon},
  title = {Principles of Software Engineering and Design},
  publisher = {Prentice Hall},
  year = {1979}}

@article{Zelk98a,
  author = {Marvin V. Zelkowitz and Dolores R. Wallace},
  title = {Experimental Models for Validating Technology},
  journal = {Computer},
  volume = {31},
  pages = {23--31},
  publisher = {IEEE Computer Society Press},
  year = {1998},
  doi = {10.1109/2.675630},
  address = {Los Alamitos, CA, USA},
  number = {5}}

@article{Zell01a,
  author = {Andreas Zeller},
  title = {Automated Debugging: Are We Close},
  journal = {Computer},
  volume = {34},
  pages = {26--31},
  publisher = {IEEE Computer Society},
  year = {2001},
  doi = {10.1109/2.963440},
  address = {Los Alamitos, CA, USA},
  issn = {0018-9162},
  number = {11}}

@article{Zell02a,
  author = {Andreas Zeller and Ralf Hildebrandt},
  title = {Simplifying and Isolating Failure-Inducing Input},
  journal = {IEEE Transactions on Software Engineering},
  volume = {SE-28},
  pages = {183--200},
  year = {2002},
  month = feb,
  number = {2}}

@inproceedings{Zell02b,
  author = {Andreas Zeller},
  title = {Isolating cause-effect chains from computer programs},
  booktitle = {SIGSOFT '02/FSE-10: Proceedings of the 10th ACM SIGSOFT symposium on Foundations of software engineering},
  pages = {1--10},
  publisher = {ACM Press},
  year = {2002},
  doi = {10.1145/587051.587053},
  address = {New York, NY, USA},
  isbn = {1-58113-514-9},
  location = {Charleston, South Carolina, USA}}

@inproceedings{Zell03a,
  author = {Andreas Zeller},
  title = {Program analysis: A hierarchy},
  booktitle = {Proceedings of the ICSE 2003 Workshop on Dynamic Analysis},
  pages = {6--9},
  year = {2003}}

@misc{Zell04,
  author = {Andreas Zeller},
  title = {DDD - Data Display Debugger},
  year = {2004},
  howpublished = {\url{http://www.gnu.org/software/ddd/manual/}}}

@book{Zell05a,
  author = {Andreas Zeller},
  title = {Why Programs Fail: A Guide to Systematic Debugging},
  publisher = {Morgan Kaufmann},
  year = {2005},
  isbn = {1558608664},
  month = oct}

@inproceedings{Zell05b,
  author = {Holger Cleve and Andreas Zeller},
  title = {Locating causes of program failures},
  booktitle = {ICSE '05: Proceedings of the 27th international conference on Software engineering},
  pages = {342--351},
  year = {2005},
  doi = {10.1145/1062455.1062522},
  isbn = {1-59593-963-2},
  location = {St. Louis, MO, USA}}

@book{Zell09a,
  author = {Zeller, Andreas},
  title = {Why programs fail: a guide to systematic debugging},
  publisher = {Elsevier},
  year = {2009}}

@incollection{Zell13a,
  author = {Zeller, Andreas},
  title = {Can We Trust Software Repositories?},
  booktitle = {Perspectives on the Future of Software Engineering},
  pages = {209-215},
  publisher = {Springer Berlin Heidelberg},
  year = {2013},
  doi = {10.1007/978-3-642-37395-4_14},
  editor = {M\"{u}nch, J\"{u}rgen and Schmid, Klaus},
  isbn = {978-3-642-37394-7}}

@article{Zell96a,
  author = {Andreas Zeller and Dorothea L\"{u}tkehaus},
  title = {{DDD} --- a free graphical front-end for {U}nix debuggers},
  journal = {SIGPLAN Notices},
  volume = {31},
  pages = {22--27},
  publisher = {ACM Press},
  year = {1996},
  doi = {10.1145/249094.249108},
  address = {New York, NY, USA},
  issn = {0362-1340},
  number = {1}}

@article{Zell97a,
  author = {Andreas Zeller and Gregor Snelting},
  title = {Unified Versioning through Feature Logic},
  journal = {ACM Transactions of Software Engineering and Methodology},
  volume = {6},
  pages = {397--440},
  year = {1997},
  month = oct,
  number = {4}}

@inproceedings{Zell99a,
  author = {Andreas Zeller},
  title = {Yesterday, my program worked. Today, it does not. Why?},
  booktitle = {ESEC/FSE-7: Proceedings of the 7th European software engineering conference held jointly with the 7th ACM SIGSOFT international symposium on Foundations of software engineering},
  pages = {253--267},
  publisher = {Springer-Verlag},
  year = {1999},
  doi = {10.1145/318773.318946},
  address = {London, UK},
  isbn = {3-540-66538-2},
  location = {Toulouse, France}}

@inproceedings{Zend06a,
  author = {Olivier Zendra},
  title = {Memory and compiler optimizations for low-power and -energy},
  booktitle = {Workshop on Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems (ICOOOPLPS'06), co-located with ECOOP'06},
  year = {2006},
  month = jul}

@inproceedings{Zeng02a,
  author = {Matthias Zenger},
  title = {Type-Safe Prototype-Based Component Evolution},
  booktitle = {Proceedings ECOOP 2002},
  volume = 2374,
  pages = {470--497},
  publisher = {Springer Verlag},
  year = {2002},
  url = {http://lampwww.epfl.ch/~zenger/research.html},
  address = {Malaga, Spain},
  month = jun,
  series = {LNCS}}

@inproceedings{Zeng02b,
  author = {Matthias Zenger},
  title = {Evolving Software with Extensible Modules},
  booktitle = {International Workshop on Unanticipated Software Evolution},
  year = {2002},
  url = {http://lampwww.epfl.ch/~zenger/research.html},
  address = {Malaga, Spain},
  month = jun}

@inproceedings{Zeng03a,
  author = {Zeng, L. and Benatallah, B. and Dumas, M. Kalagnanam and J. and Sheng, Q. Z.},
  title = {Quality driven web services composition},
  booktitle = {WWW},
  publisher = {ACM},
  year = {2003},
  month = jul}

@phdthesis{Zeng03b,
  author = {Matthias Zenger},
  title = {Programming Language Abstractions for Extensible Software Components},
  year = {2003},
  school = {University of Lausanne, EPFL}}

@inproceedings{Zhan02a,
  author = {Youtao Zhang and Rajiv Gupta},
  title = {Data compression transformations for dynamically allocated data structures},
  booktitle = {Proceedings of the 11th International Conference on Compiler Construction (CC'02)},
  volume = {2304},
  pages = {14--28},
  publisher = {Springer-Verlag},
  year = {2002},
  series = {LNCS}}

@inproceedings{Zhan04,
  author = {Zhang, Zhuopeng and Yang, Hongji},
  title = {Incubating services in legacy systems for architectural migration},
  booktitle = {11th Asia-Pacific Software Engineering Conference},
  pages = {196 to 203},
  year = {2004},
  organization = {IEEE}}

@inproceedings{Zhan08a,
  author = {Sai Zhang and Zhongxian Gu and Yu Lin and Jianjun Zhao},
  title = {Change Impact Analysis for AspectJ Programs},
  booktitle = {Proceedings of the 24th IEEE International Conference on Software Maintenance},
  pages = {87--96},
  publisher = {IEEE},
  year = {2008},
  series = {{ICSM}'08}}

@article{Zhan08b,
  author = {Zhang, Hongyu},
  title = {Exploring Regularity in Source Code: Software Science and {Zipf's} Law},
  journal = {Reverse Engineering, Working Conference on},
  volume = {0},
  pages = {101--110},
  publisher = {IEEE Computer Society},
  year = {2008},
  url = {http://dx.doi.org/10.1109/{WCRE}.2008.37},
  doi = {10.1109/{WCRE}.2008.37},
  address = {Los Alamitos, CA, USA},
  issn = {1095-1350},
  posted-at = {2009-07-01 20:15:22},
  priority = {0}}

@inproceedings{Zhan08c,
  author = {Zhang, Bo and Bao, Liang and Zhou, Rumin and Hu, Shengming and Chen, Ping},
  title = {A black-box strategy to migrate GUI-based legacy systems to web services},
  booktitle = {2008 IEEE International Symposium on Service-Oriented System Engineering},
  pages = {25--31},
  year = {2008},
  organization = {IEEE}}

@inproceedings{Zhan09a,
  author = {Zhang, D. and Duala-Ekoko, E. and Hendren, L.},
  title = {Impact Analysis and Visualization Toolkit for Static Crosscutting in AspectJ},
  booktitle = {International Conference on Program Comprehension ({ICPC})},
  year = {2009}}

@inproceedings{Zhan10a,
  author = {Zhang, Cheng and Yan, Dacong and Zhao, Jianjun and Chen Yuting and Yang, Shengqian},
  title = {BPGen: An Automated Breakpoint Generator for Debugging},
  booktitle = {ICSE '10},
  year = {2010}}

@inproceedings{Zhan10b,
  author = {Zhang, Huaxi and Urtado, Christelle and Vauttier, Sylvain},
  title = {Architecture-centric component-based development needs a three-level ADL},
  booktitle = {Software Architecture: 4th European Conference, ECSA 2010, Copenhagen, Denmark, August 23-26, 2010. Proceedings 4},
  pages = {295--310},
  year = {2010},
  organization = {Springer}}

@article{Zhan13a,
  author = {Zhang, Cheng and Yang, Juyuan and Yan, Dacong and Yang, Shengqian and Chen, Yuting},
  title = {Automated Breakpoint Generator for Debugging},
  journal = {Journal of Software},
  volume = {8},
  year = {2013},
  url = {http://dacongy.github.io/papers/zhang-jsw13.pdf},
  number = {3}}

@inproceedings{Zhan15a,
  author = {Tianyi Zhang and Myoungkyu Song and Joseph Pinedo and Miryung Kim},
  title = {Interactive Code Review for Systematic Changes},
  booktitle = {37th International Conference on Software Engineering},
  pages = {1--12},
  year = {2015}}

@article{Zhan94a,
  author = {Kaizhong Zhang and Dennis Shasha and Jason L. Wang},
  title = {Approximate Tree Matching in the Presence of Variable Length Don't Cares},
  journal = {Journal of Algorithms},
  volume = 16,
  pages = {33--66},
  year = {1994},
  month = jan,
  number = 1}

@inproceedings{Zhao03a,
  author = {Tian Zhao and Jens Palsberg and Jan Vitek},
  title = {Lightweight confinement for featherweight {Java}},
  booktitle = {Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA'03)},
  pages = {135--148},
  publisher = {ACM Press},
  year = {2003},
  url = {http://www.cs.purdue.edu/homes/jv/pubs/oopsla03.pdf},
  doi = {10.1145/949305.949318},
  address = {New York, NY, USA},
  isbn = {1-58113-712-5},
  location = {Anaheim, California, USA}}

@inproceedings{Zhao04a,
  author = {Tian Zhao and James Noble and Jan Vitek},
  title = {Scoped Types for Real-Time {Java}},
  booktitle = {RTSS '04: Proceedings of the 25th IEEE International Real-Time Systems Symposium (RTSS'04)},
  pages = {241--251},
  publisher = {IEEE Computer Society},
  year = {2004},
  url = {http://jiangxi.cs.uwm.edu/publication/drafts/scoped04.pdf http://jiangxi.cs.uwm.edu/publication/rtss04.pdf},
  doi = {10.1109/REAL.2004.51},
  address = {Washington, DC, USA},
  isbn = {0-7695-2247-5}}

@inproceedings{Zhao12b,
  author = {Zhao, Jianzhou and Nagarakatte, Santosh and Martin, Milo M.K. and Zdancewic, Steve},
  title = {Formalizing the LLVM Intermediate Representation for Verified Program Transformations},
  booktitle = {Principles of Programming Languages},
  year = {2012},
  doi = {10.1145/2103656.2103709},
  keywords = {Coq, LLVM, memory safety},
  location = {Philadelphia, PA, USA},
  numpages = {14},
  series = {POPL '12}}

@inproceedings{Zhao12c,
  author = {Zhao, Haiping and Proctor, Iain and Yang, Minghui and Qi, Xin and Williams, Mark and Gao, Qi and Ottoni, Guilherme and Paroski, Andrew and MacVicar, Scott and Evans, Jason and Tu, Stephen},
  title = {The HipHop Compiler for PHP},
  booktitle = {Object-Oriented Programming Systems Languages and Applications},
  pages = {575--586},
  year = {2012},
  address = {New York, NY, USA},
  keywords = {C++, PHP, compilation, dynamic languages},
  location = {Tucson, Arizona, USA},
  numpages = {12},
  series = {OOPSLA '12}}

@inproceedings{Zhao22a,
  author = {Zhao, Yingquan and Wang, Zan and Chen, Junjie and Liu, Mengdi and Wu, Mingyuan and Zhang, Yuqun and Zhang, Lingming},
  title = {{History-Driven Test Program Synthesis for JVM Testing}},
  booktitle = {Proceedings of the 44th International Conference on Software Engineering},
  pages = {1133-1144},
  publisher = {Association for Computing Machinery},
  year = {2022},
  url = {https://doi.org/10.1145/3510003.3510059},
  doi = {10.1145/3510003.3510059},
  abstract = {Java Virtual Machine (JVM) provides the runtime environment for Java programs, which allows Java to be "write once, run anywhere". JVM plays a decisive role in the correctness of all Java programs running on it. Therefore, ensuring the correctness and robustness of JVM implementations is essential for Java programs. To date, various techniques have been proposed to expose JVM bugs via generating potential bug-revealing test programs. However, the diversity and effectiveness of test programs generated by existing research are far from enough since they mainly focus on minor syntactic/semantic mutations. In this paper, we propose JavaTailor, the first history-driven test program synthesis technique, which synthesizes diverse test programs by weaving the ingredients extracted from JVM historical bug-revealing test programs into seed programs for covering more JVM behaviors/paths. More specifically, JavaTailor first extracts five types of code ingredients from the historical bug-revealing test programs. Then, to synthesize diverse test programs, it iteratively inserts the extracted ingredients into the seed programs and strengthens their interactions via introducing extra data dependencies between them. Finally, JavaTailor employs these synthesized test programs to differentially test JVMs. Our experimental results on popular JVM implementations (i.e., HotSpot and OpenJ9) show that JavaTailor outperforms the state-of-the-art technique in generating more diverse and effective test programs, e.g., test programs generated by JavaTailor can achieve higher JVM code coverage and detect many more unique inconsistencies than the state-of-the-art technique. Furthermore, JavaTailor has detected 10 previously unknown bugs, 6 of which have been confirmed/fixed by developers.},
  address = {New York, NY, USA},
  isbn = {9781450392211},
  keywords = {program synthesis, JVM testing, compiler testing, Java virtual machine},
  location = {Pittsburgh, Pennsylvania},
  numpages = {12},
  series = {ICSE '22}}

@article{Zhen06a,
  author = {Zheng, Jiang and Williams, Laurie and Nagappan, Nachiappan and Snipes, Will and Hudepohl, John P. and Vouk, Mladen A.},
  title = {On the Value of Static Analysis for Fault Detection in Software},
  journal = {Transactions on Software Engineering},
  volume = {32},
  pages = {240--253},
  publisher = {IEEE Press},
  year = {2006},
  month = {apr},
  number = {4}}

@inproceedings{Zhen07a,
  author = {Zheng, J. and Williams, L. and Robinson, B. and Smiley, K.},
  title = {{Regression Test Selection for Black-box Dynamic Link Library Components}},
  booktitle = {Incorporating COTS Software into Software Systems: Tools and Techniques, 2007. IWICSS '07. Second International Workshop on},
  pages = {9-9},
  year = {2007},
  doi = {10.1109/IWICSS.2007.8},
  keywords = {object-oriented programming;program diagnostics;program testing;software libraries;black-box dynamic link library component;commercial-off-the-shelf component;component change identification;regression test selection;static binary code analysis;Binary codes;Computer science;Costs;Documentation;Hardware;Software libraries;Software systems;Software testing;Software tools;System testing},
  month = {may}}

@inproceedings{Zhou07,
  author = {Zhou, Hong and Kang, Jian and Chen, Feng and Yang, Hongji},
  title = {OPTIMA: an ontology-based PlaTform-specIfic software migration approach},
  booktitle = {Seventh International Conference on Quality Software (QSIC 2007)},
  pages = {143--152},
  year = {2007},
  organization = {IEEE}}

@inproceedings{Zhou08a,
  author = {Tianlin Zhou and Baowen Xu and Liang Shi and Yuming Zhou and Lin Chen},
  title = {Measuring Package Cohesion Based on Context},
  booktitle = {IEEE International Workshop on Semantic Computing and Systems, 2008. WSCS '08.},
  pages = {127-132},
  year = {2008},
  doi = {10.1109/WSCS.2008.23}}

@article{Zhou99a,
  author = {Zhou, Lei and Rundensteiner, Elke A. and Shin, Kang G.},
  title = {Schema evolution of an Object-Oriented Real-Time Database System for Manufacturing Automation},
  journal = {Transactions on Knowlegde and Data Engineering},
  volume = 9,
  year = {1999}}

@inproceedings{Zhu09a,
  author = {Zhu, Angela Yun and Inoue, Jun and Peralta, Marisa Linnea and Taha, Walid and O'Malley, Marcia K. and Powell, Dane},
  title = {Implementing Haptic Feedback Environments from High-Level Descriptions},
  booktitle = {ICESS'09: Proceedings of the 6th International Conference on Embedded Software and Systems},
  pages = {482--489},
  publisher = {IEEE Computer Society},
  year = {2009},
  doi = {10.1109/ICESS.2009.90},
  address = {Washington, DC, USA},
  numpages = {8}}

@inproceedings{Zhu10a,
  author = {Y. Zhu and E. Westbrook and J. Inoue and A. Chapoutot and C. Salama and M. Peralta and T. Martin and W. Taha and M. O'Malley and R. Cartwright and A. Ames and R. Bhattacharya},
  title = {Mathematical Equations as Executable Models of Mechnical Systems},
  booktitle = {ICCPS'10: Proceedings of the 1st International Conference on Cyber-Physical Systems},
  year = {2010}}

@inproceedings{Zhu22a,
  author = {Hanwen Zhu and Junyoung Jang and Xujie Si},
  title = {XCheck: a Simple, Effective and Extensible Bug Finder using micro-grammar},
  booktitle = {Proceedings of ICSE'22},
  year = {2022}}

@article{Zhu22b,
  author = {Zhu, Xiaogang and Wen, Sheng and Camtepe, Seyit and Xiang, Yang},
  title = {Fuzzing: A Survey for Roadmap},
  journal = {ACM Comput. Surv.},
  volume = {54},
  publisher = {Association for Computing Machinery},
  year = {2022},
  url = {https://doi.org/10.1145/3512345},
  doi = {10.1145/3512345},
  abstract = {Fuzz testing (fuzzing) has witnessed its prosperity in detecting security flaws recently. It generates a large number of test cases and monitors the executions for defects. Fuzzing has detected thousands of bugs and vulnerabilities in various applications. Although effective, there lacks systematic analysis of gaps faced by fuzzing. As a technique of defect detection, fuzzing is required to narrow down the gaps between the entire input space and the defect space. Without limitation on the generated inputs, the input space is infinite. However, defects are sparse in an application, which indicates that the defect space is much smaller than the entire input space. Besides, because fuzzing generates numerous test cases to repeatedly examine targets, it requires fuzzing to perform in an automatic manner. Due to the complexity of applications and defects, it is challenging to automatize the execution of diverse applications. In this article, we systematically review and analyze the gaps as well as their solutions, considering both breadth and depth. This survey can be a roadmap for both beginners and advanced developers to better understand fuzzing.},
  address = {New York, NY, USA},
  articleno = {230},
  issn = {0360-0300},
  issue_date = {January 2022},
  keywords = {input space, fuzzing theory, automation, security, Fuzz testing},
  month = {sep},
  number = {11s},
  numpages = {36}}

@article{Zhu87a,
  author = {Xinming Zhu and Herbert A. Simon},
  title = {Learning Mathematics From Examples and by Doing},
  journal = {Cognition and Instruction},
  volume = 4,
  pages = {137--166},
  year = {1987},
  month = jan,
  number = 3}

@article{Zica91a,
  author = {Zicari, Roberto},
  title = {Primitives for schema updates in an object-oriented database system: A proposal},
  journal = {Computer standards and interfaces},
  volume = 13,
  year = {1991}}

@inproceedings{Zimm03a,
  author = {Thomas Zimmermann and Stephan Diehl and Andreas Zeller},
  title = {How History Justifies System Architecture (or not)},
  booktitle = {6th International Workshop on Principles of Software Evolution (IWPSE 2003)},
  pages = {73--83},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  url = {http://www.st.cs.uni-sb.de/papers/iwpse2003/iwpse.pdf},
  address = {Los Alamitos CA}}

@inproceedings{Zimm04a,
  author = {Zimmermann, Thomas and Wei{\ss}gerber, Peter and Diehl, Stephan and Zeller, Andreas},
  title = {Mining Version Histories to Guide Software Changes},
  booktitle = {Proceedings of the 26th International Conference on Software Engineering},
  pages = {563--572},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  url = {http://www.st.cs.uni-sb.de/papers/icse2004/icse.pdf},
  abstract = {We apply data mining to version histories in order to guide programmers
	along related changes: {\`\i}Programmers who changed these functions also
	changed....{\^\i} Given a set of existing changes, the mined association
	rules 1) suggest and predict likely further changes, 2) show up item
	coupling that is undetectable by program analysis, and 3) can prevent
	errors due to incomplete changes. After an initial change, our ROSE
	prototype can correctly predict further locations to be changed;
	the best predictive power is obtained for changes to existing software.
	In our evaluation based on the history of eight popular open source
	projects, ROSE{\'\i}s topmost three suggestions contained a correct location
	with a likelihood of more than 70 percent.},
  isbn = {0-7695-2163-0},
  series = {ICSE'04}}

@inproceedings{Zimm04b,
  author = {Thomas Zimmermann and Peter Wei{\ss}gerber},
  title = {Preprocessing {CVS} Data for Fine-Grained Analysis},
  booktitle = {Proceedings of the 1st International Workshop on Mining Software Repositories},
  pages = {2--6},
  publisher = {IEEE Computer Society Press},
  year = {2004},
  address = {Los Alamitos CA},
  series = {MSR'04}}

@article{Zimm05a,
  author = {Thomas Zimmermann and Peter Wei{\ss}gerber and Stephan Diehl and Andreas Zeller},
  title = {Mining Version Histories to Guide Software Changes},
  journal = {IEEE Transactions on Software Engineering},
  volume = {31},
  pages = {429--445},
  year = {2005},
  month = jun,
  number = {6}}

@inproceedings{Zimm07a,
  author = {Thomas Zimmermann and Rahul Premraj and Andreas Zeller},
  title = {Predicting Defects for Eclipse},
  booktitle = {Proceedings of the Third International Workshop on Predictor Models in Software Engineering},
  year = {2007},
  abstract = {We have mapped defects from the bug database of
Eclipse (one of the largest open-source projects) to
source code locations. The resulting data set lists
the number of pre- and post-release defects for
every package and file in the Eclipse releases 2.0,
2.1, and 3.0. We additionally annotated the data
with common complexity metrics. All data is publicly
available and can serve as a benchmark for defect
prediction models.},
  address = {Minneapolis, MN},
  month = may,
  note = {To appear}}

@article{Zimm08a,
  author = {Thomas Zimmermann and Nachiappan Nagappan and Andreas Zeller},
  title = {Predicting bugs from history},
  journal = {Software Evolution},
  pages = {69--88},
  publisher = {Springer},
  year = {2008}}

@inproceedings{Zimm09a,
  author = {Zimmermann, Thomas and Nagappan, Nachiappan and Gall, Harald and Giger, Emanuel and Murphy, Brendan},
  title = {Cross-project defect prediction: a large scale experiment on data vs. domain vs. process},
  booktitle = {Proceedings of the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  pages = {91--100},
  year = {2009},
  abstract = {Prediction of software defects works well within projects as long as there is a sufficient amount of data available to train any models. However, this is rarely the case for new software projects and for many companies. So far, only a few have studies focused on transferring prediction models from one project to another. In this paper, we study cross-project defect prediction models on a large scale. For 12 real-world applications, we ran 622 cross-project predictions. Our results indicate that cross-project prediction is a serious challenge, i.e., simply using models from projects in the same domain or with the same process does not lead to accurate predictions. To help software engineers choose models wisely, we identified factors that do influence the success of cross-project predictions. We also derived decision trees that can provide early estimates for precision, recall, and accuracy before a prediction is attempted.},
  organization = {ACM}}

@book{Zimm22a,
  author = {Zimmermann, Olaf and Stocker, Mirko and L{\"u}bke, Daniel and Zdun, Uwe and Pautasso, Cesare},
  title = {Patterns for API Design: Simplifying Integration with Loosely Coupled Message Exchanges},
  publisher = {Addison-Wesley Professional},
  year = {2022},
  isbn = {9780137670109},
  series = {Addison-Wesley Signature Series (Vernon)}}

@techreport{Zimm84a,
  author = {H. Zimmermann and M. Guillemont and G. Morisset and J. Banino},
  title = {Chorus: {A} Communication and Processing Architecture for Distributed Systems},
  year = {1984},
  address = {Rocquencourt},
  institution = {INRIA},
  month = sep,
  number = {328},
  type = {Research report no.}}

@book{Zimm96a,
  author = {Chris Zimmermann (ed.)},
  title = {Advances in Object-Oriented Metalevel Architectures and Reflection},
  publisher = {CRC Press},
  year = {1996}}

@book{Zins06a,
  author = {William Zinsser},
  title = {On Writing Well: The Classic Guide to Writing Nonfiction},
  publisher = {B\&T},
  year = {2006},
  asin = {0060891548},
  description = {I strongly recommend reading this book, even if English is not your native language.},
  dewey = {808.042},
  ean = {9780060891541},
  edition = {Anniversary.},
  isbn = {0060891548}}

@book{Zipf49a,
  author = {George Kingsley Zipf},
  title = {Human Behavior and the Principle of Least Effort: An Introduction to Human Ecology},
  publisher = {Addison-Wesley Press Inc.},
  year = {1949},
  address = {Cambridge 42, MA, USA},
  notes = {Zipf's law},
  size = {573 pages}}

@inproceedings{Zirk18a,
  author = {Zirkelbach, Christian and Krause, Alexander and Hasselbring, Wilhelm},
  title = {On the Modernization of {ExplorViz} towards a Microservice Architecture},
  booktitle = {Combined Proceedings of the Workshops of the German Software Engineering Conference 2018},
  year = {2018},
  organization = {CEUR Workshop Proceedings}}

@article{Zloo77a,
  author = {M.M. Zloof},
  title = {Query-by-Example: {A} Database Language},
  journal = {IBM System Journal},
  volume = {16},
  pages = {324--343},
  year = {1977},
  number = {4}}

@inproceedings{Zloo80a,
  author = {M.M. Zloof},
  title = {A Language for Office and Business Automation},
  booktitle = {AFIPS Office Automation Conference Digest},
  year = {1980},
  address = {Atlanta, USA},
  month = mar}

@article{Zloo81a,
  author = {M.M. Zloof},
  title = {{QBE}/{OBE}: {A} Language for Office and Business Automation},
  journal = {IEEE Computer 14},
  pages = {13--22},
  year = {1981},
  month = may}

@article{Zloo82a,
  author = {M.M. Zloof},
  title = {Office-by-Example: {A} Business Language that Unifies Data and Word Processing and Electronic Mail},
  journal = {IBM System Journal},
  volume = {21},
  pages = {272--304},
  year = {1982},
  number = {3}}

@article{Zobe01a,
  author = {Justin Zobel and Steffen Heinz and Hugh E. Williams},
  title = {In-memory hash tables for accumulating text vocabularies},
  journal = {Inf. Process. Lett.},
  volume = {80},
  pages = {271--277},
  publisher = {Elsevier North-Holland, Inc.},
  year = {2001},
  doi = {10.1016/S0020-0190(01)00239-3},
  issn = {0020-0190},
  number = {6}}

@book{Zobe04a,
  author = {J. Zobel},
  title = {Writing for Computer Science},
  publisher = {Springer-Verlag},
  year = {2004},
  edition = {Second},
  isbn = {1-85233-802-4}}

@article{Zobe83a,
  author = {Z\"{o}bel, Dieter},
  title = {The Deadlock Problem: A Classifying Bibliography},
  journal = {SIGOPS Oper. Syst. Rev.},
  volume = {17},
  pages = {6 15},
  publisher = {Association for Computing Machinery},
  year = {1983},
  url = {https://doi.org/10.1145/850752.850753},
  doi = {10.1145/850752.850753},
  abstract = {The desire for a better utilisation of resources and an acceleration of computing introduced the concept of parallelism with all its difficulties. Soon the danger of eternal delays of processes was discovered and called deadlock. For almost twenty years a lot of publications have dealt with problems considering deadlocks or their environment.Here we want to give a classification of our collected publications. We do not claim that this collection is complete in any sense, but we hope to have found essential articles (underlined) for nearly all the different topics fitting under the title "Deadlock".This classification regards different aspects of the problem and cannot always be given unambigiously so that many publications are listed several times. We would appreciate to get knowledge of other interesting articles or textbooks to this theme.},
  address = {New York, NY, USA},
  issn = {0163 5980},
  month = oct,
  number = {4},
  numpages = {10}}

@article{Zobe98a,
  author = {Justin Zobel and Alistair Moffat},
  title = {Exploring the Similarity Space},
  journal = {ACM SIGIR Forum},
  volume = {32},
  pages = {18--34},
  year = {1998},
  number = {1}}

@inproceedings{Zoll12a,
  author = {Zoller, Christian and Schmolitzky, Axel},
  title = {Measuring Inappropriate Generosity with Access Modifiers in Java Systems},
  booktitle = {2012 Joint Conference of the 22nd International Workshop on Software Measurement and the 2012 Seventh International Conference on Software Process and Product Measurement},
  pages = {43-52},
  year = {2012},
  doi = {10.1109/IWSM-MENSURA.2012.15}}

@inproceedings{Zou01,
  author = {Zou, Ying and Kontogiannis, Kostas},
  title = {A framework for migrating procedural code to object-oriented platforms},
  booktitle = {Proceedings Eighth Asia-Pacific Software Engineering Conference},
  pages = {390 to 399},
  year = {2001},
  organization = {IEEE}}

@inproceedings{Zou03a,
  author = {Lijie Zou and Michael Godfrey},
  title = {Detecting Merging and Splitting using Origin Analysis},
  booktitle = {Proceedings 10th Working Conference on Reverse Engineering ({WCRE} '03)},
  pages = {146--154},
  publisher = {IEEE Computer Society Press},
  year = {2003},
  url = {http://plg.uwaterloo.ca/~migod/papers/},
  address = {Los Alamitos CA},
  month = nov}

@article{Zou05a,
  author = {Lijie Zou and Michael Godfrey},
  title = {Using Origin Analysis to Detect Merging and Splitting of Source Code Entities},
  journal = {IEEE Transactions on Software Engineering},
  volume = {31},
  pages = {166--181},
  publisher = {IEEE Press},
  year = {2005},
  doi = {10.1109/TSE.2005.28},
  address = {Piscataway, NJ, USA},
  issn = {0098-5589},
  number = {2}}

@inproceedings{Zou05b,
  author = {Zou, Ying},
  title = {Quality driven software migration of procedural code to object-oriented design},
  booktitle = {21st IEEE International Conference on Software Maintenance ({ICSM}'05)},
  pages = {709--713},
  year = {2005},
  organization = {IEEE}}

@article{Zucc07a,
  author = {Giovanni Lagorio and Elena Zucca},
  title = {Just: safe unknown types in Java-like languages},
  journal = {Journal of Object Technology},
  volume = {6},
  pages = {71 -- 100},
  year = {2007},
  month = feb,
  number = {2}}

@techreport{Zuer01a,
  author = {Martin Z\"urcher},
  title = {Training {IT} \& Operations},
  year = {2001},
  url = {http://scg.unibe.ch/archive/projects/Zuer01a.pdf},
  institution = {University of Bern},
  month = may,
  type = {Informatikprojekt}}

@book{Zull98a,
  author = {Heinz Zuellighoven},
  title = {Das objektorientierte Konstruktionshandbuch},
  publisher = {dpunkt Verlag},
  year = {1998}}

@mastersthesis{Zumk07a,
  author = {Pascal Zumkehr},
  title = {Changeboxes --- Modeling Change as a First-Class Entity},
  year = {2007},
  school = {University of Bern},
  url = {http://scg.unibe.ch/archive/masters/Zumk07a.pdf},
  abstract = {Software systems undergo continual change if they
want to remain useful over time. However, only
limited support for change is offered by current
programming languages and development environments.
Although various existing efforts try to cope with
change and exploit it for different applications, a
unifying approach to support software change is
missing. We propose Changeboxes as a generic
metamodel to represent change as a first-class
entity. Changeboxes encapsulate the semantics of a
change process as well as its effects and model the
entire change history of a software system.
Changeboxes capture changes at the level of the
runtime system and the integrated development
environment. They are able to record low-level
changes as well as complex transformations like
refactorings. Each Changebox provides a scope for
dynamic execution, whereas several ones can be
concurrently active and thus enable different views
of the same software artifact within a single
running system. Changeboxes can be arbitrarily
extended, which enables one to explore several
development trails simultaneously. Multiple
Changeboxes may be merged in order to combine their
changes depending on a customizable conflict
resolution strategy. Our proof-of-concept
implementation showed to have an acceptable
performance and was used to demonstrate the impact
of Changeboxes on various domains. We discuss the
advantages that Changeboxes entail for evolving
software systems and propose selected topics for
further research.},
  month = feb,
  type = {Master's thesis}}

@inproceedings{Zund96a,
  author = {A. Z{\"u}ndorf},
  title = {Graph pattern matching in PROGRES},
  booktitle = {Proc. Fifth Intl. Workshop on Graph Grammars and Their Application to Comp. Sci.},
  volume = {1073},
  pages = {454--468},
  publisher = {Springer},
  year = {1996},
  url = {http://citeseer.nj.nec.com/zundorf96graph.html}}

@techreport{Zurb03a,
  author = {Reto Zurbuchen},
  title = {Stroke Datenbank},
  year = {2003},
  url = {http://scg.unibe.ch/archive/projects/Zurb03a.pdf},
  institution = {University of Bern},
  month = aug,
  type = {Informatikprojekt}}

@book{Zuse90a,
  author = {Horst Zuse},
  title = {Software Complexity, Measures and Methods},
  publisher = {Walter De Gruyter},
  year = {1990}}

@book{Zwie89a,
  author = {J. Zwiers},
  title = {Compositionality, Concurrency and Partial Correctness},
  volume = {321},
  publisher = {Springer-Verlag},
  year = {1989},
  series = {LNCS}}

@misc{atom,
  title = {ATOM},
  author = {Github},
  howpublished = {\url{https://atom.io/}}
}

@misc{castleProxies,
  title = {Castle DynamicProxy Library},
  url = {http://www.castleproject.org/dynamicproxy/index.html},
  howpublished = {\url{http://www.castleproject.org/dynamicproxy/index.html}},
  key = {castleProxies}}

@misc{cglib,
  title = {cglib Code Generation Library},
  url = {http://cglib.sourceforge.net/},
  howpublished = {\url{http://cglib.sourceforge.net}},
  key = {cglib}}

@misc{chromeDevTools,
  title = {Chrome Dev Tools},
  author = {Google},
  howpublished = {\url{https://developer.chrome.com/devtools}}
}

@book{gdb03,
  author = {Richard Stallman, Roland Pesch, Stan Shebs},
  title = {Debugging with GDB},
  publisher = {Gnu Press},
  year = {2003}}

@misc{gdb04,
  author = {Julia Menapace, Jim Kingdon, David MacKenzie},
  title = {The "stabs" debug format},
  publisher = {Cygnus Support},
  year = {2004}}

@misc{gemstone,
  title = {Gemstone Object Server},
  url = {http://gemstone.com/products/gemstone},
  howpublished = {\url{http://gemstone.com/products/gemstone}},
  key = {gemstone}}

@misc{grasp,
  title = {Grasp},
  author = {Zahariev, George},
  howpublished = {\url{http://www.graspjs.com/}}
}

@misc{inCode,
  author = {inCode},
  title = {{inCode} --- Eclipse plugin for code analysis},
  year = {2009},
  url = {http://www.intooitus.com/inCode.html},
  key = {inCode},
  note = {http://www.intooitus.com/inCode.html}}

@misc{indicium,
  title = {Indicium: V8 runtime tracer tool},
  url = {https://v8.dev/blog/system-analyzer},
  howpublished = {\url{https://v8.dev/blog/system-analyzer}},
  key = {V8}}

@misc{java21,
  author = {The Java Tutorials},
  title = {Understanting Extension Class Loading},
  year = {2021},
  howpublished = {\url{https://docs.oracle.com/javase/tutorial/ext/basics/load.html}},
  note = {Accessed: 2021-02-24}}

@misc{javaDeprecate,
  title = {Oracle. How and When To Deprecate {API}s. Java SE Documentation},
  url = {https://docs.oracle.com/javase/7/docs/technotes/guides/javadoc/deprecation/deprecation.html},
  key = {javaDeprecate},
  note = {Accessed: 2021-04-19}}

@misc{javaProxies,
  title = {Oracle. Java Dynamic Proxies. The Java Platform 1.5 {API} Specification},
  url = {http://download.oracle.com/javase/1.5.0/docs/{API}/java/lang/reflect/Proxy.html},
  howpublished = {\url{hhttp://download.oracle.com/javase/1.5.0/docs/{API}/java/lang/reflect/Proxy.html}},
  key = {javaProxies}}

@misc{javaSerializer,
  title = {Java Serializer {API}},
  url = {http://java.sun.com/developer/technicalArticles/Programming/serialization/},
  howpublished = {\url{http://java.sun.com/developer/technicalArticles/Programming/serialization/}},
  key = {javaSerializer}}

@misc{jetBrainsDeprecated,
  author = {Vaclav Pech},
  title = {Handle deprecated code in your project. The MPS Blog},
  url = {https://blog.jetbrains.com/mps/2019/04/handle-deprecated-code-in-your-project/},
  key = {jetBrainsDeprecated},
  note = {Accessed: 2021-04-19}}

@misc{linfuProxies,
  title = {LinFu Proxies Framework},
  url = {http://www.codeproject.com/KB/cs/LinFuPart1.aspx},
  howpublished = {\url{http://www.codeproject.com/KB/cs/LinFuPart1.aspx}},
  key = {linfuProxies}}

@inproceedings{mira16a,
  author = {Miraglia, Armando and Vogt, Dirk and Bos, Herbert and Tanenbaum, Andy and Giuffrida, Cristiano},
  title = {Peeking into the past: Efficient checkpoint-assisted time-traveling debugging},
  booktitle = {Proceedings of International Symposium on Software Reliability Engineering (ISSRE)},
  pages = {455--466},
  year = {2016},
  organization = {IEEE}}

@misc{netCLR,
  title = {.NET Common Language Runtime (CLR) overview},
  url = {https://docs.microsoft.com/en-us/dotnet/standard/clr},
  howpublished = {\url{https://docs.microsoft.com/en-us/dotnet/standard/clr}},
  key = {netCLR}}

@misc{nodemon,
  title = {Nodemon},
  author = {Sharp, Remy},
  howpublished = {\url{https://github.com/remy/nodemon}}
}

@misc{polymath,
  title = {PolyMath: Scientific Computing with Pharo},
  url = {https://github.com/PolyMathOrg/PolyMath},
  howpublished = {https://github.com/PolyMathOrg/PolyMath},
  key = {polymath}}

@misc{visualvm,
  title = {VisualVM: All-in-One Java Troubleshooting Tool},
  url = {https://visualvm.github.io/},
  howpublished = {\url{https://visualvm.github.io/}},
  key = {java}}

@manual{xslt99a,
  author = {{W3C}},
  title = {{XSL Transformations (XSLT) Version 1.0}},
  year = {1999},
  url = {http://www.w3.org/TR/xslt},
  key = {{XSLT}},
  month = nov}
